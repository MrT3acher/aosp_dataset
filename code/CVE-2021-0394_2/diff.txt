diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/0-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/0-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/0-cfg.dot	2023-06-07 19:34:21.767390859 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/0-cfg.dot	2023-06-07 19:34:28.327390248 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_3" {  
-"3" [label = <(METHOD,anonymous_lambda_3)<SUB>92</SUB>> ]
-"5" [label = <(METHOD_RETURN,ANY)<SUB>92</SUB>> ]
+"3" [label = <(METHOD,anonymous_lambda_3)<SUB>91</SUB>> ]
+"5" [label = <(METHOD_RETURN,ANY)<SUB>91</SUB>> ]
   "3" -> "5" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/1-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/1-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/1-cfg.dot	2023-06-07 19:34:21.767390859 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/1-cfg.dot	2023-06-07 19:34:28.327390248 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_4" {  
-"8" [label = <(METHOD,anonymous_lambda_4)<SUB>1787</SUB>> ]
-"12" [label = <(METHOD_RETURN,ANY)<SUB>1787</SUB>> ]
+"8" [label = <(METHOD,anonymous_lambda_4)<SUB>1785</SUB>> ]
+"12" [label = <(METHOD_RETURN,ANY)<SUB>1785</SUB>> ]
   "8" -> "12" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/10-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/10-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/10-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/10-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,5 +1,5 @@
 digraph "FindMethodID" {  
-"321" [label = <(METHOD,FindMethodID)<SUB>217</SUB>> ]
-"328" [label = <(METHOD_RETURN,jmethodID)<SUB>217</SUB>> ]
+"321" [label = <(METHOD,FindMethodID)<SUB>216</SUB>> ]
+"328" [label = <(METHOD_RETURN,jmethodID)<SUB>216</SUB>> ]
   "321" -> "328" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/100-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/100-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/100-cfg.dot	2023-06-07 19:34:22.097390830 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/100-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,31 +1,31 @@
 digraph "CallNonvirtualLongMethod" {  
-"5381" [label = <(va_start,va_start(ap, mid))<SUB>1195</SUB>> ]
-"5384" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1196</SUB>> ]
-"5402" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1197</SUB>> ]
-"5421" [label = <(soa,soa(env))<SUB>1198</SUB>> ]
-"5424" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1199</SUB>> ]
-"5430" [label = <(va_end,va_end(ap))<SUB>1200</SUB>> ]
-"5432" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1201</SUB>> ]
-"5425" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1199</SUB>> ]
-"5433" [label = <(GetJ,result.GetJ())<SUB>1201</SUB>> ]
-"5434" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1201</SUB>> ]
-"5388" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1196</SUB>> ]
-"5406" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1197</SUB>> ]
-"5436" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1201</SUB>> ]
-"5389" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1196</SUB>> ]
-"5393" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1196</SUB>> ]
-"5400" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1196</SUB>> ]
-"5407" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1197</SUB>> ]
-"5411" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1197</SUB>> ]
-"5418" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1197</SUB>> ]
-"5394" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1196</SUB>> ]
-"5412" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1197</SUB>> ]
-"5395" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1196</SUB>> ]
-"5397" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1196</SUB>> ]
-"5413" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1197</SUB>> ]
-"5415" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1197</SUB>> ]
-"5374" [label = <(METHOD,CallNonvirtualLongMethod)<SUB>1193</SUB>> ]
-"5437" [label = <(METHOD_RETURN,jlong)<SUB>1193</SUB>> ]
+"5381" [label = <(va_start,va_start(ap, mid))<SUB>1194</SUB>> ]
+"5384" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1195</SUB>> ]
+"5402" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1196</SUB>> ]
+"5421" [label = <(soa,soa(env))<SUB>1197</SUB>> ]
+"5424" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1198</SUB>> ]
+"5430" [label = <(va_end,va_end(ap))<SUB>1199</SUB>> ]
+"5432" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1200</SUB>> ]
+"5425" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1198</SUB>> ]
+"5433" [label = <(GetJ,result.GetJ())<SUB>1200</SUB>> ]
+"5434" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1200</SUB>> ]
+"5388" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1195</SUB>> ]
+"5406" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1196</SUB>> ]
+"5436" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1200</SUB>> ]
+"5389" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1195</SUB>> ]
+"5393" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1195</SUB>> ]
+"5400" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1195</SUB>> ]
+"5407" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1196</SUB>> ]
+"5411" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1196</SUB>> ]
+"5418" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1196</SUB>> ]
+"5394" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1195</SUB>> ]
+"5412" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1196</SUB>> ]
+"5395" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1195</SUB>> ]
+"5397" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1195</SUB>> ]
+"5413" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1196</SUB>> ]
+"5415" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1196</SUB>> ]
+"5374" [label = <(METHOD,CallNonvirtualLongMethod)<SUB>1192</SUB>> ]
+"5437" [label = <(METHOD_RETURN,jlong)<SUB>1192</SUB>> ]
   "5381" -> "5384" 
   "5384" -> "5389" 
   "5384" -> "5402" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/101-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/101-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/101-cfg.dot	2023-06-07 19:34:22.097390830 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/101-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualLongMethodV" {  
-"5446" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1206</SUB>> ]
-"5464" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1207</SUB>> ]
-"5483" [label = <(soa,soa(env))<SUB>1208</SUB>> ]
-"5485" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1209</SUB>> ]
-"5486" [label = <(GetJ,InvokeWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1209</SUB>> ]
-"5487" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1209</SUB>> ]
-"5450" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1206</SUB>> ]
-"5468" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1207</SUB>> ]
-"5488" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1209</SUB>> ]
-"5493" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1209</SUB>> ]
-"5451" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1206</SUB>> ]
-"5455" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1206</SUB>> ]
-"5462" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1206</SUB>> ]
-"5469" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1207</SUB>> ]
-"5473" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1207</SUB>> ]
-"5480" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1207</SUB>> ]
-"5456" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1206</SUB>> ]
-"5474" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1207</SUB>> ]
-"5457" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1206</SUB>> ]
-"5459" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1206</SUB>> ]
-"5475" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1207</SUB>> ]
-"5477" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1207</SUB>> ]
-"5439" [label = <(METHOD,CallNonvirtualLongMethodV)<SUB>1204</SUB>> ]
-"5494" [label = <(METHOD_RETURN,jlong)<SUB>1204</SUB>> ]
+"5446" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1205</SUB>> ]
+"5464" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1206</SUB>> ]
+"5483" [label = <(soa,soa(env))<SUB>1207</SUB>> ]
+"5485" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1208</SUB>> ]
+"5486" [label = <(GetJ,InvokeWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1208</SUB>> ]
+"5487" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1208</SUB>> ]
+"5450" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1205</SUB>> ]
+"5468" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1206</SUB>> ]
+"5488" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1208</SUB>> ]
+"5493" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1208</SUB>> ]
+"5451" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1205</SUB>> ]
+"5455" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1205</SUB>> ]
+"5462" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1205</SUB>> ]
+"5469" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1206</SUB>> ]
+"5473" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1206</SUB>> ]
+"5480" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1206</SUB>> ]
+"5456" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1205</SUB>> ]
+"5474" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1206</SUB>> ]
+"5457" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1205</SUB>> ]
+"5459" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1205</SUB>> ]
+"5475" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1206</SUB>> ]
+"5477" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1206</SUB>> ]
+"5439" [label = <(METHOD,CallNonvirtualLongMethodV)<SUB>1203</SUB>> ]
+"5494" [label = <(METHOD_RETURN,jlong)<SUB>1203</SUB>> ]
   "5446" -> "5451" 
   "5446" -> "5464" 
   "5464" -> "5469" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/102-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/102-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/102-cfg.dot	2023-06-07 19:34:22.097390830 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/102-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualLongMethodA" {  
-"5503" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1214</SUB>> ]
-"5521" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1215</SUB>> ]
-"5540" [label = <(soa,soa(env))<SUB>1216</SUB>> ]
-"5542" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetJ();,return InvokeWithJValues(soa, obj, mid, args).GetJ();)<SUB>1217</SUB>> ]
-"5543" [label = <(GetJ,InvokeWithJValues(soa, obj, mid, args).GetJ())<SUB>1217</SUB>> ]
-"5544" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetJ)<SUB>1217</SUB>> ]
-"5507" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1214</SUB>> ]
-"5525" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1215</SUB>> ]
-"5545" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1217</SUB>> ]
-"5550" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1217</SUB>> ]
-"5508" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1214</SUB>> ]
-"5512" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1214</SUB>> ]
-"5519" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1214</SUB>> ]
-"5526" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1215</SUB>> ]
-"5530" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1215</SUB>> ]
-"5537" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1215</SUB>> ]
-"5513" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1214</SUB>> ]
-"5531" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1215</SUB>> ]
-"5514" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1214</SUB>> ]
-"5516" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1214</SUB>> ]
-"5532" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1215</SUB>> ]
-"5534" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1215</SUB>> ]
-"5496" [label = <(METHOD,CallNonvirtualLongMethodA)<SUB>1212</SUB>> ]
-"5551" [label = <(METHOD_RETURN,jlong)<SUB>1212</SUB>> ]
+"5503" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1213</SUB>> ]
+"5521" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1214</SUB>> ]
+"5540" [label = <(soa,soa(env))<SUB>1215</SUB>> ]
+"5542" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetJ();,return InvokeWithJValues(soa, obj, mid, args).GetJ();)<SUB>1216</SUB>> ]
+"5543" [label = <(GetJ,InvokeWithJValues(soa, obj, mid, args).GetJ())<SUB>1216</SUB>> ]
+"5544" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetJ)<SUB>1216</SUB>> ]
+"5507" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1213</SUB>> ]
+"5525" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1214</SUB>> ]
+"5545" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1216</SUB>> ]
+"5550" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1216</SUB>> ]
+"5508" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1213</SUB>> ]
+"5512" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1213</SUB>> ]
+"5519" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1213</SUB>> ]
+"5526" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1214</SUB>> ]
+"5530" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1214</SUB>> ]
+"5537" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1214</SUB>> ]
+"5513" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1213</SUB>> ]
+"5531" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1214</SUB>> ]
+"5514" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1213</SUB>> ]
+"5516" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1213</SUB>> ]
+"5532" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1214</SUB>> ]
+"5534" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1214</SUB>> ]
+"5496" [label = <(METHOD,CallNonvirtualLongMethodA)<SUB>1211</SUB>> ]
+"5551" [label = <(METHOD_RETURN,jlong)<SUB>1211</SUB>> ]
   "5503" -> "5508" 
   "5503" -> "5521" 
   "5521" -> "5526" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/103-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/103-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/103-cfg.dot	2023-06-07 19:34:22.097390830 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/103-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,31 +1,31 @@
 digraph "CallNonvirtualFloatMethod" {  
-"5560" [label = <(va_start,va_start(ap, mid))<SUB>1222</SUB>> ]
-"5563" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1223</SUB>> ]
-"5581" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1224</SUB>> ]
-"5600" [label = <(soa,soa(env))<SUB>1225</SUB>> ]
-"5603" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1226</SUB>> ]
-"5609" [label = <(va_end,va_end(ap))<SUB>1227</SUB>> ]
-"5611" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1228</SUB>> ]
-"5604" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1226</SUB>> ]
-"5612" [label = <(GetF,result.GetF())<SUB>1228</SUB>> ]
-"5613" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1228</SUB>> ]
-"5567" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1223</SUB>> ]
-"5585" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1224</SUB>> ]
-"5615" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1228</SUB>> ]
-"5568" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1223</SUB>> ]
-"5572" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1223</SUB>> ]
-"5579" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1223</SUB>> ]
-"5586" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1224</SUB>> ]
-"5590" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1224</SUB>> ]
-"5597" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1224</SUB>> ]
-"5573" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1223</SUB>> ]
-"5591" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1224</SUB>> ]
-"5574" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1223</SUB>> ]
-"5576" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1223</SUB>> ]
-"5592" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1224</SUB>> ]
-"5594" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1224</SUB>> ]
-"5553" [label = <(METHOD,CallNonvirtualFloatMethod)<SUB>1220</SUB>> ]
-"5616" [label = <(METHOD_RETURN,jfloat)<SUB>1220</SUB>> ]
+"5560" [label = <(va_start,va_start(ap, mid))<SUB>1221</SUB>> ]
+"5563" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1222</SUB>> ]
+"5581" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1223</SUB>> ]
+"5600" [label = <(soa,soa(env))<SUB>1224</SUB>> ]
+"5603" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1225</SUB>> ]
+"5609" [label = <(va_end,va_end(ap))<SUB>1226</SUB>> ]
+"5611" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1227</SUB>> ]
+"5604" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1225</SUB>> ]
+"5612" [label = <(GetF,result.GetF())<SUB>1227</SUB>> ]
+"5613" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1227</SUB>> ]
+"5567" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1222</SUB>> ]
+"5585" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1223</SUB>> ]
+"5615" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1227</SUB>> ]
+"5568" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1222</SUB>> ]
+"5572" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1222</SUB>> ]
+"5579" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1222</SUB>> ]
+"5586" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1223</SUB>> ]
+"5590" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1223</SUB>> ]
+"5597" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1223</SUB>> ]
+"5573" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1222</SUB>> ]
+"5591" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1223</SUB>> ]
+"5574" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1222</SUB>> ]
+"5576" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1222</SUB>> ]
+"5592" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1223</SUB>> ]
+"5594" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1223</SUB>> ]
+"5553" [label = <(METHOD,CallNonvirtualFloatMethod)<SUB>1219</SUB>> ]
+"5616" [label = <(METHOD_RETURN,jfloat)<SUB>1219</SUB>> ]
   "5560" -> "5563" 
   "5563" -> "5568" 
   "5563" -> "5581" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/104-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/104-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/104-cfg.dot	2023-06-07 19:34:22.097390830 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/104-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualFloatMethodV" {  
-"5625" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1233</SUB>> ]
-"5643" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1234</SUB>> ]
-"5662" [label = <(soa,soa(env))<SUB>1235</SUB>> ]
-"5664" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetF();,return InvokeWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1236</SUB>> ]
-"5665" [label = <(GetF,InvokeWithVarArgs(soa, obj, mid, args).GetF())<SUB>1236</SUB>> ]
-"5666" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetF)<SUB>1236</SUB>> ]
-"5629" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1233</SUB>> ]
-"5647" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1234</SUB>> ]
-"5667" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1236</SUB>> ]
-"5672" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1236</SUB>> ]
-"5630" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1233</SUB>> ]
-"5634" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1233</SUB>> ]
-"5641" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1233</SUB>> ]
-"5648" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1234</SUB>> ]
-"5652" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1234</SUB>> ]
-"5659" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1234</SUB>> ]
-"5635" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1233</SUB>> ]
-"5653" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1234</SUB>> ]
-"5636" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1233</SUB>> ]
-"5638" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1233</SUB>> ]
-"5654" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1234</SUB>> ]
-"5656" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1234</SUB>> ]
-"5618" [label = <(METHOD,CallNonvirtualFloatMethodV)<SUB>1231</SUB>> ]
-"5673" [label = <(METHOD_RETURN,jfloat)<SUB>1231</SUB>> ]
+"5625" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1232</SUB>> ]
+"5643" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1233</SUB>> ]
+"5662" [label = <(soa,soa(env))<SUB>1234</SUB>> ]
+"5664" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetF();,return InvokeWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1235</SUB>> ]
+"5665" [label = <(GetF,InvokeWithVarArgs(soa, obj, mid, args).GetF())<SUB>1235</SUB>> ]
+"5666" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetF)<SUB>1235</SUB>> ]
+"5629" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1232</SUB>> ]
+"5647" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1233</SUB>> ]
+"5667" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1235</SUB>> ]
+"5672" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1235</SUB>> ]
+"5630" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1232</SUB>> ]
+"5634" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1232</SUB>> ]
+"5641" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1232</SUB>> ]
+"5648" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1233</SUB>> ]
+"5652" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1233</SUB>> ]
+"5659" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1233</SUB>> ]
+"5635" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1232</SUB>> ]
+"5653" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1233</SUB>> ]
+"5636" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1232</SUB>> ]
+"5638" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1232</SUB>> ]
+"5654" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1233</SUB>> ]
+"5656" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1233</SUB>> ]
+"5618" [label = <(METHOD,CallNonvirtualFloatMethodV)<SUB>1230</SUB>> ]
+"5673" [label = <(METHOD_RETURN,jfloat)<SUB>1230</SUB>> ]
   "5625" -> "5630" 
   "5625" -> "5643" 
   "5643" -> "5648" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/105-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/105-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/105-cfg.dot	2023-06-07 19:34:22.097390830 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/105-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualFloatMethodA" {  
-"5682" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1241</SUB>> ]
-"5700" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1242</SUB>> ]
-"5719" [label = <(soa,soa(env))<SUB>1243</SUB>> ]
-"5721" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetF();,return InvokeWithJValues(soa, obj, mid, args).GetF();)<SUB>1244</SUB>> ]
-"5722" [label = <(GetF,InvokeWithJValues(soa, obj, mid, args).GetF())<SUB>1244</SUB>> ]
-"5723" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetF)<SUB>1244</SUB>> ]
-"5686" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1241</SUB>> ]
-"5704" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1242</SUB>> ]
-"5724" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1244</SUB>> ]
-"5729" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1244</SUB>> ]
-"5687" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1241</SUB>> ]
-"5691" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1241</SUB>> ]
-"5698" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1241</SUB>> ]
-"5705" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1242</SUB>> ]
-"5709" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1242</SUB>> ]
-"5716" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1242</SUB>> ]
-"5692" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1241</SUB>> ]
-"5710" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1242</SUB>> ]
-"5693" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1241</SUB>> ]
-"5695" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1241</SUB>> ]
-"5711" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1242</SUB>> ]
-"5713" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1242</SUB>> ]
-"5675" [label = <(METHOD,CallNonvirtualFloatMethodA)<SUB>1239</SUB>> ]
-"5730" [label = <(METHOD_RETURN,jfloat)<SUB>1239</SUB>> ]
+"5682" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1240</SUB>> ]
+"5700" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1241</SUB>> ]
+"5719" [label = <(soa,soa(env))<SUB>1242</SUB>> ]
+"5721" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetF();,return InvokeWithJValues(soa, obj, mid, args).GetF();)<SUB>1243</SUB>> ]
+"5722" [label = <(GetF,InvokeWithJValues(soa, obj, mid, args).GetF())<SUB>1243</SUB>> ]
+"5723" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetF)<SUB>1243</SUB>> ]
+"5686" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1240</SUB>> ]
+"5704" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1241</SUB>> ]
+"5724" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1243</SUB>> ]
+"5729" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1243</SUB>> ]
+"5687" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1240</SUB>> ]
+"5691" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1240</SUB>> ]
+"5698" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1240</SUB>> ]
+"5705" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1241</SUB>> ]
+"5709" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1241</SUB>> ]
+"5716" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1241</SUB>> ]
+"5692" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1240</SUB>> ]
+"5710" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1241</SUB>> ]
+"5693" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1240</SUB>> ]
+"5695" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1240</SUB>> ]
+"5711" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1241</SUB>> ]
+"5713" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1241</SUB>> ]
+"5675" [label = <(METHOD,CallNonvirtualFloatMethodA)<SUB>1238</SUB>> ]
+"5730" [label = <(METHOD_RETURN,jfloat)<SUB>1238</SUB>> ]
   "5682" -> "5687" 
   "5682" -> "5700" 
   "5700" -> "5705" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/106-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/106-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/106-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/106-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,31 +1,31 @@
 digraph "CallNonvirtualDoubleMethod" {  
-"5739" [label = <(va_start,va_start(ap, mid))<SUB>1249</SUB>> ]
-"5742" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1250</SUB>> ]
-"5760" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1251</SUB>> ]
-"5779" [label = <(soa,soa(env))<SUB>1252</SUB>> ]
-"5782" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1253</SUB>> ]
-"5788" [label = <(va_end,va_end(ap))<SUB>1254</SUB>> ]
-"5790" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1255</SUB>> ]
-"5783" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1253</SUB>> ]
-"5791" [label = <(GetD,result.GetD())<SUB>1255</SUB>> ]
-"5792" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1255</SUB>> ]
-"5746" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1250</SUB>> ]
-"5764" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1251</SUB>> ]
-"5794" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1255</SUB>> ]
-"5747" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1250</SUB>> ]
-"5751" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1250</SUB>> ]
-"5758" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1250</SUB>> ]
-"5765" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1251</SUB>> ]
-"5769" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1251</SUB>> ]
-"5776" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1251</SUB>> ]
-"5752" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1250</SUB>> ]
-"5770" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1251</SUB>> ]
-"5753" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1250</SUB>> ]
-"5755" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1250</SUB>> ]
-"5771" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1251</SUB>> ]
-"5773" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1251</SUB>> ]
-"5732" [label = <(METHOD,CallNonvirtualDoubleMethod)<SUB>1247</SUB>> ]
-"5795" [label = <(METHOD_RETURN,jdouble)<SUB>1247</SUB>> ]
+"5739" [label = <(va_start,va_start(ap, mid))<SUB>1248</SUB>> ]
+"5742" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1249</SUB>> ]
+"5760" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1250</SUB>> ]
+"5779" [label = <(soa,soa(env))<SUB>1251</SUB>> ]
+"5782" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1252</SUB>> ]
+"5788" [label = <(va_end,va_end(ap))<SUB>1253</SUB>> ]
+"5790" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1254</SUB>> ]
+"5783" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1252</SUB>> ]
+"5791" [label = <(GetD,result.GetD())<SUB>1254</SUB>> ]
+"5792" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1254</SUB>> ]
+"5746" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1249</SUB>> ]
+"5764" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1250</SUB>> ]
+"5794" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1254</SUB>> ]
+"5747" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1249</SUB>> ]
+"5751" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1249</SUB>> ]
+"5758" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1249</SUB>> ]
+"5765" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1250</SUB>> ]
+"5769" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1250</SUB>> ]
+"5776" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1250</SUB>> ]
+"5752" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1249</SUB>> ]
+"5770" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1250</SUB>> ]
+"5753" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1249</SUB>> ]
+"5755" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1249</SUB>> ]
+"5771" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1250</SUB>> ]
+"5773" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1250</SUB>> ]
+"5732" [label = <(METHOD,CallNonvirtualDoubleMethod)<SUB>1246</SUB>> ]
+"5795" [label = <(METHOD_RETURN,jdouble)<SUB>1246</SUB>> ]
   "5739" -> "5742" 
   "5742" -> "5747" 
   "5742" -> "5760" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/107-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/107-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/107-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/107-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualDoubleMethodV" {  
-"5804" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1260</SUB>> ]
-"5822" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1261</SUB>> ]
-"5841" [label = <(soa,soa(env))<SUB>1262</SUB>> ]
-"5843" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetD();,return InvokeWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1263</SUB>> ]
-"5844" [label = <(GetD,InvokeWithVarArgs(soa, obj, mid, args).GetD())<SUB>1263</SUB>> ]
-"5845" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetD)<SUB>1263</SUB>> ]
-"5808" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1260</SUB>> ]
-"5826" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1261</SUB>> ]
-"5846" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1263</SUB>> ]
-"5851" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1263</SUB>> ]
-"5809" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1260</SUB>> ]
-"5813" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1260</SUB>> ]
-"5820" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1260</SUB>> ]
-"5827" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1261</SUB>> ]
-"5831" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1261</SUB>> ]
-"5838" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1261</SUB>> ]
-"5814" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1260</SUB>> ]
-"5832" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1261</SUB>> ]
-"5815" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1260</SUB>> ]
-"5817" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1260</SUB>> ]
-"5833" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1261</SUB>> ]
-"5835" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1261</SUB>> ]
-"5797" [label = <(METHOD,CallNonvirtualDoubleMethodV)<SUB>1258</SUB>> ]
-"5852" [label = <(METHOD_RETURN,jdouble)<SUB>1258</SUB>> ]
+"5804" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1259</SUB>> ]
+"5822" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1260</SUB>> ]
+"5841" [label = <(soa,soa(env))<SUB>1261</SUB>> ]
+"5843" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetD();,return InvokeWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1262</SUB>> ]
+"5844" [label = <(GetD,InvokeWithVarArgs(soa, obj, mid, args).GetD())<SUB>1262</SUB>> ]
+"5845" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetD)<SUB>1262</SUB>> ]
+"5808" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1259</SUB>> ]
+"5826" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1260</SUB>> ]
+"5846" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1262</SUB>> ]
+"5851" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1262</SUB>> ]
+"5809" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1259</SUB>> ]
+"5813" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1259</SUB>> ]
+"5820" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1259</SUB>> ]
+"5827" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1260</SUB>> ]
+"5831" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1260</SUB>> ]
+"5838" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1260</SUB>> ]
+"5814" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1259</SUB>> ]
+"5832" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1260</SUB>> ]
+"5815" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1259</SUB>> ]
+"5817" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1259</SUB>> ]
+"5833" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1260</SUB>> ]
+"5835" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1260</SUB>> ]
+"5797" [label = <(METHOD,CallNonvirtualDoubleMethodV)<SUB>1257</SUB>> ]
+"5852" [label = <(METHOD_RETURN,jdouble)<SUB>1257</SUB>> ]
   "5804" -> "5809" 
   "5804" -> "5822" 
   "5822" -> "5827" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/108-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/108-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/108-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/108-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualDoubleMethodA" {  
-"5861" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1268</SUB>> ]
-"5879" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1269</SUB>> ]
-"5898" [label = <(soa,soa(env))<SUB>1270</SUB>> ]
-"5900" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetD();,return InvokeWithJValues(soa, obj, mid, args).GetD();)<SUB>1271</SUB>> ]
-"5901" [label = <(GetD,InvokeWithJValues(soa, obj, mid, args).GetD())<SUB>1271</SUB>> ]
-"5902" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetD)<SUB>1271</SUB>> ]
-"5865" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1268</SUB>> ]
-"5883" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1269</SUB>> ]
-"5903" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1271</SUB>> ]
-"5908" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1271</SUB>> ]
-"5866" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1268</SUB>> ]
-"5870" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1268</SUB>> ]
-"5877" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1268</SUB>> ]
-"5884" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1269</SUB>> ]
-"5888" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1269</SUB>> ]
-"5895" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1269</SUB>> ]
-"5871" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1268</SUB>> ]
-"5889" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1269</SUB>> ]
-"5872" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1268</SUB>> ]
-"5874" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1268</SUB>> ]
-"5890" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1269</SUB>> ]
-"5892" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1269</SUB>> ]
-"5854" [label = <(METHOD,CallNonvirtualDoubleMethodA)<SUB>1266</SUB>> ]
-"5909" [label = <(METHOD_RETURN,jdouble)<SUB>1266</SUB>> ]
+"5861" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1267</SUB>> ]
+"5879" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1268</SUB>> ]
+"5898" [label = <(soa,soa(env))<SUB>1269</SUB>> ]
+"5900" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetD();,return InvokeWithJValues(soa, obj, mid, args).GetD();)<SUB>1270</SUB>> ]
+"5901" [label = <(GetD,InvokeWithJValues(soa, obj, mid, args).GetD())<SUB>1270</SUB>> ]
+"5902" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetD)<SUB>1270</SUB>> ]
+"5865" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1267</SUB>> ]
+"5883" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1268</SUB>> ]
+"5903" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1270</SUB>> ]
+"5908" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1270</SUB>> ]
+"5866" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1267</SUB>> ]
+"5870" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1267</SUB>> ]
+"5877" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1267</SUB>> ]
+"5884" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1268</SUB>> ]
+"5888" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1268</SUB>> ]
+"5895" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1268</SUB>> ]
+"5871" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1267</SUB>> ]
+"5889" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1268</SUB>> ]
+"5872" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1267</SUB>> ]
+"5874" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1267</SUB>> ]
+"5890" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1268</SUB>> ]
+"5892" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1268</SUB>> ]
+"5854" [label = <(METHOD,CallNonvirtualDoubleMethodA)<SUB>1265</SUB>> ]
+"5909" [label = <(METHOD_RETURN,jdouble)<SUB>1265</SUB>> ]
   "5861" -> "5866" 
   "5861" -> "5879" 
   "5879" -> "5884" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/109-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/109-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/109-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/109-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,26 +1,26 @@
 digraph "CallNonvirtualVoidMethod" {  
-"5918" [label = <(va_start,va_start(ap, mid))<SUB>1276</SUB>> ]
-"5921" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1277</SUB>> ]
-"5938" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1278</SUB>> ]
-"5956" [label = <(soa,soa(env))<SUB>1279</SUB>> ]
-"5958" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1280</SUB>> ]
-"5963" [label = <(va_end,va_end(ap))<SUB>1281</SUB>> ]
-"5925" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1277</SUB>> ]
-"5942" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1278</SUB>> ]
-"5926" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1277</SUB>> ]
-"5930" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1277</SUB>> ]
-"5937" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1277</SUB>> ]
-"5943" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1278</SUB>> ]
-"5947" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1278</SUB>> ]
-"5954" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1278</SUB>> ]
-"5931" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1277</SUB>> ]
-"5948" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1278</SUB>> ]
-"5932" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1277</SUB>> ]
-"5934" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1277</SUB>> ]
-"5949" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1278</SUB>> ]
-"5951" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1278</SUB>> ]
-"5911" [label = <(METHOD,CallNonvirtualVoidMethod)<SUB>1274</SUB>> ]
-"5965" [label = <(METHOD_RETURN,void)<SUB>1274</SUB>> ]
+"5918" [label = <(va_start,va_start(ap, mid))<SUB>1275</SUB>> ]
+"5921" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1276</SUB>> ]
+"5938" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1277</SUB>> ]
+"5956" [label = <(soa,soa(env))<SUB>1278</SUB>> ]
+"5958" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1279</SUB>> ]
+"5963" [label = <(va_end,va_end(ap))<SUB>1280</SUB>> ]
+"5925" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1276</SUB>> ]
+"5942" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1277</SUB>> ]
+"5926" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1276</SUB>> ]
+"5930" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1276</SUB>> ]
+"5937" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1276</SUB>> ]
+"5943" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1277</SUB>> ]
+"5947" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1277</SUB>> ]
+"5954" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1277</SUB>> ]
+"5931" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1276</SUB>> ]
+"5948" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1277</SUB>> ]
+"5932" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1276</SUB>> ]
+"5934" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1276</SUB>> ]
+"5949" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1277</SUB>> ]
+"5951" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1277</SUB>> ]
+"5911" [label = <(METHOD,CallNonvirtualVoidMethod)<SUB>1273</SUB>> ]
+"5965" [label = <(METHOD_RETURN,void)<SUB>1273</SUB>> ]
   "5918" -> "5921" 
   "5921" -> "5926" 
   "5921" -> "5938" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/11-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/11-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/11-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/11-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,5 +1,5 @@
 digraph "GetClassLoader" {  
-"356" [label = <(METHOD,GetClassLoader)<SUB>245</SUB>> ]
-"359" [label = <(METHOD_RETURN,ANY)<SUB>245</SUB>> ]
+"356" [label = <(METHOD,GetClassLoader)<SUB>244</SUB>> ]
+"359" [label = <(METHOD_RETURN,ANY)<SUB>244</SUB>> ]
   "356" -> "359" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/110-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/110-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/110-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/110-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,24 +1,24 @@
 digraph "CallNonvirtualVoidMethodV" {  
-"5974" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1286</SUB>> ]
-"5991" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1287</SUB>> ]
-"6009" [label = <(soa,soa(env))<SUB>1288</SUB>> ]
-"6011" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1289</SUB>> ]
-"5978" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1286</SUB>> ]
-"5995" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1287</SUB>> ]
-"5979" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1286</SUB>> ]
-"5983" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1286</SUB>> ]
-"5990" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1286</SUB>> ]
-"5996" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1287</SUB>> ]
-"6000" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1287</SUB>> ]
-"6007" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1287</SUB>> ]
-"5984" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1286</SUB>> ]
-"6001" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1287</SUB>> ]
-"5985" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1286</SUB>> ]
-"5987" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1286</SUB>> ]
-"6002" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1287</SUB>> ]
-"6004" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1287</SUB>> ]
-"5967" [label = <(METHOD,CallNonvirtualVoidMethodV)<SUB>1284</SUB>> ]
-"6016" [label = <(METHOD_RETURN,void)<SUB>1284</SUB>> ]
+"5974" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1285</SUB>> ]
+"5991" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1286</SUB>> ]
+"6009" [label = <(soa,soa(env))<SUB>1287</SUB>> ]
+"6011" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1288</SUB>> ]
+"5978" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1285</SUB>> ]
+"5995" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1286</SUB>> ]
+"5979" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1285</SUB>> ]
+"5983" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1285</SUB>> ]
+"5990" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1285</SUB>> ]
+"5996" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1286</SUB>> ]
+"6000" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1286</SUB>> ]
+"6007" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1286</SUB>> ]
+"5984" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1285</SUB>> ]
+"6001" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1286</SUB>> ]
+"5985" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1285</SUB>> ]
+"5987" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1285</SUB>> ]
+"6002" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1286</SUB>> ]
+"6004" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1286</SUB>> ]
+"5967" [label = <(METHOD,CallNonvirtualVoidMethodV)<SUB>1283</SUB>> ]
+"6016" [label = <(METHOD_RETURN,void)<SUB>1283</SUB>> ]
   "5974" -> "5979" 
   "5974" -> "5991" 
   "5991" -> "5996" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/111-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/111-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/111-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/111-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,24 +1,24 @@
 digraph "CallNonvirtualVoidMethodA" {  
-"6025" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1294</SUB>> ]
-"6042" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1295</SUB>> ]
-"6060" [label = <(soa,soa(env))<SUB>1296</SUB>> ]
-"6062" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1297</SUB>> ]
-"6029" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1294</SUB>> ]
-"6046" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1295</SUB>> ]
-"6030" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1294</SUB>> ]
-"6034" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1294</SUB>> ]
-"6041" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1294</SUB>> ]
-"6047" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1295</SUB>> ]
-"6051" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1295</SUB>> ]
-"6058" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1295</SUB>> ]
-"6035" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1294</SUB>> ]
-"6052" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1295</SUB>> ]
-"6036" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1294</SUB>> ]
-"6038" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1294</SUB>> ]
-"6053" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1295</SUB>> ]
-"6055" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1295</SUB>> ]
-"6018" [label = <(METHOD,CallNonvirtualVoidMethodA)<SUB>1292</SUB>> ]
-"6067" [label = <(METHOD_RETURN,void)<SUB>1292</SUB>> ]
+"6025" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1293</SUB>> ]
+"6042" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1294</SUB>> ]
+"6060" [label = <(soa,soa(env))<SUB>1295</SUB>> ]
+"6062" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1296</SUB>> ]
+"6029" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1293</SUB>> ]
+"6046" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1294</SUB>> ]
+"6030" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1293</SUB>> ]
+"6034" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1293</SUB>> ]
+"6041" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1293</SUB>> ]
+"6047" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1294</SUB>> ]
+"6051" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1294</SUB>> ]
+"6058" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1294</SUB>> ]
+"6035" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1293</SUB>> ]
+"6052" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1294</SUB>> ]
+"6036" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1293</SUB>> ]
+"6038" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1293</SUB>> ]
+"6053" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1294</SUB>> ]
+"6055" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1294</SUB>> ]
+"6018" [label = <(METHOD,CallNonvirtualVoidMethodA)<SUB>1291</SUB>> ]
+"6067" [label = <(METHOD_RETURN,void)<SUB>1291</SUB>> ]
   "6025" -> "6030" 
   "6025" -> "6042" 
   "6042" -> "6047" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/112-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/112-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/112-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/112-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,33 +1,33 @@
 digraph "GetFieldID" {  
-"6075" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1301</SUB>> ]
-"6093" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1302</SUB>> ]
-"6111" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1303</SUB>> ]
-"6130" [label = <(soa,soa(env))<SUB>1304</SUB>> ]
-"6132" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, false);,return FindFieldID(soa, java_class, name, sig, false);)<SUB>1305</SUB>> ]
-"6133" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, false))<SUB>1305</SUB>> ]
-"6079" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1301</SUB>> ]
-"6097" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1302</SUB>> ]
-"6115" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1303</SUB>> ]
-"6080" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1301</SUB>> ]
-"6084" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1301</SUB>> ]
-"6091" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1301</SUB>> ]
-"6098" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1302</SUB>> ]
-"6102" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;name == null&quot;))<SUB>1302</SUB>> ]
-"6109" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1302</SUB>> ]
-"6116" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1303</SUB>> ]
-"6120" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;sig == null&quot;))<SUB>1303</SUB>> ]
-"6127" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1303</SUB>> ]
-"6085" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1301</SUB>> ]
-"6103" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1302</SUB>> ]
-"6121" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1303</SUB>> ]
-"6086" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1301</SUB>> ]
-"6088" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1301</SUB>> ]
-"6104" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1302</SUB>> ]
-"6106" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1302</SUB>> ]
-"6122" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1303</SUB>> ]
-"6124" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1303</SUB>> ]
-"6069" [label = <(METHOD,GetFieldID)<SUB>1300</SUB>> ]
-"6139" [label = <(METHOD_RETURN,jfieldID)<SUB>1300</SUB>> ]
+"6075" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1300</SUB>> ]
+"6093" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1301</SUB>> ]
+"6111" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1302</SUB>> ]
+"6130" [label = <(soa,soa(env))<SUB>1303</SUB>> ]
+"6132" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, false);,return FindFieldID(soa, java_class, name, sig, false);)<SUB>1304</SUB>> ]
+"6133" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, false))<SUB>1304</SUB>> ]
+"6079" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1300</SUB>> ]
+"6097" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1301</SUB>> ]
+"6115" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1302</SUB>> ]
+"6080" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1300</SUB>> ]
+"6084" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1300</SUB>> ]
+"6091" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1300</SUB>> ]
+"6098" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1301</SUB>> ]
+"6102" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;name == null&quot;))<SUB>1301</SUB>> ]
+"6109" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1301</SUB>> ]
+"6116" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1302</SUB>> ]
+"6120" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;sig == null&quot;))<SUB>1302</SUB>> ]
+"6127" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1302</SUB>> ]
+"6085" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1300</SUB>> ]
+"6103" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1301</SUB>> ]
+"6121" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1302</SUB>> ]
+"6086" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1300</SUB>> ]
+"6088" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1300</SUB>> ]
+"6104" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1301</SUB>> ]
+"6106" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1301</SUB>> ]
+"6122" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1302</SUB>> ]
+"6124" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1302</SUB>> ]
+"6069" [label = <(METHOD,GetFieldID)<SUB>1299</SUB>> ]
+"6139" [label = <(METHOD_RETURN,jfieldID)<SUB>1299</SUB>> ]
   "6075" -> "6080" 
   "6075" -> "6093" 
   "6093" -> "6098" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/113-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/113-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/113-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/113-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,33 +1,33 @@
 digraph "GetStaticFieldID" {  
-"6147" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1310</SUB>> ]
-"6165" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1311</SUB>> ]
-"6183" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1312</SUB>> ]
-"6202" [label = <(soa,soa(env))<SUB>1313</SUB>> ]
-"6204" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, true);,return FindFieldID(soa, java_class, name, sig, true);)<SUB>1314</SUB>> ]
-"6205" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, true))<SUB>1314</SUB>> ]
-"6151" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1310</SUB>> ]
-"6169" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1311</SUB>> ]
-"6187" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1312</SUB>> ]
-"6152" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1310</SUB>> ]
-"6156" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1310</SUB>> ]
-"6163" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1310</SUB>> ]
-"6170" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1311</SUB>> ]
-"6174" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;name == null&quot;))<SUB>1311</SUB>> ]
-"6181" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1311</SUB>> ]
-"6188" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1312</SUB>> ]
-"6192" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;sig == null&quot;))<SUB>1312</SUB>> ]
-"6199" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1312</SUB>> ]
-"6157" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1310</SUB>> ]
-"6175" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1311</SUB>> ]
-"6193" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1312</SUB>> ]
-"6158" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1310</SUB>> ]
-"6160" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1310</SUB>> ]
-"6176" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1311</SUB>> ]
-"6178" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1311</SUB>> ]
-"6194" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1312</SUB>> ]
-"6196" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1312</SUB>> ]
-"6141" [label = <(METHOD,GetStaticFieldID)<SUB>1308</SUB>> ]
-"6211" [label = <(METHOD_RETURN,jfieldID)<SUB>1308</SUB>> ]
+"6147" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1309</SUB>> ]
+"6165" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1310</SUB>> ]
+"6183" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1311</SUB>> ]
+"6202" [label = <(soa,soa(env))<SUB>1312</SUB>> ]
+"6204" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, true);,return FindFieldID(soa, java_class, name, sig, true);)<SUB>1313</SUB>> ]
+"6205" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, true))<SUB>1313</SUB>> ]
+"6151" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1309</SUB>> ]
+"6169" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1310</SUB>> ]
+"6187" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1311</SUB>> ]
+"6152" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1309</SUB>> ]
+"6156" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1309</SUB>> ]
+"6163" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1309</SUB>> ]
+"6170" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1310</SUB>> ]
+"6174" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;name == null&quot;))<SUB>1310</SUB>> ]
+"6181" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1310</SUB>> ]
+"6188" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1311</SUB>> ]
+"6192" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;sig == null&quot;))<SUB>1311</SUB>> ]
+"6199" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1311</SUB>> ]
+"6157" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1309</SUB>> ]
+"6175" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1310</SUB>> ]
+"6193" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1311</SUB>> ]
+"6158" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1309</SUB>> ]
+"6160" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1309</SUB>> ]
+"6176" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1310</SUB>> ]
+"6178" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1310</SUB>> ]
+"6194" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1311</SUB>> ]
+"6196" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1311</SUB>> ]
+"6141" [label = <(METHOD,GetStaticFieldID)<SUB>1307</SUB>> ]
+"6211" [label = <(METHOD_RETURN,jfieldID)<SUB>1307</SUB>> ]
   "6147" -> "6152" 
   "6147" -> "6165" 
   "6165" -> "6170" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/114-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/114-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/114-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/114-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,46 +1,46 @@
 digraph "GetObjectField" {  
-"6218" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1318</SUB>> ]
-"6236" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1319</SUB>> ]
-"6255" [label = <(soa,soa(env))<SUB>1320</SUB>> ]
-"6257" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1321</SUB>> ]
-"6275" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1322</SUB>> ]
-"6282" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));)<SUB>1323</SUB>> ]
-"6258" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1321</SUB>> ]
-"6265" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1321</SUB>> ]
-"6277" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1322</SUB>> ]
-"6283" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o)))<SUB>1323</SUB>> ]
-"6259" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1321</SUB>> ]
-"6266" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1321</SUB>> ]
-"6278" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1322</SUB>> ]
-"6284" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1323</SUB>> ]
-"6289" [label = <(GetObject,f-&gt;GetObject(o))<SUB>1323</SUB>> ]
-"6222" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1318</SUB>> ]
-"6240" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1319</SUB>> ]
-"6261" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1321</SUB>> ]
-"6267" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1321</SUB>> ]
-"6270" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1321</SUB>> ]
-"6280" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1322</SUB>> ]
-"6285" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1323</SUB>> ]
-"6290" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1323</SUB>> ]
-"6223" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1318</SUB>> ]
-"6227" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1318</SUB>> ]
-"6234" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1318</SUB>> ]
-"6241" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1319</SUB>> ]
-"6245" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1319</SUB>> ]
-"6252" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1319</SUB>> ]
-"6263" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1321</SUB>> ]
-"6269" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1321</SUB>> ]
-"6272" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1321</SUB>> ]
-"6287" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1323</SUB>> ]
-"6292" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1323</SUB>> ]
-"6228" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1318</SUB>> ]
-"6246" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1319</SUB>> ]
-"6229" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1318</SUB>> ]
-"6231" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1318</SUB>> ]
-"6247" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1319</SUB>> ]
-"6249" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1319</SUB>> ]
-"6213" [label = <(METHOD,GetObjectField)<SUB>1317</SUB>> ]
-"6294" [label = <(METHOD_RETURN,jobject)<SUB>1317</SUB>> ]
+"6218" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1317</SUB>> ]
+"6236" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1318</SUB>> ]
+"6255" [label = <(soa,soa(env))<SUB>1319</SUB>> ]
+"6257" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1320</SUB>> ]
+"6275" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1321</SUB>> ]
+"6282" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));)<SUB>1322</SUB>> ]
+"6258" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1320</SUB>> ]
+"6265" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1320</SUB>> ]
+"6277" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1321</SUB>> ]
+"6283" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o)))<SUB>1322</SUB>> ]
+"6259" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1320</SUB>> ]
+"6266" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1320</SUB>> ]
+"6278" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1321</SUB>> ]
+"6284" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1322</SUB>> ]
+"6289" [label = <(GetObject,f-&gt;GetObject(o))<SUB>1322</SUB>> ]
+"6222" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1317</SUB>> ]
+"6240" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1318</SUB>> ]
+"6261" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1320</SUB>> ]
+"6267" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1320</SUB>> ]
+"6270" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1320</SUB>> ]
+"6280" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1321</SUB>> ]
+"6285" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1322</SUB>> ]
+"6290" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1322</SUB>> ]
+"6223" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1317</SUB>> ]
+"6227" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1317</SUB>> ]
+"6234" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1317</SUB>> ]
+"6241" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1318</SUB>> ]
+"6245" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1318</SUB>> ]
+"6252" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1318</SUB>> ]
+"6263" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1320</SUB>> ]
+"6269" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1320</SUB>> ]
+"6272" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1320</SUB>> ]
+"6287" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1322</SUB>> ]
+"6292" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1322</SUB>> ]
+"6228" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1317</SUB>> ]
+"6246" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1318</SUB>> ]
+"6229" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1317</SUB>> ]
+"6231" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1317</SUB>> ]
+"6247" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1318</SUB>> ]
+"6249" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1318</SUB>> ]
+"6213" [label = <(METHOD,GetObjectField)<SUB>1316</SUB>> ]
+"6294" [label = <(METHOD_RETURN,jobject)<SUB>1316</SUB>> ]
   "6218" -> "6223" 
   "6218" -> "6236" 
   "6236" -> "6241" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/115-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/115-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/115-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/115-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,30 +1,30 @@
 digraph "GetStaticObjectField" {  
-"6301" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1327</SUB>> ]
-"6320" [label = <(soa,soa(env))<SUB>1328</SUB>> ]
-"6323" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1329</SUB>> ]
-"6330" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));)<SUB>1330</SUB>> ]
-"6325" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1329</SUB>> ]
-"6331" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass())))<SUB>1330</SUB>> ]
-"6326" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1329</SUB>> ]
-"6332" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1330</SUB>> ]
-"6337" [label = <(GetObject,f-&gt;GetObject(f-&gt;GetDeclaringClass()))<SUB>1330</SUB>> ]
-"6305" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1327</SUB>> ]
-"6328" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1329</SUB>> ]
-"6333" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1330</SUB>> ]
-"6338" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1330</SUB>> ]
-"6341" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1330</SUB>> ]
-"6306" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1327</SUB>> ]
-"6310" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1327</SUB>> ]
-"6317" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1327</SUB>> ]
-"6335" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1330</SUB>> ]
-"6340" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1330</SUB>> ]
-"6342" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1330</SUB>> ]
-"6311" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1327</SUB>> ]
-"6344" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1330</SUB>> ]
-"6312" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1327</SUB>> ]
-"6314" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1327</SUB>> ]
-"6296" [label = <(METHOD,GetStaticObjectField)<SUB>1326</SUB>> ]
-"6345" [label = <(METHOD_RETURN,jobject)<SUB>1326</SUB>> ]
+"6301" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1326</SUB>> ]
+"6320" [label = <(soa,soa(env))<SUB>1327</SUB>> ]
+"6323" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1328</SUB>> ]
+"6330" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));)<SUB>1329</SUB>> ]
+"6325" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1328</SUB>> ]
+"6331" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass())))<SUB>1329</SUB>> ]
+"6326" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1328</SUB>> ]
+"6332" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1329</SUB>> ]
+"6337" [label = <(GetObject,f-&gt;GetObject(f-&gt;GetDeclaringClass()))<SUB>1329</SUB>> ]
+"6305" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1326</SUB>> ]
+"6328" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1328</SUB>> ]
+"6333" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1329</SUB>> ]
+"6338" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1329</SUB>> ]
+"6341" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1329</SUB>> ]
+"6306" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1326</SUB>> ]
+"6310" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1326</SUB>> ]
+"6317" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1326</SUB>> ]
+"6335" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1329</SUB>> ]
+"6340" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1329</SUB>> ]
+"6342" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1329</SUB>> ]
+"6311" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1326</SUB>> ]
+"6344" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1329</SUB>> ]
+"6312" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1326</SUB>> ]
+"6314" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1326</SUB>> ]
+"6296" [label = <(METHOD,GetStaticObjectField)<SUB>1325</SUB>> ]
+"6345" [label = <(METHOD_RETURN,jobject)<SUB>1325</SUB>> ]
   "6301" -> "6306" 
   "6301" -> "6320" 
   "6320" -> "6328" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/116-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/116-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/116-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/116-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,55 +1,55 @@
 digraph "SetObjectField" {  
-"6353" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1334</SUB>> ]
-"6370" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1335</SUB>> ]
-"6388" [label = <(soa,soa(env))<SUB>1336</SUB>> ]
-"6390" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1337</SUB>> ]
-"6407" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1338</SUB>> ]
-"6425" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1339</SUB>> ]
-"6432" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(o, v))<SUB>1340</SUB>> ]
-"6391" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1337</SUB>> ]
-"6398" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1337</SUB>> ]
-"6408" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1338</SUB>> ]
-"6415" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1338</SUB>> ]
-"6427" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1339</SUB>> ]
-"6433" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1340</SUB>> ]
-"6438" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1340</SUB>> ]
-"6392" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1337</SUB>> ]
-"6399" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1337</SUB>> ]
-"6409" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1338</SUB>> ]
-"6416" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1338</SUB>> ]
-"6428" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1339</SUB>> ]
-"6434" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1340</SUB>> ]
-"6439" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1340</SUB>> ]
-"6357" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>1334</SUB>> ]
-"6374" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1335</SUB>> ]
-"6394" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1337</SUB>> ]
-"6400" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1337</SUB>> ]
-"6403" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1337</SUB>> ]
-"6411" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1338</SUB>> ]
-"6417" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1338</SUB>> ]
-"6420" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1338</SUB>> ]
-"6430" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1339</SUB>> ]
-"6436" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1340</SUB>> ]
-"6358" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>1334</SUB>> ]
-"6362" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_object == null&quot;))<SUB>1334</SUB>> ]
-"6369" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1334</SUB>> ]
-"6375" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1335</SUB>> ]
-"6379" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1335</SUB>> ]
-"6386" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1335</SUB>> ]
-"6396" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1337</SUB>> ]
-"6402" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1337</SUB>> ]
-"6405" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1337</SUB>> ]
-"6413" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1338</SUB>> ]
-"6419" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1338</SUB>> ]
-"6422" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1338</SUB>> ]
-"6363" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1334</SUB>> ]
-"6380" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1335</SUB>> ]
-"6364" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1334</SUB>> ]
-"6366" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1334</SUB>> ]
-"6381" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1335</SUB>> ]
-"6383" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1335</SUB>> ]
-"6347" [label = <(METHOD,SetObjectField)<SUB>1333</SUB>> ]
-"6442" [label = <(METHOD_RETURN,void)<SUB>1333</SUB>> ]
+"6353" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1333</SUB>> ]
+"6370" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1334</SUB>> ]
+"6388" [label = <(soa,soa(env))<SUB>1335</SUB>> ]
+"6390" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1336</SUB>> ]
+"6407" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1337</SUB>> ]
+"6425" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1338</SUB>> ]
+"6432" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(o, v))<SUB>1339</SUB>> ]
+"6391" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1336</SUB>> ]
+"6398" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1336</SUB>> ]
+"6408" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1337</SUB>> ]
+"6415" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1337</SUB>> ]
+"6427" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1338</SUB>> ]
+"6433" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1339</SUB>> ]
+"6438" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1339</SUB>> ]
+"6392" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1336</SUB>> ]
+"6399" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1336</SUB>> ]
+"6409" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1337</SUB>> ]
+"6416" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1337</SUB>> ]
+"6428" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1338</SUB>> ]
+"6434" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1339</SUB>> ]
+"6439" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1339</SUB>> ]
+"6357" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>1333</SUB>> ]
+"6374" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1334</SUB>> ]
+"6394" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1336</SUB>> ]
+"6400" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1336</SUB>> ]
+"6403" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1336</SUB>> ]
+"6411" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1337</SUB>> ]
+"6417" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1337</SUB>> ]
+"6420" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1337</SUB>> ]
+"6430" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1338</SUB>> ]
+"6436" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1339</SUB>> ]
+"6358" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>1333</SUB>> ]
+"6362" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_object == null&quot;))<SUB>1333</SUB>> ]
+"6369" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1333</SUB>> ]
+"6375" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1334</SUB>> ]
+"6379" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1334</SUB>> ]
+"6386" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1334</SUB>> ]
+"6396" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1336</SUB>> ]
+"6402" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1336</SUB>> ]
+"6405" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1336</SUB>> ]
+"6413" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1337</SUB>> ]
+"6419" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1337</SUB>> ]
+"6422" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1337</SUB>> ]
+"6363" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1333</SUB>> ]
+"6380" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1334</SUB>> ]
+"6364" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1333</SUB>> ]
+"6366" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1333</SUB>> ]
+"6381" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1334</SUB>> ]
+"6383" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1334</SUB>> ]
+"6347" [label = <(METHOD,SetObjectField)<SUB>1332</SUB>> ]
+"6442" [label = <(METHOD_RETURN,void)<SUB>1332</SUB>> ]
   "6353" -> "6358" 
   "6353" -> "6370" 
   "6370" -> "6375" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/117-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/117-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/117-cfg.dot	2023-06-07 19:34:22.107390828 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/117-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,39 +1,39 @@
 digraph "SetStaticObjectField" {  
-"6450" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1344</SUB>> ]
-"6468" [label = <(soa,soa(env))<SUB>1345</SUB>> ]
-"6470" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1346</SUB>> ]
-"6488" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1347</SUB>> ]
-"6495" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(f-&gt;GetDeclaringClass(), v))<SUB>1348</SUB>> ]
-"6471" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1346</SUB>> ]
-"6478" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1346</SUB>> ]
-"6490" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1347</SUB>> ]
-"6496" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1348</SUB>> ]
-"6501" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1348</SUB>> ]
-"6472" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1346</SUB>> ]
-"6479" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1346</SUB>> ]
-"6491" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1347</SUB>> ]
-"6497" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1348</SUB>> ]
-"6502" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1348</SUB>> ]
-"6454" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1344</SUB>> ]
-"6474" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1346</SUB>> ]
-"6480" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1346</SUB>> ]
-"6483" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1346</SUB>> ]
-"6493" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1347</SUB>> ]
-"6499" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1348</SUB>> ]
-"6503" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1348</SUB>> ]
-"6455" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1344</SUB>> ]
-"6459" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1344</SUB>> ]
-"6466" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1344</SUB>> ]
-"6476" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1346</SUB>> ]
-"6482" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1346</SUB>> ]
-"6485" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1346</SUB>> ]
-"6504" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1348</SUB>> ]
-"6460" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1344</SUB>> ]
-"6506" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1348</SUB>> ]
-"6461" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1344</SUB>> ]
-"6463" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1344</SUB>> ]
-"6444" [label = <(METHOD,SetStaticObjectField)<SUB>1343</SUB>> ]
-"6508" [label = <(METHOD_RETURN,void)<SUB>1343</SUB>> ]
+"6450" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1343</SUB>> ]
+"6468" [label = <(soa,soa(env))<SUB>1344</SUB>> ]
+"6470" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1345</SUB>> ]
+"6488" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1346</SUB>> ]
+"6495" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(f-&gt;GetDeclaringClass(), v))<SUB>1347</SUB>> ]
+"6471" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1345</SUB>> ]
+"6478" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1345</SUB>> ]
+"6490" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1346</SUB>> ]
+"6496" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1347</SUB>> ]
+"6501" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1347</SUB>> ]
+"6472" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1345</SUB>> ]
+"6479" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1345</SUB>> ]
+"6491" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1346</SUB>> ]
+"6497" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1347</SUB>> ]
+"6502" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1347</SUB>> ]
+"6454" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1343</SUB>> ]
+"6474" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1345</SUB>> ]
+"6480" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1345</SUB>> ]
+"6483" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1345</SUB>> ]
+"6493" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1346</SUB>> ]
+"6499" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1347</SUB>> ]
+"6503" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1347</SUB>> ]
+"6455" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1343</SUB>> ]
+"6459" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1343</SUB>> ]
+"6466" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1343</SUB>> ]
+"6476" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1345</SUB>> ]
+"6482" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1345</SUB>> ]
+"6485" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1345</SUB>> ]
+"6504" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1347</SUB>> ]
+"6460" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1343</SUB>> ]
+"6506" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1347</SUB>> ]
+"6461" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1343</SUB>> ]
+"6463" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1343</SUB>> ]
+"6444" [label = <(METHOD,SetStaticObjectField)<SUB>1342</SUB>> ]
+"6508" [label = <(METHOD_RETURN,void)<SUB>1342</SUB>> ]
   "6450" -> "6455" 
   "6450" -> "6468" 
   "6468" -> "6476" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/118-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/118-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/118-cfg.dot	2023-06-07 19:34:22.117390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/118-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,41 +1,41 @@
 digraph "GetBooleanField" {  
-"6515" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1380</SUB>> ]
-"6549" [label = <(soa,ScopedObjectAccess)<SUB>1380</SUB>> ]
-"6551" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1380</SUB>> ]
-"6569" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1380</SUB>> ]
-"6576" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj);,GET_PRIMITIVE_FIELD(Boolean, obj);)<SUB>1380</SUB>> ]
-"6534" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1380</SUB>> ]
-"6552" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1380</SUB>> ]
-"6559" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1380</SUB>> ]
-"6571" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),jni::DecodeArtField(fid))<SUB>1380</SUB>> ]
-"6577" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),f-&gt;GetBoolean(o))<SUB>1380</SUB>> ]
-"6535" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1380</SUB>> ]
-"6539" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1380</SUB>> ]
-"6546" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1380</SUB>> ]
-"6553" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1380</SUB>> ]
-"6560" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1380</SUB>> ]
-"6572" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1380</SUB>> ]
-"6578" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1380</SUB>> ]
-"6519" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1380</SUB>> ]
-"6540" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1380</SUB>> ]
-"6555" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1380</SUB>> ]
-"6561" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1380</SUB>> ]
-"6564" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1380</SUB>> ]
-"6574" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1380</SUB>> ]
-"6580" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1380</SUB>> ]
-"6520" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1380</SUB>> ]
-"6524" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1380</SUB>> ]
-"6531" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1380</SUB>> ]
-"6541" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1380</SUB>> ]
-"6543" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1380</SUB>> ]
-"6557" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1380</SUB>> ]
-"6563" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1380</SUB>> ]
-"6566" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1380</SUB>> ]
-"6525" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1380</SUB>> ]
-"6526" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1380</SUB>> ]
-"6528" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1380</SUB>> ]
-"6510" [label = <(METHOD,GetBooleanField)<SUB>1379</SUB>> ]
-"6582" [label = <(METHOD_RETURN,jboolean)<SUB>1379</SUB>> ]
+"6515" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1379</SUB>> ]
+"6549" [label = <(soa,ScopedObjectAccess)<SUB>1379</SUB>> ]
+"6551" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1379</SUB>> ]
+"6569" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1379</SUB>> ]
+"6576" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj);,GET_PRIMITIVE_FIELD(Boolean, obj);)<SUB>1379</SUB>> ]
+"6534" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1379</SUB>> ]
+"6552" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1379</SUB>> ]
+"6559" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1379</SUB>> ]
+"6571" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),jni::DecodeArtField(fid))<SUB>1379</SUB>> ]
+"6577" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),f-&gt;GetBoolean(o))<SUB>1379</SUB>> ]
+"6535" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1379</SUB>> ]
+"6539" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1379</SUB>> ]
+"6546" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1379</SUB>> ]
+"6553" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1379</SUB>> ]
+"6560" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1379</SUB>> ]
+"6572" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1379</SUB>> ]
+"6578" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1379</SUB>> ]
+"6519" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1379</SUB>> ]
+"6540" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1379</SUB>> ]
+"6555" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1379</SUB>> ]
+"6561" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1379</SUB>> ]
+"6564" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1379</SUB>> ]
+"6574" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1379</SUB>> ]
+"6580" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1379</SUB>> ]
+"6520" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1379</SUB>> ]
+"6524" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1379</SUB>> ]
+"6531" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1379</SUB>> ]
+"6541" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1379</SUB>> ]
+"6543" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1379</SUB>> ]
+"6557" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1379</SUB>> ]
+"6563" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1379</SUB>> ]
+"6566" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1379</SUB>> ]
+"6525" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1379</SUB>> ]
+"6526" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1379</SUB>> ]
+"6528" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1379</SUB>> ]
+"6510" [label = <(METHOD,GetBooleanField)<SUB>1378</SUB>> ]
+"6582" [label = <(METHOD_RETURN,jboolean)<SUB>1378</SUB>> ]
   "6515" -> "6520" 
   "6515" -> "6535" 
   "6549" -> "6557" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/119-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/119-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/119-cfg.dot	2023-06-07 19:34:22.117390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/119-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,41 +1,41 @@
 digraph "GetByteField" {  
-"6589" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1384</SUB>> ]
-"6623" [label = <(soa,ScopedObjectAccess)<SUB>1384</SUB>> ]
-"6625" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1384</SUB>> ]
-"6643" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1384</SUB>> ]
-"6650" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj);,GET_PRIMITIVE_FIELD(Byte, obj);)<SUB>1384</SUB>> ]
-"6608" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1384</SUB>> ]
-"6626" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1384</SUB>> ]
-"6633" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1384</SUB>> ]
-"6645" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),jni::DecodeArtField(fid))<SUB>1384</SUB>> ]
-"6651" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),f-&gt;GetByte(o))<SUB>1384</SUB>> ]
-"6609" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1384</SUB>> ]
-"6613" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1384</SUB>> ]
-"6620" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1384</SUB>> ]
-"6627" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1384</SUB>> ]
-"6634" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1384</SUB>> ]
-"6646" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1384</SUB>> ]
-"6652" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1384</SUB>> ]
-"6593" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1384</SUB>> ]
-"6614" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1384</SUB>> ]
-"6629" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1384</SUB>> ]
-"6635" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1384</SUB>> ]
-"6638" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1384</SUB>> ]
-"6648" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1384</SUB>> ]
-"6654" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1384</SUB>> ]
-"6594" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1384</SUB>> ]
-"6598" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1384</SUB>> ]
-"6605" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1384</SUB>> ]
-"6615" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1384</SUB>> ]
-"6617" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1384</SUB>> ]
-"6631" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1384</SUB>> ]
-"6637" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1384</SUB>> ]
-"6640" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1384</SUB>> ]
-"6599" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1384</SUB>> ]
-"6600" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1384</SUB>> ]
-"6602" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1384</SUB>> ]
-"6584" [label = <(METHOD,GetByteField)<SUB>1383</SUB>> ]
-"6656" [label = <(METHOD_RETURN,jbyte)<SUB>1383</SUB>> ]
+"6589" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1383</SUB>> ]
+"6623" [label = <(soa,ScopedObjectAccess)<SUB>1383</SUB>> ]
+"6625" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1383</SUB>> ]
+"6643" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1383</SUB>> ]
+"6650" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj);,GET_PRIMITIVE_FIELD(Byte, obj);)<SUB>1383</SUB>> ]
+"6608" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1383</SUB>> ]
+"6626" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1383</SUB>> ]
+"6633" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1383</SUB>> ]
+"6645" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),jni::DecodeArtField(fid))<SUB>1383</SUB>> ]
+"6651" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),f-&gt;GetByte(o))<SUB>1383</SUB>> ]
+"6609" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1383</SUB>> ]
+"6613" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1383</SUB>> ]
+"6620" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1383</SUB>> ]
+"6627" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1383</SUB>> ]
+"6634" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1383</SUB>> ]
+"6646" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1383</SUB>> ]
+"6652" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1383</SUB>> ]
+"6593" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1383</SUB>> ]
+"6614" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1383</SUB>> ]
+"6629" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1383</SUB>> ]
+"6635" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1383</SUB>> ]
+"6638" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1383</SUB>> ]
+"6648" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1383</SUB>> ]
+"6654" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1383</SUB>> ]
+"6594" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1383</SUB>> ]
+"6598" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1383</SUB>> ]
+"6605" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1383</SUB>> ]
+"6615" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1383</SUB>> ]
+"6617" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1383</SUB>> ]
+"6631" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1383</SUB>> ]
+"6637" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1383</SUB>> ]
+"6640" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1383</SUB>> ]
+"6599" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1383</SUB>> ]
+"6600" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1383</SUB>> ]
+"6602" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1383</SUB>> ]
+"6584" [label = <(METHOD,GetByteField)<SUB>1382</SUB>> ]
+"6656" [label = <(METHOD_RETURN,jbyte)<SUB>1382</SUB>> ]
   "6589" -> "6594" 
   "6589" -> "6609" 
   "6623" -> "6631" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/12-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/12-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/12-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/12-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,5 +1,5 @@
 digraph "FindFieldID" {  
-"388" [label = <(METHOD,FindFieldID)<SUB>275</SUB>> ]
-"395" [label = <(METHOD_RETURN,jfieldID)<SUB>275</SUB>> ]
+"388" [label = <(METHOD,FindFieldID)<SUB>274</SUB>> ]
+"395" [label = <(METHOD_RETURN,jfieldID)<SUB>274</SUB>> ]
   "388" -> "395" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/120-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/120-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/120-cfg.dot	2023-06-07 19:34:22.117390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/120-cfg.dot	2023-06-07 19:34:28.627390221 +0330
@@ -1,41 +1,41 @@
 digraph "GetCharField" {  
-"6663" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1388</SUB>> ]
-"6697" [label = <(soa,ScopedObjectAccess)<SUB>1388</SUB>> ]
-"6699" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1388</SUB>> ]
-"6717" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1388</SUB>> ]
-"6724" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj);,GET_PRIMITIVE_FIELD(Char, obj);)<SUB>1388</SUB>> ]
-"6682" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1388</SUB>> ]
-"6700" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1388</SUB>> ]
-"6707" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1388</SUB>> ]
-"6719" [label = <(GET_PRIMITIVE_FIELD(Char, obj),jni::DecodeArtField(fid))<SUB>1388</SUB>> ]
-"6725" [label = <(GET_PRIMITIVE_FIELD(Char, obj),f-&gt;GetChar(o))<SUB>1388</SUB>> ]
-"6683" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1388</SUB>> ]
-"6687" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1388</SUB>> ]
-"6694" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1388</SUB>> ]
-"6701" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1388</SUB>> ]
-"6708" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1388</SUB>> ]
-"6720" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1388</SUB>> ]
-"6726" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1388</SUB>> ]
-"6667" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1388</SUB>> ]
-"6688" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1388</SUB>> ]
-"6703" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1388</SUB>> ]
-"6709" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1388</SUB>> ]
-"6712" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1388</SUB>> ]
-"6722" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1388</SUB>> ]
-"6728" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1388</SUB>> ]
-"6668" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1388</SUB>> ]
-"6672" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1388</SUB>> ]
-"6679" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1388</SUB>> ]
-"6689" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1388</SUB>> ]
-"6691" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1388</SUB>> ]
-"6705" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1388</SUB>> ]
-"6711" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1388</SUB>> ]
-"6714" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1388</SUB>> ]
-"6673" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1388</SUB>> ]
-"6674" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1388</SUB>> ]
-"6676" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1388</SUB>> ]
-"6658" [label = <(METHOD,GetCharField)<SUB>1387</SUB>> ]
-"6730" [label = <(METHOD_RETURN,jchar)<SUB>1387</SUB>> ]
+"6663" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1387</SUB>> ]
+"6697" [label = <(soa,ScopedObjectAccess)<SUB>1387</SUB>> ]
+"6699" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1387</SUB>> ]
+"6717" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1387</SUB>> ]
+"6724" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj);,GET_PRIMITIVE_FIELD(Char, obj);)<SUB>1387</SUB>> ]
+"6682" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1387</SUB>> ]
+"6700" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1387</SUB>> ]
+"6707" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1387</SUB>> ]
+"6719" [label = <(GET_PRIMITIVE_FIELD(Char, obj),jni::DecodeArtField(fid))<SUB>1387</SUB>> ]
+"6725" [label = <(GET_PRIMITIVE_FIELD(Char, obj),f-&gt;GetChar(o))<SUB>1387</SUB>> ]
+"6683" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1387</SUB>> ]
+"6687" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1387</SUB>> ]
+"6694" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1387</SUB>> ]
+"6701" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1387</SUB>> ]
+"6708" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1387</SUB>> ]
+"6720" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1387</SUB>> ]
+"6726" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1387</SUB>> ]
+"6667" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1387</SUB>> ]
+"6688" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1387</SUB>> ]
+"6703" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1387</SUB>> ]
+"6709" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1387</SUB>> ]
+"6712" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1387</SUB>> ]
+"6722" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1387</SUB>> ]
+"6728" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1387</SUB>> ]
+"6668" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1387</SUB>> ]
+"6672" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1387</SUB>> ]
+"6679" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1387</SUB>> ]
+"6689" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1387</SUB>> ]
+"6691" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1387</SUB>> ]
+"6705" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1387</SUB>> ]
+"6711" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1387</SUB>> ]
+"6714" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1387</SUB>> ]
+"6673" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1387</SUB>> ]
+"6674" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1387</SUB>> ]
+"6676" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1387</SUB>> ]
+"6658" [label = <(METHOD,GetCharField)<SUB>1386</SUB>> ]
+"6730" [label = <(METHOD_RETURN,jchar)<SUB>1386</SUB>> ]
   "6663" -> "6668" 
   "6663" -> "6683" 
   "6697" -> "6705" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/121-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/121-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/121-cfg.dot	2023-06-07 19:34:22.117390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/121-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,41 +1,41 @@
 digraph "GetShortField" {  
-"6737" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1392</SUB>> ]
-"6771" [label = <(soa,ScopedObjectAccess)<SUB>1392</SUB>> ]
-"6773" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1392</SUB>> ]
-"6791" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1392</SUB>> ]
-"6798" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj);,GET_PRIMITIVE_FIELD(Short, obj);)<SUB>1392</SUB>> ]
-"6756" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1392</SUB>> ]
-"6774" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1392</SUB>> ]
-"6781" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1392</SUB>> ]
-"6793" [label = <(GET_PRIMITIVE_FIELD(Short, obj),jni::DecodeArtField(fid))<SUB>1392</SUB>> ]
-"6799" [label = <(GET_PRIMITIVE_FIELD(Short, obj),f-&gt;GetShort(o))<SUB>1392</SUB>> ]
-"6757" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1392</SUB>> ]
-"6761" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1392</SUB>> ]
-"6768" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1392</SUB>> ]
-"6775" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1392</SUB>> ]
-"6782" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1392</SUB>> ]
-"6794" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1392</SUB>> ]
-"6800" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1392</SUB>> ]
-"6741" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1392</SUB>> ]
-"6762" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1392</SUB>> ]
-"6777" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1392</SUB>> ]
-"6783" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1392</SUB>> ]
-"6786" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1392</SUB>> ]
-"6796" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1392</SUB>> ]
-"6802" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1392</SUB>> ]
-"6742" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1392</SUB>> ]
-"6746" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1392</SUB>> ]
-"6753" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1392</SUB>> ]
-"6763" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1392</SUB>> ]
-"6765" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1392</SUB>> ]
-"6779" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1392</SUB>> ]
-"6785" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1392</SUB>> ]
-"6788" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1392</SUB>> ]
-"6747" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1392</SUB>> ]
-"6748" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1392</SUB>> ]
-"6750" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1392</SUB>> ]
-"6732" [label = <(METHOD,GetShortField)<SUB>1391</SUB>> ]
-"6804" [label = <(METHOD_RETURN,jshort)<SUB>1391</SUB>> ]
+"6737" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1391</SUB>> ]
+"6771" [label = <(soa,ScopedObjectAccess)<SUB>1391</SUB>> ]
+"6773" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1391</SUB>> ]
+"6791" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1391</SUB>> ]
+"6798" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj);,GET_PRIMITIVE_FIELD(Short, obj);)<SUB>1391</SUB>> ]
+"6756" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1391</SUB>> ]
+"6774" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1391</SUB>> ]
+"6781" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1391</SUB>> ]
+"6793" [label = <(GET_PRIMITIVE_FIELD(Short, obj),jni::DecodeArtField(fid))<SUB>1391</SUB>> ]
+"6799" [label = <(GET_PRIMITIVE_FIELD(Short, obj),f-&gt;GetShort(o))<SUB>1391</SUB>> ]
+"6757" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1391</SUB>> ]
+"6761" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1391</SUB>> ]
+"6768" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1391</SUB>> ]
+"6775" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1391</SUB>> ]
+"6782" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1391</SUB>> ]
+"6794" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1391</SUB>> ]
+"6800" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1391</SUB>> ]
+"6741" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1391</SUB>> ]
+"6762" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1391</SUB>> ]
+"6777" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1391</SUB>> ]
+"6783" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1391</SUB>> ]
+"6786" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1391</SUB>> ]
+"6796" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1391</SUB>> ]
+"6802" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1391</SUB>> ]
+"6742" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1391</SUB>> ]
+"6746" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1391</SUB>> ]
+"6753" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1391</SUB>> ]
+"6763" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1391</SUB>> ]
+"6765" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1391</SUB>> ]
+"6779" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1391</SUB>> ]
+"6785" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1391</SUB>> ]
+"6788" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1391</SUB>> ]
+"6747" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1391</SUB>> ]
+"6748" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1391</SUB>> ]
+"6750" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1391</SUB>> ]
+"6732" [label = <(METHOD,GetShortField)<SUB>1390</SUB>> ]
+"6804" [label = <(METHOD_RETURN,jshort)<SUB>1390</SUB>> ]
   "6737" -> "6742" 
   "6737" -> "6757" 
   "6771" -> "6779" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/122-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/122-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/122-cfg.dot	2023-06-07 19:34:22.117390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/122-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,41 +1,41 @@
 digraph "GetIntField" {  
-"6811" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1396</SUB>> ]
-"6845" [label = <(soa,ScopedObjectAccess)<SUB>1396</SUB>> ]
-"6847" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1396</SUB>> ]
-"6865" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1396</SUB>> ]
-"6872" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj);,GET_PRIMITIVE_FIELD(Int, obj);)<SUB>1396</SUB>> ]
-"6830" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1396</SUB>> ]
-"6848" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1396</SUB>> ]
-"6855" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1396</SUB>> ]
-"6867" [label = <(GET_PRIMITIVE_FIELD(Int, obj),jni::DecodeArtField(fid))<SUB>1396</SUB>> ]
-"6873" [label = <(GET_PRIMITIVE_FIELD(Int, obj),f-&gt;GetInt(o))<SUB>1396</SUB>> ]
-"6831" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1396</SUB>> ]
-"6835" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1396</SUB>> ]
-"6842" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1396</SUB>> ]
-"6849" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1396</SUB>> ]
-"6856" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1396</SUB>> ]
-"6868" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1396</SUB>> ]
-"6874" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1396</SUB>> ]
-"6815" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1396</SUB>> ]
-"6836" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1396</SUB>> ]
-"6851" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1396</SUB>> ]
-"6857" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1396</SUB>> ]
-"6860" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1396</SUB>> ]
-"6870" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1396</SUB>> ]
-"6876" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1396</SUB>> ]
-"6816" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1396</SUB>> ]
-"6820" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1396</SUB>> ]
-"6827" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1396</SUB>> ]
-"6837" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1396</SUB>> ]
-"6839" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1396</SUB>> ]
-"6853" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1396</SUB>> ]
-"6859" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1396</SUB>> ]
-"6862" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1396</SUB>> ]
-"6821" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1396</SUB>> ]
-"6822" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1396</SUB>> ]
-"6824" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1396</SUB>> ]
-"6806" [label = <(METHOD,GetIntField)<SUB>1395</SUB>> ]
-"6878" [label = <(METHOD_RETURN,jint)<SUB>1395</SUB>> ]
+"6811" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1395</SUB>> ]
+"6845" [label = <(soa,ScopedObjectAccess)<SUB>1395</SUB>> ]
+"6847" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1395</SUB>> ]
+"6865" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1395</SUB>> ]
+"6872" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj);,GET_PRIMITIVE_FIELD(Int, obj);)<SUB>1395</SUB>> ]
+"6830" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1395</SUB>> ]
+"6848" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1395</SUB>> ]
+"6855" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1395</SUB>> ]
+"6867" [label = <(GET_PRIMITIVE_FIELD(Int, obj),jni::DecodeArtField(fid))<SUB>1395</SUB>> ]
+"6873" [label = <(GET_PRIMITIVE_FIELD(Int, obj),f-&gt;GetInt(o))<SUB>1395</SUB>> ]
+"6831" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1395</SUB>> ]
+"6835" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1395</SUB>> ]
+"6842" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1395</SUB>> ]
+"6849" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1395</SUB>> ]
+"6856" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1395</SUB>> ]
+"6868" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1395</SUB>> ]
+"6874" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1395</SUB>> ]
+"6815" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1395</SUB>> ]
+"6836" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1395</SUB>> ]
+"6851" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1395</SUB>> ]
+"6857" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1395</SUB>> ]
+"6860" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1395</SUB>> ]
+"6870" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1395</SUB>> ]
+"6876" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1395</SUB>> ]
+"6816" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1395</SUB>> ]
+"6820" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1395</SUB>> ]
+"6827" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1395</SUB>> ]
+"6837" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1395</SUB>> ]
+"6839" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1395</SUB>> ]
+"6853" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1395</SUB>> ]
+"6859" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1395</SUB>> ]
+"6862" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1395</SUB>> ]
+"6821" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1395</SUB>> ]
+"6822" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1395</SUB>> ]
+"6824" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1395</SUB>> ]
+"6806" [label = <(METHOD,GetIntField)<SUB>1394</SUB>> ]
+"6878" [label = <(METHOD_RETURN,jint)<SUB>1394</SUB>> ]
   "6811" -> "6816" 
   "6811" -> "6831" 
   "6845" -> "6853" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/123-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/123-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/123-cfg.dot	2023-06-07 19:34:22.117390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/123-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,41 +1,41 @@
 digraph "GetLongField" {  
-"6885" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1400</SUB>> ]
-"6919" [label = <(soa,ScopedObjectAccess)<SUB>1400</SUB>> ]
-"6921" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1400</SUB>> ]
-"6939" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1400</SUB>> ]
-"6946" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj);,GET_PRIMITIVE_FIELD(Long, obj);)<SUB>1400</SUB>> ]
-"6904" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1400</SUB>> ]
-"6922" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1400</SUB>> ]
-"6929" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1400</SUB>> ]
-"6941" [label = <(GET_PRIMITIVE_FIELD(Long, obj),jni::DecodeArtField(fid))<SUB>1400</SUB>> ]
-"6947" [label = <(GET_PRIMITIVE_FIELD(Long, obj),f-&gt;GetLong(o))<SUB>1400</SUB>> ]
-"6905" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1400</SUB>> ]
-"6909" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1400</SUB>> ]
-"6916" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1400</SUB>> ]
-"6923" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1400</SUB>> ]
-"6930" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1400</SUB>> ]
-"6942" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1400</SUB>> ]
-"6948" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1400</SUB>> ]
-"6889" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1400</SUB>> ]
-"6910" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1400</SUB>> ]
-"6925" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1400</SUB>> ]
-"6931" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1400</SUB>> ]
-"6934" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1400</SUB>> ]
-"6944" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1400</SUB>> ]
-"6950" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1400</SUB>> ]
-"6890" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1400</SUB>> ]
-"6894" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1400</SUB>> ]
-"6901" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1400</SUB>> ]
-"6911" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1400</SUB>> ]
-"6913" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1400</SUB>> ]
-"6927" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1400</SUB>> ]
-"6933" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1400</SUB>> ]
-"6936" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1400</SUB>> ]
-"6895" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1400</SUB>> ]
-"6896" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1400</SUB>> ]
-"6898" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1400</SUB>> ]
-"6880" [label = <(METHOD,GetLongField)<SUB>1399</SUB>> ]
-"6952" [label = <(METHOD_RETURN,jlong)<SUB>1399</SUB>> ]
+"6885" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1399</SUB>> ]
+"6919" [label = <(soa,ScopedObjectAccess)<SUB>1399</SUB>> ]
+"6921" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1399</SUB>> ]
+"6939" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1399</SUB>> ]
+"6946" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj);,GET_PRIMITIVE_FIELD(Long, obj);)<SUB>1399</SUB>> ]
+"6904" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1399</SUB>> ]
+"6922" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1399</SUB>> ]
+"6929" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1399</SUB>> ]
+"6941" [label = <(GET_PRIMITIVE_FIELD(Long, obj),jni::DecodeArtField(fid))<SUB>1399</SUB>> ]
+"6947" [label = <(GET_PRIMITIVE_FIELD(Long, obj),f-&gt;GetLong(o))<SUB>1399</SUB>> ]
+"6905" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1399</SUB>> ]
+"6909" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1399</SUB>> ]
+"6916" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1399</SUB>> ]
+"6923" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1399</SUB>> ]
+"6930" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1399</SUB>> ]
+"6942" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1399</SUB>> ]
+"6948" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1399</SUB>> ]
+"6889" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1399</SUB>> ]
+"6910" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1399</SUB>> ]
+"6925" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1399</SUB>> ]
+"6931" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1399</SUB>> ]
+"6934" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1399</SUB>> ]
+"6944" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1399</SUB>> ]
+"6950" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1399</SUB>> ]
+"6890" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1399</SUB>> ]
+"6894" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1399</SUB>> ]
+"6901" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1399</SUB>> ]
+"6911" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1399</SUB>> ]
+"6913" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1399</SUB>> ]
+"6927" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1399</SUB>> ]
+"6933" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1399</SUB>> ]
+"6936" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1399</SUB>> ]
+"6895" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1399</SUB>> ]
+"6896" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1399</SUB>> ]
+"6898" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1399</SUB>> ]
+"6880" [label = <(METHOD,GetLongField)<SUB>1398</SUB>> ]
+"6952" [label = <(METHOD_RETURN,jlong)<SUB>1398</SUB>> ]
   "6885" -> "6890" 
   "6885" -> "6905" 
   "6919" -> "6927" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/124-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/124-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/124-cfg.dot	2023-06-07 19:34:22.117390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/124-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,41 +1,41 @@
 digraph "GetFloatField" {  
-"6959" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1404</SUB>> ]
-"6993" [label = <(soa,ScopedObjectAccess)<SUB>1404</SUB>> ]
-"6995" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1404</SUB>> ]
-"7013" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1404</SUB>> ]
-"7020" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj);,GET_PRIMITIVE_FIELD(Float, obj);)<SUB>1404</SUB>> ]
-"6978" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1404</SUB>> ]
-"6996" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1404</SUB>> ]
-"7003" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1404</SUB>> ]
-"7015" [label = <(GET_PRIMITIVE_FIELD(Float, obj),jni::DecodeArtField(fid))<SUB>1404</SUB>> ]
-"7021" [label = <(GET_PRIMITIVE_FIELD(Float, obj),f-&gt;GetFloat(o))<SUB>1404</SUB>> ]
-"6979" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1404</SUB>> ]
-"6983" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1404</SUB>> ]
-"6990" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1404</SUB>> ]
-"6997" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1404</SUB>> ]
-"7004" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1404</SUB>> ]
-"7016" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1404</SUB>> ]
-"7022" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1404</SUB>> ]
-"6963" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1404</SUB>> ]
-"6984" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1404</SUB>> ]
-"6999" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1404</SUB>> ]
-"7005" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1404</SUB>> ]
-"7008" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1404</SUB>> ]
-"7018" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1404</SUB>> ]
-"7024" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1404</SUB>> ]
-"6964" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1404</SUB>> ]
-"6968" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1404</SUB>> ]
-"6975" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1404</SUB>> ]
-"6985" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1404</SUB>> ]
-"6987" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1404</SUB>> ]
-"7001" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1404</SUB>> ]
-"7007" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1404</SUB>> ]
-"7010" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1404</SUB>> ]
-"6969" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1404</SUB>> ]
-"6970" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1404</SUB>> ]
-"6972" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1404</SUB>> ]
-"6954" [label = <(METHOD,GetFloatField)<SUB>1403</SUB>> ]
-"7026" [label = <(METHOD_RETURN,jfloat)<SUB>1403</SUB>> ]
+"6959" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1403</SUB>> ]
+"6993" [label = <(soa,ScopedObjectAccess)<SUB>1403</SUB>> ]
+"6995" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1403</SUB>> ]
+"7013" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1403</SUB>> ]
+"7020" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj);,GET_PRIMITIVE_FIELD(Float, obj);)<SUB>1403</SUB>> ]
+"6978" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1403</SUB>> ]
+"6996" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1403</SUB>> ]
+"7003" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1403</SUB>> ]
+"7015" [label = <(GET_PRIMITIVE_FIELD(Float, obj),jni::DecodeArtField(fid))<SUB>1403</SUB>> ]
+"7021" [label = <(GET_PRIMITIVE_FIELD(Float, obj),f-&gt;GetFloat(o))<SUB>1403</SUB>> ]
+"6979" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1403</SUB>> ]
+"6983" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1403</SUB>> ]
+"6990" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1403</SUB>> ]
+"6997" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1403</SUB>> ]
+"7004" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1403</SUB>> ]
+"7016" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1403</SUB>> ]
+"7022" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1403</SUB>> ]
+"6963" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1403</SUB>> ]
+"6984" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1403</SUB>> ]
+"6999" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1403</SUB>> ]
+"7005" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1403</SUB>> ]
+"7008" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1403</SUB>> ]
+"7018" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1403</SUB>> ]
+"7024" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1403</SUB>> ]
+"6964" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1403</SUB>> ]
+"6968" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1403</SUB>> ]
+"6975" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1403</SUB>> ]
+"6985" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1403</SUB>> ]
+"6987" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1403</SUB>> ]
+"7001" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1403</SUB>> ]
+"7007" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1403</SUB>> ]
+"7010" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1403</SUB>> ]
+"6969" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1403</SUB>> ]
+"6970" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1403</SUB>> ]
+"6972" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1403</SUB>> ]
+"6954" [label = <(METHOD,GetFloatField)<SUB>1402</SUB>> ]
+"7026" [label = <(METHOD_RETURN,jfloat)<SUB>1402</SUB>> ]
   "6959" -> "6964" 
   "6959" -> "6979" 
   "6993" -> "7001" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/125-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/125-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/125-cfg.dot	2023-06-07 19:34:22.117390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/125-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,41 +1,41 @@
 digraph "GetDoubleField" {  
-"7033" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1408</SUB>> ]
-"7067" [label = <(soa,ScopedObjectAccess)<SUB>1408</SUB>> ]
-"7069" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1408</SUB>> ]
-"7087" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1408</SUB>> ]
-"7094" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj);,GET_PRIMITIVE_FIELD(Double, obj);)<SUB>1408</SUB>> ]
-"7052" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1408</SUB>> ]
-"7070" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1408</SUB>> ]
-"7077" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1408</SUB>> ]
-"7089" [label = <(GET_PRIMITIVE_FIELD(Double, obj),jni::DecodeArtField(fid))<SUB>1408</SUB>> ]
-"7095" [label = <(GET_PRIMITIVE_FIELD(Double, obj),f-&gt;GetDouble(o))<SUB>1408</SUB>> ]
-"7053" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1408</SUB>> ]
-"7057" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1408</SUB>> ]
-"7064" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1408</SUB>> ]
-"7071" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1408</SUB>> ]
-"7078" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1408</SUB>> ]
-"7090" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1408</SUB>> ]
-"7096" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1408</SUB>> ]
-"7037" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1408</SUB>> ]
-"7058" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1408</SUB>> ]
-"7073" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1408</SUB>> ]
-"7079" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1408</SUB>> ]
-"7082" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1408</SUB>> ]
-"7092" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1408</SUB>> ]
-"7098" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1408</SUB>> ]
-"7038" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1408</SUB>> ]
-"7042" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1408</SUB>> ]
-"7049" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1408</SUB>> ]
-"7059" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1408</SUB>> ]
-"7061" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1408</SUB>> ]
-"7075" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1408</SUB>> ]
-"7081" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1408</SUB>> ]
-"7084" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1408</SUB>> ]
-"7043" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1408</SUB>> ]
-"7044" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1408</SUB>> ]
-"7046" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1408</SUB>> ]
-"7028" [label = <(METHOD,GetDoubleField)<SUB>1407</SUB>> ]
-"7100" [label = <(METHOD_RETURN,jdouble)<SUB>1407</SUB>> ]
+"7033" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1407</SUB>> ]
+"7067" [label = <(soa,ScopedObjectAccess)<SUB>1407</SUB>> ]
+"7069" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1407</SUB>> ]
+"7087" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1407</SUB>> ]
+"7094" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj);,GET_PRIMITIVE_FIELD(Double, obj);)<SUB>1407</SUB>> ]
+"7052" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1407</SUB>> ]
+"7070" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1407</SUB>> ]
+"7077" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1407</SUB>> ]
+"7089" [label = <(GET_PRIMITIVE_FIELD(Double, obj),jni::DecodeArtField(fid))<SUB>1407</SUB>> ]
+"7095" [label = <(GET_PRIMITIVE_FIELD(Double, obj),f-&gt;GetDouble(o))<SUB>1407</SUB>> ]
+"7053" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1407</SUB>> ]
+"7057" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1407</SUB>> ]
+"7064" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1407</SUB>> ]
+"7071" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1407</SUB>> ]
+"7078" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1407</SUB>> ]
+"7090" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1407</SUB>> ]
+"7096" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1407</SUB>> ]
+"7037" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1407</SUB>> ]
+"7058" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1407</SUB>> ]
+"7073" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1407</SUB>> ]
+"7079" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1407</SUB>> ]
+"7082" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1407</SUB>> ]
+"7092" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1407</SUB>> ]
+"7098" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1407</SUB>> ]
+"7038" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1407</SUB>> ]
+"7042" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1407</SUB>> ]
+"7049" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1407</SUB>> ]
+"7059" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1407</SUB>> ]
+"7061" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1407</SUB>> ]
+"7075" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1407</SUB>> ]
+"7081" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1407</SUB>> ]
+"7084" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1407</SUB>> ]
+"7043" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1407</SUB>> ]
+"7044" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1407</SUB>> ]
+"7046" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1407</SUB>> ]
+"7028" [label = <(METHOD,GetDoubleField)<SUB>1406</SUB>> ]
+"7100" [label = <(METHOD_RETURN,jdouble)<SUB>1406</SUB>> ]
   "7033" -> "7038" 
   "7033" -> "7053" 
   "7067" -> "7075" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/126-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/126-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/126-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/126-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,26 +1,26 @@
 digraph "GetStaticBooleanField" {  
-"7107" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1412</SUB>> ]
-"7125" [label = <(soa,ScopedObjectAccess)<SUB>1412</SUB>> ]
-"7128" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1412</SUB>> ]
-"7135" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean);,GET_STATIC_PRIMITIVE_FIELD(Boolean);)<SUB>1412</SUB>> ]
-"7130" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),jni::DecodeArtField(fid))<SUB>1412</SUB>> ]
-"7136" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetBoolean(f-&gt;GetDeclaringClass()))<SUB>1412</SUB>> ]
-"7131" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1412</SUB>> ]
-"7137" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1412</SUB>> ]
-"7140" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetDeclaringClass())<SUB>1412</SUB>> ]
-"7110" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1412</SUB>> ]
-"7133" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1412</SUB>> ]
-"7139" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1412</SUB>> ]
-"7141" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1412</SUB>> ]
-"7111" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1412</SUB>> ]
-"7115" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1412</SUB>> ]
-"7122" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean),GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1412</SUB>> ]
-"7143" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1412</SUB>> ]
-"7116" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1412</SUB>> ]
-"7117" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1412</SUB>> ]
-"7119" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1412</SUB>> ]
-"7102" [label = <(METHOD,GetStaticBooleanField)<SUB>1411</SUB>> ]
-"7144" [label = <(METHOD_RETURN,jboolean)<SUB>1411</SUB>> ]
+"7107" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1411</SUB>> ]
+"7125" [label = <(soa,ScopedObjectAccess)<SUB>1411</SUB>> ]
+"7128" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1411</SUB>> ]
+"7135" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean);,GET_STATIC_PRIMITIVE_FIELD(Boolean);)<SUB>1411</SUB>> ]
+"7130" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),jni::DecodeArtField(fid))<SUB>1411</SUB>> ]
+"7136" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetBoolean(f-&gt;GetDeclaringClass()))<SUB>1411</SUB>> ]
+"7131" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1411</SUB>> ]
+"7137" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1411</SUB>> ]
+"7140" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetDeclaringClass())<SUB>1411</SUB>> ]
+"7110" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1411</SUB>> ]
+"7133" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1411</SUB>> ]
+"7139" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1411</SUB>> ]
+"7141" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1411</SUB>> ]
+"7111" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1411</SUB>> ]
+"7115" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1411</SUB>> ]
+"7122" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean),GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1411</SUB>> ]
+"7143" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1411</SUB>> ]
+"7116" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1411</SUB>> ]
+"7117" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1411</SUB>> ]
+"7119" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1411</SUB>> ]
+"7102" [label = <(METHOD,GetStaticBooleanField)<SUB>1410</SUB>> ]
+"7144" [label = <(METHOD_RETURN,jboolean)<SUB>1410</SUB>> ]
   "7107" -> "7111" 
   "7107" -> "7125" 
   "7125" -> "7133" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/127-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/127-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/127-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/127-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,26 +1,26 @@
 digraph "GetStaticByteField" {  
-"7151" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1416</SUB>> ]
-"7169" [label = <(soa,ScopedObjectAccess)<SUB>1416</SUB>> ]
-"7172" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1416</SUB>> ]
-"7179" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte);,GET_STATIC_PRIMITIVE_FIELD(Byte);)<SUB>1416</SUB>> ]
-"7174" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),jni::DecodeArtField(fid))<SUB>1416</SUB>> ]
-"7180" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetByte(f-&gt;GetDeclaringClass()))<SUB>1416</SUB>> ]
-"7175" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1416</SUB>> ]
-"7181" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1416</SUB>> ]
-"7184" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetDeclaringClass())<SUB>1416</SUB>> ]
-"7154" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1416</SUB>> ]
-"7177" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1416</SUB>> ]
-"7183" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1416</SUB>> ]
-"7185" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1416</SUB>> ]
-"7155" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1416</SUB>> ]
-"7159" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1416</SUB>> ]
-"7166" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte),GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1416</SUB>> ]
-"7187" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1416</SUB>> ]
-"7160" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1416</SUB>> ]
-"7161" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1416</SUB>> ]
-"7163" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1416</SUB>> ]
-"7146" [label = <(METHOD,GetStaticByteField)<SUB>1415</SUB>> ]
-"7188" [label = <(METHOD_RETURN,jbyte)<SUB>1415</SUB>> ]
+"7151" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1415</SUB>> ]
+"7169" [label = <(soa,ScopedObjectAccess)<SUB>1415</SUB>> ]
+"7172" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1415</SUB>> ]
+"7179" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte);,GET_STATIC_PRIMITIVE_FIELD(Byte);)<SUB>1415</SUB>> ]
+"7174" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),jni::DecodeArtField(fid))<SUB>1415</SUB>> ]
+"7180" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetByte(f-&gt;GetDeclaringClass()))<SUB>1415</SUB>> ]
+"7175" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1415</SUB>> ]
+"7181" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1415</SUB>> ]
+"7184" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetDeclaringClass())<SUB>1415</SUB>> ]
+"7154" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1415</SUB>> ]
+"7177" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1415</SUB>> ]
+"7183" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1415</SUB>> ]
+"7185" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1415</SUB>> ]
+"7155" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1415</SUB>> ]
+"7159" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1415</SUB>> ]
+"7166" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte),GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1415</SUB>> ]
+"7187" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1415</SUB>> ]
+"7160" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1415</SUB>> ]
+"7161" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1415</SUB>> ]
+"7163" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1415</SUB>> ]
+"7146" [label = <(METHOD,GetStaticByteField)<SUB>1414</SUB>> ]
+"7188" [label = <(METHOD_RETURN,jbyte)<SUB>1414</SUB>> ]
   "7151" -> "7155" 
   "7151" -> "7169" 
   "7169" -> "7177" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/128-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/128-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/128-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/128-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,26 +1,26 @@
 digraph "GetStaticCharField" {  
-"7195" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1420</SUB>> ]
-"7213" [label = <(soa,ScopedObjectAccess)<SUB>1420</SUB>> ]
-"7216" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1420</SUB>> ]
-"7223" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char);,GET_STATIC_PRIMITIVE_FIELD(Char);)<SUB>1420</SUB>> ]
-"7218" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),jni::DecodeArtField(fid))<SUB>1420</SUB>> ]
-"7224" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetChar(f-&gt;GetDeclaringClass()))<SUB>1420</SUB>> ]
-"7219" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1420</SUB>> ]
-"7225" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1420</SUB>> ]
-"7228" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetDeclaringClass())<SUB>1420</SUB>> ]
-"7198" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1420</SUB>> ]
-"7221" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1420</SUB>> ]
-"7227" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1420</SUB>> ]
-"7229" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1420</SUB>> ]
-"7199" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1420</SUB>> ]
-"7203" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1420</SUB>> ]
-"7210" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char),GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1420</SUB>> ]
-"7231" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1420</SUB>> ]
-"7204" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1420</SUB>> ]
-"7205" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1420</SUB>> ]
-"7207" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1420</SUB>> ]
-"7190" [label = <(METHOD,GetStaticCharField)<SUB>1419</SUB>> ]
-"7232" [label = <(METHOD_RETURN,jchar)<SUB>1419</SUB>> ]
+"7195" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1419</SUB>> ]
+"7213" [label = <(soa,ScopedObjectAccess)<SUB>1419</SUB>> ]
+"7216" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1419</SUB>> ]
+"7223" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char);,GET_STATIC_PRIMITIVE_FIELD(Char);)<SUB>1419</SUB>> ]
+"7218" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),jni::DecodeArtField(fid))<SUB>1419</SUB>> ]
+"7224" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetChar(f-&gt;GetDeclaringClass()))<SUB>1419</SUB>> ]
+"7219" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1419</SUB>> ]
+"7225" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1419</SUB>> ]
+"7228" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetDeclaringClass())<SUB>1419</SUB>> ]
+"7198" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1419</SUB>> ]
+"7221" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1419</SUB>> ]
+"7227" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1419</SUB>> ]
+"7229" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1419</SUB>> ]
+"7199" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1419</SUB>> ]
+"7203" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1419</SUB>> ]
+"7210" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char),GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1419</SUB>> ]
+"7231" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1419</SUB>> ]
+"7204" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1419</SUB>> ]
+"7205" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1419</SUB>> ]
+"7207" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1419</SUB>> ]
+"7190" [label = <(METHOD,GetStaticCharField)<SUB>1418</SUB>> ]
+"7232" [label = <(METHOD_RETURN,jchar)<SUB>1418</SUB>> ]
   "7195" -> "7199" 
   "7195" -> "7213" 
   "7213" -> "7221" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/129-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/129-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/129-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/129-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,26 +1,26 @@
 digraph "GetStaticShortField" {  
-"7239" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1424</SUB>> ]
-"7257" [label = <(soa,ScopedObjectAccess)<SUB>1424</SUB>> ]
-"7260" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1424</SUB>> ]
-"7267" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short);,GET_STATIC_PRIMITIVE_FIELD(Short);)<SUB>1424</SUB>> ]
-"7262" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),jni::DecodeArtField(fid))<SUB>1424</SUB>> ]
-"7268" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetShort(f-&gt;GetDeclaringClass()))<SUB>1424</SUB>> ]
-"7263" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1424</SUB>> ]
-"7269" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1424</SUB>> ]
-"7272" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetDeclaringClass())<SUB>1424</SUB>> ]
-"7242" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1424</SUB>> ]
-"7265" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1424</SUB>> ]
-"7271" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1424</SUB>> ]
-"7273" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1424</SUB>> ]
-"7243" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1424</SUB>> ]
-"7247" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1424</SUB>> ]
-"7254" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short),GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1424</SUB>> ]
-"7275" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1424</SUB>> ]
-"7248" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1424</SUB>> ]
-"7249" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1424</SUB>> ]
-"7251" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1424</SUB>> ]
-"7234" [label = <(METHOD,GetStaticShortField)<SUB>1423</SUB>> ]
-"7276" [label = <(METHOD_RETURN,jshort)<SUB>1423</SUB>> ]
+"7239" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1423</SUB>> ]
+"7257" [label = <(soa,ScopedObjectAccess)<SUB>1423</SUB>> ]
+"7260" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1423</SUB>> ]
+"7267" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short);,GET_STATIC_PRIMITIVE_FIELD(Short);)<SUB>1423</SUB>> ]
+"7262" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),jni::DecodeArtField(fid))<SUB>1423</SUB>> ]
+"7268" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetShort(f-&gt;GetDeclaringClass()))<SUB>1423</SUB>> ]
+"7263" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1423</SUB>> ]
+"7269" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1423</SUB>> ]
+"7272" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetDeclaringClass())<SUB>1423</SUB>> ]
+"7242" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1423</SUB>> ]
+"7265" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1423</SUB>> ]
+"7271" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1423</SUB>> ]
+"7273" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1423</SUB>> ]
+"7243" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1423</SUB>> ]
+"7247" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1423</SUB>> ]
+"7254" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short),GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1423</SUB>> ]
+"7275" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1423</SUB>> ]
+"7248" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1423</SUB>> ]
+"7249" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1423</SUB>> ]
+"7251" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1423</SUB>> ]
+"7234" [label = <(METHOD,GetStaticShortField)<SUB>1422</SUB>> ]
+"7276" [label = <(METHOD_RETURN,jshort)<SUB>1422</SUB>> ]
   "7239" -> "7243" 
   "7239" -> "7257" 
   "7257" -> "7265" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/13-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/13-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/13-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/13-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowAIOOBE" {  
-"444" [label = <(METHOD,ThrowAIOOBE)<SUB>323</SUB>> ]
-"451" [label = <(METHOD_RETURN,void)<SUB>323</SUB>> ]
+"444" [label = <(METHOD,ThrowAIOOBE)<SUB>322</SUB>> ]
+"451" [label = <(METHOD_RETURN,void)<SUB>322</SUB>> ]
   "444" -> "451" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/130-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/130-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/130-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/130-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,26 +1,26 @@
 digraph "GetStaticIntField" {  
-"7283" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1428</SUB>> ]
-"7301" [label = <(soa,ScopedObjectAccess)<SUB>1428</SUB>> ]
-"7304" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1428</SUB>> ]
-"7311" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int);,GET_STATIC_PRIMITIVE_FIELD(Int);)<SUB>1428</SUB>> ]
-"7306" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),jni::DecodeArtField(fid))<SUB>1428</SUB>> ]
-"7312" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetInt(f-&gt;GetDeclaringClass()))<SUB>1428</SUB>> ]
-"7307" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1428</SUB>> ]
-"7313" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1428</SUB>> ]
-"7316" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetDeclaringClass())<SUB>1428</SUB>> ]
-"7286" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1428</SUB>> ]
-"7309" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1428</SUB>> ]
-"7315" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1428</SUB>> ]
-"7317" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1428</SUB>> ]
-"7287" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1428</SUB>> ]
-"7291" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1428</SUB>> ]
-"7298" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int),GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1428</SUB>> ]
-"7319" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1428</SUB>> ]
-"7292" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1428</SUB>> ]
-"7293" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1428</SUB>> ]
-"7295" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1428</SUB>> ]
-"7278" [label = <(METHOD,GetStaticIntField)<SUB>1427</SUB>> ]
-"7320" [label = <(METHOD_RETURN,jint)<SUB>1427</SUB>> ]
+"7283" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1427</SUB>> ]
+"7301" [label = <(soa,ScopedObjectAccess)<SUB>1427</SUB>> ]
+"7304" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1427</SUB>> ]
+"7311" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int);,GET_STATIC_PRIMITIVE_FIELD(Int);)<SUB>1427</SUB>> ]
+"7306" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),jni::DecodeArtField(fid))<SUB>1427</SUB>> ]
+"7312" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetInt(f-&gt;GetDeclaringClass()))<SUB>1427</SUB>> ]
+"7307" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1427</SUB>> ]
+"7313" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1427</SUB>> ]
+"7316" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetDeclaringClass())<SUB>1427</SUB>> ]
+"7286" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1427</SUB>> ]
+"7309" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1427</SUB>> ]
+"7315" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1427</SUB>> ]
+"7317" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1427</SUB>> ]
+"7287" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1427</SUB>> ]
+"7291" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1427</SUB>> ]
+"7298" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int),GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1427</SUB>> ]
+"7319" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1427</SUB>> ]
+"7292" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1427</SUB>> ]
+"7293" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1427</SUB>> ]
+"7295" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1427</SUB>> ]
+"7278" [label = <(METHOD,GetStaticIntField)<SUB>1426</SUB>> ]
+"7320" [label = <(METHOD_RETURN,jint)<SUB>1426</SUB>> ]
   "7283" -> "7287" 
   "7283" -> "7301" 
   "7301" -> "7309" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/131-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/131-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/131-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/131-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,26 +1,26 @@
 digraph "GetStaticLongField" {  
-"7327" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1432</SUB>> ]
-"7345" [label = <(soa,ScopedObjectAccess)<SUB>1432</SUB>> ]
-"7348" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1432</SUB>> ]
-"7355" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long);,GET_STATIC_PRIMITIVE_FIELD(Long);)<SUB>1432</SUB>> ]
-"7350" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),jni::DecodeArtField(fid))<SUB>1432</SUB>> ]
-"7356" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetLong(f-&gt;GetDeclaringClass()))<SUB>1432</SUB>> ]
-"7351" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1432</SUB>> ]
-"7357" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1432</SUB>> ]
-"7360" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetDeclaringClass())<SUB>1432</SUB>> ]
-"7330" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1432</SUB>> ]
-"7353" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1432</SUB>> ]
-"7359" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1432</SUB>> ]
-"7361" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1432</SUB>> ]
-"7331" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1432</SUB>> ]
-"7335" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1432</SUB>> ]
-"7342" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long),GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1432</SUB>> ]
-"7363" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1432</SUB>> ]
-"7336" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1432</SUB>> ]
-"7337" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1432</SUB>> ]
-"7339" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1432</SUB>> ]
-"7322" [label = <(METHOD,GetStaticLongField)<SUB>1431</SUB>> ]
-"7364" [label = <(METHOD_RETURN,jlong)<SUB>1431</SUB>> ]
+"7327" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1431</SUB>> ]
+"7345" [label = <(soa,ScopedObjectAccess)<SUB>1431</SUB>> ]
+"7348" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1431</SUB>> ]
+"7355" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long);,GET_STATIC_PRIMITIVE_FIELD(Long);)<SUB>1431</SUB>> ]
+"7350" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),jni::DecodeArtField(fid))<SUB>1431</SUB>> ]
+"7356" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetLong(f-&gt;GetDeclaringClass()))<SUB>1431</SUB>> ]
+"7351" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1431</SUB>> ]
+"7357" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1431</SUB>> ]
+"7360" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetDeclaringClass())<SUB>1431</SUB>> ]
+"7330" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1431</SUB>> ]
+"7353" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1431</SUB>> ]
+"7359" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1431</SUB>> ]
+"7361" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1431</SUB>> ]
+"7331" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1431</SUB>> ]
+"7335" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1431</SUB>> ]
+"7342" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long),GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1431</SUB>> ]
+"7363" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1431</SUB>> ]
+"7336" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1431</SUB>> ]
+"7337" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1431</SUB>> ]
+"7339" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1431</SUB>> ]
+"7322" [label = <(METHOD,GetStaticLongField)<SUB>1430</SUB>> ]
+"7364" [label = <(METHOD_RETURN,jlong)<SUB>1430</SUB>> ]
   "7327" -> "7331" 
   "7327" -> "7345" 
   "7345" -> "7353" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/132-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/132-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/132-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/132-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,26 +1,26 @@
 digraph "GetStaticFloatField" {  
-"7371" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1436</SUB>> ]
-"7389" [label = <(soa,ScopedObjectAccess)<SUB>1436</SUB>> ]
-"7392" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1436</SUB>> ]
-"7399" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float);,GET_STATIC_PRIMITIVE_FIELD(Float);)<SUB>1436</SUB>> ]
-"7394" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),jni::DecodeArtField(fid))<SUB>1436</SUB>> ]
-"7400" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetFloat(f-&gt;GetDeclaringClass()))<SUB>1436</SUB>> ]
-"7395" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1436</SUB>> ]
-"7401" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1436</SUB>> ]
-"7404" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetDeclaringClass())<SUB>1436</SUB>> ]
-"7374" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1436</SUB>> ]
-"7397" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1436</SUB>> ]
-"7403" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1436</SUB>> ]
-"7405" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1436</SUB>> ]
-"7375" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1436</SUB>> ]
-"7379" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1436</SUB>> ]
-"7386" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float),GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1436</SUB>> ]
-"7407" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1436</SUB>> ]
-"7380" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1436</SUB>> ]
-"7381" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1436</SUB>> ]
-"7383" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1436</SUB>> ]
-"7366" [label = <(METHOD,GetStaticFloatField)<SUB>1435</SUB>> ]
-"7408" [label = <(METHOD_RETURN,jfloat)<SUB>1435</SUB>> ]
+"7371" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1435</SUB>> ]
+"7389" [label = <(soa,ScopedObjectAccess)<SUB>1435</SUB>> ]
+"7392" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1435</SUB>> ]
+"7399" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float);,GET_STATIC_PRIMITIVE_FIELD(Float);)<SUB>1435</SUB>> ]
+"7394" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),jni::DecodeArtField(fid))<SUB>1435</SUB>> ]
+"7400" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetFloat(f-&gt;GetDeclaringClass()))<SUB>1435</SUB>> ]
+"7395" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1435</SUB>> ]
+"7401" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1435</SUB>> ]
+"7404" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetDeclaringClass())<SUB>1435</SUB>> ]
+"7374" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1435</SUB>> ]
+"7397" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1435</SUB>> ]
+"7403" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1435</SUB>> ]
+"7405" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1435</SUB>> ]
+"7375" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1435</SUB>> ]
+"7379" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1435</SUB>> ]
+"7386" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float),GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1435</SUB>> ]
+"7407" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1435</SUB>> ]
+"7380" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1435</SUB>> ]
+"7381" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1435</SUB>> ]
+"7383" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1435</SUB>> ]
+"7366" [label = <(METHOD,GetStaticFloatField)<SUB>1434</SUB>> ]
+"7408" [label = <(METHOD_RETURN,jfloat)<SUB>1434</SUB>> ]
   "7371" -> "7375" 
   "7371" -> "7389" 
   "7389" -> "7397" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/133-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/133-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/133-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/133-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,26 +1,26 @@
 digraph "GetStaticDoubleField" {  
-"7415" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1440</SUB>> ]
-"7433" [label = <(soa,ScopedObjectAccess)<SUB>1440</SUB>> ]
-"7436" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1440</SUB>> ]
-"7443" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double);,GET_STATIC_PRIMITIVE_FIELD(Double);)<SUB>1440</SUB>> ]
-"7438" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),jni::DecodeArtField(fid))<SUB>1440</SUB>> ]
-"7444" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDouble(f-&gt;GetDeclaringClass()))<SUB>1440</SUB>> ]
-"7439" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1440</SUB>> ]
-"7445" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1440</SUB>> ]
-"7448" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDeclaringClass())<SUB>1440</SUB>> ]
-"7418" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1440</SUB>> ]
-"7441" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1440</SUB>> ]
-"7447" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1440</SUB>> ]
-"7449" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1440</SUB>> ]
-"7419" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1440</SUB>> ]
-"7423" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1440</SUB>> ]
-"7430" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double),GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1440</SUB>> ]
-"7451" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1440</SUB>> ]
-"7424" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1440</SUB>> ]
-"7425" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1440</SUB>> ]
-"7427" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1440</SUB>> ]
-"7410" [label = <(METHOD,GetStaticDoubleField)<SUB>1439</SUB>> ]
-"7452" [label = <(METHOD_RETURN,jdouble)<SUB>1439</SUB>> ]
+"7415" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1439</SUB>> ]
+"7433" [label = <(soa,ScopedObjectAccess)<SUB>1439</SUB>> ]
+"7436" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1439</SUB>> ]
+"7443" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double);,GET_STATIC_PRIMITIVE_FIELD(Double);)<SUB>1439</SUB>> ]
+"7438" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),jni::DecodeArtField(fid))<SUB>1439</SUB>> ]
+"7444" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDouble(f-&gt;GetDeclaringClass()))<SUB>1439</SUB>> ]
+"7439" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1439</SUB>> ]
+"7445" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1439</SUB>> ]
+"7448" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDeclaringClass())<SUB>1439</SUB>> ]
+"7418" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1439</SUB>> ]
+"7441" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1439</SUB>> ]
+"7447" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1439</SUB>> ]
+"7449" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1439</SUB>> ]
+"7419" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1439</SUB>> ]
+"7423" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1439</SUB>> ]
+"7430" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double),GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1439</SUB>> ]
+"7451" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1439</SUB>> ]
+"7424" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1439</SUB>> ]
+"7425" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1439</SUB>> ]
+"7427" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1439</SUB>> ]
+"7410" [label = <(METHOD,GetStaticDoubleField)<SUB>1438</SUB>> ]
+"7452" [label = <(METHOD_RETURN,jdouble)<SUB>1438</SUB>> ]
   "7415" -> "7419" 
   "7415" -> "7433" 
   "7433" -> "7441" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/134-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/134-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/134-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/134-cfg.dot	2023-06-07 19:34:28.637390219 +0330
@@ -1,43 +1,43 @@
 digraph "SetBooleanField" {  
-"7460" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1444</SUB>> ]
-"7492" [label = <(soa,ScopedObjectAccess)<SUB>1444</SUB>> ]
-"7494" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1444</SUB>> ]
-"7512" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1444</SUB>> ]
-"7519" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (o, v))<SUB>1444</SUB>> ]
-"7478" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1444</SUB>> ]
-"7495" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1444</SUB>> ]
-"7502" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1444</SUB>> ]
-"7514" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),jni::DecodeArtField(fid))<SUB>1444</SUB>> ]
-"7520" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1444</SUB>> ]
-"7525" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1444</SUB>> ]
-"7479" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1444</SUB>> ]
-"7483" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1444</SUB>> ]
-"7490" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1444</SUB>> ]
-"7496" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1444</SUB>> ]
-"7503" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1444</SUB>> ]
-"7515" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1444</SUB>> ]
-"7521" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1444</SUB>> ]
-"7526" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1444</SUB>> ]
-"7464" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1444</SUB>> ]
-"7484" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1444</SUB>> ]
-"7498" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1444</SUB>> ]
-"7504" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1444</SUB>> ]
-"7507" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1444</SUB>> ]
-"7517" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1444</SUB>> ]
-"7523" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1444</SUB>> ]
-"7465" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1444</SUB>> ]
-"7469" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1444</SUB>> ]
-"7476" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1444</SUB>> ]
-"7485" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1444</SUB>> ]
-"7487" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1444</SUB>> ]
-"7500" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1444</SUB>> ]
-"7506" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1444</SUB>> ]
-"7509" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1444</SUB>> ]
-"7470" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1444</SUB>> ]
-"7471" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1444</SUB>> ]
-"7473" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1444</SUB>> ]
-"7454" [label = <(METHOD,SetBooleanField)<SUB>1443</SUB>> ]
-"7529" [label = <(METHOD_RETURN,void)<SUB>1443</SUB>> ]
+"7460" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1443</SUB>> ]
+"7492" [label = <(soa,ScopedObjectAccess)<SUB>1443</SUB>> ]
+"7494" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1443</SUB>> ]
+"7512" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1443</SUB>> ]
+"7519" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (o, v))<SUB>1443</SUB>> ]
+"7478" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1443</SUB>> ]
+"7495" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1443</SUB>> ]
+"7502" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1443</SUB>> ]
+"7514" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),jni::DecodeArtField(fid))<SUB>1443</SUB>> ]
+"7520" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1443</SUB>> ]
+"7525" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1443</SUB>> ]
+"7479" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1443</SUB>> ]
+"7483" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1443</SUB>> ]
+"7490" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1443</SUB>> ]
+"7496" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1443</SUB>> ]
+"7503" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1443</SUB>> ]
+"7515" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1443</SUB>> ]
+"7521" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1443</SUB>> ]
+"7526" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1443</SUB>> ]
+"7464" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1443</SUB>> ]
+"7484" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1443</SUB>> ]
+"7498" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1443</SUB>> ]
+"7504" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1443</SUB>> ]
+"7507" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1443</SUB>> ]
+"7517" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1443</SUB>> ]
+"7523" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1443</SUB>> ]
+"7465" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1443</SUB>> ]
+"7469" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1443</SUB>> ]
+"7476" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1443</SUB>> ]
+"7485" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1443</SUB>> ]
+"7487" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1443</SUB>> ]
+"7500" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1443</SUB>> ]
+"7506" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1443</SUB>> ]
+"7509" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1443</SUB>> ]
+"7470" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1443</SUB>> ]
+"7471" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1443</SUB>> ]
+"7473" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1443</SUB>> ]
+"7454" [label = <(METHOD,SetBooleanField)<SUB>1442</SUB>> ]
+"7529" [label = <(METHOD_RETURN,void)<SUB>1442</SUB>> ]
   "7460" -> "7465" 
   "7460" -> "7479" 
   "7492" -> "7500" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/135-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/135-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/135-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/135-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,43 +1,43 @@
 digraph "SetByteField" {  
-"7537" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1448</SUB>> ]
-"7569" [label = <(soa,ScopedObjectAccess)<SUB>1448</SUB>> ]
-"7571" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1448</SUB>> ]
-"7589" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1448</SUB>> ]
-"7596" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (o, v))<SUB>1448</SUB>> ]
-"7555" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1448</SUB>> ]
-"7572" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1448</SUB>> ]
-"7579" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1448</SUB>> ]
-"7591" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),jni::DecodeArtField(fid))<SUB>1448</SUB>> ]
-"7597" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1448</SUB>> ]
-"7602" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1448</SUB>> ]
-"7556" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1448</SUB>> ]
-"7560" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1448</SUB>> ]
-"7567" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1448</SUB>> ]
-"7573" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1448</SUB>> ]
-"7580" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1448</SUB>> ]
-"7592" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1448</SUB>> ]
-"7598" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1448</SUB>> ]
-"7603" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1448</SUB>> ]
-"7541" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1448</SUB>> ]
-"7561" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1448</SUB>> ]
-"7575" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1448</SUB>> ]
-"7581" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1448</SUB>> ]
-"7584" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1448</SUB>> ]
-"7594" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1448</SUB>> ]
-"7600" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1448</SUB>> ]
-"7542" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1448</SUB>> ]
-"7546" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1448</SUB>> ]
-"7553" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1448</SUB>> ]
-"7562" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1448</SUB>> ]
-"7564" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1448</SUB>> ]
-"7577" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1448</SUB>> ]
-"7583" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1448</SUB>> ]
-"7586" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1448</SUB>> ]
-"7547" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1448</SUB>> ]
-"7548" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1448</SUB>> ]
-"7550" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1448</SUB>> ]
-"7531" [label = <(METHOD,SetByteField)<SUB>1447</SUB>> ]
-"7606" [label = <(METHOD_RETURN,void)<SUB>1447</SUB>> ]
+"7537" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1447</SUB>> ]
+"7569" [label = <(soa,ScopedObjectAccess)<SUB>1447</SUB>> ]
+"7571" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1447</SUB>> ]
+"7589" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1447</SUB>> ]
+"7596" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (o, v))<SUB>1447</SUB>> ]
+"7555" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1447</SUB>> ]
+"7572" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1447</SUB>> ]
+"7579" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1447</SUB>> ]
+"7591" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),jni::DecodeArtField(fid))<SUB>1447</SUB>> ]
+"7597" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1447</SUB>> ]
+"7602" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1447</SUB>> ]
+"7556" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1447</SUB>> ]
+"7560" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1447</SUB>> ]
+"7567" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1447</SUB>> ]
+"7573" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1447</SUB>> ]
+"7580" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1447</SUB>> ]
+"7592" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1447</SUB>> ]
+"7598" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1447</SUB>> ]
+"7603" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1447</SUB>> ]
+"7541" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1447</SUB>> ]
+"7561" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1447</SUB>> ]
+"7575" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1447</SUB>> ]
+"7581" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1447</SUB>> ]
+"7584" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1447</SUB>> ]
+"7594" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1447</SUB>> ]
+"7600" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1447</SUB>> ]
+"7542" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1447</SUB>> ]
+"7546" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1447</SUB>> ]
+"7553" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1447</SUB>> ]
+"7562" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1447</SUB>> ]
+"7564" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1447</SUB>> ]
+"7577" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1447</SUB>> ]
+"7583" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1447</SUB>> ]
+"7586" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1447</SUB>> ]
+"7547" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1447</SUB>> ]
+"7548" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1447</SUB>> ]
+"7550" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1447</SUB>> ]
+"7531" [label = <(METHOD,SetByteField)<SUB>1446</SUB>> ]
+"7606" [label = <(METHOD_RETURN,void)<SUB>1446</SUB>> ]
   "7537" -> "7542" 
   "7537" -> "7556" 
   "7569" -> "7577" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/136-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/136-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/136-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/136-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,43 +1,43 @@
 digraph "SetCharField" {  
-"7614" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1452</SUB>> ]
-"7646" [label = <(soa,ScopedObjectAccess)<SUB>1452</SUB>> ]
-"7648" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1452</SUB>> ]
-"7666" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1452</SUB>> ]
-"7673" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (o, v))<SUB>1452</SUB>> ]
-"7632" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1452</SUB>> ]
-"7649" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1452</SUB>> ]
-"7656" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1452</SUB>> ]
-"7668" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),jni::DecodeArtField(fid))<SUB>1452</SUB>> ]
-"7674" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1452</SUB>> ]
-"7679" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1452</SUB>> ]
-"7633" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1452</SUB>> ]
-"7637" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1452</SUB>> ]
-"7644" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1452</SUB>> ]
-"7650" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1452</SUB>> ]
-"7657" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1452</SUB>> ]
-"7669" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1452</SUB>> ]
-"7675" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1452</SUB>> ]
-"7680" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1452</SUB>> ]
-"7618" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1452</SUB>> ]
-"7638" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1452</SUB>> ]
-"7652" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1452</SUB>> ]
-"7658" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1452</SUB>> ]
-"7661" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1452</SUB>> ]
-"7671" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1452</SUB>> ]
-"7677" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1452</SUB>> ]
-"7619" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1452</SUB>> ]
-"7623" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1452</SUB>> ]
-"7630" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1452</SUB>> ]
-"7639" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1452</SUB>> ]
-"7641" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1452</SUB>> ]
-"7654" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1452</SUB>> ]
-"7660" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1452</SUB>> ]
-"7663" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1452</SUB>> ]
-"7624" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1452</SUB>> ]
-"7625" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1452</SUB>> ]
-"7627" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1452</SUB>> ]
-"7608" [label = <(METHOD,SetCharField)<SUB>1451</SUB>> ]
-"7683" [label = <(METHOD_RETURN,void)<SUB>1451</SUB>> ]
+"7614" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1451</SUB>> ]
+"7646" [label = <(soa,ScopedObjectAccess)<SUB>1451</SUB>> ]
+"7648" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1451</SUB>> ]
+"7666" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1451</SUB>> ]
+"7673" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (o, v))<SUB>1451</SUB>> ]
+"7632" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1451</SUB>> ]
+"7649" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1451</SUB>> ]
+"7656" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1451</SUB>> ]
+"7668" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),jni::DecodeArtField(fid))<SUB>1451</SUB>> ]
+"7674" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1451</SUB>> ]
+"7679" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1451</SUB>> ]
+"7633" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1451</SUB>> ]
+"7637" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1451</SUB>> ]
+"7644" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1451</SUB>> ]
+"7650" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1451</SUB>> ]
+"7657" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1451</SUB>> ]
+"7669" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1451</SUB>> ]
+"7675" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1451</SUB>> ]
+"7680" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1451</SUB>> ]
+"7618" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1451</SUB>> ]
+"7638" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1451</SUB>> ]
+"7652" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1451</SUB>> ]
+"7658" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1451</SUB>> ]
+"7661" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1451</SUB>> ]
+"7671" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1451</SUB>> ]
+"7677" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1451</SUB>> ]
+"7619" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1451</SUB>> ]
+"7623" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1451</SUB>> ]
+"7630" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1451</SUB>> ]
+"7639" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1451</SUB>> ]
+"7641" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1451</SUB>> ]
+"7654" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1451</SUB>> ]
+"7660" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1451</SUB>> ]
+"7663" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1451</SUB>> ]
+"7624" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1451</SUB>> ]
+"7625" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1451</SUB>> ]
+"7627" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1451</SUB>> ]
+"7608" [label = <(METHOD,SetCharField)<SUB>1450</SUB>> ]
+"7683" [label = <(METHOD_RETURN,void)<SUB>1450</SUB>> ]
   "7614" -> "7619" 
   "7614" -> "7633" 
   "7646" -> "7654" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/137-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/137-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/137-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/137-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,43 +1,43 @@
 digraph "SetFloatField" {  
-"7691" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1456</SUB>> ]
-"7723" [label = <(soa,ScopedObjectAccess)<SUB>1456</SUB>> ]
-"7725" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1456</SUB>> ]
-"7743" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1456</SUB>> ]
-"7750" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (o, v))<SUB>1456</SUB>> ]
-"7709" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1456</SUB>> ]
-"7726" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1456</SUB>> ]
-"7733" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1456</SUB>> ]
-"7745" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),jni::DecodeArtField(fid))<SUB>1456</SUB>> ]
-"7751" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1456</SUB>> ]
-"7756" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1456</SUB>> ]
-"7710" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1456</SUB>> ]
-"7714" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1456</SUB>> ]
-"7721" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1456</SUB>> ]
-"7727" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1456</SUB>> ]
-"7734" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1456</SUB>> ]
-"7746" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1456</SUB>> ]
-"7752" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1456</SUB>> ]
-"7757" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1456</SUB>> ]
-"7695" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1456</SUB>> ]
-"7715" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1456</SUB>> ]
-"7729" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1456</SUB>> ]
-"7735" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1456</SUB>> ]
-"7738" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1456</SUB>> ]
-"7748" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1456</SUB>> ]
-"7754" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1456</SUB>> ]
-"7696" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1456</SUB>> ]
-"7700" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1456</SUB>> ]
-"7707" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1456</SUB>> ]
-"7716" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1456</SUB>> ]
-"7718" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1456</SUB>> ]
-"7731" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1456</SUB>> ]
-"7737" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1456</SUB>> ]
-"7740" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1456</SUB>> ]
-"7701" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1456</SUB>> ]
-"7702" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1456</SUB>> ]
-"7704" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1456</SUB>> ]
-"7685" [label = <(METHOD,SetFloatField)<SUB>1455</SUB>> ]
-"7760" [label = <(METHOD_RETURN,void)<SUB>1455</SUB>> ]
+"7691" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1455</SUB>> ]
+"7723" [label = <(soa,ScopedObjectAccess)<SUB>1455</SUB>> ]
+"7725" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1455</SUB>> ]
+"7743" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1455</SUB>> ]
+"7750" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (o, v))<SUB>1455</SUB>> ]
+"7709" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1455</SUB>> ]
+"7726" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1455</SUB>> ]
+"7733" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1455</SUB>> ]
+"7745" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),jni::DecodeArtField(fid))<SUB>1455</SUB>> ]
+"7751" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1455</SUB>> ]
+"7756" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1455</SUB>> ]
+"7710" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1455</SUB>> ]
+"7714" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1455</SUB>> ]
+"7721" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1455</SUB>> ]
+"7727" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1455</SUB>> ]
+"7734" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1455</SUB>> ]
+"7746" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1455</SUB>> ]
+"7752" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1455</SUB>> ]
+"7757" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1455</SUB>> ]
+"7695" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1455</SUB>> ]
+"7715" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1455</SUB>> ]
+"7729" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1455</SUB>> ]
+"7735" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1455</SUB>> ]
+"7738" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1455</SUB>> ]
+"7748" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1455</SUB>> ]
+"7754" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1455</SUB>> ]
+"7696" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1455</SUB>> ]
+"7700" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1455</SUB>> ]
+"7707" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1455</SUB>> ]
+"7716" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1455</SUB>> ]
+"7718" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1455</SUB>> ]
+"7731" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1455</SUB>> ]
+"7737" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1455</SUB>> ]
+"7740" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1455</SUB>> ]
+"7701" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1455</SUB>> ]
+"7702" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1455</SUB>> ]
+"7704" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1455</SUB>> ]
+"7685" [label = <(METHOD,SetFloatField)<SUB>1454</SUB>> ]
+"7760" [label = <(METHOD_RETURN,void)<SUB>1454</SUB>> ]
   "7691" -> "7696" 
   "7691" -> "7710" 
   "7723" -> "7731" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/138-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/138-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/138-cfg.dot	2023-06-07 19:34:22.127390827 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/138-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,43 +1,43 @@
 digraph "SetDoubleField" {  
-"7768" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1460</SUB>> ]
-"7800" [label = <(soa,ScopedObjectAccess)<SUB>1460</SUB>> ]
-"7802" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1460</SUB>> ]
-"7820" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1460</SUB>> ]
-"7827" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (o, v))<SUB>1460</SUB>> ]
-"7786" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1460</SUB>> ]
-"7803" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1460</SUB>> ]
-"7810" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1460</SUB>> ]
-"7822" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),jni::DecodeArtField(fid))<SUB>1460</SUB>> ]
-"7828" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1460</SUB>> ]
-"7833" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1460</SUB>> ]
-"7787" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1460</SUB>> ]
-"7791" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1460</SUB>> ]
-"7798" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1460</SUB>> ]
-"7804" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1460</SUB>> ]
-"7811" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1460</SUB>> ]
-"7823" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1460</SUB>> ]
-"7829" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1460</SUB>> ]
-"7834" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1460</SUB>> ]
-"7772" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1460</SUB>> ]
-"7792" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1460</SUB>> ]
-"7806" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1460</SUB>> ]
-"7812" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1460</SUB>> ]
-"7815" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1460</SUB>> ]
-"7825" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1460</SUB>> ]
-"7831" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1460</SUB>> ]
-"7773" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1460</SUB>> ]
-"7777" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1460</SUB>> ]
-"7784" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1460</SUB>> ]
-"7793" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1460</SUB>> ]
-"7795" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1460</SUB>> ]
-"7808" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1460</SUB>> ]
-"7814" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1460</SUB>> ]
-"7817" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1460</SUB>> ]
-"7778" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1460</SUB>> ]
-"7779" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1460</SUB>> ]
-"7781" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1460</SUB>> ]
-"7762" [label = <(METHOD,SetDoubleField)<SUB>1459</SUB>> ]
-"7837" [label = <(METHOD_RETURN,void)<SUB>1459</SUB>> ]
+"7768" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1459</SUB>> ]
+"7800" [label = <(soa,ScopedObjectAccess)<SUB>1459</SUB>> ]
+"7802" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1459</SUB>> ]
+"7820" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1459</SUB>> ]
+"7827" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (o, v))<SUB>1459</SUB>> ]
+"7786" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1459</SUB>> ]
+"7803" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1459</SUB>> ]
+"7810" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1459</SUB>> ]
+"7822" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),jni::DecodeArtField(fid))<SUB>1459</SUB>> ]
+"7828" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1459</SUB>> ]
+"7833" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1459</SUB>> ]
+"7787" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1459</SUB>> ]
+"7791" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1459</SUB>> ]
+"7798" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1459</SUB>> ]
+"7804" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1459</SUB>> ]
+"7811" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1459</SUB>> ]
+"7823" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1459</SUB>> ]
+"7829" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1459</SUB>> ]
+"7834" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1459</SUB>> ]
+"7772" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1459</SUB>> ]
+"7792" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1459</SUB>> ]
+"7806" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1459</SUB>> ]
+"7812" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1459</SUB>> ]
+"7815" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1459</SUB>> ]
+"7825" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1459</SUB>> ]
+"7831" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1459</SUB>> ]
+"7773" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1459</SUB>> ]
+"7777" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1459</SUB>> ]
+"7784" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1459</SUB>> ]
+"7793" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1459</SUB>> ]
+"7795" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1459</SUB>> ]
+"7808" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1459</SUB>> ]
+"7814" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1459</SUB>> ]
+"7817" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1459</SUB>> ]
+"7778" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1459</SUB>> ]
+"7779" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1459</SUB>> ]
+"7781" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1459</SUB>> ]
+"7762" [label = <(METHOD,SetDoubleField)<SUB>1458</SUB>> ]
+"7837" [label = <(METHOD_RETURN,void)<SUB>1458</SUB>> ]
   "7768" -> "7773" 
   "7768" -> "7787" 
   "7800" -> "7808" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/139-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/139-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/139-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/139-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,43 +1,43 @@
 digraph "SetIntField" {  
-"7845" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1464</SUB>> ]
-"7877" [label = <(soa,ScopedObjectAccess)<SUB>1464</SUB>> ]
-"7879" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1464</SUB>> ]
-"7897" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1464</SUB>> ]
-"7904" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (o, v))<SUB>1464</SUB>> ]
-"7863" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1464</SUB>> ]
-"7880" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1464</SUB>> ]
-"7887" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1464</SUB>> ]
-"7899" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),jni::DecodeArtField(fid))<SUB>1464</SUB>> ]
-"7905" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1464</SUB>> ]
-"7910" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1464</SUB>> ]
-"7864" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1464</SUB>> ]
-"7868" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1464</SUB>> ]
-"7875" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1464</SUB>> ]
-"7881" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1464</SUB>> ]
-"7888" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1464</SUB>> ]
-"7900" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1464</SUB>> ]
-"7906" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1464</SUB>> ]
-"7911" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1464</SUB>> ]
-"7849" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1464</SUB>> ]
-"7869" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1464</SUB>> ]
-"7883" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1464</SUB>> ]
-"7889" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1464</SUB>> ]
-"7892" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1464</SUB>> ]
-"7902" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1464</SUB>> ]
-"7908" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1464</SUB>> ]
-"7850" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1464</SUB>> ]
-"7854" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1464</SUB>> ]
-"7861" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1464</SUB>> ]
-"7870" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1464</SUB>> ]
-"7872" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1464</SUB>> ]
-"7885" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1464</SUB>> ]
-"7891" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1464</SUB>> ]
-"7894" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1464</SUB>> ]
-"7855" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1464</SUB>> ]
-"7856" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1464</SUB>> ]
-"7858" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1464</SUB>> ]
-"7839" [label = <(METHOD,SetIntField)<SUB>1463</SUB>> ]
-"7914" [label = <(METHOD_RETURN,void)<SUB>1463</SUB>> ]
+"7845" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1463</SUB>> ]
+"7877" [label = <(soa,ScopedObjectAccess)<SUB>1463</SUB>> ]
+"7879" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1463</SUB>> ]
+"7897" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1463</SUB>> ]
+"7904" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (o, v))<SUB>1463</SUB>> ]
+"7863" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1463</SUB>> ]
+"7880" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1463</SUB>> ]
+"7887" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1463</SUB>> ]
+"7899" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),jni::DecodeArtField(fid))<SUB>1463</SUB>> ]
+"7905" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1463</SUB>> ]
+"7910" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1463</SUB>> ]
+"7864" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1463</SUB>> ]
+"7868" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1463</SUB>> ]
+"7875" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1463</SUB>> ]
+"7881" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1463</SUB>> ]
+"7888" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1463</SUB>> ]
+"7900" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1463</SUB>> ]
+"7906" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1463</SUB>> ]
+"7911" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1463</SUB>> ]
+"7849" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1463</SUB>> ]
+"7869" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1463</SUB>> ]
+"7883" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1463</SUB>> ]
+"7889" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1463</SUB>> ]
+"7892" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1463</SUB>> ]
+"7902" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1463</SUB>> ]
+"7908" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1463</SUB>> ]
+"7850" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1463</SUB>> ]
+"7854" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1463</SUB>> ]
+"7861" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1463</SUB>> ]
+"7870" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1463</SUB>> ]
+"7872" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1463</SUB>> ]
+"7885" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1463</SUB>> ]
+"7891" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1463</SUB>> ]
+"7894" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1463</SUB>> ]
+"7855" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1463</SUB>> ]
+"7856" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1463</SUB>> ]
+"7858" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1463</SUB>> ]
+"7839" [label = <(METHOD,SetIntField)<SUB>1462</SUB>> ]
+"7914" [label = <(METHOD_RETURN,void)<SUB>1462</SUB>> ]
   "7845" -> "7850" 
   "7845" -> "7864" 
   "7877" -> "7885" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/14-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/14-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/14-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/14-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowSIOOBE" {  
-"457" [label = <(METHOD,ThrowSIOOBE)<SUB>332</SUB>> ]
-"463" [label = <(METHOD_RETURN,void)<SUB>332</SUB>> ]
+"457" [label = <(METHOD,ThrowSIOOBE)<SUB>331</SUB>> ]
+"463" [label = <(METHOD_RETURN,void)<SUB>331</SUB>> ]
   "457" -> "463" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/140-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/140-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/140-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/140-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,43 +1,43 @@
 digraph "SetLongField" {  
-"7922" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1468</SUB>> ]
-"7954" [label = <(soa,ScopedObjectAccess)<SUB>1468</SUB>> ]
-"7956" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1468</SUB>> ]
-"7974" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1468</SUB>> ]
-"7981" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (o, v))<SUB>1468</SUB>> ]
-"7940" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1468</SUB>> ]
-"7957" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1468</SUB>> ]
-"7964" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1468</SUB>> ]
-"7976" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),jni::DecodeArtField(fid))<SUB>1468</SUB>> ]
-"7982" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1468</SUB>> ]
-"7987" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1468</SUB>> ]
-"7941" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1468</SUB>> ]
-"7945" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1468</SUB>> ]
-"7952" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1468</SUB>> ]
-"7958" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1468</SUB>> ]
-"7965" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1468</SUB>> ]
-"7977" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1468</SUB>> ]
-"7983" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1468</SUB>> ]
-"7988" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1468</SUB>> ]
-"7926" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1468</SUB>> ]
-"7946" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1468</SUB>> ]
-"7960" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1468</SUB>> ]
-"7966" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1468</SUB>> ]
-"7969" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1468</SUB>> ]
-"7979" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1468</SUB>> ]
-"7985" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1468</SUB>> ]
-"7927" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1468</SUB>> ]
-"7931" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1468</SUB>> ]
-"7938" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1468</SUB>> ]
-"7947" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1468</SUB>> ]
-"7949" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1468</SUB>> ]
-"7962" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1468</SUB>> ]
-"7968" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1468</SUB>> ]
-"7971" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1468</SUB>> ]
-"7932" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1468</SUB>> ]
-"7933" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1468</SUB>> ]
-"7935" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1468</SUB>> ]
-"7916" [label = <(METHOD,SetLongField)<SUB>1467</SUB>> ]
-"7991" [label = <(METHOD_RETURN,void)<SUB>1467</SUB>> ]
+"7922" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1467</SUB>> ]
+"7954" [label = <(soa,ScopedObjectAccess)<SUB>1467</SUB>> ]
+"7956" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1467</SUB>> ]
+"7974" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1467</SUB>> ]
+"7981" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (o, v))<SUB>1467</SUB>> ]
+"7940" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1467</SUB>> ]
+"7957" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1467</SUB>> ]
+"7964" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1467</SUB>> ]
+"7976" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),jni::DecodeArtField(fid))<SUB>1467</SUB>> ]
+"7982" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1467</SUB>> ]
+"7987" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1467</SUB>> ]
+"7941" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1467</SUB>> ]
+"7945" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1467</SUB>> ]
+"7952" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1467</SUB>> ]
+"7958" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1467</SUB>> ]
+"7965" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1467</SUB>> ]
+"7977" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1467</SUB>> ]
+"7983" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1467</SUB>> ]
+"7988" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1467</SUB>> ]
+"7926" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1467</SUB>> ]
+"7946" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1467</SUB>> ]
+"7960" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1467</SUB>> ]
+"7966" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1467</SUB>> ]
+"7969" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1467</SUB>> ]
+"7979" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1467</SUB>> ]
+"7985" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1467</SUB>> ]
+"7927" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1467</SUB>> ]
+"7931" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1467</SUB>> ]
+"7938" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1467</SUB>> ]
+"7947" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1467</SUB>> ]
+"7949" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1467</SUB>> ]
+"7962" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1467</SUB>> ]
+"7968" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1467</SUB>> ]
+"7971" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1467</SUB>> ]
+"7932" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1467</SUB>> ]
+"7933" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1467</SUB>> ]
+"7935" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1467</SUB>> ]
+"7916" [label = <(METHOD,SetLongField)<SUB>1466</SUB>> ]
+"7991" [label = <(METHOD_RETURN,void)<SUB>1466</SUB>> ]
   "7922" -> "7927" 
   "7922" -> "7941" 
   "7954" -> "7962" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/141-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/141-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/141-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/141-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,43 +1,43 @@
 digraph "SetShortField" {  
-"7999" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1472</SUB>> ]
-"8031" [label = <(soa,ScopedObjectAccess)<SUB>1472</SUB>> ]
-"8033" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1472</SUB>> ]
-"8051" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1472</SUB>> ]
-"8058" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (o, v))<SUB>1472</SUB>> ]
-"8017" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1472</SUB>> ]
-"8034" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1472</SUB>> ]
-"8041" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1472</SUB>> ]
-"8053" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),jni::DecodeArtField(fid))<SUB>1472</SUB>> ]
-"8059" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1472</SUB>> ]
-"8064" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1472</SUB>> ]
-"8018" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1472</SUB>> ]
-"8022" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1472</SUB>> ]
-"8029" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1472</SUB>> ]
-"8035" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1472</SUB>> ]
-"8042" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1472</SUB>> ]
-"8054" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1472</SUB>> ]
-"8060" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1472</SUB>> ]
-"8065" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1472</SUB>> ]
-"8003" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1472</SUB>> ]
-"8023" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1472</SUB>> ]
-"8037" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1472</SUB>> ]
-"8043" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1472</SUB>> ]
-"8046" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1472</SUB>> ]
-"8056" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1472</SUB>> ]
-"8062" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1472</SUB>> ]
-"8004" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1472</SUB>> ]
-"8008" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1472</SUB>> ]
-"8015" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1472</SUB>> ]
-"8024" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1472</SUB>> ]
-"8026" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1472</SUB>> ]
-"8039" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1472</SUB>> ]
-"8045" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1472</SUB>> ]
-"8048" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1472</SUB>> ]
-"8009" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1472</SUB>> ]
-"8010" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1472</SUB>> ]
-"8012" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1472</SUB>> ]
-"7993" [label = <(METHOD,SetShortField)<SUB>1471</SUB>> ]
-"8068" [label = <(METHOD_RETURN,void)<SUB>1471</SUB>> ]
+"7999" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1471</SUB>> ]
+"8031" [label = <(soa,ScopedObjectAccess)<SUB>1471</SUB>> ]
+"8033" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1471</SUB>> ]
+"8051" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1471</SUB>> ]
+"8058" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (o, v))<SUB>1471</SUB>> ]
+"8017" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1471</SUB>> ]
+"8034" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1471</SUB>> ]
+"8041" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1471</SUB>> ]
+"8053" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),jni::DecodeArtField(fid))<SUB>1471</SUB>> ]
+"8059" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1471</SUB>> ]
+"8064" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1471</SUB>> ]
+"8018" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1471</SUB>> ]
+"8022" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1471</SUB>> ]
+"8029" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1471</SUB>> ]
+"8035" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1471</SUB>> ]
+"8042" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1471</SUB>> ]
+"8054" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1471</SUB>> ]
+"8060" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1471</SUB>> ]
+"8065" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1471</SUB>> ]
+"8003" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1471</SUB>> ]
+"8023" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1471</SUB>> ]
+"8037" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1471</SUB>> ]
+"8043" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1471</SUB>> ]
+"8046" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1471</SUB>> ]
+"8056" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1471</SUB>> ]
+"8062" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1471</SUB>> ]
+"8004" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1471</SUB>> ]
+"8008" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1471</SUB>> ]
+"8015" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1471</SUB>> ]
+"8024" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1471</SUB>> ]
+"8026" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1471</SUB>> ]
+"8039" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1471</SUB>> ]
+"8045" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1471</SUB>> ]
+"8048" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1471</SUB>> ]
+"8009" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1471</SUB>> ]
+"8010" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1471</SUB>> ]
+"8012" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1471</SUB>> ]
+"7993" [label = <(METHOD,SetShortField)<SUB>1470</SUB>> ]
+"8068" [label = <(METHOD_RETURN,void)<SUB>1470</SUB>> ]
   "7999" -> "8004" 
   "7999" -> "8018" 
   "8031" -> "8039" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/142-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/142-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/142-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/142-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,28 +1,28 @@
 digraph "SetStaticBooleanField" {  
-"8076" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1476</SUB>> ]
-"8093" [label = <(soa,ScopedObjectAccess)<SUB>1476</SUB>> ]
-"8096" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1476</SUB>> ]
-"8103" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1476</SUB>> ]
-"8098" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),jni::DecodeArtField(fid))<SUB>1476</SUB>> ]
-"8104" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1476</SUB>> ]
-"8109" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1476</SUB>> ]
-"8099" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1476</SUB>> ]
-"8105" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1476</SUB>> ]
-"8110" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1476</SUB>> ]
-"8079" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1476</SUB>> ]
-"8101" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1476</SUB>> ]
-"8107" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1476</SUB>> ]
-"8111" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),f-&gt;GetDeclaringClass())<SUB>1476</SUB>> ]
-"8080" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1476</SUB>> ]
-"8084" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1476</SUB>> ]
-"8091" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Boolean, v),SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1476</SUB>> ]
-"8112" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1476</SUB>> ]
-"8085" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1476</SUB>> ]
-"8114" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1476</SUB>> ]
-"8086" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1476</SUB>> ]
-"8088" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1476</SUB>> ]
-"8070" [label = <(METHOD,SetStaticBooleanField)<SUB>1475</SUB>> ]
-"8116" [label = <(METHOD_RETURN,void)<SUB>1475</SUB>> ]
+"8076" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1475</SUB>> ]
+"8093" [label = <(soa,ScopedObjectAccess)<SUB>1475</SUB>> ]
+"8096" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1475</SUB>> ]
+"8103" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1475</SUB>> ]
+"8098" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),jni::DecodeArtField(fid))<SUB>1475</SUB>> ]
+"8104" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1475</SUB>> ]
+"8109" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1475</SUB>> ]
+"8099" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1475</SUB>> ]
+"8105" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1475</SUB>> ]
+"8110" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1475</SUB>> ]
+"8079" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1475</SUB>> ]
+"8101" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1475</SUB>> ]
+"8107" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1475</SUB>> ]
+"8111" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),f-&gt;GetDeclaringClass())<SUB>1475</SUB>> ]
+"8080" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1475</SUB>> ]
+"8084" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1475</SUB>> ]
+"8091" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Boolean, v),SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1475</SUB>> ]
+"8112" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1475</SUB>> ]
+"8085" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1475</SUB>> ]
+"8114" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1475</SUB>> ]
+"8086" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1475</SUB>> ]
+"8088" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1475</SUB>> ]
+"8070" [label = <(METHOD,SetStaticBooleanField)<SUB>1474</SUB>> ]
+"8116" [label = <(METHOD_RETURN,void)<SUB>1474</SUB>> ]
   "8076" -> "8080" 
   "8076" -> "8093" 
   "8093" -> "8101" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/143-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/143-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/143-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/143-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,28 +1,28 @@
 digraph "SetStaticByteField" {  
-"8124" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1480</SUB>> ]
-"8141" [label = <(soa,ScopedObjectAccess)<SUB>1480</SUB>> ]
-"8144" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1480</SUB>> ]
-"8151" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1480</SUB>> ]
-"8146" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),jni::DecodeArtField(fid))<SUB>1480</SUB>> ]
-"8152" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1480</SUB>> ]
-"8157" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1480</SUB>> ]
-"8147" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1480</SUB>> ]
-"8153" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1480</SUB>> ]
-"8158" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1480</SUB>> ]
-"8127" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1480</SUB>> ]
-"8149" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1480</SUB>> ]
-"8155" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1480</SUB>> ]
-"8159" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),f-&gt;GetDeclaringClass())<SUB>1480</SUB>> ]
-"8128" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1480</SUB>> ]
-"8132" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1480</SUB>> ]
-"8139" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Byte, v),SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1480</SUB>> ]
-"8160" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1480</SUB>> ]
-"8133" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1480</SUB>> ]
-"8162" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1480</SUB>> ]
-"8134" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1480</SUB>> ]
-"8136" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1480</SUB>> ]
-"8118" [label = <(METHOD,SetStaticByteField)<SUB>1479</SUB>> ]
-"8164" [label = <(METHOD_RETURN,void)<SUB>1479</SUB>> ]
+"8124" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1479</SUB>> ]
+"8141" [label = <(soa,ScopedObjectAccess)<SUB>1479</SUB>> ]
+"8144" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1479</SUB>> ]
+"8151" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1479</SUB>> ]
+"8146" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),jni::DecodeArtField(fid))<SUB>1479</SUB>> ]
+"8152" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1479</SUB>> ]
+"8157" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1479</SUB>> ]
+"8147" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1479</SUB>> ]
+"8153" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1479</SUB>> ]
+"8158" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1479</SUB>> ]
+"8127" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1479</SUB>> ]
+"8149" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1479</SUB>> ]
+"8155" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1479</SUB>> ]
+"8159" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),f-&gt;GetDeclaringClass())<SUB>1479</SUB>> ]
+"8128" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1479</SUB>> ]
+"8132" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1479</SUB>> ]
+"8139" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Byte, v),SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1479</SUB>> ]
+"8160" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1479</SUB>> ]
+"8133" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1479</SUB>> ]
+"8162" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1479</SUB>> ]
+"8134" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1479</SUB>> ]
+"8136" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1479</SUB>> ]
+"8118" [label = <(METHOD,SetStaticByteField)<SUB>1478</SUB>> ]
+"8164" [label = <(METHOD_RETURN,void)<SUB>1478</SUB>> ]
   "8124" -> "8128" 
   "8124" -> "8141" 
   "8141" -> "8149" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/144-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/144-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/144-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/144-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,28 +1,28 @@
 digraph "SetStaticCharField" {  
-"8172" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1484</SUB>> ]
-"8189" [label = <(soa,ScopedObjectAccess)<SUB>1484</SUB>> ]
-"8192" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1484</SUB>> ]
-"8199" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1484</SUB>> ]
-"8194" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),jni::DecodeArtField(fid))<SUB>1484</SUB>> ]
-"8200" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1484</SUB>> ]
-"8205" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1484</SUB>> ]
-"8195" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1484</SUB>> ]
-"8201" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1484</SUB>> ]
-"8206" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1484</SUB>> ]
-"8175" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1484</SUB>> ]
-"8197" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1484</SUB>> ]
-"8203" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1484</SUB>> ]
-"8207" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),f-&gt;GetDeclaringClass())<SUB>1484</SUB>> ]
-"8176" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1484</SUB>> ]
-"8180" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1484</SUB>> ]
-"8187" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Char, v),SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1484</SUB>> ]
-"8208" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1484</SUB>> ]
-"8181" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1484</SUB>> ]
-"8210" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1484</SUB>> ]
-"8182" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1484</SUB>> ]
-"8184" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1484</SUB>> ]
-"8166" [label = <(METHOD,SetStaticCharField)<SUB>1483</SUB>> ]
-"8212" [label = <(METHOD_RETURN,void)<SUB>1483</SUB>> ]
+"8172" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1483</SUB>> ]
+"8189" [label = <(soa,ScopedObjectAccess)<SUB>1483</SUB>> ]
+"8192" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1483</SUB>> ]
+"8199" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1483</SUB>> ]
+"8194" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),jni::DecodeArtField(fid))<SUB>1483</SUB>> ]
+"8200" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1483</SUB>> ]
+"8205" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1483</SUB>> ]
+"8195" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1483</SUB>> ]
+"8201" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1483</SUB>> ]
+"8206" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1483</SUB>> ]
+"8175" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1483</SUB>> ]
+"8197" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1483</SUB>> ]
+"8203" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1483</SUB>> ]
+"8207" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),f-&gt;GetDeclaringClass())<SUB>1483</SUB>> ]
+"8176" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1483</SUB>> ]
+"8180" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1483</SUB>> ]
+"8187" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Char, v),SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1483</SUB>> ]
+"8208" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1483</SUB>> ]
+"8181" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1483</SUB>> ]
+"8210" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1483</SUB>> ]
+"8182" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1483</SUB>> ]
+"8184" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1483</SUB>> ]
+"8166" [label = <(METHOD,SetStaticCharField)<SUB>1482</SUB>> ]
+"8212" [label = <(METHOD_RETURN,void)<SUB>1482</SUB>> ]
   "8172" -> "8176" 
   "8172" -> "8189" 
   "8189" -> "8197" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/145-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/145-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/145-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/145-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,28 +1,28 @@
 digraph "SetStaticFloatField" {  
-"8220" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1488</SUB>> ]
-"8237" [label = <(soa,ScopedObjectAccess)<SUB>1488</SUB>> ]
-"8240" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1488</SUB>> ]
-"8247" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1488</SUB>> ]
-"8242" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),jni::DecodeArtField(fid))<SUB>1488</SUB>> ]
-"8248" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1488</SUB>> ]
-"8253" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1488</SUB>> ]
-"8243" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1488</SUB>> ]
-"8249" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1488</SUB>> ]
-"8254" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1488</SUB>> ]
-"8223" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1488</SUB>> ]
-"8245" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1488</SUB>> ]
-"8251" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1488</SUB>> ]
-"8255" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),f-&gt;GetDeclaringClass())<SUB>1488</SUB>> ]
-"8224" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1488</SUB>> ]
-"8228" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1488</SUB>> ]
-"8235" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Float, v),SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1488</SUB>> ]
-"8256" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1488</SUB>> ]
-"8229" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1488</SUB>> ]
-"8258" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1488</SUB>> ]
-"8230" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1488</SUB>> ]
-"8232" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1488</SUB>> ]
-"8214" [label = <(METHOD,SetStaticFloatField)<SUB>1487</SUB>> ]
-"8260" [label = <(METHOD_RETURN,void)<SUB>1487</SUB>> ]
+"8220" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1487</SUB>> ]
+"8237" [label = <(soa,ScopedObjectAccess)<SUB>1487</SUB>> ]
+"8240" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1487</SUB>> ]
+"8247" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1487</SUB>> ]
+"8242" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),jni::DecodeArtField(fid))<SUB>1487</SUB>> ]
+"8248" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1487</SUB>> ]
+"8253" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1487</SUB>> ]
+"8243" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1487</SUB>> ]
+"8249" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1487</SUB>> ]
+"8254" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1487</SUB>> ]
+"8223" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1487</SUB>> ]
+"8245" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1487</SUB>> ]
+"8251" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1487</SUB>> ]
+"8255" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),f-&gt;GetDeclaringClass())<SUB>1487</SUB>> ]
+"8224" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1487</SUB>> ]
+"8228" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1487</SUB>> ]
+"8235" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Float, v),SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1487</SUB>> ]
+"8256" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1487</SUB>> ]
+"8229" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1487</SUB>> ]
+"8258" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1487</SUB>> ]
+"8230" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1487</SUB>> ]
+"8232" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1487</SUB>> ]
+"8214" [label = <(METHOD,SetStaticFloatField)<SUB>1486</SUB>> ]
+"8260" [label = <(METHOD_RETURN,void)<SUB>1486</SUB>> ]
   "8220" -> "8224" 
   "8220" -> "8237" 
   "8237" -> "8245" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/146-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/146-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/146-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/146-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,28 +1,28 @@
 digraph "SetStaticDoubleField" {  
-"8268" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1492</SUB>> ]
-"8285" [label = <(soa,ScopedObjectAccess)<SUB>1492</SUB>> ]
-"8288" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1492</SUB>> ]
-"8295" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1492</SUB>> ]
-"8290" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),jni::DecodeArtField(fid))<SUB>1492</SUB>> ]
-"8296" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1492</SUB>> ]
-"8301" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1492</SUB>> ]
-"8291" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1492</SUB>> ]
-"8297" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1492</SUB>> ]
-"8302" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1492</SUB>> ]
-"8271" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1492</SUB>> ]
-"8293" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1492</SUB>> ]
-"8299" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1492</SUB>> ]
-"8303" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),f-&gt;GetDeclaringClass())<SUB>1492</SUB>> ]
-"8272" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1492</SUB>> ]
-"8276" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1492</SUB>> ]
-"8283" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Double, v),SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1492</SUB>> ]
-"8304" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1492</SUB>> ]
-"8277" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1492</SUB>> ]
-"8306" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1492</SUB>> ]
-"8278" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1492</SUB>> ]
-"8280" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1492</SUB>> ]
-"8262" [label = <(METHOD,SetStaticDoubleField)<SUB>1491</SUB>> ]
-"8308" [label = <(METHOD_RETURN,void)<SUB>1491</SUB>> ]
+"8268" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1491</SUB>> ]
+"8285" [label = <(soa,ScopedObjectAccess)<SUB>1491</SUB>> ]
+"8288" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1491</SUB>> ]
+"8295" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1491</SUB>> ]
+"8290" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),jni::DecodeArtField(fid))<SUB>1491</SUB>> ]
+"8296" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1491</SUB>> ]
+"8301" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1491</SUB>> ]
+"8291" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1491</SUB>> ]
+"8297" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1491</SUB>> ]
+"8302" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1491</SUB>> ]
+"8271" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1491</SUB>> ]
+"8293" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1491</SUB>> ]
+"8299" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1491</SUB>> ]
+"8303" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),f-&gt;GetDeclaringClass())<SUB>1491</SUB>> ]
+"8272" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1491</SUB>> ]
+"8276" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1491</SUB>> ]
+"8283" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Double, v),SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1491</SUB>> ]
+"8304" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1491</SUB>> ]
+"8277" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1491</SUB>> ]
+"8306" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1491</SUB>> ]
+"8278" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1491</SUB>> ]
+"8280" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1491</SUB>> ]
+"8262" [label = <(METHOD,SetStaticDoubleField)<SUB>1490</SUB>> ]
+"8308" [label = <(METHOD_RETURN,void)<SUB>1490</SUB>> ]
   "8268" -> "8272" 
   "8268" -> "8285" 
   "8285" -> "8293" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/147-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/147-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/147-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/147-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,28 +1,28 @@
 digraph "SetStaticIntField" {  
-"8316" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1496</SUB>> ]
-"8333" [label = <(soa,ScopedObjectAccess)<SUB>1496</SUB>> ]
-"8336" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1496</SUB>> ]
-"8343" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1496</SUB>> ]
-"8338" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),jni::DecodeArtField(fid))<SUB>1496</SUB>> ]
-"8344" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1496</SUB>> ]
-"8349" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1496</SUB>> ]
-"8339" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1496</SUB>> ]
-"8345" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1496</SUB>> ]
-"8350" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1496</SUB>> ]
-"8319" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1496</SUB>> ]
-"8341" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1496</SUB>> ]
-"8347" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1496</SUB>> ]
-"8351" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),f-&gt;GetDeclaringClass())<SUB>1496</SUB>> ]
-"8320" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1496</SUB>> ]
-"8324" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1496</SUB>> ]
-"8331" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Int, v),SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1496</SUB>> ]
-"8352" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1496</SUB>> ]
-"8325" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1496</SUB>> ]
-"8354" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1496</SUB>> ]
-"8326" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1496</SUB>> ]
-"8328" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1496</SUB>> ]
-"8310" [label = <(METHOD,SetStaticIntField)<SUB>1495</SUB>> ]
-"8356" [label = <(METHOD_RETURN,void)<SUB>1495</SUB>> ]
+"8316" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1495</SUB>> ]
+"8333" [label = <(soa,ScopedObjectAccess)<SUB>1495</SUB>> ]
+"8336" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1495</SUB>> ]
+"8343" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1495</SUB>> ]
+"8338" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),jni::DecodeArtField(fid))<SUB>1495</SUB>> ]
+"8344" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1495</SUB>> ]
+"8349" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1495</SUB>> ]
+"8339" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1495</SUB>> ]
+"8345" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1495</SUB>> ]
+"8350" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1495</SUB>> ]
+"8319" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1495</SUB>> ]
+"8341" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1495</SUB>> ]
+"8347" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1495</SUB>> ]
+"8351" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),f-&gt;GetDeclaringClass())<SUB>1495</SUB>> ]
+"8320" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1495</SUB>> ]
+"8324" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1495</SUB>> ]
+"8331" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Int, v),SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1495</SUB>> ]
+"8352" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1495</SUB>> ]
+"8325" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1495</SUB>> ]
+"8354" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1495</SUB>> ]
+"8326" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1495</SUB>> ]
+"8328" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1495</SUB>> ]
+"8310" [label = <(METHOD,SetStaticIntField)<SUB>1494</SUB>> ]
+"8356" [label = <(METHOD_RETURN,void)<SUB>1494</SUB>> ]
   "8316" -> "8320" 
   "8316" -> "8333" 
   "8333" -> "8341" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/148-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/148-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/148-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/148-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,28 +1,28 @@
 digraph "SetStaticLongField" {  
-"8364" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1500</SUB>> ]
-"8381" [label = <(soa,ScopedObjectAccess)<SUB>1500</SUB>> ]
-"8384" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1500</SUB>> ]
-"8391" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1500</SUB>> ]
-"8386" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),jni::DecodeArtField(fid))<SUB>1500</SUB>> ]
-"8392" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1500</SUB>> ]
-"8397" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1500</SUB>> ]
-"8387" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1500</SUB>> ]
-"8393" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1500</SUB>> ]
-"8398" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1500</SUB>> ]
-"8367" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1500</SUB>> ]
-"8389" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1500</SUB>> ]
-"8395" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1500</SUB>> ]
-"8399" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),f-&gt;GetDeclaringClass())<SUB>1500</SUB>> ]
-"8368" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1500</SUB>> ]
-"8372" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1500</SUB>> ]
-"8379" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Long, v),SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1500</SUB>> ]
-"8400" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1500</SUB>> ]
-"8373" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1500</SUB>> ]
-"8402" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1500</SUB>> ]
-"8374" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1500</SUB>> ]
-"8376" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1500</SUB>> ]
-"8358" [label = <(METHOD,SetStaticLongField)<SUB>1499</SUB>> ]
-"8404" [label = <(METHOD_RETURN,void)<SUB>1499</SUB>> ]
+"8364" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1499</SUB>> ]
+"8381" [label = <(soa,ScopedObjectAccess)<SUB>1499</SUB>> ]
+"8384" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1499</SUB>> ]
+"8391" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1499</SUB>> ]
+"8386" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),jni::DecodeArtField(fid))<SUB>1499</SUB>> ]
+"8392" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1499</SUB>> ]
+"8397" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1499</SUB>> ]
+"8387" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1499</SUB>> ]
+"8393" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1499</SUB>> ]
+"8398" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1499</SUB>> ]
+"8367" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1499</SUB>> ]
+"8389" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1499</SUB>> ]
+"8395" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1499</SUB>> ]
+"8399" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),f-&gt;GetDeclaringClass())<SUB>1499</SUB>> ]
+"8368" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1499</SUB>> ]
+"8372" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1499</SUB>> ]
+"8379" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Long, v),SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1499</SUB>> ]
+"8400" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1499</SUB>> ]
+"8373" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1499</SUB>> ]
+"8402" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1499</SUB>> ]
+"8374" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1499</SUB>> ]
+"8376" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1499</SUB>> ]
+"8358" [label = <(METHOD,SetStaticLongField)<SUB>1498</SUB>> ]
+"8404" [label = <(METHOD_RETURN,void)<SUB>1498</SUB>> ]
   "8364" -> "8368" 
   "8364" -> "8381" 
   "8381" -> "8389" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/149-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/149-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/149-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/149-cfg.dot	2023-06-07 19:34:28.647390220 +0330
@@ -1,28 +1,28 @@
 digraph "SetStaticShortField" {  
-"8412" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1504</SUB>> ]
-"8429" [label = <(soa,ScopedObjectAccess)<SUB>1504</SUB>> ]
-"8432" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1504</SUB>> ]
-"8439" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1504</SUB>> ]
-"8434" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),jni::DecodeArtField(fid))<SUB>1504</SUB>> ]
-"8440" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1504</SUB>> ]
-"8445" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1504</SUB>> ]
-"8435" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1504</SUB>> ]
-"8441" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1504</SUB>> ]
-"8446" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1504</SUB>> ]
-"8415" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1504</SUB>> ]
-"8437" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1504</SUB>> ]
-"8443" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1504</SUB>> ]
-"8447" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),f-&gt;GetDeclaringClass())<SUB>1504</SUB>> ]
-"8416" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1504</SUB>> ]
-"8420" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1504</SUB>> ]
-"8427" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Short, v),SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1504</SUB>> ]
-"8448" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1504</SUB>> ]
-"8421" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1504</SUB>> ]
-"8450" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1504</SUB>> ]
-"8422" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1504</SUB>> ]
-"8424" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1504</SUB>> ]
-"8406" [label = <(METHOD,SetStaticShortField)<SUB>1503</SUB>> ]
-"8452" [label = <(METHOD_RETURN,void)<SUB>1503</SUB>> ]
+"8412" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1503</SUB>> ]
+"8429" [label = <(soa,ScopedObjectAccess)<SUB>1503</SUB>> ]
+"8432" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1503</SUB>> ]
+"8439" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1503</SUB>> ]
+"8434" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),jni::DecodeArtField(fid))<SUB>1503</SUB>> ]
+"8440" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1503</SUB>> ]
+"8445" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1503</SUB>> ]
+"8435" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1503</SUB>> ]
+"8441" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1503</SUB>> ]
+"8446" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1503</SUB>> ]
+"8415" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1503</SUB>> ]
+"8437" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1503</SUB>> ]
+"8443" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1503</SUB>> ]
+"8447" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),f-&gt;GetDeclaringClass())<SUB>1503</SUB>> ]
+"8416" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1503</SUB>> ]
+"8420" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>1503</SUB>> ]
+"8427" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Short, v),SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1503</SUB>> ]
+"8448" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1503</SUB>> ]
+"8421" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1503</SUB>> ]
+"8450" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1503</SUB>> ]
+"8422" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1503</SUB>> ]
+"8424" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1503</SUB>> ]
+"8406" [label = <(METHOD,SetStaticShortField)<SUB>1502</SUB>> ]
+"8452" [label = <(METHOD_RETURN,void)<SUB>1502</SUB>> ]
   "8412" -> "8416" 
   "8412" -> "8429" 
   "8429" -> "8437" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/15-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/15-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/15-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/15-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowNewException" {  
-"468" [label = <(METHOD,ThrowNewException)<SUB>340</SUB>> ]
-"474" [label = <(METHOD_RETURN,int)<SUB>340</SUB>> ]
+"468" [label = <(METHOD,ThrowNewException)<SUB>339</SUB>> ]
+"474" [label = <(METHOD_RETURN,int)<SUB>339</SUB>> ]
   "468" -> "474" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/150-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/150-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/150-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/150-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,28 +1,28 @@
 digraph "CallStaticObjectMethod" {  
-"8460" [label = <(va_start,va_start(ap, mid))<SUB>1509</SUB>> ]
-"8463" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1510</SUB>> ]
-"8482" [label = <(soa,soa(env))<SUB>1511</SUB>> ]
-"8485" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1512</SUB>> ]
-"8492" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1513</SUB>> ]
-"8504" [label = <(va_end,va_end(ap))<SUB>1514</SUB>> ]
-"8506" [label = <(RETURN,return local_result;,return local_result;)<SUB>1515</SUB>> ]
-"8486" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1512</SUB>> ]
-"8494" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1513</SUB>> ]
-"8495" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1513</SUB>> ]
-"8500" [label = <(GetL,result.GetL())<SUB>1513</SUB>> ]
-"8467" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1510</SUB>> ]
-"8496" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1513</SUB>> ]
-"8501" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1513</SUB>> ]
-"8468" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1510</SUB>> ]
-"8472" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1510</SUB>> ]
-"8479" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1510</SUB>> ]
-"8498" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1513</SUB>> ]
-"8503" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1513</SUB>> ]
-"8473" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1510</SUB>> ]
-"8474" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1510</SUB>> ]
-"8476" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1510</SUB>> ]
-"8454" [label = <(METHOD,CallStaticObjectMethod)<SUB>1507</SUB>> ]
-"8508" [label = <(METHOD_RETURN,jobject)<SUB>1507</SUB>> ]
+"8460" [label = <(va_start,va_start(ap, mid))<SUB>1508</SUB>> ]
+"8463" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1509</SUB>> ]
+"8482" [label = <(soa,soa(env))<SUB>1510</SUB>> ]
+"8485" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1511</SUB>> ]
+"8492" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1512</SUB>> ]
+"8504" [label = <(va_end,va_end(ap))<SUB>1513</SUB>> ]
+"8506" [label = <(RETURN,return local_result;,return local_result;)<SUB>1514</SUB>> ]
+"8486" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1511</SUB>> ]
+"8494" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1512</SUB>> ]
+"8495" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1512</SUB>> ]
+"8500" [label = <(GetL,result.GetL())<SUB>1512</SUB>> ]
+"8467" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1509</SUB>> ]
+"8496" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1512</SUB>> ]
+"8501" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1512</SUB>> ]
+"8468" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1509</SUB>> ]
+"8472" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1509</SUB>> ]
+"8479" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1509</SUB>> ]
+"8498" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1512</SUB>> ]
+"8503" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1512</SUB>> ]
+"8473" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1509</SUB>> ]
+"8474" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1509</SUB>> ]
+"8476" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1509</SUB>> ]
+"8454" [label = <(METHOD,CallStaticObjectMethod)<SUB>1506</SUB>> ]
+"8508" [label = <(METHOD_RETURN,jobject)<SUB>1506</SUB>> ]
   "8460" -> "8463" 
   "8463" -> "8468" 
   "8463" -> "8482" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/151-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/151-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/151-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/151-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,25 +1,25 @@
 digraph "CallStaticObjectMethodV" {  
-"8516" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1519</SUB>> ]
-"8535" [label = <(soa,soa(env))<SUB>1520</SUB>> ]
-"8538" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, args)))<SUB>1521</SUB>> ]
-"8544" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1522</SUB>> ]
-"8539" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1521</SUB>> ]
-"8545" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1522</SUB>> ]
-"8546" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1522</SUB>> ]
-"8551" [label = <(GetL,result.GetL())<SUB>1522</SUB>> ]
-"8520" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1519</SUB>> ]
-"8547" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1522</SUB>> ]
-"8552" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1522</SUB>> ]
-"8521" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1519</SUB>> ]
-"8525" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1519</SUB>> ]
-"8532" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1519</SUB>> ]
-"8549" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1522</SUB>> ]
-"8554" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1522</SUB>> ]
-"8526" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1519</SUB>> ]
-"8527" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1519</SUB>> ]
-"8529" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1519</SUB>> ]
-"8510" [label = <(METHOD,CallStaticObjectMethodV)<SUB>1518</SUB>> ]
-"8555" [label = <(METHOD_RETURN,jobject)<SUB>1518</SUB>> ]
+"8516" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1518</SUB>> ]
+"8535" [label = <(soa,soa(env))<SUB>1519</SUB>> ]
+"8538" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, args)))<SUB>1520</SUB>> ]
+"8544" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1521</SUB>> ]
+"8539" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1520</SUB>> ]
+"8545" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1521</SUB>> ]
+"8546" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1521</SUB>> ]
+"8551" [label = <(GetL,result.GetL())<SUB>1521</SUB>> ]
+"8520" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1518</SUB>> ]
+"8547" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1521</SUB>> ]
+"8552" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1521</SUB>> ]
+"8521" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1518</SUB>> ]
+"8525" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1518</SUB>> ]
+"8532" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1518</SUB>> ]
+"8549" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1521</SUB>> ]
+"8554" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1521</SUB>> ]
+"8526" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1518</SUB>> ]
+"8527" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1518</SUB>> ]
+"8529" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1518</SUB>> ]
+"8510" [label = <(METHOD,CallStaticObjectMethodV)<SUB>1517</SUB>> ]
+"8555" [label = <(METHOD_RETURN,jobject)<SUB>1517</SUB>> ]
   "8516" -> "8521" 
   "8516" -> "8535" 
   "8535" -> "8539" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/152-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/152-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/152-cfg.dot	2023-06-07 19:34:22.137390826 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/152-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,25 +1,25 @@
 digraph "CallStaticObjectMethodA" {  
-"8563" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1526</SUB>> ]
-"8582" [label = <(soa,soa(env))<SUB>1527</SUB>> ]
-"8585" [label = <(result,result(InvokeWithJValues(soa, nullptr, mid, args)))<SUB>1528</SUB>> ]
-"8591" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1529</SUB>> ]
-"8586" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1528</SUB>> ]
-"8592" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1529</SUB>> ]
-"8593" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1529</SUB>> ]
-"8598" [label = <(GetL,result.GetL())<SUB>1529</SUB>> ]
-"8567" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1526</SUB>> ]
-"8594" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1529</SUB>> ]
-"8599" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1529</SUB>> ]
-"8568" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1526</SUB>> ]
-"8572" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1526</SUB>> ]
-"8579" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1526</SUB>> ]
-"8596" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1529</SUB>> ]
-"8601" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1529</SUB>> ]
-"8573" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1526</SUB>> ]
-"8574" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1526</SUB>> ]
-"8576" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1526</SUB>> ]
-"8557" [label = <(METHOD,CallStaticObjectMethodA)<SUB>1525</SUB>> ]
-"8602" [label = <(METHOD_RETURN,jobject)<SUB>1525</SUB>> ]
+"8563" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1525</SUB>> ]
+"8582" [label = <(soa,soa(env))<SUB>1526</SUB>> ]
+"8585" [label = <(result,result(InvokeWithJValues(soa, nullptr, mid, args)))<SUB>1527</SUB>> ]
+"8591" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1528</SUB>> ]
+"8586" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1527</SUB>> ]
+"8592" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1528</SUB>> ]
+"8593" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1528</SUB>> ]
+"8598" [label = <(GetL,result.GetL())<SUB>1528</SUB>> ]
+"8567" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1525</SUB>> ]
+"8594" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1528</SUB>> ]
+"8599" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1528</SUB>> ]
+"8568" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1525</SUB>> ]
+"8572" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1525</SUB>> ]
+"8579" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1525</SUB>> ]
+"8596" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1528</SUB>> ]
+"8601" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1528</SUB>> ]
+"8573" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1525</SUB>> ]
+"8574" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1525</SUB>> ]
+"8576" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1525</SUB>> ]
+"8557" [label = <(METHOD,CallStaticObjectMethodA)<SUB>1524</SUB>> ]
+"8602" [label = <(METHOD_RETURN,jobject)<SUB>1524</SUB>> ]
   "8563" -> "8568" 
   "8563" -> "8582" 
   "8582" -> "8586" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/153-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/153-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/153-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/153-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,23 +1,23 @@
 digraph "CallStaticBooleanMethod" {  
-"8610" [label = <(va_start,va_start(ap, mid))<SUB>1534</SUB>> ]
-"8613" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1535</SUB>> ]
-"8632" [label = <(soa,soa(env))<SUB>1536</SUB>> ]
-"8635" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1537</SUB>> ]
-"8641" [label = <(va_end,va_end(ap))<SUB>1538</SUB>> ]
-"8643" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1539</SUB>> ]
-"8636" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1537</SUB>> ]
-"8644" [label = <(GetZ,result.GetZ())<SUB>1539</SUB>> ]
-"8645" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1539</SUB>> ]
-"8617" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1535</SUB>> ]
-"8647" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1539</SUB>> ]
-"8618" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1535</SUB>> ]
-"8622" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1535</SUB>> ]
-"8629" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1535</SUB>> ]
-"8623" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1535</SUB>> ]
-"8624" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1535</SUB>> ]
-"8626" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1535</SUB>> ]
-"8604" [label = <(METHOD,CallStaticBooleanMethod)<SUB>1532</SUB>> ]
-"8648" [label = <(METHOD_RETURN,jboolean)<SUB>1532</SUB>> ]
+"8610" [label = <(va_start,va_start(ap, mid))<SUB>1533</SUB>> ]
+"8613" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1534</SUB>> ]
+"8632" [label = <(soa,soa(env))<SUB>1535</SUB>> ]
+"8635" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1536</SUB>> ]
+"8641" [label = <(va_end,va_end(ap))<SUB>1537</SUB>> ]
+"8643" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1538</SUB>> ]
+"8636" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1536</SUB>> ]
+"8644" [label = <(GetZ,result.GetZ())<SUB>1538</SUB>> ]
+"8645" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1538</SUB>> ]
+"8617" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1534</SUB>> ]
+"8647" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1538</SUB>> ]
+"8618" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1534</SUB>> ]
+"8622" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1534</SUB>> ]
+"8629" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1534</SUB>> ]
+"8623" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1534</SUB>> ]
+"8624" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1534</SUB>> ]
+"8626" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1534</SUB>> ]
+"8604" [label = <(METHOD,CallStaticBooleanMethod)<SUB>1531</SUB>> ]
+"8648" [label = <(METHOD_RETURN,jboolean)<SUB>1531</SUB>> ]
   "8610" -> "8613" 
   "8613" -> "8618" 
   "8613" -> "8632" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/154-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/154-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/154-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/154-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticBooleanMethodV" {  
-"8656" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1543</SUB>> ]
-"8675" [label = <(soa,soa(env))<SUB>1544</SUB>> ]
-"8677" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();)<SUB>1545</SUB>> ]
-"8678" [label = <(GetZ,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ())<SUB>1545</SUB>> ]
-"8679" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ)<SUB>1545</SUB>> ]
-"8660" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1543</SUB>> ]
-"8680" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1545</SUB>> ]
-"8685" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1545</SUB>> ]
-"8661" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1543</SUB>> ]
-"8665" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1543</SUB>> ]
-"8672" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1543</SUB>> ]
-"8666" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1543</SUB>> ]
-"8667" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1543</SUB>> ]
-"8669" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1543</SUB>> ]
-"8650" [label = <(METHOD,CallStaticBooleanMethodV)<SUB>1542</SUB>> ]
-"8686" [label = <(METHOD_RETURN,jboolean)<SUB>1542</SUB>> ]
+"8656" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1542</SUB>> ]
+"8675" [label = <(soa,soa(env))<SUB>1543</SUB>> ]
+"8677" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();)<SUB>1544</SUB>> ]
+"8678" [label = <(GetZ,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ())<SUB>1544</SUB>> ]
+"8679" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ)<SUB>1544</SUB>> ]
+"8660" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1542</SUB>> ]
+"8680" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1544</SUB>> ]
+"8685" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1544</SUB>> ]
+"8661" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1542</SUB>> ]
+"8665" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1542</SUB>> ]
+"8672" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1542</SUB>> ]
+"8666" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1542</SUB>> ]
+"8667" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1542</SUB>> ]
+"8669" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1542</SUB>> ]
+"8650" [label = <(METHOD,CallStaticBooleanMethodV)<SUB>1541</SUB>> ]
+"8686" [label = <(METHOD_RETURN,jboolean)<SUB>1541</SUB>> ]
   "8656" -> "8661" 
   "8656" -> "8675" 
   "8675" -> "8680" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/155-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/155-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/155-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/155-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticBooleanMethodA" {  
-"8694" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1549</SUB>> ]
-"8713" [label = <(soa,soa(env))<SUB>1550</SUB>> ]
-"8715" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();)<SUB>1551</SUB>> ]
-"8716" [label = <(GetZ,InvokeWithJValues(soa, nullptr, mid, args).GetZ())<SUB>1551</SUB>> ]
-"8717" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetZ)<SUB>1551</SUB>> ]
-"8698" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1549</SUB>> ]
-"8718" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1551</SUB>> ]
-"8723" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1551</SUB>> ]
-"8699" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1549</SUB>> ]
-"8703" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1549</SUB>> ]
-"8710" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1549</SUB>> ]
-"8704" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1549</SUB>> ]
-"8705" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1549</SUB>> ]
-"8707" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1549</SUB>> ]
-"8688" [label = <(METHOD,CallStaticBooleanMethodA)<SUB>1548</SUB>> ]
-"8724" [label = <(METHOD_RETURN,jboolean)<SUB>1548</SUB>> ]
+"8694" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1548</SUB>> ]
+"8713" [label = <(soa,soa(env))<SUB>1549</SUB>> ]
+"8715" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();)<SUB>1550</SUB>> ]
+"8716" [label = <(GetZ,InvokeWithJValues(soa, nullptr, mid, args).GetZ())<SUB>1550</SUB>> ]
+"8717" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetZ)<SUB>1550</SUB>> ]
+"8698" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1548</SUB>> ]
+"8718" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1550</SUB>> ]
+"8723" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1550</SUB>> ]
+"8699" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1548</SUB>> ]
+"8703" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1548</SUB>> ]
+"8710" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1548</SUB>> ]
+"8704" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1548</SUB>> ]
+"8705" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1548</SUB>> ]
+"8707" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1548</SUB>> ]
+"8688" [label = <(METHOD,CallStaticBooleanMethodA)<SUB>1547</SUB>> ]
+"8724" [label = <(METHOD_RETURN,jboolean)<SUB>1547</SUB>> ]
   "8694" -> "8699" 
   "8694" -> "8713" 
   "8713" -> "8718" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/156-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/156-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/156-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/156-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,23 +1,23 @@
 digraph "CallStaticByteMethod" {  
-"8732" [label = <(va_start,va_start(ap, mid))<SUB>1556</SUB>> ]
-"8735" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1557</SUB>> ]
-"8754" [label = <(soa,soa(env))<SUB>1558</SUB>> ]
-"8757" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1559</SUB>> ]
-"8763" [label = <(va_end,va_end(ap))<SUB>1560</SUB>> ]
-"8765" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1561</SUB>> ]
-"8758" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1559</SUB>> ]
-"8766" [label = <(GetB,result.GetB())<SUB>1561</SUB>> ]
-"8767" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1561</SUB>> ]
-"8739" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1557</SUB>> ]
-"8769" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1561</SUB>> ]
-"8740" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1557</SUB>> ]
-"8744" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1557</SUB>> ]
-"8751" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1557</SUB>> ]
-"8745" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1557</SUB>> ]
-"8746" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1557</SUB>> ]
-"8748" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1557</SUB>> ]
-"8726" [label = <(METHOD,CallStaticByteMethod)<SUB>1554</SUB>> ]
-"8770" [label = <(METHOD_RETURN,jbyte)<SUB>1554</SUB>> ]
+"8732" [label = <(va_start,va_start(ap, mid))<SUB>1555</SUB>> ]
+"8735" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1556</SUB>> ]
+"8754" [label = <(soa,soa(env))<SUB>1557</SUB>> ]
+"8757" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1558</SUB>> ]
+"8763" [label = <(va_end,va_end(ap))<SUB>1559</SUB>> ]
+"8765" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1560</SUB>> ]
+"8758" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1558</SUB>> ]
+"8766" [label = <(GetB,result.GetB())<SUB>1560</SUB>> ]
+"8767" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1560</SUB>> ]
+"8739" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1556</SUB>> ]
+"8769" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1560</SUB>> ]
+"8740" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1556</SUB>> ]
+"8744" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1556</SUB>> ]
+"8751" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1556</SUB>> ]
+"8745" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1556</SUB>> ]
+"8746" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1556</SUB>> ]
+"8748" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1556</SUB>> ]
+"8726" [label = <(METHOD,CallStaticByteMethod)<SUB>1553</SUB>> ]
+"8770" [label = <(METHOD_RETURN,jbyte)<SUB>1553</SUB>> ]
   "8732" -> "8735" 
   "8735" -> "8740" 
   "8735" -> "8754" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/157-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/157-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/157-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/157-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticByteMethodV" {  
-"8778" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1565</SUB>> ]
-"8797" [label = <(soa,soa(env))<SUB>1566</SUB>> ]
-"8799" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();)<SUB>1567</SUB>> ]
-"8800" [label = <(GetB,InvokeWithVarArgs(soa, nullptr, mid, args).GetB())<SUB>1567</SUB>> ]
-"8801" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetB)<SUB>1567</SUB>> ]
-"8782" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1565</SUB>> ]
-"8802" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1567</SUB>> ]
-"8807" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1567</SUB>> ]
-"8783" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1565</SUB>> ]
-"8787" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1565</SUB>> ]
-"8794" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1565</SUB>> ]
-"8788" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1565</SUB>> ]
-"8789" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1565</SUB>> ]
-"8791" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1565</SUB>> ]
-"8772" [label = <(METHOD,CallStaticByteMethodV)<SUB>1564</SUB>> ]
-"8808" [label = <(METHOD_RETURN,jbyte)<SUB>1564</SUB>> ]
+"8778" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1564</SUB>> ]
+"8797" [label = <(soa,soa(env))<SUB>1565</SUB>> ]
+"8799" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();)<SUB>1566</SUB>> ]
+"8800" [label = <(GetB,InvokeWithVarArgs(soa, nullptr, mid, args).GetB())<SUB>1566</SUB>> ]
+"8801" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetB)<SUB>1566</SUB>> ]
+"8782" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1564</SUB>> ]
+"8802" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1566</SUB>> ]
+"8807" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1566</SUB>> ]
+"8783" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1564</SUB>> ]
+"8787" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1564</SUB>> ]
+"8794" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1564</SUB>> ]
+"8788" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1564</SUB>> ]
+"8789" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1564</SUB>> ]
+"8791" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1564</SUB>> ]
+"8772" [label = <(METHOD,CallStaticByteMethodV)<SUB>1563</SUB>> ]
+"8808" [label = <(METHOD_RETURN,jbyte)<SUB>1563</SUB>> ]
   "8778" -> "8783" 
   "8778" -> "8797" 
   "8797" -> "8802" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/158-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/158-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/158-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/158-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticByteMethodA" {  
-"8816" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1571</SUB>> ]
-"8835" [label = <(soa,soa(env))<SUB>1572</SUB>> ]
-"8837" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetB();,return InvokeWithJValues(soa, nullptr, mid, args).GetB();)<SUB>1573</SUB>> ]
-"8838" [label = <(GetB,InvokeWithJValues(soa, nullptr, mid, args).GetB())<SUB>1573</SUB>> ]
-"8839" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetB)<SUB>1573</SUB>> ]
-"8820" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1571</SUB>> ]
-"8840" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1573</SUB>> ]
-"8845" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1573</SUB>> ]
-"8821" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1571</SUB>> ]
-"8825" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1571</SUB>> ]
-"8832" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1571</SUB>> ]
-"8826" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1571</SUB>> ]
-"8827" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1571</SUB>> ]
-"8829" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1571</SUB>> ]
-"8810" [label = <(METHOD,CallStaticByteMethodA)<SUB>1570</SUB>> ]
-"8846" [label = <(METHOD_RETURN,jbyte)<SUB>1570</SUB>> ]
+"8816" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1570</SUB>> ]
+"8835" [label = <(soa,soa(env))<SUB>1571</SUB>> ]
+"8837" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetB();,return InvokeWithJValues(soa, nullptr, mid, args).GetB();)<SUB>1572</SUB>> ]
+"8838" [label = <(GetB,InvokeWithJValues(soa, nullptr, mid, args).GetB())<SUB>1572</SUB>> ]
+"8839" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetB)<SUB>1572</SUB>> ]
+"8820" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1570</SUB>> ]
+"8840" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1572</SUB>> ]
+"8845" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1572</SUB>> ]
+"8821" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1570</SUB>> ]
+"8825" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1570</SUB>> ]
+"8832" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1570</SUB>> ]
+"8826" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1570</SUB>> ]
+"8827" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1570</SUB>> ]
+"8829" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1570</SUB>> ]
+"8810" [label = <(METHOD,CallStaticByteMethodA)<SUB>1569</SUB>> ]
+"8846" [label = <(METHOD_RETURN,jbyte)<SUB>1569</SUB>> ]
   "8816" -> "8821" 
   "8816" -> "8835" 
   "8835" -> "8840" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/159-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/159-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/159-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/159-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,23 +1,23 @@
 digraph "CallStaticCharMethod" {  
-"8854" [label = <(va_start,va_start(ap, mid))<SUB>1578</SUB>> ]
-"8857" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1579</SUB>> ]
-"8876" [label = <(soa,soa(env))<SUB>1580</SUB>> ]
-"8879" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1581</SUB>> ]
-"8885" [label = <(va_end,va_end(ap))<SUB>1582</SUB>> ]
-"8887" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1583</SUB>> ]
-"8880" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1581</SUB>> ]
-"8888" [label = <(GetC,result.GetC())<SUB>1583</SUB>> ]
-"8889" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1583</SUB>> ]
-"8861" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1579</SUB>> ]
-"8891" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1583</SUB>> ]
-"8862" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1579</SUB>> ]
-"8866" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1579</SUB>> ]
-"8873" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1579</SUB>> ]
-"8867" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1579</SUB>> ]
-"8868" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1579</SUB>> ]
-"8870" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1579</SUB>> ]
-"8848" [label = <(METHOD,CallStaticCharMethod)<SUB>1576</SUB>> ]
-"8892" [label = <(METHOD_RETURN,jchar)<SUB>1576</SUB>> ]
+"8854" [label = <(va_start,va_start(ap, mid))<SUB>1577</SUB>> ]
+"8857" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1578</SUB>> ]
+"8876" [label = <(soa,soa(env))<SUB>1579</SUB>> ]
+"8879" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1580</SUB>> ]
+"8885" [label = <(va_end,va_end(ap))<SUB>1581</SUB>> ]
+"8887" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1582</SUB>> ]
+"8880" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1580</SUB>> ]
+"8888" [label = <(GetC,result.GetC())<SUB>1582</SUB>> ]
+"8889" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1582</SUB>> ]
+"8861" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1578</SUB>> ]
+"8891" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1582</SUB>> ]
+"8862" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1578</SUB>> ]
+"8866" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1578</SUB>> ]
+"8873" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1578</SUB>> ]
+"8867" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1578</SUB>> ]
+"8868" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1578</SUB>> ]
+"8870" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1578</SUB>> ]
+"8848" [label = <(METHOD,CallStaticCharMethod)<SUB>1575</SUB>> ]
+"8892" [label = <(METHOD_RETURN,jchar)<SUB>1575</SUB>> ]
   "8854" -> "8857" 
   "8857" -> "8862" 
   "8857" -> "8876" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/16-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/16-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/16-cfg.dot	2023-06-07 19:34:22.017390836 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/16-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,11 +1,11 @@
 digraph "JavaVmExtFromEnv" {  
-"481" [label = <(RETURN,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm;,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm;)<SUB>383</SUB>> ]
-"482" [label = <(&lt;operator&gt;.indirectFieldAccess,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>383</SUB>> ]
-"483" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNIEnvExt*&gt;(env))<SUB>383</SUB>> ]
-"486" [label = <(FIELD_IDENTIFIER,vm,vm)<SUB>383</SUB>> ]
-"484" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>383</SUB>> ]
-"478" [label = <(METHOD,JavaVmExtFromEnv)<SUB>382</SUB>> ]
-"487" [label = <(METHOD_RETURN,JavaVMExt)<SUB>382</SUB>> ]
+"481" [label = <(RETURN,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm;,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm;)<SUB>382</SUB>> ]
+"482" [label = <(&lt;operator&gt;.indirectFieldAccess,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>382</SUB>> ]
+"483" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNIEnvExt*&gt;(env))<SUB>382</SUB>> ]
+"486" [label = <(FIELD_IDENTIFIER,vm,vm)<SUB>382</SUB>> ]
+"484" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>382</SUB>> ]
+"478" [label = <(METHOD,JavaVmExtFromEnv)<SUB>381</SUB>> ]
+"487" [label = <(METHOD_RETURN,JavaVMExt)<SUB>381</SUB>> ]
   "481" -> "487" 
   "482" -> "481" 
   "483" -> "486" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/160-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/160-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/160-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/160-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticCharMethodV" {  
-"8900" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1587</SUB>> ]
-"8919" [label = <(soa,soa(env))<SUB>1588</SUB>> ]
-"8921" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();)<SUB>1589</SUB>> ]
-"8922" [label = <(GetC,InvokeWithVarArgs(soa, nullptr, mid, args).GetC())<SUB>1589</SUB>> ]
-"8923" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetC)<SUB>1589</SUB>> ]
-"8904" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1587</SUB>> ]
-"8924" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1589</SUB>> ]
-"8929" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1589</SUB>> ]
-"8905" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1587</SUB>> ]
-"8909" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1587</SUB>> ]
-"8916" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1587</SUB>> ]
-"8910" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1587</SUB>> ]
-"8911" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1587</SUB>> ]
-"8913" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1587</SUB>> ]
-"8894" [label = <(METHOD,CallStaticCharMethodV)<SUB>1586</SUB>> ]
-"8930" [label = <(METHOD_RETURN,jchar)<SUB>1586</SUB>> ]
+"8900" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1586</SUB>> ]
+"8919" [label = <(soa,soa(env))<SUB>1587</SUB>> ]
+"8921" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();)<SUB>1588</SUB>> ]
+"8922" [label = <(GetC,InvokeWithVarArgs(soa, nullptr, mid, args).GetC())<SUB>1588</SUB>> ]
+"8923" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetC)<SUB>1588</SUB>> ]
+"8904" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1586</SUB>> ]
+"8924" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1588</SUB>> ]
+"8929" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1588</SUB>> ]
+"8905" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1586</SUB>> ]
+"8909" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1586</SUB>> ]
+"8916" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1586</SUB>> ]
+"8910" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1586</SUB>> ]
+"8911" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1586</SUB>> ]
+"8913" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1586</SUB>> ]
+"8894" [label = <(METHOD,CallStaticCharMethodV)<SUB>1585</SUB>> ]
+"8930" [label = <(METHOD_RETURN,jchar)<SUB>1585</SUB>> ]
   "8900" -> "8905" 
   "8900" -> "8919" 
   "8919" -> "8924" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/161-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/161-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/161-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/161-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticCharMethodA" {  
-"8938" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1593</SUB>> ]
-"8957" [label = <(soa,soa(env))<SUB>1594</SUB>> ]
-"8959" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetC();,return InvokeWithJValues(soa, nullptr, mid, args).GetC();)<SUB>1595</SUB>> ]
-"8960" [label = <(GetC,InvokeWithJValues(soa, nullptr, mid, args).GetC())<SUB>1595</SUB>> ]
-"8961" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetC)<SUB>1595</SUB>> ]
-"8942" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1593</SUB>> ]
-"8962" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1595</SUB>> ]
-"8967" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1595</SUB>> ]
-"8943" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1593</SUB>> ]
-"8947" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1593</SUB>> ]
-"8954" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1593</SUB>> ]
-"8948" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1593</SUB>> ]
-"8949" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1593</SUB>> ]
-"8951" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1593</SUB>> ]
-"8932" [label = <(METHOD,CallStaticCharMethodA)<SUB>1592</SUB>> ]
-"8968" [label = <(METHOD_RETURN,jchar)<SUB>1592</SUB>> ]
+"8938" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1592</SUB>> ]
+"8957" [label = <(soa,soa(env))<SUB>1593</SUB>> ]
+"8959" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetC();,return InvokeWithJValues(soa, nullptr, mid, args).GetC();)<SUB>1594</SUB>> ]
+"8960" [label = <(GetC,InvokeWithJValues(soa, nullptr, mid, args).GetC())<SUB>1594</SUB>> ]
+"8961" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetC)<SUB>1594</SUB>> ]
+"8942" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1592</SUB>> ]
+"8962" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1594</SUB>> ]
+"8967" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1594</SUB>> ]
+"8943" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1592</SUB>> ]
+"8947" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1592</SUB>> ]
+"8954" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1592</SUB>> ]
+"8948" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1592</SUB>> ]
+"8949" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1592</SUB>> ]
+"8951" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1592</SUB>> ]
+"8932" [label = <(METHOD,CallStaticCharMethodA)<SUB>1591</SUB>> ]
+"8968" [label = <(METHOD_RETURN,jchar)<SUB>1591</SUB>> ]
   "8938" -> "8943" 
   "8938" -> "8957" 
   "8957" -> "8962" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/162-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/162-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/162-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/162-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,23 +1,23 @@
 digraph "CallStaticShortMethod" {  
-"8976" [label = <(va_start,va_start(ap, mid))<SUB>1600</SUB>> ]
-"8979" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1601</SUB>> ]
-"8998" [label = <(soa,soa(env))<SUB>1602</SUB>> ]
-"9001" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1603</SUB>> ]
-"9007" [label = <(va_end,va_end(ap))<SUB>1604</SUB>> ]
-"9009" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1605</SUB>> ]
-"9002" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1603</SUB>> ]
-"9010" [label = <(GetS,result.GetS())<SUB>1605</SUB>> ]
-"9011" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1605</SUB>> ]
-"8983" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1601</SUB>> ]
-"9013" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1605</SUB>> ]
-"8984" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1601</SUB>> ]
-"8988" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1601</SUB>> ]
-"8995" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1601</SUB>> ]
-"8989" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1601</SUB>> ]
-"8990" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1601</SUB>> ]
-"8992" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1601</SUB>> ]
-"8970" [label = <(METHOD,CallStaticShortMethod)<SUB>1598</SUB>> ]
-"9014" [label = <(METHOD_RETURN,jshort)<SUB>1598</SUB>> ]
+"8976" [label = <(va_start,va_start(ap, mid))<SUB>1599</SUB>> ]
+"8979" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1600</SUB>> ]
+"8998" [label = <(soa,soa(env))<SUB>1601</SUB>> ]
+"9001" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1602</SUB>> ]
+"9007" [label = <(va_end,va_end(ap))<SUB>1603</SUB>> ]
+"9009" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1604</SUB>> ]
+"9002" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1602</SUB>> ]
+"9010" [label = <(GetS,result.GetS())<SUB>1604</SUB>> ]
+"9011" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1604</SUB>> ]
+"8983" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1600</SUB>> ]
+"9013" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1604</SUB>> ]
+"8984" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1600</SUB>> ]
+"8988" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1600</SUB>> ]
+"8995" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1600</SUB>> ]
+"8989" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1600</SUB>> ]
+"8990" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1600</SUB>> ]
+"8992" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1600</SUB>> ]
+"8970" [label = <(METHOD,CallStaticShortMethod)<SUB>1597</SUB>> ]
+"9014" [label = <(METHOD_RETURN,jshort)<SUB>1597</SUB>> ]
   "8976" -> "8979" 
   "8979" -> "8984" 
   "8979" -> "8998" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/163-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/163-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/163-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/163-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticShortMethodV" {  
-"9022" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1609</SUB>> ]
-"9041" [label = <(soa,soa(env))<SUB>1610</SUB>> ]
-"9043" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();)<SUB>1611</SUB>> ]
-"9044" [label = <(GetS,InvokeWithVarArgs(soa, nullptr, mid, args).GetS())<SUB>1611</SUB>> ]
-"9045" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetS)<SUB>1611</SUB>> ]
-"9026" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1609</SUB>> ]
-"9046" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1611</SUB>> ]
-"9051" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1611</SUB>> ]
-"9027" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1609</SUB>> ]
-"9031" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1609</SUB>> ]
-"9038" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1609</SUB>> ]
-"9032" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1609</SUB>> ]
-"9033" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1609</SUB>> ]
-"9035" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1609</SUB>> ]
-"9016" [label = <(METHOD,CallStaticShortMethodV)<SUB>1608</SUB>> ]
-"9052" [label = <(METHOD_RETURN,jshort)<SUB>1608</SUB>> ]
+"9022" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1608</SUB>> ]
+"9041" [label = <(soa,soa(env))<SUB>1609</SUB>> ]
+"9043" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();)<SUB>1610</SUB>> ]
+"9044" [label = <(GetS,InvokeWithVarArgs(soa, nullptr, mid, args).GetS())<SUB>1610</SUB>> ]
+"9045" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetS)<SUB>1610</SUB>> ]
+"9026" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1608</SUB>> ]
+"9046" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1610</SUB>> ]
+"9051" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1610</SUB>> ]
+"9027" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1608</SUB>> ]
+"9031" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1608</SUB>> ]
+"9038" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1608</SUB>> ]
+"9032" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1608</SUB>> ]
+"9033" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1608</SUB>> ]
+"9035" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1608</SUB>> ]
+"9016" [label = <(METHOD,CallStaticShortMethodV)<SUB>1607</SUB>> ]
+"9052" [label = <(METHOD_RETURN,jshort)<SUB>1607</SUB>> ]
   "9022" -> "9027" 
   "9022" -> "9041" 
   "9041" -> "9046" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/164-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/164-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/164-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/164-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticShortMethodA" {  
-"9060" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1615</SUB>> ]
-"9079" [label = <(soa,soa(env))<SUB>1616</SUB>> ]
-"9081" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetS();,return InvokeWithJValues(soa, nullptr, mid, args).GetS();)<SUB>1617</SUB>> ]
-"9082" [label = <(GetS,InvokeWithJValues(soa, nullptr, mid, args).GetS())<SUB>1617</SUB>> ]
-"9083" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetS)<SUB>1617</SUB>> ]
-"9064" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1615</SUB>> ]
-"9084" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1617</SUB>> ]
-"9089" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1617</SUB>> ]
-"9065" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1615</SUB>> ]
-"9069" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1615</SUB>> ]
-"9076" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1615</SUB>> ]
-"9070" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1615</SUB>> ]
-"9071" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1615</SUB>> ]
-"9073" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1615</SUB>> ]
-"9054" [label = <(METHOD,CallStaticShortMethodA)<SUB>1614</SUB>> ]
-"9090" [label = <(METHOD_RETURN,jshort)<SUB>1614</SUB>> ]
+"9060" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1614</SUB>> ]
+"9079" [label = <(soa,soa(env))<SUB>1615</SUB>> ]
+"9081" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetS();,return InvokeWithJValues(soa, nullptr, mid, args).GetS();)<SUB>1616</SUB>> ]
+"9082" [label = <(GetS,InvokeWithJValues(soa, nullptr, mid, args).GetS())<SUB>1616</SUB>> ]
+"9083" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetS)<SUB>1616</SUB>> ]
+"9064" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1614</SUB>> ]
+"9084" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1616</SUB>> ]
+"9089" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1616</SUB>> ]
+"9065" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1614</SUB>> ]
+"9069" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1614</SUB>> ]
+"9076" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1614</SUB>> ]
+"9070" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1614</SUB>> ]
+"9071" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1614</SUB>> ]
+"9073" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1614</SUB>> ]
+"9054" [label = <(METHOD,CallStaticShortMethodA)<SUB>1613</SUB>> ]
+"9090" [label = <(METHOD_RETURN,jshort)<SUB>1613</SUB>> ]
   "9060" -> "9065" 
   "9060" -> "9079" 
   "9079" -> "9084" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/165-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/165-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/165-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/165-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,23 +1,23 @@
 digraph "CallStaticIntMethod" {  
-"9098" [label = <(va_start,va_start(ap, mid))<SUB>1622</SUB>> ]
-"9101" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1623</SUB>> ]
-"9120" [label = <(soa,soa(env))<SUB>1624</SUB>> ]
-"9123" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1625</SUB>> ]
-"9129" [label = <(va_end,va_end(ap))<SUB>1626</SUB>> ]
-"9131" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1627</SUB>> ]
-"9124" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1625</SUB>> ]
-"9132" [label = <(GetI,result.GetI())<SUB>1627</SUB>> ]
-"9133" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1627</SUB>> ]
-"9105" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1623</SUB>> ]
-"9135" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1627</SUB>> ]
-"9106" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1623</SUB>> ]
-"9110" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1623</SUB>> ]
-"9117" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1623</SUB>> ]
-"9111" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1623</SUB>> ]
-"9112" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1623</SUB>> ]
-"9114" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1623</SUB>> ]
-"9092" [label = <(METHOD,CallStaticIntMethod)<SUB>1620</SUB>> ]
-"9136" [label = <(METHOD_RETURN,jint)<SUB>1620</SUB>> ]
+"9098" [label = <(va_start,va_start(ap, mid))<SUB>1621</SUB>> ]
+"9101" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1622</SUB>> ]
+"9120" [label = <(soa,soa(env))<SUB>1623</SUB>> ]
+"9123" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1624</SUB>> ]
+"9129" [label = <(va_end,va_end(ap))<SUB>1625</SUB>> ]
+"9131" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1626</SUB>> ]
+"9124" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1624</SUB>> ]
+"9132" [label = <(GetI,result.GetI())<SUB>1626</SUB>> ]
+"9133" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1626</SUB>> ]
+"9105" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1622</SUB>> ]
+"9135" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1626</SUB>> ]
+"9106" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1622</SUB>> ]
+"9110" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1622</SUB>> ]
+"9117" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1622</SUB>> ]
+"9111" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1622</SUB>> ]
+"9112" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1622</SUB>> ]
+"9114" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1622</SUB>> ]
+"9092" [label = <(METHOD,CallStaticIntMethod)<SUB>1619</SUB>> ]
+"9136" [label = <(METHOD_RETURN,jint)<SUB>1619</SUB>> ]
   "9098" -> "9101" 
   "9101" -> "9106" 
   "9101" -> "9120" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/166-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/166-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/166-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/166-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticIntMethodV" {  
-"9144" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1631</SUB>> ]
-"9163" [label = <(soa,soa(env))<SUB>1632</SUB>> ]
-"9165" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();)<SUB>1633</SUB>> ]
-"9166" [label = <(GetI,InvokeWithVarArgs(soa, nullptr, mid, args).GetI())<SUB>1633</SUB>> ]
-"9167" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetI)<SUB>1633</SUB>> ]
-"9148" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1631</SUB>> ]
-"9168" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1633</SUB>> ]
-"9173" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1633</SUB>> ]
-"9149" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1631</SUB>> ]
-"9153" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1631</SUB>> ]
-"9160" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1631</SUB>> ]
-"9154" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1631</SUB>> ]
-"9155" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1631</SUB>> ]
-"9157" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1631</SUB>> ]
-"9138" [label = <(METHOD,CallStaticIntMethodV)<SUB>1630</SUB>> ]
-"9174" [label = <(METHOD_RETURN,jint)<SUB>1630</SUB>> ]
+"9144" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1630</SUB>> ]
+"9163" [label = <(soa,soa(env))<SUB>1631</SUB>> ]
+"9165" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();)<SUB>1632</SUB>> ]
+"9166" [label = <(GetI,InvokeWithVarArgs(soa, nullptr, mid, args).GetI())<SUB>1632</SUB>> ]
+"9167" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetI)<SUB>1632</SUB>> ]
+"9148" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1630</SUB>> ]
+"9168" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1632</SUB>> ]
+"9173" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1632</SUB>> ]
+"9149" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1630</SUB>> ]
+"9153" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1630</SUB>> ]
+"9160" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1630</SUB>> ]
+"9154" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1630</SUB>> ]
+"9155" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1630</SUB>> ]
+"9157" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1630</SUB>> ]
+"9138" [label = <(METHOD,CallStaticIntMethodV)<SUB>1629</SUB>> ]
+"9174" [label = <(METHOD_RETURN,jint)<SUB>1629</SUB>> ]
   "9144" -> "9149" 
   "9144" -> "9163" 
   "9163" -> "9168" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/167-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/167-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/167-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/167-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticIntMethodA" {  
-"9182" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1637</SUB>> ]
-"9201" [label = <(soa,soa(env))<SUB>1638</SUB>> ]
-"9203" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetI();,return InvokeWithJValues(soa, nullptr, mid, args).GetI();)<SUB>1639</SUB>> ]
-"9204" [label = <(GetI,InvokeWithJValues(soa, nullptr, mid, args).GetI())<SUB>1639</SUB>> ]
-"9205" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetI)<SUB>1639</SUB>> ]
-"9186" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1637</SUB>> ]
-"9206" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1639</SUB>> ]
-"9211" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1639</SUB>> ]
-"9187" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1637</SUB>> ]
-"9191" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1637</SUB>> ]
-"9198" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1637</SUB>> ]
-"9192" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1637</SUB>> ]
-"9193" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1637</SUB>> ]
-"9195" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1637</SUB>> ]
-"9176" [label = <(METHOD,CallStaticIntMethodA)<SUB>1636</SUB>> ]
-"9212" [label = <(METHOD_RETURN,jint)<SUB>1636</SUB>> ]
+"9182" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1636</SUB>> ]
+"9201" [label = <(soa,soa(env))<SUB>1637</SUB>> ]
+"9203" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetI();,return InvokeWithJValues(soa, nullptr, mid, args).GetI();)<SUB>1638</SUB>> ]
+"9204" [label = <(GetI,InvokeWithJValues(soa, nullptr, mid, args).GetI())<SUB>1638</SUB>> ]
+"9205" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetI)<SUB>1638</SUB>> ]
+"9186" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1636</SUB>> ]
+"9206" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1638</SUB>> ]
+"9211" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1638</SUB>> ]
+"9187" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1636</SUB>> ]
+"9191" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1636</SUB>> ]
+"9198" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1636</SUB>> ]
+"9192" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1636</SUB>> ]
+"9193" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1636</SUB>> ]
+"9195" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1636</SUB>> ]
+"9176" [label = <(METHOD,CallStaticIntMethodA)<SUB>1635</SUB>> ]
+"9212" [label = <(METHOD_RETURN,jint)<SUB>1635</SUB>> ]
   "9182" -> "9187" 
   "9182" -> "9201" 
   "9201" -> "9206" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/168-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/168-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/168-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/168-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,23 +1,23 @@
 digraph "CallStaticLongMethod" {  
-"9220" [label = <(va_start,va_start(ap, mid))<SUB>1644</SUB>> ]
-"9223" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1645</SUB>> ]
-"9242" [label = <(soa,soa(env))<SUB>1646</SUB>> ]
-"9245" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1647</SUB>> ]
-"9251" [label = <(va_end,va_end(ap))<SUB>1648</SUB>> ]
-"9253" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1649</SUB>> ]
-"9246" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1647</SUB>> ]
-"9254" [label = <(GetJ,result.GetJ())<SUB>1649</SUB>> ]
-"9255" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1649</SUB>> ]
-"9227" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1645</SUB>> ]
-"9257" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1649</SUB>> ]
-"9228" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1645</SUB>> ]
-"9232" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1645</SUB>> ]
-"9239" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1645</SUB>> ]
-"9233" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1645</SUB>> ]
-"9234" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1645</SUB>> ]
-"9236" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1645</SUB>> ]
-"9214" [label = <(METHOD,CallStaticLongMethod)<SUB>1642</SUB>> ]
-"9258" [label = <(METHOD_RETURN,jlong)<SUB>1642</SUB>> ]
+"9220" [label = <(va_start,va_start(ap, mid))<SUB>1643</SUB>> ]
+"9223" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1644</SUB>> ]
+"9242" [label = <(soa,soa(env))<SUB>1645</SUB>> ]
+"9245" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1646</SUB>> ]
+"9251" [label = <(va_end,va_end(ap))<SUB>1647</SUB>> ]
+"9253" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1648</SUB>> ]
+"9246" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1646</SUB>> ]
+"9254" [label = <(GetJ,result.GetJ())<SUB>1648</SUB>> ]
+"9255" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1648</SUB>> ]
+"9227" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1644</SUB>> ]
+"9257" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1648</SUB>> ]
+"9228" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1644</SUB>> ]
+"9232" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1644</SUB>> ]
+"9239" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1644</SUB>> ]
+"9233" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1644</SUB>> ]
+"9234" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1644</SUB>> ]
+"9236" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1644</SUB>> ]
+"9214" [label = <(METHOD,CallStaticLongMethod)<SUB>1641</SUB>> ]
+"9258" [label = <(METHOD_RETURN,jlong)<SUB>1641</SUB>> ]
   "9220" -> "9223" 
   "9223" -> "9228" 
   "9223" -> "9242" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/169-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/169-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/169-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/169-cfg.dot	2023-06-07 19:34:28.657390219 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticLongMethodV" {  
-"9266" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1653</SUB>> ]
-"9285" [label = <(soa,soa(env))<SUB>1654</SUB>> ]
-"9287" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();)<SUB>1655</SUB>> ]
-"9288" [label = <(GetJ,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ())<SUB>1655</SUB>> ]
-"9289" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ)<SUB>1655</SUB>> ]
-"9270" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1653</SUB>> ]
-"9290" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1655</SUB>> ]
-"9295" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1655</SUB>> ]
-"9271" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1653</SUB>> ]
-"9275" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1653</SUB>> ]
-"9282" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1653</SUB>> ]
-"9276" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1653</SUB>> ]
-"9277" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1653</SUB>> ]
-"9279" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1653</SUB>> ]
-"9260" [label = <(METHOD,CallStaticLongMethodV)<SUB>1652</SUB>> ]
-"9296" [label = <(METHOD_RETURN,jlong)<SUB>1652</SUB>> ]
+"9266" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1652</SUB>> ]
+"9285" [label = <(soa,soa(env))<SUB>1653</SUB>> ]
+"9287" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();)<SUB>1654</SUB>> ]
+"9288" [label = <(GetJ,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ())<SUB>1654</SUB>> ]
+"9289" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ)<SUB>1654</SUB>> ]
+"9270" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1652</SUB>> ]
+"9290" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1654</SUB>> ]
+"9295" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1654</SUB>> ]
+"9271" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1652</SUB>> ]
+"9275" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1652</SUB>> ]
+"9282" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1652</SUB>> ]
+"9276" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1652</SUB>> ]
+"9277" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1652</SUB>> ]
+"9279" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1652</SUB>> ]
+"9260" [label = <(METHOD,CallStaticLongMethodV)<SUB>1651</SUB>> ]
+"9296" [label = <(METHOD_RETURN,jlong)<SUB>1651</SUB>> ]
   "9266" -> "9271" 
   "9266" -> "9285" 
   "9285" -> "9290" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/17-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/17-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/17-cfg.dot	2023-06-07 19:34:22.017390836 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/17-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,5 +1,5 @@
 digraph "FindMethod" {  
-"489" [label = <(METHOD,FindMethod)<SUB>411</SUB>> ]
-"494" [label = <(METHOD_RETURN,ArtMethod*)<SUB>411</SUB>> ]
+"489" [label = <(METHOD,FindMethod)<SUB>410</SUB>> ]
+"494" [label = <(METHOD_RETURN,ArtMethod*)<SUB>410</SUB>> ]
   "489" -> "494" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/170-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/170-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/170-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/170-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticLongMethodA" {  
-"9304" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1659</SUB>> ]
-"9323" [label = <(soa,soa(env))<SUB>1660</SUB>> ]
-"9325" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();)<SUB>1661</SUB>> ]
-"9326" [label = <(GetJ,InvokeWithJValues(soa, nullptr, mid, args).GetJ())<SUB>1661</SUB>> ]
-"9327" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetJ)<SUB>1661</SUB>> ]
-"9308" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1659</SUB>> ]
-"9328" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1661</SUB>> ]
-"9333" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1661</SUB>> ]
-"9309" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1659</SUB>> ]
-"9313" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1659</SUB>> ]
-"9320" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1659</SUB>> ]
-"9314" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1659</SUB>> ]
-"9315" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1659</SUB>> ]
-"9317" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1659</SUB>> ]
-"9298" [label = <(METHOD,CallStaticLongMethodA)<SUB>1658</SUB>> ]
-"9334" [label = <(METHOD_RETURN,jlong)<SUB>1658</SUB>> ]
+"9304" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1658</SUB>> ]
+"9323" [label = <(soa,soa(env))<SUB>1659</SUB>> ]
+"9325" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();)<SUB>1660</SUB>> ]
+"9326" [label = <(GetJ,InvokeWithJValues(soa, nullptr, mid, args).GetJ())<SUB>1660</SUB>> ]
+"9327" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetJ)<SUB>1660</SUB>> ]
+"9308" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1658</SUB>> ]
+"9328" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1660</SUB>> ]
+"9333" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1660</SUB>> ]
+"9309" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1658</SUB>> ]
+"9313" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1658</SUB>> ]
+"9320" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1658</SUB>> ]
+"9314" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1658</SUB>> ]
+"9315" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1658</SUB>> ]
+"9317" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1658</SUB>> ]
+"9298" [label = <(METHOD,CallStaticLongMethodA)<SUB>1657</SUB>> ]
+"9334" [label = <(METHOD_RETURN,jlong)<SUB>1657</SUB>> ]
   "9304" -> "9309" 
   "9304" -> "9323" 
   "9323" -> "9328" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/171-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/171-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/171-cfg.dot	2023-06-07 19:34:22.147390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/171-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,23 +1,23 @@
 digraph "CallStaticFloatMethod" {  
-"9342" [label = <(va_start,va_start(ap, mid))<SUB>1666</SUB>> ]
-"9345" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1667</SUB>> ]
-"9364" [label = <(soa,soa(env))<SUB>1668</SUB>> ]
-"9367" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1669</SUB>> ]
-"9373" [label = <(va_end,va_end(ap))<SUB>1670</SUB>> ]
-"9375" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1671</SUB>> ]
-"9368" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1669</SUB>> ]
-"9376" [label = <(GetF,result.GetF())<SUB>1671</SUB>> ]
-"9377" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1671</SUB>> ]
-"9349" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1667</SUB>> ]
-"9379" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1671</SUB>> ]
-"9350" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1667</SUB>> ]
-"9354" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1667</SUB>> ]
-"9361" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1667</SUB>> ]
-"9355" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1667</SUB>> ]
-"9356" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1667</SUB>> ]
-"9358" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1667</SUB>> ]
-"9336" [label = <(METHOD,CallStaticFloatMethod)<SUB>1664</SUB>> ]
-"9380" [label = <(METHOD_RETURN,jfloat)<SUB>1664</SUB>> ]
+"9342" [label = <(va_start,va_start(ap, mid))<SUB>1665</SUB>> ]
+"9345" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1666</SUB>> ]
+"9364" [label = <(soa,soa(env))<SUB>1667</SUB>> ]
+"9367" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1668</SUB>> ]
+"9373" [label = <(va_end,va_end(ap))<SUB>1669</SUB>> ]
+"9375" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1670</SUB>> ]
+"9368" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1668</SUB>> ]
+"9376" [label = <(GetF,result.GetF())<SUB>1670</SUB>> ]
+"9377" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1670</SUB>> ]
+"9349" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1666</SUB>> ]
+"9379" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1670</SUB>> ]
+"9350" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1666</SUB>> ]
+"9354" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1666</SUB>> ]
+"9361" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1666</SUB>> ]
+"9355" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1666</SUB>> ]
+"9356" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1666</SUB>> ]
+"9358" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1666</SUB>> ]
+"9336" [label = <(METHOD,CallStaticFloatMethod)<SUB>1663</SUB>> ]
+"9380" [label = <(METHOD_RETURN,jfloat)<SUB>1663</SUB>> ]
   "9342" -> "9345" 
   "9345" -> "9350" 
   "9345" -> "9364" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/172-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/172-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/172-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/172-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticFloatMethodV" {  
-"9388" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1675</SUB>> ]
-"9407" [label = <(soa,soa(env))<SUB>1676</SUB>> ]
-"9409" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();)<SUB>1677</SUB>> ]
-"9410" [label = <(GetF,InvokeWithVarArgs(soa, nullptr, mid, args).GetF())<SUB>1677</SUB>> ]
-"9411" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetF)<SUB>1677</SUB>> ]
-"9392" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1675</SUB>> ]
-"9412" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1677</SUB>> ]
-"9417" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1677</SUB>> ]
-"9393" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1675</SUB>> ]
-"9397" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1675</SUB>> ]
-"9404" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1675</SUB>> ]
-"9398" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1675</SUB>> ]
-"9399" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1675</SUB>> ]
-"9401" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1675</SUB>> ]
-"9382" [label = <(METHOD,CallStaticFloatMethodV)<SUB>1674</SUB>> ]
-"9418" [label = <(METHOD_RETURN,jfloat)<SUB>1674</SUB>> ]
+"9388" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1674</SUB>> ]
+"9407" [label = <(soa,soa(env))<SUB>1675</SUB>> ]
+"9409" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();)<SUB>1676</SUB>> ]
+"9410" [label = <(GetF,InvokeWithVarArgs(soa, nullptr, mid, args).GetF())<SUB>1676</SUB>> ]
+"9411" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetF)<SUB>1676</SUB>> ]
+"9392" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1674</SUB>> ]
+"9412" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1676</SUB>> ]
+"9417" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1676</SUB>> ]
+"9393" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1674</SUB>> ]
+"9397" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1674</SUB>> ]
+"9404" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1674</SUB>> ]
+"9398" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1674</SUB>> ]
+"9399" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1674</SUB>> ]
+"9401" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1674</SUB>> ]
+"9382" [label = <(METHOD,CallStaticFloatMethodV)<SUB>1673</SUB>> ]
+"9418" [label = <(METHOD_RETURN,jfloat)<SUB>1673</SUB>> ]
   "9388" -> "9393" 
   "9388" -> "9407" 
   "9407" -> "9412" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/173-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/173-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/173-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/173-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticFloatMethodA" {  
-"9426" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1681</SUB>> ]
-"9445" [label = <(soa,soa(env))<SUB>1682</SUB>> ]
-"9447" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetF();,return InvokeWithJValues(soa, nullptr, mid, args).GetF();)<SUB>1683</SUB>> ]
-"9448" [label = <(GetF,InvokeWithJValues(soa, nullptr, mid, args).GetF())<SUB>1683</SUB>> ]
-"9449" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetF)<SUB>1683</SUB>> ]
-"9430" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1681</SUB>> ]
-"9450" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1683</SUB>> ]
-"9455" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1683</SUB>> ]
-"9431" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1681</SUB>> ]
-"9435" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1681</SUB>> ]
-"9442" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1681</SUB>> ]
-"9436" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1681</SUB>> ]
-"9437" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1681</SUB>> ]
-"9439" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1681</SUB>> ]
-"9420" [label = <(METHOD,CallStaticFloatMethodA)<SUB>1680</SUB>> ]
-"9456" [label = <(METHOD_RETURN,jfloat)<SUB>1680</SUB>> ]
+"9426" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1680</SUB>> ]
+"9445" [label = <(soa,soa(env))<SUB>1681</SUB>> ]
+"9447" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetF();,return InvokeWithJValues(soa, nullptr, mid, args).GetF();)<SUB>1682</SUB>> ]
+"9448" [label = <(GetF,InvokeWithJValues(soa, nullptr, mid, args).GetF())<SUB>1682</SUB>> ]
+"9449" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetF)<SUB>1682</SUB>> ]
+"9430" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1680</SUB>> ]
+"9450" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1682</SUB>> ]
+"9455" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1682</SUB>> ]
+"9431" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1680</SUB>> ]
+"9435" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1680</SUB>> ]
+"9442" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1680</SUB>> ]
+"9436" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1680</SUB>> ]
+"9437" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1680</SUB>> ]
+"9439" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1680</SUB>> ]
+"9420" [label = <(METHOD,CallStaticFloatMethodA)<SUB>1679</SUB>> ]
+"9456" [label = <(METHOD_RETURN,jfloat)<SUB>1679</SUB>> ]
   "9426" -> "9431" 
   "9426" -> "9445" 
   "9445" -> "9450" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/174-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/174-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/174-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/174-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,23 +1,23 @@
 digraph "CallStaticDoubleMethod" {  
-"9464" [label = <(va_start,va_start(ap, mid))<SUB>1688</SUB>> ]
-"9467" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1689</SUB>> ]
-"9486" [label = <(soa,soa(env))<SUB>1690</SUB>> ]
-"9489" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1691</SUB>> ]
-"9495" [label = <(va_end,va_end(ap))<SUB>1692</SUB>> ]
-"9497" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1693</SUB>> ]
-"9490" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1691</SUB>> ]
-"9498" [label = <(GetD,result.GetD())<SUB>1693</SUB>> ]
-"9499" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1693</SUB>> ]
-"9471" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1689</SUB>> ]
-"9501" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1693</SUB>> ]
-"9472" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1689</SUB>> ]
-"9476" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1689</SUB>> ]
-"9483" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1689</SUB>> ]
-"9477" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1689</SUB>> ]
-"9478" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1689</SUB>> ]
-"9480" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1689</SUB>> ]
-"9458" [label = <(METHOD,CallStaticDoubleMethod)<SUB>1686</SUB>> ]
-"9502" [label = <(METHOD_RETURN,jdouble)<SUB>1686</SUB>> ]
+"9464" [label = <(va_start,va_start(ap, mid))<SUB>1687</SUB>> ]
+"9467" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1688</SUB>> ]
+"9486" [label = <(soa,soa(env))<SUB>1689</SUB>> ]
+"9489" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1690</SUB>> ]
+"9495" [label = <(va_end,va_end(ap))<SUB>1691</SUB>> ]
+"9497" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1692</SUB>> ]
+"9490" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1690</SUB>> ]
+"9498" [label = <(GetD,result.GetD())<SUB>1692</SUB>> ]
+"9499" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1692</SUB>> ]
+"9471" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1688</SUB>> ]
+"9501" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1692</SUB>> ]
+"9472" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1688</SUB>> ]
+"9476" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1688</SUB>> ]
+"9483" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1688</SUB>> ]
+"9477" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1688</SUB>> ]
+"9478" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1688</SUB>> ]
+"9480" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1688</SUB>> ]
+"9458" [label = <(METHOD,CallStaticDoubleMethod)<SUB>1685</SUB>> ]
+"9502" [label = <(METHOD_RETURN,jdouble)<SUB>1685</SUB>> ]
   "9464" -> "9467" 
   "9467" -> "9472" 
   "9467" -> "9486" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/175-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/175-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/175-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/175-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticDoubleMethodV" {  
-"9510" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1697</SUB>> ]
-"9529" [label = <(soa,soa(env))<SUB>1698</SUB>> ]
-"9531" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();)<SUB>1699</SUB>> ]
-"9532" [label = <(GetD,InvokeWithVarArgs(soa, nullptr, mid, args).GetD())<SUB>1699</SUB>> ]
-"9533" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetD)<SUB>1699</SUB>> ]
-"9514" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1697</SUB>> ]
-"9534" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1699</SUB>> ]
-"9539" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1699</SUB>> ]
-"9515" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1697</SUB>> ]
-"9519" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1697</SUB>> ]
-"9526" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1697</SUB>> ]
-"9520" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1697</SUB>> ]
-"9521" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1697</SUB>> ]
-"9523" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1697</SUB>> ]
-"9504" [label = <(METHOD,CallStaticDoubleMethodV)<SUB>1696</SUB>> ]
-"9540" [label = <(METHOD_RETURN,jdouble)<SUB>1696</SUB>> ]
+"9510" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1696</SUB>> ]
+"9529" [label = <(soa,soa(env))<SUB>1697</SUB>> ]
+"9531" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();)<SUB>1698</SUB>> ]
+"9532" [label = <(GetD,InvokeWithVarArgs(soa, nullptr, mid, args).GetD())<SUB>1698</SUB>> ]
+"9533" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetD)<SUB>1698</SUB>> ]
+"9514" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1696</SUB>> ]
+"9534" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1698</SUB>> ]
+"9539" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1698</SUB>> ]
+"9515" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1696</SUB>> ]
+"9519" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1696</SUB>> ]
+"9526" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1696</SUB>> ]
+"9520" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1696</SUB>> ]
+"9521" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1696</SUB>> ]
+"9523" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1696</SUB>> ]
+"9504" [label = <(METHOD,CallStaticDoubleMethodV)<SUB>1695</SUB>> ]
+"9540" [label = <(METHOD_RETURN,jdouble)<SUB>1695</SUB>> ]
   "9510" -> "9515" 
   "9510" -> "9529" 
   "9529" -> "9534" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/176-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/176-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/176-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/176-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticDoubleMethodA" {  
-"9548" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1703</SUB>> ]
-"9567" [label = <(soa,soa(env))<SUB>1704</SUB>> ]
-"9569" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetD();,return InvokeWithJValues(soa, nullptr, mid, args).GetD();)<SUB>1705</SUB>> ]
-"9570" [label = <(GetD,InvokeWithJValues(soa, nullptr, mid, args).GetD())<SUB>1705</SUB>> ]
-"9571" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetD)<SUB>1705</SUB>> ]
-"9552" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1703</SUB>> ]
-"9572" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1705</SUB>> ]
-"9577" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1705</SUB>> ]
-"9553" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1703</SUB>> ]
-"9557" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1703</SUB>> ]
-"9564" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1703</SUB>> ]
-"9558" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1703</SUB>> ]
-"9559" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1703</SUB>> ]
-"9561" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1703</SUB>> ]
-"9542" [label = <(METHOD,CallStaticDoubleMethodA)<SUB>1702</SUB>> ]
-"9578" [label = <(METHOD_RETURN,jdouble)<SUB>1702</SUB>> ]
+"9548" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1702</SUB>> ]
+"9567" [label = <(soa,soa(env))<SUB>1703</SUB>> ]
+"9569" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetD();,return InvokeWithJValues(soa, nullptr, mid, args).GetD();)<SUB>1704</SUB>> ]
+"9570" [label = <(GetD,InvokeWithJValues(soa, nullptr, mid, args).GetD())<SUB>1704</SUB>> ]
+"9571" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetD)<SUB>1704</SUB>> ]
+"9552" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1702</SUB>> ]
+"9572" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1704</SUB>> ]
+"9577" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1704</SUB>> ]
+"9553" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1702</SUB>> ]
+"9557" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1702</SUB>> ]
+"9564" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1702</SUB>> ]
+"9558" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1702</SUB>> ]
+"9559" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1702</SUB>> ]
+"9561" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1702</SUB>> ]
+"9542" [label = <(METHOD,CallStaticDoubleMethodA)<SUB>1701</SUB>> ]
+"9578" [label = <(METHOD_RETURN,jdouble)<SUB>1701</SUB>> ]
   "9548" -> "9553" 
   "9548" -> "9567" 
   "9567" -> "9572" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/177-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/177-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/177-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/177-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,18 +1,18 @@
 digraph "CallStaticVoidMethod" {  
-"9586" [label = <(va_start,va_start(ap, mid))<SUB>1710</SUB>> ]
-"9589" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1711</SUB>> ]
-"9607" [label = <(soa,soa(env))<SUB>1712</SUB>> ]
-"9609" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1713</SUB>> ]
-"9614" [label = <(va_end,va_end(ap))<SUB>1714</SUB>> ]
-"9593" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1711</SUB>> ]
-"9594" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1711</SUB>> ]
-"9598" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1711</SUB>> ]
-"9605" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1711</SUB>> ]
-"9599" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1711</SUB>> ]
-"9600" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1711</SUB>> ]
-"9602" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1711</SUB>> ]
-"9580" [label = <(METHOD,CallStaticVoidMethod)<SUB>1708</SUB>> ]
-"9616" [label = <(METHOD_RETURN,void)<SUB>1708</SUB>> ]
+"9586" [label = <(va_start,va_start(ap, mid))<SUB>1709</SUB>> ]
+"9589" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1710</SUB>> ]
+"9607" [label = <(soa,soa(env))<SUB>1711</SUB>> ]
+"9609" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1712</SUB>> ]
+"9614" [label = <(va_end,va_end(ap))<SUB>1713</SUB>> ]
+"9593" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1710</SUB>> ]
+"9594" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1710</SUB>> ]
+"9598" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1710</SUB>> ]
+"9605" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1710</SUB>> ]
+"9599" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1710</SUB>> ]
+"9600" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1710</SUB>> ]
+"9602" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1710</SUB>> ]
+"9580" [label = <(METHOD,CallStaticVoidMethod)<SUB>1707</SUB>> ]
+"9616" [label = <(METHOD_RETURN,void)<SUB>1707</SUB>> ]
   "9586" -> "9589" 
   "9589" -> "9594" 
   "9589" -> "9607" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/178-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/178-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/178-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/178-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,16 +1,16 @@
 digraph "CallStaticVoidMethodV" {  
-"9624" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1718</SUB>> ]
-"9642" [label = <(soa,soa(env))<SUB>1719</SUB>> ]
-"9644" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1720</SUB>> ]
-"9628" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1718</SUB>> ]
-"9629" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1718</SUB>> ]
-"9633" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1718</SUB>> ]
-"9640" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1718</SUB>> ]
-"9634" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1718</SUB>> ]
-"9635" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1718</SUB>> ]
-"9637" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1718</SUB>> ]
-"9618" [label = <(METHOD,CallStaticVoidMethodV)<SUB>1717</SUB>> ]
-"9649" [label = <(METHOD_RETURN,void)<SUB>1717</SUB>> ]
+"9624" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1717</SUB>> ]
+"9642" [label = <(soa,soa(env))<SUB>1718</SUB>> ]
+"9644" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1719</SUB>> ]
+"9628" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1717</SUB>> ]
+"9629" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1717</SUB>> ]
+"9633" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1717</SUB>> ]
+"9640" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1717</SUB>> ]
+"9634" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1717</SUB>> ]
+"9635" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1717</SUB>> ]
+"9637" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1717</SUB>> ]
+"9618" [label = <(METHOD,CallStaticVoidMethodV)<SUB>1716</SUB>> ]
+"9649" [label = <(METHOD_RETURN,void)<SUB>1716</SUB>> ]
   "9624" -> "9629" 
   "9624" -> "9642" 
   "9642" -> "9644" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/179-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/179-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/179-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/179-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,16 +1,16 @@
 digraph "CallStaticVoidMethodA" {  
-"9657" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1724</SUB>> ]
-"9675" [label = <(soa,soa(env))<SUB>1725</SUB>> ]
-"9677" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1726</SUB>> ]
-"9661" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1724</SUB>> ]
-"9662" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1724</SUB>> ]
-"9666" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1724</SUB>> ]
-"9673" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1724</SUB>> ]
-"9667" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1724</SUB>> ]
-"9668" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1724</SUB>> ]
-"9670" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1724</SUB>> ]
-"9651" [label = <(METHOD,CallStaticVoidMethodA)<SUB>1723</SUB>> ]
-"9682" [label = <(METHOD_RETURN,void)<SUB>1723</SUB>> ]
+"9657" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1723</SUB>> ]
+"9675" [label = <(soa,soa(env))<SUB>1724</SUB>> ]
+"9677" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1725</SUB>> ]
+"9661" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1723</SUB>> ]
+"9662" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1723</SUB>> ]
+"9666" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1723</SUB>> ]
+"9673" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1723</SUB>> ]
+"9667" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1723</SUB>> ]
+"9668" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1723</SUB>> ]
+"9670" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1723</SUB>> ]
+"9651" [label = <(METHOD,CallStaticVoidMethodA)<SUB>1722</SUB>> ]
+"9682" [label = <(METHOD_RETURN,void)<SUB>1722</SUB>> ]
   "9657" -> "9662" 
   "9657" -> "9675" 
   "9675" -> "9677" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/18-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/18-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/18-cfg.dot	2023-06-07 19:34:22.017390836 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/18-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,7 +1,7 @@
 digraph "GetVersion" {  
-"504" [label = <(RETURN,return JNI_VERSION_1_6;,return JNI_VERSION_1_6;)<SUB>425</SUB>> ]
-"501" [label = <(METHOD,GetVersion)<SUB>424</SUB>> ]
-"506" [label = <(METHOD_RETURN,jint)<SUB>424</SUB>> ]
+"504" [label = <(RETURN,return JNI_VERSION_1_6;,return JNI_VERSION_1_6;)<SUB>424</SUB>> ]
+"501" [label = <(METHOD,GetVersion)<SUB>423</SUB>> ]
+"506" [label = <(METHOD_RETURN,jint)<SUB>423</SUB>> ]
   "504" -> "506" 
   "501" -> "504" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/180-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/180-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/180-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/180-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,36 +1,36 @@
 digraph "NewString" {  
-"9725" [label = <(soa,soa(env))<SUB>1738</SUB>> ]
-"9728" [label = <(&lt;operator&gt;.assignment,* result = mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1739</SUB>> ]
-"9742" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1740</SUB>> ]
-"9690" [label = <(UNLIKELY,UNLIKELY(char_count &lt; 0))<SUB>1730</SUB>> ]
-"9706" [label = <(UNLIKELY,UNLIKELY(chars == nullptr &amp;&amp; char_count &gt; 0))<SUB>1734</SUB>> ]
-"9730" [label = <(mirror::String::AllocFromUtf16,mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1739</SUB>> ]
-"9743" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1740</SUB>> ]
-"9691" [label = <(&lt;operator&gt;.lessThan,char_count &lt; 0)<SUB>1730</SUB>> ]
-"9695" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;char_count &lt; 0: %d&quot;, char_count))<SUB>1731</SUB>> ]
-"9703" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1732</SUB>> ]
-"9707" [label = <(&lt;operator&gt;.logicalAnd,chars == nullptr &amp;&amp; char_count &gt; 0)<SUB>1734</SUB>> ]
-"9715" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;chars == null &amp;&amp; char_count &gt; 0&quot;))<SUB>1735</SUB>> ]
-"9722" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1736</SUB>> ]
-"9731" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromUtf16)<SUB>1739</SUB>> ]
-"9736" [label = <(Self,soa.Self())<SUB>1739</SUB>> ]
-"9744" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1740</SUB>> ]
-"9696" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1731</SUB>> ]
-"9708" [label = <(&lt;operator&gt;.equals,chars == nullptr)<SUB>1734</SUB>> ]
-"9711" [label = <(&lt;operator&gt;.greaterThan,char_count &gt; 0)<SUB>1734</SUB>> ]
-"9716" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1735</SUB>> ]
-"9732" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1739</SUB>> ]
-"9735" [label = <(FIELD_IDENTIFIER,AllocFromUtf16,AllocFromUtf16)<SUB>1739</SUB>> ]
-"9737" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1739</SUB>> ]
-"9745" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1740</SUB>> ]
-"9697" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1731</SUB>> ]
-"9699" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1731</SUB>> ]
-"9717" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1735</SUB>> ]
-"9719" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1735</SUB>> ]
-"9739" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1739</SUB>> ]
-"9747" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1740</SUB>> ]
-"9684" [label = <(METHOD,NewString)<SUB>1729</SUB>> ]
-"9750" [label = <(METHOD_RETURN,jstring)<SUB>1729</SUB>> ]
+"9725" [label = <(soa,soa(env))<SUB>1737</SUB>> ]
+"9728" [label = <(&lt;operator&gt;.assignment,* result = mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1738</SUB>> ]
+"9742" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1739</SUB>> ]
+"9690" [label = <(UNLIKELY,UNLIKELY(char_count &lt; 0))<SUB>1729</SUB>> ]
+"9706" [label = <(UNLIKELY,UNLIKELY(chars == nullptr &amp;&amp; char_count &gt; 0))<SUB>1733</SUB>> ]
+"9730" [label = <(mirror::String::AllocFromUtf16,mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1738</SUB>> ]
+"9743" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1739</SUB>> ]
+"9691" [label = <(&lt;operator&gt;.lessThan,char_count &lt; 0)<SUB>1729</SUB>> ]
+"9695" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;char_count &lt; 0: %d&quot;, char_count))<SUB>1730</SUB>> ]
+"9703" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1731</SUB>> ]
+"9707" [label = <(&lt;operator&gt;.logicalAnd,chars == nullptr &amp;&amp; char_count &gt; 0)<SUB>1733</SUB>> ]
+"9715" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;chars == null &amp;&amp; char_count &gt; 0&quot;))<SUB>1734</SUB>> ]
+"9722" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1735</SUB>> ]
+"9731" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromUtf16)<SUB>1738</SUB>> ]
+"9736" [label = <(Self,soa.Self())<SUB>1738</SUB>> ]
+"9744" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1739</SUB>> ]
+"9696" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1730</SUB>> ]
+"9708" [label = <(&lt;operator&gt;.equals,chars == nullptr)<SUB>1733</SUB>> ]
+"9711" [label = <(&lt;operator&gt;.greaterThan,char_count &gt; 0)<SUB>1733</SUB>> ]
+"9716" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1734</SUB>> ]
+"9732" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1738</SUB>> ]
+"9735" [label = <(FIELD_IDENTIFIER,AllocFromUtf16,AllocFromUtf16)<SUB>1738</SUB>> ]
+"9737" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1738</SUB>> ]
+"9745" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1739</SUB>> ]
+"9697" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1730</SUB>> ]
+"9699" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1730</SUB>> ]
+"9717" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1734</SUB>> ]
+"9719" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1734</SUB>> ]
+"9739" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1738</SUB>> ]
+"9747" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1739</SUB>> ]
+"9684" [label = <(METHOD,NewString)<SUB>1728</SUB>> ]
+"9750" [label = <(METHOD_RETURN,jstring)<SUB>1728</SUB>> ]
   "9725" -> "9732" 
   "9728" -> "9747" 
   "9742" -> "9750" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/181-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/181-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/181-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/181-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,156 +1,154 @@
 digraph "NewStringUTF" {  
-"9764" [label = <(&lt;operator&gt;.assignment,utf8_length = strlen(utf))<SUB>1752</SUB>> ]
-"9814" [label = <(&lt;operator&gt;.assignment,replacement_utf_pos = 0u)<SUB>1764</SUB>> ]
-"9818" [label = <(UNKNOWN,t,t)<SUB>1765</SUB>> ]
-"9819" [label = <(UNKNOWN,utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {},utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {})<SUB>1765</SUB>> ]
-"9820" [label = <(UNKNOWN,,\012 /*bad=*/ []() { return true; },,\012 /*bad=*/ []() { return true; })<SUB>1768</SUB>> ]
-"9821" [label = <(UNKNOWN,);,);)<SUB>1769</SUB>> ]
-"9913" [label = <(DCHECK_LE,DCHECK_LE(utf16_length, utf8_length))<SUB>1805</SUB>> ]
-"9916" [label = <(DCHECK_LE,DCHECK_LE(utf8_length, static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1806</SUB>> ]
-"9931" [label = <(soa,soa(env))<SUB>1808</SUB>> ]
-"9934" [label = <(&lt;operator&gt;.assignment,* result =\012        mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1809</SUB>> ]
-"9949" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1811</SUB>> ]
-"9757" [label = <(&lt;operator&gt;.equals,utf == nullptr)<SUB>1744</SUB>> ]
-"9766" [label = <(strlen,strlen(utf))<SUB>1752</SUB>> ]
-"9769" [label = <(UNLIKELY,UNLIKELY(utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1753</SUB>> ]
-"9823" [label = <(UNLIKELY,UNLIKELY(utf8_length != 0u &amp;&amp; utf16_length == 0u))<SUB>1770</SUB>> ]
-"9918" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1806</SUB>> ]
-"9936" [label = <(mirror::String::AllocFromModifiedUtf8,mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1810</SUB>> ]
-"9950" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1811</SUB>> ]
-"9761" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1745</SUB>> ]
-"9770" [label = <(&lt;operator&gt;.greaterThan,utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1753</SUB>> ]
-"9786" [label = <(&lt;operator&gt;.assignment,error =\012          android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1757</SUB>> ]
-"9797" [label = <(soa,soa(env))<SUB>1759</SUB>> ]
-"9799" [label = <(ThrowOutOfMemoryError,soa.Self()-&gt;ThrowOutOfMemoryError(error.c_str()))<SUB>1760</SUB>> ]
-"9810" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1761</SUB>> ]
-"9824" [label = <(&lt;operator&gt;.logicalAnd,utf8_length != 0u &amp;&amp; utf16_length == 0u)<SUB>1770</SUB>> ]
-"9832" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;172655291&quot;))<SUB>1772</SUB>> ]
-"9836" [label = <(&lt;operator&gt;.assignment,kMinDelay = UINT64_C(10000000000))<SUB>1774</SUB>> ]
-"9841" [label = <(prev_bad_input_time,prev_bad_input_time(UINT64_C(0)))<SUB>1775</SUB>> ]
-"9845" [label = <(&lt;operator&gt;.assignment,prev_time = prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1776</SUB>> ]
-"9855" [label = <(&lt;operator&gt;.assignment,now = NanoTime())<SUB>1777</SUB>> ]
-"9883" [label = <(reset,replacement_utf.reset(new char[utf8_length + 1u]))<SUB>1783</SUB>> ]
-"9889" [label = <(&lt;operator&gt;.assignment,utf16_length = VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1784</SUB>> ]
-"9896" [label = <(DCHECK_LE,DCHECK_LE(replacement_utf_pos, utf8_length))<SUB>1800</SUB>> ]
-"9899" [label = <(&lt;operator&gt;.assignment,replacement_utf[replacement_utf_pos] = 0)<SUB>1801</SUB>> ]
-"9904" [label = <(&lt;operator&gt;.assignment,utf = replacement_utf.get())<SUB>1802</SUB>> ]
-"9910" [label = <(&lt;operator&gt;.assignment,utf8_length = replacement_utf_pos)<SUB>1803</SUB>> ]
-"9919" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1806</SUB>> ]
-"9920" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1806</SUB>> ]
-"9937" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromModifiedUtf8)<SUB>1810</SUB>> ]
-"9942" [label = <(Self,soa.Self())<SUB>1810</SUB>> ]
-"9951" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1811</SUB>> ]
-"9772" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1753</SUB>> ]
-"9788" [label = <(android::base::StringPrintf,android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1758</SUB>> ]
-"9800" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowOutOfMemoryError)<SUB>1760</SUB>> ]
-"9806" [label = <(c_str,error.c_str())<SUB>1760</SUB>> ]
-"9825" [label = <(&lt;operator&gt;.notEquals,utf8_length != 0u)<SUB>1770</SUB>> ]
-"9828" [label = <(&lt;operator&gt;.equals,utf16_length == 0u)<SUB>1770</SUB>> ]
-"9838" [label = <(UINT64_C,UINT64_C(10000000000))<SUB>1774</SUB>> ]
-"9842" [label = <(UINT64_C,UINT64_C(0))<SUB>1775</SUB>> ]
-"9847" [label = <(load,prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1776</SUB>> ]
-"9857" [label = <(NanoTime,NanoTime())<SUB>1777</SUB>> ]
-"9859" [label = <(&lt;operator&gt;.logicalAnd,(prev_time == 0u || now - prev_time &gt;= kMinDelay) &amp;&amp;\012          prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1778</SUB>> ]
-"9884" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.reset)<SUB>1783</SUB>> ]
-"9887" [label = <(&lt;operator&gt;.new,new char[utf8_length + 1u])<SUB>1783</SUB>> ]
-"9891" [label = <(VisitModifiedUtf8Chars,VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1784</SUB>> ]
-"9900" [label = <(&lt;operator&gt;.indirectIndexAccess,replacement_utf[replacement_utf_pos])<SUB>1801</SUB>> ]
-"9906" [label = <(get,replacement_utf.get())<SUB>1802</SUB>> ]
-"9921" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1806</SUB>> ]
-"9926" [label = <(::max,::max())<SUB>1806</SUB>> ]
-"9938" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1810</SUB>> ]
-"9941" [label = <(FIELD_IDENTIFIER,AllocFromModifiedUtf8,AllocFromModifiedUtf8)<SUB>1810</SUB>> ]
-"9943" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1810</SUB>> ]
-"9952" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1811</SUB>> ]
-"9773" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1753</SUB>> ]
-"9774" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1753</SUB>> ]
-"9789" [label = <(&lt;operator&gt;.fieldAccess,android::base::StringPrintf)<SUB>1758</SUB>> ]
-"9801" [label = <(Self,soa.Self())<SUB>1760</SUB>> ]
-"9805" [label = <(FIELD_IDENTIFIER,ThrowOutOfMemoryError,ThrowOutOfMemoryError)<SUB>1760</SUB>> ]
-"9807" [label = <(&lt;operator&gt;.fieldAccess,error.c_str)<SUB>1760</SUB>> ]
-"9848" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.load)<SUB>1776</SUB>> ]
-"9851" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1776</SUB>> ]
-"9860" [label = <(&lt;operator&gt;.logicalOr,prev_time == 0u || now - prev_time &gt;= kMinDelay)<SUB>1778</SUB>> ]
-"9869" [label = <(compare_exchange_strong,prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1779</SUB>> ]
-"9879" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Invalid UTF-8 input to JNI::NewStringUTF()&quot;)<SUB>1780</SUB>> ]
-"9886" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>1783</SUB>> ]
-"9894" [label = <(METHOD_REF,ANY anonymous_lambda_4 (const char* ptr,size_t length),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1787</SUB>> ]
-"9895" [label = <(METHOD_REF,ANY anonymous_lambda_5 (),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1792</SUB>> ]
-"9907" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.get)<SUB>1802</SUB>> ]
-"9922" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1806</SUB>> ]
-"9927" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1806</SUB>> ]
-"9945" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1810</SUB>> ]
-"9954" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1811</SUB>> ]
-"9775" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1753</SUB>> ]
-"9780" [label = <(::max,::max())<SUB>1753</SUB>> ]
-"9790" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>1758</SUB>> ]
-"9793" [label = <(FIELD_IDENTIFIER,StringPrintf,StringPrintf)<SUB>1758</SUB>> ]
-"9802" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1760</SUB>> ]
-"9809" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1760</SUB>> ]
-"9850" [label = <(FIELD_IDENTIFIER,load,load)<SUB>1776</SUB>> ]
-"9853" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1776</SUB>> ]
-"9861" [label = <(&lt;operator&gt;.equals,prev_time == 0u)<SUB>1778</SUB>> ]
-"9864" [label = <(&lt;operator&gt;.greaterEqualsThan,now - prev_time &gt;= kMinDelay)<SUB>1778</SUB>> ]
-"9870" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.compare_exchange_strong)<SUB>1779</SUB>> ]
-"9875" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1779</SUB>> ]
-"9880" [label = <(LOG,LOG(ERROR))<SUB>1780</SUB>> ]
-"9909" [label = <(FIELD_IDENTIFIER,get,get)<SUB>1802</SUB>> ]
-"9924" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1806</SUB>> ]
-"9929" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1806</SUB>> ]
-"9776" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1753</SUB>> ]
-"9781" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1753</SUB>> ]
-"9804" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1760</SUB>> ]
-"9865" [label = <(&lt;operator&gt;.subtraction,now - prev_time)<SUB>1778</SUB>> ]
-"9872" [label = <(FIELD_IDENTIFIER,compare_exchange_strong,compare_exchange_strong)<SUB>1779</SUB>> ]
-"9877" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1779</SUB>> ]
-"9778" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1753</SUB>> ]
-"9783" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1753</SUB>> ]
-"9752" [label = <(METHOD,NewStringUTF)<SUB>1743</SUB>> ]
-"9957" [label = <(METHOD_RETURN,jstring)<SUB>1743</SUB>> ]
+"9764" [label = <(&lt;operator&gt;.assignment,utf8_length = strlen(utf))<SUB>1751</SUB>> ]
+"9814" [label = <(&lt;operator&gt;.assignment,replacement_utf_pos = 0u)<SUB>1763</SUB>> ]
+"9818" [label = <(UNKNOWN,t,t)<SUB>1764</SUB>> ]
+"9819" [label = <(UNKNOWN,utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {},utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {})<SUB>1764</SUB>> ]
+"9820" [label = <(UNKNOWN,,\012 /*bad=*/ []() { return true; },,\012 /*bad=*/ []() { return true; })<SUB>1767</SUB>> ]
+"9821" [label = <(UNKNOWN,);,);)<SUB>1768</SUB>> ]
+"9910" [label = <(DCHECK_LE,DCHECK_LE(utf16_length, utf8_length))<SUB>1803</SUB>> ]
+"9913" [label = <(DCHECK_LE,DCHECK_LE(utf8_length, static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1804</SUB>> ]
+"9928" [label = <(soa,soa(env))<SUB>1806</SUB>> ]
+"9931" [label = <(&lt;operator&gt;.assignment,* result =\012        mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1807</SUB>> ]
+"9946" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1809</SUB>> ]
+"9757" [label = <(&lt;operator&gt;.equals,utf == nullptr)<SUB>1743</SUB>> ]
+"9766" [label = <(strlen,strlen(utf))<SUB>1751</SUB>> ]
+"9769" [label = <(UNLIKELY,UNLIKELY(utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1752</SUB>> ]
+"9823" [label = <(UNLIKELY,UNLIKELY(utf8_length != 0u &amp;&amp; utf16_length == 0u))<SUB>1769</SUB>> ]
+"9915" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1804</SUB>> ]
+"9933" [label = <(mirror::String::AllocFromModifiedUtf8,mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1808</SUB>> ]
+"9947" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1809</SUB>> ]
+"9761" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1744</SUB>> ]
+"9770" [label = <(&lt;operator&gt;.greaterThan,utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1752</SUB>> ]
+"9786" [label = <(&lt;operator&gt;.assignment,error =\012          android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1756</SUB>> ]
+"9797" [label = <(soa,soa(env))<SUB>1758</SUB>> ]
+"9799" [label = <(ThrowOutOfMemoryError,soa.Self()-&gt;ThrowOutOfMemoryError(error.c_str()))<SUB>1759</SUB>> ]
+"9810" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1760</SUB>> ]
+"9824" [label = <(&lt;operator&gt;.logicalAnd,utf8_length != 0u &amp;&amp; utf16_length == 0u)<SUB>1769</SUB>> ]
+"9833" [label = <(&lt;operator&gt;.assignment,kMinDelay = UINT64_C(10000000000))<SUB>1772</SUB>> ]
+"9838" [label = <(prev_bad_input_time,prev_bad_input_time(UINT64_C(0)))<SUB>1773</SUB>> ]
+"9842" [label = <(&lt;operator&gt;.assignment,prev_time = prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1774</SUB>> ]
+"9852" [label = <(&lt;operator&gt;.assignment,now = NanoTime())<SUB>1775</SUB>> ]
+"9880" [label = <(reset,replacement_utf.reset(new char[utf8_length + 1u]))<SUB>1781</SUB>> ]
+"9886" [label = <(&lt;operator&gt;.assignment,utf16_length = VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1782</SUB>> ]
+"9893" [label = <(DCHECK_LE,DCHECK_LE(replacement_utf_pos, utf8_length))<SUB>1798</SUB>> ]
+"9896" [label = <(&lt;operator&gt;.assignment,replacement_utf[replacement_utf_pos] = 0)<SUB>1799</SUB>> ]
+"9901" [label = <(&lt;operator&gt;.assignment,utf = replacement_utf.get())<SUB>1800</SUB>> ]
+"9907" [label = <(&lt;operator&gt;.assignment,utf8_length = replacement_utf_pos)<SUB>1801</SUB>> ]
+"9916" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1804</SUB>> ]
+"9917" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1804</SUB>> ]
+"9934" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromModifiedUtf8)<SUB>1808</SUB>> ]
+"9939" [label = <(Self,soa.Self())<SUB>1808</SUB>> ]
+"9948" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1809</SUB>> ]
+"9772" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1752</SUB>> ]
+"9788" [label = <(android::base::StringPrintf,android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1757</SUB>> ]
+"9800" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowOutOfMemoryError)<SUB>1759</SUB>> ]
+"9806" [label = <(c_str,error.c_str())<SUB>1759</SUB>> ]
+"9825" [label = <(&lt;operator&gt;.notEquals,utf8_length != 0u)<SUB>1769</SUB>> ]
+"9828" [label = <(&lt;operator&gt;.equals,utf16_length == 0u)<SUB>1769</SUB>> ]
+"9835" [label = <(UINT64_C,UINT64_C(10000000000))<SUB>1772</SUB>> ]
+"9839" [label = <(UINT64_C,UINT64_C(0))<SUB>1773</SUB>> ]
+"9844" [label = <(load,prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1774</SUB>> ]
+"9854" [label = <(NanoTime,NanoTime())<SUB>1775</SUB>> ]
+"9856" [label = <(&lt;operator&gt;.logicalAnd,(prev_time == 0u || now - prev_time &gt;= kMinDelay) &amp;&amp;\012          prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1776</SUB>> ]
+"9881" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.reset)<SUB>1781</SUB>> ]
+"9884" [label = <(&lt;operator&gt;.new,new char[utf8_length + 1u])<SUB>1781</SUB>> ]
+"9888" [label = <(VisitModifiedUtf8Chars,VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1782</SUB>> ]
+"9897" [label = <(&lt;operator&gt;.indirectIndexAccess,replacement_utf[replacement_utf_pos])<SUB>1799</SUB>> ]
+"9903" [label = <(get,replacement_utf.get())<SUB>1800</SUB>> ]
+"9918" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1804</SUB>> ]
+"9923" [label = <(::max,::max())<SUB>1804</SUB>> ]
+"9935" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1808</SUB>> ]
+"9938" [label = <(FIELD_IDENTIFIER,AllocFromModifiedUtf8,AllocFromModifiedUtf8)<SUB>1808</SUB>> ]
+"9940" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1808</SUB>> ]
+"9949" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1809</SUB>> ]
+"9773" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1752</SUB>> ]
+"9774" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1752</SUB>> ]
+"9789" [label = <(&lt;operator&gt;.fieldAccess,android::base::StringPrintf)<SUB>1757</SUB>> ]
+"9801" [label = <(Self,soa.Self())<SUB>1759</SUB>> ]
+"9805" [label = <(FIELD_IDENTIFIER,ThrowOutOfMemoryError,ThrowOutOfMemoryError)<SUB>1759</SUB>> ]
+"9807" [label = <(&lt;operator&gt;.fieldAccess,error.c_str)<SUB>1759</SUB>> ]
+"9845" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.load)<SUB>1774</SUB>> ]
+"9848" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1774</SUB>> ]
+"9857" [label = <(&lt;operator&gt;.logicalOr,prev_time == 0u || now - prev_time &gt;= kMinDelay)<SUB>1776</SUB>> ]
+"9866" [label = <(compare_exchange_strong,prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1777</SUB>> ]
+"9876" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Invalid UTF-8 input to JNI::NewStringUTF()&quot;)<SUB>1778</SUB>> ]
+"9883" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>1781</SUB>> ]
+"9891" [label = <(METHOD_REF,ANY anonymous_lambda_4 (const char* ptr,size_t length),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1785</SUB>> ]
+"9892" [label = <(METHOD_REF,ANY anonymous_lambda_5 (),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1790</SUB>> ]
+"9904" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.get)<SUB>1800</SUB>> ]
+"9919" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1804</SUB>> ]
+"9924" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1804</SUB>> ]
+"9942" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1808</SUB>> ]
+"9951" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1809</SUB>> ]
+"9775" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1752</SUB>> ]
+"9780" [label = <(::max,::max())<SUB>1752</SUB>> ]
+"9790" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>1757</SUB>> ]
+"9793" [label = <(FIELD_IDENTIFIER,StringPrintf,StringPrintf)<SUB>1757</SUB>> ]
+"9802" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1759</SUB>> ]
+"9809" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1759</SUB>> ]
+"9847" [label = <(FIELD_IDENTIFIER,load,load)<SUB>1774</SUB>> ]
+"9850" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1774</SUB>> ]
+"9858" [label = <(&lt;operator&gt;.equals,prev_time == 0u)<SUB>1776</SUB>> ]
+"9861" [label = <(&lt;operator&gt;.greaterEqualsThan,now - prev_time &gt;= kMinDelay)<SUB>1776</SUB>> ]
+"9867" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.compare_exchange_strong)<SUB>1777</SUB>> ]
+"9872" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1777</SUB>> ]
+"9877" [label = <(LOG,LOG(ERROR))<SUB>1778</SUB>> ]
+"9906" [label = <(FIELD_IDENTIFIER,get,get)<SUB>1800</SUB>> ]
+"9921" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1804</SUB>> ]
+"9926" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1804</SUB>> ]
+"9776" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1752</SUB>> ]
+"9781" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1752</SUB>> ]
+"9804" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1759</SUB>> ]
+"9862" [label = <(&lt;operator&gt;.subtraction,now - prev_time)<SUB>1776</SUB>> ]
+"9869" [label = <(FIELD_IDENTIFIER,compare_exchange_strong,compare_exchange_strong)<SUB>1777</SUB>> ]
+"9874" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1777</SUB>> ]
+"9778" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1752</SUB>> ]
+"9783" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1752</SUB>> ]
+"9752" [label = <(METHOD,NewStringUTF)<SUB>1742</SUB>> ]
+"9954" [label = <(METHOD_RETURN,jstring)<SUB>1742</SUB>> ]
   "9764" -> "9773" 
   "9814" -> "9818" 
   "9818" -> "9819" 
   "9819" -> "9820" 
   "9820" -> "9821" 
   "9821" -> "9825" 
-  "9913" -> "9919" 
-  "9916" -> "9931" 
-  "9931" -> "9938" 
-  "9934" -> "9954" 
-  "9949" -> "9957" 
+  "9910" -> "9916" 
+  "9913" -> "9928" 
+  "9928" -> "9935" 
+  "9931" -> "9951" 
+  "9946" -> "9954" 
   "9757" -> "9761" 
   "9757" -> "9766" 
   "9766" -> "9764" 
   "9769" -> "9790" 
   "9769" -> "9814" 
-  "9823" -> "9832" 
-  "9823" -> "9913" 
-  "9918" -> "9916" 
-  "9936" -> "9934" 
-  "9950" -> "9949" 
-  "9761" -> "9957" 
+  "9823" -> "9835" 
+  "9823" -> "9910" 
+  "9915" -> "9913" 
+  "9933" -> "9931" 
+  "9947" -> "9946" 
+  "9761" -> "9954" 
   "9770" -> "9769" 
   "9786" -> "9797" 
   "9797" -> "9804" 
   "9799" -> "9810" 
-  "9810" -> "9957" 
+  "9810" -> "9954" 
   "9824" -> "9823" 
-  "9832" -> "9838" 
-  "9836" -> "9842" 
-  "9841" -> "9850" 
-  "9845" -> "9857" 
-  "9855" -> "9861" 
-  "9883" -> "9894" 
-  "9889" -> "9896" 
-  "9896" -> "9900" 
-  "9899" -> "9909" 
-  "9904" -> "9910" 
-  "9910" -> "9913" 
-  "9919" -> "9924" 
-  "9920" -> "9918" 
-  "9937" -> "9945" 
-  "9942" -> "9936" 
-  "9951" -> "9950" 
+  "9833" -> "9839" 
+  "9838" -> "9847" 
+  "9842" -> "9854" 
+  "9852" -> "9858" 
+  "9880" -> "9891" 
+  "9886" -> "9893" 
+  "9893" -> "9897" 
+  "9896" -> "9906" 
+  "9901" -> "9907" 
+  "9907" -> "9910" 
+  "9916" -> "9921" 
+  "9917" -> "9915" 
+  "9934" -> "9942" 
+  "9939" -> "9933" 
+  "9948" -> "9947" 
   "9772" -> "9770" 
   "9788" -> "9786" 
   "9800" -> "9809" 
@@ -158,66 +156,66 @@
   "9825" -> "9824" 
   "9825" -> "9828" 
   "9828" -> "9824" 
-  "9838" -> "9836" 
-  "9842" -> "9841" 
-  "9847" -> "9845" 
-  "9857" -> "9855" 
-  "9859" -> "9880" 
-  "9859" -> "9886" 
-  "9884" -> "9887" 
-  "9887" -> "9883" 
-  "9891" -> "9889" 
-  "9900" -> "9899" 
-  "9906" -> "9904" 
-  "9921" -> "9929" 
-  "9926" -> "9920" 
-  "9938" -> "9941" 
-  "9941" -> "9937" 
-  "9943" -> "9942" 
-  "9952" -> "9951" 
+  "9835" -> "9833" 
+  "9839" -> "9838" 
+  "9844" -> "9842" 
+  "9854" -> "9852" 
+  "9856" -> "9877" 
+  "9856" -> "9883" 
+  "9881" -> "9884" 
+  "9884" -> "9880" 
+  "9888" -> "9886" 
+  "9897" -> "9896" 
+  "9903" -> "9901" 
+  "9918" -> "9926" 
+  "9923" -> "9917" 
+  "9935" -> "9938" 
+  "9938" -> "9934" 
+  "9940" -> "9939" 
+  "9949" -> "9948" 
   "9773" -> "9778" 
   "9774" -> "9772" 
   "9789" -> "9788" 
   "9801" -> "9805" 
   "9805" -> "9800" 
   "9807" -> "9806" 
-  "9848" -> "9853" 
-  "9851" -> "9847" 
-  "9860" -> "9859" 
-  "9860" -> "9872" 
-  "9869" -> "9859" 
-  "9879" -> "9886" 
-  "9886" -> "9884" 
-  "9894" -> "9895" 
-  "9895" -> "9891" 
-  "9907" -> "9906" 
-  "9922" -> "9921" 
-  "9927" -> "9926" 
-  "9945" -> "9943" 
-  "9954" -> "9952" 
+  "9845" -> "9850" 
+  "9848" -> "9844" 
+  "9857" -> "9856" 
+  "9857" -> "9869" 
+  "9866" -> "9856" 
+  "9876" -> "9883" 
+  "9883" -> "9881" 
+  "9891" -> "9892" 
+  "9892" -> "9888" 
+  "9904" -> "9903" 
+  "9919" -> "9918" 
+  "9924" -> "9923" 
+  "9942" -> "9940" 
+  "9951" -> "9949" 
   "9775" -> "9783" 
   "9780" -> "9774" 
   "9790" -> "9793" 
   "9793" -> "9789" 
   "9802" -> "9801" 
   "9809" -> "9807" 
+  "9847" -> "9845" 
   "9850" -> "9848" 
-  "9853" -> "9851" 
-  "9861" -> "9860" 
-  "9861" -> "9865" 
-  "9864" -> "9860" 
-  "9870" -> "9877" 
-  "9875" -> "9869" 
-  "9880" -> "9879" 
-  "9909" -> "9907" 
-  "9924" -> "9922" 
-  "9929" -> "9927" 
+  "9858" -> "9857" 
+  "9858" -> "9862" 
+  "9861" -> "9857" 
+  "9867" -> "9874" 
+  "9872" -> "9866" 
+  "9877" -> "9876" 
+  "9906" -> "9904" 
+  "9921" -> "9919" 
+  "9926" -> "9924" 
   "9776" -> "9775" 
   "9781" -> "9780" 
   "9804" -> "9802" 
-  "9865" -> "9864" 
-  "9872" -> "9870" 
-  "9877" -> "9875" 
+  "9862" -> "9861" 
+  "9869" -> "9867" 
+  "9874" -> "9872" 
   "9778" -> "9776" 
   "9783" -> "9781" 
   "9752" -> "9757" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/182-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/182-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/182-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/182-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,45 +1,45 @@
 digraph "GetStringLength" {  
-"9963" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1815</SUB>> ]
-"9982" [label = <(soa,soa(env))<SUB>1816</SUB>> ]
-"9984" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();)<SUB>1817</SUB>> ]
-"9985" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength())<SUB>1817</SUB>> ]
-"9986" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1817</SUB>> ]
-"9993" [label = <(GetLength,(java_string)-&gt;GetLength())<SUB>1817</SUB>> ]
-"9967" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1815</SUB>> ]
-"9987" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1817</SUB>> ]
-"9990" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1817</SUB>> ]
-"9994" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetLength)<SUB>1817</SUB>> ]
-"9968" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1815</SUB>> ]
-"9972" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1815</SUB>> ]
-"9979" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1815</SUB>> ]
-"9989" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1817</SUB>> ]
-"9992" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1817</SUB>> ]
-"9996" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1817</SUB>> ]
-"9973" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1815</SUB>> ]
-"9974" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1815</SUB>> ]
-"9976" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1815</SUB>> ]
-"9959" [label = <(METHOD,GetStringLength)<SUB>1814</SUB>> ]
-"9997" [label = <(METHOD_RETURN,jsize)<SUB>1814</SUB>> ]
-  "9963" -> "9968" 
-  "9963" -> "9982" 
-  "9982" -> "9989" 
-  "9984" -> "9997" 
-  "9985" -> "9984" 
-  "9986" -> "9996" 
-  "9993" -> "9985" 
-  "9967" -> "9974" 
-  "9967" -> "9982" 
-  "9987" -> "9992" 
-  "9990" -> "9986" 
-  "9994" -> "9993" 
-  "9968" -> "9967" 
-  "9972" -> "9979" 
-  "9979" -> "9997" 
+"9960" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1813</SUB>> ]
+"9979" [label = <(soa,soa(env))<SUB>1814</SUB>> ]
+"9981" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();)<SUB>1815</SUB>> ]
+"9982" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength())<SUB>1815</SUB>> ]
+"9983" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1815</SUB>> ]
+"9990" [label = <(GetLength,(java_string)-&gt;GetLength())<SUB>1815</SUB>> ]
+"9964" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1813</SUB>> ]
+"9984" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1815</SUB>> ]
+"9987" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1815</SUB>> ]
+"9991" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetLength)<SUB>1815</SUB>> ]
+"9965" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1813</SUB>> ]
+"9969" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1813</SUB>> ]
+"9976" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1813</SUB>> ]
+"9986" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1815</SUB>> ]
+"9989" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1815</SUB>> ]
+"9993" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1815</SUB>> ]
+"9970" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1813</SUB>> ]
+"9971" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1813</SUB>> ]
+"9973" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1813</SUB>> ]
+"9956" [label = <(METHOD,GetStringLength)<SUB>1812</SUB>> ]
+"9994" [label = <(METHOD_RETURN,jsize)<SUB>1812</SUB>> ]
+  "9960" -> "9965" 
+  "9960" -> "9979" 
+  "9979" -> "9986" 
+  "9981" -> "9994" 
+  "9982" -> "9981" 
+  "9983" -> "9993" 
+  "9990" -> "9982" 
+  "9964" -> "9971" 
+  "9964" -> "9979" 
+  "9984" -> "9989" 
+  "9987" -> "9983" 
+  "9991" -> "9990" 
+  "9965" -> "9964" 
+  "9969" -> "9976" 
+  "9976" -> "9994" 
+  "9986" -> "9984" 
   "9989" -> "9987" 
-  "9992" -> "9990" 
-  "9996" -> "9994" 
-  "9973" -> "9972" 
-  "9974" -> "9976" 
-  "9976" -> "9973" 
-  "9959" -> "9963" 
+  "9993" -> "9991" 
+  "9970" -> "9969" 
+  "9971" -> "9973" 
+  "9973" -> "9970" 
+  "9956" -> "9960" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/183-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/183-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/183-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/183-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,45 +1,45 @@
 digraph "GetStringUTFLength" {  
-"10003" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1821</SUB>> ]
-"10022" [label = <(soa,soa(env))<SUB>1822</SUB>> ]
-"10024" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();)<SUB>1823</SUB>> ]
-"10025" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength())<SUB>1823</SUB>> ]
-"10026" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1823</SUB>> ]
-"10033" [label = <(GetUtfLength,(java_string)-&gt;GetUtfLength())<SUB>1823</SUB>> ]
-"10007" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1821</SUB>> ]
-"10027" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1823</SUB>> ]
-"10030" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1823</SUB>> ]
-"10034" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetUtfLength)<SUB>1823</SUB>> ]
-"10008" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1821</SUB>> ]
-"10012" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1821</SUB>> ]
-"10019" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1821</SUB>> ]
-"10029" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1823</SUB>> ]
-"10032" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1823</SUB>> ]
-"10036" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>1823</SUB>> ]
-"10013" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1821</SUB>> ]
-"10014" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1821</SUB>> ]
-"10016" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1821</SUB>> ]
-"9999" [label = <(METHOD,GetStringUTFLength)<SUB>1820</SUB>> ]
-"10037" [label = <(METHOD_RETURN,jsize)<SUB>1820</SUB>> ]
-  "10003" -> "10008" 
-  "10003" -> "10022" 
-  "10022" -> "10029" 
-  "10024" -> "10037" 
-  "10025" -> "10024" 
-  "10026" -> "10036" 
-  "10033" -> "10025" 
-  "10007" -> "10014" 
-  "10007" -> "10022" 
-  "10027" -> "10032" 
-  "10030" -> "10026" 
-  "10034" -> "10033" 
-  "10008" -> "10007" 
-  "10012" -> "10019" 
-  "10019" -> "10037" 
+"10000" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1819</SUB>> ]
+"10019" [label = <(soa,soa(env))<SUB>1820</SUB>> ]
+"10021" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();)<SUB>1821</SUB>> ]
+"10022" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength())<SUB>1821</SUB>> ]
+"10023" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1821</SUB>> ]
+"10030" [label = <(GetUtfLength,(java_string)-&gt;GetUtfLength())<SUB>1821</SUB>> ]
+"10004" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1819</SUB>> ]
+"10024" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1821</SUB>> ]
+"10027" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1821</SUB>> ]
+"10031" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetUtfLength)<SUB>1821</SUB>> ]
+"10005" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1819</SUB>> ]
+"10009" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1819</SUB>> ]
+"10016" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1819</SUB>> ]
+"10026" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1821</SUB>> ]
+"10029" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1821</SUB>> ]
+"10033" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>1821</SUB>> ]
+"10010" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1819</SUB>> ]
+"10011" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1819</SUB>> ]
+"10013" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1819</SUB>> ]
+"9996" [label = <(METHOD,GetStringUTFLength)<SUB>1818</SUB>> ]
+"10034" [label = <(METHOD_RETURN,jsize)<SUB>1818</SUB>> ]
+  "10000" -> "10005" 
+  "10000" -> "10019" 
+  "10019" -> "10026" 
+  "10021" -> "10034" 
+  "10022" -> "10021" 
+  "10023" -> "10033" 
+  "10030" -> "10022" 
+  "10004" -> "10011" 
+  "10004" -> "10019" 
+  "10024" -> "10029" 
+  "10027" -> "10023" 
+  "10031" -> "10030" 
+  "10005" -> "10004" 
+  "10009" -> "10016" 
+  "10016" -> "10034" 
+  "10026" -> "10024" 
   "10029" -> "10027" 
-  "10032" -> "10030" 
-  "10036" -> "10034" 
-  "10013" -> "10012" 
-  "10014" -> "10016" 
-  "10016" -> "10013" 
-  "9999" -> "10003" 
+  "10033" -> "10031" 
+  "10010" -> "10009" 
+  "10011" -> "10013" 
+  "10013" -> "10010" 
+  "9996" -> "10000" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/184-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/184-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/184-cfg.dot	2023-06-07 19:34:22.157390824 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/184-cfg.dot	2023-06-07 19:34:28.667390216 +0330
@@ -1,149 +1,149 @@
 digraph "GetStringRegion" {  
-"10046" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1828</SUB>> ]
-"10064" [label = <(soa,soa(env))<SUB>1829</SUB>> ]
-"10066" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1830</SUB>> ]
-"10067" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1830</SUB>> ]
-"10074" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1830</SUB>> ]
-"10084" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1831</SUB>> ]
-"10068" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1830</SUB>> ]
-"10075" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1830</SUB>> ]
-"10085" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1831</SUB>> ]
-"10092" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1831</SUB>> ]
-"10101" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1832</SUB>> ]
-"10050" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1828</SUB>> ]
-"10070" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1830</SUB>> ]
-"10076" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1830</SUB>> ]
-"10079" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1830</SUB>> ]
-"10086" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1831</SUB>> ]
-"10089" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1831</SUB>> ]
-"10094" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1831</SUB>> ]
-"10105" [label = <(GetLength,s-&gt;GetLength())<SUB>1832</SUB>> ]
-"10111" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1834</SUB>> ]
-"10051" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1828</SUB>> ]
-"10055" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1828</SUB>> ]
-"10062" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1828</SUB>> ]
-"10072" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1830</SUB>> ]
-"10078" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1830</SUB>> ]
-"10081" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1830</SUB>> ]
-"10095" [label = <(GetLength,s-&gt;GetLength())<SUB>1831</SUB>> ]
-"10106" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1832</SUB>> ]
-"10134" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1835</SUB>> ]
-"10056" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1828</SUB>> ]
-"10096" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1831</SUB>> ]
-"10108" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1832</SUB>> ]
-"10135" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1835</SUB>> ]
-"10057" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1828</SUB>> ]
-"10059" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1828</SUB>> ]
-"10098" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1831</SUB>> ]
-"10116" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1834</SUB>> ]
-"10137" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1835</SUB>> ]
-"10145" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1836</SUB>> ]
-"10148" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1836</SUB>> ]
-"10167" [label = <(&lt;operator&gt;.assignment,* chars = static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1840</SUB>> ]
-"10175" [label = <(memcpy,memcpy(buf, chars + start, length * sizeof(jchar)))<SUB>1841</SUB>> ]
-"10117" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1834</SUB>> ]
-"10125" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;buf == null&quot;))<SUB>1834</SUB>> ]
-"10132" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1834</SUB>> ]
-"10142" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1836</SUB>> ]
-"10151" [label = <(&lt;operator&gt;.assignment,buf[i] = static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1837</SUB>> ]
-"10169" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1840</SUB>> ]
-"10177" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1841</SUB>> ]
-"10180" [label = <(&lt;operator&gt;.multiplication,length * sizeof(jchar))<SUB>1841</SUB>> ]
-"10118" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1834</SUB>> ]
-"10121" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1834</SUB>> ]
-"10126" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1834</SUB>> ]
-"10152" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1837</SUB>> ]
-"10155" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1837</SUB>> ]
-"10170" [label = <(UNKNOWN,jchar*,jchar*)<SUB>1840</SUB>> ]
-"10171" [label = <(GetValue,s-&gt;GetValue())<SUB>1840</SUB>> ]
-"10182" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>1841</SUB>> ]
-"10127" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1834</SUB>> ]
-"10129" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1834</SUB>> ]
-"10156" [label = <(UNKNOWN,jchar,jchar)<SUB>1837</SUB>> ]
-"10157" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1837</SUB>> ]
-"10172" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1840</SUB>> ]
-"10158" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1837</SUB>> ]
-"10161" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1837</SUB>> ]
-"10174" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1840</SUB>> ]
-"10160" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1837</SUB>> ]
-"10039" [label = <(METHOD,GetStringRegion)<SUB>1826</SUB>> ]
-"10184" [label = <(METHOD_RETURN,void)<SUB>1826</SUB>> ]
-  "10046" -> "10051" 
-  "10046" -> "10064" 
-  "10064" -> "10072" 
-  "10066" -> "10086" 
-  "10067" -> "10078" 
-  "10074" -> "10066" 
-  "10084" -> "10108" 
-  "10084" -> "10111" 
-  "10068" -> "10067" 
-  "10075" -> "10074" 
-  "10085" -> "10084" 
-  "10085" -> "10098" 
-  "10092" -> "10084" 
-  "10101" -> "10184" 
-  "10050" -> "10057" 
-  "10050" -> "10064" 
-  "10070" -> "10068" 
-  "10076" -> "10081" 
-  "10079" -> "10075" 
-  "10086" -> "10085" 
-  "10086" -> "10089" 
-  "10089" -> "10085" 
-  "10094" -> "10092" 
-  "10105" -> "10101" 
-  "10111" -> "10118" 
-  "10111" -> "10137" 
-  "10051" -> "10050" 
-  "10055" -> "10062" 
-  "10062" -> "10184" 
-  "10072" -> "10070" 
+"10043" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1826</SUB>> ]
+"10061" [label = <(soa,soa(env))<SUB>1827</SUB>> ]
+"10063" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1828</SUB>> ]
+"10064" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1828</SUB>> ]
+"10071" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1828</SUB>> ]
+"10081" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1829</SUB>> ]
+"10065" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1828</SUB>> ]
+"10072" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1828</SUB>> ]
+"10082" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1829</SUB>> ]
+"10089" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1829</SUB>> ]
+"10098" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1830</SUB>> ]
+"10047" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1826</SUB>> ]
+"10067" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1828</SUB>> ]
+"10073" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1828</SUB>> ]
+"10076" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1828</SUB>> ]
+"10083" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1829</SUB>> ]
+"10086" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1829</SUB>> ]
+"10091" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1829</SUB>> ]
+"10102" [label = <(GetLength,s-&gt;GetLength())<SUB>1830</SUB>> ]
+"10108" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1832</SUB>> ]
+"10048" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1826</SUB>> ]
+"10052" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1826</SUB>> ]
+"10059" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1826</SUB>> ]
+"10069" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1828</SUB>> ]
+"10075" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1828</SUB>> ]
+"10078" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1828</SUB>> ]
+"10092" [label = <(GetLength,s-&gt;GetLength())<SUB>1829</SUB>> ]
+"10103" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1830</SUB>> ]
+"10131" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1833</SUB>> ]
+"10053" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1826</SUB>> ]
+"10093" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1829</SUB>> ]
+"10105" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1830</SUB>> ]
+"10132" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1833</SUB>> ]
+"10054" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1826</SUB>> ]
+"10056" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1826</SUB>> ]
+"10095" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1829</SUB>> ]
+"10113" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1832</SUB>> ]
+"10134" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1833</SUB>> ]
+"10142" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1834</SUB>> ]
+"10145" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1834</SUB>> ]
+"10164" [label = <(&lt;operator&gt;.assignment,* chars = static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1838</SUB>> ]
+"10172" [label = <(memcpy,memcpy(buf, chars + start, length * sizeof(jchar)))<SUB>1839</SUB>> ]
+"10114" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1832</SUB>> ]
+"10122" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;buf == null&quot;))<SUB>1832</SUB>> ]
+"10129" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1832</SUB>> ]
+"10139" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1834</SUB>> ]
+"10148" [label = <(&lt;operator&gt;.assignment,buf[i] = static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1835</SUB>> ]
+"10166" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1838</SUB>> ]
+"10174" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1839</SUB>> ]
+"10177" [label = <(&lt;operator&gt;.multiplication,length * sizeof(jchar))<SUB>1839</SUB>> ]
+"10115" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1832</SUB>> ]
+"10118" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1832</SUB>> ]
+"10123" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1832</SUB>> ]
+"10149" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1835</SUB>> ]
+"10152" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1835</SUB>> ]
+"10167" [label = <(UNKNOWN,jchar*,jchar*)<SUB>1838</SUB>> ]
+"10168" [label = <(GetValue,s-&gt;GetValue())<SUB>1838</SUB>> ]
+"10179" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>1839</SUB>> ]
+"10124" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1832</SUB>> ]
+"10126" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1832</SUB>> ]
+"10153" [label = <(UNKNOWN,jchar,jchar)<SUB>1835</SUB>> ]
+"10154" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1835</SUB>> ]
+"10169" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1838</SUB>> ]
+"10155" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1835</SUB>> ]
+"10158" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1835</SUB>> ]
+"10171" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1838</SUB>> ]
+"10157" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1835</SUB>> ]
+"10036" [label = <(METHOD,GetStringRegion)<SUB>1824</SUB>> ]
+"10181" [label = <(METHOD_RETURN,void)<SUB>1824</SUB>> ]
+  "10043" -> "10048" 
+  "10043" -> "10061" 
+  "10061" -> "10069" 
+  "10063" -> "10083" 
+  "10064" -> "10075" 
+  "10071" -> "10063" 
+  "10081" -> "10105" 
+  "10081" -> "10108" 
+  "10065" -> "10064" 
+  "10072" -> "10071" 
+  "10082" -> "10081" 
+  "10082" -> "10095" 
+  "10089" -> "10081" 
+  "10098" -> "10181" 
+  "10047" -> "10054" 
+  "10047" -> "10061" 
+  "10067" -> "10065" 
+  "10073" -> "10078" 
+  "10076" -> "10072" 
+  "10083" -> "10082" 
+  "10083" -> "10086" 
+  "10086" -> "10082" 
+  "10091" -> "10089" 
+  "10102" -> "10098" 
+  "10108" -> "10115" 
+  "10108" -> "10134" 
+  "10048" -> "10047" 
+  "10052" -> "10059" 
+  "10059" -> "10181" 
+  "10069" -> "10067" 
+  "10075" -> "10073" 
   "10078" -> "10076" 
-  "10081" -> "10079" 
-  "10095" -> "10094" 
-  "10106" -> "10105" 
-  "10134" -> "10142" 
-  "10134" -> "10170" 
-  "10056" -> "10055" 
-  "10096" -> "10095" 
-  "10108" -> "10106" 
-  "10135" -> "10134" 
-  "10057" -> "10059" 
-  "10059" -> "10056" 
-  "10098" -> "10096" 
-  "10116" -> "10127" 
-  "10116" -> "10137" 
-  "10137" -> "10135" 
-  "10145" -> "10184" 
-  "10145" -> "10152" 
+  "10092" -> "10091" 
+  "10103" -> "10102" 
+  "10131" -> "10139" 
+  "10131" -> "10167" 
+  "10053" -> "10052" 
+  "10093" -> "10092" 
+  "10105" -> "10103" 
+  "10132" -> "10131" 
+  "10054" -> "10056" 
+  "10056" -> "10053" 
+  "10095" -> "10093" 
+  "10113" -> "10124" 
+  "10113" -> "10134" 
+  "10134" -> "10132" 
+  "10142" -> "10181" 
+  "10142" -> "10149" 
+  "10145" -> "10142" 
+  "10164" -> "10174" 
+  "10172" -> "10181" 
+  "10114" -> "10113" 
+  "10122" -> "10129" 
+  "10129" -> "10181" 
+  "10139" -> "10142" 
   "10148" -> "10145" 
-  "10167" -> "10177" 
-  "10175" -> "10184" 
-  "10117" -> "10116" 
-  "10125" -> "10132" 
-  "10132" -> "10184" 
-  "10142" -> "10145" 
-  "10151" -> "10148" 
-  "10169" -> "10167" 
-  "10177" -> "10182" 
-  "10180" -> "10175" 
-  "10118" -> "10117" 
-  "10118" -> "10121" 
-  "10121" -> "10117" 
-  "10126" -> "10125" 
-  "10152" -> "10156" 
-  "10155" -> "10151" 
-  "10170" -> "10174" 
+  "10166" -> "10164" 
+  "10174" -> "10179" 
+  "10177" -> "10172" 
+  "10115" -> "10114" 
+  "10115" -> "10118" 
+  "10118" -> "10114" 
+  "10123" -> "10122" 
+  "10149" -> "10153" 
+  "10152" -> "10148" 
+  "10167" -> "10171" 
+  "10168" -> "10166" 
+  "10179" -> "10177" 
+  "10124" -> "10126" 
+  "10126" -> "10123" 
+  "10153" -> "10157" 
+  "10154" -> "10152" 
+  "10169" -> "10168" 
+  "10155" -> "10158" 
+  "10158" -> "10154" 
   "10171" -> "10169" 
-  "10182" -> "10180" 
-  "10127" -> "10129" 
-  "10129" -> "10126" 
-  "10156" -> "10160" 
   "10157" -> "10155" 
-  "10172" -> "10171" 
-  "10158" -> "10161" 
-  "10161" -> "10157" 
-  "10174" -> "10172" 
-  "10160" -> "10158" 
-  "10039" -> "10046" 
+  "10036" -> "10043" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/185-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/185-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/185-cfg.dot	2023-06-07 19:34:22.167390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/185-cfg.dot	2023-06-07 19:34:28.677390217 +0330
@@ -1,143 +1,143 @@
 digraph "GetStringUTFRegion" {  
-"10193" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1848</SUB>> ]
-"10211" [label = <(soa,soa(env))<SUB>1849</SUB>> ]
-"10213" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1850</SUB>> ]
-"10214" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1850</SUB>> ]
-"10221" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1850</SUB>> ]
-"10231" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1851</SUB>> ]
-"10215" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1850</SUB>> ]
-"10222" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1850</SUB>> ]
-"10232" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1851</SUB>> ]
-"10239" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1851</SUB>> ]
-"10248" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1852</SUB>> ]
-"10197" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1848</SUB>> ]
-"10217" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1850</SUB>> ]
-"10223" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1850</SUB>> ]
-"10226" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1850</SUB>> ]
-"10233" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1851</SUB>> ]
-"10236" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1851</SUB>> ]
-"10241" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1851</SUB>> ]
-"10252" [label = <(GetLength,s-&gt;GetLength())<SUB>1852</SUB>> ]
-"10258" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1854</SUB>> ]
-"10198" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1848</SUB>> ]
-"10202" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1848</SUB>> ]
-"10209" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1848</SUB>> ]
-"10219" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1850</SUB>> ]
-"10225" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1850</SUB>> ]
-"10228" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1850</SUB>> ]
-"10242" [label = <(GetLength,s-&gt;GetLength())<SUB>1851</SUB>> ]
-"10253" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1852</SUB>> ]
-"10281" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1855</SUB>> ]
-"10203" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1848</SUB>> ]
-"10243" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1851</SUB>> ]
-"10255" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1852</SUB>> ]
-"10282" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1855</SUB>> ]
-"10204" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1848</SUB>> ]
-"10206" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1848</SUB>> ]
-"10245" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1851</SUB>> ]
-"10263" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1854</SUB>> ]
-"10284" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1855</SUB>> ]
-"10292" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1856</SUB>> ]
-"10295" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1856</SUB>> ]
-"10312" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>1860</SUB>> ]
-"10319" [label = <(&lt;operator&gt;.assignment,bytes = CountUtf8Bytes(chars + start, length))<SUB>1861</SUB>> ]
-"10326" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(buf, bytes, chars + start, length))<SUB>1862</SUB>> ]
-"10264" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1854</SUB>> ]
-"10272" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;buf == null&quot;))<SUB>1854</SUB>> ]
-"10279" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1854</SUB>> ]
-"10289" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1856</SUB>> ]
-"10298" [label = <(&lt;operator&gt;.assignment,buf[i] = s-&gt;CharAt(start+i))<SUB>1857</SUB>> ]
-"10314" [label = <(GetValue,s-&gt;GetValue())<SUB>1860</SUB>> ]
-"10321" [label = <(CountUtf8Bytes,CountUtf8Bytes(chars + start, length))<SUB>1861</SUB>> ]
-"10329" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1862</SUB>> ]
-"10265" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1854</SUB>> ]
-"10268" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1854</SUB>> ]
-"10273" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1854</SUB>> ]
-"10299" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1857</SUB>> ]
-"10302" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1857</SUB>> ]
-"10315" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1860</SUB>> ]
-"10322" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1861</SUB>> ]
-"10274" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1854</SUB>> ]
-"10276" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1854</SUB>> ]
-"10303" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1857</SUB>> ]
-"10306" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1857</SUB>> ]
-"10317" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1860</SUB>> ]
-"10305" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1857</SUB>> ]
-"10186" [label = <(METHOD,GetStringUTFRegion)<SUB>1846</SUB>> ]
-"10333" [label = <(METHOD_RETURN,void)<SUB>1846</SUB>> ]
-  "10193" -> "10198" 
-  "10193" -> "10211" 
-  "10211" -> "10219" 
-  "10213" -> "10233" 
-  "10214" -> "10225" 
-  "10221" -> "10213" 
-  "10231" -> "10255" 
-  "10231" -> "10258" 
-  "10215" -> "10214" 
-  "10222" -> "10221" 
-  "10232" -> "10231" 
-  "10232" -> "10245" 
-  "10239" -> "10231" 
-  "10248" -> "10333" 
-  "10197" -> "10204" 
-  "10197" -> "10211" 
-  "10217" -> "10215" 
-  "10223" -> "10228" 
-  "10226" -> "10222" 
-  "10233" -> "10232" 
-  "10233" -> "10236" 
-  "10236" -> "10232" 
-  "10241" -> "10239" 
-  "10252" -> "10248" 
-  "10258" -> "10265" 
-  "10258" -> "10284" 
-  "10198" -> "10197" 
-  "10202" -> "10209" 
-  "10209" -> "10333" 
-  "10219" -> "10217" 
+"10190" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1846</SUB>> ]
+"10208" [label = <(soa,soa(env))<SUB>1847</SUB>> ]
+"10210" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1848</SUB>> ]
+"10211" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1848</SUB>> ]
+"10218" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1848</SUB>> ]
+"10228" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1849</SUB>> ]
+"10212" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1848</SUB>> ]
+"10219" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1848</SUB>> ]
+"10229" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1849</SUB>> ]
+"10236" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1849</SUB>> ]
+"10245" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1850</SUB>> ]
+"10194" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1846</SUB>> ]
+"10214" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1848</SUB>> ]
+"10220" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1848</SUB>> ]
+"10223" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1848</SUB>> ]
+"10230" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1849</SUB>> ]
+"10233" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1849</SUB>> ]
+"10238" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1849</SUB>> ]
+"10249" [label = <(GetLength,s-&gt;GetLength())<SUB>1850</SUB>> ]
+"10255" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1852</SUB>> ]
+"10195" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1846</SUB>> ]
+"10199" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1846</SUB>> ]
+"10206" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1846</SUB>> ]
+"10216" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1848</SUB>> ]
+"10222" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1848</SUB>> ]
+"10225" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1848</SUB>> ]
+"10239" [label = <(GetLength,s-&gt;GetLength())<SUB>1849</SUB>> ]
+"10250" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1850</SUB>> ]
+"10278" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1853</SUB>> ]
+"10200" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1846</SUB>> ]
+"10240" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1849</SUB>> ]
+"10252" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1850</SUB>> ]
+"10279" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1853</SUB>> ]
+"10201" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1846</SUB>> ]
+"10203" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1846</SUB>> ]
+"10242" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1849</SUB>> ]
+"10260" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1852</SUB>> ]
+"10281" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1853</SUB>> ]
+"10289" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1854</SUB>> ]
+"10292" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1854</SUB>> ]
+"10309" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>1858</SUB>> ]
+"10316" [label = <(&lt;operator&gt;.assignment,bytes = CountUtf8Bytes(chars + start, length))<SUB>1859</SUB>> ]
+"10323" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(buf, bytes, chars + start, length))<SUB>1860</SUB>> ]
+"10261" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1852</SUB>> ]
+"10269" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;buf == null&quot;))<SUB>1852</SUB>> ]
+"10276" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1852</SUB>> ]
+"10286" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1854</SUB>> ]
+"10295" [label = <(&lt;operator&gt;.assignment,buf[i] = s-&gt;CharAt(start+i))<SUB>1855</SUB>> ]
+"10311" [label = <(GetValue,s-&gt;GetValue())<SUB>1858</SUB>> ]
+"10318" [label = <(CountUtf8Bytes,CountUtf8Bytes(chars + start, length))<SUB>1859</SUB>> ]
+"10326" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1860</SUB>> ]
+"10262" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1852</SUB>> ]
+"10265" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1852</SUB>> ]
+"10270" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1852</SUB>> ]
+"10296" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1855</SUB>> ]
+"10299" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1855</SUB>> ]
+"10312" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1858</SUB>> ]
+"10319" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1859</SUB>> ]
+"10271" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1852</SUB>> ]
+"10273" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1852</SUB>> ]
+"10300" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1855</SUB>> ]
+"10303" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1855</SUB>> ]
+"10314" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1858</SUB>> ]
+"10302" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1855</SUB>> ]
+"10183" [label = <(METHOD,GetStringUTFRegion)<SUB>1844</SUB>> ]
+"10330" [label = <(METHOD_RETURN,void)<SUB>1844</SUB>> ]
+  "10190" -> "10195" 
+  "10190" -> "10208" 
+  "10208" -> "10216" 
+  "10210" -> "10230" 
+  "10211" -> "10222" 
+  "10218" -> "10210" 
+  "10228" -> "10252" 
+  "10228" -> "10255" 
+  "10212" -> "10211" 
+  "10219" -> "10218" 
+  "10229" -> "10228" 
+  "10229" -> "10242" 
+  "10236" -> "10228" 
+  "10245" -> "10330" 
+  "10194" -> "10201" 
+  "10194" -> "10208" 
+  "10214" -> "10212" 
+  "10220" -> "10225" 
+  "10223" -> "10219" 
+  "10230" -> "10229" 
+  "10230" -> "10233" 
+  "10233" -> "10229" 
+  "10238" -> "10236" 
+  "10249" -> "10245" 
+  "10255" -> "10262" 
+  "10255" -> "10281" 
+  "10195" -> "10194" 
+  "10199" -> "10206" 
+  "10206" -> "10330" 
+  "10216" -> "10214" 
+  "10222" -> "10220" 
   "10225" -> "10223" 
-  "10228" -> "10226" 
-  "10242" -> "10241" 
-  "10253" -> "10252" 
-  "10281" -> "10289" 
-  "10281" -> "10317" 
-  "10203" -> "10202" 
-  "10243" -> "10242" 
-  "10255" -> "10253" 
-  "10282" -> "10281" 
-  "10204" -> "10206" 
-  "10206" -> "10203" 
-  "10245" -> "10243" 
-  "10263" -> "10274" 
-  "10263" -> "10284" 
-  "10284" -> "10282" 
-  "10292" -> "10333" 
-  "10292" -> "10299" 
+  "10239" -> "10238" 
+  "10250" -> "10249" 
+  "10278" -> "10286" 
+  "10278" -> "10314" 
+  "10200" -> "10199" 
+  "10240" -> "10239" 
+  "10252" -> "10250" 
+  "10279" -> "10278" 
+  "10201" -> "10203" 
+  "10203" -> "10200" 
+  "10242" -> "10240" 
+  "10260" -> "10271" 
+  "10260" -> "10281" 
+  "10281" -> "10279" 
+  "10289" -> "10330" 
+  "10289" -> "10296" 
+  "10292" -> "10289" 
+  "10309" -> "10319" 
+  "10316" -> "10326" 
+  "10323" -> "10330" 
+  "10261" -> "10260" 
+  "10269" -> "10276" 
+  "10276" -> "10330" 
+  "10286" -> "10289" 
   "10295" -> "10292" 
-  "10312" -> "10322" 
-  "10319" -> "10329" 
-  "10326" -> "10333" 
-  "10264" -> "10263" 
-  "10272" -> "10279" 
-  "10279" -> "10333" 
-  "10289" -> "10292" 
-  "10298" -> "10295" 
+  "10311" -> "10309" 
+  "10318" -> "10316" 
+  "10326" -> "10323" 
+  "10262" -> "10261" 
+  "10262" -> "10265" 
+  "10265" -> "10261" 
+  "10270" -> "10269" 
+  "10296" -> "10302" 
+  "10299" -> "10295" 
+  "10312" -> "10311" 
+  "10319" -> "10318" 
+  "10271" -> "10273" 
+  "10273" -> "10270" 
+  "10300" -> "10303" 
+  "10303" -> "10299" 
   "10314" -> "10312" 
-  "10321" -> "10319" 
-  "10329" -> "10326" 
-  "10265" -> "10264" 
-  "10265" -> "10268" 
-  "10268" -> "10264" 
-  "10273" -> "10272" 
-  "10299" -> "10305" 
-  "10302" -> "10298" 
-  "10315" -> "10314" 
-  "10322" -> "10321" 
-  "10274" -> "10276" 
-  "10276" -> "10273" 
-  "10303" -> "10306" 
-  "10306" -> "10302" 
-  "10317" -> "10315" 
-  "10305" -> "10303" 
-  "10186" -> "10193" 
+  "10302" -> "10300" 
+  "10183" -> "10190" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/186-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/186-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/186-cfg.dot	2023-06-07 19:34:22.167390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/186-cfg.dot	2023-06-07 19:34:28.677390217 +0330
@@ -1,159 +1,159 @@
 digraph "GetStringChars" {  
-"10340" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1868</SUB>> ]
-"10359" [label = <(soa,soa(env))<SUB>1869</SUB>> ]
-"10361" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1870</SUB>> ]
-"10379" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>1871</SUB>> ]
-"10474" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>1890</SUB>> ]
-"10362" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1870</SUB>> ]
-"10369" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1870</SUB>> ]
-"10381" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>1871</SUB>> ]
-"10389" [label = <(&lt;operator&gt;.logicalOr,heap-&gt;IsMovableObject(s) || s-&gt;IsCompressed())<SUB>1872</SUB>> ]
-"10466" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1887</SUB>> ]
-"10475" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1890</SUB>> ]
-"10363" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1870</SUB>> ]
-"10370" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1870</SUB>> ]
-"10382" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>1871</SUB>> ]
-"10390" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>1872</SUB>> ]
-"10395" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1872</SUB>> ]
-"10401" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[s-&gt;GetLength()])<SUB>1873</SUB>> ]
-"10463" [label = <(RETURN,return chars;,return chars;)<SUB>1885</SUB>> ]
-"10470" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>1888</SUB>> ]
-"10476" [label = <(UNKNOWN,jchar*,jchar*)<SUB>1890</SUB>> ]
-"10477" [label = <(GetValue,s-&gt;GetValue())<SUB>1890</SUB>> ]
-"10344" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1868</SUB>> ]
-"10365" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1870</SUB>> ]
-"10371" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1870</SUB>> ]
-"10374" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1870</SUB>> ]
-"10383" [label = <(Runtime::Current,Runtime::Current())<SUB>1871</SUB>> ]
-"10387" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>1871</SUB>> ]
-"10391" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>1872</SUB>> ]
-"10396" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1872</SUB>> ]
-"10403" [label = <(&lt;operator&gt;.new,new jchar[s-&gt;GetLength()])<SUB>1873</SUB>> ]
-"10406" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1874</SUB>> ]
-"10455" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1882</SUB>> ]
-"10471" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1888</SUB>> ]
-"10478" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1890</SUB>> ]
-"10345" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1868</SUB>> ]
-"10349" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1868</SUB>> ]
-"10356" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1868</SUB>> ]
-"10367" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1870</SUB>> ]
-"10373" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1870</SUB>> ]
-"10376" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1870</SUB>> ]
-"10384" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>1871</SUB>> ]
-"10393" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>1872</SUB>> ]
-"10398" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1872</SUB>> ]
-"10407" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1874</SUB>> ]
-"10412" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>1875</SUB>> ]
-"10459" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>1883</SUB>> ]
-"10480" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1890</SUB>> ]
-"10350" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1868</SUB>> ]
-"10386" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>1871</SUB>> ]
-"10409" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1874</SUB>> ]
-"10414" [label = <(GetLength,s-&gt;GetLength())<SUB>1875</SUB>> ]
-"10424" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1876</SUB>> ]
-"10427" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1876</SUB>> ]
-"10441" [label = <(memcpy,memcpy(chars, s-&gt;GetValue(), sizeof(jchar) * s-&gt;GetLength()))<SUB>1880</SUB>> ]
-"10460" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1883</SUB>> ]
-"10351" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1868</SUB>> ]
-"10353" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1868</SUB>> ]
-"10415" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1875</SUB>> ]
-"10421" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1876</SUB>> ]
-"10430" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>1877</SUB>> ]
-"10443" [label = <(GetValue,s-&gt;GetValue())<SUB>1880</SUB>> ]
-"10447" [label = <(&lt;operator&gt;.multiplication,sizeof(jchar) * s-&gt;GetLength())<SUB>1880</SUB>> ]
-"10417" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1875</SUB>> ]
-"10431" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>1877</SUB>> ]
-"10434" [label = <(CharAt,s-&gt;CharAt(i))<SUB>1877</SUB>> ]
-"10444" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1880</SUB>> ]
-"10448" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>1880</SUB>> ]
-"10450" [label = <(GetLength,s-&gt;GetLength())<SUB>1880</SUB>> ]
-"10435" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1877</SUB>> ]
-"10446" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1880</SUB>> ]
-"10451" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1880</SUB>> ]
-"10437" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1877</SUB>> ]
-"10453" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1880</SUB>> ]
-"10335" [label = <(METHOD,GetStringChars)<SUB>1867</SUB>> ]
-"10481" [label = <(METHOD_RETURN,jchar)<SUB>1867</SUB>> ]
-  "10340" -> "10345" 
-  "10340" -> "10359" 
-  "10359" -> "10367" 
-  "10361" -> "10386" 
-  "10379" -> "10393" 
-  "10474" -> "10481" 
-  "10362" -> "10373" 
-  "10369" -> "10361" 
-  "10381" -> "10379" 
-  "10389" -> "10403" 
-  "10389" -> "10466" 
-  "10466" -> "10476" 
-  "10466" -> "10471" 
+"10337" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1866</SUB>> ]
+"10356" [label = <(soa,soa(env))<SUB>1867</SUB>> ]
+"10358" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1868</SUB>> ]
+"10376" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>1869</SUB>> ]
+"10471" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>1888</SUB>> ]
+"10359" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1868</SUB>> ]
+"10366" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1868</SUB>> ]
+"10378" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>1869</SUB>> ]
+"10386" [label = <(&lt;operator&gt;.logicalOr,heap-&gt;IsMovableObject(s) || s-&gt;IsCompressed())<SUB>1870</SUB>> ]
+"10463" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1885</SUB>> ]
+"10472" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1888</SUB>> ]
+"10360" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1868</SUB>> ]
+"10367" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1868</SUB>> ]
+"10379" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>1869</SUB>> ]
+"10387" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>1870</SUB>> ]
+"10392" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1870</SUB>> ]
+"10398" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[s-&gt;GetLength()])<SUB>1871</SUB>> ]
+"10460" [label = <(RETURN,return chars;,return chars;)<SUB>1883</SUB>> ]
+"10467" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>1886</SUB>> ]
+"10473" [label = <(UNKNOWN,jchar*,jchar*)<SUB>1888</SUB>> ]
+"10474" [label = <(GetValue,s-&gt;GetValue())<SUB>1888</SUB>> ]
+"10341" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1866</SUB>> ]
+"10362" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1868</SUB>> ]
+"10368" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1868</SUB>> ]
+"10371" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1868</SUB>> ]
+"10380" [label = <(Runtime::Current,Runtime::Current())<SUB>1869</SUB>> ]
+"10384" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>1869</SUB>> ]
+"10388" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>1870</SUB>> ]
+"10393" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1870</SUB>> ]
+"10400" [label = <(&lt;operator&gt;.new,new jchar[s-&gt;GetLength()])<SUB>1871</SUB>> ]
+"10403" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1872</SUB>> ]
+"10452" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1880</SUB>> ]
+"10468" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1886</SUB>> ]
+"10475" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1888</SUB>> ]
+"10342" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1866</SUB>> ]
+"10346" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1866</SUB>> ]
+"10353" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1866</SUB>> ]
+"10364" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1868</SUB>> ]
+"10370" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1868</SUB>> ]
+"10373" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1868</SUB>> ]
+"10381" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>1869</SUB>> ]
+"10390" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>1870</SUB>> ]
+"10395" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1870</SUB>> ]
+"10404" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1872</SUB>> ]
+"10409" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>1873</SUB>> ]
+"10456" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>1881</SUB>> ]
+"10477" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1888</SUB>> ]
+"10347" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1866</SUB>> ]
+"10383" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>1869</SUB>> ]
+"10406" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1872</SUB>> ]
+"10411" [label = <(GetLength,s-&gt;GetLength())<SUB>1873</SUB>> ]
+"10421" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1874</SUB>> ]
+"10424" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1874</SUB>> ]
+"10438" [label = <(memcpy,memcpy(chars, s-&gt;GetValue(), sizeof(jchar) * s-&gt;GetLength()))<SUB>1878</SUB>> ]
+"10457" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1881</SUB>> ]
+"10348" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1866</SUB>> ]
+"10350" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1866</SUB>> ]
+"10412" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1873</SUB>> ]
+"10418" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1874</SUB>> ]
+"10427" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>1875</SUB>> ]
+"10440" [label = <(GetValue,s-&gt;GetValue())<SUB>1878</SUB>> ]
+"10444" [label = <(&lt;operator&gt;.multiplication,sizeof(jchar) * s-&gt;GetLength())<SUB>1878</SUB>> ]
+"10414" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1873</SUB>> ]
+"10428" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>1875</SUB>> ]
+"10431" [label = <(CharAt,s-&gt;CharAt(i))<SUB>1875</SUB>> ]
+"10441" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1878</SUB>> ]
+"10445" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>1878</SUB>> ]
+"10447" [label = <(GetLength,s-&gt;GetLength())<SUB>1878</SUB>> ]
+"10432" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1875</SUB>> ]
+"10443" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1878</SUB>> ]
+"10448" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1878</SUB>> ]
+"10434" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1875</SUB>> ]
+"10450" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1878</SUB>> ]
+"10332" [label = <(METHOD,GetStringChars)<SUB>1865</SUB>> ]
+"10478" [label = <(METHOD_RETURN,jchar)<SUB>1865</SUB>> ]
+  "10337" -> "10342" 
+  "10337" -> "10356" 
+  "10356" -> "10364" 
+  "10358" -> "10383" 
+  "10376" -> "10390" 
+  "10471" -> "10478" 
+  "10359" -> "10370" 
+  "10366" -> "10358" 
+  "10378" -> "10376" 
+  "10386" -> "10400" 
+  "10386" -> "10463" 
+  "10463" -> "10473" 
+  "10463" -> "10468" 
+  "10472" -> "10471" 
+  "10360" -> "10359" 
+  "10367" -> "10366" 
+  "10379" -> "10378" 
+  "10387" -> "10386" 
+  "10387" -> "10395" 
+  "10392" -> "10386" 
+  "10398" -> "10406" 
+  "10460" -> "10478" 
+  "10467" -> "10473" 
+  "10473" -> "10477" 
+  "10474" -> "10472" 
+  "10341" -> "10348" 
+  "10341" -> "10356" 
+  "10362" -> "10360" 
+  "10368" -> "10373" 
+  "10371" -> "10367" 
+  "10380" -> "10384" 
+  "10384" -> "10379" 
+  "10388" -> "10387" 
+  "10393" -> "10392" 
+  "10400" -> "10398" 
+  "10403" -> "10414" 
+  "10403" -> "10443" 
+  "10452" -> "10457" 
+  "10452" -> "10460" 
+  "10468" -> "10467" 
   "10475" -> "10474" 
-  "10363" -> "10362" 
-  "10370" -> "10369" 
-  "10382" -> "10381" 
-  "10390" -> "10389" 
-  "10390" -> "10398" 
-  "10395" -> "10389" 
-  "10401" -> "10409" 
-  "10463" -> "10481" 
-  "10470" -> "10476" 
-  "10476" -> "10480" 
-  "10477" -> "10475" 
-  "10344" -> "10351" 
-  "10344" -> "10359" 
-  "10365" -> "10363" 
-  "10371" -> "10376" 
-  "10374" -> "10370" 
-  "10383" -> "10387" 
-  "10387" -> "10382" 
-  "10391" -> "10390" 
-  "10396" -> "10395" 
-  "10403" -> "10401" 
-  "10406" -> "10417" 
-  "10406" -> "10446" 
-  "10455" -> "10460" 
-  "10455" -> "10463" 
-  "10471" -> "10470" 
-  "10478" -> "10477" 
-  "10345" -> "10344" 
-  "10349" -> "10356" 
-  "10356" -> "10481" 
-  "10367" -> "10365" 
+  "10342" -> "10341" 
+  "10346" -> "10353" 
+  "10353" -> "10478" 
+  "10364" -> "10362" 
+  "10370" -> "10368" 
   "10373" -> "10371" 
-  "10376" -> "10374" 
-  "10384" -> "10383" 
-  "10393" -> "10391" 
-  "10398" -> "10396" 
-  "10407" -> "10406" 
-  "10412" -> "10421" 
-  "10459" -> "10463" 
-  "10480" -> "10478" 
-  "10350" -> "10349" 
-  "10386" -> "10384" 
-  "10409" -> "10407" 
-  "10414" -> "10412" 
-  "10424" -> "10431" 
-  "10424" -> "10455" 
+  "10381" -> "10380" 
+  "10390" -> "10388" 
+  "10395" -> "10393" 
+  "10404" -> "10403" 
+  "10409" -> "10418" 
+  "10456" -> "10460" 
+  "10477" -> "10475" 
+  "10347" -> "10346" 
+  "10383" -> "10381" 
+  "10406" -> "10404" 
+  "10411" -> "10409" 
+  "10421" -> "10428" 
+  "10421" -> "10452" 
+  "10424" -> "10421" 
+  "10438" -> "10452" 
+  "10457" -> "10456" 
+  "10348" -> "10350" 
+  "10350" -> "10347" 
+  "10412" -> "10411" 
+  "10418" -> "10421" 
   "10427" -> "10424" 
-  "10441" -> "10455" 
-  "10460" -> "10459" 
-  "10351" -> "10353" 
-  "10353" -> "10350" 
-  "10415" -> "10414" 
-  "10421" -> "10424" 
-  "10430" -> "10427" 
-  "10443" -> "10448" 
-  "10447" -> "10441" 
-  "10417" -> "10415" 
-  "10431" -> "10437" 
-  "10434" -> "10430" 
-  "10444" -> "10443" 
-  "10448" -> "10453" 
-  "10450" -> "10447" 
-  "10435" -> "10434" 
-  "10446" -> "10444" 
-  "10451" -> "10450" 
-  "10437" -> "10435" 
-  "10453" -> "10451" 
-  "10335" -> "10340" 
+  "10440" -> "10445" 
+  "10444" -> "10438" 
+  "10414" -> "10412" 
+  "10428" -> "10434" 
+  "10431" -> "10427" 
+  "10441" -> "10440" 
+  "10445" -> "10450" 
+  "10447" -> "10444" 
+  "10432" -> "10431" 
+  "10443" -> "10441" 
+  "10448" -> "10447" 
+  "10434" -> "10432" 
+  "10450" -> "10448" 
+  "10332" -> "10337" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/187-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/187-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/187-cfg.dot	2023-06-07 19:34:22.167390823 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/187-cfg.dot	2023-06-07 19:34:28.677390217 +0330
@@ -1,78 +1,78 @@
 digraph "ReleaseStringChars" {  
-"10488" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1894</SUB>> ]
-"10506" [label = <(soa,soa(env))<SUB>1895</SUB>> ]
-"10508" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1896</SUB>> ]
-"10509" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1896</SUB>> ]
-"10516" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1896</SUB>> ]
-"10526" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue()))<SUB>1897</SUB>> ]
-"10510" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1896</SUB>> ]
-"10517" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1896</SUB>> ]
-"10527" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1897</SUB>> ]
-"10531" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue())<SUB>1897</SUB>> ]
-"10545" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>1898</SUB>> ]
-"10492" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1894</SUB>> ]
-"10512" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1896</SUB>> ]
-"10518" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1896</SUB>> ]
-"10521" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1896</SUB>> ]
-"10528" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1897</SUB>> ]
-"10532" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>1897</SUB>> ]
-"10538" [label = <(&lt;operator&gt;.notEquals,chars != s-&gt;GetValue())<SUB>1897</SUB>> ]
-"10493" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1894</SUB>> ]
-"10497" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1894</SUB>> ]
-"10504" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1894</SUB>> ]
-"10514" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1896</SUB>> ]
-"10520" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1896</SUB>> ]
-"10523" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1896</SUB>> ]
-"10530" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1897</SUB>> ]
-"10533" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1897</SUB>> ]
-"10540" [label = <(GetValue,s-&gt;GetValue())<SUB>1897</SUB>> ]
-"10498" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1894</SUB>> ]
-"10534" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1897</SUB>> ]
-"10541" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1897</SUB>> ]
-"10499" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1894</SUB>> ]
-"10501" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1894</SUB>> ]
-"10536" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1897</SUB>> ]
-"10543" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1897</SUB>> ]
-"10483" [label = <(METHOD,ReleaseStringChars)<SUB>1893</SUB>> ]
-"10547" [label = <(METHOD_RETURN,void)<SUB>1893</SUB>> ]
-  "10488" -> "10493" 
-  "10488" -> "10506" 
-  "10506" -> "10514" 
-  "10508" -> "10530" 
-  "10509" -> "10520" 
-  "10516" -> "10508" 
-  "10526" -> "10547" 
-  "10526" -> "10545" 
-  "10510" -> "10509" 
-  "10517" -> "10516" 
-  "10527" -> "10526" 
-  "10527" -> "10536" 
-  "10531" -> "10526" 
-  "10545" -> "10547" 
-  "10492" -> "10499" 
-  "10492" -> "10506" 
-  "10512" -> "10510" 
-  "10518" -> "10523" 
-  "10521" -> "10517" 
-  "10528" -> "10527" 
-  "10532" -> "10531" 
-  "10532" -> "10543" 
-  "10538" -> "10531" 
-  "10493" -> "10492" 
-  "10497" -> "10504" 
-  "10504" -> "10547" 
-  "10514" -> "10512" 
+"10485" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1892</SUB>> ]
+"10503" [label = <(soa,soa(env))<SUB>1893</SUB>> ]
+"10505" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1894</SUB>> ]
+"10506" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1894</SUB>> ]
+"10513" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1894</SUB>> ]
+"10523" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue()))<SUB>1895</SUB>> ]
+"10507" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1894</SUB>> ]
+"10514" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1894</SUB>> ]
+"10524" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1895</SUB>> ]
+"10528" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue())<SUB>1895</SUB>> ]
+"10542" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>1896</SUB>> ]
+"10489" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1892</SUB>> ]
+"10509" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1894</SUB>> ]
+"10515" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1894</SUB>> ]
+"10518" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1894</SUB>> ]
+"10525" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1895</SUB>> ]
+"10529" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>1895</SUB>> ]
+"10535" [label = <(&lt;operator&gt;.notEquals,chars != s-&gt;GetValue())<SUB>1895</SUB>> ]
+"10490" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1892</SUB>> ]
+"10494" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1892</SUB>> ]
+"10501" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1892</SUB>> ]
+"10511" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1894</SUB>> ]
+"10517" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1894</SUB>> ]
+"10520" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1894</SUB>> ]
+"10527" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1895</SUB>> ]
+"10530" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1895</SUB>> ]
+"10537" [label = <(GetValue,s-&gt;GetValue())<SUB>1895</SUB>> ]
+"10495" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1892</SUB>> ]
+"10531" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1895</SUB>> ]
+"10538" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1895</SUB>> ]
+"10496" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1892</SUB>> ]
+"10498" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1892</SUB>> ]
+"10533" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1895</SUB>> ]
+"10540" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1895</SUB>> ]
+"10480" [label = <(METHOD,ReleaseStringChars)<SUB>1891</SUB>> ]
+"10544" [label = <(METHOD_RETURN,void)<SUB>1891</SUB>> ]
+  "10485" -> "10490" 
+  "10485" -> "10503" 
+  "10503" -> "10511" 
+  "10505" -> "10527" 
+  "10506" -> "10517" 
+  "10513" -> "10505" 
+  "10523" -> "10544" 
+  "10523" -> "10542" 
+  "10507" -> "10506" 
+  "10514" -> "10513" 
+  "10524" -> "10523" 
+  "10524" -> "10533" 
+  "10528" -> "10523" 
+  "10542" -> "10544" 
+  "10489" -> "10496" 
+  "10489" -> "10503" 
+  "10509" -> "10507" 
+  "10515" -> "10520" 
+  "10518" -> "10514" 
+  "10525" -> "10524" 
+  "10529" -> "10528" 
+  "10529" -> "10540" 
+  "10535" -> "10528" 
+  "10490" -> "10489" 
+  "10494" -> "10501" 
+  "10501" -> "10544" 
+  "10511" -> "10509" 
+  "10517" -> "10515" 
   "10520" -> "10518" 
-  "10523" -> "10521" 
-  "10530" -> "10528" 
-  "10533" -> "10532" 
+  "10527" -> "10525" 
+  "10530" -> "10529" 
+  "10537" -> "10535" 
+  "10495" -> "10494" 
+  "10531" -> "10530" 
+  "10538" -> "10537" 
+  "10496" -> "10498" 
+  "10498" -> "10495" 
+  "10533" -> "10531" 
   "10540" -> "10538" 
-  "10498" -> "10497" 
-  "10534" -> "10533" 
-  "10541" -> "10540" 
-  "10499" -> "10501" 
-  "10501" -> "10498" 
-  "10536" -> "10534" 
-  "10543" -> "10541" 
-  "10483" -> "10488" 
+  "10480" -> "10485" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/188-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/188-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/188-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/188-cfg.dot	2023-06-07 19:34:28.677390217 +0330
@@ -1,189 +1,189 @@
 digraph "GetStringCritical" {  
-"10554" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1903</SUB>> ]
-"10573" [label = <(soa,soa(env))<SUB>1904</SUB>> ]
-"10575" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1905</SUB>> ]
-"10593" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>1906</SUB>> ]
-"10576" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1905</SUB>> ]
-"10583" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1905</SUB>> ]
-"10595" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>1906</SUB>> ]
-"10603" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>1907</SUB>> ]
-"10654" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1918</SUB>> ]
-"10577" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1905</SUB>> ]
-"10584" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1905</SUB>> ]
-"10596" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>1906</SUB>> ]
-"10604" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>1907</SUB>> ]
-"10609" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>1908</SUB>> ]
-"10618" [label = <(&lt;operator&gt;.greaterThan,HandleWrapperObjPtr&lt;mirror::String&gt; h(hs.NewHandleWrapper(&amp;s)))<SUB>1909</SUB>> ]
-"10655" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1918</SUB>> ]
-"10669" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>1922</SUB>> ]
-"10676" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[length])<SUB>1923</SUB>> ]
-"10701" [label = <(RETURN,return chars;,return chars;)<SUB>1927</SUB>> ]
-"10558" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1903</SUB>> ]
-"10579" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1905</SUB>> ]
-"10585" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1905</SUB>> ]
-"10588" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1905</SUB>> ]
-"10597" [label = <(Runtime::Current,Runtime::Current())<SUB>1906</SUB>> ]
-"10601" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>1906</SUB>> ]
-"10606" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>1907</SUB>> ]
-"10610" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>1908</SUB>> ]
-"10613" [label = <(hs,hs(soa.Self()))<SUB>1908</SUB>> ]
-"10619" [label = <(&lt;operator&gt;.lessThan,HandleWrapperObjPtr&lt;mirror::String)<SUB>1909</SUB>> ]
-"10624" [label = <(h,h(hs.NewHandleWrapper(&amp;s)))<SUB>1909</SUB>> ]
-"10632" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>1910</SUB>> ]
-"10657" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1918</SUB>> ]
-"10660" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1919</SUB>> ]
-"10671" [label = <(GetLength,s-&gt;GetLength())<SUB>1922</SUB>> ]
-"10678" [label = <(&lt;operator&gt;.new,new jchar[length])<SUB>1923</SUB>> ]
-"10686" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1924</SUB>> ]
-"10689" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1924</SUB>> ]
-"10714" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>1932</SUB>> ]
-"10559" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1903</SUB>> ]
-"10563" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1903</SUB>> ]
-"10570" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1903</SUB>> ]
-"10581" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1905</SUB>> ]
-"10587" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1905</SUB>> ]
-"10590" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1905</SUB>> ]
-"10598" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>1906</SUB>> ]
-"10614" [label = <(Self,soa.Self())<SUB>1908</SUB>> ]
-"10621" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1909</SUB>> ]
-"10625" [label = <(NewHandleWrapper,hs.NewHandleWrapper(&amp;s))<SUB>1909</SUB>> ]
-"10635" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>1911</SUB>> ]
-"10664" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>1920</SUB>> ]
-"10672" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1922</SUB>> ]
-"10683" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1924</SUB>> ]
-"10692" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>1925</SUB>> ]
-"10706" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1929</SUB>> ]
-"10715" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1932</SUB>> ]
-"10564" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1903</SUB>> ]
-"10600" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>1906</SUB>> ]
-"10615" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1908</SUB>> ]
-"10623" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1909</SUB>> ]
-"10626" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandleWrapper)<SUB>1909</SUB>> ]
-"10629" [label = <(&lt;operator&gt;.addressOf,&amp;s)<SUB>1909</SUB>> ]
-"10636" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>1911</SUB>> ]
-"10639" [label = <(Self,soa.Self())<SUB>1911</SUB>> ]
-"10645" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>1915</SUB>> ]
-"10665" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1920</SUB>> ]
-"10674" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1922</SUB>> ]
-"10693" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>1925</SUB>> ]
-"10696" [label = <(CharAt,s-&gt;CharAt(i))<SUB>1925</SUB>> ]
-"10710" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>1930</SUB>> ]
-"10716" [label = <(UNKNOWN,jchar*,jchar*)<SUB>1932</SUB>> ]
-"10717" [label = <(GetValue,s-&gt;GetValue())<SUB>1932</SUB>> ]
-"10565" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1903</SUB>> ]
-"10567" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1903</SUB>> ]
-"10617" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1908</SUB>> ]
-"10628" [label = <(FIELD_IDENTIFIER,NewHandleWrapper,NewHandleWrapper)<SUB>1909</SUB>> ]
-"10638" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>1911</SUB>> ]
-"10640" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1911</SUB>> ]
-"10646" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>1915</SUB>> ]
-"10649" [label = <(Self,soa.Self())<SUB>1915</SUB>> ]
-"10697" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1925</SUB>> ]
-"10711" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1930</SUB>> ]
-"10718" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1932</SUB>> ]
-"10642" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1911</SUB>> ]
-"10648" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>1915</SUB>> ]
-"10650" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1915</SUB>> ]
-"10699" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1925</SUB>> ]
-"10720" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1932</SUB>> ]
-"10652" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1915</SUB>> ]
-"10549" [label = <(METHOD,GetStringCritical)<SUB>1902</SUB>> ]
-"10721" [label = <(METHOD_RETURN,jchar)<SUB>1902</SUB>> ]
-  "10554" -> "10559" 
-  "10554" -> "10573" 
-  "10573" -> "10581" 
-  "10575" -> "10600" 
-  "10593" -> "10606" 
-  "10576" -> "10587" 
-  "10583" -> "10575" 
-  "10595" -> "10593" 
-  "10603" -> "10610" 
-  "10603" -> "10657" 
-  "10654" -> "10660" 
-  "10654" -> "10706" 
-  "10577" -> "10576" 
-  "10584" -> "10583" 
-  "10596" -> "10595" 
-  "10604" -> "10603" 
-  "10609" -> "10623" 
-  "10618" -> "10632" 
-  "10655" -> "10654" 
-  "10669" -> "10678" 
-  "10676" -> "10683" 
-  "10701" -> "10721" 
-  "10558" -> "10565" 
-  "10558" -> "10573" 
-  "10579" -> "10577" 
-  "10585" -> "10590" 
-  "10588" -> "10584" 
-  "10597" -> "10601" 
-  "10601" -> "10596" 
-  "10606" -> "10604" 
-  "10610" -> "10617" 
-  "10613" -> "10609" 
-  "10619" -> "10628" 
-  "10624" -> "10618" 
-  "10632" -> "10638" 
-  "10632" -> "10648" 
-  "10657" -> "10655" 
-  "10660" -> "10665" 
-  "10660" -> "10674" 
-  "10671" -> "10669" 
-  "10678" -> "10676" 
-  "10686" -> "10693" 
-  "10686" -> "10701" 
-  "10689" -> "10686" 
-  "10714" -> "10721" 
-  "10559" -> "10558" 
-  "10563" -> "10570" 
-  "10570" -> "10721" 
-  "10581" -> "10579" 
+"10551" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1901</SUB>> ]
+"10570" [label = <(soa,soa(env))<SUB>1902</SUB>> ]
+"10572" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1903</SUB>> ]
+"10590" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>1904</SUB>> ]
+"10573" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1903</SUB>> ]
+"10580" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1903</SUB>> ]
+"10592" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>1904</SUB>> ]
+"10600" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>1905</SUB>> ]
+"10651" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1916</SUB>> ]
+"10574" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1903</SUB>> ]
+"10581" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1903</SUB>> ]
+"10593" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>1904</SUB>> ]
+"10601" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>1905</SUB>> ]
+"10606" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>1906</SUB>> ]
+"10615" [label = <(&lt;operator&gt;.greaterThan,HandleWrapperObjPtr&lt;mirror::String&gt; h(hs.NewHandleWrapper(&amp;s)))<SUB>1907</SUB>> ]
+"10652" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1916</SUB>> ]
+"10666" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>1920</SUB>> ]
+"10673" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[length])<SUB>1921</SUB>> ]
+"10698" [label = <(RETURN,return chars;,return chars;)<SUB>1925</SUB>> ]
+"10555" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1901</SUB>> ]
+"10576" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1903</SUB>> ]
+"10582" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1903</SUB>> ]
+"10585" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1903</SUB>> ]
+"10594" [label = <(Runtime::Current,Runtime::Current())<SUB>1904</SUB>> ]
+"10598" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>1904</SUB>> ]
+"10603" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>1905</SUB>> ]
+"10607" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>1906</SUB>> ]
+"10610" [label = <(hs,hs(soa.Self()))<SUB>1906</SUB>> ]
+"10616" [label = <(&lt;operator&gt;.lessThan,HandleWrapperObjPtr&lt;mirror::String)<SUB>1907</SUB>> ]
+"10621" [label = <(h,h(hs.NewHandleWrapper(&amp;s)))<SUB>1907</SUB>> ]
+"10629" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>1908</SUB>> ]
+"10654" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1916</SUB>> ]
+"10657" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1917</SUB>> ]
+"10668" [label = <(GetLength,s-&gt;GetLength())<SUB>1920</SUB>> ]
+"10675" [label = <(&lt;operator&gt;.new,new jchar[length])<SUB>1921</SUB>> ]
+"10683" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1922</SUB>> ]
+"10686" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1922</SUB>> ]
+"10711" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>1930</SUB>> ]
+"10556" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1901</SUB>> ]
+"10560" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1901</SUB>> ]
+"10567" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1901</SUB>> ]
+"10578" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1903</SUB>> ]
+"10584" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1903</SUB>> ]
+"10587" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1903</SUB>> ]
+"10595" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>1904</SUB>> ]
+"10611" [label = <(Self,soa.Self())<SUB>1906</SUB>> ]
+"10618" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1907</SUB>> ]
+"10622" [label = <(NewHandleWrapper,hs.NewHandleWrapper(&amp;s))<SUB>1907</SUB>> ]
+"10632" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>1909</SUB>> ]
+"10661" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>1918</SUB>> ]
+"10669" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1920</SUB>> ]
+"10680" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1922</SUB>> ]
+"10689" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>1923</SUB>> ]
+"10703" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1927</SUB>> ]
+"10712" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1930</SUB>> ]
+"10561" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1901</SUB>> ]
+"10597" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>1904</SUB>> ]
+"10612" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1906</SUB>> ]
+"10620" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1907</SUB>> ]
+"10623" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandleWrapper)<SUB>1907</SUB>> ]
+"10626" [label = <(&lt;operator&gt;.addressOf,&amp;s)<SUB>1907</SUB>> ]
+"10633" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>1909</SUB>> ]
+"10636" [label = <(Self,soa.Self())<SUB>1909</SUB>> ]
+"10642" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>1913</SUB>> ]
+"10662" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1918</SUB>> ]
+"10671" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1920</SUB>> ]
+"10690" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>1923</SUB>> ]
+"10693" [label = <(CharAt,s-&gt;CharAt(i))<SUB>1923</SUB>> ]
+"10707" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>1928</SUB>> ]
+"10713" [label = <(UNKNOWN,jchar*,jchar*)<SUB>1930</SUB>> ]
+"10714" [label = <(GetValue,s-&gt;GetValue())<SUB>1930</SUB>> ]
+"10562" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1901</SUB>> ]
+"10564" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1901</SUB>> ]
+"10614" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1906</SUB>> ]
+"10625" [label = <(FIELD_IDENTIFIER,NewHandleWrapper,NewHandleWrapper)<SUB>1907</SUB>> ]
+"10635" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>1909</SUB>> ]
+"10637" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1909</SUB>> ]
+"10643" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>1913</SUB>> ]
+"10646" [label = <(Self,soa.Self())<SUB>1913</SUB>> ]
+"10694" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1923</SUB>> ]
+"10708" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1928</SUB>> ]
+"10715" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1930</SUB>> ]
+"10639" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1909</SUB>> ]
+"10645" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>1913</SUB>> ]
+"10647" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1913</SUB>> ]
+"10696" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1923</SUB>> ]
+"10717" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1930</SUB>> ]
+"10649" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1913</SUB>> ]
+"10546" [label = <(METHOD,GetStringCritical)<SUB>1900</SUB>> ]
+"10718" [label = <(METHOD_RETURN,jchar)<SUB>1900</SUB>> ]
+  "10551" -> "10556" 
+  "10551" -> "10570" 
+  "10570" -> "10578" 
+  "10572" -> "10597" 
+  "10590" -> "10603" 
+  "10573" -> "10584" 
+  "10580" -> "10572" 
+  "10592" -> "10590" 
+  "10600" -> "10607" 
+  "10600" -> "10654" 
+  "10651" -> "10657" 
+  "10651" -> "10703" 
+  "10574" -> "10573" 
+  "10581" -> "10580" 
+  "10593" -> "10592" 
+  "10601" -> "10600" 
+  "10606" -> "10620" 
+  "10615" -> "10629" 
+  "10652" -> "10651" 
+  "10666" -> "10675" 
+  "10673" -> "10680" 
+  "10698" -> "10718" 
+  "10555" -> "10562" 
+  "10555" -> "10570" 
+  "10576" -> "10574" 
+  "10582" -> "10587" 
+  "10585" -> "10581" 
+  "10594" -> "10598" 
+  "10598" -> "10593" 
+  "10603" -> "10601" 
+  "10607" -> "10614" 
+  "10610" -> "10606" 
+  "10616" -> "10625" 
+  "10621" -> "10615" 
+  "10629" -> "10635" 
+  "10629" -> "10645" 
+  "10654" -> "10652" 
+  "10657" -> "10662" 
+  "10657" -> "10671" 
+  "10668" -> "10666" 
+  "10675" -> "10673" 
+  "10683" -> "10690" 
+  "10683" -> "10698" 
+  "10686" -> "10683" 
+  "10711" -> "10718" 
+  "10556" -> "10555" 
+  "10560" -> "10567" 
+  "10567" -> "10718" 
+  "10578" -> "10576" 
+  "10584" -> "10582" 
   "10587" -> "10585" 
-  "10590" -> "10588" 
-  "10598" -> "10597" 
-  "10614" -> "10613" 
-  "10621" -> "10619" 
-  "10625" -> "10624" 
-  "10635" -> "10657" 
-  "10664" -> "10674" 
-  "10672" -> "10671" 
-  "10683" -> "10686" 
-  "10692" -> "10689" 
-  "10706" -> "10716" 
-  "10706" -> "10711" 
+  "10595" -> "10594" 
+  "10611" -> "10610" 
+  "10618" -> "10616" 
+  "10622" -> "10621" 
+  "10632" -> "10654" 
+  "10661" -> "10671" 
+  "10669" -> "10668" 
+  "10680" -> "10683" 
+  "10689" -> "10686" 
+  "10703" -> "10713" 
+  "10703" -> "10708" 
+  "10712" -> "10711" 
+  "10561" -> "10560" 
+  "10597" -> "10595" 
+  "10612" -> "10611" 
+  "10620" -> "10618" 
+  "10623" -> "10626" 
+  "10626" -> "10622" 
+  "10633" -> "10639" 
+  "10636" -> "10632" 
+  "10642" -> "10654" 
+  "10662" -> "10661" 
+  "10671" -> "10669" 
+  "10690" -> "10696" 
+  "10693" -> "10689" 
+  "10707" -> "10713" 
+  "10713" -> "10717" 
+  "10714" -> "10712" 
+  "10562" -> "10564" 
+  "10564" -> "10561" 
+  "10614" -> "10612" 
+  "10625" -> "10623" 
+  "10635" -> "10633" 
+  "10637" -> "10636" 
+  "10643" -> "10649" 
+  "10646" -> "10642" 
+  "10694" -> "10693" 
+  "10708" -> "10707" 
   "10715" -> "10714" 
-  "10564" -> "10563" 
-  "10600" -> "10598" 
-  "10615" -> "10614" 
-  "10623" -> "10621" 
-  "10626" -> "10629" 
-  "10629" -> "10625" 
-  "10636" -> "10642" 
-  "10639" -> "10635" 
-  "10645" -> "10657" 
-  "10665" -> "10664" 
-  "10674" -> "10672" 
-  "10693" -> "10699" 
-  "10696" -> "10692" 
-  "10710" -> "10716" 
-  "10716" -> "10720" 
+  "10639" -> "10637" 
+  "10645" -> "10643" 
+  "10647" -> "10646" 
+  "10696" -> "10694" 
   "10717" -> "10715" 
-  "10565" -> "10567" 
-  "10567" -> "10564" 
-  "10617" -> "10615" 
-  "10628" -> "10626" 
-  "10638" -> "10636" 
-  "10640" -> "10639" 
-  "10646" -> "10652" 
-  "10649" -> "10645" 
-  "10697" -> "10696" 
-  "10711" -> "10710" 
-  "10718" -> "10717" 
-  "10642" -> "10640" 
-  "10648" -> "10646" 
-  "10650" -> "10649" 
-  "10699" -> "10697" 
-  "10720" -> "10718" 
-  "10652" -> "10650" 
-  "10549" -> "10554" 
+  "10649" -> "10647" 
+  "10546" -> "10551" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/189-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/189-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/189-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/189-cfg.dot	2023-06-07 19:34:28.677390217 +0330
@@ -1,126 +1,126 @@
 digraph "ReleaseStringCritical" {  
-"10728" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1939</SUB>> ]
-"10746" [label = <(soa,soa(env))<SUB>1940</SUB>> ]
-"10749" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>1941</SUB>> ]
-"10758" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1942</SUB>> ]
-"10751" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>1941</SUB>> ]
-"10759" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1942</SUB>> ]
-"10766" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1942</SUB>> ]
-"10776" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>1943</SUB>> ]
-"10805" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars))<SUB>1950</SUB>> ]
-"10752" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>1941</SUB>> ]
-"10760" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1942</SUB>> ]
-"10767" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1942</SUB>> ]
-"10777" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>1943</SUB>> ]
-"10806" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1950</SUB>> ]
-"10810" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars)<SUB>1950</SUB>> ]
-"10824" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>1951</SUB>> ]
-"10732" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1939</SUB>> ]
-"10753" [label = <(Runtime::Current,Runtime::Current())<SUB>1941</SUB>> ]
-"10757" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>1941</SUB>> ]
-"10762" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1942</SUB>> ]
-"10768" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1942</SUB>> ]
-"10771" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1942</SUB>> ]
-"10779" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>1943</SUB>> ]
-"10783" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>1944</SUB>> ]
-"10807" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1950</SUB>> ]
-"10811" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>1950</SUB>> ]
-"10817" [label = <(&lt;operator&gt;.notEquals,s-&gt;GetValue() != chars)<SUB>1950</SUB>> ]
-"10733" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1939</SUB>> ]
-"10737" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1939</SUB>> ]
-"10744" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1939</SUB>> ]
-"10754" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>1941</SUB>> ]
-"10764" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1942</SUB>> ]
-"10770" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1942</SUB>> ]
-"10773" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1942</SUB>> ]
-"10786" [label = <(DecrementDisableMovingGC,heap-&gt;DecrementDisableMovingGC(soa.Self()))<SUB>1945</SUB>> ]
-"10809" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1950</SUB>> ]
-"10812" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1950</SUB>> ]
-"10818" [label = <(GetValue,s-&gt;GetValue())<SUB>1950</SUB>> ]
-"10738" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1939</SUB>> ]
-"10756" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>1941</SUB>> ]
-"10787" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableMovingGC)<SUB>1945</SUB>> ]
-"10790" [label = <(Self,soa.Self())<SUB>1945</SUB>> ]
-"10796" [label = <(DecrementDisableThreadFlip,heap-&gt;DecrementDisableThreadFlip(soa.Self()))<SUB>1947</SUB>> ]
-"10813" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1950</SUB>> ]
-"10819" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1950</SUB>> ]
-"10739" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1939</SUB>> ]
-"10741" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1939</SUB>> ]
-"10789" [label = <(FIELD_IDENTIFIER,DecrementDisableMovingGC,DecrementDisableMovingGC)<SUB>1945</SUB>> ]
-"10791" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1945</SUB>> ]
-"10797" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableThreadFlip)<SUB>1947</SUB>> ]
-"10800" [label = <(Self,soa.Self())<SUB>1947</SUB>> ]
-"10815" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1950</SUB>> ]
-"10821" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1950</SUB>> ]
-"10793" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1945</SUB>> ]
-"10799" [label = <(FIELD_IDENTIFIER,DecrementDisableThreadFlip,DecrementDisableThreadFlip)<SUB>1947</SUB>> ]
-"10801" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1947</SUB>> ]
-"10803" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1947</SUB>> ]
-"10723" [label = <(METHOD,ReleaseStringCritical)<SUB>1936</SUB>> ]
-"10826" [label = <(METHOD_RETURN,void)<SUB>1936</SUB>> ]
-  "10728" -> "10733" 
-  "10728" -> "10746" 
-  "10746" -> "10756" 
-  "10749" -> "10764" 
-  "10758" -> "10779" 
-  "10751" -> "10749" 
-  "10759" -> "10770" 
-  "10766" -> "10758" 
-  "10776" -> "10783" 
-  "10776" -> "10809" 
-  "10805" -> "10826" 
-  "10805" -> "10824" 
-  "10752" -> "10751" 
-  "10760" -> "10759" 
-  "10767" -> "10766" 
-  "10777" -> "10776" 
-  "10806" -> "10805" 
-  "10806" -> "10815" 
-  "10810" -> "10805" 
-  "10824" -> "10826" 
-  "10732" -> "10739" 
-  "10732" -> "10746" 
-  "10753" -> "10757" 
-  "10757" -> "10752" 
-  "10762" -> "10760" 
-  "10768" -> "10773" 
-  "10771" -> "10767" 
-  "10779" -> "10777" 
-  "10783" -> "10789" 
-  "10783" -> "10799" 
-  "10807" -> "10806" 
-  "10811" -> "10810" 
-  "10811" -> "10821" 
-  "10817" -> "10810" 
-  "10733" -> "10732" 
-  "10737" -> "10744" 
-  "10744" -> "10826" 
-  "10754" -> "10753" 
-  "10764" -> "10762" 
+"10725" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1937</SUB>> ]
+"10743" [label = <(soa,soa(env))<SUB>1938</SUB>> ]
+"10746" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>1939</SUB>> ]
+"10755" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1940</SUB>> ]
+"10748" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>1939</SUB>> ]
+"10756" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1940</SUB>> ]
+"10763" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1940</SUB>> ]
+"10773" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>1941</SUB>> ]
+"10802" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars))<SUB>1948</SUB>> ]
+"10749" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>1939</SUB>> ]
+"10757" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1940</SUB>> ]
+"10764" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1940</SUB>> ]
+"10774" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>1941</SUB>> ]
+"10803" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1948</SUB>> ]
+"10807" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars)<SUB>1948</SUB>> ]
+"10821" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>1949</SUB>> ]
+"10729" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1937</SUB>> ]
+"10750" [label = <(Runtime::Current,Runtime::Current())<SUB>1939</SUB>> ]
+"10754" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>1939</SUB>> ]
+"10759" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1940</SUB>> ]
+"10765" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1940</SUB>> ]
+"10768" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1940</SUB>> ]
+"10776" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>1941</SUB>> ]
+"10780" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>1942</SUB>> ]
+"10804" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1948</SUB>> ]
+"10808" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>1948</SUB>> ]
+"10814" [label = <(&lt;operator&gt;.notEquals,s-&gt;GetValue() != chars)<SUB>1948</SUB>> ]
+"10730" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1937</SUB>> ]
+"10734" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1937</SUB>> ]
+"10741" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1937</SUB>> ]
+"10751" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>1939</SUB>> ]
+"10761" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1940</SUB>> ]
+"10767" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1940</SUB>> ]
+"10770" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1940</SUB>> ]
+"10783" [label = <(DecrementDisableMovingGC,heap-&gt;DecrementDisableMovingGC(soa.Self()))<SUB>1943</SUB>> ]
+"10806" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1948</SUB>> ]
+"10809" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1948</SUB>> ]
+"10815" [label = <(GetValue,s-&gt;GetValue())<SUB>1948</SUB>> ]
+"10735" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1937</SUB>> ]
+"10753" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>1939</SUB>> ]
+"10784" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableMovingGC)<SUB>1943</SUB>> ]
+"10787" [label = <(Self,soa.Self())<SUB>1943</SUB>> ]
+"10793" [label = <(DecrementDisableThreadFlip,heap-&gt;DecrementDisableThreadFlip(soa.Self()))<SUB>1945</SUB>> ]
+"10810" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1948</SUB>> ]
+"10816" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1948</SUB>> ]
+"10736" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1937</SUB>> ]
+"10738" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1937</SUB>> ]
+"10786" [label = <(FIELD_IDENTIFIER,DecrementDisableMovingGC,DecrementDisableMovingGC)<SUB>1943</SUB>> ]
+"10788" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1943</SUB>> ]
+"10794" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableThreadFlip)<SUB>1945</SUB>> ]
+"10797" [label = <(Self,soa.Self())<SUB>1945</SUB>> ]
+"10812" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1948</SUB>> ]
+"10818" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1948</SUB>> ]
+"10790" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1943</SUB>> ]
+"10796" [label = <(FIELD_IDENTIFIER,DecrementDisableThreadFlip,DecrementDisableThreadFlip)<SUB>1945</SUB>> ]
+"10798" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1945</SUB>> ]
+"10800" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1945</SUB>> ]
+"10720" [label = <(METHOD,ReleaseStringCritical)<SUB>1934</SUB>> ]
+"10823" [label = <(METHOD_RETURN,void)<SUB>1934</SUB>> ]
+  "10725" -> "10730" 
+  "10725" -> "10743" 
+  "10743" -> "10753" 
+  "10746" -> "10761" 
+  "10755" -> "10776" 
+  "10748" -> "10746" 
+  "10756" -> "10767" 
+  "10763" -> "10755" 
+  "10773" -> "10780" 
+  "10773" -> "10806" 
+  "10802" -> "10823" 
+  "10802" -> "10821" 
+  "10749" -> "10748" 
+  "10757" -> "10756" 
+  "10764" -> "10763" 
+  "10774" -> "10773" 
+  "10803" -> "10802" 
+  "10803" -> "10812" 
+  "10807" -> "10802" 
+  "10821" -> "10823" 
+  "10729" -> "10736" 
+  "10729" -> "10743" 
+  "10750" -> "10754" 
+  "10754" -> "10749" 
+  "10759" -> "10757" 
+  "10765" -> "10770" 
+  "10768" -> "10764" 
+  "10776" -> "10774" 
+  "10780" -> "10786" 
+  "10780" -> "10796" 
+  "10804" -> "10803" 
+  "10808" -> "10807" 
+  "10808" -> "10818" 
+  "10814" -> "10807" 
+  "10730" -> "10729" 
+  "10734" -> "10741" 
+  "10741" -> "10823" 
+  "10751" -> "10750" 
+  "10761" -> "10759" 
+  "10767" -> "10765" 
   "10770" -> "10768" 
-  "10773" -> "10771" 
-  "10786" -> "10809" 
-  "10809" -> "10807" 
-  "10812" -> "10811" 
-  "10818" -> "10817" 
-  "10738" -> "10737" 
-  "10756" -> "10754" 
-  "10787" -> "10793" 
-  "10790" -> "10786" 
-  "10796" -> "10809" 
-  "10813" -> "10812" 
-  "10819" -> "10818" 
-  "10739" -> "10741" 
-  "10741" -> "10738" 
-  "10789" -> "10787" 
-  "10791" -> "10790" 
-  "10797" -> "10803" 
-  "10800" -> "10796" 
-  "10815" -> "10813" 
-  "10821" -> "10819" 
-  "10793" -> "10791" 
-  "10799" -> "10797" 
-  "10801" -> "10800" 
-  "10803" -> "10801" 
-  "10723" -> "10728" 
+  "10783" -> "10806" 
+  "10806" -> "10804" 
+  "10809" -> "10808" 
+  "10815" -> "10814" 
+  "10735" -> "10734" 
+  "10753" -> "10751" 
+  "10784" -> "10790" 
+  "10787" -> "10783" 
+  "10793" -> "10806" 
+  "10810" -> "10809" 
+  "10816" -> "10815" 
+  "10736" -> "10738" 
+  "10738" -> "10735" 
+  "10786" -> "10784" 
+  "10788" -> "10787" 
+  "10794" -> "10800" 
+  "10797" -> "10793" 
+  "10812" -> "10810" 
+  "10818" -> "10816" 
+  "10790" -> "10788" 
+  "10796" -> "10794" 
+  "10798" -> "10797" 
+  "10800" -> "10798" 
+  "10720" -> "10725" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/19-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/19-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/19-cfg.dot	2023-06-07 19:34:22.017390836 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/19-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,9 +1,9 @@
 digraph "DefineClass" {  
-"515" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI DefineClass is not supported&quot;)<SUB>429</SUB>> ]
-"519" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>430</SUB>> ]
-"516" [label = <(LOG,LOG(WARNING))<SUB>429</SUB>> ]
-"508" [label = <(METHOD,DefineClass)<SUB>428</SUB>> ]
-"521" [label = <(METHOD_RETURN,jclass)<SUB>428</SUB>> ]
+"515" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI DefineClass is not supported&quot;)<SUB>428</SUB>> ]
+"519" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>429</SUB>> ]
+"516" [label = <(LOG,LOG(WARNING))<SUB>428</SUB>> ]
+"508" [label = <(METHOD,DefineClass)<SUB>427</SUB>> ]
+"521" [label = <(METHOD_RETURN,jclass)<SUB>427</SUB>> ]
   "515" -> "519" 
   "519" -> "521" 
   "516" -> "515" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/190-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/190-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/190-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/190-cfg.dot	2023-06-07 19:34:28.677390217 +0330
@@ -1,103 +1,103 @@
 digraph "GetStringUTFChars" {  
-"10850" [label = <(soa,soa(env))<SUB>1962</SUB>> ]
-"10852" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1963</SUB>> ]
-"10870" [label = <(&lt;operator&gt;.assignment,byte_count = s-&gt;GetUtfLength())<SUB>1964</SUB>> ]
-"10877" [label = <(&lt;operator&gt;.assignment,* bytes = new char[byte_count + 1])<SUB>1965</SUB>> ]
-"10881" [label = <(CHECK,CHECK(bytes != nullptr))<SUB>1966</SUB>> ]
-"10929" [label = <(&lt;operator&gt;.assignment,bytes[byte_count] = '\0')<SUB>1975</SUB>> ]
-"10934" [label = <(RETURN,return bytes;,return bytes;)<SUB>1976</SUB>> ]
-"10834" [label = <(&lt;operator&gt;.equals,java_string == nullptr)<SUB>1956</SUB>> ]
-"10841" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1959</SUB>> ]
-"10853" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1963</SUB>> ]
-"10860" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1963</SUB>> ]
-"10872" [label = <(GetUtfLength,s-&gt;GetUtfLength())<SUB>1964</SUB>> ]
-"10879" [label = <(&lt;operator&gt;.new,new char[byte_count + 1])<SUB>1965</SUB>> ]
-"10882" [label = <(&lt;operator&gt;.notEquals,bytes != nullptr)<SUB>1966</SUB>> ]
-"10886" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1967</SUB>> ]
-"10930" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[byte_count])<SUB>1975</SUB>> ]
-"10838" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1957</SUB>> ]
-"10845" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>1960</SUB>> ]
-"10854" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1963</SUB>> ]
-"10861" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1963</SUB>> ]
-"10873" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetUtfLength)<SUB>1964</SUB>> ]
-"10887" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1967</SUB>> ]
-"10846" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1960</SUB>> ]
-"10856" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1963</SUB>> ]
-"10862" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1963</SUB>> ]
-"10865" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1963</SUB>> ]
-"10875" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>1964</SUB>> ]
-"10889" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1967</SUB>> ]
-"10897" [label = <(&lt;operator&gt;.lessThan,i &lt; byte_count)<SUB>1968</SUB>> ]
-"10900" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1968</SUB>> ]
-"10915" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>1972</SUB>> ]
-"10921" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(bytes, byte_count, chars, s-&gt;GetLength()))<SUB>1973</SUB>> ]
-"10858" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1963</SUB>> ]
-"10864" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1963</SUB>> ]
-"10867" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1963</SUB>> ]
-"10894" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1968</SUB>> ]
-"10903" [label = <(&lt;operator&gt;.assignment,bytes[i] = s-&gt;CharAt(i))<SUB>1969</SUB>> ]
-"10917" [label = <(GetValue,s-&gt;GetValue())<SUB>1972</SUB>> ]
-"10925" [label = <(GetLength,s-&gt;GetLength())<SUB>1973</SUB>> ]
-"10904" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[i])<SUB>1969</SUB>> ]
-"10907" [label = <(CharAt,s-&gt;CharAt(i))<SUB>1969</SUB>> ]
-"10918" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1972</SUB>> ]
-"10926" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1973</SUB>> ]
-"10908" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1969</SUB>> ]
-"10920" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1972</SUB>> ]
-"10928" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1973</SUB>> ]
-"10910" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1969</SUB>> ]
-"10828" [label = <(METHOD,GetStringUTFChars)<SUB>1955</SUB>> ]
-"10936" [label = <(METHOD_RETURN,const char*)<SUB>1955</SUB>> ]
-  "10850" -> "10858" 
-  "10852" -> "10875" 
-  "10870" -> "10879" 
-  "10877" -> "10882" 
-  "10881" -> "10889" 
-  "10929" -> "10934" 
-  "10934" -> "10936" 
-  "10834" -> "10838" 
-  "10834" -> "10841" 
-  "10841" -> "10846" 
-  "10841" -> "10850" 
-  "10853" -> "10864" 
-  "10860" -> "10852" 
+"10847" [label = <(soa,soa(env))<SUB>1960</SUB>> ]
+"10849" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1961</SUB>> ]
+"10867" [label = <(&lt;operator&gt;.assignment,byte_count = s-&gt;GetUtfLength())<SUB>1962</SUB>> ]
+"10874" [label = <(&lt;operator&gt;.assignment,* bytes = new char[byte_count + 1])<SUB>1963</SUB>> ]
+"10878" [label = <(CHECK,CHECK(bytes != nullptr))<SUB>1964</SUB>> ]
+"10926" [label = <(&lt;operator&gt;.assignment,bytes[byte_count] = '\0')<SUB>1973</SUB>> ]
+"10931" [label = <(RETURN,return bytes;,return bytes;)<SUB>1974</SUB>> ]
+"10831" [label = <(&lt;operator&gt;.equals,java_string == nullptr)<SUB>1954</SUB>> ]
+"10838" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1957</SUB>> ]
+"10850" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1961</SUB>> ]
+"10857" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1961</SUB>> ]
+"10869" [label = <(GetUtfLength,s-&gt;GetUtfLength())<SUB>1962</SUB>> ]
+"10876" [label = <(&lt;operator&gt;.new,new char[byte_count + 1])<SUB>1963</SUB>> ]
+"10879" [label = <(&lt;operator&gt;.notEquals,bytes != nullptr)<SUB>1964</SUB>> ]
+"10883" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1965</SUB>> ]
+"10927" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[byte_count])<SUB>1973</SUB>> ]
+"10835" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1955</SUB>> ]
+"10842" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>1958</SUB>> ]
+"10851" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1961</SUB>> ]
+"10858" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1961</SUB>> ]
+"10870" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetUtfLength)<SUB>1962</SUB>> ]
+"10884" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1965</SUB>> ]
+"10843" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1958</SUB>> ]
+"10853" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1961</SUB>> ]
+"10859" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1961</SUB>> ]
+"10862" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1961</SUB>> ]
+"10872" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>1962</SUB>> ]
+"10886" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1965</SUB>> ]
+"10894" [label = <(&lt;operator&gt;.lessThan,i &lt; byte_count)<SUB>1966</SUB>> ]
+"10897" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1966</SUB>> ]
+"10912" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>1970</SUB>> ]
+"10918" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(bytes, byte_count, chars, s-&gt;GetLength()))<SUB>1971</SUB>> ]
+"10855" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1961</SUB>> ]
+"10861" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1961</SUB>> ]
+"10864" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1961</SUB>> ]
+"10891" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1966</SUB>> ]
+"10900" [label = <(&lt;operator&gt;.assignment,bytes[i] = s-&gt;CharAt(i))<SUB>1967</SUB>> ]
+"10914" [label = <(GetValue,s-&gt;GetValue())<SUB>1970</SUB>> ]
+"10922" [label = <(GetLength,s-&gt;GetLength())<SUB>1971</SUB>> ]
+"10901" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[i])<SUB>1967</SUB>> ]
+"10904" [label = <(CharAt,s-&gt;CharAt(i))<SUB>1967</SUB>> ]
+"10915" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1970</SUB>> ]
+"10923" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1971</SUB>> ]
+"10905" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1967</SUB>> ]
+"10917" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1970</SUB>> ]
+"10925" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1971</SUB>> ]
+"10907" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1967</SUB>> ]
+"10825" [label = <(METHOD,GetStringUTFChars)<SUB>1953</SUB>> ]
+"10933" [label = <(METHOD_RETURN,const char*)<SUB>1953</SUB>> ]
+  "10847" -> "10855" 
+  "10849" -> "10872" 
+  "10867" -> "10876" 
+  "10874" -> "10879" 
+  "10878" -> "10886" 
+  "10926" -> "10931" 
+  "10931" -> "10933" 
+  "10831" -> "10835" 
+  "10831" -> "10838" 
+  "10838" -> "10843" 
+  "10838" -> "10847" 
+  "10850" -> "10861" 
+  "10857" -> "10849" 
+  "10869" -> "10867" 
+  "10876" -> "10874" 
+  "10879" -> "10878" 
+  "10883" -> "10891" 
+  "10883" -> "10917" 
+  "10927" -> "10926" 
+  "10835" -> "10933" 
+  "10842" -> "10847" 
+  "10851" -> "10850" 
+  "10858" -> "10857" 
+  "10870" -> "10869" 
+  "10884" -> "10883" 
+  "10843" -> "10842" 
+  "10853" -> "10851" 
+  "10859" -> "10864" 
+  "10862" -> "10858" 
   "10872" -> "10870" 
-  "10879" -> "10877" 
-  "10882" -> "10881" 
-  "10886" -> "10894" 
-  "10886" -> "10920" 
-  "10930" -> "10929" 
-  "10838" -> "10936" 
-  "10845" -> "10850" 
-  "10854" -> "10853" 
-  "10861" -> "10860" 
-  "10873" -> "10872" 
-  "10887" -> "10886" 
-  "10846" -> "10845" 
-  "10856" -> "10854" 
-  "10862" -> "10867" 
-  "10865" -> "10861" 
-  "10875" -> "10873" 
-  "10889" -> "10887" 
-  "10897" -> "10904" 
-  "10897" -> "10930" 
-  "10900" -> "10897" 
-  "10915" -> "10928" 
-  "10921" -> "10930" 
-  "10858" -> "10856" 
+  "10886" -> "10884" 
+  "10894" -> "10901" 
+  "10894" -> "10927" 
+  "10897" -> "10894" 
+  "10912" -> "10925" 
+  "10918" -> "10927" 
+  "10855" -> "10853" 
+  "10861" -> "10859" 
   "10864" -> "10862" 
-  "10867" -> "10865" 
-  "10894" -> "10897" 
-  "10903" -> "10900" 
+  "10891" -> "10894" 
+  "10900" -> "10897" 
+  "10914" -> "10912" 
+  "10922" -> "10918" 
+  "10901" -> "10907" 
+  "10904" -> "10900" 
+  "10915" -> "10914" 
+  "10923" -> "10922" 
+  "10905" -> "10904" 
   "10917" -> "10915" 
-  "10925" -> "10921" 
-  "10904" -> "10910" 
-  "10907" -> "10903" 
-  "10918" -> "10917" 
-  "10926" -> "10925" 
-  "10908" -> "10907" 
-  "10920" -> "10918" 
-  "10928" -> "10926" 
-  "10910" -> "10908" 
-  "10828" -> "10834" 
+  "10925" -> "10923" 
+  "10907" -> "10905" 
+  "10825" -> "10831" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/191-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/191-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/191-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/191-cfg.dot	2023-06-07 19:34:28.677390217 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseStringUTFChars" {  
-"10943" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>1980</SUB>> ]
-"10938" [label = <(METHOD,ReleaseStringUTFChars)<SUB>1979</SUB>> ]
-"10945" [label = <(METHOD_RETURN,void)<SUB>1979</SUB>> ]
-  "10943" -> "10945" 
-  "10938" -> "10943" 
+"10940" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>1978</SUB>> ]
+"10935" [label = <(METHOD,ReleaseStringUTFChars)<SUB>1977</SUB>> ]
+"10942" [label = <(METHOD_RETURN,void)<SUB>1977</SUB>> ]
+  "10940" -> "10942" 
+  "10935" -> "10940" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/192-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/192-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/192-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/192-cfg.dot	2023-06-07 19:34:28.677390217 +0330
@@ -1,100 +1,100 @@
 digraph "GetArrayLength" {  
-"10951" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>1984</SUB>> ]
-"10970" [label = <(soa,soa(env))<SUB>1985</SUB>> ]
-"10972" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>1986</SUB>> ]
-"11016" [label = <(&lt;operator&gt;.assignment,* array = obj-&gt;AsArray())<SUB>1991</SUB>> ]
-"11022" [label = <(RETURN,return array-&gt;GetLength();,return array-&gt;GetLength();)<SUB>1992</SUB>> ]
-"10973" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>1986</SUB>> ]
-"10980" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>1986</SUB>> ]
-"10990" [label = <(UNLIKELY,UNLIKELY(!obj-&gt;IsArrayInstance()))<SUB>1987</SUB>> ]
-"11018" [label = <(AsArray,obj-&gt;AsArray())<SUB>1991</SUB>> ]
-"11023" [label = <(GetLength,array-&gt;GetLength())<SUB>1992</SUB>> ]
-"10974" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1986</SUB>> ]
-"10981" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1986</SUB>> ]
-"10991" [label = <(&lt;operator&gt;.logicalNot,!obj-&gt;IsArrayInstance())<SUB>1987</SUB>> ]
-"10997" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetArrayLength&quot;, &quot;not an array: %s&quot;, obj-&gt;PrettyTypeOf().c_str()))<SUB>1988</SUB>> ]
-"11013" [label = <(RETURN,return 0;,return 0;)<SUB>1989</SUB>> ]
-"11019" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;AsArray)<SUB>1991</SUB>> ]
-"11024" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>1992</SUB>> ]
-"10955" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>1984</SUB>> ]
-"10976" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1986</SUB>> ]
-"10982" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1986</SUB>> ]
-"10985" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1986</SUB>> ]
-"10992" [label = <(IsArrayInstance,obj-&gt;IsArrayInstance())<SUB>1987</SUB>> ]
-"10998" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>1988</SUB>> ]
-"11006" [label = <(c_str,obj-&gt;PrettyTypeOf().c_str())<SUB>1988</SUB>> ]
-"11021" [label = <(FIELD_IDENTIFIER,AsArray,AsArray)<SUB>1991</SUB>> ]
-"11026" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1992</SUB>> ]
-"10956" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>1984</SUB>> ]
-"10960" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>1984</SUB>> ]
-"10967" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>1984</SUB>> ]
-"10978" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1986</SUB>> ]
-"10984" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1986</SUB>> ]
-"10987" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1986</SUB>> ]
-"10993" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;IsArrayInstance)<SUB>1987</SUB>> ]
-"10999" [label = <(Vm,soa.Vm())<SUB>1988</SUB>> ]
-"11003" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1988</SUB>> ]
-"11007" [label = <(&lt;operator&gt;.fieldAccess,obj-&gt;PrettyTypeOf().c_str)<SUB>1988</SUB>> ]
-"10961" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1984</SUB>> ]
-"10995" [label = <(FIELD_IDENTIFIER,IsArrayInstance,IsArrayInstance)<SUB>1987</SUB>> ]
-"11000" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>1988</SUB>> ]
-"11008" [label = <(PrettyTypeOf,obj-&gt;PrettyTypeOf())<SUB>1988</SUB>> ]
-"11012" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1988</SUB>> ]
-"10962" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1984</SUB>> ]
-"10964" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1984</SUB>> ]
-"11002" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>1988</SUB>> ]
-"11009" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;PrettyTypeOf)<SUB>1988</SUB>> ]
-"11011" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>1988</SUB>> ]
-"10947" [label = <(METHOD,GetArrayLength)<SUB>1983</SUB>> ]
-"11027" [label = <(METHOD_RETURN,jsize)<SUB>1983</SUB>> ]
-  "10951" -> "10956" 
-  "10951" -> "10970" 
-  "10970" -> "10978" 
-  "10972" -> "10995" 
-  "11016" -> "11026" 
-  "11022" -> "11027" 
-  "10973" -> "10984" 
-  "10980" -> "10972" 
-  "10990" -> "11002" 
-  "10990" -> "11021" 
+"10948" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>1982</SUB>> ]
+"10967" [label = <(soa,soa(env))<SUB>1983</SUB>> ]
+"10969" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>1984</SUB>> ]
+"11013" [label = <(&lt;operator&gt;.assignment,* array = obj-&gt;AsArray())<SUB>1989</SUB>> ]
+"11019" [label = <(RETURN,return array-&gt;GetLength();,return array-&gt;GetLength();)<SUB>1990</SUB>> ]
+"10970" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>1984</SUB>> ]
+"10977" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>1984</SUB>> ]
+"10987" [label = <(UNLIKELY,UNLIKELY(!obj-&gt;IsArrayInstance()))<SUB>1985</SUB>> ]
+"11015" [label = <(AsArray,obj-&gt;AsArray())<SUB>1989</SUB>> ]
+"11020" [label = <(GetLength,array-&gt;GetLength())<SUB>1990</SUB>> ]
+"10971" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1984</SUB>> ]
+"10978" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1984</SUB>> ]
+"10988" [label = <(&lt;operator&gt;.logicalNot,!obj-&gt;IsArrayInstance())<SUB>1985</SUB>> ]
+"10994" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetArrayLength&quot;, &quot;not an array: %s&quot;, obj-&gt;PrettyTypeOf().c_str()))<SUB>1986</SUB>> ]
+"11010" [label = <(RETURN,return 0;,return 0;)<SUB>1987</SUB>> ]
+"11016" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;AsArray)<SUB>1989</SUB>> ]
+"11021" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>1990</SUB>> ]
+"10952" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>1982</SUB>> ]
+"10973" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1984</SUB>> ]
+"10979" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1984</SUB>> ]
+"10982" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1984</SUB>> ]
+"10989" [label = <(IsArrayInstance,obj-&gt;IsArrayInstance())<SUB>1985</SUB>> ]
+"10995" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>1986</SUB>> ]
+"11003" [label = <(c_str,obj-&gt;PrettyTypeOf().c_str())<SUB>1986</SUB>> ]
+"11018" [label = <(FIELD_IDENTIFIER,AsArray,AsArray)<SUB>1989</SUB>> ]
+"11023" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1990</SUB>> ]
+"10953" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>1982</SUB>> ]
+"10957" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>1982</SUB>> ]
+"10964" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>1982</SUB>> ]
+"10975" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1984</SUB>> ]
+"10981" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1984</SUB>> ]
+"10984" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1984</SUB>> ]
+"10990" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;IsArrayInstance)<SUB>1985</SUB>> ]
+"10996" [label = <(Vm,soa.Vm())<SUB>1986</SUB>> ]
+"11000" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1986</SUB>> ]
+"11004" [label = <(&lt;operator&gt;.fieldAccess,obj-&gt;PrettyTypeOf().c_str)<SUB>1986</SUB>> ]
+"10958" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1982</SUB>> ]
+"10992" [label = <(FIELD_IDENTIFIER,IsArrayInstance,IsArrayInstance)<SUB>1985</SUB>> ]
+"10997" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>1986</SUB>> ]
+"11005" [label = <(PrettyTypeOf,obj-&gt;PrettyTypeOf())<SUB>1986</SUB>> ]
+"11009" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1986</SUB>> ]
+"10959" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1982</SUB>> ]
+"10961" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1982</SUB>> ]
+"10999" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>1986</SUB>> ]
+"11006" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;PrettyTypeOf)<SUB>1986</SUB>> ]
+"11008" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>1986</SUB>> ]
+"10944" [label = <(METHOD,GetArrayLength)<SUB>1981</SUB>> ]
+"11024" [label = <(METHOD_RETURN,jsize)<SUB>1981</SUB>> ]
+  "10948" -> "10953" 
+  "10948" -> "10967" 
+  "10967" -> "10975" 
+  "10969" -> "10992" 
+  "11013" -> "11023" 
+  "11019" -> "11024" 
+  "10970" -> "10981" 
+  "10977" -> "10969" 
+  "10987" -> "10999" 
+  "10987" -> "11018" 
+  "11015" -> "11013" 
+  "11020" -> "11019" 
+  "10971" -> "10970" 
+  "10978" -> "10977" 
+  "10988" -> "10987" 
+  "10994" -> "11010" 
+  "11010" -> "11024" 
+  "11016" -> "11015" 
+  "11021" -> "11020" 
+  "10952" -> "10959" 
+  "10952" -> "10967" 
+  "10973" -> "10971" 
+  "10979" -> "10984" 
+  "10982" -> "10978" 
+  "10989" -> "10988" 
+  "10995" -> "11008" 
+  "11003" -> "10994" 
   "11018" -> "11016" 
-  "11023" -> "11022" 
-  "10974" -> "10973" 
-  "10981" -> "10980" 
-  "10991" -> "10990" 
-  "10997" -> "11013" 
-  "11013" -> "11027" 
-  "11019" -> "11018" 
-  "11024" -> "11023" 
-  "10955" -> "10962" 
-  "10955" -> "10970" 
-  "10976" -> "10974" 
-  "10982" -> "10987" 
-  "10985" -> "10981" 
-  "10992" -> "10991" 
-  "10998" -> "11011" 
-  "11006" -> "10997" 
-  "11021" -> "11019" 
-  "11026" -> "11024" 
-  "10956" -> "10955" 
-  "10960" -> "10967" 
-  "10967" -> "11027" 
-  "10978" -> "10976" 
+  "11023" -> "11021" 
+  "10953" -> "10952" 
+  "10957" -> "10964" 
+  "10964" -> "11024" 
+  "10975" -> "10973" 
+  "10981" -> "10979" 
   "10984" -> "10982" 
-  "10987" -> "10985" 
-  "10993" -> "10992" 
-  "10999" -> "11003" 
-  "11003" -> "10998" 
-  "11007" -> "11006" 
-  "10961" -> "10960" 
-  "10995" -> "10993" 
-  "11000" -> "10999" 
-  "11008" -> "11012" 
-  "11012" -> "11007" 
-  "10962" -> "10964" 
-  "10964" -> "10961" 
-  "11002" -> "11000" 
-  "11009" -> "11008" 
-  "11011" -> "11009" 
-  "10947" -> "10951" 
+  "10990" -> "10989" 
+  "10996" -> "11000" 
+  "11000" -> "10995" 
+  "11004" -> "11003" 
+  "10958" -> "10957" 
+  "10992" -> "10990" 
+  "10997" -> "10996" 
+  "11005" -> "11009" 
+  "11009" -> "11004" 
+  "10959" -> "10961" 
+  "10961" -> "10958" 
+  "10999" -> "10997" 
+  "11006" -> "11005" 
+  "11008" -> "11006" 
+  "10944" -> "10948" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/193-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/193-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/193-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/193-cfg.dot	2023-06-07 19:34:28.677390217 +0330
@@ -1,75 +1,75 @@
 digraph "GetObjectArrayElement" {  
-"11034" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>1996</SUB>> ]
-"11053" [label = <(soa,soa(env))<SUB>1997</SUB>> ]
-"11055" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>1998</SUB>> ]
-"11080" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));)<SUB>2000</SUB>> ]
-"11056" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>1998</SUB>> ]
-"11067" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>1999</SUB>> ]
-"11081" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index)))<SUB>2000</SUB>> ]
-"11057" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>1998</SUB>> ]
-"11062" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>1998</SUB>> ]
-"11068" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>1999</SUB>> ]
-"11075" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>1999</SUB>> ]
-"11082" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>2000</SUB>> ]
-"11087" [label = <(Get,array-&gt;Get(index))<SUB>2000</SUB>> ]
-"11038" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>1996</SUB>> ]
-"11059" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>1998</SUB>> ]
-"11063" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1998</SUB>> ]
-"11069" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1999</SUB>> ]
-"11072" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>1999</SUB>> ]
-"11076" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1999</SUB>> ]
-"11083" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2000</SUB>> ]
-"11088" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Get)<SUB>2000</SUB>> ]
-"11039" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>1996</SUB>> ]
-"11043" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>1996</SUB>> ]
-"11050" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>1996</SUB>> ]
-"11061" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>1998</SUB>> ]
-"11065" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1998</SUB>> ]
-"11071" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1999</SUB>> ]
-"11074" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>1999</SUB>> ]
-"11078" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1999</SUB>> ]
-"11085" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2000</SUB>> ]
-"11090" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2000</SUB>> ]
-"11044" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1996</SUB>> ]
-"11045" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1996</SUB>> ]
-"11047" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1996</SUB>> ]
-"11029" [label = <(METHOD,GetObjectArrayElement)<SUB>1995</SUB>> ]
-"11092" [label = <(METHOD_RETURN,jobject)<SUB>1995</SUB>> ]
-  "11034" -> "11039" 
-  "11034" -> "11053" 
-  "11053" -> "11061" 
-  "11055" -> "11085" 
-  "11080" -> "11092" 
-  "11056" -> "11071" 
-  "11067" -> "11055" 
-  "11081" -> "11080" 
-  "11057" -> "11065" 
-  "11062" -> "11056" 
-  "11068" -> "11078" 
-  "11075" -> "11067" 
-  "11082" -> "11090" 
-  "11087" -> "11081" 
-  "11038" -> "11045" 
-  "11038" -> "11053" 
-  "11059" -> "11057" 
-  "11063" -> "11062" 
-  "11069" -> "11074" 
-  "11072" -> "11068" 
-  "11076" -> "11075" 
-  "11083" -> "11082" 
-  "11088" -> "11087" 
-  "11039" -> "11038" 
-  "11043" -> "11050" 
-  "11050" -> "11092" 
-  "11061" -> "11059" 
-  "11065" -> "11063" 
+"11031" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>1994</SUB>> ]
+"11050" [label = <(soa,soa(env))<SUB>1995</SUB>> ]
+"11052" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>1996</SUB>> ]
+"11077" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));)<SUB>1998</SUB>> ]
+"11053" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>1996</SUB>> ]
+"11064" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>1997</SUB>> ]
+"11078" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index)))<SUB>1998</SUB>> ]
+"11054" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>1996</SUB>> ]
+"11059" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>1996</SUB>> ]
+"11065" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>1997</SUB>> ]
+"11072" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>1997</SUB>> ]
+"11079" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1998</SUB>> ]
+"11084" [label = <(Get,array-&gt;Get(index))<SUB>1998</SUB>> ]
+"11035" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>1994</SUB>> ]
+"11056" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>1996</SUB>> ]
+"11060" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1996</SUB>> ]
+"11066" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1997</SUB>> ]
+"11069" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>1997</SUB>> ]
+"11073" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1997</SUB>> ]
+"11080" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1998</SUB>> ]
+"11085" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Get)<SUB>1998</SUB>> ]
+"11036" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>1994</SUB>> ]
+"11040" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>1994</SUB>> ]
+"11047" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>1994</SUB>> ]
+"11058" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>1996</SUB>> ]
+"11062" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1996</SUB>> ]
+"11068" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1997</SUB>> ]
+"11071" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>1997</SUB>> ]
+"11075" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1997</SUB>> ]
+"11082" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1998</SUB>> ]
+"11087" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>1998</SUB>> ]
+"11041" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1994</SUB>> ]
+"11042" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1994</SUB>> ]
+"11044" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1994</SUB>> ]
+"11026" [label = <(METHOD,GetObjectArrayElement)<SUB>1993</SUB>> ]
+"11089" [label = <(METHOD_RETURN,jobject)<SUB>1993</SUB>> ]
+  "11031" -> "11036" 
+  "11031" -> "11050" 
+  "11050" -> "11058" 
+  "11052" -> "11082" 
+  "11077" -> "11089" 
+  "11053" -> "11068" 
+  "11064" -> "11052" 
+  "11078" -> "11077" 
+  "11054" -> "11062" 
+  "11059" -> "11053" 
+  "11065" -> "11075" 
+  "11072" -> "11064" 
+  "11079" -> "11087" 
+  "11084" -> "11078" 
+  "11035" -> "11042" 
+  "11035" -> "11050" 
+  "11056" -> "11054" 
+  "11060" -> "11059" 
+  "11066" -> "11071" 
+  "11069" -> "11065" 
+  "11073" -> "11072" 
+  "11080" -> "11079" 
+  "11085" -> "11084" 
+  "11036" -> "11035" 
+  "11040" -> "11047" 
+  "11047" -> "11089" 
+  "11058" -> "11056" 
+  "11062" -> "11060" 
+  "11068" -> "11066" 
   "11071" -> "11069" 
-  "11074" -> "11072" 
-  "11078" -> "11076" 
-  "11085" -> "11083" 
-  "11090" -> "11088" 
-  "11044" -> "11043" 
-  "11045" -> "11047" 
-  "11047" -> "11044" 
-  "11029" -> "11034" 
+  "11075" -> "11073" 
+  "11082" -> "11080" 
+  "11087" -> "11085" 
+  "11041" -> "11040" 
+  "11042" -> "11044" 
+  "11044" -> "11041" 
+  "11026" -> "11031" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/194-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/194-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/194-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/194-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,99 +1,99 @@
 digraph "SetObjectArrayElement" {  
-"11100" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2005</SUB>> ]
-"11118" [label = <(soa,soa(env))<SUB>2006</SUB>> ]
-"11120" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2007</SUB>> ]
-"11145" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; value = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2009</SUB>> ]
-"11162" [label = <(&lt;operator&gt;.greaterThan,array-&gt;Set&lt;false&gt;(index, value.Ptr()))<SUB>2010</SUB>> ]
-"11121" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2007</SUB>> ]
-"11132" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2008</SUB>> ]
-"11146" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; value)<SUB>2009</SUB>> ]
-"11153" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2009</SUB>> ]
-"11163" [label = <(&lt;operator&gt;.lessThan,array-&gt;Set&lt;false)<SUB>2010</SUB>> ]
-"11168" [label = <(&lt;operator&gt;.bracketedPrimary,(index, value.Ptr()))<SUB>2010</SUB>> ]
-"11122" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2007</SUB>> ]
-"11127" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2007</SUB>> ]
-"11133" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2008</SUB>> ]
-"11140" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2008</SUB>> ]
-"11147" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2009</SUB>> ]
-"11154" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2009</SUB>> ]
-"11164" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Set)<SUB>2010</SUB>> ]
-"11169" [label = <(&lt;operator&gt;.expressionList,index, value.Ptr())<SUB>2010</SUB>> ]
-"11104" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2005</SUB>> ]
-"11124" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2007</SUB>> ]
-"11128" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2007</SUB>> ]
-"11134" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2008</SUB>> ]
-"11137" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2008</SUB>> ]
-"11141" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2008</SUB>> ]
-"11149" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2009</SUB>> ]
-"11155" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2009</SUB>> ]
-"11158" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2009</SUB>> ]
-"11166" [label = <(FIELD_IDENTIFIER,Set,Set)<SUB>2010</SUB>> ]
-"11171" [label = <(Ptr,value.Ptr())<SUB>2010</SUB>> ]
-"11105" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2005</SUB>> ]
-"11109" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2005</SUB>> ]
-"11116" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2005</SUB>> ]
-"11126" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2007</SUB>> ]
-"11130" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2007</SUB>> ]
-"11136" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2008</SUB>> ]
-"11139" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2008</SUB>> ]
-"11143" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2008</SUB>> ]
-"11151" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2009</SUB>> ]
-"11157" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2009</SUB>> ]
-"11160" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2009</SUB>> ]
-"11172" [label = <(&lt;operator&gt;.fieldAccess,value.Ptr)<SUB>2010</SUB>> ]
-"11110" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2005</SUB>> ]
-"11174" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2010</SUB>> ]
-"11111" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2005</SUB>> ]
-"11113" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2005</SUB>> ]
-"11094" [label = <(METHOD,SetObjectArrayElement)<SUB>2003</SUB>> ]
-"11175" [label = <(METHOD_RETURN,void)<SUB>2003</SUB>> ]
-  "11100" -> "11105" 
-  "11100" -> "11118" 
-  "11118" -> "11126" 
-  "11120" -> "11151" 
-  "11145" -> "11166" 
-  "11162" -> "11175" 
-  "11121" -> "11136" 
-  "11132" -> "11120" 
-  "11146" -> "11157" 
-  "11153" -> "11145" 
-  "11163" -> "11174" 
-  "11168" -> "11162" 
-  "11122" -> "11130" 
-  "11127" -> "11121" 
-  "11133" -> "11143" 
-  "11140" -> "11132" 
-  "11147" -> "11146" 
-  "11154" -> "11153" 
-  "11164" -> "11163" 
-  "11169" -> "11168" 
-  "11104" -> "11111" 
-  "11104" -> "11118" 
-  "11124" -> "11122" 
-  "11128" -> "11127" 
-  "11134" -> "11139" 
-  "11137" -> "11133" 
-  "11141" -> "11140" 
-  "11149" -> "11147" 
-  "11155" -> "11160" 
-  "11158" -> "11154" 
-  "11166" -> "11164" 
-  "11171" -> "11169" 
-  "11105" -> "11104" 
-  "11109" -> "11116" 
-  "11116" -> "11175" 
-  "11126" -> "11124" 
-  "11130" -> "11128" 
+"11097" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2003</SUB>> ]
+"11115" [label = <(soa,soa(env))<SUB>2004</SUB>> ]
+"11117" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2005</SUB>> ]
+"11142" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; value = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2007</SUB>> ]
+"11159" [label = <(&lt;operator&gt;.greaterThan,array-&gt;Set&lt;false&gt;(index, value.Ptr()))<SUB>2008</SUB>> ]
+"11118" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2005</SUB>> ]
+"11129" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2006</SUB>> ]
+"11143" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; value)<SUB>2007</SUB>> ]
+"11150" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2007</SUB>> ]
+"11160" [label = <(&lt;operator&gt;.lessThan,array-&gt;Set&lt;false)<SUB>2008</SUB>> ]
+"11165" [label = <(&lt;operator&gt;.bracketedPrimary,(index, value.Ptr()))<SUB>2008</SUB>> ]
+"11119" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2005</SUB>> ]
+"11124" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2005</SUB>> ]
+"11130" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2006</SUB>> ]
+"11137" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2006</SUB>> ]
+"11144" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2007</SUB>> ]
+"11151" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2007</SUB>> ]
+"11161" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Set)<SUB>2008</SUB>> ]
+"11166" [label = <(&lt;operator&gt;.expressionList,index, value.Ptr())<SUB>2008</SUB>> ]
+"11101" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2003</SUB>> ]
+"11121" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2005</SUB>> ]
+"11125" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2005</SUB>> ]
+"11131" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2006</SUB>> ]
+"11134" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2006</SUB>> ]
+"11138" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2006</SUB>> ]
+"11146" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2007</SUB>> ]
+"11152" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2007</SUB>> ]
+"11155" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2007</SUB>> ]
+"11163" [label = <(FIELD_IDENTIFIER,Set,Set)<SUB>2008</SUB>> ]
+"11168" [label = <(Ptr,value.Ptr())<SUB>2008</SUB>> ]
+"11102" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2003</SUB>> ]
+"11106" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2003</SUB>> ]
+"11113" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2003</SUB>> ]
+"11123" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2005</SUB>> ]
+"11127" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2005</SUB>> ]
+"11133" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2006</SUB>> ]
+"11136" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2006</SUB>> ]
+"11140" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2006</SUB>> ]
+"11148" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2007</SUB>> ]
+"11154" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2007</SUB>> ]
+"11157" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2007</SUB>> ]
+"11169" [label = <(&lt;operator&gt;.fieldAccess,value.Ptr)<SUB>2008</SUB>> ]
+"11107" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2003</SUB>> ]
+"11171" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2008</SUB>> ]
+"11108" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2003</SUB>> ]
+"11110" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2003</SUB>> ]
+"11091" [label = <(METHOD,SetObjectArrayElement)<SUB>2001</SUB>> ]
+"11172" [label = <(METHOD_RETURN,void)<SUB>2001</SUB>> ]
+  "11097" -> "11102" 
+  "11097" -> "11115" 
+  "11115" -> "11123" 
+  "11117" -> "11148" 
+  "11142" -> "11163" 
+  "11159" -> "11172" 
+  "11118" -> "11133" 
+  "11129" -> "11117" 
+  "11143" -> "11154" 
+  "11150" -> "11142" 
+  "11160" -> "11171" 
+  "11165" -> "11159" 
+  "11119" -> "11127" 
+  "11124" -> "11118" 
+  "11130" -> "11140" 
+  "11137" -> "11129" 
+  "11144" -> "11143" 
+  "11151" -> "11150" 
+  "11161" -> "11160" 
+  "11166" -> "11165" 
+  "11101" -> "11108" 
+  "11101" -> "11115" 
+  "11121" -> "11119" 
+  "11125" -> "11124" 
+  "11131" -> "11136" 
+  "11134" -> "11130" 
+  "11138" -> "11137" 
+  "11146" -> "11144" 
+  "11152" -> "11157" 
+  "11155" -> "11151" 
+  "11163" -> "11161" 
+  "11168" -> "11166" 
+  "11102" -> "11101" 
+  "11106" -> "11113" 
+  "11113" -> "11172" 
+  "11123" -> "11121" 
+  "11127" -> "11125" 
+  "11133" -> "11131" 
   "11136" -> "11134" 
-  "11139" -> "11137" 
-  "11143" -> "11141" 
-  "11151" -> "11149" 
+  "11140" -> "11138" 
+  "11148" -> "11146" 
+  "11154" -> "11152" 
   "11157" -> "11155" 
-  "11160" -> "11158" 
-  "11172" -> "11171" 
-  "11110" -> "11109" 
-  "11174" -> "11172" 
-  "11111" -> "11113" 
-  "11113" -> "11110" 
-  "11094" -> "11100" 
+  "11169" -> "11168" 
+  "11107" -> "11106" 
+  "11171" -> "11169" 
+  "11108" -> "11110" 
+  "11110" -> "11107" 
+  "11091" -> "11097" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/195-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/195-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/195-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/195-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,9 +1,9 @@
 digraph "NewBooleanArray" {  
-"11181" [label = <(RETURN,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);)<SUB>2014</SUB>> ]
-"11182" [label = <(NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;,NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length))<SUB>2014</SUB>> ]
-"11177" [label = <(METHOD,NewBooleanArray)<SUB>2013</SUB>> ]
-"11185" [label = <(METHOD_RETURN,jbooleanArray)<SUB>2013</SUB>> ]
-  "11181" -> "11185" 
-  "11182" -> "11181" 
-  "11177" -> "11182" 
+"11178" [label = <(RETURN,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);)<SUB>2012</SUB>> ]
+"11179" [label = <(NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;,NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length))<SUB>2012</SUB>> ]
+"11174" [label = <(METHOD,NewBooleanArray)<SUB>2011</SUB>> ]
+"11182" [label = <(METHOD_RETURN,jbooleanArray)<SUB>2011</SUB>> ]
+  "11178" -> "11182" 
+  "11179" -> "11178" 
+  "11174" -> "11179" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/196-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/196-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/196-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/196-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,9 +1,9 @@
 digraph "NewByteArray" {  
-"11191" [label = <(RETURN,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);)<SUB>2018</SUB>> ]
-"11192" [label = <(NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;,NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length))<SUB>2018</SUB>> ]
-"11187" [label = <(METHOD,NewByteArray)<SUB>2017</SUB>> ]
-"11195" [label = <(METHOD_RETURN,jbyteArray)<SUB>2017</SUB>> ]
-  "11191" -> "11195" 
-  "11192" -> "11191" 
-  "11187" -> "11192" 
+"11188" [label = <(RETURN,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);)<SUB>2016</SUB>> ]
+"11189" [label = <(NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;,NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length))<SUB>2016</SUB>> ]
+"11184" [label = <(METHOD,NewByteArray)<SUB>2015</SUB>> ]
+"11192" [label = <(METHOD_RETURN,jbyteArray)<SUB>2015</SUB>> ]
+  "11188" -> "11192" 
+  "11189" -> "11188" 
+  "11184" -> "11189" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/197-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/197-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/197-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/197-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,9 +1,9 @@
 digraph "NewCharArray" {  
-"11201" [label = <(RETURN,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);)<SUB>2022</SUB>> ]
-"11202" [label = <(NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;,NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length))<SUB>2022</SUB>> ]
-"11197" [label = <(METHOD,NewCharArray)<SUB>2021</SUB>> ]
-"11205" [label = <(METHOD_RETURN,jcharArray)<SUB>2021</SUB>> ]
-  "11201" -> "11205" 
-  "11202" -> "11201" 
-  "11197" -> "11202" 
+"11198" [label = <(RETURN,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);)<SUB>2020</SUB>> ]
+"11199" [label = <(NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;,NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length))<SUB>2020</SUB>> ]
+"11194" [label = <(METHOD,NewCharArray)<SUB>2019</SUB>> ]
+"11202" [label = <(METHOD_RETURN,jcharArray)<SUB>2019</SUB>> ]
+  "11198" -> "11202" 
+  "11199" -> "11198" 
+  "11194" -> "11199" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/198-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/198-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/198-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/198-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,9 +1,9 @@
 digraph "NewDoubleArray" {  
-"11211" [label = <(RETURN,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);)<SUB>2026</SUB>> ]
-"11212" [label = <(NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;,NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length))<SUB>2026</SUB>> ]
-"11207" [label = <(METHOD,NewDoubleArray)<SUB>2025</SUB>> ]
-"11215" [label = <(METHOD_RETURN,jdoubleArray)<SUB>2025</SUB>> ]
-  "11211" -> "11215" 
-  "11212" -> "11211" 
-  "11207" -> "11212" 
+"11208" [label = <(RETURN,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);)<SUB>2024</SUB>> ]
+"11209" [label = <(NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;,NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length))<SUB>2024</SUB>> ]
+"11204" [label = <(METHOD,NewDoubleArray)<SUB>2023</SUB>> ]
+"11212" [label = <(METHOD_RETURN,jdoubleArray)<SUB>2023</SUB>> ]
+  "11208" -> "11212" 
+  "11209" -> "11208" 
+  "11204" -> "11209" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/199-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/199-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/199-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/199-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,9 +1,9 @@
 digraph "NewFloatArray" {  
-"11221" [label = <(RETURN,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);)<SUB>2030</SUB>> ]
-"11222" [label = <(NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;,NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length))<SUB>2030</SUB>> ]
-"11217" [label = <(METHOD,NewFloatArray)<SUB>2029</SUB>> ]
-"11225" [label = <(METHOD_RETURN,jfloatArray)<SUB>2029</SUB>> ]
-  "11221" -> "11225" 
-  "11222" -> "11221" 
-  "11217" -> "11222" 
+"11218" [label = <(RETURN,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);)<SUB>2028</SUB>> ]
+"11219" [label = <(NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;,NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length))<SUB>2028</SUB>> ]
+"11214" [label = <(METHOD,NewFloatArray)<SUB>2027</SUB>> ]
+"11222" [label = <(METHOD_RETURN,jfloatArray)<SUB>2027</SUB>> ]
+  "11218" -> "11222" 
+  "11219" -> "11218" 
+  "11214" -> "11219" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/2-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/2-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/2-cfg.dot	2023-06-07 19:34:21.767390859 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/2-cfg.dot	2023-06-07 19:34:28.327390248 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_5" {  
-"15" [label = <(METHOD,anonymous_lambda_5)<SUB>1792</SUB>> ]
-"17" [label = <(METHOD_RETURN,ANY)<SUB>1792</SUB>> ]
+"15" [label = <(METHOD,anonymous_lambda_5)<SUB>1790</SUB>> ]
+"17" [label = <(METHOD_RETURN,ANY)<SUB>1790</SUB>> ]
   "15" -> "17" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/20-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/20-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/20-cfg.dot	2023-06-07 19:34:22.017390836 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/20-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,69 +1,69 @@
 digraph "FindClass" {  
-"527" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>434</SUB>> ]
-"546" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>435</SUB>> ]
-"553" [label = <(&lt;operator&gt;.assignment,* class_linker = runtime-&gt;GetClassLinker())<SUB>436</SUB>> ]
-"560" [label = <(descriptor,descriptor(NormalizeJniClassDescriptor(name)))<SUB>437</SUB>> ]
-"564" [label = <(soa,soa(env))<SUB>438</SUB>> ]
-"567" [label = <(&lt;operator&gt;.assignment,* c = nullptr)<SUB>439</SUB>> ]
-"629" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c);,return soa.AddLocalReference&lt;jclass&gt;(c);)<SUB>447</SUB>> ]
-"548" [label = <(Runtime::Current,Runtime::Current())<SUB>435</SUB>> ]
-"555" [label = <(GetClassLinker,runtime-&gt;GetClassLinker())<SUB>436</SUB>> ]
-"561" [label = <(NormalizeJniClassDescriptor,NormalizeJniClassDescriptor(name))<SUB>437</SUB>> ]
-"571" [label = <(IsStarted,runtime-&gt;IsStarted())<SUB>440</SUB>> ]
-"630" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c))<SUB>447</SUB>> ]
-"549" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>435</SUB>> ]
-"556" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetClassLinker)<SUB>436</SUB>> ]
-"572" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;IsStarted)<SUB>440</SUB>> ]
-"576" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>441</SUB>> ]
-"585" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>442</SUB>> ]
-"598" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>443</SUB>> ]
-"631" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>447</SUB>> ]
-"531" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>434</SUB>> ]
-"551" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>435</SUB>> ]
-"558" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>436</SUB>> ]
-"574" [label = <(FIELD_IDENTIFIER,IsStarted,IsStarted)<SUB>440</SUB>> ]
-"577" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>441</SUB>> ]
-"580" [label = <(hs,hs(soa.Self()))<SUB>441</SUB>> ]
-"586" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::ClassLoader)<SUB>442</SUB>> ]
-"591" [label = <(class_loader,class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>442</SUB>> ]
-"600" [label = <(FindClass,class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>443</SUB>> ]
-"615" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>445</SUB>> ]
-"632" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>447</SUB>> ]
-"532" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>434</SUB>> ]
-"536" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;name == null&quot;))<SUB>434</SUB>> ]
-"543" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>434</SUB>> ]
-"581" [label = <(Self,soa.Self())<SUB>441</SUB>> ]
-"588" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>442</SUB>> ]
-"592" [label = <(NewHandle,hs.NewHandle(GetClassLoader(soa)))<SUB>442</SUB>> ]
-"601" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindClass)<SUB>443</SUB>> ]
-"604" [label = <(Self,soa.Self())<SUB>443</SUB>> ]
-"608" [label = <(c_str,descriptor.c_str())<SUB>443</SUB>> ]
-"617" [label = <(FindSystemClass,class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>445</SUB>> ]
-"634" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>447</SUB>> ]
-"537" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>434</SUB>> ]
-"582" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>441</SUB>> ]
-"590" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>442</SUB>> ]
-"593" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>442</SUB>> ]
-"596" [label = <(GetClassLoader,GetClassLoader(soa))<SUB>442</SUB>> ]
-"603" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>443</SUB>> ]
-"605" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>443</SUB>> ]
-"609" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>443</SUB>> ]
-"618" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindSystemClass)<SUB>445</SUB>> ]
-"621" [label = <(Self,soa.Self())<SUB>445</SUB>> ]
-"625" [label = <(c_str,descriptor.c_str())<SUB>445</SUB>> ]
-"538" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>434</SUB>> ]
-"540" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>434</SUB>> ]
-"584" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>441</SUB>> ]
-"595" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>442</SUB>> ]
-"607" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>443</SUB>> ]
-"611" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>443</SUB>> ]
-"620" [label = <(FIELD_IDENTIFIER,FindSystemClass,FindSystemClass)<SUB>445</SUB>> ]
-"622" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>445</SUB>> ]
-"626" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>445</SUB>> ]
-"624" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>445</SUB>> ]
-"628" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>445</SUB>> ]
-"523" [label = <(METHOD,FindClass)<SUB>433</SUB>> ]
-"637" [label = <(METHOD_RETURN,jclass)<SUB>433</SUB>> ]
+"527" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>433</SUB>> ]
+"546" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>434</SUB>> ]
+"553" [label = <(&lt;operator&gt;.assignment,* class_linker = runtime-&gt;GetClassLinker())<SUB>435</SUB>> ]
+"560" [label = <(descriptor,descriptor(NormalizeJniClassDescriptor(name)))<SUB>436</SUB>> ]
+"564" [label = <(soa,soa(env))<SUB>437</SUB>> ]
+"567" [label = <(&lt;operator&gt;.assignment,* c = nullptr)<SUB>438</SUB>> ]
+"629" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c);,return soa.AddLocalReference&lt;jclass&gt;(c);)<SUB>446</SUB>> ]
+"548" [label = <(Runtime::Current,Runtime::Current())<SUB>434</SUB>> ]
+"555" [label = <(GetClassLinker,runtime-&gt;GetClassLinker())<SUB>435</SUB>> ]
+"561" [label = <(NormalizeJniClassDescriptor,NormalizeJniClassDescriptor(name))<SUB>436</SUB>> ]
+"571" [label = <(IsStarted,runtime-&gt;IsStarted())<SUB>439</SUB>> ]
+"630" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c))<SUB>446</SUB>> ]
+"549" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>434</SUB>> ]
+"556" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetClassLinker)<SUB>435</SUB>> ]
+"572" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;IsStarted)<SUB>439</SUB>> ]
+"576" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>440</SUB>> ]
+"585" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>441</SUB>> ]
+"598" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>442</SUB>> ]
+"631" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>446</SUB>> ]
+"531" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>433</SUB>> ]
+"551" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>434</SUB>> ]
+"558" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>435</SUB>> ]
+"574" [label = <(FIELD_IDENTIFIER,IsStarted,IsStarted)<SUB>439</SUB>> ]
+"577" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>440</SUB>> ]
+"580" [label = <(hs,hs(soa.Self()))<SUB>440</SUB>> ]
+"586" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::ClassLoader)<SUB>441</SUB>> ]
+"591" [label = <(class_loader,class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>441</SUB>> ]
+"600" [label = <(FindClass,class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>442</SUB>> ]
+"615" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>444</SUB>> ]
+"632" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>446</SUB>> ]
+"532" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>433</SUB>> ]
+"536" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;name == null&quot;))<SUB>433</SUB>> ]
+"543" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>433</SUB>> ]
+"581" [label = <(Self,soa.Self())<SUB>440</SUB>> ]
+"588" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>441</SUB>> ]
+"592" [label = <(NewHandle,hs.NewHandle(GetClassLoader(soa)))<SUB>441</SUB>> ]
+"601" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindClass)<SUB>442</SUB>> ]
+"604" [label = <(Self,soa.Self())<SUB>442</SUB>> ]
+"608" [label = <(c_str,descriptor.c_str())<SUB>442</SUB>> ]
+"617" [label = <(FindSystemClass,class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>444</SUB>> ]
+"634" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>446</SUB>> ]
+"537" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>433</SUB>> ]
+"582" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>440</SUB>> ]
+"590" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>441</SUB>> ]
+"593" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>441</SUB>> ]
+"596" [label = <(GetClassLoader,GetClassLoader(soa))<SUB>441</SUB>> ]
+"603" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>442</SUB>> ]
+"605" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>442</SUB>> ]
+"609" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>442</SUB>> ]
+"618" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindSystemClass)<SUB>444</SUB>> ]
+"621" [label = <(Self,soa.Self())<SUB>444</SUB>> ]
+"625" [label = <(c_str,descriptor.c_str())<SUB>444</SUB>> ]
+"538" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>433</SUB>> ]
+"540" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>433</SUB>> ]
+"584" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>440</SUB>> ]
+"595" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>441</SUB>> ]
+"607" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>442</SUB>> ]
+"611" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>442</SUB>> ]
+"620" [label = <(FIELD_IDENTIFIER,FindSystemClass,FindSystemClass)<SUB>444</SUB>> ]
+"622" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>444</SUB>> ]
+"626" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>444</SUB>> ]
+"624" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>444</SUB>> ]
+"628" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>444</SUB>> ]
+"523" [label = <(METHOD,FindClass)<SUB>432</SUB>> ]
+"637" [label = <(METHOD_RETURN,jclass)<SUB>432</SUB>> ]
   "527" -> "532" 
   "527" -> "551" 
   "546" -> "558" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/200-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/200-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/200-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/200-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,9 +1,9 @@
 digraph "NewIntArray" {  
-"11231" [label = <(RETURN,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);)<SUB>2034</SUB>> ]
-"11232" [label = <(NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;,NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length))<SUB>2034</SUB>> ]
-"11227" [label = <(METHOD,NewIntArray)<SUB>2033</SUB>> ]
-"11235" [label = <(METHOD_RETURN,jintArray)<SUB>2033</SUB>> ]
-  "11231" -> "11235" 
-  "11232" -> "11231" 
-  "11227" -> "11232" 
+"11228" [label = <(RETURN,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);)<SUB>2032</SUB>> ]
+"11229" [label = <(NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;,NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length))<SUB>2032</SUB>> ]
+"11224" [label = <(METHOD,NewIntArray)<SUB>2031</SUB>> ]
+"11232" [label = <(METHOD_RETURN,jintArray)<SUB>2031</SUB>> ]
+  "11228" -> "11232" 
+  "11229" -> "11228" 
+  "11224" -> "11229" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/201-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/201-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/201-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/201-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,9 +1,9 @@
 digraph "NewLongArray" {  
-"11241" [label = <(RETURN,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);)<SUB>2038</SUB>> ]
-"11242" [label = <(NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;,NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length))<SUB>2038</SUB>> ]
-"11237" [label = <(METHOD,NewLongArray)<SUB>2037</SUB>> ]
-"11245" [label = <(METHOD_RETURN,jlongArray)<SUB>2037</SUB>> ]
-  "11241" -> "11245" 
-  "11242" -> "11241" 
-  "11237" -> "11242" 
+"11238" [label = <(RETURN,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);)<SUB>2036</SUB>> ]
+"11239" [label = <(NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;,NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length))<SUB>2036</SUB>> ]
+"11234" [label = <(METHOD,NewLongArray)<SUB>2035</SUB>> ]
+"11242" [label = <(METHOD_RETURN,jlongArray)<SUB>2035</SUB>> ]
+  "11238" -> "11242" 
+  "11239" -> "11238" 
+  "11234" -> "11239" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/202-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/202-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/202-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/202-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,333 +1,333 @@
 digraph "NewObjectArray" {  
-"11269" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2047</SUB>> ]
-"11288" [label = <(soa,soa(env))<SUB>2050</SUB>> ]
-"11290" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; array_class)<SUB>2051</SUB>> ]
-"11373" [label = <(&lt;operator&gt;.assignment,mirror::ObjectArray&lt;mirror::Object&gt;* result =\012        mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2068</SUB>> ]
-"11513" [label = <(RETURN,return soa.AddLocalReference&lt;jobjectArray&gt;(result);,return soa.AddLocalReference&lt;jobjectArray&gt;(result);)<SUB>2087</SUB>> ]
-"11254" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2043</SUB>> ]
-"11291" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2051</SUB>> ]
-"11298" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = soa.Decode&lt;mirror::Class&gt;(element_jclass).Ptr())<SUB>2053</SUB>> ]
-"11344" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>2060</SUB>> ]
-"11353" [label = <(&lt;operator&gt;.assignment,array_class = class_linker-&gt;FindArrayClass(soa.Self(), &amp;element_class))<SUB>2061</SUB>> ]
-"11374" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;* result)<SUB>2068</SUB>> ]
-"11384" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2069</SUB>> ]
-"11403" [label = <(&lt;operator&gt;.logicalAnd,result != nullptr &amp;&amp; initial_element != nullptr)<SUB>2070</SUB>> ]
-"11514" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>2087</SUB>> ]
-"11255" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2043</SUB>> ]
-"11259" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2044</SUB>> ]
-"11267" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2045</SUB>> ]
-"11293" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2051</SUB>> ]
-"11299" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2053</SUB>> ]
-"11306" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(element_jclass).Ptr())<SUB>2053</SUB>> ]
-"11319" [label = <(UNLIKELY,UNLIKELY(element_class-&gt;IsPrimitive()))<SUB>2054</SUB>> ]
-"11346" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2060</SUB>> ]
-"11355" [label = <(FindArrayClass,class_linker-&gt;FindArrayClass(soa.Self(), &amp;element_class))<SUB>2061</SUB>> ]
-"11366" [label = <(UNLIKELY,UNLIKELY(array_class == nullptr))<SUB>2062</SUB>> ]
-"11375" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2068</SUB>> ]
-"11382" [label = <(&lt;operator&gt;.indirection,* result)<SUB>2068</SUB>> ]
-"11385" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2069</SUB>> ]
-"11392" [label = <(::Alloc,::Alloc(soa.Self(), array_class, length))<SUB>2069</SUB>> ]
-"11404" [label = <(&lt;operator&gt;.notEquals,result != nullptr)<SUB>2070</SUB>> ]
-"11407" [label = <(&lt;operator&gt;.notEquals,initial_element != nullptr)<SUB>2070</SUB>> ]
-"11411" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; initial_object = soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2071</SUB>> ]
-"11515" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>2087</SUB>> ]
-"11260" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2044</SUB>> ]
-"11273" [label = <(UNLIKELY,UNLIKELY((element_jclass) == nullptr))<SUB>2047</SUB>> ]
-"11295" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2051</SUB>> ]
-"11300" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2053</SUB>> ]
-"11307" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2053</SUB>> ]
-"11314" [label = <(Ptr,(element_jclass).Ptr())<SUB>2053</SUB>> ]
-"11320" [label = <(IsPrimitive,element_class-&gt;IsPrimitive())<SUB>2054</SUB>> ]
-"11325" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;,\012 &quot;not an object type: %s&quot;,\012                            element_class-&gt;PrettyDescriptor().c_str()))<SUB>2055</SUB>> ]
-"11341" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2058</SUB>> ]
-"11347" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2060</SUB>> ]
-"11356" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindArrayClass)<SUB>2061</SUB>> ]
-"11359" [label = <(Self,soa.Self())<SUB>2061</SUB>> ]
-"11363" [label = <(&lt;operator&gt;.addressOf,&amp;element_class)<SUB>2061</SUB>> ]
-"11367" [label = <(&lt;operator&gt;.equals,array_class == nullptr)<SUB>2062</SUB>> ]
-"11371" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2063</SUB>> ]
-"11376" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2068</SUB>> ]
-"11379" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2068</SUB>> ]
-"11386" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2069</SUB>> ]
-"11389" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2069</SUB>> ]
-"11393" [label = <(&lt;operator&gt;.fieldAccess,::Alloc)<SUB>2069</SUB>> ]
-"11396" [label = <(Self,soa.Self())<SUB>2069</SUB>> ]
-"11412" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; initial_object)<SUB>2071</SUB>> ]
-"11419" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2071</SUB>> ]
-"11429" [label = <(&lt;operator&gt;.notEquals,initial_object != nullptr)<SUB>2072</SUB>> ]
-"11516" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2087</SUB>> ]
-"11261" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2044</SUB>> ]
-"11263" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2044</SUB>> ]
-"11274" [label = <(&lt;operator&gt;.equals,(element_jclass) == nullptr)<SUB>2047</SUB>> ]
-"11278" [label = <(CHECK_NON_NULL_ARGUMENT(element_jclass),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;element_jclass == null&quot;))<SUB>2047</SUB>> ]
-"11285" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(element_jclass),CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2047</SUB>> ]
-"11302" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2053</SUB>> ]
-"11308" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2053</SUB>> ]
-"11311" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2053</SUB>> ]
-"11315" [label = <(&lt;operator&gt;.fieldAccess,(element_jclass).Ptr)<SUB>2053</SUB>> ]
-"11321" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsPrimitive)<SUB>2054</SUB>> ]
-"11326" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2055</SUB>> ]
-"11334" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2057</SUB>> ]
-"11348" [label = <(Runtime::Current,Runtime::Current())<SUB>2060</SUB>> ]
-"11352" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2060</SUB>> ]
-"11358" [label = <(FIELD_IDENTIFIER,FindArrayClass,FindArrayClass)<SUB>2061</SUB>> ]
-"11360" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2061</SUB>> ]
-"11378" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2068</SUB>> ]
-"11381" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2068</SUB>> ]
-"11388" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2069</SUB>> ]
-"11391" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2069</SUB>> ]
-"11395" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2069</SUB>> ]
-"11397" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2069</SUB>> ]
-"11413" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2071</SUB>> ]
-"11420" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2071</SUB>> ]
-"11434" [label = <(&lt;operator&gt;.assignment,* element_class = result-&gt;GetClass()-&gt;GetComponentType())<SUB>2073</SUB>> ]
-"11518" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2087</SUB>> ]
-"11279" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2047</SUB>> ]
-"11304" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2053</SUB>> ]
-"11310" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2053</SUB>> ]
-"11313" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2053</SUB>> ]
-"11317" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2053</SUB>> ]
-"11323" [label = <(FIELD_IDENTIFIER,IsPrimitive,IsPrimitive)<SUB>2054</SUB>> ]
-"11327" [label = <(Vm,soa.Vm())<SUB>2055</SUB>> ]
-"11331" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2055</SUB>> ]
-"11335" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2057</SUB>> ]
-"11349" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2060</SUB>> ]
-"11362" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2061</SUB>> ]
-"11399" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2069</SUB>> ]
-"11415" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2071</SUB>> ]
-"11421" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2071</SUB>> ]
-"11424" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2071</SUB>> ]
-"11436" [label = <(GetComponentType,result-&gt;GetClass()-&gt;GetComponentType())<SUB>2073</SUB>> ]
-"11444" [label = <(UNLIKELY,UNLIKELY(!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass())))<SUB>2074</SUB>> ]
-"11280" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2047</SUB>> ]
-"11282" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2047</SUB>> ]
-"11328" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2055</SUB>> ]
-"11336" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2057</SUB>> ]
-"11340" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2057</SUB>> ]
-"11351" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2060</SUB>> ]
-"11417" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2071</SUB>> ]
-"11423" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2071</SUB>> ]
-"11426" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2071</SUB>> ]
-"11437" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass()-&gt;GetComponentType)<SUB>2073</SUB>> ]
-"11445" [label = <(&lt;operator&gt;.logicalNot,!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2074</SUB>> ]
-"11455" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;cannot assign object of type '%s' to array with &quot;\012 &quot;element type of '%s'&quot;,\012                              mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str(),\012                              element_class-&gt;PrettyDescriptor().c_str()))<SUB>2075</SUB>> ]
-"11484" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2079</SUB>> ]
-"11330" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2055</SUB>> ]
-"11337" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2057</SUB>> ]
-"11438" [label = <(GetClass,result-&gt;GetClass())<SUB>2073</SUB>> ]
-"11442" [label = <(FIELD_IDENTIFIER,GetComponentType,GetComponentType)<SUB>2073</SUB>> ]
-"11446" [label = <(IsAssignableFrom,element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2074</SUB>> ]
-"11456" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2075</SUB>> ]
-"11464" [label = <(c_str,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str())<SUB>2077</SUB>> ]
-"11477" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2078</SUB>> ]
-"11339" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2057</SUB>> ]
-"11439" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass)<SUB>2073</SUB>> ]
-"11447" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsAssignableFrom)<SUB>2074</SUB>> ]
-"11450" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2074</SUB>> ]
-"11457" [label = <(Vm,soa.Vm())<SUB>2075</SUB>> ]
-"11461" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2075</SUB>> ]
-"11465" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str)<SUB>2077</SUB>> ]
-"11478" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2078</SUB>> ]
-"11494" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2081</SUB>> ]
-"11497" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2081</SUB>> ]
-"11441" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2073</SUB>> ]
-"11449" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2074</SUB>> ]
-"11451" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2074</SUB>> ]
-"11458" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2075</SUB>> ]
-"11466" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()))<SUB>2077</SUB>> ]
-"11476" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2077</SUB>> ]
-"11479" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2078</SUB>> ]
-"11483" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2078</SUB>> ]
-"11491" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2081</SUB>> ]
-"11500" [label = <(&lt;operator&gt;.greaterThan,result-&gt;SetWithoutChecks&lt;false&gt;(i, initial_object.Ptr()))<SUB>2082</SUB>> ]
-"11453" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2074</SUB>> ]
-"11460" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2075</SUB>> ]
-"11467" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2077</SUB>> ]
-"11472" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2077</SUB>> ]
-"11480" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2078</SUB>> ]
-"11501" [label = <(&lt;operator&gt;.lessThan,result-&gt;SetWithoutChecks&lt;false)<SUB>2082</SUB>> ]
-"11506" [label = <(&lt;operator&gt;.bracketedPrimary,(i, initial_object.Ptr()))<SUB>2082</SUB>> ]
-"11468" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2077</SUB>> ]
-"11471" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2077</SUB>> ]
-"11473" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2077</SUB>> ]
-"11482" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2078</SUB>> ]
-"11502" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;SetWithoutChecks)<SUB>2082</SUB>> ]
-"11507" [label = <(&lt;operator&gt;.expressionList,i, initial_object.Ptr())<SUB>2082</SUB>> ]
-"11475" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2077</SUB>> ]
-"11504" [label = <(FIELD_IDENTIFIER,SetWithoutChecks,SetWithoutChecks)<SUB>2082</SUB>> ]
-"11509" [label = <(Ptr,initial_object.Ptr())<SUB>2082</SUB>> ]
-"11510" [label = <(&lt;operator&gt;.fieldAccess,initial_object.Ptr)<SUB>2082</SUB>> ]
-"11512" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2082</SUB>> ]
-"11247" [label = <(METHOD,NewObjectArray)<SUB>2041</SUB>> ]
-"11521" [label = <(METHOD_RETURN,jobjectArray)<SUB>2041</SUB>> ]
-  "11269" -> "11274" 
-  "11269" -> "11288" 
-  "11288" -> "11295" 
-  "11290" -> "11304" 
-  "11373" -> "11404" 
-  "11513" -> "11521" 
-  "11254" -> "11261" 
-  "11254" -> "11269" 
-  "11291" -> "11290" 
-  "11298" -> "11323" 
-  "11344" -> "11358" 
-  "11353" -> "11367" 
-  "11374" -> "11388" 
-  "11384" -> "11373" 
-  "11403" -> "11417" 
-  "11403" -> "11518" 
-  "11514" -> "11513" 
-  "11255" -> "11254" 
-  "11259" -> "11267" 
-  "11267" -> "11521" 
-  "11293" -> "11291" 
-  "11299" -> "11310" 
-  "11306" -> "11298" 
-  "11319" -> "11330" 
-  "11319" -> "11351" 
-  "11346" -> "11344" 
+"11266" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2045</SUB>> ]
+"11285" [label = <(soa,soa(env))<SUB>2048</SUB>> ]
+"11287" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; array_class)<SUB>2049</SUB>> ]
+"11370" [label = <(&lt;operator&gt;.assignment,mirror::ObjectArray&lt;mirror::Object&gt;* result =\012        mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2066</SUB>> ]
+"11510" [label = <(RETURN,return soa.AddLocalReference&lt;jobjectArray&gt;(result);,return soa.AddLocalReference&lt;jobjectArray&gt;(result);)<SUB>2085</SUB>> ]
+"11251" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2041</SUB>> ]
+"11288" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2049</SUB>> ]
+"11295" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = soa.Decode&lt;mirror::Class&gt;(element_jclass).Ptr())<SUB>2051</SUB>> ]
+"11341" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>2058</SUB>> ]
+"11350" [label = <(&lt;operator&gt;.assignment,array_class = class_linker-&gt;FindArrayClass(soa.Self(), &amp;element_class))<SUB>2059</SUB>> ]
+"11371" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;* result)<SUB>2066</SUB>> ]
+"11381" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2067</SUB>> ]
+"11400" [label = <(&lt;operator&gt;.logicalAnd,result != nullptr &amp;&amp; initial_element != nullptr)<SUB>2068</SUB>> ]
+"11511" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>2085</SUB>> ]
+"11252" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2041</SUB>> ]
+"11256" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2042</SUB>> ]
+"11264" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2043</SUB>> ]
+"11290" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2049</SUB>> ]
+"11296" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2051</SUB>> ]
+"11303" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(element_jclass).Ptr())<SUB>2051</SUB>> ]
+"11316" [label = <(UNLIKELY,UNLIKELY(element_class-&gt;IsPrimitive()))<SUB>2052</SUB>> ]
+"11343" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2058</SUB>> ]
+"11352" [label = <(FindArrayClass,class_linker-&gt;FindArrayClass(soa.Self(), &amp;element_class))<SUB>2059</SUB>> ]
+"11363" [label = <(UNLIKELY,UNLIKELY(array_class == nullptr))<SUB>2060</SUB>> ]
+"11372" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2066</SUB>> ]
+"11379" [label = <(&lt;operator&gt;.indirection,* result)<SUB>2066</SUB>> ]
+"11382" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2067</SUB>> ]
+"11389" [label = <(::Alloc,::Alloc(soa.Self(), array_class, length))<SUB>2067</SUB>> ]
+"11401" [label = <(&lt;operator&gt;.notEquals,result != nullptr)<SUB>2068</SUB>> ]
+"11404" [label = <(&lt;operator&gt;.notEquals,initial_element != nullptr)<SUB>2068</SUB>> ]
+"11408" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; initial_object = soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2069</SUB>> ]
+"11512" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>2085</SUB>> ]
+"11257" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2042</SUB>> ]
+"11270" [label = <(UNLIKELY,UNLIKELY((element_jclass) == nullptr))<SUB>2045</SUB>> ]
+"11292" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2049</SUB>> ]
+"11297" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2051</SUB>> ]
+"11304" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2051</SUB>> ]
+"11311" [label = <(Ptr,(element_jclass).Ptr())<SUB>2051</SUB>> ]
+"11317" [label = <(IsPrimitive,element_class-&gt;IsPrimitive())<SUB>2052</SUB>> ]
+"11322" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;,\012 &quot;not an object type: %s&quot;,\012                            element_class-&gt;PrettyDescriptor().c_str()))<SUB>2053</SUB>> ]
+"11338" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2056</SUB>> ]
+"11344" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2058</SUB>> ]
+"11353" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindArrayClass)<SUB>2059</SUB>> ]
+"11356" [label = <(Self,soa.Self())<SUB>2059</SUB>> ]
+"11360" [label = <(&lt;operator&gt;.addressOf,&amp;element_class)<SUB>2059</SUB>> ]
+"11364" [label = <(&lt;operator&gt;.equals,array_class == nullptr)<SUB>2060</SUB>> ]
+"11368" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2061</SUB>> ]
+"11373" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2066</SUB>> ]
+"11376" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2066</SUB>> ]
+"11383" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2067</SUB>> ]
+"11386" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2067</SUB>> ]
+"11390" [label = <(&lt;operator&gt;.fieldAccess,::Alloc)<SUB>2067</SUB>> ]
+"11393" [label = <(Self,soa.Self())<SUB>2067</SUB>> ]
+"11409" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; initial_object)<SUB>2069</SUB>> ]
+"11416" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2069</SUB>> ]
+"11426" [label = <(&lt;operator&gt;.notEquals,initial_object != nullptr)<SUB>2070</SUB>> ]
+"11513" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2085</SUB>> ]
+"11258" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2042</SUB>> ]
+"11260" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2042</SUB>> ]
+"11271" [label = <(&lt;operator&gt;.equals,(element_jclass) == nullptr)<SUB>2045</SUB>> ]
+"11275" [label = <(CHECK_NON_NULL_ARGUMENT(element_jclass),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;element_jclass == null&quot;))<SUB>2045</SUB>> ]
+"11282" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(element_jclass),CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2045</SUB>> ]
+"11299" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2051</SUB>> ]
+"11305" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2051</SUB>> ]
+"11308" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2051</SUB>> ]
+"11312" [label = <(&lt;operator&gt;.fieldAccess,(element_jclass).Ptr)<SUB>2051</SUB>> ]
+"11318" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsPrimitive)<SUB>2052</SUB>> ]
+"11323" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2053</SUB>> ]
+"11331" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2055</SUB>> ]
+"11345" [label = <(Runtime::Current,Runtime::Current())<SUB>2058</SUB>> ]
+"11349" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2058</SUB>> ]
+"11355" [label = <(FIELD_IDENTIFIER,FindArrayClass,FindArrayClass)<SUB>2059</SUB>> ]
+"11357" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2059</SUB>> ]
+"11375" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2066</SUB>> ]
+"11378" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2066</SUB>> ]
+"11385" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2067</SUB>> ]
+"11388" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2067</SUB>> ]
+"11392" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2067</SUB>> ]
+"11394" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2067</SUB>> ]
+"11410" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2069</SUB>> ]
+"11417" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2069</SUB>> ]
+"11431" [label = <(&lt;operator&gt;.assignment,* element_class = result-&gt;GetClass()-&gt;GetComponentType())<SUB>2071</SUB>> ]
+"11515" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2085</SUB>> ]
+"11276" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2045</SUB>> ]
+"11301" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2051</SUB>> ]
+"11307" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2051</SUB>> ]
+"11310" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2051</SUB>> ]
+"11314" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2051</SUB>> ]
+"11320" [label = <(FIELD_IDENTIFIER,IsPrimitive,IsPrimitive)<SUB>2052</SUB>> ]
+"11324" [label = <(Vm,soa.Vm())<SUB>2053</SUB>> ]
+"11328" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2053</SUB>> ]
+"11332" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2055</SUB>> ]
+"11346" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2058</SUB>> ]
+"11359" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2059</SUB>> ]
+"11396" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2067</SUB>> ]
+"11412" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2069</SUB>> ]
+"11418" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2069</SUB>> ]
+"11421" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2069</SUB>> ]
+"11433" [label = <(GetComponentType,result-&gt;GetClass()-&gt;GetComponentType())<SUB>2071</SUB>> ]
+"11441" [label = <(UNLIKELY,UNLIKELY(!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass())))<SUB>2072</SUB>> ]
+"11277" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2045</SUB>> ]
+"11279" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2045</SUB>> ]
+"11325" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2053</SUB>> ]
+"11333" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2055</SUB>> ]
+"11337" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2055</SUB>> ]
+"11348" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2058</SUB>> ]
+"11414" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2069</SUB>> ]
+"11420" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2069</SUB>> ]
+"11423" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2069</SUB>> ]
+"11434" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass()-&gt;GetComponentType)<SUB>2071</SUB>> ]
+"11442" [label = <(&lt;operator&gt;.logicalNot,!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2072</SUB>> ]
+"11452" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;cannot assign object of type '%s' to array with &quot;\012 &quot;element type of '%s'&quot;,\012                              mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str(),\012                              element_class-&gt;PrettyDescriptor().c_str()))<SUB>2073</SUB>> ]
+"11481" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2077</SUB>> ]
+"11327" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2053</SUB>> ]
+"11334" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2055</SUB>> ]
+"11435" [label = <(GetClass,result-&gt;GetClass())<SUB>2071</SUB>> ]
+"11439" [label = <(FIELD_IDENTIFIER,GetComponentType,GetComponentType)<SUB>2071</SUB>> ]
+"11443" [label = <(IsAssignableFrom,element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2072</SUB>> ]
+"11453" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2073</SUB>> ]
+"11461" [label = <(c_str,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str())<SUB>2075</SUB>> ]
+"11474" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2076</SUB>> ]
+"11336" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2055</SUB>> ]
+"11436" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass)<SUB>2071</SUB>> ]
+"11444" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsAssignableFrom)<SUB>2072</SUB>> ]
+"11447" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2072</SUB>> ]
+"11454" [label = <(Vm,soa.Vm())<SUB>2073</SUB>> ]
+"11458" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2073</SUB>> ]
+"11462" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str)<SUB>2075</SUB>> ]
+"11475" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2076</SUB>> ]
+"11491" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2079</SUB>> ]
+"11494" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2079</SUB>> ]
+"11438" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2071</SUB>> ]
+"11446" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2072</SUB>> ]
+"11448" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2072</SUB>> ]
+"11455" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2073</SUB>> ]
+"11463" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()))<SUB>2075</SUB>> ]
+"11473" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2075</SUB>> ]
+"11476" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2076</SUB>> ]
+"11480" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2076</SUB>> ]
+"11488" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2079</SUB>> ]
+"11497" [label = <(&lt;operator&gt;.greaterThan,result-&gt;SetWithoutChecks&lt;false&gt;(i, initial_object.Ptr()))<SUB>2080</SUB>> ]
+"11450" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2072</SUB>> ]
+"11457" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2073</SUB>> ]
+"11464" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2075</SUB>> ]
+"11469" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2075</SUB>> ]
+"11477" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2076</SUB>> ]
+"11498" [label = <(&lt;operator&gt;.lessThan,result-&gt;SetWithoutChecks&lt;false)<SUB>2080</SUB>> ]
+"11503" [label = <(&lt;operator&gt;.bracketedPrimary,(i, initial_object.Ptr()))<SUB>2080</SUB>> ]
+"11465" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2075</SUB>> ]
+"11468" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2075</SUB>> ]
+"11470" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2075</SUB>> ]
+"11479" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2076</SUB>> ]
+"11499" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;SetWithoutChecks)<SUB>2080</SUB>> ]
+"11504" [label = <(&lt;operator&gt;.expressionList,i, initial_object.Ptr())<SUB>2080</SUB>> ]
+"11472" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2075</SUB>> ]
+"11501" [label = <(FIELD_IDENTIFIER,SetWithoutChecks,SetWithoutChecks)<SUB>2080</SUB>> ]
+"11506" [label = <(Ptr,initial_object.Ptr())<SUB>2080</SUB>> ]
+"11507" [label = <(&lt;operator&gt;.fieldAccess,initial_object.Ptr)<SUB>2080</SUB>> ]
+"11509" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2080</SUB>> ]
+"11244" [label = <(METHOD,NewObjectArray)<SUB>2039</SUB>> ]
+"11518" [label = <(METHOD_RETURN,jobjectArray)<SUB>2039</SUB>> ]
+  "11266" -> "11271" 
+  "11266" -> "11285" 
+  "11285" -> "11292" 
+  "11287" -> "11301" 
+  "11370" -> "11401" 
+  "11510" -> "11518" 
+  "11251" -> "11258" 
+  "11251" -> "11266" 
+  "11288" -> "11287" 
+  "11295" -> "11320" 
+  "11341" -> "11355" 
+  "11350" -> "11364" 
+  "11371" -> "11385" 
+  "11381" -> "11370" 
+  "11400" -> "11414" 
+  "11400" -> "11515" 
+  "11511" -> "11510" 
+  "11252" -> "11251" 
+  "11256" -> "11264" 
+  "11264" -> "11518" 
+  "11290" -> "11288" 
+  "11296" -> "11307" 
+  "11303" -> "11295" 
+  "11316" -> "11327" 
+  "11316" -> "11348" 
+  "11343" -> "11341" 
+  "11352" -> "11350" 
+  "11363" -> "11368" 
+  "11363" -> "11375" 
+  "11372" -> "11379" 
+  "11379" -> "11371" 
+  "11382" -> "11392" 
+  "11389" -> "11381" 
+  "11401" -> "11400" 
+  "11401" -> "11404" 
+  "11404" -> "11400" 
+  "11408" -> "11426" 
+  "11512" -> "11511" 
+  "11257" -> "11256" 
+  "11270" -> "11277" 
+  "11270" -> "11285" 
+  "11292" -> "11290" 
+  "11297" -> "11296" 
+  "11304" -> "11314" 
+  "11311" -> "11303" 
+  "11317" -> "11316" 
+  "11322" -> "11338" 
+  "11338" -> "11518" 
+  "11344" -> "11343" 
+  "11353" -> "11359" 
+  "11356" -> "11360" 
+  "11360" -> "11352" 
+  "11364" -> "11363" 
+  "11368" -> "11518" 
+  "11373" -> "11378" 
+  "11376" -> "11372" 
+  "11383" -> "11388" 
+  "11386" -> "11382" 
+  "11390" -> "11396" 
+  "11393" -> "11389" 
+  "11409" -> "11420" 
+  "11416" -> "11408" 
+  "11426" -> "11438" 
+  "11426" -> "11515" 
+  "11513" -> "11512" 
+  "11258" -> "11260" 
+  "11260" -> "11257" 
+  "11271" -> "11270" 
+  "11275" -> "11282" 
+  "11282" -> "11518" 
+  "11299" -> "11297" 
+  "11305" -> "11310" 
+  "11308" -> "11304" 
+  "11312" -> "11311" 
+  "11318" -> "11317" 
+  "11323" -> "11336" 
+  "11331" -> "11322" 
+  "11345" -> "11349" 
+  "11349" -> "11344" 
   "11355" -> "11353" 
-  "11366" -> "11371" 
-  "11366" -> "11378" 
-  "11375" -> "11382" 
-  "11382" -> "11374" 
-  "11385" -> "11395" 
-  "11392" -> "11384" 
-  "11404" -> "11403" 
-  "11404" -> "11407" 
-  "11407" -> "11403" 
-  "11411" -> "11429" 
-  "11515" -> "11514" 
-  "11260" -> "11259" 
-  "11273" -> "11280" 
-  "11273" -> "11288" 
-  "11295" -> "11293" 
-  "11300" -> "11299" 
-  "11307" -> "11317" 
-  "11314" -> "11306" 
-  "11320" -> "11319" 
-  "11325" -> "11341" 
-  "11341" -> "11521" 
-  "11347" -> "11346" 
-  "11356" -> "11362" 
-  "11359" -> "11363" 
-  "11363" -> "11355" 
-  "11367" -> "11366" 
-  "11371" -> "11521" 
-  "11376" -> "11381" 
-  "11379" -> "11375" 
-  "11386" -> "11391" 
-  "11389" -> "11385" 
-  "11393" -> "11399" 
-  "11396" -> "11392" 
-  "11412" -> "11423" 
-  "11419" -> "11411" 
-  "11429" -> "11441" 
-  "11429" -> "11518" 
-  "11516" -> "11515" 
-  "11261" -> "11263" 
-  "11263" -> "11260" 
-  "11274" -> "11273" 
-  "11278" -> "11285" 
-  "11285" -> "11521" 
-  "11302" -> "11300" 
-  "11308" -> "11313" 
-  "11311" -> "11307" 
-  "11315" -> "11314" 
-  "11321" -> "11320" 
-  "11326" -> "11339" 
-  "11334" -> "11325" 
-  "11348" -> "11352" 
-  "11352" -> "11347" 
-  "11358" -> "11356" 
-  "11360" -> "11359" 
+  "11357" -> "11356" 
+  "11375" -> "11373" 
   "11378" -> "11376" 
-  "11381" -> "11379" 
+  "11385" -> "11383" 
   "11388" -> "11386" 
-  "11391" -> "11389" 
-  "11395" -> "11393" 
-  "11397" -> "11396" 
-  "11413" -> "11412" 
-  "11420" -> "11419" 
-  "11434" -> "11449" 
-  "11518" -> "11516" 
-  "11279" -> "11278" 
-  "11304" -> "11302" 
+  "11392" -> "11390" 
+  "11394" -> "11393" 
+  "11410" -> "11409" 
+  "11417" -> "11416" 
+  "11431" -> "11446" 
+  "11515" -> "11513" 
+  "11276" -> "11275" 
+  "11301" -> "11299" 
+  "11307" -> "11305" 
   "11310" -> "11308" 
-  "11313" -> "11311" 
-  "11317" -> "11315" 
-  "11323" -> "11321" 
-  "11327" -> "11331" 
-  "11331" -> "11326" 
-  "11335" -> "11334" 
-  "11349" -> "11348" 
-  "11362" -> "11360" 
-  "11399" -> "11397" 
-  "11415" -> "11413" 
-  "11421" -> "11426" 
-  "11424" -> "11420" 
-  "11436" -> "11434" 
-  "11444" -> "11460" 
-  "11444" -> "11491" 
-  "11280" -> "11282" 
-  "11282" -> "11279" 
-  "11328" -> "11327" 
-  "11336" -> "11340" 
-  "11340" -> "11335" 
-  "11351" -> "11349" 
-  "11417" -> "11415" 
+  "11314" -> "11312" 
+  "11320" -> "11318" 
+  "11324" -> "11328" 
+  "11328" -> "11323" 
+  "11332" -> "11331" 
+  "11346" -> "11345" 
+  "11359" -> "11357" 
+  "11396" -> "11394" 
+  "11412" -> "11410" 
+  "11418" -> "11423" 
+  "11421" -> "11417" 
+  "11433" -> "11431" 
+  "11441" -> "11457" 
+  "11441" -> "11488" 
+  "11277" -> "11279" 
+  "11279" -> "11276" 
+  "11325" -> "11324" 
+  "11333" -> "11337" 
+  "11337" -> "11332" 
+  "11348" -> "11346" 
+  "11414" -> "11412" 
+  "11420" -> "11418" 
   "11423" -> "11421" 
-  "11426" -> "11424" 
-  "11437" -> "11436" 
-  "11445" -> "11444" 
-  "11455" -> "11484" 
-  "11484" -> "11521" 
-  "11330" -> "11328" 
-  "11337" -> "11336" 
-  "11438" -> "11442" 
-  "11442" -> "11437" 
-  "11446" -> "11445" 
-  "11456" -> "11468" 
-  "11464" -> "11482" 
-  "11477" -> "11455" 
-  "11339" -> "11337" 
-  "11439" -> "11438" 
-  "11447" -> "11453" 
-  "11450" -> "11446" 
-  "11457" -> "11461" 
-  "11461" -> "11456" 
-  "11465" -> "11464" 
-  "11478" -> "11477" 
-  "11494" -> "11504" 
-  "11494" -> "11518" 
+  "11434" -> "11433" 
+  "11442" -> "11441" 
+  "11452" -> "11481" 
+  "11481" -> "11518" 
+  "11327" -> "11325" 
+  "11334" -> "11333" 
+  "11435" -> "11439" 
+  "11439" -> "11434" 
+  "11443" -> "11442" 
+  "11453" -> "11465" 
+  "11461" -> "11479" 
+  "11474" -> "11452" 
+  "11336" -> "11334" 
+  "11436" -> "11435" 
+  "11444" -> "11450" 
+  "11447" -> "11443" 
+  "11454" -> "11458" 
+  "11458" -> "11453" 
+  "11462" -> "11461" 
+  "11475" -> "11474" 
+  "11491" -> "11501" 
+  "11491" -> "11515" 
+  "11494" -> "11491" 
+  "11438" -> "11436" 
+  "11446" -> "11444" 
+  "11448" -> "11447" 
+  "11455" -> "11454" 
+  "11463" -> "11473" 
+  "11473" -> "11462" 
+  "11476" -> "11480" 
+  "11480" -> "11475" 
+  "11488" -> "11491" 
   "11497" -> "11494" 
-  "11441" -> "11439" 
-  "11449" -> "11447" 
-  "11451" -> "11450" 
-  "11458" -> "11457" 
-  "11466" -> "11476" 
-  "11476" -> "11465" 
-  "11479" -> "11483" 
-  "11483" -> "11478" 
-  "11491" -> "11494" 
-  "11500" -> "11497" 
-  "11453" -> "11451" 
-  "11460" -> "11458" 
-  "11467" -> "11475" 
-  "11472" -> "11466" 
-  "11480" -> "11479" 
-  "11501" -> "11512" 
-  "11506" -> "11500" 
-  "11468" -> "11471" 
-  "11471" -> "11467" 
-  "11473" -> "11472" 
-  "11482" -> "11480" 
-  "11502" -> "11501" 
+  "11450" -> "11448" 
+  "11457" -> "11455" 
+  "11464" -> "11472" 
+  "11469" -> "11463" 
+  "11477" -> "11476" 
+  "11498" -> "11509" 
+  "11503" -> "11497" 
+  "11465" -> "11468" 
+  "11468" -> "11464" 
+  "11470" -> "11469" 
+  "11479" -> "11477" 
+  "11499" -> "11498" 
+  "11504" -> "11503" 
+  "11472" -> "11470" 
+  "11501" -> "11499" 
+  "11506" -> "11504" 
   "11507" -> "11506" 
-  "11475" -> "11473" 
-  "11504" -> "11502" 
   "11509" -> "11507" 
-  "11510" -> "11509" 
-  "11512" -> "11510" 
-  "11247" -> "11255" 
+  "11244" -> "11252" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/203-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/203-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/203-cfg.dot	2023-06-07 19:34:22.177390821 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/203-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,9 +1,9 @@
 digraph "NewShortArray" {  
-"11527" [label = <(RETURN,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);)<SUB>2091</SUB>> ]
-"11528" [label = <(NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;,NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length))<SUB>2091</SUB>> ]
-"11523" [label = <(METHOD,NewShortArray)<SUB>2090</SUB>> ]
-"11531" [label = <(METHOD_RETURN,jshortArray)<SUB>2090</SUB>> ]
-  "11527" -> "11531" 
-  "11528" -> "11527" 
-  "11523" -> "11528" 
+"11524" [label = <(RETURN,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);)<SUB>2089</SUB>> ]
+"11525" [label = <(NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;,NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length))<SUB>2089</SUB>> ]
+"11520" [label = <(METHOD,NewShortArray)<SUB>2088</SUB>> ]
+"11528" [label = <(METHOD_RETURN,jshortArray)<SUB>2088</SUB>> ]
+  "11524" -> "11528" 
+  "11525" -> "11524" 
+  "11520" -> "11525" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/204-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/204-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/204-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/204-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,185 +1,185 @@
 digraph "GetPrimitiveArrayCritical" {  
-"11538" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2095</SUB>> ]
-"11557" [label = <(soa,soa(env))<SUB>2096</SUB>> ]
-"11559" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2097</SUB>> ]
-"11609" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2103</SUB>> ]
-"11667" [label = <(RETURN,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);)<SUB>2118</SUB>> ]
-"11560" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2097</SUB>> ]
-"11567" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2097</SUB>> ]
-"11577" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2098</SUB>> ]
-"11611" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2103</SUB>> ]
-"11619" [label = <(IsMovableObject,heap-&gt;IsMovableObject(array))<SUB>2104</SUB>> ]
-"11659" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2115</SUB>> ]
-"11668" [label = <(GetRawData,array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0))<SUB>2118</SUB>> ]
-"11561" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2097</SUB>> ]
-"11568" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2097</SUB>> ]
-"11578" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2098</SUB>> ]
-"11587" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetPrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2099</SUB>> ]
-"11606" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2101</SUB>> ]
-"11612" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2103</SUB>> ]
-"11620" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2104</SUB>> ]
-"11647" [label = <(&lt;operator&gt;.assignment,array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2113</SUB>> ]
-"11663" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2116</SUB>> ]
-"11669" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetRawData)<SUB>2118</SUB>> ]
-"11672" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2118</SUB>> ]
-"11542" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2095</SUB>> ]
-"11563" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2097</SUB>> ]
-"11569" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2097</SUB>> ]
-"11572" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2097</SUB>> ]
-"11579" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2098</SUB>> ]
-"11588" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2099</SUB>> ]
-"11596" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2100</SUB>> ]
-"11613" [label = <(Runtime::Current,Runtime::Current())<SUB>2103</SUB>> ]
-"11617" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2103</SUB>> ]
-"11622" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2104</SUB>> ]
-"11626" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2105</SUB>> ]
-"11649" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2113</SUB>> ]
-"11664" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2116</SUB>> ]
-"11671" [label = <(FIELD_IDENTIFIER,GetRawData,GetRawData)<SUB>2118</SUB>> ]
-"11673" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2118</SUB>> ]
-"11543" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2095</SUB>> ]
-"11547" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2095</SUB>> ]
-"11554" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2095</SUB>> ]
-"11565" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2097</SUB>> ]
-"11571" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2097</SUB>> ]
-"11574" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2097</SUB>> ]
-"11580" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2098</SUB>> ]
-"11589" [label = <(Vm,soa.Vm())<SUB>2099</SUB>> ]
-"11593" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2099</SUB>> ]
-"11597" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2100</SUB>> ]
-"11614" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2103</SUB>> ]
-"11629" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2106</SUB>> ]
-"11650" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2113</SUB>> ]
-"11674" [label = <(GetClass,array-&gt;GetClass())<SUB>2118</SUB>> ]
-"11678" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2118</SUB>> ]
-"11548" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2095</SUB>> ]
-"11581" [label = <(GetClass,array-&gt;GetClass())<SUB>2098</SUB>> ]
-"11585" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2098</SUB>> ]
-"11590" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2099</SUB>> ]
-"11598" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2100</SUB>> ]
-"11605" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2100</SUB>> ]
-"11616" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2103</SUB>> ]
-"11630" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2106</SUB>> ]
-"11633" [label = <(Self,soa.Self())<SUB>2106</SUB>> ]
-"11639" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2110</SUB>> ]
-"11651" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2113</SUB>> ]
-"11654" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2113</SUB>> ]
-"11675" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2118</SUB>> ]
-"11549" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2095</SUB>> ]
-"11551" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2095</SUB>> ]
-"11582" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2098</SUB>> ]
-"11592" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2099</SUB>> ]
-"11599" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2100</SUB>> ]
-"11632" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2106</SUB>> ]
-"11634" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2106</SUB>> ]
-"11640" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2110</SUB>> ]
-"11643" [label = <(Self,soa.Self())<SUB>2110</SUB>> ]
-"11653" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2113</SUB>> ]
-"11656" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2113</SUB>> ]
-"11677" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2118</SUB>> ]
-"11584" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2098</SUB>> ]
-"11600" [label = <(GetClass,array-&gt;GetClass())<SUB>2100</SUB>> ]
-"11604" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2100</SUB>> ]
-"11636" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2106</SUB>> ]
-"11642" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2110</SUB>> ]
-"11644" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2110</SUB>> ]
-"11601" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2100</SUB>> ]
-"11646" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2110</SUB>> ]
-"11603" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2100</SUB>> ]
-"11533" [label = <(METHOD,GetPrimitiveArrayCritical)<SUB>2094</SUB>> ]
-"11680" [label = <(METHOD_RETURN,void*)<SUB>2094</SUB>> ]
-  "11538" -> "11543" 
-  "11538" -> "11557" 
-  "11557" -> "11565" 
-  "11559" -> "11584" 
-  "11609" -> "11622" 
-  "11667" -> "11680" 
-  "11560" -> "11571" 
-  "11567" -> "11559" 
-  "11577" -> "11592" 
-  "11577" -> "11616" 
-  "11611" -> "11609" 
-  "11619" -> "11626" 
-  "11619" -> "11659" 
-  "11659" -> "11664" 
-  "11659" -> "11671" 
-  "11668" -> "11667" 
-  "11561" -> "11560" 
-  "11568" -> "11567" 
-  "11578" -> "11577" 
-  "11587" -> "11606" 
-  "11606" -> "11680" 
-  "11612" -> "11611" 
-  "11620" -> "11619" 
-  "11647" -> "11659" 
-  "11663" -> "11671" 
-  "11669" -> "11677" 
-  "11672" -> "11668" 
-  "11542" -> "11549" 
-  "11542" -> "11557" 
-  "11563" -> "11561" 
-  "11569" -> "11574" 
-  "11572" -> "11568" 
-  "11579" -> "11578" 
-  "11588" -> "11603" 
-  "11596" -> "11587" 
-  "11613" -> "11617" 
-  "11617" -> "11612" 
-  "11622" -> "11620" 
-  "11626" -> "11632" 
-  "11626" -> "11642" 
-  "11649" -> "11647" 
-  "11664" -> "11663" 
-  "11671" -> "11669" 
-  "11673" -> "11672" 
-  "11543" -> "11542" 
-  "11547" -> "11554" 
-  "11554" -> "11680" 
-  "11565" -> "11563" 
+"11535" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2093</SUB>> ]
+"11554" [label = <(soa,soa(env))<SUB>2094</SUB>> ]
+"11556" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2095</SUB>> ]
+"11606" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2101</SUB>> ]
+"11664" [label = <(RETURN,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);)<SUB>2116</SUB>> ]
+"11557" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2095</SUB>> ]
+"11564" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2095</SUB>> ]
+"11574" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2096</SUB>> ]
+"11608" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2101</SUB>> ]
+"11616" [label = <(IsMovableObject,heap-&gt;IsMovableObject(array))<SUB>2102</SUB>> ]
+"11656" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2113</SUB>> ]
+"11665" [label = <(GetRawData,array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0))<SUB>2116</SUB>> ]
+"11558" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2095</SUB>> ]
+"11565" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2095</SUB>> ]
+"11575" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2096</SUB>> ]
+"11584" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetPrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2097</SUB>> ]
+"11603" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2099</SUB>> ]
+"11609" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2101</SUB>> ]
+"11617" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2102</SUB>> ]
+"11644" [label = <(&lt;operator&gt;.assignment,array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2111</SUB>> ]
+"11660" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2114</SUB>> ]
+"11666" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetRawData)<SUB>2116</SUB>> ]
+"11669" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2116</SUB>> ]
+"11539" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2093</SUB>> ]
+"11560" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2095</SUB>> ]
+"11566" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2095</SUB>> ]
+"11569" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2095</SUB>> ]
+"11576" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2096</SUB>> ]
+"11585" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2097</SUB>> ]
+"11593" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2098</SUB>> ]
+"11610" [label = <(Runtime::Current,Runtime::Current())<SUB>2101</SUB>> ]
+"11614" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2101</SUB>> ]
+"11619" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2102</SUB>> ]
+"11623" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2103</SUB>> ]
+"11646" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2111</SUB>> ]
+"11661" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2114</SUB>> ]
+"11668" [label = <(FIELD_IDENTIFIER,GetRawData,GetRawData)<SUB>2116</SUB>> ]
+"11670" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2116</SUB>> ]
+"11540" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2093</SUB>> ]
+"11544" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2093</SUB>> ]
+"11551" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2093</SUB>> ]
+"11562" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2095</SUB>> ]
+"11568" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2095</SUB>> ]
+"11571" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2095</SUB>> ]
+"11577" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2096</SUB>> ]
+"11586" [label = <(Vm,soa.Vm())<SUB>2097</SUB>> ]
+"11590" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2097</SUB>> ]
+"11594" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2098</SUB>> ]
+"11611" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2101</SUB>> ]
+"11626" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2104</SUB>> ]
+"11647" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2111</SUB>> ]
+"11671" [label = <(GetClass,array-&gt;GetClass())<SUB>2116</SUB>> ]
+"11675" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2116</SUB>> ]
+"11545" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2093</SUB>> ]
+"11578" [label = <(GetClass,array-&gt;GetClass())<SUB>2096</SUB>> ]
+"11582" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2096</SUB>> ]
+"11587" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2097</SUB>> ]
+"11595" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2098</SUB>> ]
+"11602" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2098</SUB>> ]
+"11613" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2101</SUB>> ]
+"11627" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2104</SUB>> ]
+"11630" [label = <(Self,soa.Self())<SUB>2104</SUB>> ]
+"11636" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2108</SUB>> ]
+"11648" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2111</SUB>> ]
+"11651" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2111</SUB>> ]
+"11672" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2116</SUB>> ]
+"11546" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2093</SUB>> ]
+"11548" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2093</SUB>> ]
+"11579" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2096</SUB>> ]
+"11589" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2097</SUB>> ]
+"11596" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2098</SUB>> ]
+"11629" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2104</SUB>> ]
+"11631" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2104</SUB>> ]
+"11637" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2108</SUB>> ]
+"11640" [label = <(Self,soa.Self())<SUB>2108</SUB>> ]
+"11650" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2111</SUB>> ]
+"11653" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2111</SUB>> ]
+"11674" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2116</SUB>> ]
+"11581" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2096</SUB>> ]
+"11597" [label = <(GetClass,array-&gt;GetClass())<SUB>2098</SUB>> ]
+"11601" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2098</SUB>> ]
+"11633" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2104</SUB>> ]
+"11639" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2108</SUB>> ]
+"11641" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2108</SUB>> ]
+"11598" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2098</SUB>> ]
+"11643" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2108</SUB>> ]
+"11600" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2098</SUB>> ]
+"11530" [label = <(METHOD,GetPrimitiveArrayCritical)<SUB>2092</SUB>> ]
+"11677" [label = <(METHOD_RETURN,void*)<SUB>2092</SUB>> ]
+  "11535" -> "11540" 
+  "11535" -> "11554" 
+  "11554" -> "11562" 
+  "11556" -> "11581" 
+  "11606" -> "11619" 
+  "11664" -> "11677" 
+  "11557" -> "11568" 
+  "11564" -> "11556" 
+  "11574" -> "11589" 
+  "11574" -> "11613" 
+  "11608" -> "11606" 
+  "11616" -> "11623" 
+  "11616" -> "11656" 
+  "11656" -> "11661" 
+  "11656" -> "11668" 
+  "11665" -> "11664" 
+  "11558" -> "11557" 
+  "11565" -> "11564" 
+  "11575" -> "11574" 
+  "11584" -> "11603" 
+  "11603" -> "11677" 
+  "11609" -> "11608" 
+  "11617" -> "11616" 
+  "11644" -> "11656" 
+  "11660" -> "11668" 
+  "11666" -> "11674" 
+  "11669" -> "11665" 
+  "11539" -> "11546" 
+  "11539" -> "11554" 
+  "11560" -> "11558" 
+  "11566" -> "11571" 
+  "11569" -> "11565" 
+  "11576" -> "11575" 
+  "11585" -> "11600" 
+  "11593" -> "11584" 
+  "11610" -> "11614" 
+  "11614" -> "11609" 
+  "11619" -> "11617" 
+  "11623" -> "11629" 
+  "11623" -> "11639" 
+  "11646" -> "11644" 
+  "11661" -> "11660" 
+  "11668" -> "11666" 
+  "11670" -> "11669" 
+  "11540" -> "11539" 
+  "11544" -> "11551" 
+  "11551" -> "11677" 
+  "11562" -> "11560" 
+  "11568" -> "11566" 
   "11571" -> "11569" 
-  "11574" -> "11572" 
-  "11580" -> "11579" 
-  "11589" -> "11593" 
-  "11593" -> "11588" 
-  "11597" -> "11596" 
-  "11614" -> "11613" 
-  "11629" -> "11653" 
-  "11650" -> "11649" 
-  "11674" -> "11678" 
-  "11678" -> "11673" 
-  "11548" -> "11547" 
-  "11581" -> "11585" 
-  "11585" -> "11580" 
-  "11590" -> "11589" 
-  "11598" -> "11605" 
-  "11605" -> "11597" 
-  "11616" -> "11614" 
-  "11630" -> "11636" 
-  "11633" -> "11629" 
-  "11639" -> "11653" 
-  "11651" -> "11656" 
-  "11654" -> "11650" 
-  "11675" -> "11674" 
-  "11549" -> "11551" 
-  "11551" -> "11548" 
-  "11582" -> "11581" 
-  "11592" -> "11590" 
-  "11599" -> "11598" 
-  "11632" -> "11630" 
-  "11634" -> "11633" 
-  "11640" -> "11646" 
-  "11643" -> "11639" 
+  "11577" -> "11576" 
+  "11586" -> "11590" 
+  "11590" -> "11585" 
+  "11594" -> "11593" 
+  "11611" -> "11610" 
+  "11626" -> "11650" 
+  "11647" -> "11646" 
+  "11671" -> "11675" 
+  "11675" -> "11670" 
+  "11545" -> "11544" 
+  "11578" -> "11582" 
+  "11582" -> "11577" 
+  "11587" -> "11586" 
+  "11595" -> "11602" 
+  "11602" -> "11594" 
+  "11613" -> "11611" 
+  "11627" -> "11633" 
+  "11630" -> "11626" 
+  "11636" -> "11650" 
+  "11648" -> "11653" 
+  "11651" -> "11647" 
+  "11672" -> "11671" 
+  "11546" -> "11548" 
+  "11548" -> "11545" 
+  "11579" -> "11578" 
+  "11589" -> "11587" 
+  "11596" -> "11595" 
+  "11629" -> "11627" 
+  "11631" -> "11630" 
+  "11637" -> "11643" 
+  "11640" -> "11636" 
+  "11650" -> "11648" 
   "11653" -> "11651" 
-  "11656" -> "11654" 
-  "11677" -> "11675" 
-  "11584" -> "11582" 
-  "11600" -> "11604" 
-  "11604" -> "11599" 
-  "11636" -> "11634" 
-  "11642" -> "11640" 
-  "11644" -> "11643" 
-  "11601" -> "11600" 
-  "11646" -> "11644" 
-  "11603" -> "11601" 
-  "11533" -> "11538" 
+  "11674" -> "11672" 
+  "11581" -> "11579" 
+  "11597" -> "11601" 
+  "11601" -> "11596" 
+  "11633" -> "11631" 
+  "11639" -> "11637" 
+  "11641" -> "11640" 
+  "11598" -> "11597" 
+  "11643" -> "11641" 
+  "11600" -> "11598" 
+  "11530" -> "11535" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/205-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/205-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/205-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/205-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,118 +1,118 @@
 digraph "ReleasePrimitiveArrayCritical" {  
-"11688" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2123</SUB>> ]
-"11706" [label = <(soa,soa(env))<SUB>2124</SUB>> ]
-"11708" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2125</SUB>> ]
-"11757" [label = <(&lt;operator&gt;.assignment,component_size = array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2131</SUB>> ]
-"11766" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array.Ptr(), component_size, elements, mode))<SUB>2132</SUB>> ]
-"11709" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2125</SUB>> ]
-"11716" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2125</SUB>> ]
-"11726" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2126</SUB>> ]
-"11759" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2131</SUB>> ]
-"11768" [label = <(Ptr,array.Ptr())<SUB>2132</SUB>> ]
-"11710" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2125</SUB>> ]
-"11717" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2125</SUB>> ]
-"11727" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2126</SUB>> ]
-"11736" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;ReleasePrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2127</SUB>> ]
-"11755" [label = <(RETURN,return;,return;)<SUB>2129</SUB>> ]
-"11760" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2131</SUB>> ]
-"11769" [label = <(&lt;operator&gt;.fieldAccess,array.Ptr)<SUB>2132</SUB>> ]
-"11692" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2123</SUB>> ]
-"11712" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2125</SUB>> ]
-"11718" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2125</SUB>> ]
-"11721" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2125</SUB>> ]
-"11728" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2126</SUB>> ]
-"11737" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2127</SUB>> ]
-"11745" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2128</SUB>> ]
-"11761" [label = <(GetClass,array-&gt;GetClass())<SUB>2131</SUB>> ]
-"11765" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2131</SUB>> ]
-"11771" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2132</SUB>> ]
-"11693" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2123</SUB>> ]
-"11697" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2123</SUB>> ]
-"11704" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2123</SUB>> ]
-"11714" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2125</SUB>> ]
-"11720" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2125</SUB>> ]
-"11723" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2125</SUB>> ]
-"11729" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2126</SUB>> ]
-"11738" [label = <(Vm,soa.Vm())<SUB>2127</SUB>> ]
-"11742" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2127</SUB>> ]
-"11746" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2128</SUB>> ]
-"11762" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2131</SUB>> ]
-"11698" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2123</SUB>> ]
-"11730" [label = <(GetClass,array-&gt;GetClass())<SUB>2126</SUB>> ]
-"11734" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2126</SUB>> ]
-"11739" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2127</SUB>> ]
-"11747" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2128</SUB>> ]
-"11754" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2128</SUB>> ]
-"11764" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2131</SUB>> ]
-"11699" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2123</SUB>> ]
-"11701" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2123</SUB>> ]
-"11731" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2126</SUB>> ]
-"11741" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2127</SUB>> ]
-"11748" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2128</SUB>> ]
-"11733" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2126</SUB>> ]
-"11749" [label = <(GetClass,array-&gt;GetClass())<SUB>2128</SUB>> ]
-"11753" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2128</SUB>> ]
-"11750" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2128</SUB>> ]
-"11752" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2128</SUB>> ]
-"11682" [label = <(METHOD,ReleasePrimitiveArrayCritical)<SUB>2121</SUB>> ]
-"11775" [label = <(METHOD_RETURN,void)<SUB>2121</SUB>> ]
-  "11688" -> "11693" 
-  "11688" -> "11706" 
-  "11706" -> "11714" 
-  "11708" -> "11733" 
-  "11757" -> "11771" 
-  "11766" -> "11775" 
-  "11709" -> "11720" 
-  "11716" -> "11708" 
-  "11726" -> "11741" 
-  "11726" -> "11764" 
-  "11759" -> "11757" 
+"11685" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2121</SUB>> ]
+"11703" [label = <(soa,soa(env))<SUB>2122</SUB>> ]
+"11705" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2123</SUB>> ]
+"11754" [label = <(&lt;operator&gt;.assignment,component_size = array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2129</SUB>> ]
+"11763" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array.Ptr(), component_size, elements, mode))<SUB>2130</SUB>> ]
+"11706" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2123</SUB>> ]
+"11713" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2123</SUB>> ]
+"11723" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2124</SUB>> ]
+"11756" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2129</SUB>> ]
+"11765" [label = <(Ptr,array.Ptr())<SUB>2130</SUB>> ]
+"11707" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2123</SUB>> ]
+"11714" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2123</SUB>> ]
+"11724" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2124</SUB>> ]
+"11733" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;ReleasePrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2125</SUB>> ]
+"11752" [label = <(RETURN,return;,return;)<SUB>2127</SUB>> ]
+"11757" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2129</SUB>> ]
+"11766" [label = <(&lt;operator&gt;.fieldAccess,array.Ptr)<SUB>2130</SUB>> ]
+"11689" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2121</SUB>> ]
+"11709" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2123</SUB>> ]
+"11715" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2123</SUB>> ]
+"11718" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2123</SUB>> ]
+"11725" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2124</SUB>> ]
+"11734" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2125</SUB>> ]
+"11742" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2126</SUB>> ]
+"11758" [label = <(GetClass,array-&gt;GetClass())<SUB>2129</SUB>> ]
+"11762" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2129</SUB>> ]
+"11768" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2130</SUB>> ]
+"11690" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2121</SUB>> ]
+"11694" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2121</SUB>> ]
+"11701" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2121</SUB>> ]
+"11711" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2123</SUB>> ]
+"11717" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2123</SUB>> ]
+"11720" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2123</SUB>> ]
+"11726" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2124</SUB>> ]
+"11735" [label = <(Vm,soa.Vm())<SUB>2125</SUB>> ]
+"11739" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2125</SUB>> ]
+"11743" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2126</SUB>> ]
+"11759" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2129</SUB>> ]
+"11695" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2121</SUB>> ]
+"11727" [label = <(GetClass,array-&gt;GetClass())<SUB>2124</SUB>> ]
+"11731" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2124</SUB>> ]
+"11736" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2125</SUB>> ]
+"11744" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2126</SUB>> ]
+"11751" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2126</SUB>> ]
+"11761" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2129</SUB>> ]
+"11696" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2121</SUB>> ]
+"11698" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2121</SUB>> ]
+"11728" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2124</SUB>> ]
+"11738" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2125</SUB>> ]
+"11745" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2126</SUB>> ]
+"11730" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2124</SUB>> ]
+"11746" [label = <(GetClass,array-&gt;GetClass())<SUB>2126</SUB>> ]
+"11750" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2126</SUB>> ]
+"11747" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2126</SUB>> ]
+"11749" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2126</SUB>> ]
+"11679" [label = <(METHOD,ReleasePrimitiveArrayCritical)<SUB>2119</SUB>> ]
+"11772" [label = <(METHOD_RETURN,void)<SUB>2119</SUB>> ]
+  "11685" -> "11690" 
+  "11685" -> "11703" 
+  "11703" -> "11711" 
+  "11705" -> "11730" 
+  "11754" -> "11768" 
+  "11763" -> "11772" 
+  "11706" -> "11717" 
+  "11713" -> "11705" 
+  "11723" -> "11738" 
+  "11723" -> "11761" 
+  "11756" -> "11754" 
+  "11765" -> "11763" 
+  "11707" -> "11706" 
+  "11714" -> "11713" 
+  "11724" -> "11723" 
+  "11733" -> "11752" 
+  "11752" -> "11772" 
+  "11757" -> "11756" 
+  "11766" -> "11765" 
+  "11689" -> "11696" 
+  "11689" -> "11703" 
+  "11709" -> "11707" 
+  "11715" -> "11720" 
+  "11718" -> "11714" 
+  "11725" -> "11724" 
+  "11734" -> "11749" 
+  "11742" -> "11733" 
+  "11758" -> "11762" 
+  "11762" -> "11757" 
   "11768" -> "11766" 
-  "11710" -> "11709" 
-  "11717" -> "11716" 
-  "11727" -> "11726" 
-  "11736" -> "11755" 
-  "11755" -> "11775" 
-  "11760" -> "11759" 
-  "11769" -> "11768" 
-  "11692" -> "11699" 
-  "11692" -> "11706" 
-  "11712" -> "11710" 
-  "11718" -> "11723" 
-  "11721" -> "11717" 
-  "11728" -> "11727" 
-  "11737" -> "11752" 
-  "11745" -> "11736" 
-  "11761" -> "11765" 
-  "11765" -> "11760" 
-  "11771" -> "11769" 
-  "11693" -> "11692" 
-  "11697" -> "11704" 
-  "11704" -> "11775" 
-  "11714" -> "11712" 
+  "11690" -> "11689" 
+  "11694" -> "11701" 
+  "11701" -> "11772" 
+  "11711" -> "11709" 
+  "11717" -> "11715" 
   "11720" -> "11718" 
-  "11723" -> "11721" 
-  "11729" -> "11728" 
-  "11738" -> "11742" 
-  "11742" -> "11737" 
-  "11746" -> "11745" 
-  "11762" -> "11761" 
-  "11698" -> "11697" 
-  "11730" -> "11734" 
-  "11734" -> "11729" 
-  "11739" -> "11738" 
-  "11747" -> "11754" 
-  "11754" -> "11746" 
-  "11764" -> "11762" 
-  "11699" -> "11701" 
-  "11701" -> "11698" 
-  "11731" -> "11730" 
-  "11741" -> "11739" 
-  "11748" -> "11747" 
-  "11733" -> "11731" 
-  "11749" -> "11753" 
-  "11753" -> "11748" 
-  "11750" -> "11749" 
-  "11752" -> "11750" 
-  "11682" -> "11688" 
+  "11726" -> "11725" 
+  "11735" -> "11739" 
+  "11739" -> "11734" 
+  "11743" -> "11742" 
+  "11759" -> "11758" 
+  "11695" -> "11694" 
+  "11727" -> "11731" 
+  "11731" -> "11726" 
+  "11736" -> "11735" 
+  "11744" -> "11751" 
+  "11751" -> "11743" 
+  "11761" -> "11759" 
+  "11696" -> "11698" 
+  "11698" -> "11695" 
+  "11728" -> "11727" 
+  "11738" -> "11736" 
+  "11745" -> "11744" 
+  "11730" -> "11728" 
+  "11746" -> "11750" 
+  "11750" -> "11745" 
+  "11747" -> "11746" 
+  "11749" -> "11747" 
+  "11679" -> "11685" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/206-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/206-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/206-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/206-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,9 +1,9 @@
 digraph "GetBooleanArrayElements" {  
-"11782" [label = <(RETURN,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);)<SUB>2136</SUB>> ]
-"11783" [label = <(GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy))<SUB>2136</SUB>> ]
-"11777" [label = <(METHOD,GetBooleanArrayElements)<SUB>2135</SUB>> ]
-"11787" [label = <(METHOD_RETURN,jboolean)<SUB>2135</SUB>> ]
-  "11782" -> "11787" 
-  "11783" -> "11782" 
-  "11777" -> "11783" 
+"11779" [label = <(RETURN,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);)<SUB>2134</SUB>> ]
+"11780" [label = <(GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy))<SUB>2134</SUB>> ]
+"11774" [label = <(METHOD,GetBooleanArrayElements)<SUB>2133</SUB>> ]
+"11784" [label = <(METHOD_RETURN,jboolean)<SUB>2133</SUB>> ]
+  "11779" -> "11784" 
+  "11780" -> "11779" 
+  "11774" -> "11780" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/207-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/207-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/207-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/207-cfg.dot	2023-06-07 19:34:28.687390216 +0330
@@ -1,9 +1,9 @@
 digraph "GetByteArrayElements" {  
-"11794" [label = <(RETURN,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);)<SUB>2140</SUB>> ]
-"11795" [label = <(GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy))<SUB>2140</SUB>> ]
-"11789" [label = <(METHOD,GetByteArrayElements)<SUB>2139</SUB>> ]
-"11799" [label = <(METHOD_RETURN,jbyte)<SUB>2139</SUB>> ]
-  "11794" -> "11799" 
-  "11795" -> "11794" 
-  "11789" -> "11795" 
+"11791" [label = <(RETURN,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);)<SUB>2138</SUB>> ]
+"11792" [label = <(GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy))<SUB>2138</SUB>> ]
+"11786" [label = <(METHOD,GetByteArrayElements)<SUB>2137</SUB>> ]
+"11796" [label = <(METHOD_RETURN,jbyte)<SUB>2137</SUB>> ]
+  "11791" -> "11796" 
+  "11792" -> "11791" 
+  "11786" -> "11792" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/208-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/208-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/208-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/208-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,9 +1,9 @@
 digraph "GetCharArrayElements" {  
-"11806" [label = <(RETURN,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);)<SUB>2144</SUB>> ]
-"11807" [label = <(GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy))<SUB>2144</SUB>> ]
-"11801" [label = <(METHOD,GetCharArrayElements)<SUB>2143</SUB>> ]
-"11811" [label = <(METHOD_RETURN,jchar)<SUB>2143</SUB>> ]
-  "11806" -> "11811" 
-  "11807" -> "11806" 
-  "11801" -> "11807" 
+"11803" [label = <(RETURN,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);)<SUB>2142</SUB>> ]
+"11804" [label = <(GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy))<SUB>2142</SUB>> ]
+"11798" [label = <(METHOD,GetCharArrayElements)<SUB>2141</SUB>> ]
+"11808" [label = <(METHOD_RETURN,jchar)<SUB>2141</SUB>> ]
+  "11803" -> "11808" 
+  "11804" -> "11803" 
+  "11798" -> "11804" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/209-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/209-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/209-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/209-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,9 +1,9 @@
 digraph "GetDoubleArrayElements" {  
-"11818" [label = <(RETURN,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);)<SUB>2148</SUB>> ]
-"11819" [label = <(GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy))<SUB>2148</SUB>> ]
-"11813" [label = <(METHOD,GetDoubleArrayElements)<SUB>2147</SUB>> ]
-"11823" [label = <(METHOD_RETURN,jdouble)<SUB>2147</SUB>> ]
-  "11818" -> "11823" 
-  "11819" -> "11818" 
-  "11813" -> "11819" 
+"11815" [label = <(RETURN,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);)<SUB>2146</SUB>> ]
+"11816" [label = <(GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy))<SUB>2146</SUB>> ]
+"11810" [label = <(METHOD,GetDoubleArrayElements)<SUB>2145</SUB>> ]
+"11820" [label = <(METHOD_RETURN,jdouble)<SUB>2145</SUB>> ]
+  "11815" -> "11820" 
+  "11816" -> "11815" 
+  "11810" -> "11816" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/21-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/21-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/21-cfg.dot	2023-06-07 19:34:22.017390836 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/21-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,22 +1,22 @@
 digraph "FromReflectedMethod" {  
-"643" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>451</SUB>> ]
-"662" [label = <(soa,soa(env))<SUB>452</SUB>> ]
-"664" [label = <(RETURN,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));)<SUB>453</SUB>> ]
-"665" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method)))<SUB>453</SUB>> ]
-"666" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>453</SUB>> ]
-"669" [label = <(ArtMethod::FromReflectedMethod,ArtMethod::FromReflectedMethod(soa, jlr_method))<SUB>453</SUB>> ]
-"647" [label = <(UNLIKELY,UNLIKELY((jlr_method) == nullptr))<SUB>451</SUB>> ]
-"668" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>453</SUB>> ]
-"670" [label = <(&lt;operator&gt;.fieldAccess,ArtMethod::FromReflectedMethod)<SUB>453</SUB>> ]
-"648" [label = <(&lt;operator&gt;.equals,(jlr_method) == nullptr)<SUB>451</SUB>> ]
-"652" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_method),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;jlr_method == null&quot;))<SUB>451</SUB>> ]
-"659" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_method),CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>451</SUB>> ]
-"672" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>453</SUB>> ]
-"653" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>451</SUB>> ]
-"654" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>451</SUB>> ]
-"656" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>451</SUB>> ]
-"639" [label = <(METHOD,FromReflectedMethod)<SUB>450</SUB>> ]
-"675" [label = <(METHOD_RETURN,jmethodID)<SUB>450</SUB>> ]
+"643" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>450</SUB>> ]
+"662" [label = <(soa,soa(env))<SUB>451</SUB>> ]
+"664" [label = <(RETURN,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));)<SUB>452</SUB>> ]
+"665" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method)))<SUB>452</SUB>> ]
+"666" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>452</SUB>> ]
+"669" [label = <(ArtMethod::FromReflectedMethod,ArtMethod::FromReflectedMethod(soa, jlr_method))<SUB>452</SUB>> ]
+"647" [label = <(UNLIKELY,UNLIKELY((jlr_method) == nullptr))<SUB>450</SUB>> ]
+"668" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>452</SUB>> ]
+"670" [label = <(&lt;operator&gt;.fieldAccess,ArtMethod::FromReflectedMethod)<SUB>452</SUB>> ]
+"648" [label = <(&lt;operator&gt;.equals,(jlr_method) == nullptr)<SUB>450</SUB>> ]
+"652" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_method),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;jlr_method == null&quot;))<SUB>450</SUB>> ]
+"659" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_method),CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>450</SUB>> ]
+"672" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>452</SUB>> ]
+"653" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>450</SUB>> ]
+"654" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>450</SUB>> ]
+"656" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>450</SUB>> ]
+"639" [label = <(METHOD,FromReflectedMethod)<SUB>449</SUB>> ]
+"675" [label = <(METHOD_RETURN,jmethodID)<SUB>449</SUB>> ]
   "643" -> "648" 
   "643" -> "662" 
   "662" -> "668" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/210-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/210-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/210-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/210-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,9 +1,9 @@
 digraph "GetFloatArrayElements" {  
-"11830" [label = <(RETURN,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);)<SUB>2152</SUB>> ]
-"11831" [label = <(GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy))<SUB>2152</SUB>> ]
-"11825" [label = <(METHOD,GetFloatArrayElements)<SUB>2151</SUB>> ]
-"11835" [label = <(METHOD_RETURN,jfloat)<SUB>2151</SUB>> ]
-  "11830" -> "11835" 
-  "11831" -> "11830" 
-  "11825" -> "11831" 
+"11827" [label = <(RETURN,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);)<SUB>2150</SUB>> ]
+"11828" [label = <(GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy))<SUB>2150</SUB>> ]
+"11822" [label = <(METHOD,GetFloatArrayElements)<SUB>2149</SUB>> ]
+"11832" [label = <(METHOD_RETURN,jfloat)<SUB>2149</SUB>> ]
+  "11827" -> "11832" 
+  "11828" -> "11827" 
+  "11822" -> "11828" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/211-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/211-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/211-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/211-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,9 +1,9 @@
 digraph "GetIntArrayElements" {  
-"11842" [label = <(RETURN,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);)<SUB>2156</SUB>> ]
-"11843" [label = <(GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy))<SUB>2156</SUB>> ]
-"11837" [label = <(METHOD,GetIntArrayElements)<SUB>2155</SUB>> ]
-"11847" [label = <(METHOD_RETURN,jint)<SUB>2155</SUB>> ]
-  "11842" -> "11847" 
-  "11843" -> "11842" 
-  "11837" -> "11843" 
+"11839" [label = <(RETURN,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);)<SUB>2154</SUB>> ]
+"11840" [label = <(GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy))<SUB>2154</SUB>> ]
+"11834" [label = <(METHOD,GetIntArrayElements)<SUB>2153</SUB>> ]
+"11844" [label = <(METHOD_RETURN,jint)<SUB>2153</SUB>> ]
+  "11839" -> "11844" 
+  "11840" -> "11839" 
+  "11834" -> "11840" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/212-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/212-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/212-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/212-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,9 +1,9 @@
 digraph "GetLongArrayElements" {  
-"11854" [label = <(RETURN,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);)<SUB>2160</SUB>> ]
-"11855" [label = <(GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy))<SUB>2160</SUB>> ]
-"11849" [label = <(METHOD,GetLongArrayElements)<SUB>2159</SUB>> ]
-"11859" [label = <(METHOD_RETURN,jlong)<SUB>2159</SUB>> ]
-  "11854" -> "11859" 
-  "11855" -> "11854" 
-  "11849" -> "11855" 
+"11851" [label = <(RETURN,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);)<SUB>2158</SUB>> ]
+"11852" [label = <(GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy))<SUB>2158</SUB>> ]
+"11846" [label = <(METHOD,GetLongArrayElements)<SUB>2157</SUB>> ]
+"11856" [label = <(METHOD_RETURN,jlong)<SUB>2157</SUB>> ]
+  "11851" -> "11856" 
+  "11852" -> "11851" 
+  "11846" -> "11852" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/213-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/213-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/213-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/213-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,9 +1,9 @@
 digraph "GetShortArrayElements" {  
-"11866" [label = <(RETURN,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);)<SUB>2164</SUB>> ]
-"11867" [label = <(GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy))<SUB>2164</SUB>> ]
-"11861" [label = <(METHOD,GetShortArrayElements)<SUB>2163</SUB>> ]
-"11871" [label = <(METHOD_RETURN,jshort)<SUB>2163</SUB>> ]
-  "11866" -> "11871" 
-  "11867" -> "11866" 
-  "11861" -> "11867" 
+"11863" [label = <(RETURN,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);)<SUB>2162</SUB>> ]
+"11864" [label = <(GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy))<SUB>2162</SUB>> ]
+"11858" [label = <(METHOD,GetShortArrayElements)<SUB>2161</SUB>> ]
+"11868" [label = <(METHOD_RETURN,jshort)<SUB>2161</SUB>> ]
+  "11863" -> "11868" 
+  "11864" -> "11863" 
+  "11858" -> "11864" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/214-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/214-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/214-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/214-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseBooleanArrayElements" {  
-"11879" [label = <(ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,ReleasePrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, elements,\012                                                                         mode))<SUB>2169</SUB>> ]
-"11873" [label = <(METHOD,ReleaseBooleanArrayElements)<SUB>2167</SUB>> ]
-"11884" [label = <(METHOD_RETURN,void)<SUB>2167</SUB>> ]
-  "11879" -> "11884" 
-  "11873" -> "11879" 
+"11876" [label = <(ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,ReleasePrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, elements,\012                                                                         mode))<SUB>2167</SUB>> ]
+"11870" [label = <(METHOD,ReleaseBooleanArrayElements)<SUB>2165</SUB>> ]
+"11881" [label = <(METHOD_RETURN,void)<SUB>2165</SUB>> ]
+  "11876" -> "11881" 
+  "11870" -> "11876" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/215-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/215-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/215-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/215-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseByteArrayElements" {  
-"11892" [label = <(ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,ReleasePrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, elements, mode))<SUB>2174</SUB>> ]
-"11886" [label = <(METHOD,ReleaseByteArrayElements)<SUB>2173</SUB>> ]
-"11897" [label = <(METHOD_RETURN,void)<SUB>2173</SUB>> ]
-  "11892" -> "11897" 
-  "11886" -> "11892" 
+"11889" [label = <(ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,ReleasePrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, elements, mode))<SUB>2172</SUB>> ]
+"11883" [label = <(METHOD,ReleaseByteArrayElements)<SUB>2171</SUB>> ]
+"11894" [label = <(METHOD_RETURN,void)<SUB>2171</SUB>> ]
+  "11889" -> "11894" 
+  "11883" -> "11889" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/216-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/216-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/216-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/216-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseCharArrayElements" {  
-"11905" [label = <(ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,ReleasePrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, elements, mode))<SUB>2178</SUB>> ]
-"11899" [label = <(METHOD,ReleaseCharArrayElements)<SUB>2177</SUB>> ]
-"11910" [label = <(METHOD_RETURN,void)<SUB>2177</SUB>> ]
-  "11905" -> "11910" 
-  "11899" -> "11905" 
+"11902" [label = <(ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,ReleasePrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, elements, mode))<SUB>2176</SUB>> ]
+"11896" [label = <(METHOD,ReleaseCharArrayElements)<SUB>2175</SUB>> ]
+"11907" [label = <(METHOD_RETURN,void)<SUB>2175</SUB>> ]
+  "11902" -> "11907" 
+  "11896" -> "11902" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/217-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/217-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/217-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/217-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseDoubleArrayElements" {  
-"11918" [label = <(ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,ReleasePrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, elements, mode))<SUB>2183</SUB>> ]
-"11912" [label = <(METHOD,ReleaseDoubleArrayElements)<SUB>2181</SUB>> ]
-"11923" [label = <(METHOD_RETURN,void)<SUB>2181</SUB>> ]
-  "11918" -> "11923" 
-  "11912" -> "11918" 
+"11915" [label = <(ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,ReleasePrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, elements, mode))<SUB>2181</SUB>> ]
+"11909" [label = <(METHOD,ReleaseDoubleArrayElements)<SUB>2179</SUB>> ]
+"11920" [label = <(METHOD_RETURN,void)<SUB>2179</SUB>> ]
+  "11915" -> "11920" 
+  "11909" -> "11915" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/218-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/218-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/218-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/218-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseFloatArrayElements" {  
-"11931" [label = <(ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,ReleasePrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, elements, mode))<SUB>2188</SUB>> ]
-"11925" [label = <(METHOD,ReleaseFloatArrayElements)<SUB>2186</SUB>> ]
-"11936" [label = <(METHOD_RETURN,void)<SUB>2186</SUB>> ]
-  "11931" -> "11936" 
-  "11925" -> "11931" 
+"11928" [label = <(ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,ReleasePrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, elements, mode))<SUB>2186</SUB>> ]
+"11922" [label = <(METHOD,ReleaseFloatArrayElements)<SUB>2184</SUB>> ]
+"11933" [label = <(METHOD_RETURN,void)<SUB>2184</SUB>> ]
+  "11928" -> "11933" 
+  "11922" -> "11928" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/219-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/219-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/219-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/219-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseIntArrayElements" {  
-"11944" [label = <(ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,ReleasePrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, elements, mode))<SUB>2192</SUB>> ]
-"11938" [label = <(METHOD,ReleaseIntArrayElements)<SUB>2191</SUB>> ]
-"11949" [label = <(METHOD_RETURN,void)<SUB>2191</SUB>> ]
-  "11944" -> "11949" 
-  "11938" -> "11944" 
+"11941" [label = <(ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,ReleasePrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, elements, mode))<SUB>2190</SUB>> ]
+"11935" [label = <(METHOD,ReleaseIntArrayElements)<SUB>2189</SUB>> ]
+"11946" [label = <(METHOD_RETURN,void)<SUB>2189</SUB>> ]
+  "11941" -> "11946" 
+  "11935" -> "11941" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/22-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/22-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/22-cfg.dot	2023-06-07 19:34:22.017390836 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/22-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,54 +1,54 @@
 digraph "FromReflectedField" {  
-"681" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>457</SUB>> ]
-"700" [label = <(soa,soa(env))<SUB>458</SUB>> ]
-"702" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj_field = soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>459</SUB>> ]
-"734" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Field&gt; field = ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>464</SUB>> ]
-"753" [label = <(RETURN,return jni::EncodeArtField(field-&gt;GetArtField());,return jni::EncodeArtField(field-&gt;GetArtField());)<SUB>465</SUB>> ]
-"703" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj_field)<SUB>459</SUB>> ]
-"710" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>459</SUB>> ]
-"720" [label = <(&lt;operator&gt;.notEquals,obj_field-&gt;GetClass() != mirror::Field::StaticClass())<SUB>460</SUB>> ]
-"735" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt; field)<SUB>464</SUB>> ]
-"742" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>464</SUB>> ]
-"754" [label = <(jni::EncodeArtField,jni::EncodeArtField(field-&gt;GetArtField()))<SUB>465</SUB>> ]
-"704" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>459</SUB>> ]
-"711" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>459</SUB>> ]
-"721" [label = <(GetClass,obj_field-&gt;GetClass())<SUB>460</SUB>> ]
-"725" [label = <(mirror::Field::StaticClass,mirror::Field::StaticClass())<SUB>460</SUB>> ]
-"732" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>462</SUB>> ]
-"736" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>464</SUB>> ]
-"743" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>464</SUB>> ]
-"748" [label = <(::DownCast,::DownCast(obj_field))<SUB>464</SUB>> ]
-"755" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtField)<SUB>465</SUB>> ]
-"758" [label = <(GetArtField,field-&gt;GetArtField())<SUB>465</SUB>> ]
-"685" [label = <(UNLIKELY,UNLIKELY((jlr_field) == nullptr))<SUB>457</SUB>> ]
-"706" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>459</SUB>> ]
-"712" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>459</SUB>> ]
-"715" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>459</SUB>> ]
-"722" [label = <(&lt;operator&gt;.indirectFieldAccess,obj_field-&gt;GetClass)<SUB>460</SUB>> ]
-"726" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::StaticClass)<SUB>460</SUB>> ]
-"738" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>464</SUB>> ]
-"745" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>464</SUB>> ]
-"749" [label = <(&lt;operator&gt;.fieldAccess,::DownCast)<SUB>464</SUB>> ]
-"757" [label = <(FIELD_IDENTIFIER,EncodeArtField,EncodeArtField)<SUB>465</SUB>> ]
-"759" [label = <(&lt;operator&gt;.indirectFieldAccess,field-&gt;GetArtField)<SUB>465</SUB>> ]
-"686" [label = <(&lt;operator&gt;.equals,(jlr_field) == nullptr)<SUB>457</SUB>> ]
-"690" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_field),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;jlr_field == null&quot;))<SUB>457</SUB>> ]
-"697" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_field),CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>457</SUB>> ]
-"708" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>459</SUB>> ]
-"714" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>459</SUB>> ]
-"717" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>459</SUB>> ]
-"724" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>460</SUB>> ]
-"727" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>460</SUB>> ]
-"730" [label = <(FIELD_IDENTIFIER,StaticClass,StaticClass)<SUB>460</SUB>> ]
-"740" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>464</SUB>> ]
-"747" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>464</SUB>> ]
-"751" [label = <(FIELD_IDENTIFIER,DownCast,DownCast)<SUB>464</SUB>> ]
-"761" [label = <(FIELD_IDENTIFIER,GetArtField,GetArtField)<SUB>465</SUB>> ]
-"691" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>457</SUB>> ]
-"692" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>457</SUB>> ]
-"694" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>457</SUB>> ]
-"677" [label = <(METHOD,FromReflectedField)<SUB>456</SUB>> ]
-"762" [label = <(METHOD_RETURN,jfieldID)<SUB>456</SUB>> ]
+"681" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>456</SUB>> ]
+"700" [label = <(soa,soa(env))<SUB>457</SUB>> ]
+"702" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj_field = soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>458</SUB>> ]
+"734" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Field&gt; field = ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>463</SUB>> ]
+"753" [label = <(RETURN,return jni::EncodeArtField(field-&gt;GetArtField());,return jni::EncodeArtField(field-&gt;GetArtField());)<SUB>464</SUB>> ]
+"703" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj_field)<SUB>458</SUB>> ]
+"710" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>458</SUB>> ]
+"720" [label = <(&lt;operator&gt;.notEquals,obj_field-&gt;GetClass() != mirror::Field::StaticClass())<SUB>459</SUB>> ]
+"735" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt; field)<SUB>463</SUB>> ]
+"742" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>463</SUB>> ]
+"754" [label = <(jni::EncodeArtField,jni::EncodeArtField(field-&gt;GetArtField()))<SUB>464</SUB>> ]
+"704" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>458</SUB>> ]
+"711" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>458</SUB>> ]
+"721" [label = <(GetClass,obj_field-&gt;GetClass())<SUB>459</SUB>> ]
+"725" [label = <(mirror::Field::StaticClass,mirror::Field::StaticClass())<SUB>459</SUB>> ]
+"732" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>461</SUB>> ]
+"736" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>463</SUB>> ]
+"743" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>463</SUB>> ]
+"748" [label = <(::DownCast,::DownCast(obj_field))<SUB>463</SUB>> ]
+"755" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtField)<SUB>464</SUB>> ]
+"758" [label = <(GetArtField,field-&gt;GetArtField())<SUB>464</SUB>> ]
+"685" [label = <(UNLIKELY,UNLIKELY((jlr_field) == nullptr))<SUB>456</SUB>> ]
+"706" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>458</SUB>> ]
+"712" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>458</SUB>> ]
+"715" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>458</SUB>> ]
+"722" [label = <(&lt;operator&gt;.indirectFieldAccess,obj_field-&gt;GetClass)<SUB>459</SUB>> ]
+"726" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::StaticClass)<SUB>459</SUB>> ]
+"738" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>463</SUB>> ]
+"745" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>463</SUB>> ]
+"749" [label = <(&lt;operator&gt;.fieldAccess,::DownCast)<SUB>463</SUB>> ]
+"757" [label = <(FIELD_IDENTIFIER,EncodeArtField,EncodeArtField)<SUB>464</SUB>> ]
+"759" [label = <(&lt;operator&gt;.indirectFieldAccess,field-&gt;GetArtField)<SUB>464</SUB>> ]
+"686" [label = <(&lt;operator&gt;.equals,(jlr_field) == nullptr)<SUB>456</SUB>> ]
+"690" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_field),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;jlr_field == null&quot;))<SUB>456</SUB>> ]
+"697" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_field),CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>456</SUB>> ]
+"708" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>458</SUB>> ]
+"714" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>458</SUB>> ]
+"717" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>458</SUB>> ]
+"724" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>459</SUB>> ]
+"727" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>459</SUB>> ]
+"730" [label = <(FIELD_IDENTIFIER,StaticClass,StaticClass)<SUB>459</SUB>> ]
+"740" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>463</SUB>> ]
+"747" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>463</SUB>> ]
+"751" [label = <(FIELD_IDENTIFIER,DownCast,DownCast)<SUB>463</SUB>> ]
+"761" [label = <(FIELD_IDENTIFIER,GetArtField,GetArtField)<SUB>464</SUB>> ]
+"691" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>456</SUB>> ]
+"692" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>456</SUB>> ]
+"694" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>456</SUB>> ]
+"677" [label = <(METHOD,FromReflectedField)<SUB>455</SUB>> ]
+"762" [label = <(METHOD_RETURN,jfieldID)<SUB>455</SUB>> ]
   "681" -> "686" 
   "681" -> "700" 
   "700" -> "708" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/220-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/220-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/220-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/220-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseLongArrayElements" {  
-"11957" [label = <(ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,ReleasePrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, elements, mode))<SUB>2196</SUB>> ]
-"11951" [label = <(METHOD,ReleaseLongArrayElements)<SUB>2195</SUB>> ]
-"11962" [label = <(METHOD_RETURN,void)<SUB>2195</SUB>> ]
-  "11957" -> "11962" 
-  "11951" -> "11957" 
+"11954" [label = <(ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,ReleasePrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, elements, mode))<SUB>2194</SUB>> ]
+"11948" [label = <(METHOD,ReleaseLongArrayElements)<SUB>2193</SUB>> ]
+"11959" [label = <(METHOD_RETURN,void)<SUB>2193</SUB>> ]
+  "11954" -> "11959" 
+  "11948" -> "11954" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/221-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/221-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/221-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/221-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseShortArrayElements" {  
-"11970" [label = <(ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,ReleasePrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, elements, mode))<SUB>2201</SUB>> ]
-"11964" [label = <(METHOD,ReleaseShortArrayElements)<SUB>2199</SUB>> ]
-"11975" [label = <(METHOD_RETURN,void)<SUB>2199</SUB>> ]
-  "11970" -> "11975" 
-  "11964" -> "11970" 
+"11967" [label = <(ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,ReleasePrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, elements, mode))<SUB>2199</SUB>> ]
+"11961" [label = <(METHOD,ReleaseShortArrayElements)<SUB>2197</SUB>> ]
+"11972" [label = <(METHOD_RETURN,void)<SUB>2197</SUB>> ]
+  "11967" -> "11972" 
+  "11961" -> "11967" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/222-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/222-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/222-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/222-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "GetBooleanArrayRegion" {  
-"11984" [label = <(GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2206</SUB>> ]
-"11977" [label = <(METHOD,GetBooleanArrayRegion)<SUB>2204</SUB>> ]
-"11990" [label = <(METHOD_RETURN,void)<SUB>2204</SUB>> ]
-  "11984" -> "11990" 
-  "11977" -> "11984" 
+"11981" [label = <(GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2204</SUB>> ]
+"11974" [label = <(METHOD,GetBooleanArrayRegion)<SUB>2202</SUB>> ]
+"11987" [label = <(METHOD_RETURN,void)<SUB>2202</SUB>> ]
+  "11981" -> "11987" 
+  "11974" -> "11981" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/223-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/223-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/223-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/223-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "GetByteArrayRegion" {  
-"11999" [label = <(GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2212</SUB>> ]
-"11992" [label = <(METHOD,GetByteArrayRegion)<SUB>2210</SUB>> ]
-"12005" [label = <(METHOD_RETURN,void)<SUB>2210</SUB>> ]
-  "11999" -> "12005" 
-  "11992" -> "11999" 
+"11996" [label = <(GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2210</SUB>> ]
+"11989" [label = <(METHOD,GetByteArrayRegion)<SUB>2208</SUB>> ]
+"12002" [label = <(METHOD_RETURN,void)<SUB>2208</SUB>> ]
+  "11996" -> "12002" 
+  "11989" -> "11996" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/224-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/224-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/224-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/224-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "GetCharArrayRegion" {  
-"12014" [label = <(GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2217</SUB>> ]
-"12007" [label = <(METHOD,GetCharArrayRegion)<SUB>2215</SUB>> ]
-"12020" [label = <(METHOD_RETURN,void)<SUB>2215</SUB>> ]
-  "12014" -> "12020" 
-  "12007" -> "12014" 
+"12011" [label = <(GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2215</SUB>> ]
+"12004" [label = <(METHOD,GetCharArrayRegion)<SUB>2213</SUB>> ]
+"12017" [label = <(METHOD_RETURN,void)<SUB>2213</SUB>> ]
+  "12011" -> "12017" 
+  "12004" -> "12011" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/225-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/225-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/225-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/225-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "GetDoubleArrayRegion" {  
-"12029" [label = <(GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2222</SUB>> ]
-"12022" [label = <(METHOD,GetDoubleArrayRegion)<SUB>2220</SUB>> ]
-"12035" [label = <(METHOD_RETURN,void)<SUB>2220</SUB>> ]
-  "12029" -> "12035" 
-  "12022" -> "12029" 
+"12026" [label = <(GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2220</SUB>> ]
+"12019" [label = <(METHOD,GetDoubleArrayRegion)<SUB>2218</SUB>> ]
+"12032" [label = <(METHOD_RETURN,void)<SUB>2218</SUB>> ]
+  "12026" -> "12032" 
+  "12019" -> "12026" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/226-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/226-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/226-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/226-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "GetFloatArrayRegion" {  
-"12044" [label = <(GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2228</SUB>> ]
-"12037" [label = <(METHOD,GetFloatArrayRegion)<SUB>2226</SUB>> ]
-"12050" [label = <(METHOD_RETURN,void)<SUB>2226</SUB>> ]
-  "12044" -> "12050" 
-  "12037" -> "12044" 
+"12041" [label = <(GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2226</SUB>> ]
+"12034" [label = <(METHOD,GetFloatArrayRegion)<SUB>2224</SUB>> ]
+"12047" [label = <(METHOD_RETURN,void)<SUB>2224</SUB>> ]
+  "12041" -> "12047" 
+  "12034" -> "12041" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/227-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/227-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/227-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/227-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "GetIntArrayRegion" {  
-"12059" [label = <(GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2234</SUB>> ]
-"12052" [label = <(METHOD,GetIntArrayRegion)<SUB>2232</SUB>> ]
-"12065" [label = <(METHOD_RETURN,void)<SUB>2232</SUB>> ]
-  "12059" -> "12065" 
-  "12052" -> "12059" 
+"12056" [label = <(GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2232</SUB>> ]
+"12049" [label = <(METHOD,GetIntArrayRegion)<SUB>2230</SUB>> ]
+"12062" [label = <(METHOD_RETURN,void)<SUB>2230</SUB>> ]
+  "12056" -> "12062" 
+  "12049" -> "12056" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/228-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/228-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/228-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/228-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "GetLongArrayRegion" {  
-"12074" [label = <(GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2239</SUB>> ]
-"12067" [label = <(METHOD,GetLongArrayRegion)<SUB>2237</SUB>> ]
-"12080" [label = <(METHOD_RETURN,void)<SUB>2237</SUB>> ]
-  "12074" -> "12080" 
-  "12067" -> "12074" 
+"12071" [label = <(GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2237</SUB>> ]
+"12064" [label = <(METHOD,GetLongArrayRegion)<SUB>2235</SUB>> ]
+"12077" [label = <(METHOD_RETURN,void)<SUB>2235</SUB>> ]
+  "12071" -> "12077" 
+  "12064" -> "12071" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/229-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/229-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/229-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/229-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "GetShortArrayRegion" {  
-"12089" [label = <(GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2244</SUB>> ]
-"12082" [label = <(METHOD,GetShortArrayRegion)<SUB>2242</SUB>> ]
-"12095" [label = <(METHOD_RETURN,void)<SUB>2242</SUB>> ]
-  "12089" -> "12095" 
-  "12082" -> "12089" 
+"12086" [label = <(GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2242</SUB>> ]
+"12079" [label = <(METHOD,GetShortArrayRegion)<SUB>2240</SUB>> ]
+"12092" [label = <(METHOD_RETURN,void)<SUB>2240</SUB>> ]
+  "12086" -> "12092" 
+  "12079" -> "12086" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/23-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/23-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/23-cfg.dot	2023-06-07 19:34:22.027390837 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/23-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,64 +1,64 @@
 digraph "ToReflectedMethod" {  
-"770" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>469</SUB>> ]
-"789" [label = <(soa,soa(env))<SUB>470</SUB>> ]
-"792" [label = <(&lt;operator&gt;.assignment,* m = jni::DecodeArtMethod(mid))<SUB>471</SUB>> ]
-"799" [label = <(&lt;operator&gt;.multiplication,mirror::Executable* method)<SUB>472</SUB>> ]
-"804" [label = <(DCHECK_EQ,DCHECK_EQ(Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize(), kRuntimePointerSize))<SUB>473</SUB>> ]
-"816" [label = <(DCHECK,DCHECK(!Runtime::Current()-&gt;IsActiveTransaction()))<SUB>474</SUB>> ]
-"859" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(method);,return soa.AddLocalReference&lt;jobject&gt;(method);)<SUB>480</SUB>> ]
-"794" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>471</SUB>> ]
-"800" [label = <(&lt;operator&gt;.fieldAccess,mirror::Executable)<SUB>472</SUB>> ]
-"805" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>473</SUB>> ]
-"817" [label = <(&lt;operator&gt;.logicalNot,!Runtime::Current()-&gt;IsActiveTransaction())<SUB>474</SUB>> ]
-"826" [label = <(IsConstructor,m-&gt;IsConstructor())<SUB>475</SUB>> ]
-"860" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(method))<SUB>480</SUB>> ]
-"795" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>471</SUB>> ]
-"802" [label = <(FIELD_IDENTIFIER,Executable,Executable)<SUB>472</SUB>> ]
-"806" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>473</SUB>> ]
-"818" [label = <(IsActiveTransaction,Runtime::Current()-&gt;IsActiveTransaction())<SUB>474</SUB>> ]
-"827" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsConstructor)<SUB>475</SUB>> ]
-"831" [label = <(&lt;operator&gt;.assignment,method = mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>476</SUB>> ]
-"861" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>480</SUB>> ]
-"774" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>469</SUB>> ]
-"797" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>471</SUB>> ]
-"807" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>473</SUB>> ]
-"814" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>473</SUB>> ]
-"819" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;IsActiveTransaction)<SUB>474</SUB>> ]
-"829" [label = <(FIELD_IDENTIFIER,IsConstructor,IsConstructor)<SUB>475</SUB>> ]
-"833" [label = <(mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>476</SUB>> ]
-"846" [label = <(&lt;operator&gt;.assignment,method = mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>478</SUB>> ]
-"862" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>480</SUB>> ]
-"775" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>469</SUB>> ]
-"779" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>469</SUB>> ]
-"786" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>469</SUB>> ]
-"808" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>473</SUB>> ]
-"820" [label = <(Runtime::Current,Runtime::Current())<SUB>474</SUB>> ]
-"824" [label = <(FIELD_IDENTIFIER,IsActiveTransaction,IsActiveTransaction)<SUB>474</SUB>> ]
-"834" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>476</SUB>> ]
-"839" [label = <(Self,soa.Self())<SUB>476</SUB>> ]
-"848" [label = <(mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>478</SUB>> ]
-"864" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>480</SUB>> ]
-"780" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>469</SUB>> ]
-"809" [label = <(Runtime::Current,Runtime::Current())<SUB>473</SUB>> ]
-"813" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>473</SUB>> ]
-"821" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>474</SUB>> ]
-"835" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor)<SUB>476</SUB>> ]
-"838" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>476</SUB>> ]
-"840" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>476</SUB>> ]
-"849" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>478</SUB>> ]
-"854" [label = <(Self,soa.Self())<SUB>478</SUB>> ]
-"781" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>469</SUB>> ]
-"783" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>469</SUB>> ]
-"810" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>473</SUB>> ]
-"823" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>474</SUB>> ]
-"842" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>476</SUB>> ]
-"850" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method)<SUB>478</SUB>> ]
-"853" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>478</SUB>> ]
-"855" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>478</SUB>> ]
-"812" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>473</SUB>> ]
-"857" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>478</SUB>> ]
-"764" [label = <(METHOD,ToReflectedMethod)<SUB>468</SUB>> ]
-"867" [label = <(METHOD_RETURN,jobject)<SUB>468</SUB>> ]
+"770" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>468</SUB>> ]
+"789" [label = <(soa,soa(env))<SUB>469</SUB>> ]
+"792" [label = <(&lt;operator&gt;.assignment,* m = jni::DecodeArtMethod(mid))<SUB>470</SUB>> ]
+"799" [label = <(&lt;operator&gt;.multiplication,mirror::Executable* method)<SUB>471</SUB>> ]
+"804" [label = <(DCHECK_EQ,DCHECK_EQ(Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize(), kRuntimePointerSize))<SUB>472</SUB>> ]
+"816" [label = <(DCHECK,DCHECK(!Runtime::Current()-&gt;IsActiveTransaction()))<SUB>473</SUB>> ]
+"859" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(method);,return soa.AddLocalReference&lt;jobject&gt;(method);)<SUB>479</SUB>> ]
+"794" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>470</SUB>> ]
+"800" [label = <(&lt;operator&gt;.fieldAccess,mirror::Executable)<SUB>471</SUB>> ]
+"805" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>472</SUB>> ]
+"817" [label = <(&lt;operator&gt;.logicalNot,!Runtime::Current()-&gt;IsActiveTransaction())<SUB>473</SUB>> ]
+"826" [label = <(IsConstructor,m-&gt;IsConstructor())<SUB>474</SUB>> ]
+"860" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(method))<SUB>479</SUB>> ]
+"795" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>470</SUB>> ]
+"802" [label = <(FIELD_IDENTIFIER,Executable,Executable)<SUB>471</SUB>> ]
+"806" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>472</SUB>> ]
+"818" [label = <(IsActiveTransaction,Runtime::Current()-&gt;IsActiveTransaction())<SUB>473</SUB>> ]
+"827" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsConstructor)<SUB>474</SUB>> ]
+"831" [label = <(&lt;operator&gt;.assignment,method = mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>475</SUB>> ]
+"861" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>479</SUB>> ]
+"774" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>468</SUB>> ]
+"797" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>470</SUB>> ]
+"807" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>472</SUB>> ]
+"814" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>472</SUB>> ]
+"819" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;IsActiveTransaction)<SUB>473</SUB>> ]
+"829" [label = <(FIELD_IDENTIFIER,IsConstructor,IsConstructor)<SUB>474</SUB>> ]
+"833" [label = <(mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>475</SUB>> ]
+"846" [label = <(&lt;operator&gt;.assignment,method = mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>477</SUB>> ]
+"862" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>479</SUB>> ]
+"775" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>468</SUB>> ]
+"779" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>468</SUB>> ]
+"786" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>468</SUB>> ]
+"808" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>472</SUB>> ]
+"820" [label = <(Runtime::Current,Runtime::Current())<SUB>473</SUB>> ]
+"824" [label = <(FIELD_IDENTIFIER,IsActiveTransaction,IsActiveTransaction)<SUB>473</SUB>> ]
+"834" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>475</SUB>> ]
+"839" [label = <(Self,soa.Self())<SUB>475</SUB>> ]
+"848" [label = <(mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>477</SUB>> ]
+"864" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>479</SUB>> ]
+"780" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>468</SUB>> ]
+"809" [label = <(Runtime::Current,Runtime::Current())<SUB>472</SUB>> ]
+"813" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>472</SUB>> ]
+"821" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>473</SUB>> ]
+"835" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor)<SUB>475</SUB>> ]
+"838" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>475</SUB>> ]
+"840" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>475</SUB>> ]
+"849" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>477</SUB>> ]
+"854" [label = <(Self,soa.Self())<SUB>477</SUB>> ]
+"781" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>468</SUB>> ]
+"783" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>468</SUB>> ]
+"810" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>472</SUB>> ]
+"823" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>473</SUB>> ]
+"842" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>475</SUB>> ]
+"850" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method)<SUB>477</SUB>> ]
+"853" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>477</SUB>> ]
+"855" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>477</SUB>> ]
+"812" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>472</SUB>> ]
+"857" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>477</SUB>> ]
+"764" [label = <(METHOD,ToReflectedMethod)<SUB>467</SUB>> ]
+"867" [label = <(METHOD_RETURN,jobject)<SUB>467</SUB>> ]
   "770" -> "775" 
   "770" -> "789" 
   "789" -> "797" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/230-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/230-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/230-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/230-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "SetBooleanArrayRegion" {  
-"12104" [label = <(SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,SetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2250</SUB>> ]
-"12097" [label = <(METHOD,SetBooleanArrayRegion)<SUB>2248</SUB>> ]
-"12110" [label = <(METHOD_RETURN,void)<SUB>2248</SUB>> ]
-  "12104" -> "12110" 
-  "12097" -> "12104" 
+"12101" [label = <(SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,SetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2248</SUB>> ]
+"12094" [label = <(METHOD,SetBooleanArrayRegion)<SUB>2246</SUB>> ]
+"12107" [label = <(METHOD_RETURN,void)<SUB>2246</SUB>> ]
+  "12101" -> "12107" 
+  "12094" -> "12101" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/231-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/231-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/231-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/231-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "SetByteArrayRegion" {  
-"12119" [label = <(SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,SetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2256</SUB>> ]
-"12112" [label = <(METHOD,SetByteArrayRegion)<SUB>2254</SUB>> ]
-"12125" [label = <(METHOD_RETURN,void)<SUB>2254</SUB>> ]
-  "12119" -> "12125" 
-  "12112" -> "12119" 
+"12116" [label = <(SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,SetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2254</SUB>> ]
+"12109" [label = <(METHOD,SetByteArrayRegion)<SUB>2252</SUB>> ]
+"12122" [label = <(METHOD_RETURN,void)<SUB>2252</SUB>> ]
+  "12116" -> "12122" 
+  "12109" -> "12116" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/232-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/232-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/232-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/232-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "SetCharArrayRegion" {  
-"12134" [label = <(SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,SetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2261</SUB>> ]
-"12127" [label = <(METHOD,SetCharArrayRegion)<SUB>2259</SUB>> ]
-"12140" [label = <(METHOD_RETURN,void)<SUB>2259</SUB>> ]
-  "12134" -> "12140" 
-  "12127" -> "12134" 
+"12131" [label = <(SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,SetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2259</SUB>> ]
+"12124" [label = <(METHOD,SetCharArrayRegion)<SUB>2257</SUB>> ]
+"12137" [label = <(METHOD_RETURN,void)<SUB>2257</SUB>> ]
+  "12131" -> "12137" 
+  "12124" -> "12131" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/233-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/233-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/233-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/233-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "SetDoubleArrayRegion" {  
-"12149" [label = <(SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,SetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2266</SUB>> ]
-"12142" [label = <(METHOD,SetDoubleArrayRegion)<SUB>2264</SUB>> ]
-"12155" [label = <(METHOD_RETURN,void)<SUB>2264</SUB>> ]
-  "12149" -> "12155" 
-  "12142" -> "12149" 
+"12146" [label = <(SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,SetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2264</SUB>> ]
+"12139" [label = <(METHOD,SetDoubleArrayRegion)<SUB>2262</SUB>> ]
+"12152" [label = <(METHOD_RETURN,void)<SUB>2262</SUB>> ]
+  "12146" -> "12152" 
+  "12139" -> "12146" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/234-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/234-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/234-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/234-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "SetFloatArrayRegion" {  
-"12164" [label = <(SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,SetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2272</SUB>> ]
-"12157" [label = <(METHOD,SetFloatArrayRegion)<SUB>2270</SUB>> ]
-"12170" [label = <(METHOD_RETURN,void)<SUB>2270</SUB>> ]
-  "12164" -> "12170" 
-  "12157" -> "12164" 
+"12161" [label = <(SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,SetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2270</SUB>> ]
+"12154" [label = <(METHOD,SetFloatArrayRegion)<SUB>2268</SUB>> ]
+"12167" [label = <(METHOD_RETURN,void)<SUB>2268</SUB>> ]
+  "12161" -> "12167" 
+  "12154" -> "12161" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/235-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/235-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/235-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/235-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "SetIntArrayRegion" {  
-"12179" [label = <(SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,SetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2278</SUB>> ]
-"12172" [label = <(METHOD,SetIntArrayRegion)<SUB>2276</SUB>> ]
-"12185" [label = <(METHOD_RETURN,void)<SUB>2276</SUB>> ]
-  "12179" -> "12185" 
-  "12172" -> "12179" 
+"12176" [label = <(SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,SetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2276</SUB>> ]
+"12169" [label = <(METHOD,SetIntArrayRegion)<SUB>2274</SUB>> ]
+"12182" [label = <(METHOD_RETURN,void)<SUB>2274</SUB>> ]
+  "12176" -> "12182" 
+  "12169" -> "12176" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/236-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/236-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/236-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/236-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "SetLongArrayRegion" {  
-"12194" [label = <(SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,SetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2283</SUB>> ]
-"12187" [label = <(METHOD,SetLongArrayRegion)<SUB>2281</SUB>> ]
-"12200" [label = <(METHOD_RETURN,void)<SUB>2281</SUB>> ]
-  "12194" -> "12200" 
-  "12187" -> "12194" 
+"12191" [label = <(SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,SetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2281</SUB>> ]
+"12184" [label = <(METHOD,SetLongArrayRegion)<SUB>2279</SUB>> ]
+"12197" [label = <(METHOD_RETURN,void)<SUB>2279</SUB>> ]
+  "12191" -> "12197" 
+  "12184" -> "12191" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/237-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/237-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/237-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/237-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,7 +1,7 @@
 digraph "SetShortArrayRegion" {  
-"12209" [label = <(SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,SetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2288</SUB>> ]
-"12202" [label = <(METHOD,SetShortArrayRegion)<SUB>2286</SUB>> ]
-"12215" [label = <(METHOD_RETURN,void)<SUB>2286</SUB>> ]
-  "12209" -> "12215" 
-  "12202" -> "12209" 
+"12206" [label = <(SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,SetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2286</SUB>> ]
+"12199" [label = <(METHOD,SetShortArrayRegion)<SUB>2284</SUB>> ]
+"12212" [label = <(METHOD_RETURN,void)<SUB>2284</SUB>> ]
+  "12206" -> "12212" 
+  "12199" -> "12206" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/238-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/238-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/238-cfg.dot	2023-06-07 19:34:22.187390822 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/238-cfg.dot	2023-06-07 19:34:28.697390214 +0330
@@ -1,9 +1,9 @@
 digraph "RegisterNatives" {  
-"12223" [label = <(RETURN,return RegisterNativeMethods(env, java_class, methods, method_count, true);,return RegisterNativeMethods(env, java_class, methods, method_count, true);)<SUB>2294</SUB>> ]
-"12224" [label = <(RegisterNativeMethods,RegisterNativeMethods(env, java_class, methods, method_count, true))<SUB>2294</SUB>> ]
-"12217" [label = <(METHOD,RegisterNatives)<SUB>2292</SUB>> ]
-"12230" [label = <(METHOD_RETURN,jint)<SUB>2292</SUB>> ]
-  "12223" -> "12230" 
-  "12224" -> "12223" 
-  "12217" -> "12224" 
+"12220" [label = <(RETURN,return RegisterNativeMethods(env, java_class, methods, method_count, true);,return RegisterNativeMethods(env, java_class, methods, method_count, true);)<SUB>2292</SUB>> ]
+"12221" [label = <(RegisterNativeMethods,RegisterNativeMethods(env, java_class, methods, method_count, true))<SUB>2292</SUB>> ]
+"12214" [label = <(METHOD,RegisterNatives)<SUB>2290</SUB>> ]
+"12227" [label = <(METHOD_RETURN,jint)<SUB>2290</SUB>> ]
+  "12220" -> "12227" 
+  "12221" -> "12220" 
+  "12214" -> "12221" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/239-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/239-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/239-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/239-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,492 +1,492 @@
 digraph "RegisterNativeMethods" {  
-"12255" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2304</SUB>> ]
-"12276" [label = <(soa,soa(env))<SUB>2305</SUB>> ]
-"12278" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2306</SUB>> ]
-"12287" [label = <(&lt;operator&gt;.assignment,Handle&lt;mirror::Class&gt; c = hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2307</SUB>> ]
-"12325" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2313</SUB>> ]
-"12708" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2428</SUB>> ]
-"12240" [label = <(UNLIKELY,UNLIKELY(method_count &lt; 0))<SUB>2299</SUB>> ]
-"12279" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2306</SUB>> ]
-"12282" [label = <(hs,hs(soa.Self()))<SUB>2306</SUB>> ]
-"12288" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Class&gt; c)<SUB>2307</SUB>> ]
-"12295" [label = <(NewHandle,hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2307</SUB>> ]
-"12309" [label = <(UNLIKELY,UNLIKELY(method_count == 0))<SUB>2308</SUB>> ]
-"12351" [label = <(&lt;operator&gt;.lessThan,i &lt; method_count)<SUB>2314</SUB>> ]
-"12354" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2314</SUB>> ]
-"12241" [label = <(&lt;operator&gt;.lessThan,method_count &lt; 0)<SUB>2299</SUB>> ]
-"12245" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;negative method count: %d&quot;,\012                                       method_count))<SUB>2300</SUB>> ]
-"12253" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2302</SUB>> ]
-"12283" [label = <(Self,soa.Self())<SUB>2306</SUB>> ]
-"12289" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Class)<SUB>2307</SUB>> ]
-"12296" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>2307</SUB>> ]
-"12299" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2307</SUB>> ]
-"12310" [label = <(&lt;operator&gt;.equals,method_count == 0)<SUB>2308</SUB>> ]
-"12314" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2309</SUB>> ]
-"12323" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2311</SUB>> ]
-"12348" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2314</SUB>> ]
-"12358" [label = <(&lt;operator&gt;.assignment,* name = methods[i].name)<SUB>2315</SUB>> ]
-"12366" [label = <(&lt;operator&gt;.assignment,* sig = methods[i].signature)<SUB>2316</SUB>> ]
-"12374" [label = <(&lt;operator&gt;.assignment,* fnPtr = methods[i].fnPtr)<SUB>2317</SUB>> ]
-"12437" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2328</SUB>> ]
-"12452" [label = <(&lt;operator&gt;.assignment,* m = nullptr)<SUB>2366</SUB>> ]
-"12456" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm-&gt;IsCheckJniEnabled())<SUB>2367</SUB>> ]
-"12670" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod() &lt;&lt; &quot;]&quot;)<SUB>2411</SUB>> ]
-"12698" [label = <(&lt;operator&gt;.assignment,* final_function_ptr = m-&gt;RegisterNative(fnPtr, is_fast))<SUB>2425</SUB>> ]
-"12706" [label = <(UNUSED,UNUSED(final_function_ptr))<SUB>2426</SUB>> ]
-"12246" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2300</SUB>> ]
-"12261" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2304</SUB>> ]
-"12284" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2306</SUB>> ]
-"12291" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2307</SUB>> ]
-"12298" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>2307</SUB>> ]
-"12300" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2307</SUB>> ]
-"12315" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;)<SUB>2309</SUB>> ]
-"12319" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2310</SUB>> ]
-"12331" [label = <(UNLIKELY,UNLIKELY((methods) == nullptr))<SUB>2313</SUB>> ]
-"12360" [label = <(&lt;operator&gt;.fieldAccess,methods[i].name)<SUB>2315</SUB>> ]
-"12368" [label = <(&lt;operator&gt;.fieldAccess,methods[i].signature)<SUB>2316</SUB>> ]
-"12376" [label = <(&lt;operator&gt;.fieldAccess,methods[i].fnPtr)<SUB>2317</SUB>> ]
-"12382" [label = <(UNLIKELY,UNLIKELY(name == nullptr))<SUB>2318</SUB>> ]
-"12441" [label = <(&lt;operator&gt;.equals,*sig == '!')<SUB>2358</SUB>> ]
-"12458" [label = <(IsCheckJniEnabled,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm-&gt;IsCheckJniEnabled())<SUB>2367</SUB>> ]
-"12479" [label = <(&lt;operator&gt;.notEquals,current_class != nullptr)<SUB>2369</SUB>> ]
-"12482" [label = <(&lt;operator&gt;.assignment,current_class = current_class-&gt;GetSuperClass())<SUB>2370</SUB>> ]
-"12546" [label = <(&lt;operator&gt;.equals,m == nullptr)<SUB>2390</SUB>> ]
-"12671" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2411</SUB>> ]
-"12682" [label = <(UNLIKELY,UNLIKELY(is_fast))<SUB>2413</SUB>> ]
-"12700" [label = <(RegisterNative,m-&gt;RegisterNative(fnPtr, is_fast))<SUB>2425</SUB>> ]
-"12247" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2300</SUB>> ]
-"12249" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2300</SUB>> ]
-"12262" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2304</SUB>> ]
-"12266" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;java_class == null&quot;))<SUB>2304</SUB>> ]
-"12273" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2304</SUB>> ]
-"12286" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2306</SUB>> ]
-"12293" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2307</SUB>> ]
-"12301" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2307</SUB>> ]
-"12304" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2307</SUB>> ]
-"12316" [label = <(LOG,LOG(WARNING))<SUB>2309</SUB>> ]
-"12320" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2310</SUB>> ]
-"12332" [label = <(&lt;operator&gt;.equals,(methods) == nullptr)<SUB>2313</SUB>> ]
-"12336" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;methods == null&quot;))<SUB>2313</SUB>> ]
-"12343" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2313</SUB>> ]
-"12361" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2315</SUB>> ]
-"12364" [label = <(FIELD_IDENTIFIER,name,name)<SUB>2315</SUB>> ]
-"12369" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2316</SUB>> ]
-"12372" [label = <(FIELD_IDENTIFIER,signature,signature)<SUB>2316</SUB>> ]
-"12377" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2317</SUB>> ]
-"12380" [label = <(FIELD_IDENTIFIER,fnPtr,fnPtr)<SUB>2317</SUB>> ]
-"12383" [label = <(&lt;operator&gt;.equals,name == nullptr)<SUB>2318</SUB>> ]
-"12387" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method name&quot;, i, return_errors))<SUB>2319</SUB>> ]
-"12396" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2320</SUB>> ]
-"12442" [label = <(&lt;operator&gt;.indirection,*sig)<SUB>2358</SUB>> ]
-"12446" [label = <(&lt;operator&gt;.assignment,is_fast = true)<SUB>2359</SUB>> ]
-"12449" [label = <(&lt;operator&gt;.preIncrement,++sig)<SUB>2360</SUB>> ]
-"12459" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm-&gt;IsCheckJniEnabled)<SUB>2367</SUB>> ]
-"12467" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; current_class = c.Get())<SUB>2368</SUB>> ]
-"12484" [label = <(GetSuperClass,current_class-&gt;GetSuperClass())<SUB>2370</SUB>> ]
-"12489" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;true&gt;(current_class.Ptr(), name, sig))<SUB>2372</SUB>> ]
-"12509" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;false&gt;(current_class.Ptr(), name, sig))<SUB>2378</SUB>> ]
-"12550" [label = <(DumpClass,c-&gt;DumpClass(\012            LOG_STREAM(return_errors\012 ? ::android::base::ERROR\012 : ::android::base::FATAL_WITHOUT_ABORT),\012            mirror::Class::kDumpClassFullDetail))<SUB>2391</SUB>> ]
-"12572" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;\012 &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2396</SUB>> ]
-"12611" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;static or non-static&quot;))<SUB>2400</SUB>> ]
-"12620" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2401</SUB>> ]
-"12672" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot;)<SUB>2411</SUB>> ]
-"12676" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2411</SUB>> ]
-"12685" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2420</SUB>> ]
-"12694" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2421</SUB>> ]
-"12701" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;RegisterNative)<SUB>2425</SUB>> ]
-"12267" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2304</SUB>> ]
-"12303" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2307</SUB>> ]
-"12306" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2307</SUB>> ]
-"12322" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2310</SUB>> ]
-"12337" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2313</SUB>> ]
-"12389" [label = <(Get,c.Get())<SUB>2319</SUB>> ]
-"12460" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>2367</SUB>> ]
-"12464" [label = <(FIELD_IDENTIFIER,IsCheckJniEnabled,IsCheckJniEnabled)<SUB>2367</SUB>> ]
-"12468" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; current_class)<SUB>2368</SUB>> ]
-"12475" [label = <(Get,c.Get())<SUB>2368</SUB>> ]
-"12485" [label = <(&lt;operator&gt;.indirectFieldAccess,current_class-&gt;GetSuperClass)<SUB>2370</SUB>> ]
-"12491" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;true&gt;(current_class.Ptr(), name, sig))<SUB>2372</SUB>> ]
-"12504" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2373</SUB>> ]
-"12511" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;false&gt;(current_class.Ptr(), name, sig))<SUB>2378</SUB>> ]
-"12524" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2379</SUB>> ]
-"12551" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;DumpClass)<SUB>2391</SUB>> ]
-"12554" [label = <(LOG_STREAM,LOG_STREAM(return_errors\012 ? ::android::base::ERROR\012 : ::android::base::FATAL_WITHOUT_ABORT))<SUB>2392</SUB>> ]
-"12567" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::kDumpClassFullDetail)<SUB>2395</SUB>> ]
-"12573" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;)<SUB>2396</SUB>> ]
-"12601" [label = <(ToModifiedUtf8,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2399</SUB>> ]
-"12613" [label = <(Get,c.Get())<SUB>2400</SUB>> ]
-"12673" [label = <(VLOG,VLOG(jni))<SUB>2411</SUB>> ]
-"12677" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2411</SUB>> ]
-"12686" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot;)<SUB>2420</SUB>> ]
-"12690" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2420</SUB>> ]
-"12703" [label = <(FIELD_IDENTIFIER,RegisterNative,RegisterNative)<SUB>2425</SUB>> ]
-"12268" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2304</SUB>> ]
-"12270" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2304</SUB>> ]
-"12338" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2313</SUB>> ]
-"12340" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2313</SUB>> ]
-"12390" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2319</SUB>> ]
-"12401" [label = <(UNLIKELY,UNLIKELY(sig == nullptr))<SUB>2321</SUB>> ]
-"12461" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>2367</SUB>> ]
-"12463" [label = <(FIELD_IDENTIFIER,vm,vm)<SUB>2367</SUB>> ]
-"12469" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2368</SUB>> ]
-"12476" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2368</SUB>> ]
-"12487" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>2370</SUB>> ]
-"12492" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;true)<SUB>2372</SUB>> ]
-"12495" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class.Ptr(), name, sig))<SUB>2372</SUB>> ]
-"12512" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;false)<SUB>2378</SUB>> ]
-"12515" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class.Ptr(), name, sig))<SUB>2378</SUB>> ]
-"12532" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;\012 &lt;&lt; &quot;This is slow, consider changing your RegisterNatives calls.&quot;)<SUB>2384</SUB>> ]
-"12542" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = false)<SUB>2386</SUB>> ]
-"12553" [label = <(FIELD_IDENTIFIER,DumpClass,DumpClass)<SUB>2391</SUB>> ]
-"12555" [label = <(&lt;operator&gt;.conditional,return_errors\012 ? ::android::base::ERROR\012 : ::android::base::FATAL_WITHOUT_ABORT)<SUB>2392</SUB>> ]
-"12568" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2395</SUB>> ]
-"12571" [label = <(FIELD_IDENTIFIER,kDumpClassFullDetail,kDumpClassFullDetail)<SUB>2395</SUB>> ]
-"12574" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2396</SUB>> ]
-"12602" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8)<SUB>2399</SUB>> ]
-"12614" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2400</SUB>> ]
-"12625" [label = <(&lt;operator&gt;.logicalNot,!m-&gt;IsNative())<SUB>2402</SUB>> ]
-"12679" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2411</SUB>> ]
-"12687" [label = <(LOG,LOG(WARNING))<SUB>2420</SUB>> ]
-"12691" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2420</SUB>> ]
-"12392" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2319</SUB>> ]
-"12402" [label = <(&lt;operator&gt;.equals,sig == nullptr)<SUB>2321</SUB>> ]
-"12406" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method signature&quot;, i, return_errors))<SUB>2322</SUB>> ]
-"12415" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2323</SUB>> ]
-"12471" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2368</SUB>> ]
-"12478" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2368</SUB>> ]
-"12496" [label = <(&lt;operator&gt;.expressionList,current_class.Ptr(), name, sig)<SUB>2372</SUB>> ]
-"12516" [label = <(&lt;operator&gt;.expressionList,current_class.Ptr(), name, sig)<SUB>2378</SUB>> ]
-"12533" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;)<SUB>2384</SUB>> ]
-"12557" [label = <(&lt;operator&gt;.fieldAccess,::android::base::ERROR)<SUB>2393</SUB>> ]
-"12562" [label = <(&lt;operator&gt;.fieldAccess,::android::base::FATAL_WITHOUT_ABORT)<SUB>2394</SUB>> ]
-"12575" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2396</SUB>> ]
-"12603" [label = <(GetLocation,c-&gt;GetDexCache()-&gt;GetLocation())<SUB>2399</SUB>> ]
-"12610" [label = <(FIELD_IDENTIFIER,ToModifiedUtf8,ToModifiedUtf8)<SUB>2399</SUB>> ]
-"12616" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2400</SUB>> ]
-"12626" [label = <(IsNative,m-&gt;IsNative())<SUB>2402</SUB>> ]
-"12631" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig\012 &lt;&lt; &quot; as native&quot;)<SUB>2403</SUB>> ]
-"12659" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;native&quot;))<SUB>2407</SUB>> ]
-"12668" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2408</SUB>> ]
-"12693" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2420</SUB>> ]
-"12408" [label = <(Get,c.Get())<SUB>2322</SUB>> ]
-"12473" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2368</SUB>> ]
-"12497" [label = <(Ptr,current_class.Ptr())<SUB>2372</SUB>> ]
-"12517" [label = <(Ptr,current_class.Ptr())<SUB>2378</SUB>> ]
-"12534" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name)<SUB>2384</SUB>> ]
-"12558" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2393</SUB>> ]
-"12561" [label = <(FIELD_IDENTIFIER,ERROR,ERROR)<SUB>2393</SUB>> ]
-"12563" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2394</SUB>> ]
-"12566" [label = <(FIELD_IDENTIFIER,FATAL_WITHOUT_ABORT,FATAL_WITHOUT_ABORT)<SUB>2394</SUB>> ]
-"12576" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2396</SUB>> ]
-"12604" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation)<SUB>2399</SUB>> ]
-"12627" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsNative)<SUB>2402</SUB>> ]
-"12632" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2403</SUB>> ]
-"12661" [label = <(Get,c.Get())<SUB>2407</SUB>> ]
-"12409" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2322</SUB>> ]
-"12420" [label = <(UNLIKELY,UNLIKELY(fnPtr == nullptr))<SUB>2324</SUB>> ]
-"12498" [label = <(&lt;operator&gt;.fieldAccess,current_class.Ptr)<SUB>2372</SUB>> ]
-"12518" [label = <(&lt;operator&gt;.fieldAccess,current_class.Ptr)<SUB>2378</SUB>> ]
-"12535" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot;)<SUB>2384</SUB>> ]
-"12577" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2396</SUB>> ]
-"12605" [label = <(GetDexCache,c-&gt;GetDexCache())<SUB>2399</SUB>> ]
-"12609" [label = <(FIELD_IDENTIFIER,GetLocation,GetLocation)<SUB>2399</SUB>> ]
-"12629" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2402</SUB>> ]
-"12633" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2403</SUB>> ]
-"12662" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2407</SUB>> ]
-"12411" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2322</SUB>> ]
-"12421" [label = <(&lt;operator&gt;.equals,fnPtr == nullptr)<SUB>2324</SUB>> ]
-"12425" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;native function&quot;, i, return_errors))<SUB>2325</SUB>> ]
-"12434" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2326</SUB>> ]
-"12500" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2372</SUB>> ]
-"12520" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2378</SUB>> ]
-"12536" [label = <(LOG,LOG(WARNING))<SUB>2384</SUB>> ]
-"12578" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;)<SUB>2396</SUB>> ]
-"12593" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2398</SUB>> ]
-"12606" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache)<SUB>2399</SUB>> ]
-"12634" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2403</SUB>> ]
-"12664" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2407</SUB>> ]
-"12427" [label = <(Get,c.Get())<SUB>2325</SUB>> ]
-"12579" [label = <(LOG,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL))<SUB>2396</SUB>> ]
-"12594" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2398</SUB>> ]
-"12608" [label = <(FIELD_IDENTIFIER,GetDexCache,GetDexCache)<SUB>2399</SUB>> ]
-"12635" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2403</SUB>> ]
-"12428" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2325</SUB>> ]
-"12580" [label = <(&lt;operator&gt;.conditional,return_errors ? ::android::base::ERROR : ::android::base::FATAL)<SUB>2396</SUB>> ]
-"12596" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2398</SUB>> ]
-"12636" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;)<SUB>2403</SUB>> ]
-"12651" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2405</SUB>> ]
-"12430" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2325</SUB>> ]
-"12582" [label = <(&lt;operator&gt;.fieldAccess,::android::base::ERROR)<SUB>2396</SUB>> ]
-"12587" [label = <(&lt;operator&gt;.fieldAccess,::android::base::FATAL)<SUB>2396</SUB>> ]
-"12637" [label = <(LOG,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL))<SUB>2403</SUB>> ]
-"12652" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2405</SUB>> ]
-"12583" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2396</SUB>> ]
-"12586" [label = <(FIELD_IDENTIFIER,ERROR,ERROR)<SUB>2396</SUB>> ]
-"12588" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2396</SUB>> ]
-"12591" [label = <(FIELD_IDENTIFIER,FATAL,FATAL)<SUB>2396</SUB>> ]
-"12638" [label = <(&lt;operator&gt;.conditional,return_errors ? ::android::base::ERROR : ::android::base::FATAL)<SUB>2403</SUB>> ]
-"12654" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2405</SUB>> ]
-"12640" [label = <(&lt;operator&gt;.fieldAccess,::android::base::ERROR)<SUB>2403</SUB>> ]
-"12645" [label = <(&lt;operator&gt;.fieldAccess,::android::base::FATAL)<SUB>2403</SUB>> ]
-"12641" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2403</SUB>> ]
-"12644" [label = <(FIELD_IDENTIFIER,ERROR,ERROR)<SUB>2403</SUB>> ]
-"12646" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2403</SUB>> ]
-"12649" [label = <(FIELD_IDENTIFIER,FATAL,FATAL)<SUB>2403</SUB>> ]
-"12232" [label = <(METHOD,RegisterNativeMethods)<SUB>2297</SUB>> ]
-"12710" [label = <(METHOD_RETURN,jint)<SUB>2297</SUB>> ]
-  "12255" -> "12262" 
-  "12255" -> "12276" 
-  "12276" -> "12279" 
-  "12278" -> "12293" 
-  "12287" -> "12310" 
-  "12325" -> "12332" 
-  "12325" -> "12348" 
-  "12708" -> "12710" 
-  "12240" -> "12247" 
-  "12240" -> "12255" 
-  "12279" -> "12286" 
-  "12282" -> "12278" 
-  "12288" -> "12298" 
-  "12295" -> "12287" 
-  "12309" -> "12316" 
-  "12309" -> "12325" 
-  "12351" -> "12361" 
-  "12351" -> "12708" 
-  "12354" -> "12351" 
-  "12241" -> "12240" 
-  "12245" -> "12253" 
-  "12253" -> "12710" 
-  "12283" -> "12282" 
-  "12289" -> "12288" 
-  "12296" -> "12303" 
-  "12299" -> "12295" 
-  "12310" -> "12309" 
-  "12314" -> "12323" 
-  "12323" -> "12710" 
-  "12348" -> "12351" 
-  "12358" -> "12369" 
-  "12366" -> "12377" 
-  "12374" -> "12383" 
-  "12437" -> "12442" 
-  "12452" -> "12461" 
-  "12456" -> "12473" 
-  "12670" -> "12682" 
-  "12698" -> "12706" 
-  "12706" -> "12354" 
-  "12246" -> "12245" 
-  "12261" -> "12268" 
-  "12261" -> "12276" 
-  "12284" -> "12283" 
-  "12291" -> "12289" 
-  "12298" -> "12296" 
-  "12300" -> "12299" 
-  "12315" -> "12322" 
-  "12319" -> "12314" 
-  "12331" -> "12338" 
-  "12331" -> "12348" 
-  "12360" -> "12358" 
-  "12368" -> "12366" 
-  "12376" -> "12374" 
-  "12382" -> "12392" 
-  "12382" -> "12402" 
-  "12441" -> "12446" 
-  "12441" -> "12452" 
-  "12458" -> "12456" 
-  "12479" -> "12492" 
-  "12479" -> "12546" 
-  "12482" -> "12479" 
-  "12546" -> "12553" 
-  "12546" -> "12629" 
-  "12671" -> "12670" 
-  "12682" -> "12687" 
-  "12682" -> "12703" 
-  "12700" -> "12698" 
-  "12247" -> "12249" 
-  "12249" -> "12246" 
-  "12262" -> "12261" 
-  "12266" -> "12273" 
-  "12273" -> "12710" 
-  "12286" -> "12284" 
-  "12293" -> "12291" 
-  "12301" -> "12306" 
-  "12304" -> "12300" 
-  "12316" -> "12315" 
-  "12320" -> "12319" 
-  "12332" -> "12331" 
-  "12336" -> "12343" 
-  "12343" -> "12710" 
-  "12361" -> "12364" 
-  "12364" -> "12360" 
-  "12369" -> "12372" 
-  "12372" -> "12368" 
-  "12377" -> "12380" 
-  "12380" -> "12376" 
-  "12383" -> "12382" 
-  "12387" -> "12396" 
-  "12396" -> "12710" 
-  "12442" -> "12441" 
+"12252" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2302</SUB>> ]
+"12273" [label = <(soa,soa(env))<SUB>2303</SUB>> ]
+"12275" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2304</SUB>> ]
+"12284" [label = <(&lt;operator&gt;.assignment,Handle&lt;mirror::Class&gt; c = hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2305</SUB>> ]
+"12322" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2311</SUB>> ]
+"12705" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2426</SUB>> ]
+"12237" [label = <(UNLIKELY,UNLIKELY(method_count &lt; 0))<SUB>2297</SUB>> ]
+"12276" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2304</SUB>> ]
+"12279" [label = <(hs,hs(soa.Self()))<SUB>2304</SUB>> ]
+"12285" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Class&gt; c)<SUB>2305</SUB>> ]
+"12292" [label = <(NewHandle,hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2305</SUB>> ]
+"12306" [label = <(UNLIKELY,UNLIKELY(method_count == 0))<SUB>2306</SUB>> ]
+"12348" [label = <(&lt;operator&gt;.lessThan,i &lt; method_count)<SUB>2312</SUB>> ]
+"12351" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2312</SUB>> ]
+"12238" [label = <(&lt;operator&gt;.lessThan,method_count &lt; 0)<SUB>2297</SUB>> ]
+"12242" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;negative method count: %d&quot;,\012                                       method_count))<SUB>2298</SUB>> ]
+"12250" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2300</SUB>> ]
+"12280" [label = <(Self,soa.Self())<SUB>2304</SUB>> ]
+"12286" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Class)<SUB>2305</SUB>> ]
+"12293" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>2305</SUB>> ]
+"12296" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2305</SUB>> ]
+"12307" [label = <(&lt;operator&gt;.equals,method_count == 0)<SUB>2306</SUB>> ]
+"12311" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2307</SUB>> ]
+"12320" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2309</SUB>> ]
+"12345" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2312</SUB>> ]
+"12355" [label = <(&lt;operator&gt;.assignment,* name = methods[i].name)<SUB>2313</SUB>> ]
+"12363" [label = <(&lt;operator&gt;.assignment,* sig = methods[i].signature)<SUB>2314</SUB>> ]
+"12371" [label = <(&lt;operator&gt;.assignment,* fnPtr = methods[i].fnPtr)<SUB>2315</SUB>> ]
+"12434" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2326</SUB>> ]
+"12449" [label = <(&lt;operator&gt;.assignment,* m = nullptr)<SUB>2364</SUB>> ]
+"12453" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm-&gt;IsCheckJniEnabled())<SUB>2365</SUB>> ]
+"12667" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod() &lt;&lt; &quot;]&quot;)<SUB>2409</SUB>> ]
+"12695" [label = <(&lt;operator&gt;.assignment,* final_function_ptr = m-&gt;RegisterNative(fnPtr, is_fast))<SUB>2423</SUB>> ]
+"12703" [label = <(UNUSED,UNUSED(final_function_ptr))<SUB>2424</SUB>> ]
+"12243" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2298</SUB>> ]
+"12258" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2302</SUB>> ]
+"12281" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2304</SUB>> ]
+"12288" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2305</SUB>> ]
+"12295" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>2305</SUB>> ]
+"12297" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2305</SUB>> ]
+"12312" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;)<SUB>2307</SUB>> ]
+"12316" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2308</SUB>> ]
+"12328" [label = <(UNLIKELY,UNLIKELY((methods) == nullptr))<SUB>2311</SUB>> ]
+"12357" [label = <(&lt;operator&gt;.fieldAccess,methods[i].name)<SUB>2313</SUB>> ]
+"12365" [label = <(&lt;operator&gt;.fieldAccess,methods[i].signature)<SUB>2314</SUB>> ]
+"12373" [label = <(&lt;operator&gt;.fieldAccess,methods[i].fnPtr)<SUB>2315</SUB>> ]
+"12379" [label = <(UNLIKELY,UNLIKELY(name == nullptr))<SUB>2316</SUB>> ]
+"12438" [label = <(&lt;operator&gt;.equals,*sig == '!')<SUB>2356</SUB>> ]
+"12455" [label = <(IsCheckJniEnabled,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm-&gt;IsCheckJniEnabled())<SUB>2365</SUB>> ]
+"12476" [label = <(&lt;operator&gt;.notEquals,current_class != nullptr)<SUB>2367</SUB>> ]
+"12479" [label = <(&lt;operator&gt;.assignment,current_class = current_class-&gt;GetSuperClass())<SUB>2368</SUB>> ]
+"12543" [label = <(&lt;operator&gt;.equals,m == nullptr)<SUB>2388</SUB>> ]
+"12668" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2409</SUB>> ]
+"12679" [label = <(UNLIKELY,UNLIKELY(is_fast))<SUB>2411</SUB>> ]
+"12697" [label = <(RegisterNative,m-&gt;RegisterNative(fnPtr, is_fast))<SUB>2423</SUB>> ]
+"12244" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2298</SUB>> ]
+"12246" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2298</SUB>> ]
+"12259" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2302</SUB>> ]
+"12263" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;java_class == null&quot;))<SUB>2302</SUB>> ]
+"12270" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2302</SUB>> ]
+"12283" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2304</SUB>> ]
+"12290" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2305</SUB>> ]
+"12298" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2305</SUB>> ]
+"12301" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2305</SUB>> ]
+"12313" [label = <(LOG,LOG(WARNING))<SUB>2307</SUB>> ]
+"12317" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2308</SUB>> ]
+"12329" [label = <(&lt;operator&gt;.equals,(methods) == nullptr)<SUB>2311</SUB>> ]
+"12333" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;methods == null&quot;))<SUB>2311</SUB>> ]
+"12340" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2311</SUB>> ]
+"12358" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2313</SUB>> ]
+"12361" [label = <(FIELD_IDENTIFIER,name,name)<SUB>2313</SUB>> ]
+"12366" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2314</SUB>> ]
+"12369" [label = <(FIELD_IDENTIFIER,signature,signature)<SUB>2314</SUB>> ]
+"12374" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2315</SUB>> ]
+"12377" [label = <(FIELD_IDENTIFIER,fnPtr,fnPtr)<SUB>2315</SUB>> ]
+"12380" [label = <(&lt;operator&gt;.equals,name == nullptr)<SUB>2316</SUB>> ]
+"12384" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method name&quot;, i, return_errors))<SUB>2317</SUB>> ]
+"12393" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2318</SUB>> ]
+"12439" [label = <(&lt;operator&gt;.indirection,*sig)<SUB>2356</SUB>> ]
+"12443" [label = <(&lt;operator&gt;.assignment,is_fast = true)<SUB>2357</SUB>> ]
+"12446" [label = <(&lt;operator&gt;.preIncrement,++sig)<SUB>2358</SUB>> ]
+"12456" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm-&gt;IsCheckJniEnabled)<SUB>2365</SUB>> ]
+"12464" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; current_class = c.Get())<SUB>2366</SUB>> ]
+"12481" [label = <(GetSuperClass,current_class-&gt;GetSuperClass())<SUB>2368</SUB>> ]
+"12486" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;true&gt;(current_class.Ptr(), name, sig))<SUB>2370</SUB>> ]
+"12506" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;false&gt;(current_class.Ptr(), name, sig))<SUB>2376</SUB>> ]
+"12547" [label = <(DumpClass,c-&gt;DumpClass(\012            LOG_STREAM(return_errors\012 ? ::android::base::ERROR\012 : ::android::base::FATAL_WITHOUT_ABORT),\012            mirror::Class::kDumpClassFullDetail))<SUB>2389</SUB>> ]
+"12569" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;\012 &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2394</SUB>> ]
+"12608" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;static or non-static&quot;))<SUB>2398</SUB>> ]
+"12617" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2399</SUB>> ]
+"12669" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot;)<SUB>2409</SUB>> ]
+"12673" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2409</SUB>> ]
+"12682" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2418</SUB>> ]
+"12691" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2419</SUB>> ]
+"12698" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;RegisterNative)<SUB>2423</SUB>> ]
+"12264" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2302</SUB>> ]
+"12300" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2305</SUB>> ]
+"12303" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2305</SUB>> ]
+"12319" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2308</SUB>> ]
+"12334" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2311</SUB>> ]
+"12386" [label = <(Get,c.Get())<SUB>2317</SUB>> ]
+"12457" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>2365</SUB>> ]
+"12461" [label = <(FIELD_IDENTIFIER,IsCheckJniEnabled,IsCheckJniEnabled)<SUB>2365</SUB>> ]
+"12465" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; current_class)<SUB>2366</SUB>> ]
+"12472" [label = <(Get,c.Get())<SUB>2366</SUB>> ]
+"12482" [label = <(&lt;operator&gt;.indirectFieldAccess,current_class-&gt;GetSuperClass)<SUB>2368</SUB>> ]
+"12488" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;true&gt;(current_class.Ptr(), name, sig))<SUB>2370</SUB>> ]
+"12501" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2371</SUB>> ]
+"12508" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;false&gt;(current_class.Ptr(), name, sig))<SUB>2376</SUB>> ]
+"12521" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2377</SUB>> ]
+"12548" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;DumpClass)<SUB>2389</SUB>> ]
+"12551" [label = <(LOG_STREAM,LOG_STREAM(return_errors\012 ? ::android::base::ERROR\012 : ::android::base::FATAL_WITHOUT_ABORT))<SUB>2390</SUB>> ]
+"12564" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::kDumpClassFullDetail)<SUB>2393</SUB>> ]
+"12570" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;)<SUB>2394</SUB>> ]
+"12598" [label = <(ToModifiedUtf8,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2397</SUB>> ]
+"12610" [label = <(Get,c.Get())<SUB>2398</SUB>> ]
+"12670" [label = <(VLOG,VLOG(jni))<SUB>2409</SUB>> ]
+"12674" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2409</SUB>> ]
+"12683" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot;)<SUB>2418</SUB>> ]
+"12687" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2418</SUB>> ]
+"12700" [label = <(FIELD_IDENTIFIER,RegisterNative,RegisterNative)<SUB>2423</SUB>> ]
+"12265" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2302</SUB>> ]
+"12267" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2302</SUB>> ]
+"12335" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2311</SUB>> ]
+"12337" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2311</SUB>> ]
+"12387" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2317</SUB>> ]
+"12398" [label = <(UNLIKELY,UNLIKELY(sig == nullptr))<SUB>2319</SUB>> ]
+"12458" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>2365</SUB>> ]
+"12460" [label = <(FIELD_IDENTIFIER,vm,vm)<SUB>2365</SUB>> ]
+"12466" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2366</SUB>> ]
+"12473" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2366</SUB>> ]
+"12484" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>2368</SUB>> ]
+"12489" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;true)<SUB>2370</SUB>> ]
+"12492" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class.Ptr(), name, sig))<SUB>2370</SUB>> ]
+"12509" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;false)<SUB>2376</SUB>> ]
+"12512" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class.Ptr(), name, sig))<SUB>2376</SUB>> ]
+"12529" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;\012 &lt;&lt; &quot;This is slow, consider changing your RegisterNatives calls.&quot;)<SUB>2382</SUB>> ]
+"12539" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = false)<SUB>2384</SUB>> ]
+"12550" [label = <(FIELD_IDENTIFIER,DumpClass,DumpClass)<SUB>2389</SUB>> ]
+"12552" [label = <(&lt;operator&gt;.conditional,return_errors\012 ? ::android::base::ERROR\012 : ::android::base::FATAL_WITHOUT_ABORT)<SUB>2390</SUB>> ]
+"12565" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2393</SUB>> ]
+"12568" [label = <(FIELD_IDENTIFIER,kDumpClassFullDetail,kDumpClassFullDetail)<SUB>2393</SUB>> ]
+"12571" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2394</SUB>> ]
+"12599" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8)<SUB>2397</SUB>> ]
+"12611" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2398</SUB>> ]
+"12622" [label = <(&lt;operator&gt;.logicalNot,!m-&gt;IsNative())<SUB>2400</SUB>> ]
+"12676" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2409</SUB>> ]
+"12684" [label = <(LOG,LOG(WARNING))<SUB>2418</SUB>> ]
+"12688" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2418</SUB>> ]
+"12389" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2317</SUB>> ]
+"12399" [label = <(&lt;operator&gt;.equals,sig == nullptr)<SUB>2319</SUB>> ]
+"12403" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method signature&quot;, i, return_errors))<SUB>2320</SUB>> ]
+"12412" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2321</SUB>> ]
+"12468" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2366</SUB>> ]
+"12475" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2366</SUB>> ]
+"12493" [label = <(&lt;operator&gt;.expressionList,current_class.Ptr(), name, sig)<SUB>2370</SUB>> ]
+"12513" [label = <(&lt;operator&gt;.expressionList,current_class.Ptr(), name, sig)<SUB>2376</SUB>> ]
+"12530" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;)<SUB>2382</SUB>> ]
+"12554" [label = <(&lt;operator&gt;.fieldAccess,::android::base::ERROR)<SUB>2391</SUB>> ]
+"12559" [label = <(&lt;operator&gt;.fieldAccess,::android::base::FATAL_WITHOUT_ABORT)<SUB>2392</SUB>> ]
+"12572" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2394</SUB>> ]
+"12600" [label = <(GetLocation,c-&gt;GetDexCache()-&gt;GetLocation())<SUB>2397</SUB>> ]
+"12607" [label = <(FIELD_IDENTIFIER,ToModifiedUtf8,ToModifiedUtf8)<SUB>2397</SUB>> ]
+"12613" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2398</SUB>> ]
+"12623" [label = <(IsNative,m-&gt;IsNative())<SUB>2400</SUB>> ]
+"12628" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig\012 &lt;&lt; &quot; as native&quot;)<SUB>2401</SUB>> ]
+"12656" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;native&quot;))<SUB>2405</SUB>> ]
+"12665" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2406</SUB>> ]
+"12690" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2418</SUB>> ]
+"12405" [label = <(Get,c.Get())<SUB>2320</SUB>> ]
+"12470" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2366</SUB>> ]
+"12494" [label = <(Ptr,current_class.Ptr())<SUB>2370</SUB>> ]
+"12514" [label = <(Ptr,current_class.Ptr())<SUB>2376</SUB>> ]
+"12531" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name)<SUB>2382</SUB>> ]
+"12555" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2391</SUB>> ]
+"12558" [label = <(FIELD_IDENTIFIER,ERROR,ERROR)<SUB>2391</SUB>> ]
+"12560" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2392</SUB>> ]
+"12563" [label = <(FIELD_IDENTIFIER,FATAL_WITHOUT_ABORT,FATAL_WITHOUT_ABORT)<SUB>2392</SUB>> ]
+"12573" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2394</SUB>> ]
+"12601" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation)<SUB>2397</SUB>> ]
+"12624" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsNative)<SUB>2400</SUB>> ]
+"12629" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2401</SUB>> ]
+"12658" [label = <(Get,c.Get())<SUB>2405</SUB>> ]
+"12406" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2320</SUB>> ]
+"12417" [label = <(UNLIKELY,UNLIKELY(fnPtr == nullptr))<SUB>2322</SUB>> ]
+"12495" [label = <(&lt;operator&gt;.fieldAccess,current_class.Ptr)<SUB>2370</SUB>> ]
+"12515" [label = <(&lt;operator&gt;.fieldAccess,current_class.Ptr)<SUB>2376</SUB>> ]
+"12532" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot;)<SUB>2382</SUB>> ]
+"12574" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2394</SUB>> ]
+"12602" [label = <(GetDexCache,c-&gt;GetDexCache())<SUB>2397</SUB>> ]
+"12606" [label = <(FIELD_IDENTIFIER,GetLocation,GetLocation)<SUB>2397</SUB>> ]
+"12626" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2400</SUB>> ]
+"12630" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2401</SUB>> ]
+"12659" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2405</SUB>> ]
+"12408" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2320</SUB>> ]
+"12418" [label = <(&lt;operator&gt;.equals,fnPtr == nullptr)<SUB>2322</SUB>> ]
+"12422" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;native function&quot;, i, return_errors))<SUB>2323</SUB>> ]
+"12431" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2324</SUB>> ]
+"12497" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2370</SUB>> ]
+"12517" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2376</SUB>> ]
+"12533" [label = <(LOG,LOG(WARNING))<SUB>2382</SUB>> ]
+"12575" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method &quot;)<SUB>2394</SUB>> ]
+"12590" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2396</SUB>> ]
+"12603" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache)<SUB>2397</SUB>> ]
+"12631" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2401</SUB>> ]
+"12661" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2405</SUB>> ]
+"12424" [label = <(Get,c.Get())<SUB>2323</SUB>> ]
+"12576" [label = <(LOG,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL))<SUB>2394</SUB>> ]
+"12591" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2396</SUB>> ]
+"12605" [label = <(FIELD_IDENTIFIER,GetDexCache,GetDexCache)<SUB>2397</SUB>> ]
+"12632" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2401</SUB>> ]
+"12425" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2323</SUB>> ]
+"12577" [label = <(&lt;operator&gt;.conditional,return_errors ? ::android::base::ERROR : ::android::base::FATAL)<SUB>2394</SUB>> ]
+"12593" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2396</SUB>> ]
+"12633" [label = <(&lt;operator&gt;.shiftLeft,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register non-native method &quot;)<SUB>2401</SUB>> ]
+"12648" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2403</SUB>> ]
+"12427" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2323</SUB>> ]
+"12579" [label = <(&lt;operator&gt;.fieldAccess,::android::base::ERROR)<SUB>2394</SUB>> ]
+"12584" [label = <(&lt;operator&gt;.fieldAccess,::android::base::FATAL)<SUB>2394</SUB>> ]
+"12634" [label = <(LOG,LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL))<SUB>2401</SUB>> ]
+"12649" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2403</SUB>> ]
+"12580" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2394</SUB>> ]
+"12583" [label = <(FIELD_IDENTIFIER,ERROR,ERROR)<SUB>2394</SUB>> ]
+"12585" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2394</SUB>> ]
+"12588" [label = <(FIELD_IDENTIFIER,FATAL,FATAL)<SUB>2394</SUB>> ]
+"12635" [label = <(&lt;operator&gt;.conditional,return_errors ? ::android::base::ERROR : ::android::base::FATAL)<SUB>2401</SUB>> ]
+"12651" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2403</SUB>> ]
+"12637" [label = <(&lt;operator&gt;.fieldAccess,::android::base::ERROR)<SUB>2401</SUB>> ]
+"12642" [label = <(&lt;operator&gt;.fieldAccess,::android::base::FATAL)<SUB>2401</SUB>> ]
+"12638" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2401</SUB>> ]
+"12641" [label = <(FIELD_IDENTIFIER,ERROR,ERROR)<SUB>2401</SUB>> ]
+"12643" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2401</SUB>> ]
+"12646" [label = <(FIELD_IDENTIFIER,FATAL,FATAL)<SUB>2401</SUB>> ]
+"12229" [label = <(METHOD,RegisterNativeMethods)<SUB>2295</SUB>> ]
+"12707" [label = <(METHOD_RETURN,jint)<SUB>2295</SUB>> ]
+  "12252" -> "12259" 
+  "12252" -> "12273" 
+  "12273" -> "12276" 
+  "12275" -> "12290" 
+  "12284" -> "12307" 
+  "12322" -> "12329" 
+  "12322" -> "12345" 
+  "12705" -> "12707" 
+  "12237" -> "12244" 
+  "12237" -> "12252" 
+  "12276" -> "12283" 
+  "12279" -> "12275" 
+  "12285" -> "12295" 
+  "12292" -> "12284" 
+  "12306" -> "12313" 
+  "12306" -> "12322" 
+  "12348" -> "12358" 
+  "12348" -> "12705" 
+  "12351" -> "12348" 
+  "12238" -> "12237" 
+  "12242" -> "12250" 
+  "12250" -> "12707" 
+  "12280" -> "12279" 
+  "12286" -> "12285" 
+  "12293" -> "12300" 
+  "12296" -> "12292" 
+  "12307" -> "12306" 
+  "12311" -> "12320" 
+  "12320" -> "12707" 
+  "12345" -> "12348" 
+  "12355" -> "12366" 
+  "12363" -> "12374" 
+  "12371" -> "12380" 
+  "12434" -> "12439" 
+  "12449" -> "12458" 
+  "12453" -> "12470" 
+  "12667" -> "12679" 
+  "12695" -> "12703" 
+  "12703" -> "12351" 
+  "12243" -> "12242" 
+  "12258" -> "12265" 
+  "12258" -> "12273" 
+  "12281" -> "12280" 
+  "12288" -> "12286" 
+  "12295" -> "12293" 
+  "12297" -> "12296" 
+  "12312" -> "12319" 
+  "12316" -> "12311" 
+  "12328" -> "12335" 
+  "12328" -> "12345" 
+  "12357" -> "12355" 
+  "12365" -> "12363" 
+  "12373" -> "12371" 
+  "12379" -> "12389" 
+  "12379" -> "12399" 
+  "12438" -> "12443" 
+  "12438" -> "12449" 
+  "12455" -> "12453" 
+  "12476" -> "12489" 
+  "12476" -> "12543" 
+  "12479" -> "12476" 
+  "12543" -> "12550" 
+  "12543" -> "12626" 
+  "12668" -> "12667" 
+  "12679" -> "12684" 
+  "12679" -> "12700" 
+  "12697" -> "12695" 
+  "12244" -> "12246" 
+  "12246" -> "12243" 
+  "12259" -> "12258" 
+  "12263" -> "12270" 
+  "12270" -> "12707" 
+  "12283" -> "12281" 
+  "12290" -> "12288" 
+  "12298" -> "12303" 
+  "12301" -> "12297" 
+  "12313" -> "12312" 
+  "12317" -> "12316" 
+  "12329" -> "12328" 
+  "12333" -> "12340" 
+  "12340" -> "12707" 
+  "12358" -> "12361" 
+  "12361" -> "12357" 
+  "12366" -> "12369" 
+  "12369" -> "12365" 
+  "12374" -> "12377" 
+  "12377" -> "12373" 
+  "12380" -> "12379" 
+  "12384" -> "12393" 
+  "12393" -> "12707" 
+  "12439" -> "12438" 
+  "12443" -> "12446" 
   "12446" -> "12449" 
-  "12449" -> "12452" 
-  "12459" -> "12458" 
-  "12467" -> "12479" 
-  "12484" -> "12482" 
-  "12489" -> "12504" 
-  "12509" -> "12524" 
-  "12550" -> "12583" 
-  "12550" -> "12588" 
-  "12572" -> "12616" 
-  "12611" -> "12620" 
-  "12620" -> "12710" 
-  "12672" -> "12679" 
-  "12676" -> "12671" 
-  "12685" -> "12694" 
-  "12694" -> "12703" 
-  "12701" -> "12700" 
-  "12267" -> "12266" 
+  "12456" -> "12455" 
+  "12464" -> "12476" 
+  "12481" -> "12479" 
+  "12486" -> "12501" 
+  "12506" -> "12521" 
+  "12547" -> "12580" 
+  "12547" -> "12585" 
+  "12569" -> "12613" 
+  "12608" -> "12617" 
+  "12617" -> "12707" 
+  "12669" -> "12676" 
+  "12673" -> "12668" 
+  "12682" -> "12691" 
+  "12691" -> "12700" 
+  "12698" -> "12697" 
+  "12264" -> "12263" 
+  "12300" -> "12298" 
   "12303" -> "12301" 
-  "12306" -> "12304" 
-  "12322" -> "12320" 
-  "12337" -> "12336" 
+  "12319" -> "12317" 
+  "12334" -> "12333" 
+  "12386" -> "12384" 
+  "12457" -> "12461" 
+  "12461" -> "12456" 
+  "12465" -> "12475" 
+  "12472" -> "12464" 
+  "12482" -> "12481" 
+  "12488" -> "12486" 
+  "12501" -> "12543" 
+  "12501" -> "12509" 
+  "12508" -> "12506" 
+  "12521" -> "12543" 
+  "12521" -> "12533" 
+  "12521" -> "12484" 
+  "12548" -> "12555" 
+  "12548" -> "12560" 
+  "12551" -> "12565" 
+  "12564" -> "12547" 
+  "12570" -> "12605" 
+  "12598" -> "12569" 
+  "12610" -> "12608" 
+  "12670" -> "12669" 
+  "12674" -> "12673" 
+  "12683" -> "12690" 
+  "12687" -> "12682" 
+  "12700" -> "12698" 
+  "12265" -> "12267" 
+  "12267" -> "12264" 
+  "12335" -> "12337" 
+  "12337" -> "12334" 
+  "12387" -> "12386" 
+  "12398" -> "12408" 
+  "12398" -> "12418" 
+  "12458" -> "12460" 
+  "12460" -> "12457" 
+  "12466" -> "12465" 
+  "12473" -> "12472" 
+  "12484" -> "12482" 
+  "12489" -> "12497" 
+  "12492" -> "12488" 
+  "12509" -> "12517" 
+  "12512" -> "12508" 
+  "12529" -> "12539" 
+  "12539" -> "12484" 
+  "12550" -> "12548" 
+  "12552" -> "12551" 
+  "12565" -> "12568" 
+  "12568" -> "12564" 
+  "12571" -> "12570" 
+  "12599" -> "12598" 
+  "12611" -> "12610" 
+  "12622" -> "12638" 
+  "12622" -> "12643" 
+  "12622" -> "12670" 
+  "12676" -> "12674" 
+  "12684" -> "12683" 
+  "12688" -> "12687" 
   "12389" -> "12387" 
-  "12460" -> "12464" 
-  "12464" -> "12459" 
-  "12468" -> "12478" 
-  "12475" -> "12467" 
-  "12485" -> "12484" 
-  "12491" -> "12489" 
-  "12504" -> "12546" 
-  "12504" -> "12512" 
-  "12511" -> "12509" 
-  "12524" -> "12546" 
-  "12524" -> "12536" 
-  "12524" -> "12487" 
-  "12551" -> "12558" 
-  "12551" -> "12563" 
-  "12554" -> "12568" 
-  "12567" -> "12550" 
-  "12573" -> "12608" 
-  "12601" -> "12572" 
+  "12399" -> "12398" 
+  "12403" -> "12412" 
+  "12412" -> "12707" 
+  "12468" -> "12466" 
+  "12475" -> "12473" 
+  "12493" -> "12492" 
+  "12513" -> "12512" 
+  "12530" -> "12529" 
+  "12554" -> "12552" 
+  "12559" -> "12552" 
+  "12572" -> "12571" 
+  "12600" -> "12607" 
+  "12607" -> "12599" 
   "12613" -> "12611" 
-  "12673" -> "12672" 
-  "12677" -> "12676" 
-  "12686" -> "12693" 
-  "12690" -> "12685" 
-  "12703" -> "12701" 
-  "12268" -> "12270" 
-  "12270" -> "12267" 
-  "12338" -> "12340" 
-  "12340" -> "12337" 
-  "12390" -> "12389" 
-  "12401" -> "12411" 
-  "12401" -> "12421" 
-  "12461" -> "12463" 
-  "12463" -> "12460" 
-  "12469" -> "12468" 
-  "12476" -> "12475" 
-  "12487" -> "12485" 
-  "12492" -> "12500" 
-  "12495" -> "12491" 
-  "12512" -> "12520" 
-  "12515" -> "12511" 
-  "12532" -> "12542" 
-  "12542" -> "12487" 
-  "12553" -> "12551" 
-  "12555" -> "12554" 
-  "12568" -> "12571" 
-  "12571" -> "12567" 
+  "12623" -> "12622" 
+  "12628" -> "12661" 
+  "12656" -> "12665" 
+  "12665" -> "12707" 
+  "12690" -> "12688" 
+  "12405" -> "12403" 
+  "12470" -> "12468" 
+  "12494" -> "12493" 
+  "12514" -> "12513" 
+  "12531" -> "12530" 
+  "12555" -> "12558" 
+  "12558" -> "12554" 
+  "12560" -> "12563" 
+  "12563" -> "12559" 
+  "12573" -> "12572" 
+  "12601" -> "12600" 
+  "12624" -> "12623" 
+  "12629" -> "12628" 
+  "12658" -> "12656" 
+  "12406" -> "12405" 
+  "12417" -> "12427" 
+  "12417" -> "12434" 
+  "12495" -> "12494" 
+  "12515" -> "12514" 
+  "12532" -> "12531" 
   "12574" -> "12573" 
-  "12602" -> "12601" 
-  "12614" -> "12613" 
-  "12625" -> "12641" 
-  "12625" -> "12646" 
-  "12625" -> "12673" 
-  "12679" -> "12677" 
-  "12687" -> "12686" 
-  "12691" -> "12690" 
-  "12392" -> "12390" 
-  "12402" -> "12401" 
-  "12406" -> "12415" 
-  "12415" -> "12710" 
-  "12471" -> "12469" 
-  "12478" -> "12476" 
-  "12496" -> "12495" 
-  "12516" -> "12515" 
-  "12533" -> "12532" 
-  "12557" -> "12555" 
-  "12562" -> "12555" 
-  "12575" -> "12574" 
-  "12603" -> "12610" 
-  "12610" -> "12602" 
-  "12616" -> "12614" 
-  "12626" -> "12625" 
-  "12631" -> "12664" 
-  "12659" -> "12668" 
-  "12668" -> "12710" 
-  "12693" -> "12691" 
+  "12602" -> "12606" 
+  "12606" -> "12601" 
+  "12626" -> "12624" 
+  "12630" -> "12629" 
+  "12659" -> "12658" 
   "12408" -> "12406" 
-  "12473" -> "12471" 
-  "12497" -> "12496" 
-  "12517" -> "12516" 
-  "12534" -> "12533" 
-  "12558" -> "12561" 
-  "12561" -> "12557" 
-  "12563" -> "12566" 
-  "12566" -> "12562" 
+  "12418" -> "12417" 
+  "12422" -> "12431" 
+  "12431" -> "12707" 
+  "12497" -> "12495" 
+  "12517" -> "12515" 
+  "12533" -> "12532" 
+  "12575" -> "12593" 
+  "12590" -> "12574" 
+  "12603" -> "12602" 
+  "12631" -> "12630" 
+  "12661" -> "12659" 
+  "12424" -> "12422" 
   "12576" -> "12575" 
-  "12604" -> "12603" 
-  "12627" -> "12626" 
+  "12591" -> "12590" 
+  "12605" -> "12603" 
   "12632" -> "12631" 
-  "12661" -> "12659" 
-  "12409" -> "12408" 
-  "12420" -> "12430" 
-  "12420" -> "12437" 
-  "12498" -> "12497" 
-  "12518" -> "12517" 
-  "12535" -> "12534" 
+  "12425" -> "12424" 
   "12577" -> "12576" 
-  "12605" -> "12609" 
-  "12609" -> "12604" 
-  "12629" -> "12627" 
-  "12633" -> "12632" 
-  "12662" -> "12661" 
-  "12411" -> "12409" 
-  "12421" -> "12420" 
-  "12425" -> "12434" 
-  "12434" -> "12710" 
-  "12500" -> "12498" 
-  "12520" -> "12518" 
-  "12536" -> "12535" 
-  "12578" -> "12596" 
-  "12593" -> "12577" 
-  "12606" -> "12605" 
-  "12634" -> "12633" 
-  "12664" -> "12662" 
+  "12593" -> "12591" 
+  "12633" -> "12651" 
+  "12648" -> "12632" 
   "12427" -> "12425" 
-  "12579" -> "12578" 
-  "12594" -> "12593" 
-  "12608" -> "12606" 
+  "12579" -> "12577" 
+  "12584" -> "12577" 
+  "12634" -> "12633" 
+  "12649" -> "12648" 
+  "12580" -> "12583" 
+  "12583" -> "12579" 
+  "12585" -> "12588" 
+  "12588" -> "12584" 
   "12635" -> "12634" 
-  "12428" -> "12427" 
-  "12580" -> "12579" 
-  "12596" -> "12594" 
-  "12636" -> "12654" 
-  "12651" -> "12635" 
-  "12430" -> "12428" 
-  "12582" -> "12580" 
-  "12587" -> "12580" 
-  "12637" -> "12636" 
-  "12652" -> "12651" 
-  "12583" -> "12586" 
-  "12586" -> "12582" 
-  "12588" -> "12591" 
-  "12591" -> "12587" 
-  "12638" -> "12637" 
-  "12654" -> "12652" 
-  "12640" -> "12638" 
-  "12645" -> "12638" 
-  "12641" -> "12644" 
-  "12644" -> "12640" 
-  "12646" -> "12649" 
-  "12649" -> "12645" 
-  "12232" -> "12241" 
+  "12651" -> "12649" 
+  "12637" -> "12635" 
+  "12642" -> "12635" 
+  "12638" -> "12641" 
+  "12641" -> "12637" 
+  "12643" -> "12646" 
+  "12646" -> "12642" 
+  "12229" -> "12238" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/24-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/24-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/24-cfg.dot	2023-06-07 19:34:22.027390837 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/24-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,34 +1,34 @@
 digraph "ToReflectedField" {  
-"875" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>484</SUB>> ]
-"894" [label = <(soa,soa(env))<SUB>485</SUB>> ]
-"897" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>486</SUB>> ]
-"904" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));)<SUB>487</SUB>> ]
-"899" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>486</SUB>> ]
-"905" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true)))<SUB>487</SUB>> ]
-"900" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>486</SUB>> ]
-"906" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>487</SUB>> ]
-"911" [label = <(&lt;operator&gt;.greaterThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true))<SUB>488</SUB>> ]
-"879" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>484</SUB>> ]
-"902" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>486</SUB>> ]
-"907" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>487</SUB>> ]
-"912" [label = <(&lt;operator&gt;.lessThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize)<SUB>488</SUB>> ]
-"919" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(), f, true))<SUB>488</SUB>> ]
-"880" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>484</SUB>> ]
-"884" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>484</SUB>> ]
-"891" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>484</SUB>> ]
-"909" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>487</SUB>> ]
-"913" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::CreateFromArtField)<SUB>488</SUB>> ]
-"920" [label = <(&lt;operator&gt;.expressionList,soa.Self(), f, true)<SUB>488</SUB>> ]
-"885" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>484</SUB>> ]
-"914" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>488</SUB>> ]
-"917" [label = <(FIELD_IDENTIFIER,CreateFromArtField,CreateFromArtField)<SUB>488</SUB>> ]
-"921" [label = <(Self,soa.Self())<SUB>488</SUB>> ]
-"886" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>484</SUB>> ]
-"888" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>484</SUB>> ]
-"922" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>488</SUB>> ]
-"924" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>488</SUB>> ]
-"869" [label = <(METHOD,ToReflectedField)<SUB>483</SUB>> ]
-"927" [label = <(METHOD_RETURN,jobject)<SUB>483</SUB>> ]
+"875" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>483</SUB>> ]
+"894" [label = <(soa,soa(env))<SUB>484</SUB>> ]
+"897" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>485</SUB>> ]
+"904" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));)<SUB>486</SUB>> ]
+"899" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>485</SUB>> ]
+"905" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true)))<SUB>486</SUB>> ]
+"900" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>485</SUB>> ]
+"906" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>486</SUB>> ]
+"911" [label = <(&lt;operator&gt;.greaterThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true))<SUB>487</SUB>> ]
+"879" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>483</SUB>> ]
+"902" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>485</SUB>> ]
+"907" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>486</SUB>> ]
+"912" [label = <(&lt;operator&gt;.lessThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize)<SUB>487</SUB>> ]
+"919" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(), f, true))<SUB>487</SUB>> ]
+"880" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>483</SUB>> ]
+"884" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;fid == null&quot;))<SUB>483</SUB>> ]
+"891" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>483</SUB>> ]
+"909" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>486</SUB>> ]
+"913" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::CreateFromArtField)<SUB>487</SUB>> ]
+"920" [label = <(&lt;operator&gt;.expressionList,soa.Self(), f, true)<SUB>487</SUB>> ]
+"885" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>483</SUB>> ]
+"914" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>487</SUB>> ]
+"917" [label = <(FIELD_IDENTIFIER,CreateFromArtField,CreateFromArtField)<SUB>487</SUB>> ]
+"921" [label = <(Self,soa.Self())<SUB>487</SUB>> ]
+"886" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>483</SUB>> ]
+"888" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>483</SUB>> ]
+"922" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>487</SUB>> ]
+"924" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>487</SUB>> ]
+"869" [label = <(METHOD,ToReflectedField)<SUB>482</SUB>> ]
+"927" [label = <(METHOD_RETURN,jobject)<SUB>482</SUB>> ]
   "875" -> "880" 
   "875" -> "894" 
   "894" -> "902" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/240-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/240-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/240-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/240-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,123 +1,123 @@
 digraph "UnregisterNatives" {  
-"12716" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2432</SUB>> ]
-"12736" [label = <(soa,soa(env))<SUB>2433</SUB>> ]
-"12738" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2434</SUB>> ]
-"12755" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c) &lt;&lt; &quot;]&quot;)<SUB>2436</SUB>> ]
-"12770" [label = <(&lt;operator&gt;.assignment,unregistered_count = 0)<SUB>2438</SUB>> ]
-"12774" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2439</SUB>> ]
-"12825" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2451</SUB>> ]
-"12739" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>2434</SUB>> ]
-"12746" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2434</SUB>> ]
-"12756" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c))<SUB>2436</SUB>> ]
-"12776" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2439</SUB>> ]
-"12807" [label = <(&lt;operator&gt;.equals,unregistered_count == 0)<SUB>2447</SUB>> ]
-"12740" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2434</SUB>> ]
-"12747" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2434</SUB>> ]
-"12757" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot;)<SUB>2436</SUB>> ]
-"12761" [label = <(mirror::Class::PrettyClass,mirror::Class::PrettyClass(c))<SUB>2436</SUB>> ]
-"12777" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>2439</SUB>> ]
-"12811" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c) &lt;&lt; &quot;' that contains no native methods&quot;)<SUB>2448</SUB>> ]
-"12721" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2432</SUB>> ]
-"12742" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2434</SUB>> ]
-"12748" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2434</SUB>> ]
-"12751" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2434</SUB>> ]
-"12758" [label = <(VLOG,VLOG(jni))<SUB>2436</SUB>> ]
-"12762" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyClass)<SUB>2436</SUB>> ]
-"12778" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2439</SUB>> ]
-"12785" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>2439</SUB>> ]
-"12795" [label = <(IsNative,m.IsNative())<SUB>2441</SUB>> ]
-"12812" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c))<SUB>2448</SUB>> ]
-"12722" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2432</SUB>> ]
-"12726" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>2432</SUB>> ]
-"12733" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2432</SUB>> ]
-"12744" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2434</SUB>> ]
-"12750" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2434</SUB>> ]
-"12753" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2434</SUB>> ]
-"12763" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2436</SUB>> ]
-"12766" [label = <(FIELD_IDENTIFIER,PrettyClass,PrettyClass)<SUB>2436</SUB>> ]
-"12779" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2439</SUB>> ]
-"12796" [label = <(&lt;operator&gt;.fieldAccess,m.IsNative)<SUB>2441</SUB>> ]
-"12800" [label = <(UnregisterNative,m.UnregisterNative())<SUB>2442</SUB>> ]
-"12804" [label = <(&lt;operator&gt;.postIncrement,unregistered_count++)<SUB>2443</SUB>> ]
-"12813" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;)<SUB>2448</SUB>> ]
-"12817" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(c))<SUB>2449</SUB>> ]
-"12727" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2432</SUB>> ]
-"12780" [label = <(Runtime::Current,Runtime::Current())<SUB>2439</SUB>> ]
-"12784" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2439</SUB>> ]
-"12798" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2441</SUB>> ]
-"12801" [label = <(&lt;operator&gt;.fieldAccess,m.UnregisterNative)<SUB>2442</SUB>> ]
-"12814" [label = <(LOG,LOG(WARNING))<SUB>2448</SUB>> ]
-"12818" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2449</SUB>> ]
-"12728" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2432</SUB>> ]
-"12730" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2432</SUB>> ]
-"12781" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2439</SUB>> ]
-"12803" [label = <(FIELD_IDENTIFIER,UnregisterNative,UnregisterNative)<SUB>2442</SUB>> ]
-"12819" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2449</SUB>> ]
-"12822" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2449</SUB>> ]
-"12783" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2439</SUB>> ]
-"12712" [label = <(METHOD,UnregisterNatives)<SUB>2431</SUB>> ]
-"12827" [label = <(METHOD_RETURN,jint)<SUB>2431</SUB>> ]
-  "12716" -> "12722" 
-  "12716" -> "12736" 
-  "12736" -> "12744" 
-  "12738" -> "12758" 
-  "12755" -> "12770" 
-  "12770" -> "12783" 
-  "12774" -> "12798" 
-  "12825" -> "12827" 
-  "12739" -> "12750" 
-  "12746" -> "12738" 
-  "12756" -> "12755" 
-  "12776" -> "12774" 
-  "12807" -> "12814" 
-  "12807" -> "12825" 
-  "12740" -> "12739" 
-  "12747" -> "12746" 
-  "12757" -> "12763" 
-  "12761" -> "12756" 
-  "12777" -> "12776" 
-  "12811" -> "12825" 
-  "12721" -> "12728" 
-  "12721" -> "12736" 
-  "12742" -> "12740" 
-  "12748" -> "12753" 
-  "12751" -> "12747" 
-  "12758" -> "12757" 
-  "12762" -> "12761" 
-  "12778" -> "12785" 
-  "12785" -> "12777" 
-  "12795" -> "12798" 
-  "12795" -> "12803" 
-  "12795" -> "12807" 
-  "12812" -> "12811" 
-  "12722" -> "12721" 
-  "12726" -> "12733" 
-  "12733" -> "12827" 
-  "12744" -> "12742" 
+"12713" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2430</SUB>> ]
+"12733" [label = <(soa,soa(env))<SUB>2431</SUB>> ]
+"12735" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2432</SUB>> ]
+"12752" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c) &lt;&lt; &quot;]&quot;)<SUB>2434</SUB>> ]
+"12767" [label = <(&lt;operator&gt;.assignment,unregistered_count = 0)<SUB>2436</SUB>> ]
+"12771" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2437</SUB>> ]
+"12822" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2449</SUB>> ]
+"12736" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>2432</SUB>> ]
+"12743" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2432</SUB>> ]
+"12753" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c))<SUB>2434</SUB>> ]
+"12773" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2437</SUB>> ]
+"12804" [label = <(&lt;operator&gt;.equals,unregistered_count == 0)<SUB>2445</SUB>> ]
+"12737" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2432</SUB>> ]
+"12744" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2432</SUB>> ]
+"12754" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot;)<SUB>2434</SUB>> ]
+"12758" [label = <(mirror::Class::PrettyClass,mirror::Class::PrettyClass(c))<SUB>2434</SUB>> ]
+"12774" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>2437</SUB>> ]
+"12808" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c) &lt;&lt; &quot;' that contains no native methods&quot;)<SUB>2446</SUB>> ]
+"12718" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2430</SUB>> ]
+"12739" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2432</SUB>> ]
+"12745" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2432</SUB>> ]
+"12748" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2432</SUB>> ]
+"12755" [label = <(VLOG,VLOG(jni))<SUB>2434</SUB>> ]
+"12759" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyClass)<SUB>2434</SUB>> ]
+"12775" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2437</SUB>> ]
+"12782" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>2437</SUB>> ]
+"12792" [label = <(IsNative,m.IsNative())<SUB>2439</SUB>> ]
+"12809" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c))<SUB>2446</SUB>> ]
+"12719" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2430</SUB>> ]
+"12723" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>2430</SUB>> ]
+"12730" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2430</SUB>> ]
+"12741" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2432</SUB>> ]
+"12747" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2432</SUB>> ]
+"12750" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2432</SUB>> ]
+"12760" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2434</SUB>> ]
+"12763" [label = <(FIELD_IDENTIFIER,PrettyClass,PrettyClass)<SUB>2434</SUB>> ]
+"12776" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2437</SUB>> ]
+"12793" [label = <(&lt;operator&gt;.fieldAccess,m.IsNative)<SUB>2439</SUB>> ]
+"12797" [label = <(UnregisterNative,m.UnregisterNative())<SUB>2440</SUB>> ]
+"12801" [label = <(&lt;operator&gt;.postIncrement,unregistered_count++)<SUB>2441</SUB>> ]
+"12810" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;)<SUB>2446</SUB>> ]
+"12814" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(c))<SUB>2447</SUB>> ]
+"12724" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2430</SUB>> ]
+"12777" [label = <(Runtime::Current,Runtime::Current())<SUB>2437</SUB>> ]
+"12781" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2437</SUB>> ]
+"12795" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2439</SUB>> ]
+"12798" [label = <(&lt;operator&gt;.fieldAccess,m.UnregisterNative)<SUB>2440</SUB>> ]
+"12811" [label = <(LOG,LOG(WARNING))<SUB>2446</SUB>> ]
+"12815" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2447</SUB>> ]
+"12725" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2430</SUB>> ]
+"12727" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2430</SUB>> ]
+"12778" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2437</SUB>> ]
+"12800" [label = <(FIELD_IDENTIFIER,UnregisterNative,UnregisterNative)<SUB>2440</SUB>> ]
+"12816" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2447</SUB>> ]
+"12819" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2447</SUB>> ]
+"12780" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2437</SUB>> ]
+"12709" [label = <(METHOD,UnregisterNatives)<SUB>2429</SUB>> ]
+"12824" [label = <(METHOD_RETURN,jint)<SUB>2429</SUB>> ]
+  "12713" -> "12719" 
+  "12713" -> "12733" 
+  "12733" -> "12741" 
+  "12735" -> "12755" 
+  "12752" -> "12767" 
+  "12767" -> "12780" 
+  "12771" -> "12795" 
+  "12822" -> "12824" 
+  "12736" -> "12747" 
+  "12743" -> "12735" 
+  "12753" -> "12752" 
+  "12773" -> "12771" 
+  "12804" -> "12811" 
+  "12804" -> "12822" 
+  "12737" -> "12736" 
+  "12744" -> "12743" 
+  "12754" -> "12760" 
+  "12758" -> "12753" 
+  "12774" -> "12773" 
+  "12808" -> "12822" 
+  "12718" -> "12725" 
+  "12718" -> "12733" 
+  "12739" -> "12737" 
+  "12745" -> "12750" 
+  "12748" -> "12744" 
+  "12755" -> "12754" 
+  "12759" -> "12758" 
+  "12775" -> "12782" 
+  "12782" -> "12774" 
+  "12792" -> "12795" 
+  "12792" -> "12800" 
+  "12792" -> "12804" 
+  "12809" -> "12808" 
+  "12719" -> "12718" 
+  "12723" -> "12730" 
+  "12730" -> "12824" 
+  "12741" -> "12739" 
+  "12747" -> "12745" 
   "12750" -> "12748" 
-  "12753" -> "12751" 
-  "12763" -> "12766" 
-  "12766" -> "12762" 
-  "12779" -> "12778" 
-  "12796" -> "12795" 
-  "12800" -> "12804" 
-  "12804" -> "12798" 
-  "12804" -> "12807" 
-  "12813" -> "12819" 
-  "12817" -> "12812" 
-  "12727" -> "12726" 
-  "12780" -> "12784" 
-  "12784" -> "12779" 
-  "12798" -> "12796" 
-  "12801" -> "12800" 
-  "12814" -> "12813" 
-  "12818" -> "12817" 
-  "12728" -> "12730" 
-  "12730" -> "12727" 
-  "12781" -> "12780" 
-  "12803" -> "12801" 
-  "12819" -> "12822" 
-  "12822" -> "12818" 
-  "12783" -> "12781" 
-  "12712" -> "12716" 
+  "12760" -> "12763" 
+  "12763" -> "12759" 
+  "12776" -> "12775" 
+  "12793" -> "12792" 
+  "12797" -> "12801" 
+  "12801" -> "12795" 
+  "12801" -> "12804" 
+  "12810" -> "12816" 
+  "12814" -> "12809" 
+  "12724" -> "12723" 
+  "12777" -> "12781" 
+  "12781" -> "12776" 
+  "12795" -> "12793" 
+  "12798" -> "12797" 
+  "12811" -> "12810" 
+  "12815" -> "12814" 
+  "12725" -> "12727" 
+  "12727" -> "12724" 
+  "12778" -> "12777" 
+  "12800" -> "12798" 
+  "12816" -> "12819" 
+  "12819" -> "12815" 
+  "12780" -> "12778" 
+  "12709" -> "12713" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/241-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/241-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/241-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/241-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,5 +1,5 @@
 digraph "MonitorEnter" {  
-"12829" [label = <(METHOD,MonitorEnter)<SUB>2454</SUB>> ]
-"12833" [label = <(METHOD_RETURN,jint)<SUB>2454</SUB>> ]
-  "12829" -> "12833" 
+"12826" [label = <(METHOD,MonitorEnter)<SUB>2452</SUB>> ]
+"12830" [label = <(METHOD_RETURN,jint)<SUB>2452</SUB>> ]
+  "12826" -> "12830" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/242-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/242-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/242-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/242-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,5 +1,5 @@
 digraph "MonitorExit" {  
-"12837" [label = <(METHOD,MonitorExit)<SUB>2466</SUB>> ]
-"12841" [label = <(METHOD_RETURN,jint)<SUB>2466</SUB>> ]
-  "12837" -> "12841" 
+"12834" [label = <(METHOD,MonitorExit)<SUB>2464</SUB>> ]
+"12838" [label = <(METHOD_RETURN,jint)<SUB>2464</SUB>> ]
+  "12834" -> "12838" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/243-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/243-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/243-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/243-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,56 +1,56 @@
 digraph "GetJavaVM" {  
-"12849" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2479</SUB>> ]
-"12869" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>2480</SUB>> ]
-"12893" [label = <(RETURN,return (*vm != nullptr) ? JNI_OK : JNI_ERR;,return (*vm != nullptr) ? JNI_OK : JNI_ERR;)<SUB>2486</SUB>> ]
-"12871" [label = <(Runtime::Current,Runtime::Current())<SUB>2480</SUB>> ]
-"12876" [label = <(&lt;operator&gt;.notEquals,runtime != nullptr)<SUB>2481</SUB>> ]
-"12894" [label = <(&lt;operator&gt;.conditional,(*vm != nullptr) ? JNI_OK : JNI_ERR)<SUB>2486</SUB>> ]
-"12872" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2480</SUB>> ]
-"12880" [label = <(&lt;operator&gt;.assignment,*vm = runtime-&gt;GetJavaVM())<SUB>2482</SUB>> ]
-"12895" [label = <(&lt;operator&gt;.notEquals,*vm != nullptr)<SUB>2486</SUB>> ]
-"12854" [label = <(UNLIKELY,UNLIKELY((vm) == nullptr))<SUB>2479</SUB>> ]
-"12874" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2480</SUB>> ]
-"12881" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2482</SUB>> ]
-"12883" [label = <(GetJavaVM,runtime-&gt;GetJavaVM())<SUB>2482</SUB>> ]
-"12889" [label = <(&lt;operator&gt;.assignment,*vm = nullptr)<SUB>2484</SUB>> ]
-"12896" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2486</SUB>> ]
-"12855" [label = <(&lt;operator&gt;.equals,(vm) == nullptr)<SUB>2479</SUB>> ]
-"12859" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;vm == null&quot;))<SUB>2479</SUB>> ]
-"12866" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2479</SUB>> ]
-"12884" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetJavaVM)<SUB>2482</SUB>> ]
-"12890" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2484</SUB>> ]
-"12860" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2479</SUB>> ]
-"12886" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>2482</SUB>> ]
-"12861" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2479</SUB>> ]
-"12863" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2479</SUB>> ]
-"12845" [label = <(METHOD,GetJavaVM)<SUB>2478</SUB>> ]
-"12901" [label = <(METHOD_RETURN,jint)<SUB>2478</SUB>> ]
-  "12849" -> "12855" 
-  "12849" -> "12874" 
-  "12869" -> "12876" 
-  "12893" -> "12901" 
+"12846" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2477</SUB>> ]
+"12866" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>2478</SUB>> ]
+"12890" [label = <(RETURN,return (*vm != nullptr) ? JNI_OK : JNI_ERR;,return (*vm != nullptr) ? JNI_OK : JNI_ERR;)<SUB>2484</SUB>> ]
+"12868" [label = <(Runtime::Current,Runtime::Current())<SUB>2478</SUB>> ]
+"12873" [label = <(&lt;operator&gt;.notEquals,runtime != nullptr)<SUB>2479</SUB>> ]
+"12891" [label = <(&lt;operator&gt;.conditional,(*vm != nullptr) ? JNI_OK : JNI_ERR)<SUB>2484</SUB>> ]
+"12869" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2478</SUB>> ]
+"12877" [label = <(&lt;operator&gt;.assignment,*vm = runtime-&gt;GetJavaVM())<SUB>2480</SUB>> ]
+"12892" [label = <(&lt;operator&gt;.notEquals,*vm != nullptr)<SUB>2484</SUB>> ]
+"12851" [label = <(UNLIKELY,UNLIKELY((vm) == nullptr))<SUB>2477</SUB>> ]
+"12871" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2478</SUB>> ]
+"12878" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2480</SUB>> ]
+"12880" [label = <(GetJavaVM,runtime-&gt;GetJavaVM())<SUB>2480</SUB>> ]
+"12886" [label = <(&lt;operator&gt;.assignment,*vm = nullptr)<SUB>2482</SUB>> ]
+"12893" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2484</SUB>> ]
+"12852" [label = <(&lt;operator&gt;.equals,(vm) == nullptr)<SUB>2477</SUB>> ]
+"12856" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;vm == null&quot;))<SUB>2477</SUB>> ]
+"12863" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2477</SUB>> ]
+"12881" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetJavaVM)<SUB>2480</SUB>> ]
+"12887" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2482</SUB>> ]
+"12857" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2477</SUB>> ]
+"12883" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>2480</SUB>> ]
+"12858" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2477</SUB>> ]
+"12860" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2477</SUB>> ]
+"12842" [label = <(METHOD,GetJavaVM)<SUB>2476</SUB>> ]
+"12898" [label = <(METHOD_RETURN,jint)<SUB>2476</SUB>> ]
+  "12846" -> "12852" 
+  "12846" -> "12871" 
+  "12866" -> "12873" 
+  "12890" -> "12898" 
+  "12868" -> "12866" 
+  "12873" -> "12878" 
+  "12873" -> "12887" 
+  "12891" -> "12890" 
+  "12869" -> "12868" 
+  "12877" -> "12893" 
+  "12892" -> "12891" 
+  "12851" -> "12858" 
+  "12851" -> "12871" 
   "12871" -> "12869" 
-  "12876" -> "12881" 
-  "12876" -> "12890" 
-  "12894" -> "12893" 
-  "12872" -> "12871" 
-  "12880" -> "12896" 
-  "12895" -> "12894" 
-  "12854" -> "12861" 
-  "12854" -> "12874" 
-  "12874" -> "12872" 
-  "12881" -> "12886" 
-  "12883" -> "12880" 
-  "12889" -> "12896" 
-  "12896" -> "12895" 
-  "12855" -> "12854" 
-  "12859" -> "12866" 
-  "12866" -> "12901" 
-  "12884" -> "12883" 
-  "12890" -> "12889" 
-  "12860" -> "12859" 
-  "12886" -> "12884" 
-  "12861" -> "12863" 
-  "12863" -> "12860" 
-  "12845" -> "12849" 
+  "12878" -> "12883" 
+  "12880" -> "12877" 
+  "12886" -> "12893" 
+  "12893" -> "12892" 
+  "12852" -> "12851" 
+  "12856" -> "12863" 
+  "12863" -> "12898" 
+  "12881" -> "12880" 
+  "12887" -> "12886" 
+  "12857" -> "12856" 
+  "12883" -> "12881" 
+  "12858" -> "12860" 
+  "12860" -> "12857" 
+  "12842" -> "12846" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/244-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/244-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/244-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/244-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,83 +1,83 @@
 digraph "NewDirectByteBuffer" {  
-"12943" [label = <(&lt;operator&gt;.assignment,address_arg = reinterpret_cast&lt;jlong&gt;(address))<SUB>2508</SUB>> ]
-"12949" [label = <(&lt;operator&gt;.assignment,capacity_arg = static_cast&lt;jint&gt;(capacity))<SUB>2509</SUB>> ]
-"12955" [label = <(&lt;operator&gt;.assignment,result = env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2511</SUB>> ]
-"12969" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? nullptr : result;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? nullptr : result;)<SUB>2514</SUB>> ]
-"12909" [label = <(&lt;operator&gt;.lessThan,capacity &lt; 0)<SUB>2490</SUB>> ]
-"12919" [label = <(&lt;operator&gt;.logicalAnd,address == nullptr &amp;&amp; capacity != 0)<SUB>2495</SUB>> ]
-"12933" [label = <(&lt;operator&gt;.greaterThan,capacity &gt; INT_MAX)<SUB>2502</SUB>> ]
-"12945" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;jlong&gt;(address))<SUB>2508</SUB>> ]
-"12951" [label = <(&lt;operator&gt;.cast,static_cast&lt;jint&gt;(capacity))<SUB>2509</SUB>> ]
-"12957" [label = <(NewObject,env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2511</SUB>> ]
-"12970" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? nullptr : result)<SUB>2514</SUB>> ]
-"12914" [label = <(UNKNOWN,),))<SUB>2491</SUB>> ]
-"12915" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);)<SUB>2491</SUB>> ]
-"12916" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2493</SUB>> ]
-"12920" [label = <(&lt;operator&gt;.equals,address == nullptr)<SUB>2495</SUB>> ]
-"12923" [label = <(&lt;operator&gt;.notEquals,capacity != 0)<SUB>2495</SUB>> ]
-"12928" [label = <(UNKNOWN,),))<SUB>2496</SUB>> ]
-"12929" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);)<SUB>2496</SUB>> ]
-"12930" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2498</SUB>> ]
-"12938" [label = <(UNKNOWN,),))<SUB>2503</SUB>> ]
-"12939" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);)<SUB>2503</SUB>> ]
-"12940" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2506</SUB>> ]
-"12946" [label = <(UNKNOWN,jlong,jlong)<SUB>2508</SUB>> ]
-"12952" [label = <(UNKNOWN,jint,jint)<SUB>2509</SUB>> ]
-"12958" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;NewObject)<SUB>2511</SUB>> ]
-"12961" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer)<SUB>2511</SUB>> ]
-"12964" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_init)<SUB>2512</SUB>> ]
-"12971" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending())<SUB>2514</SUB>> ]
-"12960" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2511</SUB>> ]
-"12963" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer,java_nio_DirectByteBuffer)<SUB>2511</SUB>> ]
-"12966" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_init,java_nio_DirectByteBuffer_init)<SUB>2512</SUB>> ]
-"12972" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending)<SUB>2514</SUB>> ]
-"12973" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>2514</SUB>> ]
-"12978" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>2514</SUB>> ]
-"12974" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>2514</SUB>> ]
-"12977" [label = <(FIELD_IDENTIFIER,self,self)<SUB>2514</SUB>> ]
-"12975" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>2514</SUB>> ]
-"12903" [label = <(METHOD,NewDirectByteBuffer)<SUB>2489</SUB>> ]
-"12981" [label = <(METHOD_RETURN,jobject)<SUB>2489</SUB>> ]
-  "12943" -> "12952" 
-  "12949" -> "12960" 
-  "12955" -> "12975" 
-  "12969" -> "12981" 
-  "12909" -> "12914" 
-  "12909" -> "12920" 
-  "12919" -> "12928" 
-  "12919" -> "12933" 
-  "12933" -> "12938" 
-  "12933" -> "12946" 
-  "12945" -> "12943" 
-  "12951" -> "12949" 
-  "12957" -> "12955" 
-  "12970" -> "12969" 
-  "12914" -> "12915" 
-  "12915" -> "12916" 
-  "12916" -> "12981" 
-  "12920" -> "12919" 
-  "12920" -> "12923" 
-  "12923" -> "12919" 
-  "12928" -> "12929" 
-  "12929" -> "12930" 
-  "12930" -> "12981" 
-  "12938" -> "12939" 
-  "12939" -> "12940" 
-  "12940" -> "12981" 
-  "12946" -> "12945" 
-  "12952" -> "12951" 
+"12940" [label = <(&lt;operator&gt;.assignment,address_arg = reinterpret_cast&lt;jlong&gt;(address))<SUB>2506</SUB>> ]
+"12946" [label = <(&lt;operator&gt;.assignment,capacity_arg = static_cast&lt;jint&gt;(capacity))<SUB>2507</SUB>> ]
+"12952" [label = <(&lt;operator&gt;.assignment,result = env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2509</SUB>> ]
+"12966" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? nullptr : result;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? nullptr : result;)<SUB>2512</SUB>> ]
+"12906" [label = <(&lt;operator&gt;.lessThan,capacity &lt; 0)<SUB>2488</SUB>> ]
+"12916" [label = <(&lt;operator&gt;.logicalAnd,address == nullptr &amp;&amp; capacity != 0)<SUB>2493</SUB>> ]
+"12930" [label = <(&lt;operator&gt;.greaterThan,capacity &gt; INT_MAX)<SUB>2500</SUB>> ]
+"12942" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;jlong&gt;(address))<SUB>2506</SUB>> ]
+"12948" [label = <(&lt;operator&gt;.cast,static_cast&lt;jint&gt;(capacity))<SUB>2507</SUB>> ]
+"12954" [label = <(NewObject,env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2509</SUB>> ]
+"12967" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? nullptr : result)<SUB>2512</SUB>> ]
+"12911" [label = <(UNKNOWN,),))<SUB>2489</SUB>> ]
+"12912" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);)<SUB>2489</SUB>> ]
+"12913" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2491</SUB>> ]
+"12917" [label = <(&lt;operator&gt;.equals,address == nullptr)<SUB>2493</SUB>> ]
+"12920" [label = <(&lt;operator&gt;.notEquals,capacity != 0)<SUB>2493</SUB>> ]
+"12925" [label = <(UNKNOWN,),))<SUB>2494</SUB>> ]
+"12926" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);)<SUB>2494</SUB>> ]
+"12927" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2496</SUB>> ]
+"12935" [label = <(UNKNOWN,),))<SUB>2501</SUB>> ]
+"12936" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);)<SUB>2501</SUB>> ]
+"12937" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2504</SUB>> ]
+"12943" [label = <(UNKNOWN,jlong,jlong)<SUB>2506</SUB>> ]
+"12949" [label = <(UNKNOWN,jint,jint)<SUB>2507</SUB>> ]
+"12955" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;NewObject)<SUB>2509</SUB>> ]
+"12958" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer)<SUB>2509</SUB>> ]
+"12961" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_init)<SUB>2510</SUB>> ]
+"12968" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending())<SUB>2512</SUB>> ]
+"12957" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2509</SUB>> ]
+"12960" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer,java_nio_DirectByteBuffer)<SUB>2509</SUB>> ]
+"12963" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_init,java_nio_DirectByteBuffer_init)<SUB>2510</SUB>> ]
+"12969" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending)<SUB>2512</SUB>> ]
+"12970" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>2512</SUB>> ]
+"12975" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>2512</SUB>> ]
+"12971" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>2512</SUB>> ]
+"12974" [label = <(FIELD_IDENTIFIER,self,self)<SUB>2512</SUB>> ]
+"12972" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>2512</SUB>> ]
+"12900" [label = <(METHOD,NewDirectByteBuffer)<SUB>2487</SUB>> ]
+"12978" [label = <(METHOD_RETURN,jobject)<SUB>2487</SUB>> ]
+  "12940" -> "12949" 
+  "12946" -> "12957" 
+  "12952" -> "12972" 
+  "12966" -> "12978" 
+  "12906" -> "12911" 
+  "12906" -> "12917" 
+  "12916" -> "12925" 
+  "12916" -> "12930" 
+  "12930" -> "12935" 
+  "12930" -> "12943" 
+  "12942" -> "12940" 
+  "12948" -> "12946" 
+  "12954" -> "12952" 
+  "12967" -> "12966" 
+  "12911" -> "12912" 
+  "12912" -> "12913" 
+  "12913" -> "12978" 
+  "12917" -> "12916" 
+  "12917" -> "12920" 
+  "12920" -> "12916" 
+  "12925" -> "12926" 
+  "12926" -> "12927" 
+  "12927" -> "12978" 
+  "12935" -> "12936" 
+  "12936" -> "12937" 
+  "12937" -> "12978" 
+  "12943" -> "12942" 
+  "12949" -> "12948" 
+  "12955" -> "12960" 
   "12958" -> "12963" 
-  "12961" -> "12966" 
-  "12964" -> "12957" 
-  "12971" -> "12970" 
+  "12961" -> "12954" 
+  "12968" -> "12967" 
+  "12957" -> "12955" 
   "12960" -> "12958" 
   "12963" -> "12961" 
-  "12966" -> "12964" 
+  "12969" -> "12968" 
+  "12970" -> "12975" 
+  "12975" -> "12969" 
+  "12971" -> "12974" 
+  "12974" -> "12970" 
   "12972" -> "12971" 
-  "12973" -> "12978" 
-  "12978" -> "12972" 
-  "12974" -> "12977" 
-  "12977" -> "12973" 
-  "12975" -> "12974" 
-  "12903" -> "12909" 
+  "12900" -> "12906" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/245-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/245-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/245-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/245-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,21 +1,21 @@
 digraph "GetDirectBufferAddress" {  
-"12987" [label = <(RETURN,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));)<SUB>2518</SUB>> ]
-"12988" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)))<SUB>2518</SUB>> ]
-"12989" [label = <(UNKNOWN,void*,void*)<SUB>2518</SUB>> ]
-"12990" [label = <(GetLongField,env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress))<SUB>2518</SUB>> ]
-"12991" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetLongField)<SUB>2518</SUB>> ]
-"12995" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2519</SUB>> ]
-"12993" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2518</SUB>> ]
-"12997" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_effectiveDirectAddress,java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2519</SUB>> ]
-"12983" [label = <(METHOD,GetDirectBufferAddress)<SUB>2517</SUB>> ]
-"12998" [label = <(METHOD_RETURN,void*)<SUB>2517</SUB>> ]
-  "12987" -> "12998" 
-  "12988" -> "12987" 
-  "12989" -> "12993" 
+"12984" [label = <(RETURN,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));)<SUB>2516</SUB>> ]
+"12985" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)))<SUB>2516</SUB>> ]
+"12986" [label = <(UNKNOWN,void*,void*)<SUB>2516</SUB>> ]
+"12987" [label = <(GetLongField,env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress))<SUB>2516</SUB>> ]
+"12988" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetLongField)<SUB>2516</SUB>> ]
+"12992" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2517</SUB>> ]
+"12990" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2516</SUB>> ]
+"12994" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_effectiveDirectAddress,java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2517</SUB>> ]
+"12980" [label = <(METHOD,GetDirectBufferAddress)<SUB>2515</SUB>> ]
+"12995" [label = <(METHOD_RETURN,void*)<SUB>2515</SUB>> ]
+  "12984" -> "12995" 
+  "12985" -> "12984" 
+  "12986" -> "12990" 
+  "12987" -> "12985" 
+  "12988" -> "12994" 
+  "12992" -> "12987" 
   "12990" -> "12988" 
-  "12991" -> "12997" 
-  "12995" -> "12990" 
-  "12993" -> "12991" 
-  "12997" -> "12995" 
-  "12983" -> "12989" 
+  "12994" -> "12992" 
+  "12980" -> "12986" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/246-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/246-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/246-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/246-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,21 +1,21 @@
 digraph "GetDirectBufferCapacity" {  
-"13004" [label = <(RETURN,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));)<SUB>2523</SUB>> ]
-"13005" [label = <(&lt;operator&gt;.cast,static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity)))<SUB>2523</SUB>> ]
-"13006" [label = <(UNKNOWN,jlong,jlong)<SUB>2523</SUB>> ]
-"13007" [label = <(GetIntField,env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity))<SUB>2523</SUB>> ]
-"13008" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetIntField)<SUB>2523</SUB>> ]
-"13012" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_capacity)<SUB>2524</SUB>> ]
-"13010" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2523</SUB>> ]
-"13014" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_capacity,java_nio_DirectByteBuffer_capacity)<SUB>2524</SUB>> ]
-"13000" [label = <(METHOD,GetDirectBufferCapacity)<SUB>2522</SUB>> ]
-"13015" [label = <(METHOD_RETURN,jlong)<SUB>2522</SUB>> ]
-  "13004" -> "13015" 
-  "13005" -> "13004" 
-  "13006" -> "13010" 
+"13001" [label = <(RETURN,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));)<SUB>2521</SUB>> ]
+"13002" [label = <(&lt;operator&gt;.cast,static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity)))<SUB>2521</SUB>> ]
+"13003" [label = <(UNKNOWN,jlong,jlong)<SUB>2521</SUB>> ]
+"13004" [label = <(GetIntField,env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity))<SUB>2521</SUB>> ]
+"13005" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetIntField)<SUB>2521</SUB>> ]
+"13009" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_capacity)<SUB>2522</SUB>> ]
+"13007" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2521</SUB>> ]
+"13011" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_capacity,java_nio_DirectByteBuffer_capacity)<SUB>2522</SUB>> ]
+"12997" [label = <(METHOD,GetDirectBufferCapacity)<SUB>2520</SUB>> ]
+"13012" [label = <(METHOD_RETURN,jlong)<SUB>2520</SUB>> ]
+  "13001" -> "13012" 
+  "13002" -> "13001" 
+  "13003" -> "13007" 
+  "13004" -> "13002" 
+  "13005" -> "13011" 
+  "13009" -> "13004" 
   "13007" -> "13005" 
-  "13008" -> "13014" 
-  "13012" -> "13007" 
-  "13010" -> "13008" 
-  "13014" -> "13012" 
-  "13000" -> "13006" 
+  "13011" -> "13009" 
+  "12997" -> "13003" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/247-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/247-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/247-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/247-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureLocalCapacityInternal" {  
-"13018" [label = <(METHOD,EnsureLocalCapacityInternal)<SUB>2551</SUB>> ]
-"13023" [label = <(METHOD_RETURN,jint)<SUB>2551</SUB>> ]
-  "13018" -> "13023" 
+"13015" [label = <(METHOD,EnsureLocalCapacityInternal)<SUB>2549</SUB>> ]
+"13020" [label = <(METHOD_RETURN,jint)<SUB>2549</SUB>> ]
+  "13015" -> "13020" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/248-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/248-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/248-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/248-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,33 +1,33 @@
 digraph "&lt;clinit&gt;" {  
-"13033" [label = <(&lt;operator&gt;.assignment,capacity = soa.Env()-&gt;locals.Capacity())<SUB>2560</SUB>> ]
-"13044" [label = <(&lt;operator&gt;.assignment,okay = (static_cast&lt;jint&gt;(kLocalsInitial - capacity) &gt;= desired_capacity))<SUB>2561</SUB>> ]
-"13035" [label = <(Capacity,soa.Env()-&gt;locals.Capacity())<SUB>2560</SUB>> ]
-"13046" [label = <(&lt;operator&gt;.greaterEqualsThan,static_cast&lt;jint&gt;(kLocalsInitial - capacity) &gt;= desired_capacity)<SUB>2561</SUB>> ]
-"13036" [label = <(&lt;operator&gt;.fieldAccess,soa.Env()-&gt;locals.Capacity)<SUB>2560</SUB>> ]
-"13047" [label = <(&lt;operator&gt;.cast,static_cast&lt;jint&gt;(kLocalsInitial - capacity))<SUB>2561</SUB>> ]
-"13037" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Env()-&gt;locals)<SUB>2560</SUB>> ]
-"13043" [label = <(FIELD_IDENTIFIER,Capacity,Capacity)<SUB>2560</SUB>> ]
-"13048" [label = <(UNKNOWN,jint,jint)<SUB>2561</SUB>> ]
-"13049" [label = <(&lt;operator&gt;.subtraction,kLocalsInitial - capacity)<SUB>2561</SUB>> ]
-"13038" [label = <(Env,soa.Env())<SUB>2560</SUB>> ]
-"13042" [label = <(FIELD_IDENTIFIER,locals,locals)<SUB>2560</SUB>> ]
-"13039" [label = <(&lt;operator&gt;.fieldAccess,soa.Env)<SUB>2560</SUB>> ]
-"13041" [label = <(FIELD_IDENTIFIER,Env,Env)<SUB>2560</SUB>> ]
-"13031" [label = <(METHOD,&lt;clinit&gt;)> ]
-"13054" [label = <(METHOD_RETURN,ANY)> ]
-  "13033" -> "13048" 
-  "13044" -> "13054" 
-  "13035" -> "13033" 
+"13030" [label = <(&lt;operator&gt;.assignment,capacity = soa.Env()-&gt;locals.Capacity())<SUB>2558</SUB>> ]
+"13041" [label = <(&lt;operator&gt;.assignment,okay = (static_cast&lt;jint&gt;(kLocalsInitial - capacity) &gt;= desired_capacity))<SUB>2559</SUB>> ]
+"13032" [label = <(Capacity,soa.Env()-&gt;locals.Capacity())<SUB>2558</SUB>> ]
+"13043" [label = <(&lt;operator&gt;.greaterEqualsThan,static_cast&lt;jint&gt;(kLocalsInitial - capacity) &gt;= desired_capacity)<SUB>2559</SUB>> ]
+"13033" [label = <(&lt;operator&gt;.fieldAccess,soa.Env()-&gt;locals.Capacity)<SUB>2558</SUB>> ]
+"13044" [label = <(&lt;operator&gt;.cast,static_cast&lt;jint&gt;(kLocalsInitial - capacity))<SUB>2559</SUB>> ]
+"13034" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Env()-&gt;locals)<SUB>2558</SUB>> ]
+"13040" [label = <(FIELD_IDENTIFIER,Capacity,Capacity)<SUB>2558</SUB>> ]
+"13045" [label = <(UNKNOWN,jint,jint)<SUB>2559</SUB>> ]
+"13046" [label = <(&lt;operator&gt;.subtraction,kLocalsInitial - capacity)<SUB>2559</SUB>> ]
+"13035" [label = <(Env,soa.Env())<SUB>2558</SUB>> ]
+"13039" [label = <(FIELD_IDENTIFIER,locals,locals)<SUB>2558</SUB>> ]
+"13036" [label = <(&lt;operator&gt;.fieldAccess,soa.Env)<SUB>2558</SUB>> ]
+"13038" [label = <(FIELD_IDENTIFIER,Env,Env)<SUB>2558</SUB>> ]
+"13028" [label = <(METHOD,&lt;clinit&gt;)> ]
+"13051" [label = <(METHOD_RETURN,ANY)> ]
+  "13030" -> "13045" 
+  "13041" -> "13051" 
+  "13032" -> "13030" 
+  "13043" -> "13041" 
+  "13033" -> "13032" 
+  "13044" -> "13043" 
+  "13034" -> "13040" 
+  "13040" -> "13033" 
+  "13045" -> "13046" 
   "13046" -> "13044" 
+  "13035" -> "13039" 
+  "13039" -> "13034" 
   "13036" -> "13035" 
-  "13047" -> "13046" 
-  "13037" -> "13043" 
-  "13043" -> "13036" 
-  "13048" -> "13049" 
-  "13049" -> "13047" 
-  "13038" -> "13042" 
-  "13042" -> "13037" 
-  "13039" -> "13038" 
-  "13041" -> "13039" 
-  "13031" -> "13041" 
+  "13038" -> "13036" 
+  "13028" -> "13038" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/249-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/249-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/249-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/249-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,50 +1,50 @@
 digraph "NewPrimitiveArray" {  
-"13061" [label = <(soa,soa(env))<SUB>2570</SUB>> ]
-"13082" [label = <(&lt;operator&gt;.assignment,* result = ArtT::Alloc(soa.Self(), length))<SUB>2575</SUB>> ]
-"13093" [label = <(RETURN,return soa.AddLocalReference&lt;JniT&gt;(result);,return soa.AddLocalReference&lt;JniT&gt;(result);)<SUB>2576</SUB>> ]
-"13064" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2571</SUB>> ]
-"13084" [label = <(ArtT::Alloc,ArtT::Alloc(soa.Self(), length))<SUB>2575</SUB>> ]
-"13094" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;JniT&gt;(result))<SUB>2576</SUB>> ]
-"13065" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2571</SUB>> ]
-"13069" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewPrimitiveArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2572</SUB>> ]
-"13079" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2573</SUB>> ]
-"13085" [label = <(&lt;operator&gt;.fieldAccess,ArtT::Alloc)<SUB>2575</SUB>> ]
-"13088" [label = <(Self,soa.Self())<SUB>2575</SUB>> ]
-"13095" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;JniT)<SUB>2576</SUB>> ]
-"13070" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2572</SUB>> ]
-"13087" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2575</SUB>> ]
-"13089" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2575</SUB>> ]
-"13096" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2576</SUB>> ]
-"13071" [label = <(Vm,soa.Vm())<SUB>2572</SUB>> ]
-"13075" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2572</SUB>> ]
-"13091" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2575</SUB>> ]
-"13098" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2576</SUB>> ]
-"13072" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2572</SUB>> ]
-"13074" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2572</SUB>> ]
-"13056" [label = <(METHOD,NewPrimitiveArray)<SUB>2569</SUB>> ]
-"13101" [label = <(METHOD_RETURN,JniT)<SUB>2569</SUB>> ]
-  "13061" -> "13065" 
-  "13082" -> "13098" 
-  "13093" -> "13101" 
-  "13064" -> "13074" 
-  "13064" -> "13087" 
+"13058" [label = <(soa,soa(env))<SUB>2568</SUB>> ]
+"13079" [label = <(&lt;operator&gt;.assignment,* result = ArtT::Alloc(soa.Self(), length))<SUB>2573</SUB>> ]
+"13090" [label = <(RETURN,return soa.AddLocalReference&lt;JniT&gt;(result);,return soa.AddLocalReference&lt;JniT&gt;(result);)<SUB>2574</SUB>> ]
+"13061" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2569</SUB>> ]
+"13081" [label = <(ArtT::Alloc,ArtT::Alloc(soa.Self(), length))<SUB>2573</SUB>> ]
+"13091" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;JniT&gt;(result))<SUB>2574</SUB>> ]
+"13062" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2569</SUB>> ]
+"13066" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewPrimitiveArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2570</SUB>> ]
+"13076" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2571</SUB>> ]
+"13082" [label = <(&lt;operator&gt;.fieldAccess,ArtT::Alloc)<SUB>2573</SUB>> ]
+"13085" [label = <(Self,soa.Self())<SUB>2573</SUB>> ]
+"13092" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;JniT)<SUB>2574</SUB>> ]
+"13067" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2570</SUB>> ]
+"13084" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2573</SUB>> ]
+"13086" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2573</SUB>> ]
+"13093" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2574</SUB>> ]
+"13068" [label = <(Vm,soa.Vm())<SUB>2570</SUB>> ]
+"13072" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2570</SUB>> ]
+"13088" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2573</SUB>> ]
+"13095" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2574</SUB>> ]
+"13069" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2570</SUB>> ]
+"13071" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2570</SUB>> ]
+"13053" [label = <(METHOD,NewPrimitiveArray)<SUB>2567</SUB>> ]
+"13098" [label = <(METHOD_RETURN,JniT)<SUB>2567</SUB>> ]
+  "13058" -> "13062" 
+  "13079" -> "13095" 
+  "13090" -> "13098" 
+  "13061" -> "13071" 
+  "13061" -> "13084" 
+  "13081" -> "13079" 
+  "13091" -> "13090" 
+  "13062" -> "13061" 
+  "13066" -> "13076" 
+  "13076" -> "13098" 
+  "13082" -> "13088" 
+  "13085" -> "13081" 
+  "13092" -> "13091" 
+  "13067" -> "13066" 
   "13084" -> "13082" 
-  "13094" -> "13093" 
-  "13065" -> "13064" 
-  "13069" -> "13079" 
-  "13079" -> "13101" 
-  "13085" -> "13091" 
-  "13088" -> "13084" 
-  "13095" -> "13094" 
-  "13070" -> "13069" 
-  "13087" -> "13085" 
-  "13089" -> "13088" 
-  "13096" -> "13095" 
-  "13071" -> "13075" 
-  "13075" -> "13070" 
-  "13091" -> "13089" 
-  "13098" -> "13096" 
-  "13072" -> "13071" 
-  "13074" -> "13072" 
-  "13056" -> "13061" 
+  "13086" -> "13085" 
+  "13093" -> "13092" 
+  "13068" -> "13072" 
+  "13072" -> "13067" 
+  "13088" -> "13086" 
+  "13095" -> "13093" 
+  "13069" -> "13068" 
+  "13071" -> "13069" 
+  "13053" -> "13058" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/25-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/25-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/25-cfg.dot	2023-06-07 19:34:22.027390837 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/25-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,34 +1,34 @@
 digraph "GetObjectClass" {  
-"933" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_object))<SUB>492</SUB>> ]
-"952" [label = <(soa,soa(env))<SUB>493</SUB>> ]
-"954" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>494</SUB>> ]
-"971" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());)<SUB>495</SUB>> ]
-"955" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>494</SUB>> ]
-"962" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>494</SUB>> ]
-"972" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass()))<SUB>495</SUB>> ]
-"956" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>494</SUB>> ]
-"963" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>494</SUB>> ]
-"973" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>495</SUB>> ]
-"978" [label = <(GetClass,o-&gt;GetClass())<SUB>495</SUB>> ]
-"937" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>492</SUB>> ]
-"958" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>494</SUB>> ]
-"964" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>494</SUB>> ]
-"967" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>494</SUB>> ]
-"974" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>495</SUB>> ]
-"979" [label = <(&lt;operator&gt;.indirectFieldAccess,o-&gt;GetClass)<SUB>495</SUB>> ]
-"938" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>492</SUB>> ]
-"942" [label = <(CHECK_NON_NULL_ARGUMENT(java_object),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_object == null&quot;))<SUB>492</SUB>> ]
-"949" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_object),CHECK_NON_NULL_ARGUMENT(java_object))<SUB>492</SUB>> ]
-"960" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>494</SUB>> ]
-"966" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>494</SUB>> ]
-"969" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>494</SUB>> ]
-"976" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>495</SUB>> ]
-"981" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>495</SUB>> ]
-"943" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>492</SUB>> ]
-"944" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>492</SUB>> ]
-"946" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>492</SUB>> ]
-"929" [label = <(METHOD,GetObjectClass)<SUB>491</SUB>> ]
-"982" [label = <(METHOD_RETURN,jclass)<SUB>491</SUB>> ]
+"933" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_object))<SUB>491</SUB>> ]
+"952" [label = <(soa,soa(env))<SUB>492</SUB>> ]
+"954" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>493</SUB>> ]
+"971" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());)<SUB>494</SUB>> ]
+"955" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>493</SUB>> ]
+"962" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>493</SUB>> ]
+"972" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass()))<SUB>494</SUB>> ]
+"956" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>493</SUB>> ]
+"963" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>493</SUB>> ]
+"973" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>494</SUB>> ]
+"978" [label = <(GetClass,o-&gt;GetClass())<SUB>494</SUB>> ]
+"937" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>491</SUB>> ]
+"958" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>493</SUB>> ]
+"964" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>493</SUB>> ]
+"967" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>493</SUB>> ]
+"974" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>494</SUB>> ]
+"979" [label = <(&lt;operator&gt;.indirectFieldAccess,o-&gt;GetClass)<SUB>494</SUB>> ]
+"938" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>491</SUB>> ]
+"942" [label = <(CHECK_NON_NULL_ARGUMENT(java_object),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_object == null&quot;))<SUB>491</SUB>> ]
+"949" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_object),CHECK_NON_NULL_ARGUMENT(java_object))<SUB>491</SUB>> ]
+"960" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>493</SUB>> ]
+"966" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>493</SUB>> ]
+"969" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>493</SUB>> ]
+"976" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>494</SUB>> ]
+"981" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>494</SUB>> ]
+"943" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>491</SUB>> ]
+"944" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>491</SUB>> ]
+"946" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>491</SUB>> ]
+"929" [label = <(METHOD,GetObjectClass)<SUB>490</SUB>> ]
+"982" [label = <(METHOD_RETURN,jclass)<SUB>490</SUB>> ]
   "933" -> "938" 
   "933" -> "952" 
   "952" -> "960" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/250-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/250-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/250-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/250-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,5 +1,5 @@
 digraph "DecodeAndCheckArrayType" {  
-"13103" [label = <(METHOD,DecodeAndCheckArrayType)<SUB>2580</SUB>> ]
-"13109" [label = <(METHOD_RETURN,ArtArrayT*)<SUB>2580</SUB>> ]
-  "13103" -> "13109" 
+"13100" [label = <(METHOD,DecodeAndCheckArrayType)<SUB>2578</SUB>> ]
+"13106" [label = <(METHOD_RETURN,ArtArrayT*)<SUB>2578</SUB>> ]
+  "13100" -> "13106" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/251-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/251-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/251-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/251-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,113 +1,113 @@
 digraph "GetPrimitiveArray" {  
-"13122" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2599</SUB>> ]
-"13141" [label = <(soa,soa(env))<SUB>2600</SUB>> ]
-"13144" [label = <(&lt;operator&gt;.assignment,* array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetArrayElements&quot;,\012 &quot;get&quot;))<SUB>2601</SUB>> ]
-"13146" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetArrayElements&quot;,\012 &quot;get&quot;))<SUB>2601</SUB>> ]
-"13152" [label = <(UNLIKELY,UNLIKELY(array == nullptr))<SUB>2604</SUB>> ]
-"13160" [label = <(IsMovableObject,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject(array))<SUB>2608</SUB>> ]
-"13153" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2604</SUB>> ]
-"13157" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2605</SUB>> ]
-"13161" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject)<SUB>2608</SUB>> ]
-"13182" [label = <(&lt;operator&gt;.assignment,component_size = sizeof(ElementT))<SUB>2612</SUB>> ]
-"13187" [label = <(&lt;operator&gt;.assignment,size = array-&gt;GetLength() * component_size)<SUB>2613</SUB>> ]
-"13196" [label = <(&lt;operator&gt;.assignment,* data = new uint64_t[RoundUp(size, 8) / 8])<SUB>2614</SUB>> ]
-"13200" [label = <(memcpy,memcpy(data, array-&gt;GetData(), size))<SUB>2615</SUB>> ]
-"13207" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(data);,return reinterpret_cast&lt;ElementT*&gt;(data);)<SUB>2616</SUB>> ]
-"13126" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2599</SUB>> ]
-"13162" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2608</SUB>> ]
-"13169" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2608</SUB>> ]
-"13173" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2609</SUB>> ]
-"13184" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2612</SUB>> ]
-"13189" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2613</SUB>> ]
-"13198" [label = <(&lt;operator&gt;.new,new uint64_t[RoundUp(size, 8) / 8])<SUB>2614</SUB>> ]
-"13202" [label = <(GetData,array-&gt;GetData())<SUB>2615</SUB>> ]
-"13208" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(data))<SUB>2616</SUB>> ]
-"13222" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());)<SUB>2621</SUB>> ]
-"13127" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2599</SUB>> ]
-"13131" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2599</SUB>> ]
-"13138" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2599</SUB>> ]
-"13163" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2608</SUB>> ]
-"13177" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2610</SUB>> ]
-"13190" [label = <(GetLength,array-&gt;GetLength())<SUB>2613</SUB>> ]
-"13203" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2615</SUB>> ]
-"13209" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2616</SUB>> ]
-"13214" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2618</SUB>> ]
-"13223" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData()))<SUB>2621</SUB>> ]
-"13132" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2599</SUB>> ]
-"13164" [label = <(Runtime::Current,Runtime::Current())<SUB>2608</SUB>> ]
-"13168" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2608</SUB>> ]
-"13178" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2610</SUB>> ]
-"13191" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2613</SUB>> ]
-"13205" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2615</SUB>> ]
-"13218" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2619</SUB>> ]
-"13224" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2621</SUB>> ]
-"13225" [label = <(GetData,array-&gt;GetData())<SUB>2621</SUB>> ]
-"13133" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2599</SUB>> ]
-"13135" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2599</SUB>> ]
-"13165" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2608</SUB>> ]
-"13193" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2613</SUB>> ]
-"13219" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2619</SUB>> ]
-"13226" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2621</SUB>> ]
-"13167" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2608</SUB>> ]
-"13228" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2621</SUB>> ]
-"13117" [label = <(METHOD,GetPrimitiveArray)<SUB>2598</SUB>> ]
-"13229" [label = <(METHOD_RETURN,ElementT)<SUB>2598</SUB>> ]
-  "13122" -> "13127" 
-  "13122" -> "13141" 
-  "13141" -> "13146" 
-  "13144" -> "13153" 
-  "13146" -> "13144" 
-  "13152" -> "13157" 
-  "13152" -> "13167" 
-  "13160" -> "13173" 
-  "13160" -> "13214" 
-  "13153" -> "13152" 
-  "13157" -> "13229" 
-  "13161" -> "13160" 
-  "13182" -> "13193" 
-  "13187" -> "13198" 
-  "13196" -> "13205" 
-  "13200" -> "13209" 
-  "13207" -> "13229" 
-  "13126" -> "13133" 
-  "13126" -> "13141" 
-  "13162" -> "13169" 
-  "13169" -> "13161" 
-  "13173" -> "13178" 
-  "13173" -> "13184" 
-  "13184" -> "13182" 
-  "13189" -> "13187" 
-  "13198" -> "13196" 
+"13119" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2597</SUB>> ]
+"13138" [label = <(soa,soa(env))<SUB>2598</SUB>> ]
+"13141" [label = <(&lt;operator&gt;.assignment,* array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetArrayElements&quot;,\012 &quot;get&quot;))<SUB>2599</SUB>> ]
+"13143" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetArrayElements&quot;,\012 &quot;get&quot;))<SUB>2599</SUB>> ]
+"13149" [label = <(UNLIKELY,UNLIKELY(array == nullptr))<SUB>2602</SUB>> ]
+"13157" [label = <(IsMovableObject,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject(array))<SUB>2606</SUB>> ]
+"13150" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2602</SUB>> ]
+"13154" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2603</SUB>> ]
+"13158" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject)<SUB>2606</SUB>> ]
+"13179" [label = <(&lt;operator&gt;.assignment,component_size = sizeof(ElementT))<SUB>2610</SUB>> ]
+"13184" [label = <(&lt;operator&gt;.assignment,size = array-&gt;GetLength() * component_size)<SUB>2611</SUB>> ]
+"13193" [label = <(&lt;operator&gt;.assignment,* data = new uint64_t[RoundUp(size, 8) / 8])<SUB>2612</SUB>> ]
+"13197" [label = <(memcpy,memcpy(data, array-&gt;GetData(), size))<SUB>2613</SUB>> ]
+"13204" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(data);,return reinterpret_cast&lt;ElementT*&gt;(data);)<SUB>2614</SUB>> ]
+"13123" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2597</SUB>> ]
+"13159" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2606</SUB>> ]
+"13166" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2606</SUB>> ]
+"13170" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2607</SUB>> ]
+"13181" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2610</SUB>> ]
+"13186" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2611</SUB>> ]
+"13195" [label = <(&lt;operator&gt;.new,new uint64_t[RoundUp(size, 8) / 8])<SUB>2612</SUB>> ]
+"13199" [label = <(GetData,array-&gt;GetData())<SUB>2613</SUB>> ]
+"13205" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(data))<SUB>2614</SUB>> ]
+"13219" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());)<SUB>2619</SUB>> ]
+"13124" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2597</SUB>> ]
+"13128" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2597</SUB>> ]
+"13135" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2597</SUB>> ]
+"13160" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2606</SUB>> ]
+"13174" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2608</SUB>> ]
+"13187" [label = <(GetLength,array-&gt;GetLength())<SUB>2611</SUB>> ]
+"13200" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2613</SUB>> ]
+"13206" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2614</SUB>> ]
+"13211" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2616</SUB>> ]
+"13220" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData()))<SUB>2619</SUB>> ]
+"13129" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2597</SUB>> ]
+"13161" [label = <(Runtime::Current,Runtime::Current())<SUB>2606</SUB>> ]
+"13165" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2606</SUB>> ]
+"13175" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2608</SUB>> ]
+"13188" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2611</SUB>> ]
+"13202" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2613</SUB>> ]
+"13215" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2617</SUB>> ]
+"13221" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2619</SUB>> ]
+"13222" [label = <(GetData,array-&gt;GetData())<SUB>2619</SUB>> ]
+"13130" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2597</SUB>> ]
+"13132" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2597</SUB>> ]
+"13162" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2606</SUB>> ]
+"13190" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2611</SUB>> ]
+"13216" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2617</SUB>> ]
+"13223" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2619</SUB>> ]
+"13164" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2606</SUB>> ]
+"13225" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2619</SUB>> ]
+"13114" [label = <(METHOD,GetPrimitiveArray)<SUB>2596</SUB>> ]
+"13226" [label = <(METHOD_RETURN,ElementT)<SUB>2596</SUB>> ]
+  "13119" -> "13124" 
+  "13119" -> "13138" 
+  "13138" -> "13143" 
+  "13141" -> "13150" 
+  "13143" -> "13141" 
+  "13149" -> "13154" 
+  "13149" -> "13164" 
+  "13157" -> "13170" 
+  "13157" -> "13211" 
+  "13150" -> "13149" 
+  "13154" -> "13226" 
+  "13158" -> "13157" 
+  "13179" -> "13190" 
+  "13184" -> "13195" 
+  "13193" -> "13202" 
+  "13197" -> "13206" 
+  "13204" -> "13226" 
+  "13123" -> "13130" 
+  "13123" -> "13138" 
+  "13159" -> "13166" 
+  "13166" -> "13158" 
+  "13170" -> "13175" 
+  "13170" -> "13181" 
+  "13181" -> "13179" 
+  "13186" -> "13184" 
+  "13195" -> "13193" 
+  "13199" -> "13197" 
+  "13205" -> "13204" 
+  "13219" -> "13226" 
+  "13124" -> "13123" 
+  "13128" -> "13135" 
+  "13135" -> "13226" 
+  "13160" -> "13159" 
+  "13174" -> "13181" 
+  "13187" -> "13186" 
+  "13200" -> "13199" 
+  "13206" -> "13205" 
+  "13211" -> "13221" 
+  "13211" -> "13216" 
+  "13220" -> "13219" 
+  "13129" -> "13128" 
+  "13161" -> "13165" 
+  "13165" -> "13160" 
+  "13175" -> "13174" 
+  "13188" -> "13187" 
   "13202" -> "13200" 
-  "13208" -> "13207" 
-  "13222" -> "13229" 
-  "13127" -> "13126" 
-  "13131" -> "13138" 
-  "13138" -> "13229" 
-  "13163" -> "13162" 
-  "13177" -> "13184" 
-  "13190" -> "13189" 
-  "13203" -> "13202" 
-  "13209" -> "13208" 
-  "13214" -> "13224" 
-  "13214" -> "13219" 
+  "13215" -> "13221" 
+  "13221" -> "13225" 
+  "13222" -> "13220" 
+  "13130" -> "13132" 
+  "13132" -> "13129" 
+  "13162" -> "13161" 
+  "13190" -> "13188" 
+  "13216" -> "13215" 
   "13223" -> "13222" 
-  "13132" -> "13131" 
-  "13164" -> "13168" 
-  "13168" -> "13163" 
-  "13178" -> "13177" 
-  "13191" -> "13190" 
-  "13205" -> "13203" 
-  "13218" -> "13224" 
-  "13224" -> "13228" 
+  "13164" -> "13162" 
   "13225" -> "13223" 
-  "13133" -> "13135" 
-  "13135" -> "13132" 
-  "13165" -> "13164" 
-  "13193" -> "13191" 
-  "13219" -> "13218" 
-  "13226" -> "13225" 
-  "13167" -> "13165" 
-  "13228" -> "13226" 
-  "13117" -> "13122" 
+  "13114" -> "13119" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/252-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/252-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/252-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/252-cfg.dot	2023-06-07 19:34:28.707390215 +0330
@@ -1,38 +1,38 @@
 digraph "ReleasePrimitiveArray" {  
-"13237" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2627</SUB>> ]
-"13255" [label = <(soa,soa(env))<SUB>2628</SUB>> ]
-"13258" [label = <(&lt;operator&gt;.assignment,* array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;ReleaseArrayElements&quot;,\012 &quot;release&quot;))<SUB>2629</SUB>> ]
-"13271" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, sizeof(ElementT), elements, mode))<SUB>2635</SUB>> ]
-"13260" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;ReleaseArrayElements&quot;,\012 &quot;release&quot;))<SUB>2629</SUB>> ]
-"13266" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2632</SUB>> ]
-"13274" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2635</SUB>> ]
-"13270" [label = <(RETURN,return;,return;)<SUB>2633</SUB>> ]
-"13241" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2627</SUB>> ]
-"13242" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2627</SUB>> ]
-"13246" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2627</SUB>> ]
-"13253" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2627</SUB>> ]
-"13247" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2627</SUB>> ]
-"13248" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2627</SUB>> ]
-"13250" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2627</SUB>> ]
-"13231" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2626</SUB>> ]
-"13278" [label = <(METHOD_RETURN,void)<SUB>2626</SUB>> ]
-  "13237" -> "13242" 
-  "13237" -> "13255" 
-  "13255" -> "13260" 
-  "13258" -> "13266" 
-  "13271" -> "13278" 
-  "13260" -> "13258" 
-  "13266" -> "13270" 
-  "13266" -> "13274" 
-  "13274" -> "13271" 
-  "13270" -> "13278" 
-  "13241" -> "13248" 
-  "13241" -> "13255" 
-  "13242" -> "13241" 
-  "13246" -> "13253" 
-  "13253" -> "13278" 
-  "13247" -> "13246" 
-  "13248" -> "13250" 
-  "13250" -> "13247" 
-  "13231" -> "13237" 
+"13234" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2625</SUB>> ]
+"13252" [label = <(soa,soa(env))<SUB>2626</SUB>> ]
+"13255" [label = <(&lt;operator&gt;.assignment,* array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;ReleaseArrayElements&quot;,\012 &quot;release&quot;))<SUB>2627</SUB>> ]
+"13268" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, sizeof(ElementT), elements, mode))<SUB>2633</SUB>> ]
+"13257" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;ReleaseArrayElements&quot;,\012 &quot;release&quot;))<SUB>2627</SUB>> ]
+"13263" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2630</SUB>> ]
+"13271" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2633</SUB>> ]
+"13267" [label = <(RETURN,return;,return;)<SUB>2631</SUB>> ]
+"13238" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2625</SUB>> ]
+"13239" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2625</SUB>> ]
+"13243" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2625</SUB>> ]
+"13250" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2625</SUB>> ]
+"13244" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2625</SUB>> ]
+"13245" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2625</SUB>> ]
+"13247" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2625</SUB>> ]
+"13228" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2624</SUB>> ]
+"13275" [label = <(METHOD_RETURN,void)<SUB>2624</SUB>> ]
+  "13234" -> "13239" 
+  "13234" -> "13252" 
+  "13252" -> "13257" 
+  "13255" -> "13263" 
+  "13268" -> "13275" 
+  "13257" -> "13255" 
+  "13263" -> "13267" 
+  "13263" -> "13271" 
+  "13271" -> "13268" 
+  "13267" -> "13275" 
+  "13238" -> "13245" 
+  "13238" -> "13252" 
+  "13239" -> "13238" 
+  "13243" -> "13250" 
+  "13250" -> "13275" 
+  "13244" -> "13243" 
+  "13245" -> "13247" 
+  "13247" -> "13244" 
+  "13228" -> "13234" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/253-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/253-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/253-cfg.dot	2023-06-07 19:34:22.197390820 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/253-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "ReleasePrimitiveArray" {  
-"13280" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2638</SUB>> ]
-"13287" [label = <(METHOD_RETURN,void)<SUB>2638</SUB>> ]
-  "13280" -> "13287" 
+"13277" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2636</SUB>> ]
+"13284" [label = <(METHOD_RETURN,void)<SUB>2636</SUB>> ]
+  "13277" -> "13284" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/254-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/254-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/254-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/254-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,94 +1,94 @@
 digraph "GetPrimitiveArrayRegion" {  
-"13326" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2680</SUB>> ]
-"13344" [label = <(soa,soa(env))<SUB>2681</SUB>> ]
-"13347" [label = <(&lt;operator&gt;.assignment,* array =\012 DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetPrimitiveArrayRegion&quot;,\012 &quot;get region of&quot;))<SUB>2682</SUB>> ]
-"13349" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetPrimitiveArrayRegion&quot;,\012 &quot;get region of&quot;))<SUB>2683</SUB>> ]
-"13355" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2686</SUB>> ]
-"13330" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2680</SUB>> ]
-"13360" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2687</SUB>> ]
-"13331" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2680</SUB>> ]
-"13335" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2680</SUB>> ]
-"13342" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2680</SUB>> ]
-"13361" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2687</SUB>> ]
-"13368" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2687</SUB>> ]
-"13377" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;src&quot;))<SUB>2688</SUB>> ]
-"13336" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2680</SUB>> ]
-"13362" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2687</SUB>> ]
-"13365" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2687</SUB>> ]
-"13370" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2687</SUB>> ]
-"13385" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2690</SUB>> ]
-"13408" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2691</SUB>> ]
-"13414" [label = <(memcpy,memcpy(buf, data + start, length * sizeof(ElementT)))<SUB>2692</SUB>> ]
-"13337" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2680</SUB>> ]
-"13339" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2680</SUB>> ]
-"13371" [label = <(GetLength,array-&gt;GetLength())<SUB>2687</SUB>> ]
-"13410" [label = <(GetData,array-&gt;GetData())<SUB>2691</SUB>> ]
-"13416" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2692</SUB>> ]
-"13419" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2692</SUB>> ]
-"13372" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2687</SUB>> ]
-"13411" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2691</SUB>> ]
-"13421" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2692</SUB>> ]
-"13374" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2687</SUB>> ]
-"13390" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2690</SUB>> ]
-"13413" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2691</SUB>> ]
-"13391" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2690</SUB>> ]
-"13399" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;buf == null&quot;))<SUB>2690</SUB>> ]
-"13406" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2690</SUB>> ]
-"13392" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2690</SUB>> ]
-"13395" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2690</SUB>> ]
-"13400" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2690</SUB>> ]
-"13401" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2690</SUB>> ]
-"13403" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2690</SUB>> ]
-"13319" [label = <(METHOD,GetPrimitiveArrayRegion)<SUB>2678</SUB>> ]
-"13423" [label = <(METHOD_RETURN,void)<SUB>2678</SUB>> ]
-  "13326" -> "13331" 
-  "13326" -> "13344" 
-  "13344" -> "13349" 
-  "13347" -> "13355" 
-  "13349" -> "13347" 
-  "13355" -> "13423" 
-  "13355" -> "13362" 
-  "13330" -> "13337" 
-  "13330" -> "13344" 
-  "13360" -> "13377" 
-  "13360" -> "13385" 
-  "13331" -> "13330" 
-  "13335" -> "13342" 
-  "13342" -> "13423" 
-  "13361" -> "13360" 
-  "13361" -> "13374" 
-  "13368" -> "13360" 
-  "13377" -> "13423" 
-  "13336" -> "13335" 
-  "13362" -> "13361" 
-  "13362" -> "13365" 
-  "13365" -> "13361" 
-  "13370" -> "13368" 
-  "13385" -> "13392" 
-  "13385" -> "13413" 
-  "13408" -> "13416" 
-  "13414" -> "13423" 
-  "13337" -> "13339" 
-  "13339" -> "13336" 
-  "13371" -> "13370" 
+"13323" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2678</SUB>> ]
+"13341" [label = <(soa,soa(env))<SUB>2679</SUB>> ]
+"13344" [label = <(&lt;operator&gt;.assignment,* array =\012 DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetPrimitiveArrayRegion&quot;,\012 &quot;get region of&quot;))<SUB>2680</SUB>> ]
+"13346" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetPrimitiveArrayRegion&quot;,\012 &quot;get region of&quot;))<SUB>2681</SUB>> ]
+"13352" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2684</SUB>> ]
+"13327" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2678</SUB>> ]
+"13357" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2685</SUB>> ]
+"13328" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2678</SUB>> ]
+"13332" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2678</SUB>> ]
+"13339" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2678</SUB>> ]
+"13358" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2685</SUB>> ]
+"13365" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2685</SUB>> ]
+"13374" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;src&quot;))<SUB>2686</SUB>> ]
+"13333" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2678</SUB>> ]
+"13359" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2685</SUB>> ]
+"13362" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2685</SUB>> ]
+"13367" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2685</SUB>> ]
+"13382" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2688</SUB>> ]
+"13405" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2689</SUB>> ]
+"13411" [label = <(memcpy,memcpy(buf, data + start, length * sizeof(ElementT)))<SUB>2690</SUB>> ]
+"13334" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2678</SUB>> ]
+"13336" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2678</SUB>> ]
+"13368" [label = <(GetLength,array-&gt;GetLength())<SUB>2685</SUB>> ]
+"13407" [label = <(GetData,array-&gt;GetData())<SUB>2689</SUB>> ]
+"13413" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2690</SUB>> ]
+"13416" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2690</SUB>> ]
+"13369" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2685</SUB>> ]
+"13408" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2689</SUB>> ]
+"13418" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2690</SUB>> ]
+"13371" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2685</SUB>> ]
+"13387" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2688</SUB>> ]
+"13410" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2689</SUB>> ]
+"13388" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2688</SUB>> ]
+"13396" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;buf == null&quot;))<SUB>2688</SUB>> ]
+"13403" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2688</SUB>> ]
+"13389" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2688</SUB>> ]
+"13392" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2688</SUB>> ]
+"13397" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2688</SUB>> ]
+"13398" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2688</SUB>> ]
+"13400" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2688</SUB>> ]
+"13316" [label = <(METHOD,GetPrimitiveArrayRegion)<SUB>2676</SUB>> ]
+"13420" [label = <(METHOD_RETURN,void)<SUB>2676</SUB>> ]
+  "13323" -> "13328" 
+  "13323" -> "13341" 
+  "13341" -> "13346" 
+  "13344" -> "13352" 
+  "13346" -> "13344" 
+  "13352" -> "13420" 
+  "13352" -> "13359" 
+  "13327" -> "13334" 
+  "13327" -> "13341" 
+  "13357" -> "13374" 
+  "13357" -> "13382" 
+  "13328" -> "13327" 
+  "13332" -> "13339" 
+  "13339" -> "13420" 
+  "13358" -> "13357" 
+  "13358" -> "13371" 
+  "13365" -> "13357" 
+  "13374" -> "13420" 
+  "13333" -> "13332" 
+  "13359" -> "13358" 
+  "13359" -> "13362" 
+  "13362" -> "13358" 
+  "13367" -> "13365" 
+  "13382" -> "13389" 
+  "13382" -> "13410" 
+  "13405" -> "13413" 
+  "13411" -> "13420" 
+  "13334" -> "13336" 
+  "13336" -> "13333" 
+  "13368" -> "13367" 
+  "13407" -> "13405" 
+  "13413" -> "13418" 
+  "13416" -> "13411" 
+  "13369" -> "13368" 
+  "13408" -> "13407" 
+  "13418" -> "13416" 
+  "13371" -> "13369" 
+  "13387" -> "13398" 
+  "13387" -> "13410" 
   "13410" -> "13408" 
-  "13416" -> "13421" 
-  "13419" -> "13414" 
-  "13372" -> "13371" 
-  "13411" -> "13410" 
-  "13421" -> "13419" 
-  "13374" -> "13372" 
-  "13390" -> "13401" 
-  "13390" -> "13413" 
-  "13413" -> "13411" 
-  "13391" -> "13390" 
-  "13399" -> "13406" 
-  "13406" -> "13423" 
-  "13392" -> "13391" 
-  "13392" -> "13395" 
-  "13395" -> "13391" 
-  "13400" -> "13399" 
-  "13401" -> "13403" 
-  "13403" -> "13400" 
-  "13319" -> "13326" 
+  "13388" -> "13387" 
+  "13396" -> "13403" 
+  "13403" -> "13420" 
+  "13389" -> "13388" 
+  "13389" -> "13392" 
+  "13392" -> "13388" 
+  "13397" -> "13396" 
+  "13398" -> "13400" 
+  "13400" -> "13397" 
+  "13316" -> "13323" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/255-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/255-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/255-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/255-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,94 +1,94 @@
 digraph "SetPrimitiveArrayRegion" {  
-"13432" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2700</SUB>> ]
-"13450" [label = <(soa,soa(env))<SUB>2701</SUB>> ]
-"13453" [label = <(&lt;operator&gt;.assignment,* array =\012 DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;SetPrimitiveArrayRegion&quot;,\012 &quot;set region of&quot;))<SUB>2702</SUB>> ]
-"13455" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;SetPrimitiveArrayRegion&quot;,\012 &quot;set region of&quot;))<SUB>2703</SUB>> ]
-"13461" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2706</SUB>> ]
-"13436" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2700</SUB>> ]
-"13466" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2707</SUB>> ]
-"13437" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2700</SUB>> ]
-"13441" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2700</SUB>> ]
-"13448" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2700</SUB>> ]
-"13467" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2707</SUB>> ]
-"13474" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2707</SUB>> ]
-"13483" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;dst&quot;))<SUB>2708</SUB>> ]
-"13442" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2700</SUB>> ]
-"13468" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2707</SUB>> ]
-"13471" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2707</SUB>> ]
-"13476" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2707</SUB>> ]
-"13491" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2710</SUB>> ]
-"13514" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2711</SUB>> ]
-"13520" [label = <(memcpy,memcpy(data + start, buf, length * sizeof(ElementT)))<SUB>2712</SUB>> ]
-"13443" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2700</SUB>> ]
-"13445" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2700</SUB>> ]
-"13477" [label = <(GetLength,array-&gt;GetLength())<SUB>2707</SUB>> ]
-"13516" [label = <(GetData,array-&gt;GetData())<SUB>2711</SUB>> ]
-"13521" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2712</SUB>> ]
-"13525" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2712</SUB>> ]
-"13478" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2707</SUB>> ]
-"13517" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2711</SUB>> ]
-"13527" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2712</SUB>> ]
-"13480" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2707</SUB>> ]
-"13496" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2710</SUB>> ]
-"13519" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2711</SUB>> ]
-"13497" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2710</SUB>> ]
-"13505" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;buf == null&quot;))<SUB>2710</SUB>> ]
-"13512" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2710</SUB>> ]
-"13498" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2710</SUB>> ]
-"13501" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2710</SUB>> ]
-"13506" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2710</SUB>> ]
-"13507" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2710</SUB>> ]
-"13509" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2710</SUB>> ]
-"13425" [label = <(METHOD,SetPrimitiveArrayRegion)<SUB>2698</SUB>> ]
-"13529" [label = <(METHOD_RETURN,void)<SUB>2698</SUB>> ]
-  "13432" -> "13437" 
-  "13432" -> "13450" 
-  "13450" -> "13455" 
-  "13453" -> "13461" 
-  "13455" -> "13453" 
-  "13461" -> "13529" 
-  "13461" -> "13468" 
-  "13436" -> "13443" 
-  "13436" -> "13450" 
-  "13466" -> "13483" 
-  "13466" -> "13491" 
-  "13437" -> "13436" 
-  "13441" -> "13448" 
-  "13448" -> "13529" 
-  "13467" -> "13466" 
-  "13467" -> "13480" 
-  "13474" -> "13466" 
-  "13483" -> "13529" 
-  "13442" -> "13441" 
-  "13468" -> "13467" 
-  "13468" -> "13471" 
-  "13471" -> "13467" 
-  "13476" -> "13474" 
-  "13491" -> "13498" 
-  "13491" -> "13519" 
-  "13514" -> "13521" 
-  "13520" -> "13529" 
-  "13443" -> "13445" 
-  "13445" -> "13442" 
-  "13477" -> "13476" 
+"13429" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2698</SUB>> ]
+"13447" [label = <(soa,soa(env))<SUB>2699</SUB>> ]
+"13450" [label = <(&lt;operator&gt;.assignment,* array =\012 DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;SetPrimitiveArrayRegion&quot;,\012 &quot;set region of&quot;))<SUB>2700</SUB>> ]
+"13452" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;SetPrimitiveArrayRegion&quot;,\012 &quot;set region of&quot;))<SUB>2701</SUB>> ]
+"13458" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2704</SUB>> ]
+"13433" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2698</SUB>> ]
+"13463" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2705</SUB>> ]
+"13434" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2698</SUB>> ]
+"13438" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2698</SUB>> ]
+"13445" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2698</SUB>> ]
+"13464" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2705</SUB>> ]
+"13471" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2705</SUB>> ]
+"13480" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;dst&quot;))<SUB>2706</SUB>> ]
+"13439" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2698</SUB>> ]
+"13465" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2705</SUB>> ]
+"13468" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2705</SUB>> ]
+"13473" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2705</SUB>> ]
+"13488" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2708</SUB>> ]
+"13511" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2709</SUB>> ]
+"13517" [label = <(memcpy,memcpy(data + start, buf, length * sizeof(ElementT)))<SUB>2710</SUB>> ]
+"13440" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2698</SUB>> ]
+"13442" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2698</SUB>> ]
+"13474" [label = <(GetLength,array-&gt;GetLength())<SUB>2705</SUB>> ]
+"13513" [label = <(GetData,array-&gt;GetData())<SUB>2709</SUB>> ]
+"13518" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2710</SUB>> ]
+"13522" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2710</SUB>> ]
+"13475" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2705</SUB>> ]
+"13514" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2709</SUB>> ]
+"13524" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2710</SUB>> ]
+"13477" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2705</SUB>> ]
+"13493" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2708</SUB>> ]
+"13516" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2709</SUB>> ]
+"13494" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2708</SUB>> ]
+"13502" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;buf == null&quot;))<SUB>2708</SUB>> ]
+"13509" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2708</SUB>> ]
+"13495" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2708</SUB>> ]
+"13498" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2708</SUB>> ]
+"13503" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2708</SUB>> ]
+"13504" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2708</SUB>> ]
+"13506" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2708</SUB>> ]
+"13422" [label = <(METHOD,SetPrimitiveArrayRegion)<SUB>2696</SUB>> ]
+"13526" [label = <(METHOD_RETURN,void)<SUB>2696</SUB>> ]
+  "13429" -> "13434" 
+  "13429" -> "13447" 
+  "13447" -> "13452" 
+  "13450" -> "13458" 
+  "13452" -> "13450" 
+  "13458" -> "13526" 
+  "13458" -> "13465" 
+  "13433" -> "13440" 
+  "13433" -> "13447" 
+  "13463" -> "13480" 
+  "13463" -> "13488" 
+  "13434" -> "13433" 
+  "13438" -> "13445" 
+  "13445" -> "13526" 
+  "13464" -> "13463" 
+  "13464" -> "13477" 
+  "13471" -> "13463" 
+  "13480" -> "13526" 
+  "13439" -> "13438" 
+  "13465" -> "13464" 
+  "13465" -> "13468" 
+  "13468" -> "13464" 
+  "13473" -> "13471" 
+  "13488" -> "13495" 
+  "13488" -> "13516" 
+  "13511" -> "13518" 
+  "13517" -> "13526" 
+  "13440" -> "13442" 
+  "13442" -> "13439" 
+  "13474" -> "13473" 
+  "13513" -> "13511" 
+  "13518" -> "13524" 
+  "13522" -> "13517" 
+  "13475" -> "13474" 
+  "13514" -> "13513" 
+  "13524" -> "13522" 
+  "13477" -> "13475" 
+  "13493" -> "13504" 
+  "13493" -> "13516" 
   "13516" -> "13514" 
-  "13521" -> "13527" 
-  "13525" -> "13520" 
-  "13478" -> "13477" 
-  "13517" -> "13516" 
-  "13527" -> "13525" 
-  "13480" -> "13478" 
-  "13496" -> "13507" 
-  "13496" -> "13519" 
-  "13519" -> "13517" 
-  "13497" -> "13496" 
-  "13505" -> "13512" 
-  "13512" -> "13529" 
-  "13498" -> "13497" 
-  "13498" -> "13501" 
-  "13501" -> "13497" 
-  "13506" -> "13505" 
-  "13507" -> "13509" 
-  "13509" -> "13506" 
-  "13425" -> "13432" 
+  "13494" -> "13493" 
+  "13502" -> "13509" 
+  "13509" -> "13526" 
+  "13495" -> "13494" 
+  "13495" -> "13498" 
+  "13498" -> "13494" 
+  "13503" -> "13502" 
+  "13504" -> "13506" 
+  "13506" -> "13503" 
+  "13422" -> "13429" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/256-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/256-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/256-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/256-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,9 +1,9 @@
 digraph "GetJniNativeInterface" {  
-"14229" [label = <(RETURN,return &amp;gJniNativeInterface;,return &amp;gJniNativeInterface;)<SUB>2955</SUB>> ]
-"14230" [label = <(&lt;operator&gt;.addressOf,&amp;gJniNativeInterface)<SUB>2955</SUB>> ]
-"14227" [label = <(METHOD,GetJniNativeInterface)<SUB>2954</SUB>> ]
-"14232" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>2954</SUB>> ]
-  "14229" -> "14232" 
-  "14230" -> "14229" 
-  "14227" -> "14230" 
+"14226" [label = <(RETURN,return &amp;gJniNativeInterface;,return &amp;gJniNativeInterface;)<SUB>2953</SUB>> ]
+"14227" [label = <(&lt;operator&gt;.addressOf,&amp;gJniNativeInterface)<SUB>2953</SUB>> ]
+"14224" [label = <(METHOD,GetJniNativeInterface)<SUB>2952</SUB>> ]
+"14229" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>2952</SUB>> ]
+  "14226" -> "14229" 
+  "14227" -> "14226" 
+  "14224" -> "14227" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/257-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/257-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/257-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/257-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "gJniSleepForeverStub" {  
-"14234" [label = <(METHOD,gJniSleepForeverStub)<SUB>2958</SUB>> ]
-"14236" [label = <(METHOD_RETURN,void)<SUB>2958</SUB>> ]
-  "14234" -> "14236" 
+"14231" [label = <(METHOD,gJniSleepForeverStub)<SUB>2956</SUB>> ]
+"14233" [label = <(METHOD_RETURN,void)<SUB>2956</SUB>> ]
+  "14231" -> "14233" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/258-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/258-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/258-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/258-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,13 +1,13 @@
 digraph "GetRuntimeShutdownNativeInterface" {  
-"14476" [label = <(RETURN,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);)<SUB>3195</SUB>> ]
-"14477" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub))<SUB>3195</SUB>> ]
-"14478" [label = <(UNKNOWN,JNINativeInterface*,JNINativeInterface*)<SUB>3195</SUB>> ]
-"14479" [label = <(&lt;operator&gt;.addressOf,&amp;gJniSleepForeverStub)<SUB>3195</SUB>> ]
-"14474" [label = <(METHOD,GetRuntimeShutdownNativeInterface)<SUB>3194</SUB>> ]
-"14481" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3194</SUB>> ]
-  "14476" -> "14481" 
-  "14477" -> "14476" 
-  "14478" -> "14479" 
-  "14479" -> "14477" 
-  "14474" -> "14478" 
+"14473" [label = <(RETURN,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);)<SUB>3193</SUB>> ]
+"14474" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub))<SUB>3193</SUB>> ]
+"14475" [label = <(UNKNOWN,JNINativeInterface*,JNINativeInterface*)<SUB>3193</SUB>> ]
+"14476" [label = <(&lt;operator&gt;.addressOf,&amp;gJniSleepForeverStub)<SUB>3193</SUB>> ]
+"14471" [label = <(METHOD,GetRuntimeShutdownNativeInterface)<SUB>3192</SUB>> ]
+"14478" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3192</SUB>> ]
+  "14473" -> "14478" 
+  "14474" -> "14473" 
+  "14475" -> "14476" 
+  "14476" -> "14474" 
+  "14471" -> "14475" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/259-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/259-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/259-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/259-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,44 +1,44 @@
 digraph "RegisterNativeMethods" {  
-"14489" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jclass&gt; c(env, env-&gt;FindClass(jni_class_name)))<SUB>3200</SUB>> ]
-"14514" [label = <(JNI::RegisterNativeMethods,JNI::RegisterNativeMethods(env, c.get(), methods, method_count, false))<SUB>3204</SUB>> ]
-"14490" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jclass)<SUB>3200</SUB>> ]
-"14493" [label = <(c,c(env, env-&gt;FindClass(jni_class_name)))<SUB>3200</SUB>> ]
-"14501" [label = <(&lt;operator&gt;.equals,c.get() == nullptr)<SUB>3201</SUB>> ]
-"14515" [label = <(&lt;operator&gt;.fieldAccess,JNI::RegisterNativeMethods)<SUB>3204</SUB>> ]
-"14519" [label = <(get,c.get())<SUB>3204</SUB>> ]
-"14495" [label = <(FindClass,env-&gt;FindClass(jni_class_name))<SUB>3200</SUB>> ]
-"14502" [label = <(get,c.get())<SUB>3201</SUB>> ]
-"14508" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;Couldn't find class: &quot; &lt;&lt; jni_class_name)<SUB>3202</SUB>> ]
-"14517" [label = <(FIELD_IDENTIFIER,RegisterNativeMethods,RegisterNativeMethods)<SUB>3204</SUB>> ]
-"14520" [label = <(&lt;operator&gt;.fieldAccess,c.get)<SUB>3204</SUB>> ]
-"14496" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;FindClass)<SUB>3200</SUB>> ]
-"14503" [label = <(&lt;operator&gt;.fieldAccess,c.get)<SUB>3201</SUB>> ]
-"14509" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;Couldn't find class: &quot;)<SUB>3202</SUB>> ]
-"14522" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3204</SUB>> ]
-"14498" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>3200</SUB>> ]
-"14505" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3201</SUB>> ]
-"14510" [label = <(LOG,LOG(FATAL))<SUB>3202</SUB>> ]
-"14483" [label = <(METHOD,RegisterNativeMethods)<SUB>3198</SUB>> ]
-"14526" [label = <(METHOD_RETURN,void)<SUB>3198</SUB>> ]
-  "14489" -> "14505" 
-  "14514" -> "14526" 
-  "14490" -> "14498" 
-  "14493" -> "14489" 
-  "14501" -> "14510" 
-  "14501" -> "14517" 
-  "14515" -> "14522" 
-  "14519" -> "14514" 
+"14486" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jclass&gt; c(env, env-&gt;FindClass(jni_class_name)))<SUB>3198</SUB>> ]
+"14511" [label = <(JNI::RegisterNativeMethods,JNI::RegisterNativeMethods(env, c.get(), methods, method_count, false))<SUB>3202</SUB>> ]
+"14487" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jclass)<SUB>3198</SUB>> ]
+"14490" [label = <(c,c(env, env-&gt;FindClass(jni_class_name)))<SUB>3198</SUB>> ]
+"14498" [label = <(&lt;operator&gt;.equals,c.get() == nullptr)<SUB>3199</SUB>> ]
+"14512" [label = <(&lt;operator&gt;.fieldAccess,JNI::RegisterNativeMethods)<SUB>3202</SUB>> ]
+"14516" [label = <(get,c.get())<SUB>3202</SUB>> ]
+"14492" [label = <(FindClass,env-&gt;FindClass(jni_class_name))<SUB>3198</SUB>> ]
+"14499" [label = <(get,c.get())<SUB>3199</SUB>> ]
+"14505" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;Couldn't find class: &quot; &lt;&lt; jni_class_name)<SUB>3200</SUB>> ]
+"14514" [label = <(FIELD_IDENTIFIER,RegisterNativeMethods,RegisterNativeMethods)<SUB>3202</SUB>> ]
+"14517" [label = <(&lt;operator&gt;.fieldAccess,c.get)<SUB>3202</SUB>> ]
+"14493" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;FindClass)<SUB>3198</SUB>> ]
+"14500" [label = <(&lt;operator&gt;.fieldAccess,c.get)<SUB>3199</SUB>> ]
+"14506" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;Couldn't find class: &quot;)<SUB>3200</SUB>> ]
+"14519" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3202</SUB>> ]
+"14495" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>3198</SUB>> ]
+"14502" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3199</SUB>> ]
+"14507" [label = <(LOG,LOG(FATAL))<SUB>3200</SUB>> ]
+"14480" [label = <(METHOD,RegisterNativeMethods)<SUB>3196</SUB>> ]
+"14523" [label = <(METHOD_RETURN,void)<SUB>3196</SUB>> ]
+  "14486" -> "14502" 
+  "14511" -> "14523" 
+  "14487" -> "14495" 
+  "14490" -> "14486" 
+  "14498" -> "14507" 
+  "14498" -> "14514" 
+  "14512" -> "14519" 
+  "14516" -> "14511" 
+  "14492" -> "14490" 
+  "14499" -> "14498" 
+  "14505" -> "14514" 
+  "14514" -> "14512" 
+  "14517" -> "14516" 
+  "14493" -> "14492" 
+  "14500" -> "14499" 
+  "14506" -> "14505" 
+  "14519" -> "14517" 
   "14495" -> "14493" 
-  "14502" -> "14501" 
-  "14508" -> "14517" 
-  "14517" -> "14515" 
-  "14520" -> "14519" 
-  "14496" -> "14495" 
-  "14503" -> "14502" 
-  "14509" -> "14508" 
-  "14522" -> "14520" 
-  "14498" -> "14496" 
-  "14505" -> "14503" 
-  "14510" -> "14509" 
-  "14483" -> "14490" 
+  "14502" -> "14500" 
+  "14507" -> "14506" 
+  "14480" -> "14487" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/26-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/26-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/26-cfg.dot	2023-06-07 19:34:22.027390837 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/26-cfg.dot	2023-06-07 19:34:28.557390228 +0330
@@ -1,38 +1,38 @@
 digraph "GetSuperclass" {  
-"988" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>499</SUB>> ]
-"1007" [label = <(soa,soa(env))<SUB>500</SUB>> ]
-"1009" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>501</SUB>> ]
-"1026" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());)<SUB>502</SUB>> ]
-"1010" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>501</SUB>> ]
-"1017" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>501</SUB>> ]
-"1027" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass()))<SUB>502</SUB>> ]
-"1011" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>501</SUB>> ]
-"1018" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>501</SUB>> ]
-"1028" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>502</SUB>> ]
-"1033" [label = <(&lt;operator&gt;.conditional,c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass())<SUB>502</SUB>> ]
-"992" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>499</SUB>> ]
-"1013" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>501</SUB>> ]
-"1019" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>501</SUB>> ]
-"1022" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>501</SUB>> ]
-"1029" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>502</SUB>> ]
-"1034" [label = <(IsInterface,c-&gt;IsInterface())<SUB>502</SUB>> ]
-"1039" [label = <(GetSuperClass,c-&gt;GetSuperClass())<SUB>502</SUB>> ]
-"993" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>499</SUB>> ]
-"997" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>499</SUB>> ]
-"1004" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>499</SUB>> ]
-"1015" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>501</SUB>> ]
-"1021" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>501</SUB>> ]
-"1024" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>501</SUB>> ]
-"1031" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>502</SUB>> ]
-"1035" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsInterface)<SUB>502</SUB>> ]
-"1040" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetSuperClass)<SUB>502</SUB>> ]
-"998" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>499</SUB>> ]
-"1037" [label = <(FIELD_IDENTIFIER,IsInterface,IsInterface)<SUB>502</SUB>> ]
-"1042" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>502</SUB>> ]
-"999" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>499</SUB>> ]
-"1001" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>499</SUB>> ]
-"984" [label = <(METHOD,GetSuperclass)<SUB>498</SUB>> ]
-"1043" [label = <(METHOD_RETURN,jclass)<SUB>498</SUB>> ]
+"988" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>498</SUB>> ]
+"1007" [label = <(soa,soa(env))<SUB>499</SUB>> ]
+"1009" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>500</SUB>> ]
+"1026" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());)<SUB>501</SUB>> ]
+"1010" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>500</SUB>> ]
+"1017" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>500</SUB>> ]
+"1027" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass()))<SUB>501</SUB>> ]
+"1011" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>500</SUB>> ]
+"1018" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>500</SUB>> ]
+"1028" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>501</SUB>> ]
+"1033" [label = <(&lt;operator&gt;.conditional,c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass())<SUB>501</SUB>> ]
+"992" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>498</SUB>> ]
+"1013" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>500</SUB>> ]
+"1019" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>500</SUB>> ]
+"1022" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>500</SUB>> ]
+"1029" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>501</SUB>> ]
+"1034" [label = <(IsInterface,c-&gt;IsInterface())<SUB>501</SUB>> ]
+"1039" [label = <(GetSuperClass,c-&gt;GetSuperClass())<SUB>501</SUB>> ]
+"993" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>498</SUB>> ]
+"997" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>498</SUB>> ]
+"1004" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>498</SUB>> ]
+"1015" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>500</SUB>> ]
+"1021" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>500</SUB>> ]
+"1024" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>500</SUB>> ]
+"1031" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>501</SUB>> ]
+"1035" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsInterface)<SUB>501</SUB>> ]
+"1040" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetSuperClass)<SUB>501</SUB>> ]
+"998" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>498</SUB>> ]
+"1037" [label = <(FIELD_IDENTIFIER,IsInterface,IsInterface)<SUB>501</SUB>> ]
+"1042" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>501</SUB>> ]
+"999" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>498</SUB>> ]
+"1001" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>498</SUB>> ]
+"984" [label = <(METHOD,GetSuperclass)<SUB>497</SUB>> ]
+"1043" [label = <(METHOD_RETURN,jclass)<SUB>497</SUB>> ]
   "988" -> "993" 
   "988" -> "1007" 
   "1007" -> "1015" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/260-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/260-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/260-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/260-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,39 +1,39 @@
 digraph "operator &lt;&lt;" {  
-"14538" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIInvalidRefType&quot;)<SUB>3212</SUB>> ]
-"14541" [label = <(RETURN,return os;,return os;)<SUB>3213</SUB>> ]
-"14545" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNILocalRefType&quot;)<SUB>3215</SUB>> ]
-"14548" [label = <(RETURN,return os;,return os;)<SUB>3216</SUB>> ]
-"14552" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIGlobalRefType&quot;)<SUB>3218</SUB>> ]
-"14555" [label = <(RETURN,return os;,return os;)<SUB>3219</SUB>> ]
-"14559" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIWeakGlobalRefType&quot;)<SUB>3221</SUB>> ]
-"14562" [label = <(RETURN,return os;,return os;)<SUB>3222</SUB>> ]
-"14565" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs) &lt;&lt; &quot;]&quot;)<SUB>3224</SUB>> ]
-"14575" [label = <(UNREACHABLE,UNREACHABLE())<SUB>3225</SUB>> ]
-"14566" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs))<SUB>3224</SUB>> ]
-"14567" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot;)<SUB>3224</SUB>> ]
-"14571" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(rhs))<SUB>3224</SUB>> ]
-"14568" [label = <(LOG,LOG(FATAL))<SUB>3224</SUB>> ]
-"14572" [label = <(UNKNOWN,int,int)<SUB>3224</SUB>> ]
-"14529" [label = <(METHOD,operator &lt;&lt;)<SUB>3209</SUB>> ]
-"14576" [label = <(METHOD_RETURN,ostream)<SUB>3209</SUB>> ]
-  "14538" -> "14541" 
-  "14541" -> "14576" 
-  "14545" -> "14548" 
-  "14548" -> "14576" 
-  "14552" -> "14555" 
-  "14555" -> "14576" 
-  "14559" -> "14562" 
-  "14562" -> "14576" 
-  "14565" -> "14575" 
-  "14575" -> "14576" 
-  "14566" -> "14565" 
-  "14567" -> "14572" 
-  "14571" -> "14566" 
-  "14568" -> "14567" 
-  "14572" -> "14571" 
-  "14529" -> "14538" 
-  "14529" -> "14545" 
-  "14529" -> "14552" 
-  "14529" -> "14559" 
-  "14529" -> "14568" 
+"14535" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIInvalidRefType&quot;)<SUB>3210</SUB>> ]
+"14538" [label = <(RETURN,return os;,return os;)<SUB>3211</SUB>> ]
+"14542" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNILocalRefType&quot;)<SUB>3213</SUB>> ]
+"14545" [label = <(RETURN,return os;,return os;)<SUB>3214</SUB>> ]
+"14549" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIGlobalRefType&quot;)<SUB>3216</SUB>> ]
+"14552" [label = <(RETURN,return os;,return os;)<SUB>3217</SUB>> ]
+"14556" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIWeakGlobalRefType&quot;)<SUB>3219</SUB>> ]
+"14559" [label = <(RETURN,return os;,return os;)<SUB>3220</SUB>> ]
+"14562" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs) &lt;&lt; &quot;]&quot;)<SUB>3222</SUB>> ]
+"14572" [label = <(UNREACHABLE,UNREACHABLE())<SUB>3223</SUB>> ]
+"14563" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs))<SUB>3222</SUB>> ]
+"14564" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot;)<SUB>3222</SUB>> ]
+"14568" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(rhs))<SUB>3222</SUB>> ]
+"14565" [label = <(LOG,LOG(FATAL))<SUB>3222</SUB>> ]
+"14569" [label = <(UNKNOWN,int,int)<SUB>3222</SUB>> ]
+"14526" [label = <(METHOD,operator &lt;&lt;)<SUB>3207</SUB>> ]
+"14573" [label = <(METHOD_RETURN,ostream)<SUB>3207</SUB>> ]
+  "14535" -> "14538" 
+  "14538" -> "14573" 
+  "14542" -> "14545" 
+  "14545" -> "14573" 
+  "14549" -> "14552" 
+  "14552" -> "14573" 
+  "14556" -> "14559" 
+  "14559" -> "14573" 
+  "14562" -> "14572" 
+  "14572" -> "14573" 
+  "14563" -> "14562" 
+  "14564" -> "14569" 
+  "14568" -> "14563" 
+  "14565" -> "14564" 
+  "14569" -> "14568" 
+  "14526" -> "14535" 
+  "14526" -> "14542" 
+  "14526" -> "14549" 
+  "14526" -> "14556" 
+  "14526" -> "14565" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/261-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/261-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/261-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/261-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignment" {  
-"14825" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
-"14829" [label = <(METHOD_RETURN,ANY)> ]
-  "14825" -> "14829" 
+"14822" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
+"14826" [label = <(METHOD_RETURN,ANY)> ]
+  "14822" -> "14826" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/262-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/262-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/262-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/262-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK_LE" {  
-"14830" [label = <(METHOD,DCHECK_LE)> ]
-"14834" [label = <(METHOD_RETURN,ANY)> ]
-  "14830" -> "14834" 
+"14827" [label = <(METHOD,DCHECK_LE)> ]
+"14831" [label = <(METHOD_RETURN,ANY)> ]
+  "14827" -> "14831" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/263-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/263-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/263-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/263-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "strlen" {  
-"14835" [label = <(METHOD,strlen)> ]
-"14838" [label = <(METHOD_RETURN,ANY)> ]
-  "14835" -> "14838" 
+"14832" [label = <(METHOD,strlen)> ]
+"14835" [label = <(METHOD_RETURN,ANY)> ]
+  "14832" -> "14835" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/264-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/264-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/264-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/264-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addition" {  
-"14839" [label = <(METHOD,&lt;operator&gt;.addition)> ]
-"14843" [label = <(METHOD_RETURN,ANY)> ]
-  "14839" -> "14843" 
+"14836" [label = <(METHOD,&lt;operator&gt;.addition)> ]
+"14840" [label = <(METHOD_RETURN,ANY)> ]
+  "14836" -> "14840" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/265-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/265-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/265-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/265-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.notEquals" {  
-"14844" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
-"14848" [label = <(METHOD_RETURN,ANY)> ]
-  "14844" -> "14848" 
+"14841" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
+"14845" [label = <(METHOD_RETURN,ANY)> ]
+  "14841" -> "14845" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/266-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/266-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/266-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/266-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirection" {  
-"14849" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
-"14852" [label = <(METHOD_RETURN,ANY)> ]
-  "14849" -> "14852" 
+"14846" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
+"14849" [label = <(METHOD_RETURN,ANY)> ]
+  "14846" -> "14849" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/267-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/267-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/267-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/267-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "LIKELY" {  
-"14853" [label = <(METHOD,LIKELY)> ]
-"14856" [label = <(METHOD_RETURN,ANY)> ]
-  "14853" -> "14856" 
+"14850" [label = <(METHOD,LIKELY)> ]
+"14853" [label = <(METHOD_RETURN,ANY)> ]
+  "14850" -> "14853" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/268-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/268-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/268-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/268-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.equals" {  
-"14857" [label = <(METHOD,&lt;operator&gt;.equals)> ]
-"14861" [label = <(METHOD_RETURN,ANY)> ]
-  "14857" -> "14861" 
+"14854" [label = <(METHOD,&lt;operator&gt;.equals)> ]
+"14858" [label = <(METHOD_RETURN,ANY)> ]
+  "14854" -> "14858" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/269-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/269-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/269-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/269-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.and" {  
-"14862" [label = <(METHOD,&lt;operator&gt;.and)> ]
-"14866" [label = <(METHOD_RETURN,ANY)> ]
-  "14862" -> "14866" 
+"14859" [label = <(METHOD,&lt;operator&gt;.and)> ]
+"14863" [label = <(METHOD_RETURN,ANY)> ]
+  "14859" -> "14863" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/27-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/27-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/27-cfg.dot	2023-06-07 19:34:22.027390837 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/27-cfg.dot	2023-06-07 19:34:28.557390228 +0330
@@ -1,50 +1,50 @@
 digraph "IsAssignableFrom" {  
-"1050" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>508</SUB>> ]
-"1069" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>509</SUB>> ]
-"1089" [label = <(soa,soa(env))<SUB>510</SUB>> ]
-"1091" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c1 = soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>511</SUB>> ]
-"1108" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c2 = soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>512</SUB>> ]
-"1125" [label = <(RETURN,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;)<SUB>513</SUB>> ]
-"1092" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c1)<SUB>511</SUB>> ]
-"1099" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>511</SUB>> ]
-"1109" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c2)<SUB>512</SUB>> ]
-"1116" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>512</SUB>> ]
-"1126" [label = <(&lt;operator&gt;.conditional,c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE)<SUB>513</SUB>> ]
-"1093" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>511</SUB>> ]
-"1100" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>511</SUB>> ]
-"1110" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>512</SUB>> ]
-"1117" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>512</SUB>> ]
-"1127" [label = <(IsAssignableFrom,c2-&gt;IsAssignableFrom(c1))<SUB>513</SUB>> ]
-"1055" [label = <(UNLIKELY,UNLIKELY((java_class1) == nullptr))<SUB>508</SUB>> ]
-"1074" [label = <(UNLIKELY,UNLIKELY((java_class2) == nullptr))<SUB>509</SUB>> ]
-"1095" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>511</SUB>> ]
-"1101" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>511</SUB>> ]
-"1104" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>511</SUB>> ]
-"1112" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>512</SUB>> ]
-"1118" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>512</SUB>> ]
-"1121" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>512</SUB>> ]
-"1128" [label = <(&lt;operator&gt;.indirectFieldAccess,c2-&gt;IsAssignableFrom)<SUB>513</SUB>> ]
-"1056" [label = <(&lt;operator&gt;.equals,(java_class1) == nullptr)<SUB>508</SUB>> ]
-"1060" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class1 == null&quot;))<SUB>508</SUB>> ]
-"1067" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>508</SUB>> ]
-"1075" [label = <(&lt;operator&gt;.equals,(java_class2) == nullptr)<SUB>509</SUB>> ]
-"1079" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class2 == null&quot;))<SUB>509</SUB>> ]
-"1086" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>509</SUB>> ]
-"1097" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>511</SUB>> ]
-"1103" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>511</SUB>> ]
-"1106" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>511</SUB>> ]
-"1114" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>512</SUB>> ]
-"1120" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>512</SUB>> ]
-"1123" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>512</SUB>> ]
-"1130" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>513</SUB>> ]
-"1061" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>508</SUB>> ]
-"1080" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>509</SUB>> ]
-"1062" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>508</SUB>> ]
-"1064" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>508</SUB>> ]
-"1081" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>509</SUB>> ]
-"1083" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>509</SUB>> ]
-"1045" [label = <(METHOD,IsAssignableFrom)<SUB>507</SUB>> ]
-"1134" [label = <(METHOD_RETURN,jboolean)<SUB>507</SUB>> ]
+"1050" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>507</SUB>> ]
+"1069" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>508</SUB>> ]
+"1089" [label = <(soa,soa(env))<SUB>509</SUB>> ]
+"1091" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c1 = soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>510</SUB>> ]
+"1108" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c2 = soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>511</SUB>> ]
+"1125" [label = <(RETURN,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;)<SUB>512</SUB>> ]
+"1092" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c1)<SUB>510</SUB>> ]
+"1099" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>510</SUB>> ]
+"1109" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c2)<SUB>511</SUB>> ]
+"1116" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>511</SUB>> ]
+"1126" [label = <(&lt;operator&gt;.conditional,c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE)<SUB>512</SUB>> ]
+"1093" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>510</SUB>> ]
+"1100" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>510</SUB>> ]
+"1110" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>511</SUB>> ]
+"1117" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>511</SUB>> ]
+"1127" [label = <(IsAssignableFrom,c2-&gt;IsAssignableFrom(c1))<SUB>512</SUB>> ]
+"1055" [label = <(UNLIKELY,UNLIKELY((java_class1) == nullptr))<SUB>507</SUB>> ]
+"1074" [label = <(UNLIKELY,UNLIKELY((java_class2) == nullptr))<SUB>508</SUB>> ]
+"1095" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>510</SUB>> ]
+"1101" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>510</SUB>> ]
+"1104" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>510</SUB>> ]
+"1112" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>511</SUB>> ]
+"1118" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>511</SUB>> ]
+"1121" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>511</SUB>> ]
+"1128" [label = <(&lt;operator&gt;.indirectFieldAccess,c2-&gt;IsAssignableFrom)<SUB>512</SUB>> ]
+"1056" [label = <(&lt;operator&gt;.equals,(java_class1) == nullptr)<SUB>507</SUB>> ]
+"1060" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class1 == null&quot;))<SUB>507</SUB>> ]
+"1067" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>507</SUB>> ]
+"1075" [label = <(&lt;operator&gt;.equals,(java_class2) == nullptr)<SUB>508</SUB>> ]
+"1079" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class2 == null&quot;))<SUB>508</SUB>> ]
+"1086" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>508</SUB>> ]
+"1097" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>510</SUB>> ]
+"1103" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>510</SUB>> ]
+"1106" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>510</SUB>> ]
+"1114" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>511</SUB>> ]
+"1120" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>511</SUB>> ]
+"1123" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>511</SUB>> ]
+"1130" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>512</SUB>> ]
+"1061" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>507</SUB>> ]
+"1080" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>508</SUB>> ]
+"1062" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>507</SUB>> ]
+"1064" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>507</SUB>> ]
+"1081" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>508</SUB>> ]
+"1083" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>508</SUB>> ]
+"1045" [label = <(METHOD,IsAssignableFrom)<SUB>506</SUB>> ]
+"1134" [label = <(METHOD_RETURN,jboolean)<SUB>506</SUB>> ]
   "1050" -> "1056" 
   "1050" -> "1069" 
   "1069" -> "1075" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/270-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/270-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/270-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/270-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "good" {  
-"14867" [label = <(METHOD,good)> ]
-"14871" [label = <(METHOD_RETURN,ANY)> ]
-  "14867" -> "14871" 
+"14864" [label = <(METHOD,good)> ]
+"14868" [label = <(METHOD_RETURN,ANY)> ]
+  "14864" -> "14868" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/271-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/271-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/271-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/271-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentPlus" {  
-"14872" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
-"14876" [label = <(METHOD_RETURN,ANY)> ]
-  "14872" -> "14876" 
+"14869" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
+"14873" [label = <(METHOD_RETURN,ANY)> ]
+  "14869" -> "14873" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/272-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/272-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/272-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/272-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessThan" {  
-"14877" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
-"14881" [label = <(METHOD_RETURN,ANY)> ]
-  "14877" -> "14881" 
+"14874" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
+"14878" [label = <(METHOD_RETURN,ANY)> ]
+  "14874" -> "14878" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/273-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/273-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/273-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/273-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.cast" {  
-"14882" [label = <(METHOD,&lt;operator&gt;.cast)> ]
-"14886" [label = <(METHOD_RETURN,ANY)> ]
-  "14882" -> "14886" 
+"14879" [label = <(METHOD,&lt;operator&gt;.cast)> ]
+"14883" [label = <(METHOD_RETURN,ANY)> ]
+  "14879" -> "14883" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/274-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/274-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/274-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/274-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.subtraction" {  
-"14887" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
-"14891" [label = <(METHOD_RETURN,ANY)> ]
-  "14887" -> "14891" 
+"14884" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
+"14888" [label = <(METHOD_RETURN,ANY)> ]
+  "14884" -> "14888" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/275-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/275-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/275-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/275-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.conditional" {  
-"14892" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
-"14897" [label = <(METHOD_RETURN,ANY)> ]
-  "14892" -> "14897" 
+"14889" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
+"14894" [label = <(METHOD_RETURN,ANY)> ]
+  "14889" -> "14894" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/276-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/276-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/276-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/276-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "bad" {  
-"14898" [label = <(METHOD,bad)> ]
-"14900" [label = <(METHOD_RETURN,ANY)> ]
-  "14898" -> "14900" 
+"14895" [label = <(METHOD,bad)> ]
+"14897" [label = <(METHOD_RETURN,ANY)> ]
+  "14895" -> "14897" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/277-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/277-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/277-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/277-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalAnd" {  
-"14901" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
-"14905" [label = <(METHOD_RETURN,ANY)> ]
-  "14901" -> "14905" 
+"14898" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
+"14902" [label = <(METHOD_RETURN,ANY)> ]
+  "14898" -> "14902" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/278-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/278-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/278-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/278-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.fieldAccess" {  
-"14906" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
-"14910" [label = <(METHOD_RETURN,ANY)> ]
-  "14906" -> "14910" 
+"14903" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
+"14907" [label = <(METHOD_RETURN,ANY)> ]
+  "14903" -> "14907" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/279-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/279-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/279-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/279-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "is_ascii" {  
-"14911" [label = <(METHOD,is_ascii)> ]
-"14913" [label = <(METHOD_RETURN,ANY)> ]
-  "14911" -> "14913" 
+"14908" [label = <(METHOD,is_ascii)> ]
+"14910" [label = <(METHOD_RETURN,ANY)> ]
+  "14908" -> "14910" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/28-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/28-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/28-cfg.dot	2023-06-07 19:34:22.027390837 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/28-cfg.dot	2023-06-07 19:34:28.557390228 +0330
@@ -1,44 +1,44 @@
 digraph "IsInstanceOf" {  
-"1141" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>517</SUB>> ]
-"1161" [label = <(&lt;operator&gt;.equals,jobj == nullptr)<SUB>518</SUB>> ]
-"1165" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>520</SUB>> ]
-"1146" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>517</SUB>> ]
-"1170" [label = <(soa,soa(env))<SUB>522</SUB>> ]
-"1172" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>523</SUB>> ]
-"1189" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>524</SUB>> ]
-"1206" [label = <(RETURN,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;)<SUB>525</SUB>> ]
-"1147" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>517</SUB>> ]
-"1151" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>517</SUB>> ]
-"1158" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>517</SUB>> ]
-"1173" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>523</SUB>> ]
-"1180" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>523</SUB>> ]
-"1190" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>524</SUB>> ]
-"1197" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>524</SUB>> ]
-"1207" [label = <(&lt;operator&gt;.conditional,obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE)<SUB>525</SUB>> ]
-"1152" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>517</SUB>> ]
-"1174" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>523</SUB>> ]
-"1181" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>523</SUB>> ]
-"1191" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>524</SUB>> ]
-"1198" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>524</SUB>> ]
-"1208" [label = <(InstanceOf,obj-&gt;InstanceOf(c))<SUB>525</SUB>> ]
-"1153" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>517</SUB>> ]
-"1155" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>517</SUB>> ]
-"1176" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>523</SUB>> ]
-"1182" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>523</SUB>> ]
-"1185" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>523</SUB>> ]
-"1193" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>524</SUB>> ]
-"1199" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>524</SUB>> ]
-"1202" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>524</SUB>> ]
-"1209" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;InstanceOf)<SUB>525</SUB>> ]
-"1178" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>523</SUB>> ]
-"1184" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>523</SUB>> ]
-"1187" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>523</SUB>> ]
-"1195" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>524</SUB>> ]
-"1201" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>524</SUB>> ]
-"1204" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>524</SUB>> ]
-"1211" [label = <(FIELD_IDENTIFIER,InstanceOf,InstanceOf)<SUB>525</SUB>> ]
-"1136" [label = <(METHOD,IsInstanceOf)<SUB>516</SUB>> ]
-"1215" [label = <(METHOD_RETURN,jboolean)<SUB>516</SUB>> ]
+"1141" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>516</SUB>> ]
+"1161" [label = <(&lt;operator&gt;.equals,jobj == nullptr)<SUB>517</SUB>> ]
+"1165" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>519</SUB>> ]
+"1146" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>516</SUB>> ]
+"1170" [label = <(soa,soa(env))<SUB>521</SUB>> ]
+"1172" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>522</SUB>> ]
+"1189" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>523</SUB>> ]
+"1206" [label = <(RETURN,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;)<SUB>524</SUB>> ]
+"1147" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>516</SUB>> ]
+"1151" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>516</SUB>> ]
+"1158" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>516</SUB>> ]
+"1173" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>522</SUB>> ]
+"1180" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>522</SUB>> ]
+"1190" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>523</SUB>> ]
+"1197" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>523</SUB>> ]
+"1207" [label = <(&lt;operator&gt;.conditional,obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE)<SUB>524</SUB>> ]
+"1152" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>516</SUB>> ]
+"1174" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>522</SUB>> ]
+"1181" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>522</SUB>> ]
+"1191" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>523</SUB>> ]
+"1198" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>523</SUB>> ]
+"1208" [label = <(InstanceOf,obj-&gt;InstanceOf(c))<SUB>524</SUB>> ]
+"1153" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>516</SUB>> ]
+"1155" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>516</SUB>> ]
+"1176" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>522</SUB>> ]
+"1182" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>522</SUB>> ]
+"1185" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>522</SUB>> ]
+"1193" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>523</SUB>> ]
+"1199" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>523</SUB>> ]
+"1202" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>523</SUB>> ]
+"1209" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;InstanceOf)<SUB>524</SUB>> ]
+"1178" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>522</SUB>> ]
+"1184" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>522</SUB>> ]
+"1187" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>522</SUB>> ]
+"1195" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>523</SUB>> ]
+"1201" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>523</SUB>> ]
+"1204" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>523</SUB>> ]
+"1211" [label = <(FIELD_IDENTIFIER,InstanceOf,InstanceOf)<SUB>524</SUB>> ]
+"1136" [label = <(METHOD,IsInstanceOf)<SUB>515</SUB>> ]
+"1215" [label = <(METHOD_RETURN,jboolean)<SUB>515</SUB>> ]
   "1141" -> "1147" 
   "1141" -> "1161" 
   "1161" -> "1165" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/280-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/280-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/280-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/280-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectIndexAccess" {  
-"14914" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
-"14918" [label = <(METHOD_RETURN,ANY)> ]
-  "14914" -> "14918" 
+"14911" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
+"14915" [label = <(METHOD_RETURN,ANY)> ]
+  "14911" -> "14915" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/281-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/281-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/281-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/281-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "find" {  
-"14919" [label = <(METHOD,find)> ]
-"14923" [label = <(METHOD_RETURN,ANY)> ]
-  "14919" -> "14923" 
+"14916" [label = <(METHOD,find)> ]
+"14920" [label = <(METHOD_RETURN,ANY)> ]
+  "14916" -> "14920" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/282-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/282-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/282-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/282-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.shiftLeft" {  
-"14924" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
-"14928" [label = <(METHOD_RETURN,ANY)> ]
-  "14924" -> "14928" 
+"14921" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
+"14925" [label = <(METHOD_RETURN,ANY)> ]
+  "14921" -> "14925" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/283-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/283-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/283-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/283-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "LOG" {  
-"14929" [label = <(METHOD,LOG)> ]
-"14932" [label = <(METHOD_RETURN,ANY)> ]
-  "14929" -> "14932" 
+"14926" [label = <(METHOD,LOG)> ]
+"14929" [label = <(METHOD_RETURN,ANY)> ]
+  "14926" -> "14929" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/284-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/284-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/284-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/284-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "std::replace" {  
-"14933" [label = <(METHOD,std::replace)> ]
-"14940" [label = <(METHOD_RETURN,ANY)> ]
-  "14933" -> "14940" 
+"14930" [label = <(METHOD,std::replace)> ]
+"14937" [label = <(METHOD_RETURN,ANY)> ]
+  "14930" -> "14937" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/285-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/285-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/285-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/285-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "begin" {  
-"14941" [label = <(METHOD,begin)> ]
-"14944" [label = <(METHOD_RETURN,ANY)> ]
-  "14941" -> "14944" 
+"14938" [label = <(METHOD,begin)> ]
+"14941" [label = <(METHOD_RETURN,ANY)> ]
+  "14938" -> "14941" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/286-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/286-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/286-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/286-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "end" {  
-"14945" [label = <(METHOD,end)> ]
-"14948" [label = <(METHOD_RETURN,ANY)> ]
-  "14945" -> "14948" 
+"14942" [label = <(METHOD,end)> ]
+"14945" [label = <(METHOD_RETURN,ANY)> ]
+  "14942" -> "14945" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/287-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/287-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/287-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/287-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "h_klass" {  
-"14949" [label = <(METHOD,h_klass)> ]
-"14952" [label = <(METHOD_RETURN,ANY)> ]
-  "14949" -> "14952" 
+"14946" [label = <(METHOD,h_klass)> ]
+"14949" [label = <(METHOD_RETURN,ANY)> ]
+  "14946" -> "14949" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/288-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/288-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/288-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/288-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "NewHandle" {  
-"14953" [label = <(METHOD,NewHandle)> ]
-"14957" [label = <(METHOD_RETURN,ANY)> ]
-  "14953" -> "14957" 
+"14950" [label = <(METHOD,NewHandle)> ]
+"14954" [label = <(METHOD_RETURN,ANY)> ]
+  "14950" -> "14954" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/289-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/289-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/289-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/289-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "GetImagePointerSize" {  
-"14958" [label = <(METHOD,GetImagePointerSize)> ]
-"14961" [label = <(METHOD_RETURN,ANY)> ]
-  "14958" -> "14961" 
+"14955" [label = <(METHOD,GetImagePointerSize)> ]
+"14958" [label = <(METHOD_RETURN,ANY)> ]
+  "14955" -> "14958" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/29-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/29-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/29-cfg.dot	2023-06-07 19:34:22.027390837 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/29-cfg.dot	2023-06-07 19:34:28.557390228 +0330
@@ -1,27 +1,27 @@
 digraph "Throw" {  
-"1222" [label = <(soa,soa(env))<SUB>530</SUB>> ]
-"1224" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Throwable&gt; exception = soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>531</SUB>> ]
-"1248" [label = <(SetException,soa.Self()-&gt;SetException(exception))<SUB>535</SUB>> ]
-"1256" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>536</SUB>> ]
-"1225" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Throwable&gt; exception)<SUB>531</SUB>> ]
-"1232" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>531</SUB>> ]
-"1242" [label = <(&lt;operator&gt;.equals,exception == nullptr)<SUB>532</SUB>> ]
-"1249" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>535</SUB>> ]
-"1226" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Throwable)<SUB>531</SUB>> ]
-"1233" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Throwable)<SUB>531</SUB>> ]
-"1246" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>533</SUB>> ]
-"1250" [label = <(Self,soa.Self())<SUB>535</SUB>> ]
-"1254" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>535</SUB>> ]
-"1228" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>531</SUB>> ]
-"1234" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>531</SUB>> ]
-"1237" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>531</SUB>> ]
-"1251" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>535</SUB>> ]
-"1230" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>531</SUB>> ]
-"1236" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>531</SUB>> ]
-"1239" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>531</SUB>> ]
-"1253" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>535</SUB>> ]
-"1217" [label = <(METHOD,Throw)<SUB>529</SUB>> ]
-"1258" [label = <(METHOD_RETURN,jint)<SUB>529</SUB>> ]
+"1222" [label = <(soa,soa(env))<SUB>529</SUB>> ]
+"1224" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Throwable&gt; exception = soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>530</SUB>> ]
+"1248" [label = <(SetException,soa.Self()-&gt;SetException(exception))<SUB>534</SUB>> ]
+"1256" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>535</SUB>> ]
+"1225" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Throwable&gt; exception)<SUB>530</SUB>> ]
+"1232" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>530</SUB>> ]
+"1242" [label = <(&lt;operator&gt;.equals,exception == nullptr)<SUB>531</SUB>> ]
+"1249" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>534</SUB>> ]
+"1226" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Throwable)<SUB>530</SUB>> ]
+"1233" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Throwable)<SUB>530</SUB>> ]
+"1246" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>532</SUB>> ]
+"1250" [label = <(Self,soa.Self())<SUB>534</SUB>> ]
+"1254" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>534</SUB>> ]
+"1228" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>530</SUB>> ]
+"1234" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>530</SUB>> ]
+"1237" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>530</SUB>> ]
+"1251" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>534</SUB>> ]
+"1230" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>530</SUB>> ]
+"1236" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>530</SUB>> ]
+"1239" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>530</SUB>> ]
+"1253" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>534</SUB>> ]
+"1217" [label = <(METHOD,Throw)<SUB>528</SUB>> ]
+"1258" [label = <(METHOD_RETURN,jint)<SUB>528</SUB>> ]
   "1222" -> "1230" 
   "1224" -> "1242" 
   "1248" -> "1256" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/290-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/290-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/290-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/290-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectFieldAccess" {  
-"14962" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
-"14966" [label = <(METHOD_RETURN,ANY)> ]
-  "14962" -> "14966" 
+"14959" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
+"14963" [label = <(METHOD_RETURN,ANY)> ]
+  "14959" -> "14963" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/291-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/291-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/291-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/291-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "GetClassLinker" {  
-"14967" [label = <(METHOD,GetClassLinker)> ]
-"14970" [label = <(METHOD_RETURN,ANY)> ]
-  "14967" -> "14970" 
+"14964" [label = <(METHOD,GetClassLinker)> ]
+"14967" [label = <(METHOD_RETURN,ANY)> ]
+  "14964" -> "14967" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/292-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/292-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/292-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/292-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "Runtime::Current" {  
-"14971" [label = <(METHOD,Runtime::Current)> ]
-"14974" [label = <(METHOD_RETURN,ANY)> ]
-  "14971" -> "14974" 
+"14968" [label = <(METHOD,Runtime::Current)> ]
+"14971" [label = <(METHOD_RETURN,ANY)> ]
+  "14968" -> "14971" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/293-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/293-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/293-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/293-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterThan" {  
-"14975" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
-"14979" [label = <(METHOD_RETURN,ANY)> ]
-  "14975" -> "14979" 
+"14972" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
+"14976" [label = <(METHOD_RETURN,ANY)> ]
+  "14972" -> "14976" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/294-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/294-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/294-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/294-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "GetSystemClassLoader" {  
-"14980" [label = <(METHOD,GetSystemClassLoader)> ]
-"14983" [label = <(METHOD_RETURN,ANY)> ]
-  "14980" -> "14983" 
+"14977" [label = <(METHOD,GetSystemClassLoader)> ]
+"14980" [label = <(METHOD_RETURN,ANY)> ]
+  "14977" -> "14980" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/295-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/295-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/295-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/295-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "c" {  
-"14984" [label = <(METHOD,c)> ]
-"14988" [label = <(METHOD_RETURN,ANY)> ]
-  "14984" -> "14988" 
+"14981" [label = <(METHOD,c)> ]
+"14985" [label = <(METHOD_RETURN,ANY)> ]
+  "14981" -> "14985" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/296-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/296-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/296-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/296-cfg.dot	2023-06-07 19:34:28.717390213 +0330
@@ -1,5 +1,5 @@
 digraph "Self" {  
-"14989" [label = <(METHOD,Self)> ]
-"14992" [label = <(METHOD_RETURN,ANY)> ]
-  "14989" -> "14992" 
+"14986" [label = <(METHOD,Self)> ]
+"14989" [label = <(METHOD_RETURN,ANY)> ]
+  "14986" -> "14989" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/297-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/297-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/297-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/297-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT" {  
-"14993" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT)<SUB>386</SUB>> ]
-"14996" [label = <(METHOD_RETURN,ANY)> ]
-  "14993" -> "14996" 
+"14990" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT)<SUB>385</SUB>> ]
+"14993" [label = <(METHOD_RETURN,ANY)> ]
+  "14990" -> "14993" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/298-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/298-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/298-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/298-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "UNLIKELY" {  
-"14997" [label = <(METHOD,UNLIKELY)> ]
-"15000" [label = <(METHOD_RETURN,ANY)> ]
-  "14997" -> "15000" 
+"14994" [label = <(METHOD,UNLIKELY)> ]
+"14997" [label = <(METHOD_RETURN,ANY)> ]
+  "14994" -> "14997" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/299-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/299-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/299-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/299-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(name)" {  
-"15001" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(name))> ]
-"15006" [label = <(METHOD_RETURN,ANY)> ]
-  "15001" -> "15006" 
+"14998" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(name))> ]
+"15003" [label = <(METHOD_RETURN,ANY)> ]
+  "14998" -> "15003" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/3-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/3-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/3-cfg.dot	2023-06-07 19:34:21.997390839 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/3-cfg.dot	2023-06-07 19:34:28.527390231 +0330
@@ -1,603 +1,603 @@
 digraph "&lt;global&gt;" {  
-"294" [label = <(UNKNOWN,),))<SUB>192</SUB>> ]
-"295" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;)<SUB>193</SUB>> ]
-"296" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);)<SUB>198</SUB>> ]
-"297" [label = <(UNKNOWN,},})<SUB>202</SUB>> ]
-"304" [label = <(UNKNOWN,),))<SUB>204</SUB>> ]
-"305" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 },REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 })<SUB>205</SUB>> ]
-"312" [label = <(h_klass,h_klass(hs.NewHandle(klass)))<SUB>210</SUB>> ]
-"318" [label = <(UNKNOWN,if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 },if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 })<SUB>211</SUB>> ]
-"319" [label = <(UNKNOWN,return h_klass.Get();,return h_klass.Get();)<SUB>214</SUB>> ]
-"320" [label = <(UNKNOWN,},})<SUB>215</SUB>> ]
-"330" [label = <(UNKNOWN,),))<SUB>218</SUB>> ]
-"331" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));)<SUB>219</SUB>> ]
-"332" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>221</SUB>> ]
-"334" [label = <(&lt;operator&gt;.assignment,* method = nullptr)<SUB>224</SUB>> ]
-"338" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>225</SUB>> ]
-"350" [label = <(UNKNOWN,if (is_static) {\012    method = c-&gt;FindDirectMethod(name, sig, pointer_size);\012 },if (is_static) {\012    method = c-&gt;FindDirectMethod(name, sig, pointer_size);\012 })<SUB>226</SUB>> ]
-"351" [label = <(UNKNOWN,else if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 },else if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 })<SUB>228</SUB>> ]
-"352" [label = <(UNKNOWN,else {\012    method = c-&gt;FindVirtualMethod(name, sig, pointer_size);\012 if (method == nullptr) {\012 // No virtual method matching the signature.  Search declared\012 // private methods and constructors.\012      method = c-&gt;FindDeclaredDirectMethod(name, sig, pointer_size);\012 }\012 },else {\012    method = c-&gt;FindVirtualMethod(name, sig, pointer_size);\012 if (method == nullptr) {\012 // No virtual method matching the signature.  Search declared\012 // private methods and constructors.\012      method = c-&gt;FindDeclaredDirectMethod(name, sig, pointer_size);\012 }\012 })<SUB>230</SUB>> ]
-"353" [label = <(UNKNOWN,if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 },if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 })<SUB>238</SUB>> ]
-"354" [label = <(UNKNOWN,return jni::EncodeArtMethod(method);,return jni::EncodeArtMethod(method);)<SUB>242</SUB>> ]
-"355" [label = <(UNKNOWN,},})<SUB>243</SUB>> ]
-"361" [label = <(UNKNOWN,),))<SUB>245</SUB>> ]
-"362" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);)<SUB>246</SUB>> ]
-"363" [label = <(UNKNOWN,if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 },if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 })<SUB>249</SUB>> ]
-"364" [label = <(UNKNOWN,if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 },if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 })<SUB>253</SUB>> ]
-"366" [label = <(&lt;operator&gt;.assignment,class_loader =\012      soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>257</SUB>> ]
-"383" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 return class_loader;\012 },if (class_loader != nullptr) {\012 return class_loader;\012 })<SUB>259</SUB>> ]
-"384" [label = <(UNKNOWN,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());)<SUB>263</SUB>> ]
-"385" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 },if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 })<SUB>264</SUB>> ]
-"386" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>272</SUB>> ]
-"387" [label = <(UNKNOWN,},})<SUB>273</SUB>> ]
-"397" [label = <(UNKNOWN,),))<SUB>276</SUB>> ]
-"398" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());)<SUB>277</SUB>> ]
-"400" [label = <(c,c(\012      hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))))<SUB>279</SUB>> ]
-"419" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>281</SUB>> ]
-"421" [label = <(&lt;operator&gt;.assignment,* field = nullptr)<SUB>284</SUB>> ]
-"426" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>286</SUB>> ]
-"435" [label = <(UNKNOWN,if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 },if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 })<SUB>287</SUB>> ]
-"436" [label = <(UNKNOWN,else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 },else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 })<SUB>290</SUB>> ]
-"437" [label = <(UNKNOWN,if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012    soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 return nullptr;\012 },if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012    soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 return nullptr;\012 })<SUB>293</SUB>> ]
-"439" [label = <(UNKNOWN,if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 },if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>308</SUB>> ]
-"440" [label = <(UNKNOWN,else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 },else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>311</SUB>> ]
-"441" [label = <(UNKNOWN,if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 },if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 })<SUB>314</SUB>> ]
-"442" [label = <(UNKNOWN,return jni::EncodeArtField(field);,return jni::EncodeArtField(field);)<SUB>320</SUB>> ]
-"443" [label = <(UNKNOWN,},})<SUB>321</SUB>> ]
-"453" [label = <(UNKNOWN,),))<SUB>324</SUB>> ]
-"454" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());)<SUB>325</SUB>> ]
-"455" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());)<SUB>327</SUB>> ]
-"456" [label = <(UNKNOWN,},})<SUB>330</SUB>> ]
-"465" [label = <(UNKNOWN,),))<SUB>333</SUB>> ]
-"466" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);)<SUB>334</SUB>> ]
-"467" [label = <(UNKNOWN,},})<SUB>338</SUB>> ]
-"476" [label = <(UNKNOWN,),))<SUB>340</SUB>> ]
-"477" [label = <(UNKNOWN,REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012},REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012})<SUB>341</SUB>> ]
-"496" [label = <(UNKNOWN,),))<SUB>411</SUB>> ]
-"497" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();)<SUB>412</SUB>> ]
-"498" [label = <(UNKNOWN,for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 },for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 })<SUB>414</SUB>> ]
-"499" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>419</SUB>> ]
-"500" [label = <(UNKNOWN,},})<SUB>420</SUB>> ]
-"13055" [label = <(UNKNOWN,},})<SUB>2566</SUB>> ]
-"13111" [label = <(UNKNOWN,),))<SUB>2581</SUB>> ]
-"13112" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);)<SUB>2582</SUB>> ]
-"13113" [label = <(UNKNOWN,if (UNLIKELY(ArtArrayT::GetArrayClass() != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012 ArtArrayT::GetArrayClass()-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 },if (UNLIKELY(ArtArrayT::GetArrayClass() != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012 ArtArrayT::GetArrayClass()-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 })<SUB>2584</SUB>> ]
-"13114" [label = <(UNKNOWN,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());)<SUB>2593</SUB>> ]
-"13115" [label = <(UNKNOWN,return array.Ptr();,return array.Ptr();)<SUB>2594</SUB>> ]
-"13116" [label = <(UNKNOWN,},})<SUB>2595</SUB>> ]
-"13289" [label = <(UNKNOWN,),))<SUB>2639</SUB>> ]
-"13290" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);)<SUB>2640</SUB>> ]
-"13292" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2642</SUB>> ]
-"13302" [label = <(&lt;operator&gt;.assignment,is_copy = array_data != elements)<SUB>2643</SUB>> ]
-"13308" [label = <(&lt;operator&gt;.assignment,bytes = array-&gt;GetLength() * component_size)<SUB>2644</SUB>> ]
-"13316" [label = <(UNKNOWN,if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 },if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 })<SUB>2645</SUB>> ]
-"13317" [label = <(UNKNOWN,if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 },if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 })<SUB>2663</SUB>> ]
-"13318" [label = <(UNKNOWN,},})<SUB>2675</SUB>> ]
-"13531" [label = <(UNKNOWN,};,};)<SUB>2716</SUB>> ]
-"13533" [label = <(&lt;operator&gt;.assignment,gJniNativeInterface = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>2718</SUB>> ]
-"14238" [label = <(&lt;operator&gt;.assignment,(*gJniSleepForeverStub[])() = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>2958</SUB>> ]
-"14528" [label = <(UNKNOWN,},})<SUB>3207</SUB>> ]
-"204" [label = <(&lt;operator&gt;.assignment,kWarnJniAbort = false)<SUB>147</SUB>> ]
-"282" [label = <(UNKNOWN,),))<SUB>177</SUB>> ]
-"283" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;)<SUB>178</SUB>> ]
-"284" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);)<SUB>180</SUB>> ]
-"313" [label = <(NewHandle,hs.NewHandle(klass))<SUB>210</SUB>> ]
-"340" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>225</SUB>> ]
-"368" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>258</SUB>> ]
-"401" [label = <(NewHandle,hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class))))<SUB>280</SUB>> ]
-"428" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>286</SUB>> ]
-"13294" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2642</SUB>> ]
-"13304" [label = <(&lt;operator&gt;.notEquals,array_data != elements)<SUB>2643</SUB>> ]
-"13310" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2644</SUB>> ]
-"13535" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>2718</SUB>> ]
-"14240" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>2958</SUB>> ]
-"25" [label = <(&lt;operator&gt;.assignment,kBadUtf8ReplacementChar[] = &quot;?&quot;)<SUB>67</SUB>> ]
-"314" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>210</SUB>> ]
-"341" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>225</SUB>> ]
-"369" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ClassLoader)<SUB>258</SUB>> ]
-"376" [label = <(GetSystemClassLoader,Runtime::Current()-&gt;GetSystemClassLoader())<SUB>258</SUB>> ]
-"402" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>280</SUB>> ]
-"405" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>280</SUB>> ]
-"429" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>286</SUB>> ]
-"13295" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2642</SUB>> ]
-"13311" [label = <(GetLength,array-&gt;GetLength())<SUB>2644</SUB>> ]
-"13540" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetVersion)<SUB>2723</SUB>> ]
-"13543" [label = <(&lt;operator&gt;.fieldAccess,JNI::DefineClass)<SUB>2724</SUB>> ]
-"13546" [label = <(&lt;operator&gt;.fieldAccess,JNI::FindClass)<SUB>2725</SUB>> ]
-"13549" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedMethod)<SUB>2726</SUB>> ]
-"13552" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedField)<SUB>2727</SUB>> ]
-"13555" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedMethod)<SUB>2728</SUB>> ]
-"13558" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetSuperclass)<SUB>2729</SUB>> ]
-"13561" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsAssignableFrom)<SUB>2730</SUB>> ]
-"13564" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedField)<SUB>2731</SUB>> ]
-"13567" [label = <(&lt;operator&gt;.fieldAccess,JNI::Throw)<SUB>2732</SUB>> ]
-"13570" [label = <(&lt;operator&gt;.fieldAccess,JNI::ThrowNew)<SUB>2733</SUB>> ]
-"13573" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionOccurred)<SUB>2734</SUB>> ]
-"13576" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionDescribe)<SUB>2735</SUB>> ]
-"13579" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionClear)<SUB>2736</SUB>> ]
-"13582" [label = <(&lt;operator&gt;.fieldAccess,JNI::FatalError)<SUB>2737</SUB>> ]
-"13585" [label = <(&lt;operator&gt;.fieldAccess,JNI::PushLocalFrame)<SUB>2738</SUB>> ]
-"13588" [label = <(&lt;operator&gt;.fieldAccess,JNI::PopLocalFrame)<SUB>2739</SUB>> ]
-"13591" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewGlobalRef)<SUB>2740</SUB>> ]
-"13594" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteGlobalRef)<SUB>2741</SUB>> ]
-"13597" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteLocalRef)<SUB>2742</SUB>> ]
-"13600" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsSameObject)<SUB>2743</SUB>> ]
-"13603" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLocalRef)<SUB>2744</SUB>> ]
-"13606" [label = <(&lt;operator&gt;.fieldAccess,JNI::EnsureLocalCapacity)<SUB>2745</SUB>> ]
-"13609" [label = <(&lt;operator&gt;.fieldAccess,JNI::AllocObject)<SUB>2746</SUB>> ]
-"13612" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObject)<SUB>2747</SUB>> ]
-"13615" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectV)<SUB>2748</SUB>> ]
-"13618" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectA)<SUB>2749</SUB>> ]
-"13621" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectClass)<SUB>2750</SUB>> ]
-"13624" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsInstanceOf)<SUB>2751</SUB>> ]
-"13627" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetMethodID)<SUB>2752</SUB>> ]
-"13630" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethod)<SUB>2753</SUB>> ]
-"13633" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodV)<SUB>2754</SUB>> ]
-"13636" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodA)<SUB>2755</SUB>> ]
-"13639" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethod)<SUB>2756</SUB>> ]
-"13642" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodV)<SUB>2757</SUB>> ]
-"13645" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodA)<SUB>2758</SUB>> ]
-"13648" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethod)<SUB>2759</SUB>> ]
-"13651" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodV)<SUB>2760</SUB>> ]
-"13654" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodA)<SUB>2761</SUB>> ]
-"13657" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethod)<SUB>2762</SUB>> ]
-"13660" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodV)<SUB>2763</SUB>> ]
-"13663" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodA)<SUB>2764</SUB>> ]
-"13666" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethod)<SUB>2765</SUB>> ]
-"13669" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodV)<SUB>2766</SUB>> ]
-"13672" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodA)<SUB>2767</SUB>> ]
-"13675" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethod)<SUB>2768</SUB>> ]
-"13678" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodV)<SUB>2769</SUB>> ]
-"13681" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodA)<SUB>2770</SUB>> ]
-"13684" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethod)<SUB>2771</SUB>> ]
-"13687" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodV)<SUB>2772</SUB>> ]
-"13690" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodA)<SUB>2773</SUB>> ]
-"13693" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethod)<SUB>2774</SUB>> ]
-"13696" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodV)<SUB>2775</SUB>> ]
-"13699" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodA)<SUB>2776</SUB>> ]
-"13702" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethod)<SUB>2777</SUB>> ]
-"13705" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodV)<SUB>2778</SUB>> ]
-"13708" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodA)<SUB>2779</SUB>> ]
-"13711" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethod)<SUB>2780</SUB>> ]
-"13714" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodV)<SUB>2781</SUB>> ]
-"13717" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodA)<SUB>2782</SUB>> ]
-"13720" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethod)<SUB>2783</SUB>> ]
-"13723" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodV)<SUB>2784</SUB>> ]
-"13726" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodA)<SUB>2785</SUB>> ]
-"13729" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethod)<SUB>2786</SUB>> ]
-"13732" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodV)<SUB>2787</SUB>> ]
-"13735" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodA)<SUB>2788</SUB>> ]
-"13738" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethod)<SUB>2789</SUB>> ]
-"13741" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodV)<SUB>2790</SUB>> ]
-"13744" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodA)<SUB>2791</SUB>> ]
-"13747" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethod)<SUB>2792</SUB>> ]
-"13750" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodV)<SUB>2793</SUB>> ]
-"13753" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodA)<SUB>2794</SUB>> ]
-"13756" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethod)<SUB>2795</SUB>> ]
-"13759" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodV)<SUB>2796</SUB>> ]
-"13762" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodA)<SUB>2797</SUB>> ]
-"13765" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethod)<SUB>2798</SUB>> ]
-"13768" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodV)<SUB>2799</SUB>> ]
-"13771" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodA)<SUB>2800</SUB>> ]
-"13774" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethod)<SUB>2801</SUB>> ]
-"13777" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodV)<SUB>2802</SUB>> ]
-"13780" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodA)<SUB>2803</SUB>> ]
-"13783" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethod)<SUB>2804</SUB>> ]
-"13786" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodV)<SUB>2805</SUB>> ]
-"13789" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodA)<SUB>2806</SUB>> ]
-"13792" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethod)<SUB>2807</SUB>> ]
-"13795" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodV)<SUB>2808</SUB>> ]
-"13798" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodA)<SUB>2809</SUB>> ]
-"13801" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethod)<SUB>2810</SUB>> ]
-"13804" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodV)<SUB>2811</SUB>> ]
-"13807" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodA)<SUB>2812</SUB>> ]
-"13810" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFieldID)<SUB>2813</SUB>> ]
-"13813" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectField)<SUB>2814</SUB>> ]
-"13816" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanField)<SUB>2815</SUB>> ]
-"13819" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteField)<SUB>2816</SUB>> ]
-"13822" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharField)<SUB>2817</SUB>> ]
-"13825" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortField)<SUB>2818</SUB>> ]
-"13828" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntField)<SUB>2819</SUB>> ]
-"13831" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongField)<SUB>2820</SUB>> ]
-"13834" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatField)<SUB>2821</SUB>> ]
-"13837" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleField)<SUB>2822</SUB>> ]
-"13840" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectField)<SUB>2823</SUB>> ]
-"13843" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanField)<SUB>2824</SUB>> ]
-"13846" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteField)<SUB>2825</SUB>> ]
-"13849" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharField)<SUB>2826</SUB>> ]
-"13852" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortField)<SUB>2827</SUB>> ]
-"13855" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntField)<SUB>2828</SUB>> ]
-"13858" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongField)<SUB>2829</SUB>> ]
-"13861" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatField)<SUB>2830</SUB>> ]
-"13864" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleField)<SUB>2831</SUB>> ]
-"13867" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticMethodID)<SUB>2832</SUB>> ]
-"13870" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethod)<SUB>2833</SUB>> ]
-"13873" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodV)<SUB>2834</SUB>> ]
-"13876" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodA)<SUB>2835</SUB>> ]
-"13879" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethod)<SUB>2836</SUB>> ]
-"13882" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodV)<SUB>2837</SUB>> ]
-"13885" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodA)<SUB>2838</SUB>> ]
-"13888" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethod)<SUB>2839</SUB>> ]
-"13891" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodV)<SUB>2840</SUB>> ]
-"13894" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodA)<SUB>2841</SUB>> ]
-"13897" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethod)<SUB>2842</SUB>> ]
-"13900" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodV)<SUB>2843</SUB>> ]
-"13903" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodA)<SUB>2844</SUB>> ]
-"13906" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethod)<SUB>2845</SUB>> ]
-"13909" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodV)<SUB>2846</SUB>> ]
-"13912" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodA)<SUB>2847</SUB>> ]
-"13915" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethod)<SUB>2848</SUB>> ]
-"13918" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodV)<SUB>2849</SUB>> ]
-"13921" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodA)<SUB>2850</SUB>> ]
-"13924" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethod)<SUB>2851</SUB>> ]
-"13927" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodV)<SUB>2852</SUB>> ]
-"13930" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodA)<SUB>2853</SUB>> ]
-"13933" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethod)<SUB>2854</SUB>> ]
-"13936" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodV)<SUB>2855</SUB>> ]
-"13939" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodA)<SUB>2856</SUB>> ]
-"13942" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethod)<SUB>2857</SUB>> ]
-"13945" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodV)<SUB>2858</SUB>> ]
-"13948" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodA)<SUB>2859</SUB>> ]
-"13951" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethod)<SUB>2860</SUB>> ]
-"13954" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodV)<SUB>2861</SUB>> ]
-"13957" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodA)<SUB>2862</SUB>> ]
-"13960" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFieldID)<SUB>2863</SUB>> ]
-"13963" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticObjectField)<SUB>2864</SUB>> ]
-"13966" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticBooleanField)<SUB>2865</SUB>> ]
-"13969" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticByteField)<SUB>2866</SUB>> ]
-"13972" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticCharField)<SUB>2867</SUB>> ]
-"13975" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticShortField)<SUB>2868</SUB>> ]
-"13978" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticIntField)<SUB>2869</SUB>> ]
-"13981" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticLongField)<SUB>2870</SUB>> ]
-"13984" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFloatField)<SUB>2871</SUB>> ]
-"13987" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticDoubleField)<SUB>2872</SUB>> ]
-"13990" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticObjectField)<SUB>2873</SUB>> ]
-"13993" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticBooleanField)<SUB>2874</SUB>> ]
-"13996" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticByteField)<SUB>2875</SUB>> ]
-"13999" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticCharField)<SUB>2876</SUB>> ]
-"14002" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticShortField)<SUB>2877</SUB>> ]
-"14005" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticIntField)<SUB>2878</SUB>> ]
-"14008" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticLongField)<SUB>2879</SUB>> ]
-"14011" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticFloatField)<SUB>2880</SUB>> ]
-"14014" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticDoubleField)<SUB>2881</SUB>> ]
-"14017" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewString)<SUB>2882</SUB>> ]
-"14020" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringLength)<SUB>2883</SUB>> ]
-"14023" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringChars)<SUB>2884</SUB>> ]
-"14026" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringChars)<SUB>2885</SUB>> ]
-"14029" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewStringUTF)<SUB>2886</SUB>> ]
-"14032" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFLength)<SUB>2887</SUB>> ]
-"14035" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFChars)<SUB>2888</SUB>> ]
-"14038" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringUTFChars)<SUB>2889</SUB>> ]
-"14041" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetArrayLength)<SUB>2890</SUB>> ]
-"14044" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectArray)<SUB>2891</SUB>> ]
-"14047" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectArrayElement)<SUB>2892</SUB>> ]
-"14050" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectArrayElement)<SUB>2893</SUB>> ]
-"14053" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewBooleanArray)<SUB>2894</SUB>> ]
-"14056" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewByteArray)<SUB>2895</SUB>> ]
-"14059" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewCharArray)<SUB>2896</SUB>> ]
-"14062" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewShortArray)<SUB>2897</SUB>> ]
-"14065" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewIntArray)<SUB>2898</SUB>> ]
-"14068" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLongArray)<SUB>2899</SUB>> ]
-"14071" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewFloatArray)<SUB>2900</SUB>> ]
-"14074" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDoubleArray)<SUB>2901</SUB>> ]
-"14077" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayElements)<SUB>2902</SUB>> ]
-"14080" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayElements)<SUB>2903</SUB>> ]
-"14083" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayElements)<SUB>2904</SUB>> ]
-"14086" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayElements)<SUB>2905</SUB>> ]
-"14089" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayElements)<SUB>2906</SUB>> ]
-"14092" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayElements)<SUB>2907</SUB>> ]
-"14095" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayElements)<SUB>2908</SUB>> ]
-"14098" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayElements)<SUB>2909</SUB>> ]
-"14101" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseBooleanArrayElements)<SUB>2910</SUB>> ]
-"14104" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseByteArrayElements)<SUB>2911</SUB>> ]
-"14107" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseCharArrayElements)<SUB>2912</SUB>> ]
-"14110" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseShortArrayElements)<SUB>2913</SUB>> ]
-"14113" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseIntArrayElements)<SUB>2914</SUB>> ]
-"14116" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseLongArrayElements)<SUB>2915</SUB>> ]
-"14119" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseFloatArrayElements)<SUB>2916</SUB>> ]
-"14122" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseDoubleArrayElements)<SUB>2917</SUB>> ]
-"14125" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayRegion)<SUB>2918</SUB>> ]
-"14128" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayRegion)<SUB>2919</SUB>> ]
-"14131" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayRegion)<SUB>2920</SUB>> ]
-"14134" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayRegion)<SUB>2921</SUB>> ]
-"14137" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayRegion)<SUB>2922</SUB>> ]
-"14140" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayRegion)<SUB>2923</SUB>> ]
-"14143" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayRegion)<SUB>2924</SUB>> ]
-"14146" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayRegion)<SUB>2925</SUB>> ]
-"14149" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanArrayRegion)<SUB>2926</SUB>> ]
-"14152" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteArrayRegion)<SUB>2927</SUB>> ]
-"14155" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharArrayRegion)<SUB>2928</SUB>> ]
-"14158" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortArrayRegion)<SUB>2929</SUB>> ]
-"14161" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntArrayRegion)<SUB>2930</SUB>> ]
-"14164" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongArrayRegion)<SUB>2931</SUB>> ]
-"14167" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatArrayRegion)<SUB>2932</SUB>> ]
-"14170" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleArrayRegion)<SUB>2933</SUB>> ]
-"14173" [label = <(&lt;operator&gt;.fieldAccess,JNI::RegisterNatives)<SUB>2934</SUB>> ]
-"14176" [label = <(&lt;operator&gt;.fieldAccess,JNI::UnregisterNatives)<SUB>2935</SUB>> ]
-"14179" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorEnter)<SUB>2936</SUB>> ]
-"14182" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorExit)<SUB>2937</SUB>> ]
-"14185" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetJavaVM)<SUB>2938</SUB>> ]
-"14188" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringRegion)<SUB>2939</SUB>> ]
-"14191" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFRegion)<SUB>2940</SUB>> ]
-"14194" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetPrimitiveArrayCritical)<SUB>2941</SUB>> ]
-"14197" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleasePrimitiveArrayCritical)<SUB>2942</SUB>> ]
-"14200" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringCritical)<SUB>2943</SUB>> ]
-"14203" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringCritical)<SUB>2944</SUB>> ]
-"14206" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewWeakGlobalRef)<SUB>2945</SUB>> ]
-"14209" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteWeakGlobalRef)<SUB>2946</SUB>> ]
-"14212" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionCheck)<SUB>2947</SUB>> ]
-"14215" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDirectByteBuffer)<SUB>2948</SUB>> ]
-"14218" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferAddress)<SUB>2949</SUB>> ]
-"14221" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferCapacity)<SUB>2950</SUB>> ]
-"14224" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectRefType)<SUB>2951</SUB>> ]
-"316" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>210</SUB>> ]
-"342" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>225</SUB>> ]
-"349" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>225</SUB>> ]
-"370" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>258</SUB>> ]
-"373" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>258</SUB>> ]
-"377" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetSystemClassLoader)<SUB>258</SUB>> ]
-"404" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>280</SUB>> ]
-"406" [label = <(Self,soa.Self())<SUB>280</SUB>> ]
-"410" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(jni_class))<SUB>280</SUB>> ]
-"430" [label = <(Runtime::Current,Runtime::Current())<SUB>286</SUB>> ]
-"434" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>286</SUB>> ]
-"13296" [label = <(Runtime::Current,Runtime::Current())<SUB>2642</SUB>> ]
-"13300" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2642</SUB>> ]
-"13312" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2644</SUB>> ]
-"13542" [label = <(FIELD_IDENTIFIER,GetVersion,GetVersion)<SUB>2723</SUB>> ]
-"13545" [label = <(FIELD_IDENTIFIER,DefineClass,DefineClass)<SUB>2724</SUB>> ]
-"13548" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>2725</SUB>> ]
-"13551" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>2726</SUB>> ]
-"13554" [label = <(FIELD_IDENTIFIER,FromReflectedField,FromReflectedField)<SUB>2727</SUB>> ]
-"13557" [label = <(FIELD_IDENTIFIER,ToReflectedMethod,ToReflectedMethod)<SUB>2728</SUB>> ]
-"13560" [label = <(FIELD_IDENTIFIER,GetSuperclass,GetSuperclass)<SUB>2729</SUB>> ]
-"13563" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2730</SUB>> ]
-"13566" [label = <(FIELD_IDENTIFIER,ToReflectedField,ToReflectedField)<SUB>2731</SUB>> ]
-"13569" [label = <(FIELD_IDENTIFIER,Throw,Throw)<SUB>2732</SUB>> ]
-"13572" [label = <(FIELD_IDENTIFIER,ThrowNew,ThrowNew)<SUB>2733</SUB>> ]
-"13575" [label = <(FIELD_IDENTIFIER,ExceptionOccurred,ExceptionOccurred)<SUB>2734</SUB>> ]
-"13578" [label = <(FIELD_IDENTIFIER,ExceptionDescribe,ExceptionDescribe)<SUB>2735</SUB>> ]
-"13581" [label = <(FIELD_IDENTIFIER,ExceptionClear,ExceptionClear)<SUB>2736</SUB>> ]
-"13584" [label = <(FIELD_IDENTIFIER,FatalError,FatalError)<SUB>2737</SUB>> ]
-"13587" [label = <(FIELD_IDENTIFIER,PushLocalFrame,PushLocalFrame)<SUB>2738</SUB>> ]
-"13590" [label = <(FIELD_IDENTIFIER,PopLocalFrame,PopLocalFrame)<SUB>2739</SUB>> ]
-"13593" [label = <(FIELD_IDENTIFIER,NewGlobalRef,NewGlobalRef)<SUB>2740</SUB>> ]
-"13596" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>2741</SUB>> ]
-"13599" [label = <(FIELD_IDENTIFIER,DeleteLocalRef,DeleteLocalRef)<SUB>2742</SUB>> ]
-"13602" [label = <(FIELD_IDENTIFIER,IsSameObject,IsSameObject)<SUB>2743</SUB>> ]
-"13605" [label = <(FIELD_IDENTIFIER,NewLocalRef,NewLocalRef)<SUB>2744</SUB>> ]
-"13608" [label = <(FIELD_IDENTIFIER,EnsureLocalCapacity,EnsureLocalCapacity)<SUB>2745</SUB>> ]
-"13611" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>2746</SUB>> ]
-"13614" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2747</SUB>> ]
-"13617" [label = <(FIELD_IDENTIFIER,NewObjectV,NewObjectV)<SUB>2748</SUB>> ]
-"13620" [label = <(FIELD_IDENTIFIER,NewObjectA,NewObjectA)<SUB>2749</SUB>> ]
-"13623" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>2750</SUB>> ]
-"13626" [label = <(FIELD_IDENTIFIER,IsInstanceOf,IsInstanceOf)<SUB>2751</SUB>> ]
-"13629" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>2752</SUB>> ]
-"13632" [label = <(FIELD_IDENTIFIER,CallObjectMethod,CallObjectMethod)<SUB>2753</SUB>> ]
-"13635" [label = <(FIELD_IDENTIFIER,CallObjectMethodV,CallObjectMethodV)<SUB>2754</SUB>> ]
-"13638" [label = <(FIELD_IDENTIFIER,CallObjectMethodA,CallObjectMethodA)<SUB>2755</SUB>> ]
-"13641" [label = <(FIELD_IDENTIFIER,CallBooleanMethod,CallBooleanMethod)<SUB>2756</SUB>> ]
-"13644" [label = <(FIELD_IDENTIFIER,CallBooleanMethodV,CallBooleanMethodV)<SUB>2757</SUB>> ]
-"13647" [label = <(FIELD_IDENTIFIER,CallBooleanMethodA,CallBooleanMethodA)<SUB>2758</SUB>> ]
-"13650" [label = <(FIELD_IDENTIFIER,CallByteMethod,CallByteMethod)<SUB>2759</SUB>> ]
-"13653" [label = <(FIELD_IDENTIFIER,CallByteMethodV,CallByteMethodV)<SUB>2760</SUB>> ]
-"13656" [label = <(FIELD_IDENTIFIER,CallByteMethodA,CallByteMethodA)<SUB>2761</SUB>> ]
-"13659" [label = <(FIELD_IDENTIFIER,CallCharMethod,CallCharMethod)<SUB>2762</SUB>> ]
-"13662" [label = <(FIELD_IDENTIFIER,CallCharMethodV,CallCharMethodV)<SUB>2763</SUB>> ]
-"13665" [label = <(FIELD_IDENTIFIER,CallCharMethodA,CallCharMethodA)<SUB>2764</SUB>> ]
-"13668" [label = <(FIELD_IDENTIFIER,CallShortMethod,CallShortMethod)<SUB>2765</SUB>> ]
-"13671" [label = <(FIELD_IDENTIFIER,CallShortMethodV,CallShortMethodV)<SUB>2766</SUB>> ]
-"13674" [label = <(FIELD_IDENTIFIER,CallShortMethodA,CallShortMethodA)<SUB>2767</SUB>> ]
-"13677" [label = <(FIELD_IDENTIFIER,CallIntMethod,CallIntMethod)<SUB>2768</SUB>> ]
-"13680" [label = <(FIELD_IDENTIFIER,CallIntMethodV,CallIntMethodV)<SUB>2769</SUB>> ]
-"13683" [label = <(FIELD_IDENTIFIER,CallIntMethodA,CallIntMethodA)<SUB>2770</SUB>> ]
-"13686" [label = <(FIELD_IDENTIFIER,CallLongMethod,CallLongMethod)<SUB>2771</SUB>> ]
-"13689" [label = <(FIELD_IDENTIFIER,CallLongMethodV,CallLongMethodV)<SUB>2772</SUB>> ]
-"13692" [label = <(FIELD_IDENTIFIER,CallLongMethodA,CallLongMethodA)<SUB>2773</SUB>> ]
-"13695" [label = <(FIELD_IDENTIFIER,CallFloatMethod,CallFloatMethod)<SUB>2774</SUB>> ]
-"13698" [label = <(FIELD_IDENTIFIER,CallFloatMethodV,CallFloatMethodV)<SUB>2775</SUB>> ]
-"13701" [label = <(FIELD_IDENTIFIER,CallFloatMethodA,CallFloatMethodA)<SUB>2776</SUB>> ]
-"13704" [label = <(FIELD_IDENTIFIER,CallDoubleMethod,CallDoubleMethod)<SUB>2777</SUB>> ]
-"13707" [label = <(FIELD_IDENTIFIER,CallDoubleMethodV,CallDoubleMethodV)<SUB>2778</SUB>> ]
-"13710" [label = <(FIELD_IDENTIFIER,CallDoubleMethodA,CallDoubleMethodA)<SUB>2779</SUB>> ]
-"13713" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>2780</SUB>> ]
-"13716" [label = <(FIELD_IDENTIFIER,CallVoidMethodV,CallVoidMethodV)<SUB>2781</SUB>> ]
-"13719" [label = <(FIELD_IDENTIFIER,CallVoidMethodA,CallVoidMethodA)<SUB>2782</SUB>> ]
-"13722" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethod,CallNonvirtualObjectMethod)<SUB>2783</SUB>> ]
-"13725" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodV,CallNonvirtualObjectMethodV)<SUB>2784</SUB>> ]
-"13728" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodA,CallNonvirtualObjectMethodA)<SUB>2785</SUB>> ]
-"13731" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethod,CallNonvirtualBooleanMethod)<SUB>2786</SUB>> ]
-"13734" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodV,CallNonvirtualBooleanMethodV)<SUB>2787</SUB>> ]
-"13737" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodA,CallNonvirtualBooleanMethodA)<SUB>2788</SUB>> ]
-"13740" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethod,CallNonvirtualByteMethod)<SUB>2789</SUB>> ]
-"13743" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodV,CallNonvirtualByteMethodV)<SUB>2790</SUB>> ]
-"13746" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodA,CallNonvirtualByteMethodA)<SUB>2791</SUB>> ]
-"13749" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethod,CallNonvirtualCharMethod)<SUB>2792</SUB>> ]
-"13752" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodV,CallNonvirtualCharMethodV)<SUB>2793</SUB>> ]
-"13755" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodA,CallNonvirtualCharMethodA)<SUB>2794</SUB>> ]
-"13758" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethod,CallNonvirtualShortMethod)<SUB>2795</SUB>> ]
-"13761" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodV,CallNonvirtualShortMethodV)<SUB>2796</SUB>> ]
-"13764" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodA,CallNonvirtualShortMethodA)<SUB>2797</SUB>> ]
-"13767" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethod,CallNonvirtualIntMethod)<SUB>2798</SUB>> ]
-"13770" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodV,CallNonvirtualIntMethodV)<SUB>2799</SUB>> ]
-"13773" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodA,CallNonvirtualIntMethodA)<SUB>2800</SUB>> ]
-"13776" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethod,CallNonvirtualLongMethod)<SUB>2801</SUB>> ]
-"13779" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodV,CallNonvirtualLongMethodV)<SUB>2802</SUB>> ]
-"13782" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodA,CallNonvirtualLongMethodA)<SUB>2803</SUB>> ]
-"13785" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethod,CallNonvirtualFloatMethod)<SUB>2804</SUB>> ]
-"13788" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodV,CallNonvirtualFloatMethodV)<SUB>2805</SUB>> ]
-"13791" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodA,CallNonvirtualFloatMethodA)<SUB>2806</SUB>> ]
-"13794" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethod,CallNonvirtualDoubleMethod)<SUB>2807</SUB>> ]
-"13797" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodV,CallNonvirtualDoubleMethodV)<SUB>2808</SUB>> ]
-"13800" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodA,CallNonvirtualDoubleMethodA)<SUB>2809</SUB>> ]
-"13803" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethod,CallNonvirtualVoidMethod)<SUB>2810</SUB>> ]
-"13806" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV)<SUB>2811</SUB>> ]
-"13809" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA)<SUB>2812</SUB>> ]
-"13812" [label = <(FIELD_IDENTIFIER,GetFieldID,GetFieldID)<SUB>2813</SUB>> ]
-"13815" [label = <(FIELD_IDENTIFIER,GetObjectField,GetObjectField)<SUB>2814</SUB>> ]
-"13818" [label = <(FIELD_IDENTIFIER,GetBooleanField,GetBooleanField)<SUB>2815</SUB>> ]
-"13821" [label = <(FIELD_IDENTIFIER,GetByteField,GetByteField)<SUB>2816</SUB>> ]
-"13824" [label = <(FIELD_IDENTIFIER,GetCharField,GetCharField)<SUB>2817</SUB>> ]
-"13827" [label = <(FIELD_IDENTIFIER,GetShortField,GetShortField)<SUB>2818</SUB>> ]
-"13830" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2819</SUB>> ]
-"13833" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2820</SUB>> ]
-"13836" [label = <(FIELD_IDENTIFIER,GetFloatField,GetFloatField)<SUB>2821</SUB>> ]
-"13839" [label = <(FIELD_IDENTIFIER,GetDoubleField,GetDoubleField)<SUB>2822</SUB>> ]
-"13842" [label = <(FIELD_IDENTIFIER,SetObjectField,SetObjectField)<SUB>2823</SUB>> ]
-"13845" [label = <(FIELD_IDENTIFIER,SetBooleanField,SetBooleanField)<SUB>2824</SUB>> ]
-"13848" [label = <(FIELD_IDENTIFIER,SetByteField,SetByteField)<SUB>2825</SUB>> ]
-"13851" [label = <(FIELD_IDENTIFIER,SetCharField,SetCharField)<SUB>2826</SUB>> ]
-"13854" [label = <(FIELD_IDENTIFIER,SetShortField,SetShortField)<SUB>2827</SUB>> ]
-"13857" [label = <(FIELD_IDENTIFIER,SetIntField,SetIntField)<SUB>2828</SUB>> ]
-"13860" [label = <(FIELD_IDENTIFIER,SetLongField,SetLongField)<SUB>2829</SUB>> ]
-"13863" [label = <(FIELD_IDENTIFIER,SetFloatField,SetFloatField)<SUB>2830</SUB>> ]
-"13866" [label = <(FIELD_IDENTIFIER,SetDoubleField,SetDoubleField)<SUB>2831</SUB>> ]
-"13869" [label = <(FIELD_IDENTIFIER,GetStaticMethodID,GetStaticMethodID)<SUB>2832</SUB>> ]
-"13872" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethod,CallStaticObjectMethod)<SUB>2833</SUB>> ]
-"13875" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodV,CallStaticObjectMethodV)<SUB>2834</SUB>> ]
-"13878" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodA,CallStaticObjectMethodA)<SUB>2835</SUB>> ]
-"13881" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethod,CallStaticBooleanMethod)<SUB>2836</SUB>> ]
-"13884" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodV,CallStaticBooleanMethodV)<SUB>2837</SUB>> ]
-"13887" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodA,CallStaticBooleanMethodA)<SUB>2838</SUB>> ]
-"13890" [label = <(FIELD_IDENTIFIER,CallStaticByteMethod,CallStaticByteMethod)<SUB>2839</SUB>> ]
-"13893" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodV,CallStaticByteMethodV)<SUB>2840</SUB>> ]
-"13896" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodA,CallStaticByteMethodA)<SUB>2841</SUB>> ]
-"13899" [label = <(FIELD_IDENTIFIER,CallStaticCharMethod,CallStaticCharMethod)<SUB>2842</SUB>> ]
-"13902" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodV,CallStaticCharMethodV)<SUB>2843</SUB>> ]
-"13905" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodA,CallStaticCharMethodA)<SUB>2844</SUB>> ]
-"13908" [label = <(FIELD_IDENTIFIER,CallStaticShortMethod,CallStaticShortMethod)<SUB>2845</SUB>> ]
-"13911" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodV,CallStaticShortMethodV)<SUB>2846</SUB>> ]
-"13914" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodA,CallStaticShortMethodA)<SUB>2847</SUB>> ]
-"13917" [label = <(FIELD_IDENTIFIER,CallStaticIntMethod,CallStaticIntMethod)<SUB>2848</SUB>> ]
-"13920" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodV,CallStaticIntMethodV)<SUB>2849</SUB>> ]
-"13923" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodA,CallStaticIntMethodA)<SUB>2850</SUB>> ]
-"13926" [label = <(FIELD_IDENTIFIER,CallStaticLongMethod,CallStaticLongMethod)<SUB>2851</SUB>> ]
-"13929" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodV,CallStaticLongMethodV)<SUB>2852</SUB>> ]
-"13932" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodA,CallStaticLongMethodA)<SUB>2853</SUB>> ]
-"13935" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethod,CallStaticFloatMethod)<SUB>2854</SUB>> ]
-"13938" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodV,CallStaticFloatMethodV)<SUB>2855</SUB>> ]
-"13941" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodA,CallStaticFloatMethodA)<SUB>2856</SUB>> ]
-"13944" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethod,CallStaticDoubleMethod)<SUB>2857</SUB>> ]
-"13947" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodV,CallStaticDoubleMethodV)<SUB>2858</SUB>> ]
-"13950" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodA,CallStaticDoubleMethodA)<SUB>2859</SUB>> ]
-"13953" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethod,CallStaticVoidMethod)<SUB>2860</SUB>> ]
-"13956" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodV,CallStaticVoidMethodV)<SUB>2861</SUB>> ]
-"13959" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodA,CallStaticVoidMethodA)<SUB>2862</SUB>> ]
-"13962" [label = <(FIELD_IDENTIFIER,GetStaticFieldID,GetStaticFieldID)<SUB>2863</SUB>> ]
-"13965" [label = <(FIELD_IDENTIFIER,GetStaticObjectField,GetStaticObjectField)<SUB>2864</SUB>> ]
-"13968" [label = <(FIELD_IDENTIFIER,GetStaticBooleanField,GetStaticBooleanField)<SUB>2865</SUB>> ]
-"13971" [label = <(FIELD_IDENTIFIER,GetStaticByteField,GetStaticByteField)<SUB>2866</SUB>> ]
-"13974" [label = <(FIELD_IDENTIFIER,GetStaticCharField,GetStaticCharField)<SUB>2867</SUB>> ]
-"13977" [label = <(FIELD_IDENTIFIER,GetStaticShortField,GetStaticShortField)<SUB>2868</SUB>> ]
-"13980" [label = <(FIELD_IDENTIFIER,GetStaticIntField,GetStaticIntField)<SUB>2869</SUB>> ]
-"13983" [label = <(FIELD_IDENTIFIER,GetStaticLongField,GetStaticLongField)<SUB>2870</SUB>> ]
-"13986" [label = <(FIELD_IDENTIFIER,GetStaticFloatField,GetStaticFloatField)<SUB>2871</SUB>> ]
-"13989" [label = <(FIELD_IDENTIFIER,GetStaticDoubleField,GetStaticDoubleField)<SUB>2872</SUB>> ]
-"13992" [label = <(FIELD_IDENTIFIER,SetStaticObjectField,SetStaticObjectField)<SUB>2873</SUB>> ]
-"13995" [label = <(FIELD_IDENTIFIER,SetStaticBooleanField,SetStaticBooleanField)<SUB>2874</SUB>> ]
-"13998" [label = <(FIELD_IDENTIFIER,SetStaticByteField,SetStaticByteField)<SUB>2875</SUB>> ]
-"14001" [label = <(FIELD_IDENTIFIER,SetStaticCharField,SetStaticCharField)<SUB>2876</SUB>> ]
-"14004" [label = <(FIELD_IDENTIFIER,SetStaticShortField,SetStaticShortField)<SUB>2877</SUB>> ]
-"14007" [label = <(FIELD_IDENTIFIER,SetStaticIntField,SetStaticIntField)<SUB>2878</SUB>> ]
-"14010" [label = <(FIELD_IDENTIFIER,SetStaticLongField,SetStaticLongField)<SUB>2879</SUB>> ]
-"14013" [label = <(FIELD_IDENTIFIER,SetStaticFloatField,SetStaticFloatField)<SUB>2880</SUB>> ]
-"14016" [label = <(FIELD_IDENTIFIER,SetStaticDoubleField,SetStaticDoubleField)<SUB>2881</SUB>> ]
-"14019" [label = <(FIELD_IDENTIFIER,NewString,NewString)<SUB>2882</SUB>> ]
-"14022" [label = <(FIELD_IDENTIFIER,GetStringLength,GetStringLength)<SUB>2883</SUB>> ]
-"14025" [label = <(FIELD_IDENTIFIER,GetStringChars,GetStringChars)<SUB>2884</SUB>> ]
-"14028" [label = <(FIELD_IDENTIFIER,ReleaseStringChars,ReleaseStringChars)<SUB>2885</SUB>> ]
-"14031" [label = <(FIELD_IDENTIFIER,NewStringUTF,NewStringUTF)<SUB>2886</SUB>> ]
-"14034" [label = <(FIELD_IDENTIFIER,GetStringUTFLength,GetStringUTFLength)<SUB>2887</SUB>> ]
-"14037" [label = <(FIELD_IDENTIFIER,GetStringUTFChars,GetStringUTFChars)<SUB>2888</SUB>> ]
-"14040" [label = <(FIELD_IDENTIFIER,ReleaseStringUTFChars,ReleaseStringUTFChars)<SUB>2889</SUB>> ]
-"14043" [label = <(FIELD_IDENTIFIER,GetArrayLength,GetArrayLength)<SUB>2890</SUB>> ]
-"14046" [label = <(FIELD_IDENTIFIER,NewObjectArray,NewObjectArray)<SUB>2891</SUB>> ]
-"14049" [label = <(FIELD_IDENTIFIER,GetObjectArrayElement,GetObjectArrayElement)<SUB>2892</SUB>> ]
-"14052" [label = <(FIELD_IDENTIFIER,SetObjectArrayElement,SetObjectArrayElement)<SUB>2893</SUB>> ]
-"14055" [label = <(FIELD_IDENTIFIER,NewBooleanArray,NewBooleanArray)<SUB>2894</SUB>> ]
-"14058" [label = <(FIELD_IDENTIFIER,NewByteArray,NewByteArray)<SUB>2895</SUB>> ]
-"14061" [label = <(FIELD_IDENTIFIER,NewCharArray,NewCharArray)<SUB>2896</SUB>> ]
-"14064" [label = <(FIELD_IDENTIFIER,NewShortArray,NewShortArray)<SUB>2897</SUB>> ]
-"14067" [label = <(FIELD_IDENTIFIER,NewIntArray,NewIntArray)<SUB>2898</SUB>> ]
-"14070" [label = <(FIELD_IDENTIFIER,NewLongArray,NewLongArray)<SUB>2899</SUB>> ]
-"14073" [label = <(FIELD_IDENTIFIER,NewFloatArray,NewFloatArray)<SUB>2900</SUB>> ]
-"14076" [label = <(FIELD_IDENTIFIER,NewDoubleArray,NewDoubleArray)<SUB>2901</SUB>> ]
-"14079" [label = <(FIELD_IDENTIFIER,GetBooleanArrayElements,GetBooleanArrayElements)<SUB>2902</SUB>> ]
-"14082" [label = <(FIELD_IDENTIFIER,GetByteArrayElements,GetByteArrayElements)<SUB>2903</SUB>> ]
-"14085" [label = <(FIELD_IDENTIFIER,GetCharArrayElements,GetCharArrayElements)<SUB>2904</SUB>> ]
-"14088" [label = <(FIELD_IDENTIFIER,GetShortArrayElements,GetShortArrayElements)<SUB>2905</SUB>> ]
-"14091" [label = <(FIELD_IDENTIFIER,GetIntArrayElements,GetIntArrayElements)<SUB>2906</SUB>> ]
-"14094" [label = <(FIELD_IDENTIFIER,GetLongArrayElements,GetLongArrayElements)<SUB>2907</SUB>> ]
-"14097" [label = <(FIELD_IDENTIFIER,GetFloatArrayElements,GetFloatArrayElements)<SUB>2908</SUB>> ]
-"14100" [label = <(FIELD_IDENTIFIER,GetDoubleArrayElements,GetDoubleArrayElements)<SUB>2909</SUB>> ]
-"14103" [label = <(FIELD_IDENTIFIER,ReleaseBooleanArrayElements,ReleaseBooleanArrayElements)<SUB>2910</SUB>> ]
-"14106" [label = <(FIELD_IDENTIFIER,ReleaseByteArrayElements,ReleaseByteArrayElements)<SUB>2911</SUB>> ]
-"14109" [label = <(FIELD_IDENTIFIER,ReleaseCharArrayElements,ReleaseCharArrayElements)<SUB>2912</SUB>> ]
-"14112" [label = <(FIELD_IDENTIFIER,ReleaseShortArrayElements,ReleaseShortArrayElements)<SUB>2913</SUB>> ]
-"14115" [label = <(FIELD_IDENTIFIER,ReleaseIntArrayElements,ReleaseIntArrayElements)<SUB>2914</SUB>> ]
-"14118" [label = <(FIELD_IDENTIFIER,ReleaseLongArrayElements,ReleaseLongArrayElements)<SUB>2915</SUB>> ]
-"14121" [label = <(FIELD_IDENTIFIER,ReleaseFloatArrayElements,ReleaseFloatArrayElements)<SUB>2916</SUB>> ]
-"14124" [label = <(FIELD_IDENTIFIER,ReleaseDoubleArrayElements,ReleaseDoubleArrayElements)<SUB>2917</SUB>> ]
-"14127" [label = <(FIELD_IDENTIFIER,GetBooleanArrayRegion,GetBooleanArrayRegion)<SUB>2918</SUB>> ]
-"14130" [label = <(FIELD_IDENTIFIER,GetByteArrayRegion,GetByteArrayRegion)<SUB>2919</SUB>> ]
-"14133" [label = <(FIELD_IDENTIFIER,GetCharArrayRegion,GetCharArrayRegion)<SUB>2920</SUB>> ]
-"14136" [label = <(FIELD_IDENTIFIER,GetShortArrayRegion,GetShortArrayRegion)<SUB>2921</SUB>> ]
-"14139" [label = <(FIELD_IDENTIFIER,GetIntArrayRegion,GetIntArrayRegion)<SUB>2922</SUB>> ]
-"14142" [label = <(FIELD_IDENTIFIER,GetLongArrayRegion,GetLongArrayRegion)<SUB>2923</SUB>> ]
-"14145" [label = <(FIELD_IDENTIFIER,GetFloatArrayRegion,GetFloatArrayRegion)<SUB>2924</SUB>> ]
-"14148" [label = <(FIELD_IDENTIFIER,GetDoubleArrayRegion,GetDoubleArrayRegion)<SUB>2925</SUB>> ]
-"14151" [label = <(FIELD_IDENTIFIER,SetBooleanArrayRegion,SetBooleanArrayRegion)<SUB>2926</SUB>> ]
-"14154" [label = <(FIELD_IDENTIFIER,SetByteArrayRegion,SetByteArrayRegion)<SUB>2927</SUB>> ]
-"14157" [label = <(FIELD_IDENTIFIER,SetCharArrayRegion,SetCharArrayRegion)<SUB>2928</SUB>> ]
-"14160" [label = <(FIELD_IDENTIFIER,SetShortArrayRegion,SetShortArrayRegion)<SUB>2929</SUB>> ]
-"14163" [label = <(FIELD_IDENTIFIER,SetIntArrayRegion,SetIntArrayRegion)<SUB>2930</SUB>> ]
-"14166" [label = <(FIELD_IDENTIFIER,SetLongArrayRegion,SetLongArrayRegion)<SUB>2931</SUB>> ]
-"14169" [label = <(FIELD_IDENTIFIER,SetFloatArrayRegion,SetFloatArrayRegion)<SUB>2932</SUB>> ]
-"14172" [label = <(FIELD_IDENTIFIER,SetDoubleArrayRegion,SetDoubleArrayRegion)<SUB>2933</SUB>> ]
-"14175" [label = <(FIELD_IDENTIFIER,RegisterNatives,RegisterNatives)<SUB>2934</SUB>> ]
-"14178" [label = <(FIELD_IDENTIFIER,UnregisterNatives,UnregisterNatives)<SUB>2935</SUB>> ]
-"14181" [label = <(FIELD_IDENTIFIER,MonitorEnter,MonitorEnter)<SUB>2936</SUB>> ]
-"14184" [label = <(FIELD_IDENTIFIER,MonitorExit,MonitorExit)<SUB>2937</SUB>> ]
-"14187" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>2938</SUB>> ]
-"14190" [label = <(FIELD_IDENTIFIER,GetStringRegion,GetStringRegion)<SUB>2939</SUB>> ]
-"14193" [label = <(FIELD_IDENTIFIER,GetStringUTFRegion,GetStringUTFRegion)<SUB>2940</SUB>> ]
-"14196" [label = <(FIELD_IDENTIFIER,GetPrimitiveArrayCritical,GetPrimitiveArrayCritical)<SUB>2941</SUB>> ]
-"14199" [label = <(FIELD_IDENTIFIER,ReleasePrimitiveArrayCritical,ReleasePrimitiveArrayCritical)<SUB>2942</SUB>> ]
-"14202" [label = <(FIELD_IDENTIFIER,GetStringCritical,GetStringCritical)<SUB>2943</SUB>> ]
-"14205" [label = <(FIELD_IDENTIFIER,ReleaseStringCritical,ReleaseStringCritical)<SUB>2944</SUB>> ]
-"14208" [label = <(FIELD_IDENTIFIER,NewWeakGlobalRef,NewWeakGlobalRef)<SUB>2945</SUB>> ]
-"14211" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>2946</SUB>> ]
-"14214" [label = <(FIELD_IDENTIFIER,ExceptionCheck,ExceptionCheck)<SUB>2947</SUB>> ]
-"14217" [label = <(FIELD_IDENTIFIER,NewDirectByteBuffer,NewDirectByteBuffer)<SUB>2948</SUB>> ]
-"14220" [label = <(FIELD_IDENTIFIER,GetDirectBufferAddress,GetDirectBufferAddress)<SUB>2949</SUB>> ]
-"14223" [label = <(FIELD_IDENTIFIER,GetDirectBufferCapacity,GetDirectBufferCapacity)<SUB>2950</SUB>> ]
-"14226" [label = <(FIELD_IDENTIFIER,GetObjectRefType,GetObjectRefType)<SUB>2951</SUB>> ]
-"343" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>225</SUB>> ]
-"372" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>258</SUB>> ]
-"375" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>258</SUB>> ]
-"378" [label = <(Runtime::Current,Runtime::Current())<SUB>258</SUB>> ]
-"382" [label = <(FIELD_IDENTIFIER,GetSystemClassLoader,GetSystemClassLoader)<SUB>258</SUB>> ]
-"407" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>280</SUB>> ]
-"411" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>280</SUB>> ]
-"431" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>286</SUB>> ]
-"13297" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2642</SUB>> ]
-"13314" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2644</SUB>> ]
-"344" [label = <(Runtime::Current,Runtime::Current())<SUB>225</SUB>> ]
-"348" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>225</SUB>> ]
-"379" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>258</SUB>> ]
-"409" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>280</SUB>> ]
-"412" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>280</SUB>> ]
-"415" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>280</SUB>> ]
-"433" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>286</SUB>> ]
-"13299" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2642</SUB>> ]
-"345" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>225</SUB>> ]
-"381" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>258</SUB>> ]
-"414" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>280</SUB>> ]
-"417" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>280</SUB>> ]
-"347" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>225</SUB>> ]
+"294" [label = <(UNKNOWN,),))<SUB>191</SUB>> ]
+"295" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(return_errors ? ::android::base::ERROR : ::android::base::FATAL)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;)<SUB>192</SUB>> ]
+"296" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);)<SUB>197</SUB>> ]
+"297" [label = <(UNKNOWN,},})<SUB>201</SUB>> ]
+"304" [label = <(UNKNOWN,),))<SUB>203</SUB>> ]
+"305" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 },REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 })<SUB>204</SUB>> ]
+"312" [label = <(h_klass,h_klass(hs.NewHandle(klass)))<SUB>209</SUB>> ]
+"318" [label = <(UNKNOWN,if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 },if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 })<SUB>210</SUB>> ]
+"319" [label = <(UNKNOWN,return h_klass.Get();,return h_klass.Get();)<SUB>213</SUB>> ]
+"320" [label = <(UNKNOWN,},})<SUB>214</SUB>> ]
+"330" [label = <(UNKNOWN,),))<SUB>217</SUB>> ]
+"331" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));)<SUB>218</SUB>> ]
+"332" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>220</SUB>> ]
+"334" [label = <(&lt;operator&gt;.assignment,* method = nullptr)<SUB>223</SUB>> ]
+"338" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>224</SUB>> ]
+"350" [label = <(UNKNOWN,if (is_static) {\012    method = c-&gt;FindDirectMethod(name, sig, pointer_size);\012 },if (is_static) {\012    method = c-&gt;FindDirectMethod(name, sig, pointer_size);\012 })<SUB>225</SUB>> ]
+"351" [label = <(UNKNOWN,else if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 },else if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 })<SUB>227</SUB>> ]
+"352" [label = <(UNKNOWN,else {\012    method = c-&gt;FindVirtualMethod(name, sig, pointer_size);\012 if (method == nullptr) {\012 // No virtual method matching the signature.  Search declared\012 // private methods and constructors.\012      method = c-&gt;FindDeclaredDirectMethod(name, sig, pointer_size);\012 }\012 },else {\012    method = c-&gt;FindVirtualMethod(name, sig, pointer_size);\012 if (method == nullptr) {\012 // No virtual method matching the signature.  Search declared\012 // private methods and constructors.\012      method = c-&gt;FindDeclaredDirectMethod(name, sig, pointer_size);\012 }\012 })<SUB>229</SUB>> ]
+"353" [label = <(UNKNOWN,if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 },if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 })<SUB>237</SUB>> ]
+"354" [label = <(UNKNOWN,return jni::EncodeArtMethod(method);,return jni::EncodeArtMethod(method);)<SUB>241</SUB>> ]
+"355" [label = <(UNKNOWN,},})<SUB>242</SUB>> ]
+"361" [label = <(UNKNOWN,),))<SUB>244</SUB>> ]
+"362" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);)<SUB>245</SUB>> ]
+"363" [label = <(UNKNOWN,if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 },if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 })<SUB>248</SUB>> ]
+"364" [label = <(UNKNOWN,if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 },if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 })<SUB>252</SUB>> ]
+"366" [label = <(&lt;operator&gt;.assignment,class_loader =\012      soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>256</SUB>> ]
+"383" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 return class_loader;\012 },if (class_loader != nullptr) {\012 return class_loader;\012 })<SUB>258</SUB>> ]
+"384" [label = <(UNKNOWN,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());)<SUB>262</SUB>> ]
+"385" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 },if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 })<SUB>263</SUB>> ]
+"386" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>271</SUB>> ]
+"387" [label = <(UNKNOWN,},})<SUB>272</SUB>> ]
+"397" [label = <(UNKNOWN,),))<SUB>275</SUB>> ]
+"398" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());)<SUB>276</SUB>> ]
+"400" [label = <(c,c(\012      hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))))<SUB>278</SUB>> ]
+"419" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>280</SUB>> ]
+"421" [label = <(&lt;operator&gt;.assignment,* field = nullptr)<SUB>283</SUB>> ]
+"426" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>285</SUB>> ]
+"435" [label = <(UNKNOWN,if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 },if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 })<SUB>286</SUB>> ]
+"436" [label = <(UNKNOWN,else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 },else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 })<SUB>289</SUB>> ]
+"437" [label = <(UNKNOWN,if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012    soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 return nullptr;\012 },if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012    soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 return nullptr;\012 })<SUB>292</SUB>> ]
+"439" [label = <(UNKNOWN,if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 },if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>307</SUB>> ]
+"440" [label = <(UNKNOWN,else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 },else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>310</SUB>> ]
+"441" [label = <(UNKNOWN,if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 },if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 })<SUB>313</SUB>> ]
+"442" [label = <(UNKNOWN,return jni::EncodeArtField(field);,return jni::EncodeArtField(field);)<SUB>319</SUB>> ]
+"443" [label = <(UNKNOWN,},})<SUB>320</SUB>> ]
+"453" [label = <(UNKNOWN,),))<SUB>323</SUB>> ]
+"454" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());)<SUB>324</SUB>> ]
+"455" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());)<SUB>326</SUB>> ]
+"456" [label = <(UNKNOWN,},})<SUB>329</SUB>> ]
+"465" [label = <(UNKNOWN,),))<SUB>332</SUB>> ]
+"466" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);)<SUB>333</SUB>> ]
+"467" [label = <(UNKNOWN,},})<SUB>337</SUB>> ]
+"476" [label = <(UNKNOWN,),))<SUB>339</SUB>> ]
+"477" [label = <(UNKNOWN,REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012},REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012})<SUB>340</SUB>> ]
+"496" [label = <(UNKNOWN,),))<SUB>410</SUB>> ]
+"497" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();)<SUB>411</SUB>> ]
+"498" [label = <(UNKNOWN,for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 },for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 })<SUB>413</SUB>> ]
+"499" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>418</SUB>> ]
+"500" [label = <(UNKNOWN,},})<SUB>419</SUB>> ]
+"13052" [label = <(UNKNOWN,},})<SUB>2564</SUB>> ]
+"13108" [label = <(UNKNOWN,),))<SUB>2579</SUB>> ]
+"13109" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);)<SUB>2580</SUB>> ]
+"13110" [label = <(UNKNOWN,if (UNLIKELY(ArtArrayT::GetArrayClass() != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012 ArtArrayT::GetArrayClass()-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 },if (UNLIKELY(ArtArrayT::GetArrayClass() != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012 ArtArrayT::GetArrayClass()-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 })<SUB>2582</SUB>> ]
+"13111" [label = <(UNKNOWN,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());)<SUB>2591</SUB>> ]
+"13112" [label = <(UNKNOWN,return array.Ptr();,return array.Ptr();)<SUB>2592</SUB>> ]
+"13113" [label = <(UNKNOWN,},})<SUB>2593</SUB>> ]
+"13286" [label = <(UNKNOWN,),))<SUB>2637</SUB>> ]
+"13287" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);)<SUB>2638</SUB>> ]
+"13289" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2640</SUB>> ]
+"13299" [label = <(&lt;operator&gt;.assignment,is_copy = array_data != elements)<SUB>2641</SUB>> ]
+"13305" [label = <(&lt;operator&gt;.assignment,bytes = array-&gt;GetLength() * component_size)<SUB>2642</SUB>> ]
+"13313" [label = <(UNKNOWN,if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 },if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 })<SUB>2643</SUB>> ]
+"13314" [label = <(UNKNOWN,if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 },if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 })<SUB>2661</SUB>> ]
+"13315" [label = <(UNKNOWN,},})<SUB>2673</SUB>> ]
+"13528" [label = <(UNKNOWN,};,};)<SUB>2714</SUB>> ]
+"13530" [label = <(&lt;operator&gt;.assignment,gJniNativeInterface = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>2716</SUB>> ]
+"14235" [label = <(&lt;operator&gt;.assignment,(*gJniSleepForeverStub[])() = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>2956</SUB>> ]
+"14525" [label = <(UNKNOWN,},})<SUB>3205</SUB>> ]
+"204" [label = <(&lt;operator&gt;.assignment,kWarnJniAbort = false)<SUB>146</SUB>> ]
+"282" [label = <(UNKNOWN,),))<SUB>176</SUB>> ]
+"283" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;)<SUB>177</SUB>> ]
+"284" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);)<SUB>179</SUB>> ]
+"313" [label = <(NewHandle,hs.NewHandle(klass))<SUB>209</SUB>> ]
+"340" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>224</SUB>> ]
+"368" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>257</SUB>> ]
+"401" [label = <(NewHandle,hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class))))<SUB>279</SUB>> ]
+"428" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>285</SUB>> ]
+"13291" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2640</SUB>> ]
+"13301" [label = <(&lt;operator&gt;.notEquals,array_data != elements)<SUB>2641</SUB>> ]
+"13307" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2642</SUB>> ]
+"13532" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>2716</SUB>> ]
+"14237" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>2956</SUB>> ]
+"25" [label = <(&lt;operator&gt;.assignment,kBadUtf8ReplacementChar[] = &quot;?&quot;)<SUB>66</SUB>> ]
+"314" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>209</SUB>> ]
+"341" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>224</SUB>> ]
+"369" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ClassLoader)<SUB>257</SUB>> ]
+"376" [label = <(GetSystemClassLoader,Runtime::Current()-&gt;GetSystemClassLoader())<SUB>257</SUB>> ]
+"402" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>279</SUB>> ]
+"405" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>279</SUB>> ]
+"429" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>285</SUB>> ]
+"13292" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2640</SUB>> ]
+"13308" [label = <(GetLength,array-&gt;GetLength())<SUB>2642</SUB>> ]
+"13537" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetVersion)<SUB>2721</SUB>> ]
+"13540" [label = <(&lt;operator&gt;.fieldAccess,JNI::DefineClass)<SUB>2722</SUB>> ]
+"13543" [label = <(&lt;operator&gt;.fieldAccess,JNI::FindClass)<SUB>2723</SUB>> ]
+"13546" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedMethod)<SUB>2724</SUB>> ]
+"13549" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedField)<SUB>2725</SUB>> ]
+"13552" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedMethod)<SUB>2726</SUB>> ]
+"13555" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetSuperclass)<SUB>2727</SUB>> ]
+"13558" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsAssignableFrom)<SUB>2728</SUB>> ]
+"13561" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedField)<SUB>2729</SUB>> ]
+"13564" [label = <(&lt;operator&gt;.fieldAccess,JNI::Throw)<SUB>2730</SUB>> ]
+"13567" [label = <(&lt;operator&gt;.fieldAccess,JNI::ThrowNew)<SUB>2731</SUB>> ]
+"13570" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionOccurred)<SUB>2732</SUB>> ]
+"13573" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionDescribe)<SUB>2733</SUB>> ]
+"13576" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionClear)<SUB>2734</SUB>> ]
+"13579" [label = <(&lt;operator&gt;.fieldAccess,JNI::FatalError)<SUB>2735</SUB>> ]
+"13582" [label = <(&lt;operator&gt;.fieldAccess,JNI::PushLocalFrame)<SUB>2736</SUB>> ]
+"13585" [label = <(&lt;operator&gt;.fieldAccess,JNI::PopLocalFrame)<SUB>2737</SUB>> ]
+"13588" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewGlobalRef)<SUB>2738</SUB>> ]
+"13591" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteGlobalRef)<SUB>2739</SUB>> ]
+"13594" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteLocalRef)<SUB>2740</SUB>> ]
+"13597" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsSameObject)<SUB>2741</SUB>> ]
+"13600" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLocalRef)<SUB>2742</SUB>> ]
+"13603" [label = <(&lt;operator&gt;.fieldAccess,JNI::EnsureLocalCapacity)<SUB>2743</SUB>> ]
+"13606" [label = <(&lt;operator&gt;.fieldAccess,JNI::AllocObject)<SUB>2744</SUB>> ]
+"13609" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObject)<SUB>2745</SUB>> ]
+"13612" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectV)<SUB>2746</SUB>> ]
+"13615" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectA)<SUB>2747</SUB>> ]
+"13618" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectClass)<SUB>2748</SUB>> ]
+"13621" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsInstanceOf)<SUB>2749</SUB>> ]
+"13624" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetMethodID)<SUB>2750</SUB>> ]
+"13627" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethod)<SUB>2751</SUB>> ]
+"13630" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodV)<SUB>2752</SUB>> ]
+"13633" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodA)<SUB>2753</SUB>> ]
+"13636" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethod)<SUB>2754</SUB>> ]
+"13639" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodV)<SUB>2755</SUB>> ]
+"13642" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodA)<SUB>2756</SUB>> ]
+"13645" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethod)<SUB>2757</SUB>> ]
+"13648" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodV)<SUB>2758</SUB>> ]
+"13651" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodA)<SUB>2759</SUB>> ]
+"13654" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethod)<SUB>2760</SUB>> ]
+"13657" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodV)<SUB>2761</SUB>> ]
+"13660" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodA)<SUB>2762</SUB>> ]
+"13663" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethod)<SUB>2763</SUB>> ]
+"13666" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodV)<SUB>2764</SUB>> ]
+"13669" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodA)<SUB>2765</SUB>> ]
+"13672" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethod)<SUB>2766</SUB>> ]
+"13675" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodV)<SUB>2767</SUB>> ]
+"13678" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodA)<SUB>2768</SUB>> ]
+"13681" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethod)<SUB>2769</SUB>> ]
+"13684" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodV)<SUB>2770</SUB>> ]
+"13687" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodA)<SUB>2771</SUB>> ]
+"13690" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethod)<SUB>2772</SUB>> ]
+"13693" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodV)<SUB>2773</SUB>> ]
+"13696" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodA)<SUB>2774</SUB>> ]
+"13699" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethod)<SUB>2775</SUB>> ]
+"13702" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodV)<SUB>2776</SUB>> ]
+"13705" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodA)<SUB>2777</SUB>> ]
+"13708" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethod)<SUB>2778</SUB>> ]
+"13711" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodV)<SUB>2779</SUB>> ]
+"13714" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodA)<SUB>2780</SUB>> ]
+"13717" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethod)<SUB>2781</SUB>> ]
+"13720" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodV)<SUB>2782</SUB>> ]
+"13723" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodA)<SUB>2783</SUB>> ]
+"13726" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethod)<SUB>2784</SUB>> ]
+"13729" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodV)<SUB>2785</SUB>> ]
+"13732" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodA)<SUB>2786</SUB>> ]
+"13735" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethod)<SUB>2787</SUB>> ]
+"13738" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodV)<SUB>2788</SUB>> ]
+"13741" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodA)<SUB>2789</SUB>> ]
+"13744" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethod)<SUB>2790</SUB>> ]
+"13747" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodV)<SUB>2791</SUB>> ]
+"13750" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodA)<SUB>2792</SUB>> ]
+"13753" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethod)<SUB>2793</SUB>> ]
+"13756" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodV)<SUB>2794</SUB>> ]
+"13759" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodA)<SUB>2795</SUB>> ]
+"13762" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethod)<SUB>2796</SUB>> ]
+"13765" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodV)<SUB>2797</SUB>> ]
+"13768" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodA)<SUB>2798</SUB>> ]
+"13771" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethod)<SUB>2799</SUB>> ]
+"13774" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodV)<SUB>2800</SUB>> ]
+"13777" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodA)<SUB>2801</SUB>> ]
+"13780" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethod)<SUB>2802</SUB>> ]
+"13783" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodV)<SUB>2803</SUB>> ]
+"13786" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodA)<SUB>2804</SUB>> ]
+"13789" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethod)<SUB>2805</SUB>> ]
+"13792" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodV)<SUB>2806</SUB>> ]
+"13795" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodA)<SUB>2807</SUB>> ]
+"13798" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethod)<SUB>2808</SUB>> ]
+"13801" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodV)<SUB>2809</SUB>> ]
+"13804" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodA)<SUB>2810</SUB>> ]
+"13807" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFieldID)<SUB>2811</SUB>> ]
+"13810" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectField)<SUB>2812</SUB>> ]
+"13813" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanField)<SUB>2813</SUB>> ]
+"13816" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteField)<SUB>2814</SUB>> ]
+"13819" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharField)<SUB>2815</SUB>> ]
+"13822" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortField)<SUB>2816</SUB>> ]
+"13825" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntField)<SUB>2817</SUB>> ]
+"13828" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongField)<SUB>2818</SUB>> ]
+"13831" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatField)<SUB>2819</SUB>> ]
+"13834" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleField)<SUB>2820</SUB>> ]
+"13837" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectField)<SUB>2821</SUB>> ]
+"13840" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanField)<SUB>2822</SUB>> ]
+"13843" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteField)<SUB>2823</SUB>> ]
+"13846" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharField)<SUB>2824</SUB>> ]
+"13849" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortField)<SUB>2825</SUB>> ]
+"13852" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntField)<SUB>2826</SUB>> ]
+"13855" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongField)<SUB>2827</SUB>> ]
+"13858" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatField)<SUB>2828</SUB>> ]
+"13861" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleField)<SUB>2829</SUB>> ]
+"13864" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticMethodID)<SUB>2830</SUB>> ]
+"13867" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethod)<SUB>2831</SUB>> ]
+"13870" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodV)<SUB>2832</SUB>> ]
+"13873" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodA)<SUB>2833</SUB>> ]
+"13876" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethod)<SUB>2834</SUB>> ]
+"13879" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodV)<SUB>2835</SUB>> ]
+"13882" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodA)<SUB>2836</SUB>> ]
+"13885" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethod)<SUB>2837</SUB>> ]
+"13888" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodV)<SUB>2838</SUB>> ]
+"13891" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodA)<SUB>2839</SUB>> ]
+"13894" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethod)<SUB>2840</SUB>> ]
+"13897" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodV)<SUB>2841</SUB>> ]
+"13900" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodA)<SUB>2842</SUB>> ]
+"13903" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethod)<SUB>2843</SUB>> ]
+"13906" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodV)<SUB>2844</SUB>> ]
+"13909" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodA)<SUB>2845</SUB>> ]
+"13912" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethod)<SUB>2846</SUB>> ]
+"13915" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodV)<SUB>2847</SUB>> ]
+"13918" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodA)<SUB>2848</SUB>> ]
+"13921" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethod)<SUB>2849</SUB>> ]
+"13924" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodV)<SUB>2850</SUB>> ]
+"13927" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodA)<SUB>2851</SUB>> ]
+"13930" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethod)<SUB>2852</SUB>> ]
+"13933" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodV)<SUB>2853</SUB>> ]
+"13936" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodA)<SUB>2854</SUB>> ]
+"13939" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethod)<SUB>2855</SUB>> ]
+"13942" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodV)<SUB>2856</SUB>> ]
+"13945" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodA)<SUB>2857</SUB>> ]
+"13948" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethod)<SUB>2858</SUB>> ]
+"13951" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodV)<SUB>2859</SUB>> ]
+"13954" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodA)<SUB>2860</SUB>> ]
+"13957" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFieldID)<SUB>2861</SUB>> ]
+"13960" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticObjectField)<SUB>2862</SUB>> ]
+"13963" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticBooleanField)<SUB>2863</SUB>> ]
+"13966" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticByteField)<SUB>2864</SUB>> ]
+"13969" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticCharField)<SUB>2865</SUB>> ]
+"13972" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticShortField)<SUB>2866</SUB>> ]
+"13975" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticIntField)<SUB>2867</SUB>> ]
+"13978" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticLongField)<SUB>2868</SUB>> ]
+"13981" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFloatField)<SUB>2869</SUB>> ]
+"13984" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticDoubleField)<SUB>2870</SUB>> ]
+"13987" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticObjectField)<SUB>2871</SUB>> ]
+"13990" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticBooleanField)<SUB>2872</SUB>> ]
+"13993" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticByteField)<SUB>2873</SUB>> ]
+"13996" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticCharField)<SUB>2874</SUB>> ]
+"13999" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticShortField)<SUB>2875</SUB>> ]
+"14002" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticIntField)<SUB>2876</SUB>> ]
+"14005" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticLongField)<SUB>2877</SUB>> ]
+"14008" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticFloatField)<SUB>2878</SUB>> ]
+"14011" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticDoubleField)<SUB>2879</SUB>> ]
+"14014" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewString)<SUB>2880</SUB>> ]
+"14017" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringLength)<SUB>2881</SUB>> ]
+"14020" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringChars)<SUB>2882</SUB>> ]
+"14023" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringChars)<SUB>2883</SUB>> ]
+"14026" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewStringUTF)<SUB>2884</SUB>> ]
+"14029" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFLength)<SUB>2885</SUB>> ]
+"14032" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFChars)<SUB>2886</SUB>> ]
+"14035" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringUTFChars)<SUB>2887</SUB>> ]
+"14038" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetArrayLength)<SUB>2888</SUB>> ]
+"14041" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectArray)<SUB>2889</SUB>> ]
+"14044" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectArrayElement)<SUB>2890</SUB>> ]
+"14047" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectArrayElement)<SUB>2891</SUB>> ]
+"14050" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewBooleanArray)<SUB>2892</SUB>> ]
+"14053" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewByteArray)<SUB>2893</SUB>> ]
+"14056" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewCharArray)<SUB>2894</SUB>> ]
+"14059" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewShortArray)<SUB>2895</SUB>> ]
+"14062" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewIntArray)<SUB>2896</SUB>> ]
+"14065" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLongArray)<SUB>2897</SUB>> ]
+"14068" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewFloatArray)<SUB>2898</SUB>> ]
+"14071" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDoubleArray)<SUB>2899</SUB>> ]
+"14074" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayElements)<SUB>2900</SUB>> ]
+"14077" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayElements)<SUB>2901</SUB>> ]
+"14080" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayElements)<SUB>2902</SUB>> ]
+"14083" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayElements)<SUB>2903</SUB>> ]
+"14086" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayElements)<SUB>2904</SUB>> ]
+"14089" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayElements)<SUB>2905</SUB>> ]
+"14092" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayElements)<SUB>2906</SUB>> ]
+"14095" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayElements)<SUB>2907</SUB>> ]
+"14098" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseBooleanArrayElements)<SUB>2908</SUB>> ]
+"14101" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseByteArrayElements)<SUB>2909</SUB>> ]
+"14104" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseCharArrayElements)<SUB>2910</SUB>> ]
+"14107" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseShortArrayElements)<SUB>2911</SUB>> ]
+"14110" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseIntArrayElements)<SUB>2912</SUB>> ]
+"14113" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseLongArrayElements)<SUB>2913</SUB>> ]
+"14116" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseFloatArrayElements)<SUB>2914</SUB>> ]
+"14119" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseDoubleArrayElements)<SUB>2915</SUB>> ]
+"14122" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayRegion)<SUB>2916</SUB>> ]
+"14125" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayRegion)<SUB>2917</SUB>> ]
+"14128" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayRegion)<SUB>2918</SUB>> ]
+"14131" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayRegion)<SUB>2919</SUB>> ]
+"14134" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayRegion)<SUB>2920</SUB>> ]
+"14137" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayRegion)<SUB>2921</SUB>> ]
+"14140" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayRegion)<SUB>2922</SUB>> ]
+"14143" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayRegion)<SUB>2923</SUB>> ]
+"14146" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanArrayRegion)<SUB>2924</SUB>> ]
+"14149" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteArrayRegion)<SUB>2925</SUB>> ]
+"14152" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharArrayRegion)<SUB>2926</SUB>> ]
+"14155" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortArrayRegion)<SUB>2927</SUB>> ]
+"14158" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntArrayRegion)<SUB>2928</SUB>> ]
+"14161" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongArrayRegion)<SUB>2929</SUB>> ]
+"14164" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatArrayRegion)<SUB>2930</SUB>> ]
+"14167" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleArrayRegion)<SUB>2931</SUB>> ]
+"14170" [label = <(&lt;operator&gt;.fieldAccess,JNI::RegisterNatives)<SUB>2932</SUB>> ]
+"14173" [label = <(&lt;operator&gt;.fieldAccess,JNI::UnregisterNatives)<SUB>2933</SUB>> ]
+"14176" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorEnter)<SUB>2934</SUB>> ]
+"14179" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorExit)<SUB>2935</SUB>> ]
+"14182" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetJavaVM)<SUB>2936</SUB>> ]
+"14185" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringRegion)<SUB>2937</SUB>> ]
+"14188" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFRegion)<SUB>2938</SUB>> ]
+"14191" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetPrimitiveArrayCritical)<SUB>2939</SUB>> ]
+"14194" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleasePrimitiveArrayCritical)<SUB>2940</SUB>> ]
+"14197" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringCritical)<SUB>2941</SUB>> ]
+"14200" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringCritical)<SUB>2942</SUB>> ]
+"14203" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewWeakGlobalRef)<SUB>2943</SUB>> ]
+"14206" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteWeakGlobalRef)<SUB>2944</SUB>> ]
+"14209" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionCheck)<SUB>2945</SUB>> ]
+"14212" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDirectByteBuffer)<SUB>2946</SUB>> ]
+"14215" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferAddress)<SUB>2947</SUB>> ]
+"14218" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferCapacity)<SUB>2948</SUB>> ]
+"14221" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectRefType)<SUB>2949</SUB>> ]
+"316" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>209</SUB>> ]
+"342" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>224</SUB>> ]
+"349" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>224</SUB>> ]
+"370" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>257</SUB>> ]
+"373" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>257</SUB>> ]
+"377" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetSystemClassLoader)<SUB>257</SUB>> ]
+"404" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>279</SUB>> ]
+"406" [label = <(Self,soa.Self())<SUB>279</SUB>> ]
+"410" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(jni_class))<SUB>279</SUB>> ]
+"430" [label = <(Runtime::Current,Runtime::Current())<SUB>285</SUB>> ]
+"434" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>285</SUB>> ]
+"13293" [label = <(Runtime::Current,Runtime::Current())<SUB>2640</SUB>> ]
+"13297" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2640</SUB>> ]
+"13309" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2642</SUB>> ]
+"13539" [label = <(FIELD_IDENTIFIER,GetVersion,GetVersion)<SUB>2721</SUB>> ]
+"13542" [label = <(FIELD_IDENTIFIER,DefineClass,DefineClass)<SUB>2722</SUB>> ]
+"13545" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>2723</SUB>> ]
+"13548" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>2724</SUB>> ]
+"13551" [label = <(FIELD_IDENTIFIER,FromReflectedField,FromReflectedField)<SUB>2725</SUB>> ]
+"13554" [label = <(FIELD_IDENTIFIER,ToReflectedMethod,ToReflectedMethod)<SUB>2726</SUB>> ]
+"13557" [label = <(FIELD_IDENTIFIER,GetSuperclass,GetSuperclass)<SUB>2727</SUB>> ]
+"13560" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2728</SUB>> ]
+"13563" [label = <(FIELD_IDENTIFIER,ToReflectedField,ToReflectedField)<SUB>2729</SUB>> ]
+"13566" [label = <(FIELD_IDENTIFIER,Throw,Throw)<SUB>2730</SUB>> ]
+"13569" [label = <(FIELD_IDENTIFIER,ThrowNew,ThrowNew)<SUB>2731</SUB>> ]
+"13572" [label = <(FIELD_IDENTIFIER,ExceptionOccurred,ExceptionOccurred)<SUB>2732</SUB>> ]
+"13575" [label = <(FIELD_IDENTIFIER,ExceptionDescribe,ExceptionDescribe)<SUB>2733</SUB>> ]
+"13578" [label = <(FIELD_IDENTIFIER,ExceptionClear,ExceptionClear)<SUB>2734</SUB>> ]
+"13581" [label = <(FIELD_IDENTIFIER,FatalError,FatalError)<SUB>2735</SUB>> ]
+"13584" [label = <(FIELD_IDENTIFIER,PushLocalFrame,PushLocalFrame)<SUB>2736</SUB>> ]
+"13587" [label = <(FIELD_IDENTIFIER,PopLocalFrame,PopLocalFrame)<SUB>2737</SUB>> ]
+"13590" [label = <(FIELD_IDENTIFIER,NewGlobalRef,NewGlobalRef)<SUB>2738</SUB>> ]
+"13593" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>2739</SUB>> ]
+"13596" [label = <(FIELD_IDENTIFIER,DeleteLocalRef,DeleteLocalRef)<SUB>2740</SUB>> ]
+"13599" [label = <(FIELD_IDENTIFIER,IsSameObject,IsSameObject)<SUB>2741</SUB>> ]
+"13602" [label = <(FIELD_IDENTIFIER,NewLocalRef,NewLocalRef)<SUB>2742</SUB>> ]
+"13605" [label = <(FIELD_IDENTIFIER,EnsureLocalCapacity,EnsureLocalCapacity)<SUB>2743</SUB>> ]
+"13608" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>2744</SUB>> ]
+"13611" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2745</SUB>> ]
+"13614" [label = <(FIELD_IDENTIFIER,NewObjectV,NewObjectV)<SUB>2746</SUB>> ]
+"13617" [label = <(FIELD_IDENTIFIER,NewObjectA,NewObjectA)<SUB>2747</SUB>> ]
+"13620" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>2748</SUB>> ]
+"13623" [label = <(FIELD_IDENTIFIER,IsInstanceOf,IsInstanceOf)<SUB>2749</SUB>> ]
+"13626" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>2750</SUB>> ]
+"13629" [label = <(FIELD_IDENTIFIER,CallObjectMethod,CallObjectMethod)<SUB>2751</SUB>> ]
+"13632" [label = <(FIELD_IDENTIFIER,CallObjectMethodV,CallObjectMethodV)<SUB>2752</SUB>> ]
+"13635" [label = <(FIELD_IDENTIFIER,CallObjectMethodA,CallObjectMethodA)<SUB>2753</SUB>> ]
+"13638" [label = <(FIELD_IDENTIFIER,CallBooleanMethod,CallBooleanMethod)<SUB>2754</SUB>> ]
+"13641" [label = <(FIELD_IDENTIFIER,CallBooleanMethodV,CallBooleanMethodV)<SUB>2755</SUB>> ]
+"13644" [label = <(FIELD_IDENTIFIER,CallBooleanMethodA,CallBooleanMethodA)<SUB>2756</SUB>> ]
+"13647" [label = <(FIELD_IDENTIFIER,CallByteMethod,CallByteMethod)<SUB>2757</SUB>> ]
+"13650" [label = <(FIELD_IDENTIFIER,CallByteMethodV,CallByteMethodV)<SUB>2758</SUB>> ]
+"13653" [label = <(FIELD_IDENTIFIER,CallByteMethodA,CallByteMethodA)<SUB>2759</SUB>> ]
+"13656" [label = <(FIELD_IDENTIFIER,CallCharMethod,CallCharMethod)<SUB>2760</SUB>> ]
+"13659" [label = <(FIELD_IDENTIFIER,CallCharMethodV,CallCharMethodV)<SUB>2761</SUB>> ]
+"13662" [label = <(FIELD_IDENTIFIER,CallCharMethodA,CallCharMethodA)<SUB>2762</SUB>> ]
+"13665" [label = <(FIELD_IDENTIFIER,CallShortMethod,CallShortMethod)<SUB>2763</SUB>> ]
+"13668" [label = <(FIELD_IDENTIFIER,CallShortMethodV,CallShortMethodV)<SUB>2764</SUB>> ]
+"13671" [label = <(FIELD_IDENTIFIER,CallShortMethodA,CallShortMethodA)<SUB>2765</SUB>> ]
+"13674" [label = <(FIELD_IDENTIFIER,CallIntMethod,CallIntMethod)<SUB>2766</SUB>> ]
+"13677" [label = <(FIELD_IDENTIFIER,CallIntMethodV,CallIntMethodV)<SUB>2767</SUB>> ]
+"13680" [label = <(FIELD_IDENTIFIER,CallIntMethodA,CallIntMethodA)<SUB>2768</SUB>> ]
+"13683" [label = <(FIELD_IDENTIFIER,CallLongMethod,CallLongMethod)<SUB>2769</SUB>> ]
+"13686" [label = <(FIELD_IDENTIFIER,CallLongMethodV,CallLongMethodV)<SUB>2770</SUB>> ]
+"13689" [label = <(FIELD_IDENTIFIER,CallLongMethodA,CallLongMethodA)<SUB>2771</SUB>> ]
+"13692" [label = <(FIELD_IDENTIFIER,CallFloatMethod,CallFloatMethod)<SUB>2772</SUB>> ]
+"13695" [label = <(FIELD_IDENTIFIER,CallFloatMethodV,CallFloatMethodV)<SUB>2773</SUB>> ]
+"13698" [label = <(FIELD_IDENTIFIER,CallFloatMethodA,CallFloatMethodA)<SUB>2774</SUB>> ]
+"13701" [label = <(FIELD_IDENTIFIER,CallDoubleMethod,CallDoubleMethod)<SUB>2775</SUB>> ]
+"13704" [label = <(FIELD_IDENTIFIER,CallDoubleMethodV,CallDoubleMethodV)<SUB>2776</SUB>> ]
+"13707" [label = <(FIELD_IDENTIFIER,CallDoubleMethodA,CallDoubleMethodA)<SUB>2777</SUB>> ]
+"13710" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>2778</SUB>> ]
+"13713" [label = <(FIELD_IDENTIFIER,CallVoidMethodV,CallVoidMethodV)<SUB>2779</SUB>> ]
+"13716" [label = <(FIELD_IDENTIFIER,CallVoidMethodA,CallVoidMethodA)<SUB>2780</SUB>> ]
+"13719" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethod,CallNonvirtualObjectMethod)<SUB>2781</SUB>> ]
+"13722" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodV,CallNonvirtualObjectMethodV)<SUB>2782</SUB>> ]
+"13725" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodA,CallNonvirtualObjectMethodA)<SUB>2783</SUB>> ]
+"13728" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethod,CallNonvirtualBooleanMethod)<SUB>2784</SUB>> ]
+"13731" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodV,CallNonvirtualBooleanMethodV)<SUB>2785</SUB>> ]
+"13734" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodA,CallNonvirtualBooleanMethodA)<SUB>2786</SUB>> ]
+"13737" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethod,CallNonvirtualByteMethod)<SUB>2787</SUB>> ]
+"13740" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodV,CallNonvirtualByteMethodV)<SUB>2788</SUB>> ]
+"13743" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodA,CallNonvirtualByteMethodA)<SUB>2789</SUB>> ]
+"13746" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethod,CallNonvirtualCharMethod)<SUB>2790</SUB>> ]
+"13749" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodV,CallNonvirtualCharMethodV)<SUB>2791</SUB>> ]
+"13752" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodA,CallNonvirtualCharMethodA)<SUB>2792</SUB>> ]
+"13755" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethod,CallNonvirtualShortMethod)<SUB>2793</SUB>> ]
+"13758" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodV,CallNonvirtualShortMethodV)<SUB>2794</SUB>> ]
+"13761" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodA,CallNonvirtualShortMethodA)<SUB>2795</SUB>> ]
+"13764" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethod,CallNonvirtualIntMethod)<SUB>2796</SUB>> ]
+"13767" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodV,CallNonvirtualIntMethodV)<SUB>2797</SUB>> ]
+"13770" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodA,CallNonvirtualIntMethodA)<SUB>2798</SUB>> ]
+"13773" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethod,CallNonvirtualLongMethod)<SUB>2799</SUB>> ]
+"13776" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodV,CallNonvirtualLongMethodV)<SUB>2800</SUB>> ]
+"13779" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodA,CallNonvirtualLongMethodA)<SUB>2801</SUB>> ]
+"13782" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethod,CallNonvirtualFloatMethod)<SUB>2802</SUB>> ]
+"13785" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodV,CallNonvirtualFloatMethodV)<SUB>2803</SUB>> ]
+"13788" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodA,CallNonvirtualFloatMethodA)<SUB>2804</SUB>> ]
+"13791" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethod,CallNonvirtualDoubleMethod)<SUB>2805</SUB>> ]
+"13794" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodV,CallNonvirtualDoubleMethodV)<SUB>2806</SUB>> ]
+"13797" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodA,CallNonvirtualDoubleMethodA)<SUB>2807</SUB>> ]
+"13800" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethod,CallNonvirtualVoidMethod)<SUB>2808</SUB>> ]
+"13803" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV)<SUB>2809</SUB>> ]
+"13806" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA)<SUB>2810</SUB>> ]
+"13809" [label = <(FIELD_IDENTIFIER,GetFieldID,GetFieldID)<SUB>2811</SUB>> ]
+"13812" [label = <(FIELD_IDENTIFIER,GetObjectField,GetObjectField)<SUB>2812</SUB>> ]
+"13815" [label = <(FIELD_IDENTIFIER,GetBooleanField,GetBooleanField)<SUB>2813</SUB>> ]
+"13818" [label = <(FIELD_IDENTIFIER,GetByteField,GetByteField)<SUB>2814</SUB>> ]
+"13821" [label = <(FIELD_IDENTIFIER,GetCharField,GetCharField)<SUB>2815</SUB>> ]
+"13824" [label = <(FIELD_IDENTIFIER,GetShortField,GetShortField)<SUB>2816</SUB>> ]
+"13827" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2817</SUB>> ]
+"13830" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2818</SUB>> ]
+"13833" [label = <(FIELD_IDENTIFIER,GetFloatField,GetFloatField)<SUB>2819</SUB>> ]
+"13836" [label = <(FIELD_IDENTIFIER,GetDoubleField,GetDoubleField)<SUB>2820</SUB>> ]
+"13839" [label = <(FIELD_IDENTIFIER,SetObjectField,SetObjectField)<SUB>2821</SUB>> ]
+"13842" [label = <(FIELD_IDENTIFIER,SetBooleanField,SetBooleanField)<SUB>2822</SUB>> ]
+"13845" [label = <(FIELD_IDENTIFIER,SetByteField,SetByteField)<SUB>2823</SUB>> ]
+"13848" [label = <(FIELD_IDENTIFIER,SetCharField,SetCharField)<SUB>2824</SUB>> ]
+"13851" [label = <(FIELD_IDENTIFIER,SetShortField,SetShortField)<SUB>2825</SUB>> ]
+"13854" [label = <(FIELD_IDENTIFIER,SetIntField,SetIntField)<SUB>2826</SUB>> ]
+"13857" [label = <(FIELD_IDENTIFIER,SetLongField,SetLongField)<SUB>2827</SUB>> ]
+"13860" [label = <(FIELD_IDENTIFIER,SetFloatField,SetFloatField)<SUB>2828</SUB>> ]
+"13863" [label = <(FIELD_IDENTIFIER,SetDoubleField,SetDoubleField)<SUB>2829</SUB>> ]
+"13866" [label = <(FIELD_IDENTIFIER,GetStaticMethodID,GetStaticMethodID)<SUB>2830</SUB>> ]
+"13869" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethod,CallStaticObjectMethod)<SUB>2831</SUB>> ]
+"13872" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodV,CallStaticObjectMethodV)<SUB>2832</SUB>> ]
+"13875" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodA,CallStaticObjectMethodA)<SUB>2833</SUB>> ]
+"13878" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethod,CallStaticBooleanMethod)<SUB>2834</SUB>> ]
+"13881" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodV,CallStaticBooleanMethodV)<SUB>2835</SUB>> ]
+"13884" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodA,CallStaticBooleanMethodA)<SUB>2836</SUB>> ]
+"13887" [label = <(FIELD_IDENTIFIER,CallStaticByteMethod,CallStaticByteMethod)<SUB>2837</SUB>> ]
+"13890" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodV,CallStaticByteMethodV)<SUB>2838</SUB>> ]
+"13893" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodA,CallStaticByteMethodA)<SUB>2839</SUB>> ]
+"13896" [label = <(FIELD_IDENTIFIER,CallStaticCharMethod,CallStaticCharMethod)<SUB>2840</SUB>> ]
+"13899" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodV,CallStaticCharMethodV)<SUB>2841</SUB>> ]
+"13902" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodA,CallStaticCharMethodA)<SUB>2842</SUB>> ]
+"13905" [label = <(FIELD_IDENTIFIER,CallStaticShortMethod,CallStaticShortMethod)<SUB>2843</SUB>> ]
+"13908" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodV,CallStaticShortMethodV)<SUB>2844</SUB>> ]
+"13911" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodA,CallStaticShortMethodA)<SUB>2845</SUB>> ]
+"13914" [label = <(FIELD_IDENTIFIER,CallStaticIntMethod,CallStaticIntMethod)<SUB>2846</SUB>> ]
+"13917" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodV,CallStaticIntMethodV)<SUB>2847</SUB>> ]
+"13920" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodA,CallStaticIntMethodA)<SUB>2848</SUB>> ]
+"13923" [label = <(FIELD_IDENTIFIER,CallStaticLongMethod,CallStaticLongMethod)<SUB>2849</SUB>> ]
+"13926" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodV,CallStaticLongMethodV)<SUB>2850</SUB>> ]
+"13929" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodA,CallStaticLongMethodA)<SUB>2851</SUB>> ]
+"13932" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethod,CallStaticFloatMethod)<SUB>2852</SUB>> ]
+"13935" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodV,CallStaticFloatMethodV)<SUB>2853</SUB>> ]
+"13938" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodA,CallStaticFloatMethodA)<SUB>2854</SUB>> ]
+"13941" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethod,CallStaticDoubleMethod)<SUB>2855</SUB>> ]
+"13944" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodV,CallStaticDoubleMethodV)<SUB>2856</SUB>> ]
+"13947" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodA,CallStaticDoubleMethodA)<SUB>2857</SUB>> ]
+"13950" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethod,CallStaticVoidMethod)<SUB>2858</SUB>> ]
+"13953" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodV,CallStaticVoidMethodV)<SUB>2859</SUB>> ]
+"13956" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodA,CallStaticVoidMethodA)<SUB>2860</SUB>> ]
+"13959" [label = <(FIELD_IDENTIFIER,GetStaticFieldID,GetStaticFieldID)<SUB>2861</SUB>> ]
+"13962" [label = <(FIELD_IDENTIFIER,GetStaticObjectField,GetStaticObjectField)<SUB>2862</SUB>> ]
+"13965" [label = <(FIELD_IDENTIFIER,GetStaticBooleanField,GetStaticBooleanField)<SUB>2863</SUB>> ]
+"13968" [label = <(FIELD_IDENTIFIER,GetStaticByteField,GetStaticByteField)<SUB>2864</SUB>> ]
+"13971" [label = <(FIELD_IDENTIFIER,GetStaticCharField,GetStaticCharField)<SUB>2865</SUB>> ]
+"13974" [label = <(FIELD_IDENTIFIER,GetStaticShortField,GetStaticShortField)<SUB>2866</SUB>> ]
+"13977" [label = <(FIELD_IDENTIFIER,GetStaticIntField,GetStaticIntField)<SUB>2867</SUB>> ]
+"13980" [label = <(FIELD_IDENTIFIER,GetStaticLongField,GetStaticLongField)<SUB>2868</SUB>> ]
+"13983" [label = <(FIELD_IDENTIFIER,GetStaticFloatField,GetStaticFloatField)<SUB>2869</SUB>> ]
+"13986" [label = <(FIELD_IDENTIFIER,GetStaticDoubleField,GetStaticDoubleField)<SUB>2870</SUB>> ]
+"13989" [label = <(FIELD_IDENTIFIER,SetStaticObjectField,SetStaticObjectField)<SUB>2871</SUB>> ]
+"13992" [label = <(FIELD_IDENTIFIER,SetStaticBooleanField,SetStaticBooleanField)<SUB>2872</SUB>> ]
+"13995" [label = <(FIELD_IDENTIFIER,SetStaticByteField,SetStaticByteField)<SUB>2873</SUB>> ]
+"13998" [label = <(FIELD_IDENTIFIER,SetStaticCharField,SetStaticCharField)<SUB>2874</SUB>> ]
+"14001" [label = <(FIELD_IDENTIFIER,SetStaticShortField,SetStaticShortField)<SUB>2875</SUB>> ]
+"14004" [label = <(FIELD_IDENTIFIER,SetStaticIntField,SetStaticIntField)<SUB>2876</SUB>> ]
+"14007" [label = <(FIELD_IDENTIFIER,SetStaticLongField,SetStaticLongField)<SUB>2877</SUB>> ]
+"14010" [label = <(FIELD_IDENTIFIER,SetStaticFloatField,SetStaticFloatField)<SUB>2878</SUB>> ]
+"14013" [label = <(FIELD_IDENTIFIER,SetStaticDoubleField,SetStaticDoubleField)<SUB>2879</SUB>> ]
+"14016" [label = <(FIELD_IDENTIFIER,NewString,NewString)<SUB>2880</SUB>> ]
+"14019" [label = <(FIELD_IDENTIFIER,GetStringLength,GetStringLength)<SUB>2881</SUB>> ]
+"14022" [label = <(FIELD_IDENTIFIER,GetStringChars,GetStringChars)<SUB>2882</SUB>> ]
+"14025" [label = <(FIELD_IDENTIFIER,ReleaseStringChars,ReleaseStringChars)<SUB>2883</SUB>> ]
+"14028" [label = <(FIELD_IDENTIFIER,NewStringUTF,NewStringUTF)<SUB>2884</SUB>> ]
+"14031" [label = <(FIELD_IDENTIFIER,GetStringUTFLength,GetStringUTFLength)<SUB>2885</SUB>> ]
+"14034" [label = <(FIELD_IDENTIFIER,GetStringUTFChars,GetStringUTFChars)<SUB>2886</SUB>> ]
+"14037" [label = <(FIELD_IDENTIFIER,ReleaseStringUTFChars,ReleaseStringUTFChars)<SUB>2887</SUB>> ]
+"14040" [label = <(FIELD_IDENTIFIER,GetArrayLength,GetArrayLength)<SUB>2888</SUB>> ]
+"14043" [label = <(FIELD_IDENTIFIER,NewObjectArray,NewObjectArray)<SUB>2889</SUB>> ]
+"14046" [label = <(FIELD_IDENTIFIER,GetObjectArrayElement,GetObjectArrayElement)<SUB>2890</SUB>> ]
+"14049" [label = <(FIELD_IDENTIFIER,SetObjectArrayElement,SetObjectArrayElement)<SUB>2891</SUB>> ]
+"14052" [label = <(FIELD_IDENTIFIER,NewBooleanArray,NewBooleanArray)<SUB>2892</SUB>> ]
+"14055" [label = <(FIELD_IDENTIFIER,NewByteArray,NewByteArray)<SUB>2893</SUB>> ]
+"14058" [label = <(FIELD_IDENTIFIER,NewCharArray,NewCharArray)<SUB>2894</SUB>> ]
+"14061" [label = <(FIELD_IDENTIFIER,NewShortArray,NewShortArray)<SUB>2895</SUB>> ]
+"14064" [label = <(FIELD_IDENTIFIER,NewIntArray,NewIntArray)<SUB>2896</SUB>> ]
+"14067" [label = <(FIELD_IDENTIFIER,NewLongArray,NewLongArray)<SUB>2897</SUB>> ]
+"14070" [label = <(FIELD_IDENTIFIER,NewFloatArray,NewFloatArray)<SUB>2898</SUB>> ]
+"14073" [label = <(FIELD_IDENTIFIER,NewDoubleArray,NewDoubleArray)<SUB>2899</SUB>> ]
+"14076" [label = <(FIELD_IDENTIFIER,GetBooleanArrayElements,GetBooleanArrayElements)<SUB>2900</SUB>> ]
+"14079" [label = <(FIELD_IDENTIFIER,GetByteArrayElements,GetByteArrayElements)<SUB>2901</SUB>> ]
+"14082" [label = <(FIELD_IDENTIFIER,GetCharArrayElements,GetCharArrayElements)<SUB>2902</SUB>> ]
+"14085" [label = <(FIELD_IDENTIFIER,GetShortArrayElements,GetShortArrayElements)<SUB>2903</SUB>> ]
+"14088" [label = <(FIELD_IDENTIFIER,GetIntArrayElements,GetIntArrayElements)<SUB>2904</SUB>> ]
+"14091" [label = <(FIELD_IDENTIFIER,GetLongArrayElements,GetLongArrayElements)<SUB>2905</SUB>> ]
+"14094" [label = <(FIELD_IDENTIFIER,GetFloatArrayElements,GetFloatArrayElements)<SUB>2906</SUB>> ]
+"14097" [label = <(FIELD_IDENTIFIER,GetDoubleArrayElements,GetDoubleArrayElements)<SUB>2907</SUB>> ]
+"14100" [label = <(FIELD_IDENTIFIER,ReleaseBooleanArrayElements,ReleaseBooleanArrayElements)<SUB>2908</SUB>> ]
+"14103" [label = <(FIELD_IDENTIFIER,ReleaseByteArrayElements,ReleaseByteArrayElements)<SUB>2909</SUB>> ]
+"14106" [label = <(FIELD_IDENTIFIER,ReleaseCharArrayElements,ReleaseCharArrayElements)<SUB>2910</SUB>> ]
+"14109" [label = <(FIELD_IDENTIFIER,ReleaseShortArrayElements,ReleaseShortArrayElements)<SUB>2911</SUB>> ]
+"14112" [label = <(FIELD_IDENTIFIER,ReleaseIntArrayElements,ReleaseIntArrayElements)<SUB>2912</SUB>> ]
+"14115" [label = <(FIELD_IDENTIFIER,ReleaseLongArrayElements,ReleaseLongArrayElements)<SUB>2913</SUB>> ]
+"14118" [label = <(FIELD_IDENTIFIER,ReleaseFloatArrayElements,ReleaseFloatArrayElements)<SUB>2914</SUB>> ]
+"14121" [label = <(FIELD_IDENTIFIER,ReleaseDoubleArrayElements,ReleaseDoubleArrayElements)<SUB>2915</SUB>> ]
+"14124" [label = <(FIELD_IDENTIFIER,GetBooleanArrayRegion,GetBooleanArrayRegion)<SUB>2916</SUB>> ]
+"14127" [label = <(FIELD_IDENTIFIER,GetByteArrayRegion,GetByteArrayRegion)<SUB>2917</SUB>> ]
+"14130" [label = <(FIELD_IDENTIFIER,GetCharArrayRegion,GetCharArrayRegion)<SUB>2918</SUB>> ]
+"14133" [label = <(FIELD_IDENTIFIER,GetShortArrayRegion,GetShortArrayRegion)<SUB>2919</SUB>> ]
+"14136" [label = <(FIELD_IDENTIFIER,GetIntArrayRegion,GetIntArrayRegion)<SUB>2920</SUB>> ]
+"14139" [label = <(FIELD_IDENTIFIER,GetLongArrayRegion,GetLongArrayRegion)<SUB>2921</SUB>> ]
+"14142" [label = <(FIELD_IDENTIFIER,GetFloatArrayRegion,GetFloatArrayRegion)<SUB>2922</SUB>> ]
+"14145" [label = <(FIELD_IDENTIFIER,GetDoubleArrayRegion,GetDoubleArrayRegion)<SUB>2923</SUB>> ]
+"14148" [label = <(FIELD_IDENTIFIER,SetBooleanArrayRegion,SetBooleanArrayRegion)<SUB>2924</SUB>> ]
+"14151" [label = <(FIELD_IDENTIFIER,SetByteArrayRegion,SetByteArrayRegion)<SUB>2925</SUB>> ]
+"14154" [label = <(FIELD_IDENTIFIER,SetCharArrayRegion,SetCharArrayRegion)<SUB>2926</SUB>> ]
+"14157" [label = <(FIELD_IDENTIFIER,SetShortArrayRegion,SetShortArrayRegion)<SUB>2927</SUB>> ]
+"14160" [label = <(FIELD_IDENTIFIER,SetIntArrayRegion,SetIntArrayRegion)<SUB>2928</SUB>> ]
+"14163" [label = <(FIELD_IDENTIFIER,SetLongArrayRegion,SetLongArrayRegion)<SUB>2929</SUB>> ]
+"14166" [label = <(FIELD_IDENTIFIER,SetFloatArrayRegion,SetFloatArrayRegion)<SUB>2930</SUB>> ]
+"14169" [label = <(FIELD_IDENTIFIER,SetDoubleArrayRegion,SetDoubleArrayRegion)<SUB>2931</SUB>> ]
+"14172" [label = <(FIELD_IDENTIFIER,RegisterNatives,RegisterNatives)<SUB>2932</SUB>> ]
+"14175" [label = <(FIELD_IDENTIFIER,UnregisterNatives,UnregisterNatives)<SUB>2933</SUB>> ]
+"14178" [label = <(FIELD_IDENTIFIER,MonitorEnter,MonitorEnter)<SUB>2934</SUB>> ]
+"14181" [label = <(FIELD_IDENTIFIER,MonitorExit,MonitorExit)<SUB>2935</SUB>> ]
+"14184" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>2936</SUB>> ]
+"14187" [label = <(FIELD_IDENTIFIER,GetStringRegion,GetStringRegion)<SUB>2937</SUB>> ]
+"14190" [label = <(FIELD_IDENTIFIER,GetStringUTFRegion,GetStringUTFRegion)<SUB>2938</SUB>> ]
+"14193" [label = <(FIELD_IDENTIFIER,GetPrimitiveArrayCritical,GetPrimitiveArrayCritical)<SUB>2939</SUB>> ]
+"14196" [label = <(FIELD_IDENTIFIER,ReleasePrimitiveArrayCritical,ReleasePrimitiveArrayCritical)<SUB>2940</SUB>> ]
+"14199" [label = <(FIELD_IDENTIFIER,GetStringCritical,GetStringCritical)<SUB>2941</SUB>> ]
+"14202" [label = <(FIELD_IDENTIFIER,ReleaseStringCritical,ReleaseStringCritical)<SUB>2942</SUB>> ]
+"14205" [label = <(FIELD_IDENTIFIER,NewWeakGlobalRef,NewWeakGlobalRef)<SUB>2943</SUB>> ]
+"14208" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>2944</SUB>> ]
+"14211" [label = <(FIELD_IDENTIFIER,ExceptionCheck,ExceptionCheck)<SUB>2945</SUB>> ]
+"14214" [label = <(FIELD_IDENTIFIER,NewDirectByteBuffer,NewDirectByteBuffer)<SUB>2946</SUB>> ]
+"14217" [label = <(FIELD_IDENTIFIER,GetDirectBufferAddress,GetDirectBufferAddress)<SUB>2947</SUB>> ]
+"14220" [label = <(FIELD_IDENTIFIER,GetDirectBufferCapacity,GetDirectBufferCapacity)<SUB>2948</SUB>> ]
+"14223" [label = <(FIELD_IDENTIFIER,GetObjectRefType,GetObjectRefType)<SUB>2949</SUB>> ]
+"343" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>224</SUB>> ]
+"372" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>257</SUB>> ]
+"375" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>257</SUB>> ]
+"378" [label = <(Runtime::Current,Runtime::Current())<SUB>257</SUB>> ]
+"382" [label = <(FIELD_IDENTIFIER,GetSystemClassLoader,GetSystemClassLoader)<SUB>257</SUB>> ]
+"407" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>279</SUB>> ]
+"411" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>279</SUB>> ]
+"431" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>285</SUB>> ]
+"13294" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2640</SUB>> ]
+"13311" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2642</SUB>> ]
+"344" [label = <(Runtime::Current,Runtime::Current())<SUB>224</SUB>> ]
+"348" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>224</SUB>> ]
+"379" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>257</SUB>> ]
+"409" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>279</SUB>> ]
+"412" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>279</SUB>> ]
+"415" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>279</SUB>> ]
+"433" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>285</SUB>> ]
+"13296" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2640</SUB>> ]
+"345" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>224</SUB>> ]
+"381" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>257</SUB>> ]
+"414" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>279</SUB>> ]
+"417" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>279</SUB>> ]
+"347" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>224</SUB>> ]
 "20" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"14578" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+"14575" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
   "294" -> "295" 
   "295" -> "296" 
   "296" -> "297" 
@@ -656,26 +656,26 @@
   "497" -> "498" 
   "498" -> "499" 
   "499" -> "500" 
-  "500" -> "13055" 
-  "13055" -> "13111" 
+  "500" -> "13052" 
+  "13052" -> "13108" 
+  "13108" -> "13109" 
+  "13109" -> "13110" 
+  "13110" -> "13111" 
   "13111" -> "13112" 
   "13112" -> "13113" 
-  "13113" -> "13114" 
-  "13114" -> "13115" 
-  "13115" -> "13116" 
-  "13116" -> "13289" 
-  "13289" -> "13290" 
-  "13290" -> "13299" 
-  "13292" -> "13304" 
-  "13302" -> "13314" 
-  "13308" -> "13316" 
-  "13316" -> "13317" 
-  "13317" -> "13318" 
-  "13318" -> "13531" 
-  "13531" -> "13542" 
-  "13533" -> "14240" 
-  "14238" -> "14528" 
-  "14528" -> "14578" 
+  "13113" -> "13286" 
+  "13286" -> "13287" 
+  "13287" -> "13296" 
+  "13289" -> "13301" 
+  "13299" -> "13311" 
+  "13305" -> "13313" 
+  "13313" -> "13314" 
+  "13314" -> "13315" 
+  "13315" -> "13528" 
+  "13528" -> "13539" 
+  "13530" -> "14237" 
+  "14235" -> "14525" 
+  "14525" -> "14575" 
   "204" -> "282" 
   "282" -> "283" 
   "283" -> "284" 
@@ -685,11 +685,11 @@
   "368" -> "366" 
   "401" -> "400" 
   "428" -> "426" 
-  "13294" -> "13292" 
-  "13304" -> "13302" 
-  "13310" -> "13308" 
-  "13535" -> "13533" 
-  "14240" -> "14238" 
+  "13291" -> "13289" 
+  "13301" -> "13299" 
+  "13307" -> "13305" 
+  "13532" -> "13530" 
+  "14237" -> "14235" 
   "25" -> "204" 
   "314" -> "313" 
   "341" -> "340" 
@@ -698,8 +698,9 @@
   "402" -> "409" 
   "405" -> "401" 
   "429" -> "428" 
-  "13295" -> "13294" 
-  "13311" -> "13310" 
+  "13292" -> "13291" 
+  "13308" -> "13307" 
+  "13537" -> "13542" 
   "13540" -> "13545" 
   "13543" -> "13548" 
   "13546" -> "13551" 
@@ -927,8 +928,7 @@
   "14212" -> "14217" 
   "14215" -> "14220" 
   "14218" -> "14223" 
-  "14221" -> "14226" 
-  "14224" -> "13535" 
+  "14221" -> "13532" 
   "316" -> "314" 
   "342" -> "349" 
   "349" -> "341" 
@@ -940,9 +940,10 @@
   "410" -> "405" 
   "430" -> "434" 
   "434" -> "429" 
-  "13296" -> "13300" 
-  "13300" -> "13295" 
-  "13312" -> "13311" 
+  "13293" -> "13297" 
+  "13297" -> "13292" 
+  "13309" -> "13308" 
+  "13539" -> "13537" 
   "13542" -> "13540" 
   "13545" -> "13543" 
   "13548" -> "13546" 
@@ -1171,7 +1172,6 @@
   "14217" -> "14215" 
   "14220" -> "14218" 
   "14223" -> "14221" 
-  "14226" -> "14224" 
   "343" -> "342" 
   "372" -> "370" 
   "375" -> "373" 
@@ -1180,8 +1180,8 @@
   "407" -> "406" 
   "411" -> "410" 
   "431" -> "430" 
-  "13297" -> "13296" 
-  "13314" -> "13312" 
+  "13294" -> "13293" 
+  "13311" -> "13309" 
   "344" -> "348" 
   "348" -> "343" 
   "379" -> "378" 
@@ -1189,7 +1189,7 @@
   "412" -> "417" 
   "415" -> "411" 
   "433" -> "431" 
-  "13299" -> "13297" 
+  "13296" -> "13294" 
   "345" -> "344" 
   "381" -> "379" 
   "414" -> "412" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/30-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/30-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/30-cfg.dot	2023-06-07 19:34:22.027390837 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/30-cfg.dot	2023-06-07 19:34:28.557390228 +0330
@@ -1,16 +1,16 @@
 digraph "ThrowNew" {  
-"1265" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>540</SUB>> ]
-"1284" [label = <(RETURN,return ThrowNewException(env, c, msg, nullptr);,return ThrowNewException(env, c, msg, nullptr);)<SUB>541</SUB>> ]
-"1285" [label = <(ThrowNewException,ThrowNewException(env, c, msg, nullptr))<SUB>541</SUB>> ]
-"1270" [label = <(UNLIKELY,UNLIKELY((c) == nullptr))<SUB>540</SUB>> ]
-"1271" [label = <(&lt;operator&gt;.equals,(c) == nullptr)<SUB>540</SUB>> ]
-"1275" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;c == null&quot;))<SUB>540</SUB>> ]
-"1282" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>540</SUB>> ]
-"1276" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>540</SUB>> ]
-"1277" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>540</SUB>> ]
-"1279" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>540</SUB>> ]
-"1260" [label = <(METHOD,ThrowNew)<SUB>539</SUB>> ]
-"1290" [label = <(METHOD_RETURN,jint)<SUB>539</SUB>> ]
+"1265" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>539</SUB>> ]
+"1284" [label = <(RETURN,return ThrowNewException(env, c, msg, nullptr);,return ThrowNewException(env, c, msg, nullptr);)<SUB>540</SUB>> ]
+"1285" [label = <(ThrowNewException,ThrowNewException(env, c, msg, nullptr))<SUB>540</SUB>> ]
+"1270" [label = <(UNLIKELY,UNLIKELY((c) == nullptr))<SUB>539</SUB>> ]
+"1271" [label = <(&lt;operator&gt;.equals,(c) == nullptr)<SUB>539</SUB>> ]
+"1275" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;c == null&quot;))<SUB>539</SUB>> ]
+"1282" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>539</SUB>> ]
+"1276" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>539</SUB>> ]
+"1277" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>539</SUB>> ]
+"1279" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>539</SUB>> ]
+"1260" [label = <(METHOD,ThrowNew)<SUB>538</SUB>> ]
+"1290" [label = <(METHOD_RETURN,jint)<SUB>538</SUB>> ]
   "1265" -> "1271" 
   "1265" -> "1285" 
   "1284" -> "1290" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/300-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/300-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/300-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/300-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "descriptor" {  
-"15007" [label = <(METHOD,descriptor)> ]
-"15010" [label = <(METHOD_RETURN,ANY)> ]
-  "15007" -> "15010" 
+"15004" [label = <(METHOD,descriptor)> ]
+"15007" [label = <(METHOD_RETURN,ANY)> ]
+  "15004" -> "15007" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/301-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/301-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/301-cfg.dot	2023-06-07 19:34:22.207390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/301-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "NormalizeJniClassDescriptor" {  
-"15011" [label = <(METHOD,NormalizeJniClassDescriptor)> ]
-"15014" [label = <(METHOD_RETURN,ANY)> ]
-  "15011" -> "15014" 
+"15008" [label = <(METHOD,NormalizeJniClassDescriptor)> ]
+"15011" [label = <(METHOD_RETURN,ANY)> ]
+  "15008" -> "15011" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/302-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/302-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/302-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/302-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "soa" {  
-"15015" [label = <(METHOD,soa)> ]
-"15018" [label = <(METHOD_RETURN,ANY)> ]
-  "15015" -> "15018" 
+"15012" [label = <(METHOD,soa)> ]
+"15015" [label = <(METHOD_RETURN,ANY)> ]
+  "15012" -> "15015" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/303-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/303-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/303-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/303-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "IsStarted" {  
-"15019" [label = <(METHOD,IsStarted)> ]
-"15022" [label = <(METHOD_RETURN,ANY)> ]
-  "15019" -> "15022" 
+"15016" [label = <(METHOD,IsStarted)> ]
+"15019" [label = <(METHOD_RETURN,ANY)> ]
+  "15016" -> "15019" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/304-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/304-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/304-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/304-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "class_loader" {  
-"15023" [label = <(METHOD,class_loader)> ]
-"15026" [label = <(METHOD_RETURN,ANY)> ]
-  "15023" -> "15026" 
+"15020" [label = <(METHOD,class_loader)> ]
+"15023" [label = <(METHOD_RETURN,ANY)> ]
+  "15020" -> "15023" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/305-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/305-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/305-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/305-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "FindClass" {  
-"15027" [label = <(METHOD,FindClass)> ]
-"15031" [label = <(METHOD_RETURN,ANY)> ]
-  "15027" -> "15031" 
+"15024" [label = <(METHOD,FindClass)> ]
+"15028" [label = <(METHOD_RETURN,ANY)> ]
+  "15024" -> "15028" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/306-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/306-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/306-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/306-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "c_str" {  
-"15032" [label = <(METHOD,c_str)> ]
-"15035" [label = <(METHOD_RETURN,ANY)> ]
-  "15032" -> "15035" 
+"15029" [label = <(METHOD,c_str)> ]
+"15032" [label = <(METHOD_RETURN,ANY)> ]
+  "15029" -> "15032" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/307-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/307-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/307-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/307-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "FindSystemClass" {  
-"15036" [label = <(METHOD,FindSystemClass)> ]
-"15041" [label = <(METHOD_RETURN,ANY)> ]
-  "15036" -> "15041" 
+"15033" [label = <(METHOD,FindSystemClass)> ]
+"15038" [label = <(METHOD_RETURN,ANY)> ]
+  "15033" -> "15038" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/308-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/308-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/308-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/308-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(jlr_method)" {  
-"15042" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_method))> ]
-"15047" [label = <(METHOD_RETURN,ANY)> ]
-  "15042" -> "15047" 
+"15039" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_method))> ]
+"15044" [label = <(METHOD_RETURN,ANY)> ]
+  "15039" -> "15044" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/309-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/309-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/309-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/309-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "jni::EncodeArtMethod" {  
-"15048" [label = <(METHOD,jni::EncodeArtMethod)> ]
-"15052" [label = <(METHOD_RETURN,ANY)> ]
-  "15048" -> "15052" 
+"15045" [label = <(METHOD,jni::EncodeArtMethod)> ]
+"15049" [label = <(METHOD_RETURN,ANY)> ]
+  "15045" -> "15049" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/31-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/31-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/31-cfg.dot	2023-06-07 19:34:22.027390837 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/31-cfg.dot	2023-06-07 19:34:28.557390228 +0330
@@ -1,15 +1,15 @@
 digraph "ExceptionCheck" {  
-"1295" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;)<SUB>545</SUB>> ]
-"1296" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE)<SUB>545</SUB>> ]
-"1297" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending())<SUB>545</SUB>> ]
-"1298" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending)<SUB>545</SUB>> ]
-"1299" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>545</SUB>> ]
-"1304" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>545</SUB>> ]
-"1300" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>545</SUB>> ]
-"1303" [label = <(FIELD_IDENTIFIER,self,self)<SUB>545</SUB>> ]
-"1301" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>545</SUB>> ]
-"1292" [label = <(METHOD,ExceptionCheck)<SUB>544</SUB>> ]
-"1307" [label = <(METHOD_RETURN,jboolean)<SUB>544</SUB>> ]
+"1295" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;)<SUB>544</SUB>> ]
+"1296" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE)<SUB>544</SUB>> ]
+"1297" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending())<SUB>544</SUB>> ]
+"1298" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self-&gt;IsExceptionPending)<SUB>544</SUB>> ]
+"1299" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>544</SUB>> ]
+"1304" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>544</SUB>> ]
+"1300" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>544</SUB>> ]
+"1303" [label = <(FIELD_IDENTIFIER,self,self)<SUB>544</SUB>> ]
+"1301" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>544</SUB>> ]
+"1292" [label = <(METHOD,ExceptionCheck)<SUB>543</SUB>> ]
+"1307" [label = <(METHOD_RETURN,jboolean)<SUB>543</SUB>> ]
   "1295" -> "1307" 
   "1296" -> "1295" 
   "1297" -> "1296" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/310-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/310-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/310-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/310-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "ArtMethod::FromReflectedMethod" {  
-"15053" [label = <(METHOD,ArtMethod::FromReflectedMethod)> ]
-"15058" [label = <(METHOD_RETURN,ANY)> ]
-  "15053" -> "15058" 
+"15050" [label = <(METHOD,ArtMethod::FromReflectedMethod)> ]
+"15055" [label = <(METHOD_RETURN,ANY)> ]
+  "15050" -> "15055" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/311-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/311-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/311-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/311-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(jlr_field)" {  
-"15059" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_field))> ]
-"15064" [label = <(METHOD_RETURN,ANY)> ]
-  "15059" -> "15064" 
+"15056" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_field))> ]
+"15061" [label = <(METHOD_RETURN,ANY)> ]
+  "15056" -> "15061" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/312-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/312-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/312-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/312-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetClass" {  
-"15065" [label = <(METHOD,GetClass)> ]
-"15068" [label = <(METHOD_RETURN,ANY)> ]
-  "15065" -> "15068" 
+"15062" [label = <(METHOD,GetClass)> ]
+"15065" [label = <(METHOD_RETURN,ANY)> ]
+  "15062" -> "15065" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/313-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/313-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/313-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/313-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Field::StaticClass" {  
-"15069" [label = <(METHOD,mirror::Field::StaticClass)> ]
-"15072" [label = <(METHOD_RETURN,ANY)> ]
-  "15069" -> "15072" 
+"15066" [label = <(METHOD,mirror::Field::StaticClass)> ]
+"15069" [label = <(METHOD_RETURN,ANY)> ]
+  "15066" -> "15069" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/314-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/314-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/314-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/314-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "::DownCast" {  
-"15073" [label = <(METHOD,::DownCast)> ]
-"15077" [label = <(METHOD_RETURN,ANY)> ]
-  "15073" -> "15077" 
+"15070" [label = <(METHOD,::DownCast)> ]
+"15074" [label = <(METHOD_RETURN,ANY)> ]
+  "15070" -> "15074" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/315-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/315-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/315-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/315-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "jni::EncodeArtField" {  
-"15078" [label = <(METHOD,jni::EncodeArtField)> ]
-"15082" [label = <(METHOD_RETURN,ANY)> ]
-  "15078" -> "15082" 
+"15075" [label = <(METHOD,jni::EncodeArtField)> ]
+"15079" [label = <(METHOD_RETURN,ANY)> ]
+  "15075" -> "15079" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/316-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/316-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/316-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/316-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetArtField" {  
-"15083" [label = <(METHOD,GetArtField)> ]
-"15086" [label = <(METHOD_RETURN,ANY)> ]
-  "15083" -> "15086" 
+"15080" [label = <(METHOD,GetArtField)> ]
+"15083" [label = <(METHOD_RETURN,ANY)> ]
+  "15080" -> "15083" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/317-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/317-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/317-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/317-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(mid)" {  
-"15087" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(mid))> ]
-"15092" [label = <(METHOD_RETURN,ANY)> ]
-  "15087" -> "15092" 
+"15084" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(mid))> ]
+"15089" [label = <(METHOD_RETURN,ANY)> ]
+  "15084" -> "15089" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/318-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/318-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/318-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/318-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "jni::DecodeArtMethod" {  
-"15093" [label = <(METHOD,jni::DecodeArtMethod)> ]
-"15097" [label = <(METHOD_RETURN,ANY)> ]
-  "15093" -> "15097" 
+"15090" [label = <(METHOD,jni::DecodeArtMethod)> ]
+"15094" [label = <(METHOD_RETURN,ANY)> ]
+  "15090" -> "15094" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/319-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/319-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/319-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/319-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.multiplication" {  
-"15098" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
-"15102" [label = <(METHOD_RETURN,ANY)> ]
-  "15098" -> "15102" 
+"15095" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
+"15099" [label = <(METHOD_RETURN,ANY)> ]
+  "15095" -> "15099" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/32-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/32-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/32-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/32-cfg.dot	2023-06-07 19:34:28.557390228 +0330
@@ -1,13 +1,13 @@
 digraph "ExceptionClear" {  
-"1313" [label = <(soa,soa(env))<SUB>549</SUB>> ]
-"1315" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>550</SUB>> ]
-"1316" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>550</SUB>> ]
-"1317" [label = <(Self,soa.Self())<SUB>550</SUB>> ]
-"1321" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>550</SUB>> ]
-"1318" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>550</SUB>> ]
-"1320" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>550</SUB>> ]
-"1309" [label = <(METHOD,ExceptionClear)<SUB>548</SUB>> ]
-"1322" [label = <(METHOD_RETURN,void)<SUB>548</SUB>> ]
+"1313" [label = <(soa,soa(env))<SUB>548</SUB>> ]
+"1315" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>549</SUB>> ]
+"1316" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>549</SUB>> ]
+"1317" [label = <(Self,soa.Self())<SUB>549</SUB>> ]
+"1321" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>549</SUB>> ]
+"1318" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>549</SUB>> ]
+"1320" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>549</SUB>> ]
+"1309" [label = <(METHOD,ExceptionClear)<SUB>547</SUB>> ]
+"1322" [label = <(METHOD_RETURN,void)<SUB>547</SUB>> ]
   "1313" -> "1320" 
   "1315" -> "1322" 
   "1316" -> "1315" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/320-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/320-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/320-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/320-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK_EQ" {  
-"15103" [label = <(METHOD,DCHECK_EQ)> ]
-"15107" [label = <(METHOD_RETURN,ANY)> ]
-  "15103" -> "15107" 
+"15100" [label = <(METHOD,DCHECK_EQ)> ]
+"15104" [label = <(METHOD_RETURN,ANY)> ]
+  "15100" -> "15104" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/321-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/321-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/321-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/321-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK" {  
-"15108" [label = <(METHOD,DCHECK)> ]
-"15111" [label = <(METHOD_RETURN,ANY)> ]
-  "15108" -> "15111" 
+"15105" [label = <(METHOD,DCHECK)> ]
+"15108" [label = <(METHOD_RETURN,ANY)> ]
+  "15105" -> "15108" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/322-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/322-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/322-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/322-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalNot" {  
-"15112" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
-"15115" [label = <(METHOD_RETURN,ANY)> ]
-  "15112" -> "15115" 
+"15109" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
+"15112" [label = <(METHOD_RETURN,ANY)> ]
+  "15109" -> "15112" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/323-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/323-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/323-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/323-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "IsActiveTransaction" {  
-"15116" [label = <(METHOD,IsActiveTransaction)> ]
-"15119" [label = <(METHOD_RETURN,ANY)> ]
-  "15116" -> "15119" 
+"15113" [label = <(METHOD,IsActiveTransaction)> ]
+"15116" [label = <(METHOD_RETURN,ANY)> ]
+  "15113" -> "15116" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/324-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/324-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/324-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/324-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "IsConstructor" {  
-"15120" [label = <(METHOD,IsConstructor)> ]
-"15123" [label = <(METHOD_RETURN,ANY)> ]
-  "15120" -> "15123" 
+"15117" [label = <(METHOD,IsConstructor)> ]
+"15120" [label = <(METHOD_RETURN,ANY)> ]
+  "15117" -> "15120" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/325-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/325-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/325-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/325-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;" {  
-"15124" [label = <(METHOD,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
-"15129" [label = <(METHOD_RETURN,ANY)> ]
-  "15124" -> "15129" 
+"15121" [label = <(METHOD,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
+"15126" [label = <(METHOD_RETURN,ANY)> ]
+  "15121" -> "15126" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/326-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/326-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/326-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/326-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;" {  
-"15130" [label = <(METHOD,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
-"15135" [label = <(METHOD_RETURN,ANY)> ]
-  "15130" -> "15135" 
+"15127" [label = <(METHOD,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
+"15132" [label = <(METHOD_RETURN,ANY)> ]
+  "15127" -> "15132" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/327-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/327-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/327-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/327-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(fid)" {  
-"15136" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(fid))> ]
-"15141" [label = <(METHOD_RETURN,ANY)> ]
-  "15136" -> "15141" 
+"15133" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(fid))> ]
+"15138" [label = <(METHOD_RETURN,ANY)> ]
+  "15133" -> "15138" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/328-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/328-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/328-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/328-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "jni::DecodeArtField" {  
-"15142" [label = <(METHOD,jni::DecodeArtField)> ]
-"15146" [label = <(METHOD_RETURN,ANY)> ]
-  "15142" -> "15146" 
+"15139" [label = <(METHOD,jni::DecodeArtField)> ]
+"15143" [label = <(METHOD_RETURN,ANY)> ]
+  "15139" -> "15143" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/329-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/329-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/329-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/329-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.bracketedPrimary" {  
-"15147" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
-"15150" [label = <(METHOD_RETURN,ANY)> ]
-  "15147" -> "15150" 
+"15144" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
+"15147" [label = <(METHOD_RETURN,ANY)> ]
+  "15144" -> "15147" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/33-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/33-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/33-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/33-cfg.dot	2023-06-07 19:34:28.557390228 +0330
@@ -1,122 +1,122 @@
 digraph "ExceptionDescribe" {  
-"1328" [label = <(soa,soa(env))<SUB>554</SUB>> ]
-"1341" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>561</SUB>> ]
-"1350" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Throwable&gt; old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>562</SUB>> ]
-"1372" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>564</SUB>> ]
-"1379" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jthrowable&gt; exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>565</SUB>> ]
-"1395" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jclass&gt; exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>567</SUB>> ]
-"1410" [label = <(&lt;operator&gt;.assignment,mid = env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>568</SUB>> ]
-"1489" [label = <(SetException,soa.Self()-&gt;SetException(old_exception.Get()))<SUB>580</SUB>> ]
-"1331" [label = <(&lt;operator&gt;.logicalNot,!soa.Self()-&gt;GetException())<SUB>557</SUB>> ]
-"1342" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>561</SUB>> ]
-"1345" [label = <(hs,hs(soa.Self()))<SUB>561</SUB>> ]
-"1351" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Throwable)<SUB>562</SUB>> ]
-"1356" [label = <(old_exception,old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>562</SUB>> ]
-"1373" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>564</SUB>> ]
-"1380" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jthrowable)<SUB>565</SUB>> ]
-"1383" [label = <(exception,exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>565</SUB>> ]
-"1396" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jclass)<SUB>567</SUB>> ]
-"1399" [label = <(exception_class,exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>567</SUB>> ]
-"1412" [label = <(GetMethodID,env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>568</SUB>> ]
-"1423" [label = <(&lt;operator&gt;.equals,mid == nullptr)<SUB>569</SUB>> ]
-"1490" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>580</SUB>> ]
-"1496" [label = <(Get,old_exception.Get())<SUB>580</SUB>> ]
-"1332" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>557</SUB>> ]
-"1340" [label = <(RETURN,return;,return;)<SUB>558</SUB>> ]
-"1346" [label = <(Self,soa.Self())<SUB>561</SUB>> ]
-"1353" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>562</SUB>> ]
-"1357" [label = <(&lt;operator&gt;.greaterThan,hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException()))<SUB>563</SUB>> ]
-"1374" [label = <(Self,soa.Self())<SUB>564</SUB>> ]
-"1378" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>564</SUB>> ]
-"1385" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get()))<SUB>566</SUB>> ]
-"1401" [label = <(GetObjectClass,env-&gt;GetObjectClass(exception.get()))<SUB>567</SUB>> ]
-"1413" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetMethodID)<SUB>568</SUB>> ]
-"1416" [label = <(get,exception_class.get())<SUB>568</SUB>> ]
-"1427" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;\012 &lt;&lt; mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>570</SUB>> ]
-"1491" [label = <(Self,soa.Self())<SUB>580</SUB>> ]
-"1495" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>580</SUB>> ]
-"1497" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>580</SUB>> ]
-"1333" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>557</SUB>> ]
-"1347" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>561</SUB>> ]
-"1355" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>562</SUB>> ]
-"1358" [label = <(&lt;operator&gt;.lessThan,hs.NewHandle&lt;mirror::Throwable)<SUB>563</SUB>> ]
-"1365" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>563</SUB>> ]
-"1375" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>564</SUB>> ]
-"1386" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>566</SUB>> ]
-"1391" [label = <(Get,old_exception.Get())<SUB>566</SUB>> ]
-"1402" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetObjectClass)<SUB>567</SUB>> ]
-"1405" [label = <(get,exception.get())<SUB>567</SUB>> ]
-"1415" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>568</SUB>> ]
-"1417" [label = <(&lt;operator&gt;.fieldAccess,exception_class.get)<SUB>568</SUB>> ]
-"1428" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;)<SUB>570</SUB>> ]
-"1432" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>571</SUB>> ]
-"1444" [label = <(CallVoidMethod,env-&gt;CallVoidMethod(exception.get(), mid))<SUB>573</SUB>> ]
-"1492" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>580</SUB>> ]
-"1499" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>580</SUB>> ]
-"1334" [label = <(Self,soa.Self())<SUB>557</SUB>> ]
-"1338" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>557</SUB>> ]
-"1349" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>561</SUB>> ]
-"1359" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>563</SUB>> ]
-"1362" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>563</SUB>> ]
-"1366" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>563</SUB>> ]
-"1377" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>564</SUB>> ]
-"1387" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>566</SUB>> ]
-"1392" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>566</SUB>> ]
-"1404" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>567</SUB>> ]
-"1406" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>567</SUB>> ]
-"1419" [label = <(FIELD_IDENTIFIER,get,get)<SUB>568</SUB>> ]
-"1429" [label = <(LOG,LOG(WARNING))<SUB>570</SUB>> ]
-"1433" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>571</SUB>> ]
-"1438" [label = <(Get,old_exception.Get())<SUB>571</SUB>> ]
-"1445" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;CallVoidMethod)<SUB>573</SUB>> ]
-"1448" [label = <(get,exception.get())<SUB>573</SUB>> ]
-"1454" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>574</SUB>> ]
-"1494" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>580</SUB>> ]
-"1335" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>557</SUB>> ]
-"1361" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>563</SUB>> ]
-"1364" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>563</SUB>> ]
-"1367" [label = <(Self,soa.Self())<SUB>563</SUB>> ]
-"1371" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>563</SUB>> ]
-"1389" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>566</SUB>> ]
-"1394" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>566</SUB>> ]
-"1408" [label = <(FIELD_IDENTIFIER,get,get)<SUB>567</SUB>> ]
-"1434" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>571</SUB>> ]
-"1437" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>571</SUB>> ]
-"1439" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>571</SUB>> ]
-"1447" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>573</SUB>> ]
-"1449" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>573</SUB>> ]
-"1455" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>574</SUB>> ]
-"1462" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException())\012 &lt;&lt; &quot; thrown while calling printStackTrace&quot;)<SUB>575</SUB>> ]
-"1482" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>577</SUB>> ]
-"1337" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>557</SUB>> ]
-"1368" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>563</SUB>> ]
-"1441" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>571</SUB>> ]
-"1451" [label = <(FIELD_IDENTIFIER,get,get)<SUB>573</SUB>> ]
-"1456" [label = <(Self,soa.Self())<SUB>574</SUB>> ]
-"1460" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>574</SUB>> ]
-"1463" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>575</SUB>> ]
-"1483" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>577</SUB>> ]
-"1370" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>563</SUB>> ]
-"1457" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>574</SUB>> ]
-"1464" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot;)<SUB>575</SUB>> ]
-"1468" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>575</SUB>> ]
-"1484" [label = <(Self,soa.Self())<SUB>577</SUB>> ]
-"1488" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>577</SUB>> ]
-"1459" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>574</SUB>> ]
-"1465" [label = <(LOG,LOG(WARNING))<SUB>575</SUB>> ]
-"1469" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>575</SUB>> ]
-"1474" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>575</SUB>> ]
-"1485" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>577</SUB>> ]
-"1470" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>575</SUB>> ]
-"1473" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>575</SUB>> ]
-"1475" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>575</SUB>> ]
-"1487" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>577</SUB>> ]
-"1476" [label = <(Self,soa.Self())<SUB>575</SUB>> ]
-"1480" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>575</SUB>> ]
-"1477" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>575</SUB>> ]
-"1479" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>575</SUB>> ]
-"1324" [label = <(METHOD,ExceptionDescribe)<SUB>553</SUB>> ]
-"1500" [label = <(METHOD_RETURN,void)<SUB>553</SUB>> ]
+"1328" [label = <(soa,soa(env))<SUB>553</SUB>> ]
+"1341" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>560</SUB>> ]
+"1350" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Throwable&gt; old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>561</SUB>> ]
+"1372" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>563</SUB>> ]
+"1379" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jthrowable&gt; exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>564</SUB>> ]
+"1395" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jclass&gt; exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>566</SUB>> ]
+"1410" [label = <(&lt;operator&gt;.assignment,mid = env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>567</SUB>> ]
+"1489" [label = <(SetException,soa.Self()-&gt;SetException(old_exception.Get()))<SUB>579</SUB>> ]
+"1331" [label = <(&lt;operator&gt;.logicalNot,!soa.Self()-&gt;GetException())<SUB>556</SUB>> ]
+"1342" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>560</SUB>> ]
+"1345" [label = <(hs,hs(soa.Self()))<SUB>560</SUB>> ]
+"1351" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Throwable)<SUB>561</SUB>> ]
+"1356" [label = <(old_exception,old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>561</SUB>> ]
+"1373" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>563</SUB>> ]
+"1380" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jthrowable)<SUB>564</SUB>> ]
+"1383" [label = <(exception,exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>564</SUB>> ]
+"1396" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jclass)<SUB>566</SUB>> ]
+"1399" [label = <(exception_class,exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>566</SUB>> ]
+"1412" [label = <(GetMethodID,env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>567</SUB>> ]
+"1423" [label = <(&lt;operator&gt;.equals,mid == nullptr)<SUB>568</SUB>> ]
+"1490" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>579</SUB>> ]
+"1496" [label = <(Get,old_exception.Get())<SUB>579</SUB>> ]
+"1332" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>556</SUB>> ]
+"1340" [label = <(RETURN,return;,return;)<SUB>557</SUB>> ]
+"1346" [label = <(Self,soa.Self())<SUB>560</SUB>> ]
+"1353" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>561</SUB>> ]
+"1357" [label = <(&lt;operator&gt;.greaterThan,hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException()))<SUB>562</SUB>> ]
+"1374" [label = <(Self,soa.Self())<SUB>563</SUB>> ]
+"1378" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>563</SUB>> ]
+"1385" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get()))<SUB>565</SUB>> ]
+"1401" [label = <(GetObjectClass,env-&gt;GetObjectClass(exception.get()))<SUB>566</SUB>> ]
+"1413" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetMethodID)<SUB>567</SUB>> ]
+"1416" [label = <(get,exception_class.get())<SUB>567</SUB>> ]
+"1427" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;\012 &lt;&lt; mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>569</SUB>> ]
+"1491" [label = <(Self,soa.Self())<SUB>579</SUB>> ]
+"1495" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>579</SUB>> ]
+"1497" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>579</SUB>> ]
+"1333" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>556</SUB>> ]
+"1347" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>560</SUB>> ]
+"1355" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>561</SUB>> ]
+"1358" [label = <(&lt;operator&gt;.lessThan,hs.NewHandle&lt;mirror::Throwable)<SUB>562</SUB>> ]
+"1365" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>562</SUB>> ]
+"1375" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>563</SUB>> ]
+"1386" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>565</SUB>> ]
+"1391" [label = <(Get,old_exception.Get())<SUB>565</SUB>> ]
+"1402" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetObjectClass)<SUB>566</SUB>> ]
+"1405" [label = <(get,exception.get())<SUB>566</SUB>> ]
+"1415" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>567</SUB>> ]
+"1417" [label = <(&lt;operator&gt;.fieldAccess,exception_class.get)<SUB>567</SUB>> ]
+"1428" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;)<SUB>569</SUB>> ]
+"1432" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>570</SUB>> ]
+"1444" [label = <(CallVoidMethod,env-&gt;CallVoidMethod(exception.get(), mid))<SUB>572</SUB>> ]
+"1492" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>579</SUB>> ]
+"1499" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>579</SUB>> ]
+"1334" [label = <(Self,soa.Self())<SUB>556</SUB>> ]
+"1338" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>556</SUB>> ]
+"1349" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>560</SUB>> ]
+"1359" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>562</SUB>> ]
+"1362" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>562</SUB>> ]
+"1366" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>562</SUB>> ]
+"1377" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>563</SUB>> ]
+"1387" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>565</SUB>> ]
+"1392" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>565</SUB>> ]
+"1404" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>566</SUB>> ]
+"1406" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>566</SUB>> ]
+"1419" [label = <(FIELD_IDENTIFIER,get,get)<SUB>567</SUB>> ]
+"1429" [label = <(LOG,LOG(WARNING))<SUB>569</SUB>> ]
+"1433" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>570</SUB>> ]
+"1438" [label = <(Get,old_exception.Get())<SUB>570</SUB>> ]
+"1445" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;CallVoidMethod)<SUB>572</SUB>> ]
+"1448" [label = <(get,exception.get())<SUB>572</SUB>> ]
+"1454" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>573</SUB>> ]
+"1494" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>579</SUB>> ]
+"1335" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>556</SUB>> ]
+"1361" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>562</SUB>> ]
+"1364" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>562</SUB>> ]
+"1367" [label = <(Self,soa.Self())<SUB>562</SUB>> ]
+"1371" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>562</SUB>> ]
+"1389" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>565</SUB>> ]
+"1394" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>565</SUB>> ]
+"1408" [label = <(FIELD_IDENTIFIER,get,get)<SUB>566</SUB>> ]
+"1434" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>570</SUB>> ]
+"1437" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>570</SUB>> ]
+"1439" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>570</SUB>> ]
+"1447" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>572</SUB>> ]
+"1449" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>572</SUB>> ]
+"1455" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>573</SUB>> ]
+"1462" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException())\012 &lt;&lt; &quot; thrown while calling printStackTrace&quot;)<SUB>574</SUB>> ]
+"1482" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>576</SUB>> ]
+"1337" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>556</SUB>> ]
+"1368" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>562</SUB>> ]
+"1441" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>570</SUB>> ]
+"1451" [label = <(FIELD_IDENTIFIER,get,get)<SUB>572</SUB>> ]
+"1456" [label = <(Self,soa.Self())<SUB>573</SUB>> ]
+"1460" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>573</SUB>> ]
+"1463" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>574</SUB>> ]
+"1483" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>576</SUB>> ]
+"1370" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>562</SUB>> ]
+"1457" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>573</SUB>> ]
+"1464" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot;)<SUB>574</SUB>> ]
+"1468" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>574</SUB>> ]
+"1484" [label = <(Self,soa.Self())<SUB>576</SUB>> ]
+"1488" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>576</SUB>> ]
+"1459" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>573</SUB>> ]
+"1465" [label = <(LOG,LOG(WARNING))<SUB>574</SUB>> ]
+"1469" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>574</SUB>> ]
+"1474" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>574</SUB>> ]
+"1485" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>576</SUB>> ]
+"1470" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>574</SUB>> ]
+"1473" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>574</SUB>> ]
+"1475" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>574</SUB>> ]
+"1487" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>576</SUB>> ]
+"1476" [label = <(Self,soa.Self())<SUB>574</SUB>> ]
+"1480" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>574</SUB>> ]
+"1477" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>574</SUB>> ]
+"1479" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>574</SUB>> ]
+"1324" [label = <(METHOD,ExceptionDescribe)<SUB>552</SUB>> ]
+"1500" [label = <(METHOD_RETURN,void)<SUB>552</SUB>> ]
   "1328" -> "1337" 
   "1341" -> "1355" 
   "1350" -> "1377" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/330-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/330-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/330-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/330-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.expressionList" {  
-"15151" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
-"15156" [label = <(METHOD_RETURN,ANY)> ]
-  "15151" -> "15156" 
+"15148" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
+"15153" [label = <(METHOD_RETURN,ANY)> ]
+  "15148" -> "15153" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/331-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/331-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/331-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/331-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(java_object)" {  
-"15157" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_object))> ]
-"15162" [label = <(METHOD_RETURN,ANY)> ]
-  "15157" -> "15162" 
+"15154" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_object))> ]
+"15159" [label = <(METHOD_RETURN,ANY)> ]
+  "15154" -> "15159" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/332-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/332-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/332-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/332-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(java_class)" {  
-"15163" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_class))> ]
-"15168" [label = <(METHOD_RETURN,ANY)> ]
-  "15163" -> "15168" 
+"15160" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_class))> ]
+"15165" [label = <(METHOD_RETURN,ANY)> ]
+  "15160" -> "15165" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/333-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/333-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/333-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/333-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "IsInterface" {  
-"15169" [label = <(METHOD,IsInterface)> ]
-"15172" [label = <(METHOD_RETURN,ANY)> ]
-  "15169" -> "15172" 
+"15166" [label = <(METHOD,IsInterface)> ]
+"15169" [label = <(METHOD_RETURN,ANY)> ]
+  "15166" -> "15169" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/334-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/334-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/334-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/334-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetSuperClass" {  
-"15173" [label = <(METHOD,GetSuperClass)> ]
-"15176" [label = <(METHOD_RETURN,ANY)> ]
-  "15173" -> "15176" 
+"15170" [label = <(METHOD,GetSuperClass)> ]
+"15173" [label = <(METHOD_RETURN,ANY)> ]
+  "15170" -> "15173" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/335-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/335-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/335-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/335-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN" {  
-"15177" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN)<SUB>395</SUB>> ]
-"15181" [label = <(METHOD_RETURN,ANY)> ]
-  "15177" -> "15181" 
+"15174" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN)<SUB>394</SUB>> ]
+"15178" [label = <(METHOD_RETURN,ANY)> ]
+  "15174" -> "15178" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/336-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/336-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/336-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/336-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE)" {  
-"15182" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))> ]
-"15187" [label = <(METHOD_RETURN,ANY)> ]
-  "15182" -> "15187" 
+"15179" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))> ]
+"15184" [label = <(METHOD_RETURN,ANY)> ]
+  "15179" -> "15184" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/337-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/337-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/337-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/337-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE)" {  
-"15188" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))> ]
-"15193" [label = <(METHOD_RETURN,ANY)> ]
-  "15188" -> "15193" 
+"15185" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))> ]
+"15190" [label = <(METHOD_RETURN,ANY)> ]
+  "15185" -> "15190" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/338-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/338-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/338-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/338-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "IsAssignableFrom" {  
-"15194" [label = <(METHOD,IsAssignableFrom)> ]
-"15198" [label = <(METHOD_RETURN,ANY)> ]
-  "15194" -> "15198" 
+"15191" [label = <(METHOD,IsAssignableFrom)> ]
+"15195" [label = <(METHOD_RETURN,ANY)> ]
+  "15191" -> "15195" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/339-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/339-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/339-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/339-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE)" {  
-"15199" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))> ]
-"15204" [label = <(METHOD_RETURN,ANY)> ]
-  "15199" -> "15204" 
+"15196" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))> ]
+"15201" [label = <(METHOD_RETURN,ANY)> ]
+  "15196" -> "15201" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/34-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/34-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/34-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/34-cfg.dot	2023-06-07 19:34:28.557390228 +0330
@@ -1,19 +1,19 @@
 digraph "ExceptionOccurred" {  
-"1506" [label = <(soa,soa(env))<SUB>584</SUB>> ]
-"1509" [label = <(&lt;operator&gt;.assignment,* exception = soa.Self()-&gt;GetException())<SUB>585</SUB>> ]
-"1518" [label = <(RETURN,return soa.AddLocalReference&lt;jthrowable&gt;(exception);,return soa.AddLocalReference&lt;jthrowable&gt;(exception);)<SUB>586</SUB>> ]
-"1511" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>585</SUB>> ]
-"1519" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(exception))<SUB>586</SUB>> ]
-"1512" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>585</SUB>> ]
-"1520" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>586</SUB>> ]
-"1513" [label = <(Self,soa.Self())<SUB>585</SUB>> ]
-"1517" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>585</SUB>> ]
-"1521" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>586</SUB>> ]
-"1514" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>585</SUB>> ]
-"1523" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>586</SUB>> ]
-"1516" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>585</SUB>> ]
-"1502" [label = <(METHOD,ExceptionOccurred)<SUB>583</SUB>> ]
-"1526" [label = <(METHOD_RETURN,jthrowable)<SUB>583</SUB>> ]
+"1506" [label = <(soa,soa(env))<SUB>583</SUB>> ]
+"1509" [label = <(&lt;operator&gt;.assignment,* exception = soa.Self()-&gt;GetException())<SUB>584</SUB>> ]
+"1518" [label = <(RETURN,return soa.AddLocalReference&lt;jthrowable&gt;(exception);,return soa.AddLocalReference&lt;jthrowable&gt;(exception);)<SUB>585</SUB>> ]
+"1511" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>584</SUB>> ]
+"1519" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(exception))<SUB>585</SUB>> ]
+"1512" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>584</SUB>> ]
+"1520" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>585</SUB>> ]
+"1513" [label = <(Self,soa.Self())<SUB>584</SUB>> ]
+"1517" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>584</SUB>> ]
+"1521" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>585</SUB>> ]
+"1514" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>584</SUB>> ]
+"1523" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>585</SUB>> ]
+"1516" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>584</SUB>> ]
+"1502" [label = <(METHOD,ExceptionOccurred)<SUB>582</SUB>> ]
+"1526" [label = <(METHOD_RETURN,jthrowable)<SUB>582</SUB>> ]
   "1506" -> "1516" 
   "1509" -> "1523" 
   "1518" -> "1526" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/340-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/340-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/340-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/340-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "InstanceOf" {  
-"15205" [label = <(METHOD,InstanceOf)> ]
-"15209" [label = <(METHOD_RETURN,ANY)> ]
-  "15205" -> "15209" 
+"15202" [label = <(METHOD,InstanceOf)> ]
+"15206" [label = <(METHOD_RETURN,ANY)> ]
+  "15202" -> "15206" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/341-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/341-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/341-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/341-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "SetException" {  
-"15210" [label = <(METHOD,SetException)> ]
-"15214" [label = <(METHOD_RETURN,ANY)> ]
-  "15210" -> "15214" 
+"15207" [label = <(METHOD,SetException)> ]
+"15211" [label = <(METHOD_RETURN,ANY)> ]
+  "15207" -> "15211" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/342-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/342-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/342-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/342-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR)" {  
-"15215" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))> ]
-"15220" [label = <(METHOD_RETURN,ANY)> ]
-  "15215" -> "15220" 
+"15212" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))> ]
+"15217" [label = <(METHOD_RETURN,ANY)> ]
+  "15212" -> "15217" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/343-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/343-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/343-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/343-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "IsExceptionPending" {  
-"15221" [label = <(METHOD,IsExceptionPending)> ]
-"15224" [label = <(METHOD_RETURN,ANY)> ]
-  "15221" -> "15224" 
+"15218" [label = <(METHOD,IsExceptionPending)> ]
+"15221" [label = <(METHOD_RETURN,ANY)> ]
+  "15218" -> "15221" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/344-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/344-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/344-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/344-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "ClearException" {  
-"15225" [label = <(METHOD,ClearException)> ]
-"15228" [label = <(METHOD_RETURN,ANY)> ]
-  "15225" -> "15228" 
+"15222" [label = <(METHOD,ClearException)> ]
+"15225" [label = <(METHOD_RETURN,ANY)> ]
+  "15222" -> "15225" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/345-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/345-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/345-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/345-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetException" {  
-"15229" [label = <(METHOD,GetException)> ]
-"15232" [label = <(METHOD_RETURN,ANY)> ]
-  "15229" -> "15232" 
+"15226" [label = <(METHOD,GetException)> ]
+"15229" [label = <(METHOD_RETURN,ANY)> ]
+  "15226" -> "15229" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/346-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/346-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/346-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/346-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "old_exception" {  
-"15233" [label = <(METHOD,old_exception)> ]
-"15236" [label = <(METHOD_RETURN,ANY)> ]
-  "15233" -> "15236" 
+"15230" [label = <(METHOD,old_exception)> ]
+"15233" [label = <(METHOD_RETURN,ANY)> ]
+  "15230" -> "15233" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/347-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/347-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/347-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/347-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "exception" {  
-"15237" [label = <(METHOD,exception)> ]
-"15241" [label = <(METHOD_RETURN,ANY)> ]
-  "15237" -> "15241" 
+"15234" [label = <(METHOD,exception)> ]
+"15238" [label = <(METHOD_RETURN,ANY)> ]
+  "15234" -> "15238" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/348-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/348-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/348-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/348-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "Get" {  
-"15242" [label = <(METHOD,Get)> ]
-"15245" [label = <(METHOD_RETURN,ANY)> ]
-  "15242" -> "15245" 
+"15239" [label = <(METHOD,Get)> ]
+"15242" [label = <(METHOD_RETURN,ANY)> ]
+  "15239" -> "15242" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/349-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/349-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/349-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/349-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "exception_class" {  
-"15246" [label = <(METHOD,exception_class)> ]
-"15250" [label = <(METHOD_RETURN,ANY)> ]
-  "15246" -> "15250" 
+"15243" [label = <(METHOD,exception_class)> ]
+"15247" [label = <(METHOD_RETURN,ANY)> ]
+  "15243" -> "15247" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/35-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/35-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/35-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/35-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,9 +1,9 @@
 digraph "FatalError" {  
-"1532" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot; &lt;&lt; msg)<SUB>590</SUB>> ]
-"1533" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot;)<SUB>590</SUB>> ]
-"1534" [label = <(LOG,LOG(FATAL))<SUB>590</SUB>> ]
-"1528" [label = <(METHOD,FatalError)<SUB>589</SUB>> ]
-"1538" [label = <(METHOD_RETURN,void)<SUB>589</SUB>> ]
+"1532" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot; &lt;&lt; msg)<SUB>589</SUB>> ]
+"1533" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot;)<SUB>589</SUB>> ]
+"1534" [label = <(LOG,LOG(FATAL))<SUB>589</SUB>> ]
+"1528" [label = <(METHOD,FatalError)<SUB>588</SUB>> ]
+"1538" [label = <(METHOD_RETURN,void)<SUB>588</SUB>> ]
   "1532" -> "1538" 
   "1533" -> "1532" 
   "1534" -> "1533" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/350-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/350-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/350-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/350-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetObjectClass" {  
-"15251" [label = <(METHOD,GetObjectClass)> ]
-"15255" [label = <(METHOD_RETURN,ANY)> ]
-  "15251" -> "15255" 
+"15248" [label = <(METHOD,GetObjectClass)> ]
+"15252" [label = <(METHOD_RETURN,ANY)> ]
+  "15248" -> "15252" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/351-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/351-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/351-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/351-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "get" {  
-"15256" [label = <(METHOD,get)> ]
-"15259" [label = <(METHOD_RETURN,ANY)> ]
-  "15256" -> "15259" 
+"15253" [label = <(METHOD,get)> ]
+"15256" [label = <(METHOD_RETURN,ANY)> ]
+  "15253" -> "15256" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/352-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/352-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/352-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/352-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetMethodID" {  
-"15260" [label = <(METHOD,GetMethodID)> ]
-"15266" [label = <(METHOD_RETURN,ANY)> ]
-  "15260" -> "15266" 
+"15257" [label = <(METHOD,GetMethodID)> ]
+"15263" [label = <(METHOD_RETURN,ANY)> ]
+  "15257" -> "15263" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/353-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/353-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/353-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/353-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Object::PrettyTypeOf" {  
-"15267" [label = <(METHOD,mirror::Object::PrettyTypeOf)> ]
-"15271" [label = <(METHOD_RETURN,ANY)> ]
-  "15267" -> "15271" 
+"15264" [label = <(METHOD,mirror::Object::PrettyTypeOf)> ]
+"15268" [label = <(METHOD_RETURN,ANY)> ]
+  "15264" -> "15268" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/354-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/354-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/354-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/354-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CallVoidMethod" {  
-"15272" [label = <(METHOD,CallVoidMethod)> ]
-"15277" [label = <(METHOD_RETURN,ANY)> ]
-  "15272" -> "15277" 
+"15269" [label = <(METHOD,CallVoidMethod)> ]
+"15274" [label = <(METHOD_RETURN,ANY)> ]
+  "15269" -> "15274" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/355-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/355-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/355-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/355-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureLocalCapacityInternal" {  
-"15278" [label = <(METHOD,EnsureLocalCapacityInternal)> ]
-"15283" [label = <(METHOD_RETURN,ANY)> ]
-  "15278" -> "15283" 
+"15275" [label = <(METHOD,EnsureLocalCapacityInternal)> ]
+"15280" [label = <(METHOD_RETURN,ANY)> ]
+  "15275" -> "15280" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/356-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/356-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/356-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/356-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "PushFrame" {  
-"15284" [label = <(METHOD,PushFrame)> ]
-"15288" [label = <(METHOD_RETURN,ANY)> ]
-  "15284" -> "15288" 
+"15281" [label = <(METHOD,PushFrame)> ]
+"15285" [label = <(METHOD_RETURN,ANY)> ]
+  "15281" -> "15285" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/357-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/357-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/357-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/357-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "down_cast&lt;JNIEnvExt*&gt;" {  
-"15289" [label = <(METHOD,down_cast&lt;JNIEnvExt*&gt;)> ]
-"15292" [label = <(METHOD_RETURN,ANY)> ]
-  "15289" -> "15292" 
+"15286" [label = <(METHOD,down_cast&lt;JNIEnvExt*&gt;)> ]
+"15289" [label = <(METHOD_RETURN,ANY)> ]
+  "15286" -> "15289" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/358-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/358-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/358-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/358-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "PopFrame" {  
-"15293" [label = <(METHOD,PopFrame)> ]
-"15296" [label = <(METHOD_RETURN,ANY)> ]
-  "15293" -> "15296" 
+"15290" [label = <(METHOD,PopFrame)> ]
+"15293" [label = <(METHOD_RETURN,ANY)> ]
+  "15290" -> "15293" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/359-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/359-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/359-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/359-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "Env" {  
-"15297" [label = <(METHOD,Env)> ]
-"15300" [label = <(METHOD_RETURN,ANY)> ]
-  "15297" -> "15300" 
+"15294" [label = <(METHOD,Env)> ]
+"15297" [label = <(METHOD_RETURN,ANY)> ]
+  "15294" -> "15297" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/36-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/36-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/36-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/36-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,15 +1,15 @@
 digraph "PushLocalFrame" {  
-"1545" [label = <(soa,soa(env))<SUB>595</SUB>> ]
-"1557" [label = <(PushFrame,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame(capacity))<SUB>599</SUB>> ]
-"1563" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>600</SUB>> ]
-"1548" [label = <(&lt;operator&gt;.notEquals,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;) != JNI_OK)<SUB>596</SUB>> ]
-"1558" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame)<SUB>599</SUB>> ]
-"1549" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;))<SUB>596</SUB>> ]
-"1555" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>597</SUB>> ]
-"1559" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>599</SUB>> ]
-"1561" [label = <(FIELD_IDENTIFIER,PushFrame,PushFrame)<SUB>599</SUB>> ]
-"1540" [label = <(METHOD,PushLocalFrame)<SUB>593</SUB>> ]
-"1565" [label = <(METHOD_RETURN,jint)<SUB>593</SUB>> ]
+"1545" [label = <(soa,soa(env))<SUB>594</SUB>> ]
+"1557" [label = <(PushFrame,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame(capacity))<SUB>598</SUB>> ]
+"1563" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>599</SUB>> ]
+"1548" [label = <(&lt;operator&gt;.notEquals,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;) != JNI_OK)<SUB>595</SUB>> ]
+"1558" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame)<SUB>598</SUB>> ]
+"1549" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;))<SUB>595</SUB>> ]
+"1555" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>596</SUB>> ]
+"1559" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>598</SUB>> ]
+"1561" [label = <(FIELD_IDENTIFIER,PushFrame,PushFrame)<SUB>598</SUB>> ]
+"1540" [label = <(METHOD,PushLocalFrame)<SUB>592</SUB>> ]
+"1565" [label = <(METHOD_RETURN,jint)<SUB>592</SUB>> ]
   "1545" -> "1549" 
   "1557" -> "1563" 
   "1563" -> "1565" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/360-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/360-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/360-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/360-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "AddGlobalRef" {  
-"15301" [label = <(METHOD,AddGlobalRef)> ]
-"15306" [label = <(METHOD_RETURN,ANY)> ]
-  "15301" -> "15306" 
+"15298" [label = <(METHOD,AddGlobalRef)> ]
+"15303" [label = <(METHOD_RETURN,ANY)> ]
+  "15298" -> "15303" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/361-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/361-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/361-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/361-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "Vm" {  
-"15307" [label = <(METHOD,Vm)> ]
-"15310" [label = <(METHOD_RETURN,ANY)> ]
-  "15307" -> "15310" 
+"15304" [label = <(METHOD,Vm)> ]
+"15307" [label = <(METHOD_RETURN,ANY)> ]
+  "15304" -> "15307" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/362-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/362-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/362-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/362-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteGlobalRef" {  
-"15311" [label = <(METHOD,DeleteGlobalRef)> ]
-"15316" [label = <(METHOD_RETURN,ANY)> ]
-  "15311" -> "15316" 
+"15308" [label = <(METHOD,DeleteGlobalRef)> ]
+"15313" [label = <(METHOD_RETURN,ANY)> ]
+  "15308" -> "15313" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/363-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/363-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/363-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/363-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "AddWeakGlobalRef" {  
-"15317" [label = <(METHOD,AddWeakGlobalRef)> ]
-"15322" [label = <(METHOD_RETURN,ANY)> ]
-  "15317" -> "15322" 
+"15314" [label = <(METHOD,AddWeakGlobalRef)> ]
+"15319" [label = <(METHOD_RETURN,ANY)> ]
+  "15314" -> "15319" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/364-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/364-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/364-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/364-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteWeakGlobalRef" {  
-"15323" [label = <(METHOD,DeleteWeakGlobalRef)> ]
-"15328" [label = <(METHOD_RETURN,ANY)> ]
-  "15323" -> "15328" 
+"15320" [label = <(METHOD,DeleteWeakGlobalRef)> ]
+"15325" [label = <(METHOD_RETURN,ANY)> ]
+  "15320" -> "15325" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/365-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/365-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/365-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/365-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "Remove" {  
-"15329" [label = <(METHOD,Remove)> ]
-"15334" [label = <(METHOD_RETURN,ANY)> ]
-  "15329" -> "15334" 
+"15326" [label = <(METHOD,Remove)> ]
+"15331" [label = <(METHOD_RETURN,ANY)> ]
+  "15326" -> "15331" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/366-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/366-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/366-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/366-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "IsStringClass" {  
-"15335" [label = <(METHOD,IsStringClass)> ]
-"15338" [label = <(METHOD_RETURN,ANY)> ]
-  "15335" -> "15338" 
+"15332" [label = <(METHOD,IsStringClass)> ]
+"15335" [label = <(METHOD_RETURN,ANY)> ]
+  "15332" -> "15335" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/367-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/367-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/367-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/367-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetCurrentAllocator" {  
-"15339" [label = <(METHOD,GetCurrentAllocator)> ]
-"15342" [label = <(METHOD_RETURN,ANY)> ]
-  "15339" -> "15342" 
+"15336" [label = <(METHOD,GetCurrentAllocator)> ]
+"15339" [label = <(METHOD_RETURN,ANY)> ]
+  "15336" -> "15339" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/368-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/368-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/368-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/368-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetHeap" {  
-"15343" [label = <(METHOD,GetHeap)> ]
-"15346" [label = <(METHOD_RETURN,ANY)> ]
-  "15343" -> "15346" 
+"15340" [label = <(METHOD,GetHeap)> ]
+"15343" [label = <(METHOD_RETURN,ANY)> ]
+  "15340" -> "15343" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/369-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/369-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/369-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/369-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "AllocObject" {  
-"15347" [label = <(METHOD,AllocObject)> ]
-"15351" [label = <(METHOD_RETURN,ANY)> ]
-  "15347" -> "15351" 
+"15344" [label = <(METHOD,AllocObject)> ]
+"15348" [label = <(METHOD_RETURN,ANY)> ]
+  "15344" -> "15348" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/37-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/37-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/37-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/37-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,29 +1,29 @@
 digraph "PopLocalFrame" {  
-"1572" [label = <(soa,soa(env))<SUB>604</SUB>> ]
-"1574" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; survivor = soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>605</SUB>> ]
-"1591" [label = <(PopFrame,soa.Env()-&gt;PopFrame())<SUB>606</SUB>> ]
-"1598" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(survivor);,return soa.AddLocalReference&lt;jobject&gt;(survivor);)<SUB>607</SUB>> ]
-"1575" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; survivor)<SUB>605</SUB>> ]
-"1582" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>605</SUB>> ]
-"1592" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Env()-&gt;PopFrame)<SUB>606</SUB>> ]
-"1599" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(survivor))<SUB>607</SUB>> ]
-"1576" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>605</SUB>> ]
-"1583" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>605</SUB>> ]
-"1593" [label = <(Env,soa.Env())<SUB>606</SUB>> ]
-"1597" [label = <(FIELD_IDENTIFIER,PopFrame,PopFrame)<SUB>606</SUB>> ]
-"1600" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>607</SUB>> ]
-"1578" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>605</SUB>> ]
-"1584" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>605</SUB>> ]
-"1587" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>605</SUB>> ]
-"1594" [label = <(&lt;operator&gt;.fieldAccess,soa.Env)<SUB>606</SUB>> ]
-"1601" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>607</SUB>> ]
-"1580" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>605</SUB>> ]
-"1586" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>605</SUB>> ]
-"1589" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>605</SUB>> ]
-"1596" [label = <(FIELD_IDENTIFIER,Env,Env)<SUB>606</SUB>> ]
-"1603" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>607</SUB>> ]
-"1567" [label = <(METHOD,PopLocalFrame)<SUB>603</SUB>> ]
-"1606" [label = <(METHOD_RETURN,jobject)<SUB>603</SUB>> ]
+"1572" [label = <(soa,soa(env))<SUB>603</SUB>> ]
+"1574" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; survivor = soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>604</SUB>> ]
+"1591" [label = <(PopFrame,soa.Env()-&gt;PopFrame())<SUB>605</SUB>> ]
+"1598" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(survivor);,return soa.AddLocalReference&lt;jobject&gt;(survivor);)<SUB>606</SUB>> ]
+"1575" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; survivor)<SUB>604</SUB>> ]
+"1582" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>604</SUB>> ]
+"1592" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Env()-&gt;PopFrame)<SUB>605</SUB>> ]
+"1599" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(survivor))<SUB>606</SUB>> ]
+"1576" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>604</SUB>> ]
+"1583" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>604</SUB>> ]
+"1593" [label = <(Env,soa.Env())<SUB>605</SUB>> ]
+"1597" [label = <(FIELD_IDENTIFIER,PopFrame,PopFrame)<SUB>605</SUB>> ]
+"1600" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>606</SUB>> ]
+"1578" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>604</SUB>> ]
+"1584" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>604</SUB>> ]
+"1587" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>604</SUB>> ]
+"1594" [label = <(&lt;operator&gt;.fieldAccess,soa.Env)<SUB>605</SUB>> ]
+"1601" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>606</SUB>> ]
+"1580" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>604</SUB>> ]
+"1586" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>604</SUB>> ]
+"1589" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>604</SUB>> ]
+"1596" [label = <(FIELD_IDENTIFIER,Env,Env)<SUB>605</SUB>> ]
+"1603" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>606</SUB>> ]
+"1567" [label = <(METHOD,PopLocalFrame)<SUB>602</SUB>> ]
+"1606" [label = <(METHOD_RETURN,jobject)<SUB>602</SUB>> ]
   "1572" -> "1580" 
   "1574" -> "1596" 
   "1591" -> "1603" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/370-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/370-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/370-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/370-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "va_start" {  
-"15352" [label = <(METHOD,va_start)> ]
-"15356" [label = <(METHOD_RETURN,ANY)> ]
-  "15352" -> "15356" 
+"15349" [label = <(METHOD,va_start)> ]
+"15353" [label = <(METHOD_RETURN,ANY)> ]
+  "15349" -> "15353" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/371-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/371-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/371-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/371-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "NewObjectV" {  
-"15357" [label = <(METHOD,NewObjectV)> ]
-"15363" [label = <(METHOD_RETURN,ANY)> ]
-  "15357" -> "15363" 
+"15354" [label = <(METHOD,NewObjectV)> ]
+"15360" [label = <(METHOD_RETURN,ANY)> ]
+  "15354" -> "15360" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/372-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/372-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/372-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/372-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "va_end" {  
-"15364" [label = <(METHOD,va_end)> ]
-"15367" [label = <(METHOD_RETURN,ANY)> ]
-  "15364" -> "15367" 
+"15361" [label = <(METHOD,va_end)> ]
+"15364" [label = <(METHOD_RETURN,ANY)> ]
+  "15361" -> "15364" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/373-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/373-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/373-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/373-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "WellKnownClasses::StringInitToStringFactory" {  
-"15368" [label = <(METHOD,WellKnownClasses::StringInitToStringFactory)> ]
-"15372" [label = <(METHOD_RETURN,ANY)> ]
-  "15368" -> "15372" 
+"15365" [label = <(METHOD,WellKnownClasses::StringInitToStringFactory)> ]
+"15369" [label = <(METHOD_RETURN,ANY)> ]
+  "15365" -> "15369" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/374-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/374-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/374-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/374-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CallStaticObjectMethodV" {  
-"15373" [label = <(METHOD,CallStaticObjectMethodV)> ]
-"15379" [label = <(METHOD_RETURN,ANY)> ]
-  "15373" -> "15379" 
+"15370" [label = <(METHOD,CallStaticObjectMethodV)> ]
+"15376" [label = <(METHOD_RETURN,ANY)> ]
+  "15370" -> "15376" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/375-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/375-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/375-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/375-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CallNonvirtualVoidMethodV" {  
-"15380" [label = <(METHOD,CallNonvirtualVoidMethodV)> ]
-"15387" [label = <(METHOD_RETURN,ANY)> ]
-  "15380" -> "15387" 
+"15377" [label = <(METHOD,CallNonvirtualVoidMethodV)> ]
+"15384" [label = <(METHOD_RETURN,ANY)> ]
+  "15377" -> "15384" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/376-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/376-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/376-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/376-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CallStaticObjectMethodA" {  
-"15388" [label = <(METHOD,CallStaticObjectMethodA)> ]
-"15394" [label = <(METHOD_RETURN,ANY)> ]
-  "15388" -> "15394" 
+"15385" [label = <(METHOD,CallStaticObjectMethodA)> ]
+"15391" [label = <(METHOD_RETURN,ANY)> ]
+  "15385" -> "15391" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/377-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/377-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/377-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/377-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CallNonvirtualVoidMethodA" {  
-"15395" [label = <(METHOD,CallNonvirtualVoidMethodA)> ]
-"15402" [label = <(METHOD_RETURN,ANY)> ]
-  "15395" -> "15402" 
+"15392" [label = <(METHOD,CallNonvirtualVoidMethodA)> ]
+"15399" [label = <(METHOD_RETURN,ANY)> ]
+  "15392" -> "15399" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/378-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/378-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/378-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/378-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(sig)" {  
-"15403" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(sig))> ]
-"15408" [label = <(METHOD_RETURN,ANY)> ]
-  "15403" -> "15408" 
+"15400" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(sig))> ]
+"15405" [label = <(METHOD_RETURN,ANY)> ]
+  "15400" -> "15405" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/379-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/379-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/379-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/379-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(obj)" {  
-"15409" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(obj))> ]
-"15414" [label = <(METHOD_RETURN,ANY)> ]
-  "15409" -> "15414" 
+"15406" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(obj))> ]
+"15411" [label = <(METHOD_RETURN,ANY)> ]
+  "15406" -> "15411" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/38-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/38-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/38-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/38-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,9 +1,9 @@
 digraph "EnsureLocalCapacity" {  
-"1613" [label = <(soa,soa(env))<SUB>612</SUB>> ]
-"1615" [label = <(RETURN,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);)<SUB>613</SUB>> ]
-"1616" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;))<SUB>613</SUB>> ]
-"1608" [label = <(METHOD,EnsureLocalCapacity)<SUB>610</SUB>> ]
-"1620" [label = <(METHOD_RETURN,jint)<SUB>610</SUB>> ]
+"1613" [label = <(soa,soa(env))<SUB>611</SUB>> ]
+"1615" [label = <(RETURN,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);)<SUB>612</SUB>> ]
+"1616" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;))<SUB>612</SUB>> ]
+"1608" [label = <(METHOD,EnsureLocalCapacity)<SUB>609</SUB>> ]
+"1620" [label = <(METHOD_RETURN,jint)<SUB>609</SUB>> ]
   "1613" -> "1616" 
   "1615" -> "1620" 
   "1616" -> "1615" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/380-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/380-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/380-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/380-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "result" {  
-"15415" [label = <(METHOD,result)> ]
-"15418" [label = <(METHOD_RETURN,ANY)> ]
-  "15415" -> "15418" 
+"15412" [label = <(METHOD,result)> ]
+"15415" [label = <(METHOD_RETURN,ANY)> ]
+  "15412" -> "15415" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/381-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/381-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/381-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/381-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeVirtualOrInterfaceWithVarArgs" {  
-"15419" [label = <(METHOD,InvokeVirtualOrInterfaceWithVarArgs)> ]
-"15425" [label = <(METHOD_RETURN,ANY)> ]
-  "15419" -> "15425" 
+"15416" [label = <(METHOD,InvokeVirtualOrInterfaceWithVarArgs)> ]
+"15422" [label = <(METHOD_RETURN,ANY)> ]
+  "15416" -> "15422" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/382-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/382-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/382-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/382-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetL" {  
-"15426" [label = <(METHOD,GetL)> ]
-"15429" [label = <(METHOD_RETURN,ANY)> ]
-  "15426" -> "15429" 
+"15423" [label = <(METHOD,GetL)> ]
+"15426" [label = <(METHOD_RETURN,ANY)> ]
+  "15423" -> "15426" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/383-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/383-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/383-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/383-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeVirtualOrInterfaceWithJValues" {  
-"15430" [label = <(METHOD,InvokeVirtualOrInterfaceWithJValues)> ]
-"15436" [label = <(METHOD_RETURN,ANY)> ]
-  "15430" -> "15436" 
+"15427" [label = <(METHOD,InvokeVirtualOrInterfaceWithJValues)> ]
+"15433" [label = <(METHOD_RETURN,ANY)> ]
+  "15427" -> "15433" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/384-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/384-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/384-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/384-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO" {  
-"15437" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO)<SUB>392</SUB>> ]
-"15440" [label = <(METHOD_RETURN,ANY)> ]
-  "15437" -> "15440" 
+"15434" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO)<SUB>391</SUB>> ]
+"15437" [label = <(METHOD_RETURN,ANY)> ]
+  "15434" -> "15437" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/385-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/385-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/385-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/385-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj)" {  
-"15441" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))> ]
-"15446" [label = <(METHOD_RETURN,ANY)> ]
-  "15441" -> "15446" 
+"15438" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))> ]
+"15443" [label = <(METHOD_RETURN,ANY)> ]
+  "15438" -> "15443" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/386-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/386-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/386-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/386-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid)" {  
-"15447" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))> ]
-"15452" [label = <(METHOD_RETURN,ANY)> ]
-  "15447" -> "15452" 
+"15444" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))> ]
+"15449" [label = <(METHOD_RETURN,ANY)> ]
+  "15444" -> "15449" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/387-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/387-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/387-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/387-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetZ" {  
-"15453" [label = <(METHOD,GetZ)> ]
-"15456" [label = <(METHOD_RETURN,ANY)> ]
-  "15453" -> "15456" 
+"15450" [label = <(METHOD,GetZ)> ]
+"15453" [label = <(METHOD_RETURN,ANY)> ]
+  "15450" -> "15453" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/388-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/388-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/388-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/388-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetB" {  
-"15457" [label = <(METHOD,GetB)> ]
-"15460" [label = <(METHOD_RETURN,ANY)> ]
-  "15457" -> "15460" 
+"15454" [label = <(METHOD,GetB)> ]
+"15457" [label = <(METHOD_RETURN,ANY)> ]
+  "15454" -> "15457" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/389-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/389-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/389-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/389-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetC" {  
-"15461" [label = <(METHOD,GetC)> ]
-"15464" [label = <(METHOD_RETURN,ANY)> ]
-  "15461" -> "15464" 
+"15458" [label = <(METHOD,GetC)> ]
+"15461" [label = <(METHOD_RETURN,ANY)> ]
+  "15458" -> "15461" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/39-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/39-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/39-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/39-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,28 +1,28 @@
 digraph "NewGlobalRef" {  
-"1627" [label = <(soa,soa(env))<SUB>617</SUB>> ]
-"1629" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>618</SUB>> ]
-"1646" [label = <(RETURN,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);)<SUB>619</SUB>> ]
-"1630" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>618</SUB>> ]
-"1637" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>618</SUB>> ]
-"1647" [label = <(AddGlobalRef,soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj))<SUB>619</SUB>> ]
-"1631" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>618</SUB>> ]
-"1638" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>618</SUB>> ]
-"1648" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddGlobalRef)<SUB>619</SUB>> ]
-"1654" [label = <(Self,soa.Self())<SUB>619</SUB>> ]
-"1633" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>618</SUB>> ]
-"1639" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>618</SUB>> ]
-"1642" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>618</SUB>> ]
-"1649" [label = <(Vm,soa.Vm())<SUB>619</SUB>> ]
-"1653" [label = <(FIELD_IDENTIFIER,AddGlobalRef,AddGlobalRef)<SUB>619</SUB>> ]
-"1655" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>619</SUB>> ]
-"1635" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>618</SUB>> ]
-"1641" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>618</SUB>> ]
-"1644" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>618</SUB>> ]
-"1650" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>619</SUB>> ]
-"1657" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>619</SUB>> ]
-"1652" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>619</SUB>> ]
-"1622" [label = <(METHOD,NewGlobalRef)<SUB>616</SUB>> ]
-"1659" [label = <(METHOD_RETURN,jobject)<SUB>616</SUB>> ]
+"1627" [label = <(soa,soa(env))<SUB>616</SUB>> ]
+"1629" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>617</SUB>> ]
+"1646" [label = <(RETURN,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);)<SUB>618</SUB>> ]
+"1630" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>617</SUB>> ]
+"1637" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>617</SUB>> ]
+"1647" [label = <(AddGlobalRef,soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj))<SUB>618</SUB>> ]
+"1631" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>617</SUB>> ]
+"1638" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>617</SUB>> ]
+"1648" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddGlobalRef)<SUB>618</SUB>> ]
+"1654" [label = <(Self,soa.Self())<SUB>618</SUB>> ]
+"1633" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>617</SUB>> ]
+"1639" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>617</SUB>> ]
+"1642" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>617</SUB>> ]
+"1649" [label = <(Vm,soa.Vm())<SUB>618</SUB>> ]
+"1653" [label = <(FIELD_IDENTIFIER,AddGlobalRef,AddGlobalRef)<SUB>618</SUB>> ]
+"1655" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>618</SUB>> ]
+"1635" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>617</SUB>> ]
+"1641" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>617</SUB>> ]
+"1644" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>617</SUB>> ]
+"1650" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>618</SUB>> ]
+"1657" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>618</SUB>> ]
+"1652" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>618</SUB>> ]
+"1622" [label = <(METHOD,NewGlobalRef)<SUB>615</SUB>> ]
+"1659" [label = <(METHOD_RETURN,jobject)<SUB>615</SUB>> ]
   "1627" -> "1635" 
   "1629" -> "1652" 
   "1646" -> "1659" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/390-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/390-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/390-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/390-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetD" {  
-"15465" [label = <(METHOD,GetD)> ]
-"15468" [label = <(METHOD_RETURN,ANY)> ]
-  "15465" -> "15468" 
+"15462" [label = <(METHOD,GetD)> ]
+"15465" [label = <(METHOD_RETURN,ANY)> ]
+  "15462" -> "15465" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/391-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/391-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/391-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/391-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetF" {  
-"15469" [label = <(METHOD,GetF)> ]
-"15472" [label = <(METHOD_RETURN,ANY)> ]
-  "15469" -> "15472" 
+"15466" [label = <(METHOD,GetF)> ]
+"15469" [label = <(METHOD_RETURN,ANY)> ]
+  "15466" -> "15469" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/392-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/392-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/392-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/392-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetI" {  
-"15473" [label = <(METHOD,GetI)> ]
-"15476" [label = <(METHOD_RETURN,ANY)> ]
-  "15473" -> "15476" 
+"15470" [label = <(METHOD,GetI)> ]
+"15473" [label = <(METHOD_RETURN,ANY)> ]
+  "15470" -> "15473" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/393-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/393-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/393-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/393-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetJ" {  
-"15477" [label = <(METHOD,GetJ)> ]
-"15480" [label = <(METHOD_RETURN,ANY)> ]
-  "15477" -> "15480" 
+"15474" [label = <(METHOD,GetJ)> ]
+"15477" [label = <(METHOD_RETURN,ANY)> ]
+  "15474" -> "15477" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/394-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/394-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/394-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/394-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetS" {  
-"15481" [label = <(METHOD,GetS)> ]
-"15484" [label = <(METHOD_RETURN,ANY)> ]
-  "15481" -> "15484" 
+"15478" [label = <(METHOD,GetS)> ]
+"15481" [label = <(METHOD_RETURN,ANY)> ]
+  "15478" -> "15481" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/395-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/395-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/395-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/395-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID" {  
-"15485" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID)<SUB>389</SUB>> ]
-"15488" [label = <(METHOD_RETURN,ANY)> ]
-  "15485" -> "15488" 
+"15482" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID)<SUB>388</SUB>> ]
+"15485" [label = <(METHOD_RETURN,ANY)> ]
+  "15482" -> "15485" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/396-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/396-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/396-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/396-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj)" {  
-"15489" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))> ]
-"15494" [label = <(METHOD_RETURN,ANY)> ]
-  "15489" -> "15494" 
+"15486" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))> ]
+"15491" [label = <(METHOD_RETURN,ANY)> ]
+  "15486" -> "15491" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/397-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/397-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/397-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/397-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid)" {  
-"15495" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))> ]
-"15500" [label = <(METHOD_RETURN,ANY)> ]
-  "15495" -> "15500" 
+"15492" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))> ]
+"15497" [label = <(METHOD_RETURN,ANY)> ]
+  "15492" -> "15497" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/398-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/398-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/398-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/398-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeWithVarArgs" {  
-"15501" [label = <(METHOD,InvokeWithVarArgs)> ]
-"15507" [label = <(METHOD_RETURN,ANY)> ]
-  "15501" -> "15507" 
+"15498" [label = <(METHOD,InvokeWithVarArgs)> ]
+"15504" [label = <(METHOD_RETURN,ANY)> ]
+  "15498" -> "15504" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/399-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/399-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/399-cfg.dot	2023-06-07 19:34:22.217390819 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/399-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeWithJValues" {  
-"15508" [label = <(METHOD,InvokeWithJValues)> ]
-"15514" [label = <(METHOD_RETURN,ANY)> ]
-  "15508" -> "15514" 
+"15505" [label = <(METHOD,InvokeWithJValues)> ]
+"15511" [label = <(METHOD_RETURN,ANY)> ]
+  "15505" -> "15511" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/4-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/4-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/4-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/4-cfg.dot	2023-06-07 19:34:28.537390229 +0330
@@ -1,72 +1,72 @@
 digraph "VisitModifiedUtf8Chars" {  
-"34" [label = <(DCHECK_LE,DCHECK_LE(byte_count, strlen(utf8)))<SUB>80</SUB>> ]
-"39" [label = <(&lt;operator&gt;.assignment,len = 0)<SUB>81</SUB>> ]
-"43" [label = <(&lt;operator&gt;.assignment,* end = utf8 + byte_count)<SUB>82</SUB>> ]
-"199" [label = <(RETURN,return len;,return len;)<SUB>140</SUB>> ]
-"36" [label = <(strlen,strlen(utf8))<SUB>80</SUB>> ]
-"45" [label = <(&lt;operator&gt;.addition,utf8 + byte_count)<SUB>82</SUB>> ]
-"49" [label = <(&lt;operator&gt;.notEquals,utf8 != end)<SUB>83</SUB>> ]
-"54" [label = <(&lt;operator&gt;.assignment,ic = *utf8)<SUB>84</SUB>> ]
-"77" [label = <(&lt;operator&gt;.assignment,is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>92</SUB>> ]
-"190" [label = <(good,good(utf8, 4u))<SUB>136</SUB>> ]
-"193" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 4u)<SUB>137</SUB>> ]
-"196" [label = <(&lt;operator&gt;.assignmentPlus,len += 2u)<SUB>138</SUB>> ]
-"56" [label = <(&lt;operator&gt;.indirection,*utf8)<SUB>84</SUB>> ]
-"59" [label = <(LIKELY,LIKELY((ic &amp; 0x80) == 0))<SUB>85</SUB>> ]
-"79" [label = <(METHOD_REF,ANY anonymous_lambda_3 (),is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>92</SUB>> ]
-"81" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x20) == 0)<SUB>98</SUB>> ]
-"128" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x10) == 0)<SUB>114</SUB>> ]
-"175" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 4u)<SUB>133</SUB>> ]
-"60" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x80) == 0)<SUB>85</SUB>> ]
-"66" [label = <(good,good(utf8, 1u))<SUB>87</SUB>> ]
-"69" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 1u)<SUB>88</SUB>> ]
-"72" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>89</SUB>> ]
-"82" [label = <(&lt;operator&gt;.and,ic &amp; 0x20)<SUB>98</SUB>> ]
-"120" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 2u)<SUB>110</SUB>> ]
-"123" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>111</SUB>> ]
-"129" [label = <(&lt;operator&gt;.and,ic &amp; 0x10)<SUB>114</SUB>> ]
-"167" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 3u)<SUB>126</SUB>> ]
-"170" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>127</SUB>> ]
-"176" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>133</SUB>> ]
-"183" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>134</SUB>> ]
-"61" [label = <(&lt;operator&gt;.and,ic &amp; 0x80)<SUB>85</SUB>> ]
-"88" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 2u)<SUB>100</SUB>> ]
-"104" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>103</SUB>> ]
-"135" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 3u)<SUB>116</SUB>> ]
-"151" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>119</SUB>> ]
-"177" [label = <(UNKNOWN,size_t,size_t)<SUB>133</SUB>> ]
-"178" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>133</SUB>> ]
-"184" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>134</SUB>> ]
-"89" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>100</SUB>> ]
-"96" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>101</SUB>> ]
-"105" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>103</SUB>> ]
-"108" [label = <(is_ascii,is_ascii())<SUB>103</SUB>> ]
-"136" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>116</SUB>> ]
-"143" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>117</SUB>> ]
-"152" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>119</SUB>> ]
-"155" [label = <(is_ascii,is_ascii())<SUB>119</SUB>> ]
-"185" [label = <(bad,bad())<SUB>134</SUB>> ]
-"187" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>134</SUB>> ]
-"90" [label = <(UNKNOWN,size_t,size_t)<SUB>100</SUB>> ]
-"91" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>100</SUB>> ]
-"97" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>101</SUB>> ]
-"107" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>103</SUB>> ]
-"111" [label = <(bad,bad())<SUB>104</SUB>> ]
-"117" [label = <(good,good(utf8, 2u))<SUB>108</SUB>> ]
-"137" [label = <(UNKNOWN,size_t,size_t)<SUB>116</SUB>> ]
-"138" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>116</SUB>> ]
-"144" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>117</SUB>> ]
-"154" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>119</SUB>> ]
-"158" [label = <(bad,bad())<SUB>120</SUB>> ]
-"164" [label = <(good,good(utf8, 3u))<SUB>124</SUB>> ]
-"98" [label = <(bad,bad())<SUB>101</SUB>> ]
-"100" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>101</SUB>> ]
-"113" [label = <(RETURN,return 0u;,return 0u;)<SUB>105</SUB>> ]
-"145" [label = <(bad,bad())<SUB>117</SUB>> ]
-"147" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>117</SUB>> ]
-"160" [label = <(RETURN,return 0u;,return 0u;)<SUB>121</SUB>> ]
-"28" [label = <(METHOD,VisitModifiedUtf8Chars)<SUB>79</SUB>> ]
-"201" [label = <(METHOD_RETURN,size_t)<SUB>79</SUB>> ]
+"34" [label = <(DCHECK_LE,DCHECK_LE(byte_count, strlen(utf8)))<SUB>79</SUB>> ]
+"39" [label = <(&lt;operator&gt;.assignment,len = 0)<SUB>80</SUB>> ]
+"43" [label = <(&lt;operator&gt;.assignment,* end = utf8 + byte_count)<SUB>81</SUB>> ]
+"199" [label = <(RETURN,return len;,return len;)<SUB>139</SUB>> ]
+"36" [label = <(strlen,strlen(utf8))<SUB>79</SUB>> ]
+"45" [label = <(&lt;operator&gt;.addition,utf8 + byte_count)<SUB>81</SUB>> ]
+"49" [label = <(&lt;operator&gt;.notEquals,utf8 != end)<SUB>82</SUB>> ]
+"54" [label = <(&lt;operator&gt;.assignment,ic = *utf8)<SUB>83</SUB>> ]
+"77" [label = <(&lt;operator&gt;.assignment,is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>91</SUB>> ]
+"190" [label = <(good,good(utf8, 4u))<SUB>135</SUB>> ]
+"193" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 4u)<SUB>136</SUB>> ]
+"196" [label = <(&lt;operator&gt;.assignmentPlus,len += 2u)<SUB>137</SUB>> ]
+"56" [label = <(&lt;operator&gt;.indirection,*utf8)<SUB>83</SUB>> ]
+"59" [label = <(LIKELY,LIKELY((ic &amp; 0x80) == 0))<SUB>84</SUB>> ]
+"79" [label = <(METHOD_REF,ANY anonymous_lambda_3 (),is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>91</SUB>> ]
+"81" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x20) == 0)<SUB>97</SUB>> ]
+"128" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x10) == 0)<SUB>113</SUB>> ]
+"175" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 4u)<SUB>132</SUB>> ]
+"60" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x80) == 0)<SUB>84</SUB>> ]
+"66" [label = <(good,good(utf8, 1u))<SUB>86</SUB>> ]
+"69" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 1u)<SUB>87</SUB>> ]
+"72" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>88</SUB>> ]
+"82" [label = <(&lt;operator&gt;.and,ic &amp; 0x20)<SUB>97</SUB>> ]
+"120" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 2u)<SUB>109</SUB>> ]
+"123" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>110</SUB>> ]
+"129" [label = <(&lt;operator&gt;.and,ic &amp; 0x10)<SUB>113</SUB>> ]
+"167" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 3u)<SUB>125</SUB>> ]
+"170" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>126</SUB>> ]
+"176" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>132</SUB>> ]
+"183" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>133</SUB>> ]
+"61" [label = <(&lt;operator&gt;.and,ic &amp; 0x80)<SUB>84</SUB>> ]
+"88" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 2u)<SUB>99</SUB>> ]
+"104" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>102</SUB>> ]
+"135" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 3u)<SUB>115</SUB>> ]
+"151" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>118</SUB>> ]
+"177" [label = <(UNKNOWN,size_t,size_t)<SUB>132</SUB>> ]
+"178" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>132</SUB>> ]
+"184" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>133</SUB>> ]
+"89" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>99</SUB>> ]
+"96" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>100</SUB>> ]
+"105" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>102</SUB>> ]
+"108" [label = <(is_ascii,is_ascii())<SUB>102</SUB>> ]
+"136" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>115</SUB>> ]
+"143" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>116</SUB>> ]
+"152" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>118</SUB>> ]
+"155" [label = <(is_ascii,is_ascii())<SUB>118</SUB>> ]
+"185" [label = <(bad,bad())<SUB>133</SUB>> ]
+"187" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>133</SUB>> ]
+"90" [label = <(UNKNOWN,size_t,size_t)<SUB>99</SUB>> ]
+"91" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>99</SUB>> ]
+"97" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>100</SUB>> ]
+"107" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>102</SUB>> ]
+"111" [label = <(bad,bad())<SUB>103</SUB>> ]
+"117" [label = <(good,good(utf8, 2u))<SUB>107</SUB>> ]
+"137" [label = <(UNKNOWN,size_t,size_t)<SUB>115</SUB>> ]
+"138" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>115</SUB>> ]
+"144" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>116</SUB>> ]
+"154" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>118</SUB>> ]
+"158" [label = <(bad,bad())<SUB>119</SUB>> ]
+"164" [label = <(good,good(utf8, 3u))<SUB>123</SUB>> ]
+"98" [label = <(bad,bad())<SUB>100</SUB>> ]
+"100" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>100</SUB>> ]
+"113" [label = <(RETURN,return 0u;,return 0u;)<SUB>104</SUB>> ]
+"145" [label = <(bad,bad())<SUB>116</SUB>> ]
+"147" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>116</SUB>> ]
+"160" [label = <(RETURN,return 0u;,return 0u;)<SUB>120</SUB>> ]
+"28" [label = <(METHOD,VisitModifiedUtf8Chars)<SUB>78</SUB>> ]
+"201" [label = <(METHOD_RETURN,size_t)<SUB>78</SUB>> ]
   "34" -> "39" 
   "39" -> "45" 
   "43" -> "49" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/40-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/40-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/40-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/40-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,17 +1,17 @@
 digraph "DeleteGlobalRef" {  
-"1666" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>623</SUB>> ]
-"1673" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>624</SUB>> ]
-"1679" [label = <(DeleteGlobalRef,vm-&gt;DeleteGlobalRef(self, obj))<SUB>625</SUB>> ]
-"1668" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>623</SUB>> ]
-"1675" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>624</SUB>> ]
-"1680" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteGlobalRef)<SUB>625</SUB>> ]
-"1669" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>623</SUB>> ]
-"1671" [label = <(FIELD_IDENTIFIER,vm,vm)<SUB>623</SUB>> ]
-"1676" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>624</SUB>> ]
-"1678" [label = <(FIELD_IDENTIFIER,self,self)<SUB>624</SUB>> ]
-"1682" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>625</SUB>> ]
-"1661" [label = <(METHOD,DeleteGlobalRef)<SUB>622</SUB>> ]
-"1685" [label = <(METHOD_RETURN,void)<SUB>622</SUB>> ]
+"1666" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>622</SUB>> ]
+"1673" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>623</SUB>> ]
+"1679" [label = <(DeleteGlobalRef,vm-&gt;DeleteGlobalRef(self, obj))<SUB>624</SUB>> ]
+"1668" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>622</SUB>> ]
+"1675" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>623</SUB>> ]
+"1680" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteGlobalRef)<SUB>624</SUB>> ]
+"1669" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>622</SUB>> ]
+"1671" [label = <(FIELD_IDENTIFIER,vm,vm)<SUB>622</SUB>> ]
+"1676" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>623</SUB>> ]
+"1678" [label = <(FIELD_IDENTIFIER,self,self)<SUB>623</SUB>> ]
+"1682" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>624</SUB>> ]
+"1661" [label = <(METHOD,DeleteGlobalRef)<SUB>621</SUB>> ]
+"1685" [label = <(METHOD_RETURN,void)<SUB>621</SUB>> ]
   "1666" -> "1676" 
   "1673" -> "1682" 
   "1679" -> "1685" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/400-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/400-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/400-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/400-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetObject" {  
-"15515" [label = <(METHOD,GetObject)> ]
-"15519" [label = <(METHOD_RETURN,ANY)> ]
-  "15515" -> "15519" 
+"15512" [label = <(METHOD,GetObject)> ]
+"15516" [label = <(METHOD_RETURN,ANY)> ]
+  "15512" -> "15516" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/401-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/401-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/401-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/401-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GetDeclaringClass" {  
-"15520" [label = <(METHOD,GetDeclaringClass)> ]
-"15523" [label = <(METHOD_RETURN,ANY)> ]
-  "15520" -> "15523" 
+"15517" [label = <(METHOD,GetDeclaringClass)> ]
+"15520" [label = <(METHOD_RETURN,ANY)> ]
+  "15517" -> "15520" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/402-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/402-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/402-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/402-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object)" {  
-"15524" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))> ]
-"15529" [label = <(METHOD_RETURN,ANY)> ]
-  "15524" -> "15529" 
+"15521" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))> ]
+"15526" [label = <(METHOD_RETURN,ANY)> ]
+  "15521" -> "15526" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/403-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/403-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/403-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/403-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid)" {  
-"15530" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))> ]
-"15535" [label = <(METHOD_RETURN,ANY)> ]
-  "15530" -> "15535" 
+"15527" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))> ]
+"15532" [label = <(METHOD_RETURN,ANY)> ]
+  "15527" -> "15532" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/404-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/404-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/404-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/404-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD" {  
-"15536" [label = <(METHOD,GET_PRIMITIVE_FIELD)<SUB>1351</SUB>> ]
-"15539" [label = <(METHOD_RETURN,ANY)> ]
-  "15536" -> "15539" 
+"15533" [label = <(METHOD,GET_PRIMITIVE_FIELD)<SUB>1350</SUB>> ]
+"15536" [label = <(METHOD_RETURN,ANY)> ]
+  "15533" -> "15536" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/405-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/405-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/405-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/405-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Boolean, obj)" {  
-"15540" [label = <(METHOD,GET_PRIMITIVE_FIELD(Boolean, obj))> ]
-"15544" [label = <(METHOD_RETURN,ANY)> ]
-  "15540" -> "15544" 
+"15537" [label = <(METHOD,GET_PRIMITIVE_FIELD(Boolean, obj))> ]
+"15541" [label = <(METHOD_RETURN,ANY)> ]
+  "15537" -> "15541" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/406-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/406-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/406-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/406-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Byte, obj)" {  
-"15545" [label = <(METHOD,GET_PRIMITIVE_FIELD(Byte, obj))> ]
-"15549" [label = <(METHOD_RETURN,ANY)> ]
-  "15545" -> "15549" 
+"15542" [label = <(METHOD,GET_PRIMITIVE_FIELD(Byte, obj))> ]
+"15546" [label = <(METHOD_RETURN,ANY)> ]
+  "15542" -> "15546" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/407-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/407-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/407-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/407-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Char, obj)" {  
-"15550" [label = <(METHOD,GET_PRIMITIVE_FIELD(Char, obj))> ]
-"15554" [label = <(METHOD_RETURN,ANY)> ]
-  "15550" -> "15554" 
+"15547" [label = <(METHOD,GET_PRIMITIVE_FIELD(Char, obj))> ]
+"15551" [label = <(METHOD_RETURN,ANY)> ]
+  "15547" -> "15551" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/408-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/408-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/408-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/408-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Short, obj)" {  
-"15555" [label = <(METHOD,GET_PRIMITIVE_FIELD(Short, obj))> ]
-"15559" [label = <(METHOD_RETURN,ANY)> ]
-  "15555" -> "15559" 
+"15552" [label = <(METHOD,GET_PRIMITIVE_FIELD(Short, obj))> ]
+"15556" [label = <(METHOD_RETURN,ANY)> ]
+  "15552" -> "15556" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/409-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/409-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/409-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/409-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Int, obj)" {  
-"15560" [label = <(METHOD,GET_PRIMITIVE_FIELD(Int, obj))> ]
-"15564" [label = <(METHOD_RETURN,ANY)> ]
-  "15560" -> "15564" 
+"15557" [label = <(METHOD,GET_PRIMITIVE_FIELD(Int, obj))> ]
+"15561" [label = <(METHOD_RETURN,ANY)> ]
+  "15557" -> "15561" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/41-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/41-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/41-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/41-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,28 +1,28 @@
 digraph "NewWeakGlobalRef" {  
-"1692" [label = <(soa,soa(env))<SUB>629</SUB>> ]
-"1694" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>630</SUB>> ]
-"1711" [label = <(RETURN,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);)<SUB>631</SUB>> ]
-"1695" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>630</SUB>> ]
-"1702" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>630</SUB>> ]
-"1712" [label = <(AddWeakGlobalRef,soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj))<SUB>631</SUB>> ]
-"1696" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>630</SUB>> ]
-"1703" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>630</SUB>> ]
-"1713" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddWeakGlobalRef)<SUB>631</SUB>> ]
-"1719" [label = <(Self,soa.Self())<SUB>631</SUB>> ]
-"1698" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>630</SUB>> ]
-"1704" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>630</SUB>> ]
-"1707" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>630</SUB>> ]
-"1714" [label = <(Vm,soa.Vm())<SUB>631</SUB>> ]
-"1718" [label = <(FIELD_IDENTIFIER,AddWeakGlobalRef,AddWeakGlobalRef)<SUB>631</SUB>> ]
-"1720" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>631</SUB>> ]
-"1700" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>630</SUB>> ]
-"1706" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>630</SUB>> ]
-"1709" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>630</SUB>> ]
-"1715" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>631</SUB>> ]
-"1722" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>631</SUB>> ]
-"1717" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>631</SUB>> ]
-"1687" [label = <(METHOD,NewWeakGlobalRef)<SUB>628</SUB>> ]
-"1724" [label = <(METHOD_RETURN,jweak)<SUB>628</SUB>> ]
+"1692" [label = <(soa,soa(env))<SUB>628</SUB>> ]
+"1694" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>629</SUB>> ]
+"1711" [label = <(RETURN,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);)<SUB>630</SUB>> ]
+"1695" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>629</SUB>> ]
+"1702" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>629</SUB>> ]
+"1712" [label = <(AddWeakGlobalRef,soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj))<SUB>630</SUB>> ]
+"1696" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>629</SUB>> ]
+"1703" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>629</SUB>> ]
+"1713" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddWeakGlobalRef)<SUB>630</SUB>> ]
+"1719" [label = <(Self,soa.Self())<SUB>630</SUB>> ]
+"1698" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>629</SUB>> ]
+"1704" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>629</SUB>> ]
+"1707" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>629</SUB>> ]
+"1714" [label = <(Vm,soa.Vm())<SUB>630</SUB>> ]
+"1718" [label = <(FIELD_IDENTIFIER,AddWeakGlobalRef,AddWeakGlobalRef)<SUB>630</SUB>> ]
+"1720" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>630</SUB>> ]
+"1700" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>629</SUB>> ]
+"1706" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>629</SUB>> ]
+"1709" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>629</SUB>> ]
+"1715" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>630</SUB>> ]
+"1722" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>630</SUB>> ]
+"1717" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>630</SUB>> ]
+"1687" [label = <(METHOD,NewWeakGlobalRef)<SUB>627</SUB>> ]
+"1724" [label = <(METHOD_RETURN,jweak)<SUB>627</SUB>> ]
   "1692" -> "1700" 
   "1694" -> "1717" 
   "1711" -> "1724" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/410-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/410-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/410-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/410-cfg.dot	2023-06-07 19:34:28.727390211 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Long, obj)" {  
-"15565" [label = <(METHOD,GET_PRIMITIVE_FIELD(Long, obj))> ]
-"15569" [label = <(METHOD_RETURN,ANY)> ]
-  "15565" -> "15569" 
+"15562" [label = <(METHOD,GET_PRIMITIVE_FIELD(Long, obj))> ]
+"15566" [label = <(METHOD_RETURN,ANY)> ]
+  "15562" -> "15566" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/411-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/411-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/411-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/411-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Float, obj)" {  
-"15570" [label = <(METHOD,GET_PRIMITIVE_FIELD(Float, obj))> ]
-"15574" [label = <(METHOD_RETURN,ANY)> ]
-  "15570" -> "15574" 
+"15567" [label = <(METHOD,GET_PRIMITIVE_FIELD(Float, obj))> ]
+"15571" [label = <(METHOD_RETURN,ANY)> ]
+  "15567" -> "15571" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/412-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/412-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/412-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/412-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Double, obj)" {  
-"15575" [label = <(METHOD,GET_PRIMITIVE_FIELD(Double, obj))> ]
-"15579" [label = <(METHOD_RETURN,ANY)> ]
-  "15575" -> "15579" 
+"15572" [label = <(METHOD,GET_PRIMITIVE_FIELD(Double, obj))> ]
+"15576" [label = <(METHOD_RETURN,ANY)> ]
+  "15572" -> "15576" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/413-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/413-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/413-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/413-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD" {  
-"15580" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD)<SUB>1359</SUB>> ]
-"15582" [label = <(METHOD_RETURN,ANY)> ]
-  "15580" -> "15582" 
+"15577" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD)<SUB>1358</SUB>> ]
+"15579" [label = <(METHOD_RETURN,ANY)> ]
+  "15577" -> "15579" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/414-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/414-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/414-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/414-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Boolean)" {  
-"15583" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Boolean))> ]
-"15586" [label = <(METHOD_RETURN,ANY)> ]
-  "15583" -> "15586" 
+"15580" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Boolean))> ]
+"15583" [label = <(METHOD_RETURN,ANY)> ]
+  "15580" -> "15583" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/415-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/415-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/415-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/415-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Byte)" {  
-"15587" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Byte))> ]
-"15590" [label = <(METHOD_RETURN,ANY)> ]
-  "15587" -> "15590" 
+"15584" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Byte))> ]
+"15587" [label = <(METHOD_RETURN,ANY)> ]
+  "15584" -> "15587" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/416-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/416-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/416-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/416-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Char)" {  
-"15591" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Char))> ]
-"15594" [label = <(METHOD_RETURN,ANY)> ]
-  "15591" -> "15594" 
+"15588" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Char))> ]
+"15591" [label = <(METHOD_RETURN,ANY)> ]
+  "15588" -> "15591" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/417-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/417-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/417-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/417-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Short)" {  
-"15595" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Short))> ]
-"15598" [label = <(METHOD_RETURN,ANY)> ]
-  "15595" -> "15598" 
+"15592" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Short))> ]
+"15595" [label = <(METHOD_RETURN,ANY)> ]
+  "15592" -> "15595" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/418-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/418-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/418-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/418-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Int)" {  
-"15599" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Int))> ]
-"15602" [label = <(METHOD_RETURN,ANY)> ]
-  "15599" -> "15602" 
+"15596" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Int))> ]
+"15599" [label = <(METHOD_RETURN,ANY)> ]
+  "15596" -> "15599" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/419-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/419-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/419-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/419-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Long)" {  
-"15603" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Long))> ]
-"15606" [label = <(METHOD_RETURN,ANY)> ]
-  "15603" -> "15606" 
+"15600" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Long))> ]
+"15603" [label = <(METHOD_RETURN,ANY)> ]
+  "15600" -> "15603" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/42-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/42-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/42-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/42-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,17 +1,17 @@
 digraph "DeleteWeakGlobalRef" {  
-"1731" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>635</SUB>> ]
-"1738" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>636</SUB>> ]
-"1744" [label = <(DeleteWeakGlobalRef,vm-&gt;DeleteWeakGlobalRef(self, obj))<SUB>637</SUB>> ]
-"1733" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>635</SUB>> ]
-"1740" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>636</SUB>> ]
-"1745" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteWeakGlobalRef)<SUB>637</SUB>> ]
-"1734" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>635</SUB>> ]
-"1736" [label = <(FIELD_IDENTIFIER,vm,vm)<SUB>635</SUB>> ]
-"1741" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>636</SUB>> ]
-"1743" [label = <(FIELD_IDENTIFIER,self,self)<SUB>636</SUB>> ]
-"1747" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>637</SUB>> ]
-"1726" [label = <(METHOD,DeleteWeakGlobalRef)<SUB>634</SUB>> ]
-"1750" [label = <(METHOD_RETURN,void)<SUB>634</SUB>> ]
+"1731" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>634</SUB>> ]
+"1738" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>635</SUB>> ]
+"1744" [label = <(DeleteWeakGlobalRef,vm-&gt;DeleteWeakGlobalRef(self, obj))<SUB>636</SUB>> ]
+"1733" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;vm)<SUB>634</SUB>> ]
+"1740" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self)<SUB>635</SUB>> ]
+"1745" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteWeakGlobalRef)<SUB>636</SUB>> ]
+"1734" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>634</SUB>> ]
+"1736" [label = <(FIELD_IDENTIFIER,vm,vm)<SUB>634</SUB>> ]
+"1741" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>635</SUB>> ]
+"1743" [label = <(FIELD_IDENTIFIER,self,self)<SUB>635</SUB>> ]
+"1747" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>636</SUB>> ]
+"1726" [label = <(METHOD,DeleteWeakGlobalRef)<SUB>633</SUB>> ]
+"1750" [label = <(METHOD_RETURN,void)<SUB>633</SUB>> ]
   "1731" -> "1741" 
   "1738" -> "1747" 
   "1744" -> "1750" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/420-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/420-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/420-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/420-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Float)" {  
-"15607" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Float))> ]
-"15610" [label = <(METHOD_RETURN,ANY)> ]
-  "15607" -> "15610" 
+"15604" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Float))> ]
+"15607" [label = <(METHOD_RETURN,ANY)> ]
+  "15604" -> "15607" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/421-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/421-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/421-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/421-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Double)" {  
-"15611" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Double))> ]
-"15614" [label = <(METHOD_RETURN,ANY)> ]
-  "15611" -> "15614" 
+"15608" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Double))> ]
+"15611" [label = <(METHOD_RETURN,ANY)> ]
+  "15608" -> "15611" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/422-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/422-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/422-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/422-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD" {  
-"15615" [label = <(METHOD,SET_PRIMITIVE_FIELD)<SUB>1365</SUB>> ]
-"15618" [label = <(METHOD_RETURN,ANY)> ]
-  "15615" -> "15618" 
+"15612" [label = <(METHOD,SET_PRIMITIVE_FIELD)<SUB>1364</SUB>> ]
+"15615" [label = <(METHOD_RETURN,ANY)> ]
+  "15612" -> "15615" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/423-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/423-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/423-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/423-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Boolean, obj, v)" {  
-"15619" [label = <(METHOD,SET_PRIMITIVE_FIELD(Boolean, obj, v))> ]
-"15623" [label = <(METHOD_RETURN,ANY)> ]
-  "15619" -> "15623" 
+"15616" [label = <(METHOD,SET_PRIMITIVE_FIELD(Boolean, obj, v))> ]
+"15620" [label = <(METHOD_RETURN,ANY)> ]
+  "15616" -> "15620" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/424-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/424-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/424-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/424-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Byte, obj, v)" {  
-"15624" [label = <(METHOD,SET_PRIMITIVE_FIELD(Byte, obj, v))> ]
-"15628" [label = <(METHOD_RETURN,ANY)> ]
-  "15624" -> "15628" 
+"15621" [label = <(METHOD,SET_PRIMITIVE_FIELD(Byte, obj, v))> ]
+"15625" [label = <(METHOD_RETURN,ANY)> ]
+  "15621" -> "15625" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/425-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/425-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/425-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/425-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Char, obj, v)" {  
-"15629" [label = <(METHOD,SET_PRIMITIVE_FIELD(Char, obj, v))> ]
-"15633" [label = <(METHOD_RETURN,ANY)> ]
-  "15629" -> "15633" 
+"15626" [label = <(METHOD,SET_PRIMITIVE_FIELD(Char, obj, v))> ]
+"15630" [label = <(METHOD_RETURN,ANY)> ]
+  "15626" -> "15630" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/426-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/426-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/426-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/426-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Float, obj, v)" {  
-"15634" [label = <(METHOD,SET_PRIMITIVE_FIELD(Float, obj, v))> ]
-"15638" [label = <(METHOD_RETURN,ANY)> ]
-  "15634" -> "15638" 
+"15631" [label = <(METHOD,SET_PRIMITIVE_FIELD(Float, obj, v))> ]
+"15635" [label = <(METHOD_RETURN,ANY)> ]
+  "15631" -> "15635" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/427-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/427-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/427-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/427-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Double, obj, v)" {  
-"15639" [label = <(METHOD,SET_PRIMITIVE_FIELD(Double, obj, v))> ]
-"15643" [label = <(METHOD_RETURN,ANY)> ]
-  "15639" -> "15643" 
+"15636" [label = <(METHOD,SET_PRIMITIVE_FIELD(Double, obj, v))> ]
+"15640" [label = <(METHOD_RETURN,ANY)> ]
+  "15636" -> "15640" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/428-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/428-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/428-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/428-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Int, obj, v)" {  
-"15644" [label = <(METHOD,SET_PRIMITIVE_FIELD(Int, obj, v))> ]
-"15648" [label = <(METHOD_RETURN,ANY)> ]
-  "15644" -> "15648" 
+"15641" [label = <(METHOD,SET_PRIMITIVE_FIELD(Int, obj, v))> ]
+"15645" [label = <(METHOD_RETURN,ANY)> ]
+  "15641" -> "15645" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/429-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/429-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/429-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/429-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Long, obj, v)" {  
-"15649" [label = <(METHOD,SET_PRIMITIVE_FIELD(Long, obj, v))> ]
-"15653" [label = <(METHOD_RETURN,ANY)> ]
-  "15649" -> "15653" 
+"15646" [label = <(METHOD,SET_PRIMITIVE_FIELD(Long, obj, v))> ]
+"15650" [label = <(METHOD_RETURN,ANY)> ]
+  "15646" -> "15650" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/43-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/43-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/43-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/43-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,25 +1,25 @@
 digraph "NewLocalRef" {  
-"1757" [label = <(soa,soa(env))<SUB>641</SUB>> ]
-"1759" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>642</SUB>> ]
-"1783" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);)<SUB>647</SUB>> ]
-"1760" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>642</SUB>> ]
-"1767" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>642</SUB>> ]
-"1777" [label = <(&lt;operator&gt;.equals,decoded_obj == nullptr)<SUB>644</SUB>> ]
-"1784" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(decoded_obj))<SUB>647</SUB>> ]
-"1761" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>642</SUB>> ]
-"1768" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>642</SUB>> ]
-"1781" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>645</SUB>> ]
-"1785" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>647</SUB>> ]
-"1763" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>642</SUB>> ]
-"1769" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>642</SUB>> ]
-"1772" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>642</SUB>> ]
-"1786" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>647</SUB>> ]
-"1765" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>642</SUB>> ]
-"1771" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>642</SUB>> ]
-"1774" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>642</SUB>> ]
-"1788" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>647</SUB>> ]
-"1752" [label = <(METHOD,NewLocalRef)<SUB>640</SUB>> ]
-"1791" [label = <(METHOD_RETURN,jobject)<SUB>640</SUB>> ]
+"1757" [label = <(soa,soa(env))<SUB>640</SUB>> ]
+"1759" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>641</SUB>> ]
+"1783" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);)<SUB>646</SUB>> ]
+"1760" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>641</SUB>> ]
+"1767" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>641</SUB>> ]
+"1777" [label = <(&lt;operator&gt;.equals,decoded_obj == nullptr)<SUB>643</SUB>> ]
+"1784" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(decoded_obj))<SUB>646</SUB>> ]
+"1761" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>641</SUB>> ]
+"1768" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>641</SUB>> ]
+"1781" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>644</SUB>> ]
+"1785" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>646</SUB>> ]
+"1763" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>641</SUB>> ]
+"1769" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>641</SUB>> ]
+"1772" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>641</SUB>> ]
+"1786" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>646</SUB>> ]
+"1765" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>641</SUB>> ]
+"1771" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>641</SUB>> ]
+"1774" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>641</SUB>> ]
+"1788" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>646</SUB>> ]
+"1752" [label = <(METHOD,NewLocalRef)<SUB>639</SUB>> ]
+"1791" [label = <(METHOD_RETURN,jobject)<SUB>639</SUB>> ]
   "1757" -> "1765" 
   "1759" -> "1777" 
   "1783" -> "1791" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/430-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/430-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/430-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/430-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Short, obj, v)" {  
-"15654" [label = <(METHOD,SET_PRIMITIVE_FIELD(Short, obj, v))> ]
-"15658" [label = <(METHOD_RETURN,ANY)> ]
-  "15654" -> "15658" 
+"15651" [label = <(METHOD,SET_PRIMITIVE_FIELD(Short, obj, v))> ]
+"15655" [label = <(METHOD_RETURN,ANY)> ]
+  "15651" -> "15655" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/431-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/431-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/431-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/431-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD" {  
-"15659" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD)<SUB>1373</SUB>> ]
-"15661" [label = <(METHOD_RETURN,ANY)> ]
-  "15659" -> "15661" 
+"15656" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD)<SUB>1372</SUB>> ]
+"15658" [label = <(METHOD_RETURN,ANY)> ]
+  "15656" -> "15658" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/432-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/432-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/432-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/432-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Boolean, v)" {  
-"15662" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))> ]
-"15665" [label = <(METHOD_RETURN,ANY)> ]
-  "15662" -> "15665" 
+"15659" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))> ]
+"15662" [label = <(METHOD_RETURN,ANY)> ]
+  "15659" -> "15662" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/433-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/433-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/433-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/433-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Byte, v)" {  
-"15666" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))> ]
-"15669" [label = <(METHOD_RETURN,ANY)> ]
-  "15666" -> "15669" 
+"15663" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))> ]
+"15666" [label = <(METHOD_RETURN,ANY)> ]
+  "15663" -> "15666" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/434-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/434-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/434-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/434-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Char, v)" {  
-"15670" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Char, v))> ]
-"15673" [label = <(METHOD_RETURN,ANY)> ]
-  "15670" -> "15673" 
+"15667" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Char, v))> ]
+"15670" [label = <(METHOD_RETURN,ANY)> ]
+  "15667" -> "15670" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/435-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/435-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/435-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/435-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Float, v)" {  
-"15674" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Float, v))> ]
-"15677" [label = <(METHOD_RETURN,ANY)> ]
-  "15674" -> "15677" 
+"15671" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Float, v))> ]
+"15674" [label = <(METHOD_RETURN,ANY)> ]
+  "15671" -> "15674" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/436-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/436-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/436-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/436-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Double, v)" {  
-"15678" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Double, v))> ]
-"15681" [label = <(METHOD_RETURN,ANY)> ]
-  "15678" -> "15681" 
+"15675" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Double, v))> ]
+"15678" [label = <(METHOD_RETURN,ANY)> ]
+  "15675" -> "15678" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/437-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/437-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/437-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/437-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Int, v)" {  
-"15682" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Int, v))> ]
-"15685" [label = <(METHOD_RETURN,ANY)> ]
-  "15682" -> "15685" 
+"15679" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Int, v))> ]
+"15682" [label = <(METHOD_RETURN,ANY)> ]
+  "15679" -> "15682" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/438-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/438-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/438-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/438-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Long, v)" {  
-"15686" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Long, v))> ]
-"15689" [label = <(METHOD_RETURN,ANY)> ]
-  "15686" -> "15689" 
+"15683" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Long, v))> ]
+"15686" [label = <(METHOD_RETURN,ANY)> ]
+  "15683" -> "15686" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/439-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/439-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/439-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/439-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Short, v)" {  
-"15690" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Short, v))> ]
-"15693" [label = <(METHOD_RETURN,ANY)> ]
-  "15690" -> "15693" 
+"15687" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Short, v))> ]
+"15690" [label = <(METHOD_RETURN,ANY)> ]
+  "15687" -> "15690" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/44-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/44-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/44-cfg.dot	2023-06-07 19:34:22.037390835 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/44-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,24 +1,24 @@
 digraph "DeleteLocalRef" {  
-"1804" [label = <(soa,soa(env))<SUB>657</SUB>> ]
-"1807" [label = <(&lt;operator&gt;.assignment,* ext_env = down_cast&lt;JNIEnvExt*&gt;(env))<SUB>658</SUB>> ]
-"1798" [label = <(&lt;operator&gt;.equals,obj == nullptr)<SUB>651</SUB>> ]
-"1809" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>658</SUB>> ]
-"1812" [label = <(&lt;operator&gt;.logicalNot,!ext_env-&gt;locals.Remove(ext_env-&gt;local_ref_cookie, obj))<SUB>659</SUB>> ]
-"1802" [label = <(RETURN,return;,return;)<SUB>652</SUB>> ]
-"1813" [label = <(Remove,ext_env-&gt;locals.Remove(ext_env-&gt;local_ref_cookie, obj))<SUB>659</SUB>> ]
-"1824" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;\012 &lt;&lt; &quot;failed to find entry&quot;)<SUB>665</SUB>> ]
-"1814" [label = <(&lt;operator&gt;.fieldAccess,ext_env-&gt;locals.Remove)<SUB>659</SUB>> ]
-"1819" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;local_ref_cookie)<SUB>659</SUB>> ]
-"1825" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;)<SUB>665</SUB>> ]
-"1815" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;locals)<SUB>659</SUB>> ]
-"1818" [label = <(FIELD_IDENTIFIER,Remove,Remove)<SUB>659</SUB>> ]
-"1821" [label = <(FIELD_IDENTIFIER,local_ref_cookie,local_ref_cookie)<SUB>659</SUB>> ]
-"1826" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj)<SUB>665</SUB>> ]
-"1817" [label = <(FIELD_IDENTIFIER,locals,locals)<SUB>659</SUB>> ]
-"1827" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot;)<SUB>665</SUB>> ]
-"1828" [label = <(LOG,LOG(WARNING))<SUB>665</SUB>> ]
-"1793" [label = <(METHOD,DeleteLocalRef)<SUB>650</SUB>> ]
-"1834" [label = <(METHOD_RETURN,void)<SUB>650</SUB>> ]
+"1804" [label = <(soa,soa(env))<SUB>656</SUB>> ]
+"1807" [label = <(&lt;operator&gt;.assignment,* ext_env = down_cast&lt;JNIEnvExt*&gt;(env))<SUB>657</SUB>> ]
+"1798" [label = <(&lt;operator&gt;.equals,obj == nullptr)<SUB>650</SUB>> ]
+"1809" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>657</SUB>> ]
+"1812" [label = <(&lt;operator&gt;.logicalNot,!ext_env-&gt;locals.Remove(ext_env-&gt;local_ref_cookie, obj))<SUB>658</SUB>> ]
+"1802" [label = <(RETURN,return;,return;)<SUB>651</SUB>> ]
+"1813" [label = <(Remove,ext_env-&gt;locals.Remove(ext_env-&gt;local_ref_cookie, obj))<SUB>658</SUB>> ]
+"1824" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;\012 &lt;&lt; &quot;failed to find entry&quot;)<SUB>664</SUB>> ]
+"1814" [label = <(&lt;operator&gt;.fieldAccess,ext_env-&gt;locals.Remove)<SUB>658</SUB>> ]
+"1819" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;local_ref_cookie)<SUB>658</SUB>> ]
+"1825" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;)<SUB>664</SUB>> ]
+"1815" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;locals)<SUB>658</SUB>> ]
+"1818" [label = <(FIELD_IDENTIFIER,Remove,Remove)<SUB>658</SUB>> ]
+"1821" [label = <(FIELD_IDENTIFIER,local_ref_cookie,local_ref_cookie)<SUB>658</SUB>> ]
+"1826" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj)<SUB>664</SUB>> ]
+"1817" [label = <(FIELD_IDENTIFIER,locals,locals)<SUB>658</SUB>> ]
+"1827" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot;)<SUB>664</SUB>> ]
+"1828" [label = <(LOG,LOG(WARNING))<SUB>664</SUB>> ]
+"1793" [label = <(METHOD,DeleteLocalRef)<SUB>649</SUB>> ]
+"1834" [label = <(METHOD_RETURN,void)<SUB>649</SUB>> ]
   "1804" -> "1809" 
   "1807" -> "1817" 
   "1798" -> "1802" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/440-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/440-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/440-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/440-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "JniAbortF" {  
-"15694" [label = <(METHOD,JniAbortF)> ]
-"15700" [label = <(METHOD_RETURN,ANY)> ]
-  "15694" -> "15700" 
+"15691" [label = <(METHOD,JniAbortF)> ]
+"15697" [label = <(METHOD_RETURN,ANY)> ]
+  "15691" -> "15697" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/441-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/441-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/441-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/441-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::String::AllocFromUtf16" {  
-"15701" [label = <(METHOD,mirror::String::AllocFromUtf16)> ]
-"15707" [label = <(METHOD_RETURN,ANY)> ]
-  "15701" -> "15707" 
+"15698" [label = <(METHOD,mirror::String::AllocFromUtf16)> ]
+"15704" [label = <(METHOD_RETURN,ANY)> ]
+  "15698" -> "15704" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/442-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/442-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/442-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/442-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "::max" {  
-"15708" [label = <(METHOD,::max)> ]
-"15711" [label = <(METHOD_RETURN,ANY)> ]
-  "15708" -> "15711" 
+"15705" [label = <(METHOD,::max)> ]
+"15708" [label = <(METHOD_RETURN,ANY)> ]
+  "15705" -> "15708" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/443-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/443-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/443-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/443-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "android::base::StringPrintf" {  
-"15712" [label = <(METHOD,android::base::StringPrintf)> ]
-"15717" [label = <(METHOD_RETURN,ANY)> ]
-  "15712" -> "15717" 
+"15709" [label = <(METHOD,android::base::StringPrintf)> ]
+"15714" [label = <(METHOD_RETURN,ANY)> ]
+  "15709" -> "15714" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/444-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/444-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/444-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/444-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowOutOfMemoryError" {  
-"15718" [label = <(METHOD,ThrowOutOfMemoryError)> ]
-"15722" [label = <(METHOD_RETURN,ANY)> ]
-  "15718" -> "15722" 
+"15715" [label = <(METHOD,ThrowOutOfMemoryError)> ]
+"15719" [label = <(METHOD_RETURN,ANY)> ]
+  "15715" -> "15719" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/445-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/445-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/445-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/445-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "android_errorWriteLog" {  
-"15723" [label = <(METHOD,android_errorWriteLog)> ]
-"15727" [label = <(METHOD_RETURN,ANY)> ]
-  "15723" -> "15727" 
+digraph "UINT64_C" {  
+"15720" [label = <(METHOD,UINT64_C)> ]
+"15723" [label = <(METHOD_RETURN,ANY)> ]
+  "15720" -> "15723" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/446-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/446-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/446-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/446-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "UINT64_C" {  
-"15728" [label = <(METHOD,UINT64_C)> ]
-"15731" [label = <(METHOD_RETURN,ANY)> ]
-  "15728" -> "15731" 
+digraph "prev_bad_input_time" {  
+"15724" [label = <(METHOD,prev_bad_input_time)> ]
+"15727" [label = <(METHOD_RETURN,ANY)> ]
+  "15724" -> "15727" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/447-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/447-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/447-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/447-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "prev_bad_input_time" {  
-"15732" [label = <(METHOD,prev_bad_input_time)> ]
-"15735" [label = <(METHOD_RETURN,ANY)> ]
-  "15732" -> "15735" 
+digraph "load" {  
+"15728" [label = <(METHOD,load)> ]
+"15732" [label = <(METHOD_RETURN,ANY)> ]
+  "15728" -> "15732" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/448-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/448-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/448-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/448-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "load" {  
-"15736" [label = <(METHOD,load)> ]
-"15740" [label = <(METHOD_RETURN,ANY)> ]
-  "15736" -> "15740" 
+digraph "NanoTime" {  
+"15733" [label = <(METHOD,NanoTime)> ]
+"15735" [label = <(METHOD_RETURN,ANY)> ]
+  "15733" -> "15735" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/449-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/449-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/449-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/449-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "NanoTime" {  
-"15741" [label = <(METHOD,NanoTime)> ]
-"15743" [label = <(METHOD_RETURN,ANY)> ]
-  "15741" -> "15743" 
+digraph "&lt;operator&gt;.logicalOr" {  
+"15736" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
+"15740" [label = <(METHOD_RETURN,ANY)> ]
+  "15736" -> "15740" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/45-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/45-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/45-cfg.dot	2023-06-07 19:34:22.047390834 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/45-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,24 +1,24 @@
 digraph "IsSameObject" {  
-"1842" [label = <(&lt;operator&gt;.equals,obj1 == obj2)<SUB>671</SUB>> ]
-"1846" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>672</SUB>> ]
-"1851" [label = <(soa,soa(env))<SUB>674</SUB>> ]
-"1853" [label = <(RETURN,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;)<SUB>675</SUB>> ]
-"1854" [label = <(&lt;operator&gt;.conditional,(soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE)<SUB>675</SUB>> ]
-"1855" [label = <(&lt;operator&gt;.equals,soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>675</SUB>> ]
-"1856" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj1))<SUB>675</SUB>> ]
-"1865" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>675</SUB>> ]
-"1857" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>675</SUB>> ]
-"1866" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>675</SUB>> ]
-"1858" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>675</SUB>> ]
-"1861" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>675</SUB>> ]
-"1867" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>675</SUB>> ]
-"1870" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>675</SUB>> ]
-"1860" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>675</SUB>> ]
-"1863" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>675</SUB>> ]
-"1869" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>675</SUB>> ]
-"1872" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>675</SUB>> ]
-"1836" [label = <(METHOD,IsSameObject)<SUB>670</SUB>> ]
-"1876" [label = <(METHOD_RETURN,jboolean)<SUB>670</SUB>> ]
+"1842" [label = <(&lt;operator&gt;.equals,obj1 == obj2)<SUB>670</SUB>> ]
+"1846" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>671</SUB>> ]
+"1851" [label = <(soa,soa(env))<SUB>673</SUB>> ]
+"1853" [label = <(RETURN,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;)<SUB>674</SUB>> ]
+"1854" [label = <(&lt;operator&gt;.conditional,(soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE)<SUB>674</SUB>> ]
+"1855" [label = <(&lt;operator&gt;.equals,soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>674</SUB>> ]
+"1856" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj1))<SUB>674</SUB>> ]
+"1865" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>674</SUB>> ]
+"1857" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>674</SUB>> ]
+"1866" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>674</SUB>> ]
+"1858" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>674</SUB>> ]
+"1861" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>674</SUB>> ]
+"1867" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>674</SUB>> ]
+"1870" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>674</SUB>> ]
+"1860" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>674</SUB>> ]
+"1863" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>674</SUB>> ]
+"1869" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>674</SUB>> ]
+"1872" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>674</SUB>> ]
+"1836" [label = <(METHOD,IsSameObject)<SUB>669</SUB>> ]
+"1876" [label = <(METHOD_RETURN,jboolean)<SUB>669</SUB>> ]
   "1842" -> "1846" 
   "1842" -> "1851" 
   "1846" -> "1876" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/450-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/450-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/450-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/450-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.logicalOr" {  
-"15744" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
-"15748" [label = <(METHOD_RETURN,ANY)> ]
-  "15744" -> "15748" 
+digraph "&lt;operator&gt;.greaterEqualsThan" {  
+"15741" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
+"15745" [label = <(METHOD_RETURN,ANY)> ]
+  "15741" -> "15745" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/451-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/451-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/451-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/451-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.greaterEqualsThan" {  
-"15749" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
-"15753" [label = <(METHOD_RETURN,ANY)> ]
-  "15749" -> "15753" 
+digraph "compare_exchange_strong" {  
+"15746" [label = <(METHOD,compare_exchange_strong)> ]
+"15752" [label = <(METHOD_RETURN,ANY)> ]
+  "15746" -> "15752" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/452-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/452-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/452-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/452-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "compare_exchange_strong" {  
-"15754" [label = <(METHOD,compare_exchange_strong)> ]
-"15760" [label = <(METHOD_RETURN,ANY)> ]
-  "15754" -> "15760" 
+digraph "reset" {  
+"15753" [label = <(METHOD,reset)> ]
+"15757" [label = <(METHOD_RETURN,ANY)> ]
+  "15753" -> "15757" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/453-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/453-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/453-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/453-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "reset" {  
-"15761" [label = <(METHOD,reset)> ]
-"15765" [label = <(METHOD_RETURN,ANY)> ]
-  "15761" -> "15765" 
+digraph "&lt;operator&gt;.new" {  
+"15758" [label = <(METHOD,&lt;operator&gt;.new)> ]
+"15761" [label = <(METHOD_RETURN,ANY)> ]
+  "15758" -> "15761" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/454-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/454-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/454-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/454-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.new" {  
-"15766" [label = <(METHOD,&lt;operator&gt;.new)> ]
-"15769" [label = <(METHOD_RETURN,ANY)> ]
-  "15766" -> "15769" 
+digraph "VisitModifiedUtf8Chars" {  
+"15762" [label = <(METHOD,VisitModifiedUtf8Chars)> ]
+"15768" [label = <(METHOD_RETURN,ANY)> ]
+  "15762" -> "15768" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/455-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/455-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/455-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/455-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "VisitModifiedUtf8Chars" {  
-"15770" [label = <(METHOD,VisitModifiedUtf8Chars)> ]
+digraph "mirror::String::AllocFromModifiedUtf8" {  
+"15769" [label = <(METHOD,mirror::String::AllocFromModifiedUtf8)> ]
 "15776" [label = <(METHOD_RETURN,ANY)> ]
-  "15770" -> "15776" 
+  "15769" -> "15776" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/456-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/456-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/456-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/456-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::String::AllocFromModifiedUtf8" {  
-"15777" [label = <(METHOD,mirror::String::AllocFromModifiedUtf8)> ]
-"15784" [label = <(METHOD_RETURN,ANY)> ]
-  "15777" -> "15784" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string)" {  
+"15777" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))> ]
+"15782" [label = <(METHOD_RETURN,ANY)> ]
+  "15777" -> "15782" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/457-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/457-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/457-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/457-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string)" {  
-"15785" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))> ]
-"15790" [label = <(METHOD_RETURN,ANY)> ]
-  "15785" -> "15790" 
+digraph "GetLength" {  
+"15783" [label = <(METHOD,GetLength)> ]
+"15786" [label = <(METHOD_RETURN,ANY)> ]
+  "15783" -> "15786" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/458-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/458-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/458-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/458-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetLength" {  
-"15791" [label = <(METHOD,GetLength)> ]
-"15794" [label = <(METHOD_RETURN,ANY)> ]
-  "15791" -> "15794" 
+digraph "GetUtfLength" {  
+"15787" [label = <(METHOD,GetUtfLength)> ]
+"15790" [label = <(METHOD_RETURN,ANY)> ]
+  "15787" -> "15790" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/459-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/459-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/459-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/459-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetUtfLength" {  
-"15795" [label = <(METHOD,GetUtfLength)> ]
-"15798" [label = <(METHOD_RETURN,ANY)> ]
-  "15795" -> "15798" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string)" {  
+"15791" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))> ]
+"15796" [label = <(METHOD_RETURN,ANY)> ]
+  "15791" -> "15796" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/46-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/46-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/46-cfg.dot	2023-06-07 19:34:22.047390834 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/46-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,71 +1,71 @@
 digraph "AllocObject" {  
-"1882" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>681</SUB>> ]
-"1901" [label = <(soa,soa(env))<SUB>682</SUB>> ]
-"1903" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>683</SUB>> ]
-"1973" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));)<SUB>692</SUB>> ]
-"1904" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>683</SUB>> ]
-"1911" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>683</SUB>> ]
-"1926" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>684</SUB>> ]
-"1933" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>687</SUB>> ]
-"1974" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self())))<SUB>692</SUB>> ]
-"1905" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>683</SUB>> ]
-"1912" [label = <(Self,soa.Self())<SUB>683</SUB>> ]
-"1916" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>683</SUB>> ]
-"1930" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>685</SUB>> ]
-"1934" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>687</SUB>> ]
-"1939" [label = <(&lt;operator&gt;.assignment,allocator_type = Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>688</SUB>> ]
-"1951" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));)<SUB>689</SUB>> ]
-"1975" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>692</SUB>> ]
-"1980" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>692</SUB>> ]
-"1886" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>681</SUB>> ]
-"1907" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>683</SUB>> ]
-"1913" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>683</SUB>> ]
-"1917" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>683</SUB>> ]
-"1936" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>687</SUB>> ]
-"1941" [label = <(GetCurrentAllocator,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>688</SUB>> ]
-"1952" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type)))<SUB>689</SUB>> ]
-"1976" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>692</SUB>> ]
-"1981" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>692</SUB>> ]
-"1984" [label = <(Self,soa.Self())<SUB>692</SUB>> ]
-"1887" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>681</SUB>> ]
-"1891" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>681</SUB>> ]
-"1898" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>681</SUB>> ]
-"1909" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>683</SUB>> ]
-"1915" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>683</SUB>> ]
-"1918" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>683</SUB>> ]
-"1921" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>683</SUB>> ]
-"1942" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator)<SUB>688</SUB>> ]
-"1953" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>689</SUB>> ]
-"1958" [label = <(&lt;operator&gt;.greaterThan,mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type))<SUB>689</SUB>> ]
-"1978" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>692</SUB>> ]
-"1983" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>692</SUB>> ]
-"1985" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>692</SUB>> ]
-"1892" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>681</SUB>> ]
-"1920" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>683</SUB>> ]
-"1923" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>683</SUB>> ]
-"1943" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>688</SUB>> ]
-"1950" [label = <(FIELD_IDENTIFIER,GetCurrentAllocator,GetCurrentAllocator)<SUB>688</SUB>> ]
-"1954" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>689</SUB>> ]
-"1959" [label = <(&lt;operator&gt;.lessThan,mirror::String::AllocEmptyString&lt;true)<SUB>689</SUB>> ]
-"1966" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(),\012                                                                              allocator_type))<SUB>689</SUB>> ]
-"1987" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>692</SUB>> ]
-"1893" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>681</SUB>> ]
-"1895" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>681</SUB>> ]
-"1944" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>688</SUB>> ]
-"1956" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>689</SUB>> ]
-"1960" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocEmptyString)<SUB>689</SUB>> ]
-"1967" [label = <(&lt;operator&gt;.expressionList,soa.Self(),\012                                                                              allocator_type)<SUB>689</SUB>> ]
-"1945" [label = <(Runtime::Current,Runtime::Current())<SUB>688</SUB>> ]
-"1949" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>688</SUB>> ]
-"1961" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>689</SUB>> ]
-"1964" [label = <(FIELD_IDENTIFIER,AllocEmptyString,AllocEmptyString)<SUB>689</SUB>> ]
-"1968" [label = <(Self,soa.Self())<SUB>689</SUB>> ]
-"1946" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>688</SUB>> ]
-"1969" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>689</SUB>> ]
-"1948" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>688</SUB>> ]
-"1971" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>689</SUB>> ]
-"1878" [label = <(METHOD,AllocObject)<SUB>680</SUB>> ]
-"1988" [label = <(METHOD_RETURN,jobject)<SUB>680</SUB>> ]
+"1882" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>680</SUB>> ]
+"1901" [label = <(soa,soa(env))<SUB>681</SUB>> ]
+"1903" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>682</SUB>> ]
+"1973" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));)<SUB>691</SUB>> ]
+"1904" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>682</SUB>> ]
+"1911" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>682</SUB>> ]
+"1926" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>683</SUB>> ]
+"1933" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>686</SUB>> ]
+"1974" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self())))<SUB>691</SUB>> ]
+"1905" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>682</SUB>> ]
+"1912" [label = <(Self,soa.Self())<SUB>682</SUB>> ]
+"1916" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>682</SUB>> ]
+"1930" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>684</SUB>> ]
+"1934" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>686</SUB>> ]
+"1939" [label = <(&lt;operator&gt;.assignment,allocator_type = Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>687</SUB>> ]
+"1951" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));)<SUB>688</SUB>> ]
+"1975" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>691</SUB>> ]
+"1980" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>691</SUB>> ]
+"1886" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>680</SUB>> ]
+"1907" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>682</SUB>> ]
+"1913" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>682</SUB>> ]
+"1917" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>682</SUB>> ]
+"1936" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>686</SUB>> ]
+"1941" [label = <(GetCurrentAllocator,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>687</SUB>> ]
+"1952" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type)))<SUB>688</SUB>> ]
+"1976" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>691</SUB>> ]
+"1981" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>691</SUB>> ]
+"1984" [label = <(Self,soa.Self())<SUB>691</SUB>> ]
+"1887" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>680</SUB>> ]
+"1891" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>680</SUB>> ]
+"1898" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>680</SUB>> ]
+"1909" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>682</SUB>> ]
+"1915" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>682</SUB>> ]
+"1918" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>682</SUB>> ]
+"1921" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>682</SUB>> ]
+"1942" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator)<SUB>687</SUB>> ]
+"1953" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>688</SUB>> ]
+"1958" [label = <(&lt;operator&gt;.greaterThan,mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type))<SUB>688</SUB>> ]
+"1978" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>691</SUB>> ]
+"1983" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>691</SUB>> ]
+"1985" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>691</SUB>> ]
+"1892" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>680</SUB>> ]
+"1920" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>682</SUB>> ]
+"1923" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>682</SUB>> ]
+"1943" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>687</SUB>> ]
+"1950" [label = <(FIELD_IDENTIFIER,GetCurrentAllocator,GetCurrentAllocator)<SUB>687</SUB>> ]
+"1954" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>688</SUB>> ]
+"1959" [label = <(&lt;operator&gt;.lessThan,mirror::String::AllocEmptyString&lt;true)<SUB>688</SUB>> ]
+"1966" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(),\012                                                                              allocator_type))<SUB>688</SUB>> ]
+"1987" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>691</SUB>> ]
+"1893" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>680</SUB>> ]
+"1895" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>680</SUB>> ]
+"1944" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>687</SUB>> ]
+"1956" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>688</SUB>> ]
+"1960" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocEmptyString)<SUB>688</SUB>> ]
+"1967" [label = <(&lt;operator&gt;.expressionList,soa.Self(),\012                                                                              allocator_type)<SUB>688</SUB>> ]
+"1945" [label = <(Runtime::Current,Runtime::Current())<SUB>687</SUB>> ]
+"1949" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>687</SUB>> ]
+"1961" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>688</SUB>> ]
+"1964" [label = <(FIELD_IDENTIFIER,AllocEmptyString,AllocEmptyString)<SUB>688</SUB>> ]
+"1968" [label = <(Self,soa.Self())<SUB>688</SUB>> ]
+"1946" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>687</SUB>> ]
+"1969" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>688</SUB>> ]
+"1948" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>687</SUB>> ]
+"1971" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>688</SUB>> ]
+"1878" [label = <(METHOD,AllocObject)<SUB>679</SUB>> ]
+"1988" [label = <(METHOD_RETURN,jobject)<SUB>679</SUB>> ]
   "1882" -> "1887" 
   "1882" -> "1901" 
   "1901" -> "1909" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/460-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/460-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/460-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/460-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string)" {  
-"15799" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))> ]
-"15804" [label = <(METHOD_RETURN,ANY)> ]
-  "15799" -> "15804" 
+digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT" {  
+"15797" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT)<SUB>403</SUB>> ]
+"15801" [label = <(METHOD_RETURN,ANY)> ]
+  "15797" -> "15801" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/461-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/461-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/461-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/461-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT" {  
-"15805" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT)<SUB>404</SUB>> ]
-"15809" [label = <(METHOD_RETURN,ANY)> ]
-  "15805" -> "15809" 
+digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf)" {  
+"15802" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))> ]
+"15807" [label = <(METHOD_RETURN,ANY)> ]
+  "15802" -> "15807" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/462-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/462-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/462-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/462-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf)" {  
-"15810" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))> ]
-"15815" [label = <(METHOD_RETURN,ANY)> ]
-  "15810" -> "15815" 
+digraph "IsCompressed" {  
+"15808" [label = <(METHOD,IsCompressed)> ]
+"15811" [label = <(METHOD_RETURN,ANY)> ]
+  "15808" -> "15811" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/463-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/463-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/463-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/463-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "IsCompressed" {  
-"15816" [label = <(METHOD,IsCompressed)> ]
-"15819" [label = <(METHOD_RETURN,ANY)> ]
-  "15816" -> "15819" 
+digraph "&lt;operator&gt;.preIncrement" {  
+"15812" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
+"15815" [label = <(METHOD_RETURN,ANY)> ]
+  "15812" -> "15815" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/464-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/464-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/464-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/464-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.preIncrement" {  
-"15820" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
-"15823" [label = <(METHOD_RETURN,ANY)> ]
-  "15820" -> "15823" 
+digraph "CharAt" {  
+"15816" [label = <(METHOD,CharAt)> ]
+"15820" [label = <(METHOD_RETURN,ANY)> ]
+  "15816" -> "15820" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/465-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/465-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/465-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/465-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CharAt" {  
-"15824" [label = <(METHOD,CharAt)> ]
-"15828" [label = <(METHOD_RETURN,ANY)> ]
-  "15824" -> "15828" 
+digraph "GetValue" {  
+"15821" [label = <(METHOD,GetValue)> ]
+"15824" [label = <(METHOD_RETURN,ANY)> ]
+  "15821" -> "15824" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/466-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/466-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/466-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/466-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetValue" {  
-"15829" [label = <(METHOD,GetValue)> ]
-"15832" [label = <(METHOD_RETURN,ANY)> ]
-  "15829" -> "15832" 
+digraph "memcpy" {  
+"15825" [label = <(METHOD,memcpy)> ]
+"15830" [label = <(METHOD_RETURN,ANY)> ]
+  "15825" -> "15830" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/467-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/467-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/467-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/467-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "memcpy" {  
-"15833" [label = <(METHOD,memcpy)> ]
-"15838" [label = <(METHOD_RETURN,ANY)> ]
-  "15833" -> "15838" 
+digraph "&lt;operator&gt;.sizeOf" {  
+"15831" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
+"15834" [label = <(METHOD_RETURN,ANY)> ]
+  "15831" -> "15834" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/468-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/468-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/468-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/468-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.sizeOf" {  
-"15839" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
-"15842" [label = <(METHOD_RETURN,ANY)> ]
-  "15839" -> "15842" 
+digraph "CountUtf8Bytes" {  
+"15835" [label = <(METHOD,CountUtf8Bytes)> ]
+"15839" [label = <(METHOD_RETURN,ANY)> ]
+  "15835" -> "15839" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/469-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/469-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/469-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/469-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CountUtf8Bytes" {  
-"15843" [label = <(METHOD,CountUtf8Bytes)> ]
-"15847" [label = <(METHOD_RETURN,ANY)> ]
-  "15843" -> "15847" 
+digraph "ConvertUtf16ToModifiedUtf8" {  
+"15840" [label = <(METHOD,ConvertUtf16ToModifiedUtf8)> ]
+"15846" [label = <(METHOD_RETURN,ANY)> ]
+  "15840" -> "15846" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/47-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/47-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/47-cfg.dot	2023-06-07 19:34:22.047390834 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/47-cfg.dot	2023-06-07 19:34:28.567390227 +0330
@@ -1,27 +1,27 @@
 digraph "NewObject" {  
-"1996" [label = <(va_start,va_start(args, mid))<SUB>697</SUB>> ]
-"1999" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>698</SUB>> ]
-"2017" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>699</SUB>> ]
-"2036" [label = <(&lt;operator&gt;.assignment,result = NewObjectV(env, java_class, mid, args))<SUB>700</SUB>> ]
-"2043" [label = <(va_end,va_end(args))<SUB>701</SUB>> ]
-"2045" [label = <(RETURN,return result;,return result;)<SUB>702</SUB>> ]
-"2038" [label = <(NewObjectV,NewObjectV(env, java_class, mid, args))<SUB>700</SUB>> ]
-"2003" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>698</SUB>> ]
-"2021" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>699</SUB>> ]
-"2004" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>698</SUB>> ]
-"2008" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>698</SUB>> ]
-"2015" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>698</SUB>> ]
-"2022" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>699</SUB>> ]
-"2026" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>699</SUB>> ]
-"2033" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>699</SUB>> ]
-"2009" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>698</SUB>> ]
-"2027" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>699</SUB>> ]
-"2010" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>698</SUB>> ]
-"2012" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>698</SUB>> ]
-"2028" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>699</SUB>> ]
-"2030" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>699</SUB>> ]
-"1990" [label = <(METHOD,NewObject)<SUB>695</SUB>> ]
-"2047" [label = <(METHOD_RETURN,jobject)<SUB>695</SUB>> ]
+"1996" [label = <(va_start,va_start(args, mid))<SUB>696</SUB>> ]
+"1999" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>697</SUB>> ]
+"2017" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>698</SUB>> ]
+"2036" [label = <(&lt;operator&gt;.assignment,result = NewObjectV(env, java_class, mid, args))<SUB>699</SUB>> ]
+"2043" [label = <(va_end,va_end(args))<SUB>700</SUB>> ]
+"2045" [label = <(RETURN,return result;,return result;)<SUB>701</SUB>> ]
+"2038" [label = <(NewObjectV,NewObjectV(env, java_class, mid, args))<SUB>699</SUB>> ]
+"2003" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>697</SUB>> ]
+"2021" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>698</SUB>> ]
+"2004" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>697</SUB>> ]
+"2008" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>697</SUB>> ]
+"2015" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>697</SUB>> ]
+"2022" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>698</SUB>> ]
+"2026" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>698</SUB>> ]
+"2033" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>698</SUB>> ]
+"2009" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>697</SUB>> ]
+"2027" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>698</SUB>> ]
+"2010" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>697</SUB>> ]
+"2012" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>697</SUB>> ]
+"2028" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>698</SUB>> ]
+"2030" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>698</SUB>> ]
+"1990" [label = <(METHOD,NewObject)<SUB>694</SUB>> ]
+"2047" [label = <(METHOD_RETURN,jobject)<SUB>694</SUB>> ]
   "1996" -> "1999" 
   "1999" -> "2004" 
   "1999" -> "2017" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/470-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/470-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/470-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/470-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "ConvertUtf16ToModifiedUtf8" {  
-"15848" [label = <(METHOD,ConvertUtf16ToModifiedUtf8)> ]
-"15854" [label = <(METHOD_RETURN,ANY)> ]
-  "15848" -> "15854" 
+digraph "CHECK_NON_NULL_ARGUMENT(java_string)" {  
+"15847" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_string))> ]
+"15852" [label = <(METHOD_RETURN,ANY)> ]
+  "15847" -> "15852" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/471-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/471-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/471-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/471-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(java_string)" {  
-"15855" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_string))> ]
-"15860" [label = <(METHOD_RETURN,ANY)> ]
-  "15855" -> "15860" 
+digraph "IsMovableObject" {  
+"15853" [label = <(METHOD,IsMovableObject)> ]
+"15857" [label = <(METHOD_RETURN,ANY)> ]
+  "15853" -> "15857" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/472-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/472-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/472-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/472-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "IsMovableObject" {  
-"15861" [label = <(METHOD,IsMovableObject)> ]
-"15865" [label = <(METHOD_RETURN,ANY)> ]
-  "15861" -> "15865" 
+digraph "&lt;operator&gt;.delete" {  
+"15858" [label = <(METHOD,&lt;operator&gt;.delete)> ]
+"15861" [label = <(METHOD_RETURN,ANY)> ]
+  "15858" -> "15861" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/473-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/473-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/473-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/473-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.delete" {  
-"15866" [label = <(METHOD,&lt;operator&gt;.delete)> ]
-"15869" [label = <(METHOD_RETURN,ANY)> ]
-  "15866" -> "15869" 
+digraph "h" {  
+"15862" [label = <(METHOD,h)> ]
+"15865" [label = <(METHOD_RETURN,ANY)> ]
+  "15862" -> "15865" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/474-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/474-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/474-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/474-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "h" {  
-"15870" [label = <(METHOD,h)> ]
-"15873" [label = <(METHOD_RETURN,ANY)> ]
-  "15870" -> "15873" 
+digraph "NewHandleWrapper" {  
+"15866" [label = <(METHOD,NewHandleWrapper)> ]
+"15870" [label = <(METHOD_RETURN,ANY)> ]
+  "15866" -> "15870" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/475-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/475-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/475-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/475-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "NewHandleWrapper" {  
-"15874" [label = <(METHOD,NewHandleWrapper)> ]
-"15878" [label = <(METHOD_RETURN,ANY)> ]
-  "15874" -> "15878" 
+digraph "&lt;operator&gt;.addressOf" {  
+"15871" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
+"15874" [label = <(METHOD_RETURN,ANY)> ]
+  "15871" -> "15874" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/476-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/476-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/476-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/476-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.addressOf" {  
-"15879" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
-"15882" [label = <(METHOD_RETURN,ANY)> ]
-  "15879" -> "15882" 
+digraph "IncrementDisableMovingGC" {  
+"15875" [label = <(METHOD,IncrementDisableMovingGC)> ]
+"15879" [label = <(METHOD_RETURN,ANY)> ]
+  "15875" -> "15879" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/477-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/477-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/477-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/477-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "IncrementDisableMovingGC" {  
-"15883" [label = <(METHOD,IncrementDisableMovingGC)> ]
-"15887" [label = <(METHOD_RETURN,ANY)> ]
-  "15883" -> "15887" 
+digraph "IncrementDisableThreadFlip" {  
+"15880" [label = <(METHOD,IncrementDisableThreadFlip)> ]
+"15884" [label = <(METHOD_RETURN,ANY)> ]
+  "15880" -> "15884" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/478-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/478-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/478-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/478-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "IncrementDisableThreadFlip" {  
-"15888" [label = <(METHOD,IncrementDisableThreadFlip)> ]
-"15892" [label = <(METHOD_RETURN,ANY)> ]
-  "15888" -> "15892" 
+digraph "DecrementDisableMovingGC" {  
+"15885" [label = <(METHOD,DecrementDisableMovingGC)> ]
+"15889" [label = <(METHOD_RETURN,ANY)> ]
+  "15885" -> "15889" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/479-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/479-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/479-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/479-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "DecrementDisableMovingGC" {  
-"15893" [label = <(METHOD,DecrementDisableMovingGC)> ]
-"15897" [label = <(METHOD_RETURN,ANY)> ]
-  "15893" -> "15897" 
+digraph "DecrementDisableThreadFlip" {  
+"15890" [label = <(METHOD,DecrementDisableThreadFlip)> ]
+"15894" [label = <(METHOD_RETURN,ANY)> ]
+  "15890" -> "15894" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/48-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/48-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/48-cfg.dot	2023-06-07 19:34:22.047390834 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/48-cfg.dot	2023-06-07 19:34:28.577390224 +0330
@@ -1,84 +1,84 @@
 digraph "NewObjectV" {  
-"2055" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>706</SUB>> ]
-"2073" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>707</SUB>> ]
-"2092" [label = <(soa,soa(env))<SUB>708</SUB>> ]
-"2094" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>709</SUB>> ]
-"2153" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>720</SUB>> ]
-"2177" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result))<SUB>724</SUB>> ]
-"2186" [label = <(CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV(env, local_result, java_class, mid, args))<SUB>725</SUB>> ]
-"2203" [label = <(RETURN,return local_result;,return local_result;)<SUB>729</SUB>> ]
-"2095" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>709</SUB>> ]
-"2102" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>709</SUB>> ]
-"2117" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>711</SUB>> ]
-"2124" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>714</SUB>> ]
-"2154" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>720</SUB>> ]
-"2161" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>720</SUB>> ]
-"2170" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>721</SUB>> ]
-"2179" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result))<SUB>724</SUB>> ]
-"2193" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>726</SUB>> ]
-"2096" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>709</SUB>> ]
-"2103" [label = <(Self,soa.Self())<SUB>709</SUB>> ]
-"2107" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>710</SUB>> ]
-"2121" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>712</SUB>> ]
-"2125" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>714</SUB>> ]
-"2130" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>716</SUB>> ]
-"2145" [label = <(RETURN,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>718</SUB>> ]
-"2155" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>720</SUB>> ]
-"2162" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>720</SUB>> ]
-"2165" [label = <(Self,soa.Self())<SUB>720</SUB>> ]
-"2174" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>722</SUB>> ]
-"2180" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>724</SUB>> ]
-"2194" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>726</SUB>> ]
-"2201" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>727</SUB>> ]
-"2059" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>706</SUB>> ]
-"2077" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>707</SUB>> ]
-"2098" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>709</SUB>> ]
-"2104" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>709</SUB>> ]
-"2108" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>710</SUB>> ]
-"2127" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>714</SUB>> ]
-"2132" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>716</SUB>> ]
-"2146" [label = <(CallStaticObjectMethodV,CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>718</SUB>> ]
-"2157" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>720</SUB>> ]
-"2164" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>720</SUB>> ]
-"2166" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>720</SUB>> ]
-"2181" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>724</SUB>> ]
-"2195" [label = <(Self,soa.Self())<SUB>726</SUB>> ]
-"2199" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>726</SUB>> ]
-"2060" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>706</SUB>> ]
-"2064" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>706</SUB>> ]
-"2071" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>706</SUB>> ]
-"2078" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>707</SUB>> ]
-"2082" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>707</SUB>> ]
-"2089" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>707</SUB>> ]
-"2100" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>709</SUB>> ]
-"2106" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>709</SUB>> ]
-"2109" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>710</SUB>> ]
-"2112" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>710</SUB>> ]
-"2133" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>716</SUB>> ]
-"2136" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>717</SUB>> ]
-"2148" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>718</SUB>> ]
-"2159" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>720</SUB>> ]
-"2168" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>720</SUB>> ]
-"2183" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>724</SUB>> ]
-"2196" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>726</SUB>> ]
-"2065" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>706</SUB>> ]
-"2083" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>707</SUB>> ]
-"2111" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>710</SUB>> ]
-"2114" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>710</SUB>> ]
-"2135" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>716</SUB>> ]
-"2137" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>717</SUB>> ]
-"2140" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>717</SUB>> ]
-"2150" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>718</SUB>> ]
-"2198" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>726</SUB>> ]
-"2066" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>706</SUB>> ]
-"2068" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>706</SUB>> ]
-"2084" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>707</SUB>> ]
-"2086" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>707</SUB>> ]
-"2139" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>717</SUB>> ]
-"2141" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>717</SUB>> ]
-"2143" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>717</SUB>> ]
-"2049" [label = <(METHOD,NewObjectV)<SUB>705</SUB>> ]
-"2205" [label = <(METHOD_RETURN,jobject)<SUB>705</SUB>> ]
+"2055" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>705</SUB>> ]
+"2073" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>706</SUB>> ]
+"2092" [label = <(soa,soa(env))<SUB>707</SUB>> ]
+"2094" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>708</SUB>> ]
+"2153" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>719</SUB>> ]
+"2177" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result))<SUB>723</SUB>> ]
+"2186" [label = <(CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV(env, local_result, java_class, mid, args))<SUB>724</SUB>> ]
+"2203" [label = <(RETURN,return local_result;,return local_result;)<SUB>728</SUB>> ]
+"2095" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>708</SUB>> ]
+"2102" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>708</SUB>> ]
+"2117" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>710</SUB>> ]
+"2124" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>713</SUB>> ]
+"2154" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>719</SUB>> ]
+"2161" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>719</SUB>> ]
+"2170" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>720</SUB>> ]
+"2179" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result))<SUB>723</SUB>> ]
+"2193" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>725</SUB>> ]
+"2096" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>708</SUB>> ]
+"2103" [label = <(Self,soa.Self())<SUB>708</SUB>> ]
+"2107" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>709</SUB>> ]
+"2121" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>711</SUB>> ]
+"2125" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>713</SUB>> ]
+"2130" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>715</SUB>> ]
+"2145" [label = <(RETURN,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>717</SUB>> ]
+"2155" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>719</SUB>> ]
+"2162" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>719</SUB>> ]
+"2165" [label = <(Self,soa.Self())<SUB>719</SUB>> ]
+"2174" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>721</SUB>> ]
+"2180" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>723</SUB>> ]
+"2194" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>725</SUB>> ]
+"2201" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>726</SUB>> ]
+"2059" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>705</SUB>> ]
+"2077" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>706</SUB>> ]
+"2098" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>708</SUB>> ]
+"2104" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>708</SUB>> ]
+"2108" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>709</SUB>> ]
+"2127" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>713</SUB>> ]
+"2132" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>715</SUB>> ]
+"2146" [label = <(CallStaticObjectMethodV,CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>717</SUB>> ]
+"2157" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>719</SUB>> ]
+"2164" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>719</SUB>> ]
+"2166" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>719</SUB>> ]
+"2181" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>723</SUB>> ]
+"2195" [label = <(Self,soa.Self())<SUB>725</SUB>> ]
+"2199" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>725</SUB>> ]
+"2060" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>705</SUB>> ]
+"2064" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>705</SUB>> ]
+"2071" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>705</SUB>> ]
+"2078" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>706</SUB>> ]
+"2082" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>706</SUB>> ]
+"2089" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>706</SUB>> ]
+"2100" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>708</SUB>> ]
+"2106" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>708</SUB>> ]
+"2109" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>709</SUB>> ]
+"2112" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>709</SUB>> ]
+"2133" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>715</SUB>> ]
+"2136" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>716</SUB>> ]
+"2148" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>717</SUB>> ]
+"2159" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>719</SUB>> ]
+"2168" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>719</SUB>> ]
+"2183" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>723</SUB>> ]
+"2196" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>725</SUB>> ]
+"2065" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>705</SUB>> ]
+"2083" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>706</SUB>> ]
+"2111" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>709</SUB>> ]
+"2114" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>709</SUB>> ]
+"2135" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>715</SUB>> ]
+"2137" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>716</SUB>> ]
+"2140" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>716</SUB>> ]
+"2150" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>717</SUB>> ]
+"2198" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>725</SUB>> ]
+"2066" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>705</SUB>> ]
+"2068" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>705</SUB>> ]
+"2084" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>706</SUB>> ]
+"2086" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>706</SUB>> ]
+"2139" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>716</SUB>> ]
+"2141" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>716</SUB>> ]
+"2143" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>716</SUB>> ]
+"2049" [label = <(METHOD,NewObjectV)<SUB>704</SUB>> ]
+"2205" [label = <(METHOD_RETURN,jobject)<SUB>704</SUB>> ]
   "2055" -> "2060" 
   "2055" -> "2073" 
   "2073" -> "2078" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/480-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/480-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/480-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/480-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "DecrementDisableThreadFlip" {  
-"15898" [label = <(METHOD,DecrementDisableThreadFlip)> ]
-"15902" [label = <(METHOD_RETURN,ANY)> ]
-  "15898" -> "15902" 
+digraph "CHECK" {  
+"15895" [label = <(METHOD,CHECK)> ]
+"15898" [label = <(METHOD_RETURN,ANY)> ]
+  "15895" -> "15898" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/481-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/481-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/481-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/481-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK" {  
-"15903" [label = <(METHOD,CHECK)> ]
-"15906" [label = <(METHOD_RETURN,ANY)> ]
-  "15903" -> "15906" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array)" {  
+"15899" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))> ]
+"15904" [label = <(METHOD_RETURN,ANY)> ]
+  "15899" -> "15904" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/482-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/482-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/482-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/482-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array)" {  
-"15907" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))> ]
-"15912" [label = <(METHOD_RETURN,ANY)> ]
-  "15907" -> "15912" 
+digraph "IsArrayInstance" {  
+"15905" [label = <(METHOD,IsArrayInstance)> ]
+"15908" [label = <(METHOD_RETURN,ANY)> ]
+  "15905" -> "15908" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/483-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/483-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/483-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/483-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "IsArrayInstance" {  
-"15913" [label = <(METHOD,IsArrayInstance)> ]
-"15916" [label = <(METHOD_RETURN,ANY)> ]
-  "15913" -> "15916" 
+digraph "PrettyTypeOf" {  
+"15909" [label = <(METHOD,PrettyTypeOf)> ]
+"15912" [label = <(METHOD_RETURN,ANY)> ]
+  "15909" -> "15912" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/484-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/484-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/484-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/484-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyTypeOf" {  
-"15917" [label = <(METHOD,PrettyTypeOf)> ]
-"15920" [label = <(METHOD_RETURN,ANY)> ]
-  "15917" -> "15920" 
+digraph "AsArray" {  
+"15913" [label = <(METHOD,AsArray)> ]
+"15916" [label = <(METHOD_RETURN,ANY)> ]
+  "15913" -> "15916" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/485-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/485-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/485-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/485-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "AsArray" {  
-"15921" [label = <(METHOD,AsArray)> ]
-"15924" [label = <(METHOD_RETURN,ANY)> ]
-  "15921" -> "15924" 
+digraph "CHECK_NON_NULL_ARGUMENT(java_array)" {  
+"15917" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_array))> ]
+"15922" [label = <(METHOD_RETURN,ANY)> ]
+  "15917" -> "15922" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/486-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/486-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/486-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/486-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(java_array)" {  
-"15925" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_array))> ]
-"15930" [label = <(METHOD_RETURN,ANY)> ]
-  "15925" -> "15930" 
+digraph "&lt;operator&gt;.arithmeticShiftRight" {  
+"15923" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
+"15927" [label = <(METHOD_RETURN,ANY)> ]
+  "15923" -> "15927" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/487-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/487-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/487-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/487-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.arithmeticShiftRight" {  
-"15931" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
-"15935" [label = <(METHOD_RETURN,ANY)> ]
-  "15931" -> "15935" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array)" {  
+"15928" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))> ]
+"15933" [label = <(METHOD_RETURN,ANY)> ]
+  "15928" -> "15933" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/488-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/488-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/488-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/488-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array)" {  
-"15936" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))> ]
-"15941" [label = <(METHOD_RETURN,ANY)> ]
-  "15936" -> "15941" 
+digraph "Ptr" {  
+"15934" [label = <(METHOD,Ptr)> ]
+"15937" [label = <(METHOD_RETURN,ANY)> ]
+  "15934" -> "15937" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/489-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/489-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/489-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/489-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "Ptr" {  
-"15942" [label = <(METHOD,Ptr)> ]
-"15945" [label = <(METHOD_RETURN,ANY)> ]
-  "15942" -> "15945" 
+digraph "NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;" {  
+"15938" [label = <(METHOD,NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;)> ]
+"15942" [label = <(METHOD_RETURN,ANY)> ]
+  "15938" -> "15942" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/49-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/49-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/49-cfg.dot	2023-06-07 19:34:22.047390834 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/49-cfg.dot	2023-06-07 19:34:28.577390224 +0330
@@ -1,84 +1,84 @@
 digraph "NewObjectA" {  
-"2213" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>733</SUB>> ]
-"2231" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>734</SUB>> ]
-"2250" [label = <(soa,soa(env))<SUB>735</SUB>> ]
-"2252" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>736</SUB>> ]
-"2311" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>747</SUB>> ]
-"2335" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>751</SUB>> ]
-"2344" [label = <(CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA(env, local_result, java_class, mid, args))<SUB>752</SUB>> ]
-"2361" [label = <(RETURN,return local_result;,return local_result;)<SUB>756</SUB>> ]
-"2253" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>736</SUB>> ]
-"2260" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>736</SUB>> ]
-"2275" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>738</SUB>> ]
-"2282" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>741</SUB>> ]
-"2312" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>747</SUB>> ]
-"2319" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>747</SUB>> ]
-"2328" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>748</SUB>> ]
-"2337" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>751</SUB>> ]
-"2351" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>753</SUB>> ]
-"2254" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>736</SUB>> ]
-"2261" [label = <(Self,soa.Self())<SUB>736</SUB>> ]
-"2265" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>737</SUB>> ]
-"2279" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>739</SUB>> ]
-"2283" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>741</SUB>> ]
-"2288" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>743</SUB>> ]
-"2303" [label = <(RETURN,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>745</SUB>> ]
-"2313" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>747</SUB>> ]
-"2320" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>747</SUB>> ]
-"2323" [label = <(Self,soa.Self())<SUB>747</SUB>> ]
-"2332" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>749</SUB>> ]
-"2338" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>751</SUB>> ]
-"2352" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>753</SUB>> ]
-"2359" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>754</SUB>> ]
-"2217" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>733</SUB>> ]
-"2235" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>734</SUB>> ]
-"2256" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>736</SUB>> ]
-"2262" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>736</SUB>> ]
-"2266" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>737</SUB>> ]
-"2285" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>741</SUB>> ]
-"2290" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>743</SUB>> ]
-"2304" [label = <(CallStaticObjectMethodA,CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>745</SUB>> ]
-"2315" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>747</SUB>> ]
-"2322" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>747</SUB>> ]
-"2324" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>747</SUB>> ]
-"2339" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>751</SUB>> ]
-"2353" [label = <(Self,soa.Self())<SUB>753</SUB>> ]
-"2357" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>753</SUB>> ]
-"2218" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>733</SUB>> ]
-"2222" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>733</SUB>> ]
-"2229" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>733</SUB>> ]
-"2236" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>734</SUB>> ]
-"2240" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>734</SUB>> ]
-"2247" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>734</SUB>> ]
-"2258" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>736</SUB>> ]
-"2264" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>736</SUB>> ]
-"2267" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>737</SUB>> ]
-"2270" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>737</SUB>> ]
-"2291" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>743</SUB>> ]
-"2294" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>744</SUB>> ]
-"2306" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>745</SUB>> ]
-"2317" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>747</SUB>> ]
-"2326" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>747</SUB>> ]
-"2341" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>751</SUB>> ]
-"2354" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>753</SUB>> ]
-"2223" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>733</SUB>> ]
-"2241" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>734</SUB>> ]
-"2269" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>737</SUB>> ]
-"2272" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>737</SUB>> ]
-"2293" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>743</SUB>> ]
-"2295" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>744</SUB>> ]
-"2298" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>744</SUB>> ]
-"2308" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>745</SUB>> ]
-"2356" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>753</SUB>> ]
-"2224" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>733</SUB>> ]
-"2226" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>733</SUB>> ]
-"2242" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>734</SUB>> ]
-"2244" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>734</SUB>> ]
-"2297" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>744</SUB>> ]
-"2299" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>744</SUB>> ]
-"2301" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>744</SUB>> ]
-"2207" [label = <(METHOD,NewObjectA)<SUB>732</SUB>> ]
-"2363" [label = <(METHOD_RETURN,jobject)<SUB>732</SUB>> ]
+"2213" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>732</SUB>> ]
+"2231" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>733</SUB>> ]
+"2250" [label = <(soa,soa(env))<SUB>734</SUB>> ]
+"2252" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>735</SUB>> ]
+"2311" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>746</SUB>> ]
+"2335" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>750</SUB>> ]
+"2344" [label = <(CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA(env, local_result, java_class, mid, args))<SUB>751</SUB>> ]
+"2361" [label = <(RETURN,return local_result;,return local_result;)<SUB>755</SUB>> ]
+"2253" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>735</SUB>> ]
+"2260" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>735</SUB>> ]
+"2275" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>737</SUB>> ]
+"2282" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>740</SUB>> ]
+"2312" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>746</SUB>> ]
+"2319" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>746</SUB>> ]
+"2328" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>747</SUB>> ]
+"2337" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>750</SUB>> ]
+"2351" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>752</SUB>> ]
+"2254" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>735</SUB>> ]
+"2261" [label = <(Self,soa.Self())<SUB>735</SUB>> ]
+"2265" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>736</SUB>> ]
+"2279" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>738</SUB>> ]
+"2283" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>740</SUB>> ]
+"2288" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>742</SUB>> ]
+"2303" [label = <(RETURN,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>744</SUB>> ]
+"2313" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>746</SUB>> ]
+"2320" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>746</SUB>> ]
+"2323" [label = <(Self,soa.Self())<SUB>746</SUB>> ]
+"2332" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>748</SUB>> ]
+"2338" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>750</SUB>> ]
+"2352" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>752</SUB>> ]
+"2359" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>753</SUB>> ]
+"2217" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>732</SUB>> ]
+"2235" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>733</SUB>> ]
+"2256" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>735</SUB>> ]
+"2262" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>735</SUB>> ]
+"2266" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>736</SUB>> ]
+"2285" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>740</SUB>> ]
+"2290" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>742</SUB>> ]
+"2304" [label = <(CallStaticObjectMethodA,CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>744</SUB>> ]
+"2315" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>746</SUB>> ]
+"2322" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>746</SUB>> ]
+"2324" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>746</SUB>> ]
+"2339" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>750</SUB>> ]
+"2353" [label = <(Self,soa.Self())<SUB>752</SUB>> ]
+"2357" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>752</SUB>> ]
+"2218" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>732</SUB>> ]
+"2222" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>732</SUB>> ]
+"2229" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>732</SUB>> ]
+"2236" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>733</SUB>> ]
+"2240" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>733</SUB>> ]
+"2247" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>733</SUB>> ]
+"2258" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>735</SUB>> ]
+"2264" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>735</SUB>> ]
+"2267" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>736</SUB>> ]
+"2270" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>736</SUB>> ]
+"2291" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>742</SUB>> ]
+"2294" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>743</SUB>> ]
+"2306" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>744</SUB>> ]
+"2317" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>746</SUB>> ]
+"2326" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>746</SUB>> ]
+"2341" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>750</SUB>> ]
+"2354" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>752</SUB>> ]
+"2223" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>732</SUB>> ]
+"2241" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>733</SUB>> ]
+"2269" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>736</SUB>> ]
+"2272" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>736</SUB>> ]
+"2293" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>742</SUB>> ]
+"2295" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>743</SUB>> ]
+"2298" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>743</SUB>> ]
+"2308" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>744</SUB>> ]
+"2356" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>752</SUB>> ]
+"2224" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>732</SUB>> ]
+"2226" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>732</SUB>> ]
+"2242" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>733</SUB>> ]
+"2244" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>733</SUB>> ]
+"2297" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>743</SUB>> ]
+"2299" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>743</SUB>> ]
+"2301" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>743</SUB>> ]
+"2207" [label = <(METHOD,NewObjectA)<SUB>731</SUB>> ]
+"2363" [label = <(METHOD_RETURN,jobject)<SUB>731</SUB>> ]
   "2213" -> "2218" 
   "2213" -> "2231" 
   "2231" -> "2236" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/490-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/490-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/490-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/490-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;" {  
-"15946" [label = <(METHOD,NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;)> ]
-"15950" [label = <(METHOD_RETURN,ANY)> ]
-  "15946" -> "15950" 
+digraph "NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;" {  
+"15943" [label = <(METHOD,NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;)> ]
+"15947" [label = <(METHOD_RETURN,ANY)> ]
+  "15943" -> "15947" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/491-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/491-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/491-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/491-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;" {  
-"15951" [label = <(METHOD,NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;)> ]
-"15955" [label = <(METHOD_RETURN,ANY)> ]
-  "15951" -> "15955" 
+digraph "NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;" {  
+"15948" [label = <(METHOD,NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;)> ]
+"15952" [label = <(METHOD_RETURN,ANY)> ]
+  "15948" -> "15952" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/492-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/492-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/492-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/492-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;" {  
-"15956" [label = <(METHOD,NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;)> ]
-"15960" [label = <(METHOD_RETURN,ANY)> ]
-  "15956" -> "15960" 
+digraph "NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;" {  
+"15953" [label = <(METHOD,NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;)> ]
+"15957" [label = <(METHOD_RETURN,ANY)> ]
+  "15953" -> "15957" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/493-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/493-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/493-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/493-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;" {  
-"15961" [label = <(METHOD,NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;)> ]
-"15965" [label = <(METHOD_RETURN,ANY)> ]
-  "15961" -> "15965" 
+digraph "NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;" {  
+"15958" [label = <(METHOD,NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;)> ]
+"15962" [label = <(METHOD_RETURN,ANY)> ]
+  "15958" -> "15962" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/494-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/494-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/494-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/494-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;" {  
-"15966" [label = <(METHOD,NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;)> ]
-"15970" [label = <(METHOD_RETURN,ANY)> ]
-  "15966" -> "15970" 
+digraph "NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;" {  
+"15963" [label = <(METHOD,NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;)> ]
+"15967" [label = <(METHOD_RETURN,ANY)> ]
+  "15963" -> "15967" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/495-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/495-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/495-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/495-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;" {  
-"15971" [label = <(METHOD,NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;)> ]
-"15975" [label = <(METHOD_RETURN,ANY)> ]
-  "15971" -> "15975" 
+digraph "NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;" {  
+"15968" [label = <(METHOD,NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;)> ]
+"15972" [label = <(METHOD_RETURN,ANY)> ]
+  "15968" -> "15972" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/496-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/496-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/496-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/496-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;" {  
-"15976" [label = <(METHOD,NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;)> ]
-"15980" [label = <(METHOD_RETURN,ANY)> ]
-  "15976" -> "15980" 
+digraph "CHECK_NON_NULL_ARGUMENT(element_jclass)" {  
+"15973" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(element_jclass))> ]
+"15978" [label = <(METHOD_RETURN,ANY)> ]
+  "15973" -> "15978" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/497-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/497-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/497-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/497-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(element_jclass)" {  
-"15981" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(element_jclass))> ]
-"15986" [label = <(METHOD_RETURN,ANY)> ]
-  "15981" -> "15986" 
+digraph "IsPrimitive" {  
+"15979" [label = <(METHOD,IsPrimitive)> ]
+"15982" [label = <(METHOD_RETURN,ANY)> ]
+  "15979" -> "15982" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/498-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/498-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/498-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/498-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "IsPrimitive" {  
-"15987" [label = <(METHOD,IsPrimitive)> ]
-"15990" [label = <(METHOD_RETURN,ANY)> ]
-  "15987" -> "15990" 
+digraph "PrettyDescriptor" {  
+"15983" [label = <(METHOD,PrettyDescriptor)> ]
+"15986" [label = <(METHOD_RETURN,ANY)> ]
+  "15983" -> "15986" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/499-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/499-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/499-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/499-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyDescriptor" {  
-"15991" [label = <(METHOD,PrettyDescriptor)> ]
-"15994" [label = <(METHOD_RETURN,ANY)> ]
-  "15991" -> "15994" 
+digraph "FindArrayClass" {  
+"15987" [label = <(METHOD,FindArrayClass)> ]
+"15992" [label = <(METHOD_RETURN,ANY)> ]
+  "15987" -> "15992" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/5-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/5-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/5-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/5-cfg.dot	2023-06-07 19:34:28.537390229 +0330
@@ -1,34 +1,34 @@
 digraph "NormalizeJniClassDescriptor" {  
-"269" [label = <(RETURN,return result;,return result;)<SUB>170</SUB>> ]
-"212" [label = <(&lt;operator&gt;.equals,name[0] == '[')<SUB>157</SUB>> ]
-"233" [label = <(&lt;operator&gt;.notEquals,result.find('.') != std::string::npos)<SUB>165</SUB>> ]
-"213" [label = <(&lt;operator&gt;.indirectIndexAccess,name[0])<SUB>157</SUB>> ]
-"218" [label = <(&lt;operator&gt;.assignment,result = name)<SUB>158</SUB>> ]
-"234" [label = <(find,result.find('.'))<SUB>165</SUB>> ]
-"239" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>165</SUB>> ]
-"245" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot;&quot;)<SUB>166</SUB>> ]
-"255" [label = <(std::replace,std::replace(result.begin(), result.end(), '.', '/'))<SUB>168</SUB>> ]
-"223" [label = <(&lt;operator&gt;.assignmentPlus,result += 'L')<SUB>160</SUB>> ]
-"226" [label = <(&lt;operator&gt;.assignmentPlus,result += name)<SUB>161</SUB>> ]
-"229" [label = <(&lt;operator&gt;.assignmentPlus,result += ';')<SUB>162</SUB>> ]
-"235" [label = <(&lt;operator&gt;.fieldAccess,result.find)<SUB>165</SUB>> ]
-"240" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>165</SUB>> ]
-"243" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>165</SUB>> ]
-"246" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name)<SUB>166</SUB>> ]
-"256" [label = <(&lt;operator&gt;.fieldAccess,std::replace)<SUB>168</SUB>> ]
-"259" [label = <(begin,result.begin())<SUB>168</SUB>> ]
-"263" [label = <(end,result.end())<SUB>168</SUB>> ]
-"237" [label = <(FIELD_IDENTIFIER,find,find)<SUB>165</SUB>> ]
-"247" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot;)<SUB>166</SUB>> ]
-"258" [label = <(FIELD_IDENTIFIER,replace,replace)<SUB>168</SUB>> ]
-"260" [label = <(&lt;operator&gt;.fieldAccess,result.begin)<SUB>168</SUB>> ]
-"264" [label = <(&lt;operator&gt;.fieldAccess,result.end)<SUB>168</SUB>> ]
-"248" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;)<SUB>166</SUB>> ]
-"262" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>168</SUB>> ]
-"266" [label = <(FIELD_IDENTIFIER,end,end)<SUB>168</SUB>> ]
-"249" [label = <(LOG,LOG(WARNING))<SUB>166</SUB>> ]
-"207" [label = <(METHOD,NormalizeJniClassDescriptor)<SUB>154</SUB>> ]
-"271" [label = <(METHOD_RETURN,string)<SUB>154</SUB>> ]
+"269" [label = <(RETURN,return result;,return result;)<SUB>169</SUB>> ]
+"212" [label = <(&lt;operator&gt;.equals,name[0] == '[')<SUB>156</SUB>> ]
+"233" [label = <(&lt;operator&gt;.notEquals,result.find('.') != std::string::npos)<SUB>164</SUB>> ]
+"213" [label = <(&lt;operator&gt;.indirectIndexAccess,name[0])<SUB>156</SUB>> ]
+"218" [label = <(&lt;operator&gt;.assignment,result = name)<SUB>157</SUB>> ]
+"234" [label = <(find,result.find('.'))<SUB>164</SUB>> ]
+"239" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>164</SUB>> ]
+"245" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot;&quot;)<SUB>165</SUB>> ]
+"255" [label = <(std::replace,std::replace(result.begin(), result.end(), '.', '/'))<SUB>167</SUB>> ]
+"223" [label = <(&lt;operator&gt;.assignmentPlus,result += 'L')<SUB>159</SUB>> ]
+"226" [label = <(&lt;operator&gt;.assignmentPlus,result += name)<SUB>160</SUB>> ]
+"229" [label = <(&lt;operator&gt;.assignmentPlus,result += ';')<SUB>161</SUB>> ]
+"235" [label = <(&lt;operator&gt;.fieldAccess,result.find)<SUB>164</SUB>> ]
+"240" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>164</SUB>> ]
+"243" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>164</SUB>> ]
+"246" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name)<SUB>165</SUB>> ]
+"256" [label = <(&lt;operator&gt;.fieldAccess,std::replace)<SUB>167</SUB>> ]
+"259" [label = <(begin,result.begin())<SUB>167</SUB>> ]
+"263" [label = <(end,result.end())<SUB>167</SUB>> ]
+"237" [label = <(FIELD_IDENTIFIER,find,find)<SUB>164</SUB>> ]
+"247" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot;)<SUB>165</SUB>> ]
+"258" [label = <(FIELD_IDENTIFIER,replace,replace)<SUB>167</SUB>> ]
+"260" [label = <(&lt;operator&gt;.fieldAccess,result.begin)<SUB>167</SUB>> ]
+"264" [label = <(&lt;operator&gt;.fieldAccess,result.end)<SUB>167</SUB>> ]
+"248" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;)<SUB>165</SUB>> ]
+"262" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>167</SUB>> ]
+"266" [label = <(FIELD_IDENTIFIER,end,end)<SUB>167</SUB>> ]
+"249" [label = <(LOG,LOG(WARNING))<SUB>165</SUB>> ]
+"207" [label = <(METHOD,NormalizeJniClassDescriptor)<SUB>153</SUB>> ]
+"271" [label = <(METHOD_RETURN,string)<SUB>153</SUB>> ]
   "269" -> "271" 
   "212" -> "218" 
   "212" -> "223" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/50-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/50-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/50-cfg.dot	2023-06-07 19:34:22.047390834 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/50-cfg.dot	2023-06-07 19:34:28.577390224 +0330
@@ -1,33 +1,33 @@
 digraph "GetMethodID" {  
-"2371" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>760</SUB>> ]
-"2389" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>761</SUB>> ]
-"2407" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>762</SUB>> ]
-"2426" [label = <(soa,soa(env))<SUB>763</SUB>> ]
-"2428" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, false);,return FindMethodID(soa, java_class, name, sig, false);)<SUB>764</SUB>> ]
-"2429" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, false))<SUB>764</SUB>> ]
-"2375" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>760</SUB>> ]
-"2393" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>761</SUB>> ]
-"2411" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>762</SUB>> ]
-"2376" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>760</SUB>> ]
-"2380" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>760</SUB>> ]
-"2387" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>760</SUB>> ]
-"2394" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>761</SUB>> ]
-"2398" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;name == null&quot;))<SUB>761</SUB>> ]
-"2405" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>761</SUB>> ]
-"2412" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>762</SUB>> ]
-"2416" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;sig == null&quot;))<SUB>762</SUB>> ]
-"2423" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>762</SUB>> ]
-"2381" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>760</SUB>> ]
-"2399" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>761</SUB>> ]
-"2417" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>762</SUB>> ]
-"2382" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>760</SUB>> ]
-"2384" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>760</SUB>> ]
-"2400" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>761</SUB>> ]
-"2402" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>761</SUB>> ]
-"2418" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>762</SUB>> ]
-"2420" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>762</SUB>> ]
-"2365" [label = <(METHOD,GetMethodID)<SUB>759</SUB>> ]
-"2435" [label = <(METHOD_RETURN,jmethodID)<SUB>759</SUB>> ]
+"2371" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>759</SUB>> ]
+"2389" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>760</SUB>> ]
+"2407" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>761</SUB>> ]
+"2426" [label = <(soa,soa(env))<SUB>762</SUB>> ]
+"2428" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, false);,return FindMethodID(soa, java_class, name, sig, false);)<SUB>763</SUB>> ]
+"2429" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, false))<SUB>763</SUB>> ]
+"2375" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>759</SUB>> ]
+"2393" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>760</SUB>> ]
+"2411" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>761</SUB>> ]
+"2376" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>759</SUB>> ]
+"2380" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>759</SUB>> ]
+"2387" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>759</SUB>> ]
+"2394" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>760</SUB>> ]
+"2398" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;name == null&quot;))<SUB>760</SUB>> ]
+"2405" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>760</SUB>> ]
+"2412" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>761</SUB>> ]
+"2416" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;sig == null&quot;))<SUB>761</SUB>> ]
+"2423" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>761</SUB>> ]
+"2381" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>759</SUB>> ]
+"2399" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>760</SUB>> ]
+"2417" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>761</SUB>> ]
+"2382" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>759</SUB>> ]
+"2384" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>759</SUB>> ]
+"2400" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>760</SUB>> ]
+"2402" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>760</SUB>> ]
+"2418" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>761</SUB>> ]
+"2420" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>761</SUB>> ]
+"2365" [label = <(METHOD,GetMethodID)<SUB>758</SUB>> ]
+"2435" [label = <(METHOD_RETURN,jmethodID)<SUB>758</SUB>> ]
   "2371" -> "2376" 
   "2371" -> "2389" 
   "2389" -> "2394" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/500-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/500-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/500-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/500-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "FindArrayClass" {  
-"15995" [label = <(METHOD,FindArrayClass)> ]
-"16000" [label = <(METHOD_RETURN,ANY)> ]
-  "15995" -> "16000" 
+digraph "::Alloc" {  
+"15993" [label = <(METHOD,::Alloc)> ]
+"15999" [label = <(METHOD_RETURN,ANY)> ]
+  "15993" -> "15999" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/501-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/501-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/501-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/501-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "::Alloc" {  
-"16001" [label = <(METHOD,::Alloc)> ]
-"16007" [label = <(METHOD_RETURN,ANY)> ]
-  "16001" -> "16007" 
+digraph "GetComponentType" {  
+"16000" [label = <(METHOD,GetComponentType)> ]
+"16003" [label = <(METHOD_RETURN,ANY)> ]
+  "16000" -> "16003" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/502-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/502-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/502-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/502-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetComponentType" {  
-"16008" [label = <(METHOD,GetComponentType)> ]
-"16011" [label = <(METHOD_RETURN,ANY)> ]
-  "16008" -> "16011" 
+digraph "mirror::Class::PrettyDescriptor" {  
+"16004" [label = <(METHOD,mirror::Class::PrettyDescriptor)> ]
+"16008" [label = <(METHOD_RETURN,ANY)> ]
+  "16004" -> "16008" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/503-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/503-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/503-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/503-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::Class::PrettyDescriptor" {  
-"16012" [label = <(METHOD,mirror::Class::PrettyDescriptor)> ]
-"16016" [label = <(METHOD_RETURN,ANY)> ]
-  "16012" -> "16016" 
+digraph "NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;" {  
+"16009" [label = <(METHOD,NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;)> ]
+"16013" [label = <(METHOD_RETURN,ANY)> ]
+  "16009" -> "16013" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/504-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/504-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/504-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/504-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;" {  
-"16017" [label = <(METHOD,NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;)> ]
-"16021" [label = <(METHOD_RETURN,ANY)> ]
-  "16017" -> "16021" 
+digraph "IsPrimitiveArray" {  
+"16014" [label = <(METHOD,IsPrimitiveArray)> ]
+"16017" [label = <(METHOD_RETURN,ANY)> ]
+  "16014" -> "16017" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/505-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/505-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/505-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/505-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "IsPrimitiveArray" {  
-"16022" [label = <(METHOD,IsPrimitiveArray)> ]
-"16025" [label = <(METHOD_RETURN,ANY)> ]
-  "16022" -> "16025" 
+digraph "GetRawData" {  
+"16018" [label = <(METHOD,GetRawData)> ]
+"16023" [label = <(METHOD_RETURN,ANY)> ]
+  "16018" -> "16023" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/506-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/506-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/506-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/506-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetRawData" {  
-"16026" [label = <(METHOD,GetRawData)> ]
-"16031" [label = <(METHOD_RETURN,ANY)> ]
-  "16026" -> "16031" 
+digraph "GetComponentSize" {  
+"16024" [label = <(METHOD,GetComponentSize)> ]
+"16027" [label = <(METHOD_RETURN,ANY)> ]
+  "16024" -> "16027" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/507-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/507-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/507-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/507-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetComponentSize" {  
-"16032" [label = <(METHOD,GetComponentSize)> ]
-"16035" [label = <(METHOD_RETURN,ANY)> ]
-  "16032" -> "16035" 
+digraph "GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16028" [label = <(METHOD,GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+"16033" [label = <(METHOD_RETURN,ANY)> ]
+  "16028" -> "16033" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/508-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/508-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/508-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/508-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16036" [label = <(METHOD,GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
-"16041" [label = <(METHOD_RETURN,ANY)> ]
-  "16036" -> "16041" 
+digraph "GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16034" [label = <(METHOD,GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+"16039" [label = <(METHOD_RETURN,ANY)> ]
+  "16034" -> "16039" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/509-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/509-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/509-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/509-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16042" [label = <(METHOD,GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
-"16047" [label = <(METHOD_RETURN,ANY)> ]
-  "16042" -> "16047" 
+digraph "GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16040" [label = <(METHOD,GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+"16045" [label = <(METHOD_RETURN,ANY)> ]
+  "16040" -> "16045" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/51-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/51-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/51-cfg.dot	2023-06-07 19:34:22.057390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/51-cfg.dot	2023-06-07 19:34:28.577390224 +0330
@@ -1,33 +1,33 @@
 digraph "GetStaticMethodID" {  
-"2443" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>769</SUB>> ]
-"2461" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>770</SUB>> ]
-"2479" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>771</SUB>> ]
-"2498" [label = <(soa,soa(env))<SUB>772</SUB>> ]
-"2500" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, true);,return FindMethodID(soa, java_class, name, sig, true);)<SUB>773</SUB>> ]
-"2501" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, true))<SUB>773</SUB>> ]
-"2447" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>769</SUB>> ]
-"2465" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>770</SUB>> ]
-"2483" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>771</SUB>> ]
-"2448" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>769</SUB>> ]
-"2452" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>769</SUB>> ]
-"2459" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>769</SUB>> ]
-"2466" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>770</SUB>> ]
-"2470" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;name == null&quot;))<SUB>770</SUB>> ]
-"2477" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>770</SUB>> ]
-"2484" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>771</SUB>> ]
-"2488" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;sig == null&quot;))<SUB>771</SUB>> ]
-"2495" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>771</SUB>> ]
-"2453" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>769</SUB>> ]
-"2471" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>770</SUB>> ]
-"2489" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>771</SUB>> ]
-"2454" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>769</SUB>> ]
-"2456" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>769</SUB>> ]
-"2472" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>770</SUB>> ]
-"2474" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>770</SUB>> ]
-"2490" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>771</SUB>> ]
-"2492" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>771</SUB>> ]
-"2437" [label = <(METHOD,GetStaticMethodID)<SUB>767</SUB>> ]
-"2507" [label = <(METHOD_RETURN,jmethodID)<SUB>767</SUB>> ]
+"2443" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>768</SUB>> ]
+"2461" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>769</SUB>> ]
+"2479" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>770</SUB>> ]
+"2498" [label = <(soa,soa(env))<SUB>771</SUB>> ]
+"2500" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, true);,return FindMethodID(soa, java_class, name, sig, true);)<SUB>772</SUB>> ]
+"2501" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, true))<SUB>772</SUB>> ]
+"2447" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>768</SUB>> ]
+"2465" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>769</SUB>> ]
+"2483" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>770</SUB>> ]
+"2448" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>768</SUB>> ]
+"2452" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;java_class == null&quot;))<SUB>768</SUB>> ]
+"2459" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>768</SUB>> ]
+"2466" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>769</SUB>> ]
+"2470" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;name == null&quot;))<SUB>769</SUB>> ]
+"2477" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>769</SUB>> ]
+"2484" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>770</SUB>> ]
+"2488" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;sig == null&quot;))<SUB>770</SUB>> ]
+"2495" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>770</SUB>> ]
+"2453" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>768</SUB>> ]
+"2471" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>769</SUB>> ]
+"2489" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>770</SUB>> ]
+"2454" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>768</SUB>> ]
+"2456" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>768</SUB>> ]
+"2472" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>769</SUB>> ]
+"2474" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>769</SUB>> ]
+"2490" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>770</SUB>> ]
+"2492" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>770</SUB>> ]
+"2437" [label = <(METHOD,GetStaticMethodID)<SUB>766</SUB>> ]
+"2507" [label = <(METHOD_RETURN,jmethodID)<SUB>766</SUB>> ]
   "2443" -> "2448" 
   "2443" -> "2461" 
   "2461" -> "2466" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/510-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/510-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/510-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/510-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16048" [label = <(METHOD,GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
-"16053" [label = <(METHOD_RETURN,ANY)> ]
-  "16048" -> "16053" 
+digraph "GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16046" [label = <(METHOD,GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+"16051" [label = <(METHOD_RETURN,ANY)> ]
+  "16046" -> "16051" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/511-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/511-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/511-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/511-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16054" [label = <(METHOD,GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
-"16059" [label = <(METHOD_RETURN,ANY)> ]
-  "16054" -> "16059" 
+digraph "GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16052" [label = <(METHOD,GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+"16057" [label = <(METHOD_RETURN,ANY)> ]
+  "16052" -> "16057" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/512-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/512-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/512-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/512-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16060" [label = <(METHOD,GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
-"16065" [label = <(METHOD_RETURN,ANY)> ]
-  "16060" -> "16065" 
+digraph "GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16058" [label = <(METHOD,GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+"16063" [label = <(METHOD_RETURN,ANY)> ]
+  "16058" -> "16063" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/513-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/513-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/513-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/513-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16066" [label = <(METHOD,GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
-"16071" [label = <(METHOD_RETURN,ANY)> ]
-  "16066" -> "16071" 
+digraph "GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16064" [label = <(METHOD,GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+"16069" [label = <(METHOD_RETURN,ANY)> ]
+  "16064" -> "16069" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/514-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/514-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/514-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/514-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16072" [label = <(METHOD,GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
-"16077" [label = <(METHOD_RETURN,ANY)> ]
-  "16072" -> "16077" 
+digraph "GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16070" [label = <(METHOD,GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+"16075" [label = <(METHOD_RETURN,ANY)> ]
+  "16070" -> "16075" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/515-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/515-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/515-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/515-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16078" [label = <(METHOD,GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
-"16083" [label = <(METHOD_RETURN,ANY)> ]
-  "16078" -> "16083" 
+digraph "ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16076" [label = <(METHOD,ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+"16082" [label = <(METHOD_RETURN,ANY)> ]
+  "16076" -> "16082" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/516-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/516-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/516-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/516-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16084" [label = <(METHOD,ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
-"16090" [label = <(METHOD_RETURN,ANY)> ]
-  "16084" -> "16090" 
+digraph "ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16083" [label = <(METHOD,ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+"16089" [label = <(METHOD_RETURN,ANY)> ]
+  "16083" -> "16089" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/517-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/517-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/517-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/517-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16091" [label = <(METHOD,ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
-"16097" [label = <(METHOD_RETURN,ANY)> ]
-  "16091" -> "16097" 
+digraph "ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16090" [label = <(METHOD,ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+"16096" [label = <(METHOD_RETURN,ANY)> ]
+  "16090" -> "16096" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/518-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/518-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/518-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/518-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16098" [label = <(METHOD,ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
-"16104" [label = <(METHOD_RETURN,ANY)> ]
-  "16098" -> "16104" 
+digraph "ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16097" [label = <(METHOD,ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+"16103" [label = <(METHOD_RETURN,ANY)> ]
+  "16097" -> "16103" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/519-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/519-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/519-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/519-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16105" [label = <(METHOD,ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
-"16111" [label = <(METHOD_RETURN,ANY)> ]
-  "16105" -> "16111" 
+digraph "ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16104" [label = <(METHOD,ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+"16110" [label = <(METHOD_RETURN,ANY)> ]
+  "16104" -> "16110" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/52-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/52-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/52-cfg.dot	2023-06-07 19:34:22.057390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/52-cfg.dot	2023-06-07 19:34:28.577390224 +0330
@@ -1,35 +1,35 @@
 digraph "CallObjectMethod" {  
-"2515" [label = <(va_start,va_start(ap, mid))<SUB>778</SUB>> ]
-"2518" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>779</SUB>> ]
-"2536" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>780</SUB>> ]
-"2555" [label = <(soa,soa(env))<SUB>781</SUB>> ]
-"2558" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>782</SUB>> ]
-"2564" [label = <(va_end,va_end(ap))<SUB>783</SUB>> ]
-"2566" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>784</SUB>> ]
-"2559" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>782</SUB>> ]
-"2567" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>784</SUB>> ]
-"2568" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>784</SUB>> ]
-"2573" [label = <(GetL,result.GetL())<SUB>784</SUB>> ]
-"2522" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>779</SUB>> ]
-"2540" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>780</SUB>> ]
-"2569" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>784</SUB>> ]
-"2574" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>784</SUB>> ]
-"2523" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>779</SUB>> ]
-"2527" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>779</SUB>> ]
-"2534" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>779</SUB>> ]
-"2541" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>780</SUB>> ]
-"2545" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>780</SUB>> ]
-"2552" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>780</SUB>> ]
-"2571" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>784</SUB>> ]
-"2576" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>784</SUB>> ]
-"2528" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>779</SUB>> ]
-"2546" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>780</SUB>> ]
-"2529" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>779</SUB>> ]
-"2531" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>779</SUB>> ]
-"2547" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>780</SUB>> ]
-"2549" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>780</SUB>> ]
-"2509" [label = <(METHOD,CallObjectMethod)<SUB>776</SUB>> ]
-"2577" [label = <(METHOD_RETURN,jobject)<SUB>776</SUB>> ]
+"2515" [label = <(va_start,va_start(ap, mid))<SUB>777</SUB>> ]
+"2518" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>778</SUB>> ]
+"2536" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>779</SUB>> ]
+"2555" [label = <(soa,soa(env))<SUB>780</SUB>> ]
+"2558" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>781</SUB>> ]
+"2564" [label = <(va_end,va_end(ap))<SUB>782</SUB>> ]
+"2566" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>783</SUB>> ]
+"2559" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>781</SUB>> ]
+"2567" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>783</SUB>> ]
+"2568" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>783</SUB>> ]
+"2573" [label = <(GetL,result.GetL())<SUB>783</SUB>> ]
+"2522" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>778</SUB>> ]
+"2540" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>779</SUB>> ]
+"2569" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>783</SUB>> ]
+"2574" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>783</SUB>> ]
+"2523" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>778</SUB>> ]
+"2527" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>778</SUB>> ]
+"2534" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>778</SUB>> ]
+"2541" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>779</SUB>> ]
+"2545" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>779</SUB>> ]
+"2552" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>779</SUB>> ]
+"2571" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>783</SUB>> ]
+"2576" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>783</SUB>> ]
+"2528" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>778</SUB>> ]
+"2546" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>779</SUB>> ]
+"2529" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>778</SUB>> ]
+"2531" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>778</SUB>> ]
+"2547" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>779</SUB>> ]
+"2549" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>779</SUB>> ]
+"2509" [label = <(METHOD,CallObjectMethod)<SUB>775</SUB>> ]
+"2577" [label = <(METHOD_RETURN,jobject)<SUB>775</SUB>> ]
   "2515" -> "2518" 
   "2518" -> "2523" 
   "2518" -> "2536" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/520-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/520-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/520-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/520-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16112" [label = <(METHOD,ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
-"16118" [label = <(METHOD_RETURN,ANY)> ]
-  "16112" -> "16118" 
+digraph "ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16111" [label = <(METHOD,ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+"16117" [label = <(METHOD_RETURN,ANY)> ]
+  "16111" -> "16117" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/521-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/521-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/521-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/521-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16119" [label = <(METHOD,ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
-"16125" [label = <(METHOD_RETURN,ANY)> ]
-  "16119" -> "16125" 
+digraph "ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16118" [label = <(METHOD,ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+"16124" [label = <(METHOD_RETURN,ANY)> ]
+  "16118" -> "16124" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/522-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/522-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/522-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/522-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16126" [label = <(METHOD,ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
-"16132" [label = <(METHOD_RETURN,ANY)> ]
-  "16126" -> "16132" 
+digraph "ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16125" [label = <(METHOD,ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+"16131" [label = <(METHOD_RETURN,ANY)> ]
+  "16125" -> "16131" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/523-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/523-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/523-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/523-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16133" [label = <(METHOD,ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16132" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
 "16139" [label = <(METHOD_RETURN,ANY)> ]
-  "16133" -> "16139" 
+  "16132" -> "16139" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/524-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/524-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/524-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/524-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16140" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16140" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
 "16147" [label = <(METHOD_RETURN,ANY)> ]
   "16140" -> "16147" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/525-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/525-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/525-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/525-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16148" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16148" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
 "16155" [label = <(METHOD_RETURN,ANY)> ]
   "16148" -> "16155" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/526-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/526-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/526-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/526-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16156" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16156" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
 "16163" [label = <(METHOD_RETURN,ANY)> ]
   "16156" -> "16163" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/527-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/527-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/527-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/527-cfg.dot	2023-06-07 19:34:28.737390212 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16164" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16164" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
 "16171" [label = <(METHOD_RETURN,ANY)> ]
   "16164" -> "16171" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/528-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/528-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/528-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/528-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16172" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16172" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
 "16179" [label = <(METHOD_RETURN,ANY)> ]
   "16172" -> "16179" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/529-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/529-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/529-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/529-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16180" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16180" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
 "16187" [label = <(METHOD_RETURN,ANY)> ]
   "16180" -> "16187" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/53-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/53-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/53-cfg.dot	2023-06-07 19:34:22.057390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/53-cfg.dot	2023-06-07 19:34:28.577390224 +0330
@@ -1,33 +1,33 @@
 digraph "CallObjectMethodV" {  
-"2585" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>788</SUB>> ]
-"2603" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>789</SUB>> ]
-"2622" [label = <(soa,soa(env))<SUB>790</SUB>> ]
-"2625" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args)))<SUB>791</SUB>> ]
-"2631" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>792</SUB>> ]
-"2626" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>791</SUB>> ]
-"2632" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>792</SUB>> ]
-"2633" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>792</SUB>> ]
-"2638" [label = <(GetL,result.GetL())<SUB>792</SUB>> ]
-"2589" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>788</SUB>> ]
-"2607" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>789</SUB>> ]
-"2634" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>792</SUB>> ]
-"2639" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>792</SUB>> ]
-"2590" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>788</SUB>> ]
-"2594" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>788</SUB>> ]
-"2601" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>788</SUB>> ]
-"2608" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>789</SUB>> ]
-"2612" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>789</SUB>> ]
-"2619" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>789</SUB>> ]
-"2636" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>792</SUB>> ]
-"2641" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>792</SUB>> ]
-"2595" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>788</SUB>> ]
-"2613" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>789</SUB>> ]
-"2596" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>788</SUB>> ]
-"2598" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>788</SUB>> ]
-"2614" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>789</SUB>> ]
-"2616" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>789</SUB>> ]
-"2579" [label = <(METHOD,CallObjectMethodV)<SUB>787</SUB>> ]
-"2642" [label = <(METHOD_RETURN,jobject)<SUB>787</SUB>> ]
+"2585" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>787</SUB>> ]
+"2603" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>788</SUB>> ]
+"2622" [label = <(soa,soa(env))<SUB>789</SUB>> ]
+"2625" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args)))<SUB>790</SUB>> ]
+"2631" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>791</SUB>> ]
+"2626" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>790</SUB>> ]
+"2632" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>791</SUB>> ]
+"2633" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>791</SUB>> ]
+"2638" [label = <(GetL,result.GetL())<SUB>791</SUB>> ]
+"2589" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>787</SUB>> ]
+"2607" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>788</SUB>> ]
+"2634" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>791</SUB>> ]
+"2639" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>791</SUB>> ]
+"2590" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>787</SUB>> ]
+"2594" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>787</SUB>> ]
+"2601" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>787</SUB>> ]
+"2608" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>788</SUB>> ]
+"2612" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>788</SUB>> ]
+"2619" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>788</SUB>> ]
+"2636" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>791</SUB>> ]
+"2641" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>791</SUB>> ]
+"2595" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>787</SUB>> ]
+"2613" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>788</SUB>> ]
+"2596" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>787</SUB>> ]
+"2598" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>787</SUB>> ]
+"2614" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>788</SUB>> ]
+"2616" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>788</SUB>> ]
+"2579" [label = <(METHOD,CallObjectMethodV)<SUB>786</SUB>> ]
+"2642" [label = <(METHOD_RETURN,jobject)<SUB>786</SUB>> ]
   "2585" -> "2590" 
   "2585" -> "2603" 
   "2603" -> "2608" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/530-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/530-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/530-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/530-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16188" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16188" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
 "16195" [label = <(METHOD_RETURN,ANY)> ]
   "16188" -> "16195" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/531-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/531-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/531-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/531-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16196" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16196" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
 "16203" [label = <(METHOD_RETURN,ANY)> ]
   "16196" -> "16203" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/532-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/532-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/532-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/532-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16204" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16204" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
 "16211" [label = <(METHOD_RETURN,ANY)> ]
   "16204" -> "16211" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/533-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/533-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/533-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/533-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16212" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16212" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
 "16219" [label = <(METHOD_RETURN,ANY)> ]
   "16212" -> "16219" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/534-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/534-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/534-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/534-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16220" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16220" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
 "16227" [label = <(METHOD_RETURN,ANY)> ]
   "16220" -> "16227" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/535-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/535-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/535-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/535-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16228" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16228" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
 "16235" [label = <(METHOD_RETURN,ANY)> ]
   "16228" -> "16235" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/536-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/536-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/536-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/536-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16236" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16236" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
 "16243" [label = <(METHOD_RETURN,ANY)> ]
   "16236" -> "16243" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/537-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/537-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/537-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/537-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16244" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16244" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
 "16251" [label = <(METHOD_RETURN,ANY)> ]
   "16244" -> "16251" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/538-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/538-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/538-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/538-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16252" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16252" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
 "16259" [label = <(METHOD_RETURN,ANY)> ]
   "16252" -> "16259" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/539-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/539-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/539-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/539-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16260" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
-"16267" [label = <(METHOD_RETURN,ANY)> ]
-  "16260" -> "16267" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME" {  
+"16260" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME)<SUB>397</SUB>> ]
+"16265" [label = <(METHOD_RETURN,ANY)> ]
+  "16260" -> "16265" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/54-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/54-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/54-cfg.dot	2023-06-07 19:34:22.057390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/54-cfg.dot	2023-06-07 19:34:28.577390224 +0330
@@ -1,33 +1,33 @@
 digraph "CallObjectMethodA" {  
-"2650" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>796</SUB>> ]
-"2668" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>797</SUB>> ]
-"2687" [label = <(soa,soa(env))<SUB>798</SUB>> ]
-"2690" [label = <(result,result(InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args)))<SUB>799</SUB>> ]
-"2696" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>800</SUB>> ]
-"2691" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>799</SUB>> ]
-"2697" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>800</SUB>> ]
-"2698" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>800</SUB>> ]
-"2703" [label = <(GetL,result.GetL())<SUB>800</SUB>> ]
-"2654" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>796</SUB>> ]
-"2672" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>797</SUB>> ]
-"2699" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>800</SUB>> ]
-"2704" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>800</SUB>> ]
-"2655" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>796</SUB>> ]
-"2659" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>796</SUB>> ]
-"2666" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>796</SUB>> ]
-"2673" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>797</SUB>> ]
-"2677" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>797</SUB>> ]
-"2684" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>797</SUB>> ]
-"2701" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>800</SUB>> ]
-"2706" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>800</SUB>> ]
-"2660" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>796</SUB>> ]
-"2678" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>797</SUB>> ]
-"2661" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>796</SUB>> ]
-"2663" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>796</SUB>> ]
-"2679" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>797</SUB>> ]
-"2681" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>797</SUB>> ]
-"2644" [label = <(METHOD,CallObjectMethodA)<SUB>795</SUB>> ]
-"2707" [label = <(METHOD_RETURN,jobject)<SUB>795</SUB>> ]
+"2650" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>795</SUB>> ]
+"2668" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>796</SUB>> ]
+"2687" [label = <(soa,soa(env))<SUB>797</SUB>> ]
+"2690" [label = <(result,result(InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args)))<SUB>798</SUB>> ]
+"2696" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>799</SUB>> ]
+"2691" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>798</SUB>> ]
+"2697" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>799</SUB>> ]
+"2698" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>799</SUB>> ]
+"2703" [label = <(GetL,result.GetL())<SUB>799</SUB>> ]
+"2654" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>795</SUB>> ]
+"2672" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>796</SUB>> ]
+"2699" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>799</SUB>> ]
+"2704" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>799</SUB>> ]
+"2655" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>795</SUB>> ]
+"2659" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>795</SUB>> ]
+"2666" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>795</SUB>> ]
+"2673" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>796</SUB>> ]
+"2677" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>796</SUB>> ]
+"2684" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>796</SUB>> ]
+"2701" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>799</SUB>> ]
+"2706" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>799</SUB>> ]
+"2660" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>795</SUB>> ]
+"2678" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>796</SUB>> ]
+"2661" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>795</SUB>> ]
+"2663" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>795</SUB>> ]
+"2679" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>796</SUB>> ]
+"2681" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>796</SUB>> ]
+"2644" [label = <(METHOD,CallObjectMethodA)<SUB>794</SUB>> ]
+"2707" [label = <(METHOD_RETURN,jobject)<SUB>794</SUB>> ]
   "2650" -> "2655" 
   "2650" -> "2668" 
   "2668" -> "2673" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/540-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/540-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/540-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/540-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME" {  
-"16268" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME)<SUB>398</SUB>> ]
-"16273" [label = <(METHOD_RETURN,ANY)> ]
-  "16268" -> "16273" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR)" {  
+"16266" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))> ]
+"16271" [label = <(METHOD_RETURN,ANY)> ]
+  "16266" -> "16271" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/541-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/541-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/541-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/541-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR)" {  
-"16274" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))> ]
-"16279" [label = <(METHOD_RETURN,ANY)> ]
-  "16274" -> "16279" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR)" {  
+"16272" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))> ]
+"16277" [label = <(METHOD_RETURN,ANY)> ]
+  "16272" -> "16277" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/542-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/542-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/542-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/542-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR)" {  
-"16280" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))> ]
-"16285" [label = <(METHOD_RETURN,ANY)> ]
-  "16280" -> "16285" 
+digraph "IsCheckJniEnabled" {  
+"16278" [label = <(METHOD,IsCheckJniEnabled)> ]
+"16281" [label = <(METHOD_RETURN,ANY)> ]
+  "16278" -> "16281" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/543-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/543-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/543-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/543-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "IsCheckJniEnabled" {  
-"16286" [label = <(METHOD,IsCheckJniEnabled)> ]
-"16289" [label = <(METHOD_RETURN,ANY)> ]
-  "16286" -> "16289" 
+digraph "DumpClass" {  
+"16282" [label = <(METHOD,DumpClass)> ]
+"16287" [label = <(METHOD_RETURN,ANY)> ]
+  "16282" -> "16287" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/544-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/544-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/544-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/544-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "DumpClass" {  
-"16290" [label = <(METHOD,DumpClass)> ]
-"16295" [label = <(METHOD_RETURN,ANY)> ]
-  "16290" -> "16295" 
+digraph "LOG_STREAM" {  
+"16288" [label = <(METHOD,LOG_STREAM)> ]
+"16291" [label = <(METHOD_RETURN,ANY)> ]
+  "16288" -> "16291" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/545-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/545-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/545-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/545-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "LOG_STREAM" {  
-"16296" [label = <(METHOD,LOG_STREAM)> ]
-"16299" [label = <(METHOD_RETURN,ANY)> ]
-  "16296" -> "16299" 
+digraph "ToModifiedUtf8" {  
+"16292" [label = <(METHOD,ToModifiedUtf8)> ]
+"16295" [label = <(METHOD_RETURN,ANY)> ]
+  "16292" -> "16295" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/546-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/546-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/546-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/546-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "ToModifiedUtf8" {  
-"16300" [label = <(METHOD,ToModifiedUtf8)> ]
-"16303" [label = <(METHOD_RETURN,ANY)> ]
-  "16300" -> "16303" 
+digraph "GetLocation" {  
+"16296" [label = <(METHOD,GetLocation)> ]
+"16299" [label = <(METHOD_RETURN,ANY)> ]
+  "16296" -> "16299" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/547-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/547-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/547-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/547-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "GetLocation" {  
-"16304" [label = <(METHOD,GetLocation)> ]
-"16307" [label = <(METHOD_RETURN,ANY)> ]
-  "16304" -> "16307" 
+digraph "GetDexCache" {  
+"16300" [label = <(METHOD,GetDexCache)> ]
+"16303" [label = <(METHOD_RETURN,ANY)> ]
+  "16300" -> "16303" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/548-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/548-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/548-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/548-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "GetDexCache" {  
-"16308" [label = <(METHOD,GetDexCache)> ]
+digraph "ThrowNoSuchMethodError" {  
+"16304" [label = <(METHOD,ThrowNoSuchMethodError)> ]
 "16311" [label = <(METHOD_RETURN,ANY)> ]
-  "16308" -> "16311" 
+  "16304" -> "16311" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/549-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/549-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/549-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/549-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "ThrowNoSuchMethodError" {  
-"16312" [label = <(METHOD,ThrowNoSuchMethodError)> ]
-"16319" [label = <(METHOD_RETURN,ANY)> ]
-  "16312" -> "16319" 
+digraph "IsNative" {  
+"16312" [label = <(METHOD,IsNative)> ]
+"16315" [label = <(METHOD_RETURN,ANY)> ]
+  "16312" -> "16315" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/55-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/55-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/55-cfg.dot	2023-06-07 19:34:22.057390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/55-cfg.dot	2023-06-07 19:34:28.577390224 +0330
@@ -1,31 +1,31 @@
 digraph "CallBooleanMethod" {  
-"2715" [label = <(va_start,va_start(ap, mid))<SUB>805</SUB>> ]
-"2718" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>806</SUB>> ]
-"2736" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>807</SUB>> ]
-"2755" [label = <(soa,soa(env))<SUB>808</SUB>> ]
-"2758" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>809</SUB>> ]
-"2764" [label = <(va_end,va_end(ap))<SUB>810</SUB>> ]
-"2766" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>811</SUB>> ]
-"2759" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>809</SUB>> ]
-"2767" [label = <(GetZ,result.GetZ())<SUB>811</SUB>> ]
-"2768" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>811</SUB>> ]
-"2722" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>806</SUB>> ]
-"2740" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>807</SUB>> ]
-"2770" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>811</SUB>> ]
-"2723" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>806</SUB>> ]
-"2727" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>806</SUB>> ]
-"2734" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>806</SUB>> ]
-"2741" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>807</SUB>> ]
-"2745" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>807</SUB>> ]
-"2752" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>807</SUB>> ]
-"2728" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>806</SUB>> ]
-"2746" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>807</SUB>> ]
-"2729" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>806</SUB>> ]
-"2731" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>806</SUB>> ]
-"2747" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>807</SUB>> ]
-"2749" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>807</SUB>> ]
-"2709" [label = <(METHOD,CallBooleanMethod)<SUB>803</SUB>> ]
-"2771" [label = <(METHOD_RETURN,jboolean)<SUB>803</SUB>> ]
+"2715" [label = <(va_start,va_start(ap, mid))<SUB>804</SUB>> ]
+"2718" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>805</SUB>> ]
+"2736" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>806</SUB>> ]
+"2755" [label = <(soa,soa(env))<SUB>807</SUB>> ]
+"2758" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>808</SUB>> ]
+"2764" [label = <(va_end,va_end(ap))<SUB>809</SUB>> ]
+"2766" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>810</SUB>> ]
+"2759" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>808</SUB>> ]
+"2767" [label = <(GetZ,result.GetZ())<SUB>810</SUB>> ]
+"2768" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>810</SUB>> ]
+"2722" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>805</SUB>> ]
+"2740" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>806</SUB>> ]
+"2770" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>810</SUB>> ]
+"2723" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>805</SUB>> ]
+"2727" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>805</SUB>> ]
+"2734" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>805</SUB>> ]
+"2741" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>806</SUB>> ]
+"2745" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>806</SUB>> ]
+"2752" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>806</SUB>> ]
+"2728" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>805</SUB>> ]
+"2746" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>806</SUB>> ]
+"2729" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>805</SUB>> ]
+"2731" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>805</SUB>> ]
+"2747" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>806</SUB>> ]
+"2749" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>806</SUB>> ]
+"2709" [label = <(METHOD,CallBooleanMethod)<SUB>802</SUB>> ]
+"2771" [label = <(METHOD_RETURN,jboolean)<SUB>802</SUB>> ]
   "2715" -> "2718" 
   "2718" -> "2723" 
   "2718" -> "2736" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/550-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/550-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/550-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/550-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "IsNative" {  
-"16320" [label = <(METHOD,IsNative)> ]
-"16323" [label = <(METHOD_RETURN,ANY)> ]
-  "16320" -> "16323" 
+digraph "VLOG" {  
+"16316" [label = <(METHOD,VLOG)> ]
+"16319" [label = <(METHOD_RETURN,ANY)> ]
+  "16316" -> "16319" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/551-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/551-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/551-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/551-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "VLOG" {  
-"16324" [label = <(METHOD,VLOG)> ]
-"16327" [label = <(METHOD_RETURN,ANY)> ]
-  "16324" -> "16327" 
+digraph "PrettyMethod" {  
+"16320" [label = <(METHOD,PrettyMethod)> ]
+"16323" [label = <(METHOD_RETURN,ANY)> ]
+  "16320" -> "16323" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/552-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/552-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/552-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/552-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyMethod" {  
-"16328" [label = <(METHOD,PrettyMethod)> ]
-"16331" [label = <(METHOD_RETURN,ANY)> ]
-  "16328" -> "16331" 
+digraph "RegisterNative" {  
+"16324" [label = <(METHOD,RegisterNative)> ]
+"16329" [label = <(METHOD_RETURN,ANY)> ]
+  "16324" -> "16329" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/553-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/553-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/553-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/553-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "RegisterNative" {  
-"16332" [label = <(METHOD,RegisterNative)> ]
-"16337" [label = <(METHOD_RETURN,ANY)> ]
-  "16332" -> "16337" 
+digraph "UNUSED" {  
+"16330" [label = <(METHOD,UNUSED)> ]
+"16333" [label = <(METHOD_RETURN,ANY)> ]
+  "16330" -> "16333" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/554-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/554-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/554-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/554-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "UNUSED" {  
-"16338" [label = <(METHOD,UNUSED)> ]
-"16341" [label = <(METHOD_RETURN,ANY)> ]
-  "16338" -> "16341" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR)" {  
+"16334" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))> ]
+"16339" [label = <(METHOD_RETURN,ANY)> ]
+  "16334" -> "16339" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/555-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/555-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/555-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/555-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR)" {  
-"16342" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))> ]
-"16347" [label = <(METHOD_RETURN,ANY)> ]
-  "16342" -> "16347" 
+digraph "mirror::Class::PrettyClass" {  
+"16340" [label = <(METHOD,mirror::Class::PrettyClass)> ]
+"16344" [label = <(METHOD_RETURN,ANY)> ]
+  "16340" -> "16344" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/556-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/556-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/556-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/556-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::Class::PrettyClass" {  
-"16348" [label = <(METHOD,mirror::Class::PrettyClass)> ]
-"16352" [label = <(METHOD_RETURN,ANY)> ]
-  "16348" -> "16352" 
+digraph "GetMethods" {  
+"16345" [label = <(METHOD,GetMethods)> ]
+"16349" [label = <(METHOD_RETURN,ANY)> ]
+  "16345" -> "16349" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/557-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/557-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/557-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/557-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "GetMethods" {  
-"16353" [label = <(METHOD,GetMethods)> ]
-"16357" [label = <(METHOD_RETURN,ANY)> ]
-  "16353" -> "16357" 
+digraph "UnregisterNative" {  
+"16350" [label = <(METHOD,UnregisterNative)> ]
+"16353" [label = <(METHOD_RETURN,ANY)> ]
+  "16350" -> "16353" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/558-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/558-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/558-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/558-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "UnregisterNative" {  
-"16358" [label = <(METHOD,UnregisterNative)> ]
-"16361" [label = <(METHOD_RETURN,ANY)> ]
-  "16358" -> "16361" 
+digraph "&lt;operator&gt;.postIncrement" {  
+"16354" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
+"16357" [label = <(METHOD_RETURN,ANY)> ]
+  "16354" -> "16357" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/559-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/559-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/559-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/559-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.postIncrement" {  
-"16362" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
-"16365" [label = <(METHOD_RETURN,ANY)> ]
-  "16362" -> "16365" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR)" {  
+"16358" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))> ]
+"16363" [label = <(METHOD_RETURN,ANY)> ]
+  "16358" -> "16363" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/56-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/56-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/56-cfg.dot	2023-06-07 19:34:22.057390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/56-cfg.dot	2023-06-07 19:34:28.577390224 +0330
@@ -1,28 +1,28 @@
 digraph "CallBooleanMethodV" {  
-"2779" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>815</SUB>> ]
-"2797" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>816</SUB>> ]
-"2816" [label = <(soa,soa(env))<SUB>817</SUB>> ]
-"2818" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>818</SUB>> ]
-"2819" [label = <(GetZ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ())<SUB>818</SUB>> ]
-"2820" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ)<SUB>818</SUB>> ]
-"2783" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>815</SUB>> ]
-"2801" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>816</SUB>> ]
-"2821" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>818</SUB>> ]
-"2826" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>818</SUB>> ]
-"2784" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>815</SUB>> ]
-"2788" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>815</SUB>> ]
-"2795" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>815</SUB>> ]
-"2802" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>816</SUB>> ]
-"2806" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>816</SUB>> ]
-"2813" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>816</SUB>> ]
-"2789" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>815</SUB>> ]
-"2807" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>816</SUB>> ]
-"2790" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>815</SUB>> ]
-"2792" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>815</SUB>> ]
-"2808" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>816</SUB>> ]
-"2810" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>816</SUB>> ]
-"2773" [label = <(METHOD,CallBooleanMethodV)<SUB>814</SUB>> ]
-"2827" [label = <(METHOD_RETURN,jboolean)<SUB>814</SUB>> ]
+"2779" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>814</SUB>> ]
+"2797" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>815</SUB>> ]
+"2816" [label = <(soa,soa(env))<SUB>816</SUB>> ]
+"2818" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>817</SUB>> ]
+"2819" [label = <(GetZ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ())<SUB>817</SUB>> ]
+"2820" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ)<SUB>817</SUB>> ]
+"2783" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>814</SUB>> ]
+"2801" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>815</SUB>> ]
+"2821" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>817</SUB>> ]
+"2826" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>817</SUB>> ]
+"2784" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>814</SUB>> ]
+"2788" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>814</SUB>> ]
+"2795" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>814</SUB>> ]
+"2802" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>815</SUB>> ]
+"2806" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>815</SUB>> ]
+"2813" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>815</SUB>> ]
+"2789" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>814</SUB>> ]
+"2807" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>815</SUB>> ]
+"2790" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>814</SUB>> ]
+"2792" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>814</SUB>> ]
+"2808" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>815</SUB>> ]
+"2810" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>815</SUB>> ]
+"2773" [label = <(METHOD,CallBooleanMethodV)<SUB>813</SUB>> ]
+"2827" [label = <(METHOD_RETURN,jboolean)<SUB>813</SUB>> ]
   "2779" -> "2784" 
   "2779" -> "2797" 
   "2797" -> "2802" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/560-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/560-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/560-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/560-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR)" {  
-"16366" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))> ]
-"16371" [label = <(METHOD_RETURN,ANY)> ]
-  "16366" -> "16371" 
+digraph "GetJavaVM" {  
+"16364" [label = <(METHOD,GetJavaVM)> ]
+"16367" [label = <(METHOD_RETURN,ANY)> ]
+  "16364" -> "16367" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/561-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/561-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/561-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/561-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "GetJavaVM" {  
-"16372" [label = <(METHOD,GetJavaVM)> ]
+digraph "NewObject" {  
+"16368" [label = <(METHOD,NewObject)> ]
 "16375" [label = <(METHOD_RETURN,ANY)> ]
-  "16372" -> "16375" 
+  "16368" -> "16375" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/562-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/562-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/562-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/562-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "NewObject" {  
-"16376" [label = <(METHOD,NewObject)> ]
-"16383" [label = <(METHOD_RETURN,ANY)> ]
-  "16376" -> "16383" 
+digraph "GetLongField" {  
+"16376" [label = <(METHOD,GetLongField)> ]
+"16381" [label = <(METHOD_RETURN,ANY)> ]
+  "16376" -> "16381" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/563-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/563-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/563-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/563-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "GetLongField" {  
-"16384" [label = <(METHOD,GetLongField)> ]
-"16389" [label = <(METHOD_RETURN,ANY)> ]
-  "16384" -> "16389" 
+digraph "GetIntField" {  
+"16382" [label = <(METHOD,GetIntField)> ]
+"16387" [label = <(METHOD_RETURN,ANY)> ]
+  "16382" -> "16387" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/564-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/564-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/564-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/564-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "GetIntField" {  
-"16390" [label = <(METHOD,GetIntField)> ]
-"16395" [label = <(METHOD_RETURN,ANY)> ]
-  "16390" -> "16395" 
+digraph "Capacity" {  
+"16388" [label = <(METHOD,Capacity)> ]
+"16391" [label = <(METHOD_RETURN,ANY)> ]
+  "16388" -> "16391" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/565-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/565-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/565-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/565-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "Capacity" {  
-"16396" [label = <(METHOD,Capacity)> ]
-"16399" [label = <(METHOD_RETURN,ANY)> ]
-  "16396" -> "16399" 
+digraph "ArtT::Alloc" {  
+"16392" [label = <(METHOD,ArtT::Alloc)> ]
+"16397" [label = <(METHOD_RETURN,ANY)> ]
+  "16392" -> "16397" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/566-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/566-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/566-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/566-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "ArtT::Alloc" {  
-"16400" [label = <(METHOD,ArtT::Alloc)> ]
-"16405" [label = <(METHOD_RETURN,ANY)> ]
-  "16400" -> "16405" 
+digraph "DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;" {  
+"16398" [label = <(METHOD,DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;)> ]
+"16404" [label = <(METHOD_RETURN,ANY)> ]
+  "16398" -> "16404" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/567-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/567-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/567-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/567-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;" {  
-"16406" [label = <(METHOD,DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;)> ]
-"16412" [label = <(METHOD_RETURN,ANY)> ]
-  "16406" -> "16412" 
+digraph "GetData" {  
+"16405" [label = <(METHOD,GetData)> ]
+"16408" [label = <(METHOD_RETURN,ANY)> ]
+  "16405" -> "16408" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/568-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/568-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/568-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/568-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "GetData" {  
-"16413" [label = <(METHOD,GetData)> ]
-"16416" [label = <(METHOD_RETURN,ANY)> ]
-  "16413" -> "16416" 
+digraph "DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;" {  
+"16409" [label = <(METHOD,DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;)> ]
+"16415" [label = <(METHOD_RETURN,ANY)> ]
+  "16409" -> "16415" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/569-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/569-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/569-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/569-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;" {  
-"16417" [label = <(METHOD,DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;)> ]
-"16423" [label = <(METHOD_RETURN,ANY)> ]
-  "16417" -> "16423" 
+digraph "&lt;operator&gt;.arrayInitializer" {  
+"16416" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
+"16651" [label = <(METHOD_RETURN,ANY)> ]
+  "16416" -> "16651" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/57-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/57-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/57-cfg.dot	2023-06-07 19:34:22.057390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/57-cfg.dot	2023-06-07 19:34:28.577390224 +0330
@@ -1,28 +1,28 @@
 digraph "CallBooleanMethodA" {  
-"2835" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>822</SUB>> ]
-"2853" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>823</SUB>> ]
-"2872" [label = <(soa,soa(env))<SUB>824</SUB>> ]
-"2874" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();)<SUB>825</SUB>> ]
-"2875" [label = <(GetZ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ())<SUB>825</SUB>> ]
-"2876" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ)<SUB>825</SUB>> ]
-"2839" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>822</SUB>> ]
-"2857" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>823</SUB>> ]
-"2877" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>825</SUB>> ]
-"2882" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>825</SUB>> ]
-"2840" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>822</SUB>> ]
-"2844" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>822</SUB>> ]
-"2851" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>822</SUB>> ]
-"2858" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>823</SUB>> ]
-"2862" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>823</SUB>> ]
-"2869" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>823</SUB>> ]
-"2845" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>822</SUB>> ]
-"2863" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>823</SUB>> ]
-"2846" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>822</SUB>> ]
-"2848" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>822</SUB>> ]
-"2864" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>823</SUB>> ]
-"2866" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>823</SUB>> ]
-"2829" [label = <(METHOD,CallBooleanMethodA)<SUB>821</SUB>> ]
-"2883" [label = <(METHOD_RETURN,jboolean)<SUB>821</SUB>> ]
+"2835" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>821</SUB>> ]
+"2853" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>822</SUB>> ]
+"2872" [label = <(soa,soa(env))<SUB>823</SUB>> ]
+"2874" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();)<SUB>824</SUB>> ]
+"2875" [label = <(GetZ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ())<SUB>824</SUB>> ]
+"2876" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ)<SUB>824</SUB>> ]
+"2839" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>821</SUB>> ]
+"2857" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>822</SUB>> ]
+"2877" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>824</SUB>> ]
+"2882" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>824</SUB>> ]
+"2840" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>821</SUB>> ]
+"2844" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>821</SUB>> ]
+"2851" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>821</SUB>> ]
+"2858" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>822</SUB>> ]
+"2862" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>822</SUB>> ]
+"2869" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>822</SUB>> ]
+"2845" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>821</SUB>> ]
+"2863" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>822</SUB>> ]
+"2846" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>821</SUB>> ]
+"2848" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>821</SUB>> ]
+"2864" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>822</SUB>> ]
+"2866" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>822</SUB>> ]
+"2829" [label = <(METHOD,CallBooleanMethodA)<SUB>820</SUB>> ]
+"2883" [label = <(METHOD_RETURN,jboolean)<SUB>820</SUB>> ]
   "2835" -> "2840" 
   "2835" -> "2853" 
   "2853" -> "2858" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/570-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/570-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/570-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/570-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.arrayInitializer" {  
-"16424" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
-"16659" [label = <(METHOD_RETURN,ANY)> ]
-  "16424" -> "16659" 
+digraph "JNI::RegisterNativeMethods" {  
+"16652" [label = <(METHOD,JNI::RegisterNativeMethods)> ]
+"16660" [label = <(METHOD_RETURN,ANY)> ]
+  "16652" -> "16660" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/571-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/571-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/571-cfg.dot	2023-06-07 19:34:22.227390818 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/571-cfg.dot	2023-06-07 19:34:28.747390210 +0330
@@ -1,5 +1,5 @@
-digraph "JNI::RegisterNativeMethods" {  
-"16660" [label = <(METHOD,JNI::RegisterNativeMethods)> ]
-"16668" [label = <(METHOD_RETURN,ANY)> ]
-  "16660" -> "16668" 
+digraph "UNREACHABLE" {  
+"16661" [label = <(METHOD,UNREACHABLE)> ]
+"16663" [label = <(METHOD_RETURN,ANY)> ]
+  "16661" -> "16663" 
 }
Only in /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out: 572-cfg.dot
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/58-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/58-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/58-cfg.dot	2023-06-07 19:34:22.057390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/58-cfg.dot	2023-06-07 19:34:28.577390224 +0330
@@ -1,31 +1,31 @@
 digraph "CallByteMethod" {  
-"2891" [label = <(va_start,va_start(ap, mid))<SUB>830</SUB>> ]
-"2894" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>831</SUB>> ]
-"2912" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>832</SUB>> ]
-"2931" [label = <(soa,soa(env))<SUB>833</SUB>> ]
-"2934" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>834</SUB>> ]
-"2940" [label = <(va_end,va_end(ap))<SUB>835</SUB>> ]
-"2942" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>836</SUB>> ]
-"2935" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>834</SUB>> ]
-"2943" [label = <(GetB,result.GetB())<SUB>836</SUB>> ]
-"2944" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>836</SUB>> ]
-"2898" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>831</SUB>> ]
-"2916" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>832</SUB>> ]
-"2946" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>836</SUB>> ]
-"2899" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>831</SUB>> ]
-"2903" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>831</SUB>> ]
-"2910" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>831</SUB>> ]
-"2917" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>832</SUB>> ]
-"2921" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>832</SUB>> ]
-"2928" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>832</SUB>> ]
-"2904" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>831</SUB>> ]
-"2922" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>832</SUB>> ]
-"2905" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>831</SUB>> ]
-"2907" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>831</SUB>> ]
-"2923" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>832</SUB>> ]
-"2925" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>832</SUB>> ]
-"2885" [label = <(METHOD,CallByteMethod)<SUB>828</SUB>> ]
-"2947" [label = <(METHOD_RETURN,jbyte)<SUB>828</SUB>> ]
+"2891" [label = <(va_start,va_start(ap, mid))<SUB>829</SUB>> ]
+"2894" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>830</SUB>> ]
+"2912" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>831</SUB>> ]
+"2931" [label = <(soa,soa(env))<SUB>832</SUB>> ]
+"2934" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>833</SUB>> ]
+"2940" [label = <(va_end,va_end(ap))<SUB>834</SUB>> ]
+"2942" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>835</SUB>> ]
+"2935" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>833</SUB>> ]
+"2943" [label = <(GetB,result.GetB())<SUB>835</SUB>> ]
+"2944" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>835</SUB>> ]
+"2898" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>830</SUB>> ]
+"2916" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>831</SUB>> ]
+"2946" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>835</SUB>> ]
+"2899" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>830</SUB>> ]
+"2903" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>830</SUB>> ]
+"2910" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>830</SUB>> ]
+"2917" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>831</SUB>> ]
+"2921" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>831</SUB>> ]
+"2928" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>831</SUB>> ]
+"2904" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>830</SUB>> ]
+"2922" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>831</SUB>> ]
+"2905" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>830</SUB>> ]
+"2907" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>830</SUB>> ]
+"2923" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>831</SUB>> ]
+"2925" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>831</SUB>> ]
+"2885" [label = <(METHOD,CallByteMethod)<SUB>827</SUB>> ]
+"2947" [label = <(METHOD_RETURN,jbyte)<SUB>827</SUB>> ]
   "2891" -> "2894" 
   "2894" -> "2899" 
   "2894" -> "2912" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/59-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/59-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/59-cfg.dot	2023-06-07 19:34:22.057390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/59-cfg.dot	2023-06-07 19:34:28.587390226 +0330
@@ -1,28 +1,28 @@
 digraph "CallByteMethodV" {  
-"2955" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>840</SUB>> ]
-"2973" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>841</SUB>> ]
-"2992" [label = <(soa,soa(env))<SUB>842</SUB>> ]
-"2994" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();)<SUB>843</SUB>> ]
-"2995" [label = <(GetB,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB())<SUB>843</SUB>> ]
-"2996" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB)<SUB>843</SUB>> ]
-"2959" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>840</SUB>> ]
-"2977" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>841</SUB>> ]
-"2997" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>843</SUB>> ]
-"3002" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>843</SUB>> ]
-"2960" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>840</SUB>> ]
-"2964" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>840</SUB>> ]
-"2971" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>840</SUB>> ]
-"2978" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>841</SUB>> ]
-"2982" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>841</SUB>> ]
-"2989" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>841</SUB>> ]
-"2965" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>840</SUB>> ]
-"2983" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>841</SUB>> ]
-"2966" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>840</SUB>> ]
-"2968" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>840</SUB>> ]
-"2984" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>841</SUB>> ]
-"2986" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>841</SUB>> ]
-"2949" [label = <(METHOD,CallByteMethodV)<SUB>839</SUB>> ]
-"3003" [label = <(METHOD_RETURN,jbyte)<SUB>839</SUB>> ]
+"2955" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>839</SUB>> ]
+"2973" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>840</SUB>> ]
+"2992" [label = <(soa,soa(env))<SUB>841</SUB>> ]
+"2994" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();)<SUB>842</SUB>> ]
+"2995" [label = <(GetB,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB())<SUB>842</SUB>> ]
+"2996" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB)<SUB>842</SUB>> ]
+"2959" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>839</SUB>> ]
+"2977" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>840</SUB>> ]
+"2997" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>842</SUB>> ]
+"3002" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>842</SUB>> ]
+"2960" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>839</SUB>> ]
+"2964" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>839</SUB>> ]
+"2971" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>839</SUB>> ]
+"2978" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>840</SUB>> ]
+"2982" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>840</SUB>> ]
+"2989" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>840</SUB>> ]
+"2965" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>839</SUB>> ]
+"2983" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>840</SUB>> ]
+"2966" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>839</SUB>> ]
+"2968" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>839</SUB>> ]
+"2984" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>840</SUB>> ]
+"2986" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>840</SUB>> ]
+"2949" [label = <(METHOD,CallByteMethodV)<SUB>838</SUB>> ]
+"3003" [label = <(METHOD_RETURN,jbyte)<SUB>838</SUB>> ]
   "2955" -> "2960" 
   "2955" -> "2973" 
   "2973" -> "2978" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/6-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/6-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/6-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/6-cfg.dot	2023-06-07 19:34:28.537390229 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowNoSuchMethodError" {  
-"273" [label = <(METHOD,ThrowNoSuchMethodError)<SUB>173</SUB>> ]
-"280" [label = <(METHOD_RETURN,void)<SUB>173</SUB>> ]
+"273" [label = <(METHOD,ThrowNoSuchMethodError)<SUB>172</SUB>> ]
+"280" [label = <(METHOD_RETURN,void)<SUB>172</SUB>> ]
   "273" -> "280" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/60-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/60-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/60-cfg.dot	2023-06-07 19:34:22.057390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/60-cfg.dot	2023-06-07 19:34:28.587390226 +0330
@@ -1,28 +1,28 @@
 digraph "CallByteMethodA" {  
-"3011" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>847</SUB>> ]
-"3029" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>848</SUB>> ]
-"3048" [label = <(soa,soa(env))<SUB>849</SUB>> ]
-"3050" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();)<SUB>850</SUB>> ]
-"3051" [label = <(GetB,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB())<SUB>850</SUB>> ]
-"3052" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB)<SUB>850</SUB>> ]
-"3015" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>847</SUB>> ]
-"3033" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>848</SUB>> ]
-"3053" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>850</SUB>> ]
-"3058" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>850</SUB>> ]
-"3016" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>847</SUB>> ]
-"3020" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>847</SUB>> ]
-"3027" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>847</SUB>> ]
-"3034" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>848</SUB>> ]
-"3038" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>848</SUB>> ]
-"3045" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>848</SUB>> ]
-"3021" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>847</SUB>> ]
-"3039" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>848</SUB>> ]
-"3022" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>847</SUB>> ]
-"3024" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>847</SUB>> ]
-"3040" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>848</SUB>> ]
-"3042" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>848</SUB>> ]
-"3005" [label = <(METHOD,CallByteMethodA)<SUB>846</SUB>> ]
-"3059" [label = <(METHOD_RETURN,jbyte)<SUB>846</SUB>> ]
+"3011" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>846</SUB>> ]
+"3029" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>847</SUB>> ]
+"3048" [label = <(soa,soa(env))<SUB>848</SUB>> ]
+"3050" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();)<SUB>849</SUB>> ]
+"3051" [label = <(GetB,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB())<SUB>849</SUB>> ]
+"3052" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB)<SUB>849</SUB>> ]
+"3015" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>846</SUB>> ]
+"3033" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>847</SUB>> ]
+"3053" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>849</SUB>> ]
+"3058" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>849</SUB>> ]
+"3016" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>846</SUB>> ]
+"3020" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>846</SUB>> ]
+"3027" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>846</SUB>> ]
+"3034" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>847</SUB>> ]
+"3038" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>847</SUB>> ]
+"3045" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>847</SUB>> ]
+"3021" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>846</SUB>> ]
+"3039" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>847</SUB>> ]
+"3022" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>846</SUB>> ]
+"3024" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>846</SUB>> ]
+"3040" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>847</SUB>> ]
+"3042" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>847</SUB>> ]
+"3005" [label = <(METHOD,CallByteMethodA)<SUB>845</SUB>> ]
+"3059" [label = <(METHOD_RETURN,jbyte)<SUB>845</SUB>> ]
   "3011" -> "3016" 
   "3011" -> "3029" 
   "3029" -> "3034" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/61-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/61-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/61-cfg.dot	2023-06-07 19:34:22.067390833 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/61-cfg.dot	2023-06-07 19:34:28.587390226 +0330
@@ -1,31 +1,31 @@
 digraph "CallCharMethod" {  
-"3067" [label = <(va_start,va_start(ap, mid))<SUB>855</SUB>> ]
-"3070" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>856</SUB>> ]
-"3088" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>857</SUB>> ]
-"3107" [label = <(soa,soa(env))<SUB>858</SUB>> ]
-"3110" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>859</SUB>> ]
-"3116" [label = <(va_end,va_end(ap))<SUB>860</SUB>> ]
-"3118" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>861</SUB>> ]
-"3111" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>859</SUB>> ]
-"3119" [label = <(GetC,result.GetC())<SUB>861</SUB>> ]
-"3120" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>861</SUB>> ]
-"3074" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>856</SUB>> ]
-"3092" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>857</SUB>> ]
-"3122" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>861</SUB>> ]
-"3075" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>856</SUB>> ]
-"3079" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>856</SUB>> ]
-"3086" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>856</SUB>> ]
-"3093" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>857</SUB>> ]
-"3097" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>857</SUB>> ]
-"3104" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>857</SUB>> ]
-"3080" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>856</SUB>> ]
-"3098" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>857</SUB>> ]
-"3081" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>856</SUB>> ]
-"3083" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>856</SUB>> ]
-"3099" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>857</SUB>> ]
-"3101" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>857</SUB>> ]
-"3061" [label = <(METHOD,CallCharMethod)<SUB>853</SUB>> ]
-"3123" [label = <(METHOD_RETURN,jchar)<SUB>853</SUB>> ]
+"3067" [label = <(va_start,va_start(ap, mid))<SUB>854</SUB>> ]
+"3070" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>855</SUB>> ]
+"3088" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>856</SUB>> ]
+"3107" [label = <(soa,soa(env))<SUB>857</SUB>> ]
+"3110" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>858</SUB>> ]
+"3116" [label = <(va_end,va_end(ap))<SUB>859</SUB>> ]
+"3118" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>860</SUB>> ]
+"3111" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>858</SUB>> ]
+"3119" [label = <(GetC,result.GetC())<SUB>860</SUB>> ]
+"3120" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>860</SUB>> ]
+"3074" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>855</SUB>> ]
+"3092" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>856</SUB>> ]
+"3122" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>860</SUB>> ]
+"3075" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>855</SUB>> ]
+"3079" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>855</SUB>> ]
+"3086" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>855</SUB>> ]
+"3093" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>856</SUB>> ]
+"3097" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>856</SUB>> ]
+"3104" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>856</SUB>> ]
+"3080" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>855</SUB>> ]
+"3098" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>856</SUB>> ]
+"3081" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>855</SUB>> ]
+"3083" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>855</SUB>> ]
+"3099" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>856</SUB>> ]
+"3101" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>856</SUB>> ]
+"3061" [label = <(METHOD,CallCharMethod)<SUB>852</SUB>> ]
+"3123" [label = <(METHOD_RETURN,jchar)<SUB>852</SUB>> ]
   "3067" -> "3070" 
   "3070" -> "3075" 
   "3070" -> "3088" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/62-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/62-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/62-cfg.dot	2023-06-07 19:34:22.067390833 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/62-cfg.dot	2023-06-07 19:34:28.587390226 +0330
@@ -1,28 +1,28 @@
 digraph "CallCharMethodV" {  
-"3131" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>865</SUB>> ]
-"3149" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>866</SUB>> ]
-"3168" [label = <(soa,soa(env))<SUB>867</SUB>> ]
-"3170" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();)<SUB>868</SUB>> ]
-"3171" [label = <(GetC,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC())<SUB>868</SUB>> ]
-"3172" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC)<SUB>868</SUB>> ]
-"3135" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>865</SUB>> ]
-"3153" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>866</SUB>> ]
-"3173" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>868</SUB>> ]
-"3178" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>868</SUB>> ]
-"3136" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>865</SUB>> ]
-"3140" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>865</SUB>> ]
-"3147" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>865</SUB>> ]
-"3154" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>866</SUB>> ]
-"3158" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>866</SUB>> ]
-"3165" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>866</SUB>> ]
-"3141" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>865</SUB>> ]
-"3159" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>866</SUB>> ]
-"3142" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>865</SUB>> ]
-"3144" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>865</SUB>> ]
-"3160" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>866</SUB>> ]
-"3162" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>866</SUB>> ]
-"3125" [label = <(METHOD,CallCharMethodV)<SUB>864</SUB>> ]
-"3179" [label = <(METHOD_RETURN,jchar)<SUB>864</SUB>> ]
+"3131" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>864</SUB>> ]
+"3149" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>865</SUB>> ]
+"3168" [label = <(soa,soa(env))<SUB>866</SUB>> ]
+"3170" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();)<SUB>867</SUB>> ]
+"3171" [label = <(GetC,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC())<SUB>867</SUB>> ]
+"3172" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC)<SUB>867</SUB>> ]
+"3135" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>864</SUB>> ]
+"3153" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>865</SUB>> ]
+"3173" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>867</SUB>> ]
+"3178" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>867</SUB>> ]
+"3136" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>864</SUB>> ]
+"3140" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>864</SUB>> ]
+"3147" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>864</SUB>> ]
+"3154" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>865</SUB>> ]
+"3158" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>865</SUB>> ]
+"3165" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>865</SUB>> ]
+"3141" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>864</SUB>> ]
+"3159" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>865</SUB>> ]
+"3142" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>864</SUB>> ]
+"3144" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>864</SUB>> ]
+"3160" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>865</SUB>> ]
+"3162" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>865</SUB>> ]
+"3125" [label = <(METHOD,CallCharMethodV)<SUB>863</SUB>> ]
+"3179" [label = <(METHOD_RETURN,jchar)<SUB>863</SUB>> ]
   "3131" -> "3136" 
   "3131" -> "3149" 
   "3149" -> "3154" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/63-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/63-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/63-cfg.dot	2023-06-07 19:34:22.067390833 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/63-cfg.dot	2023-06-07 19:34:28.587390226 +0330
@@ -1,28 +1,28 @@
 digraph "CallCharMethodA" {  
-"3187" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>872</SUB>> ]
-"3205" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>873</SUB>> ]
-"3224" [label = <(soa,soa(env))<SUB>874</SUB>> ]
-"3226" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();)<SUB>875</SUB>> ]
-"3227" [label = <(GetC,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC())<SUB>875</SUB>> ]
-"3228" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC)<SUB>875</SUB>> ]
-"3191" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>872</SUB>> ]
-"3209" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>873</SUB>> ]
-"3229" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>875</SUB>> ]
-"3234" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>875</SUB>> ]
-"3192" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>872</SUB>> ]
-"3196" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>872</SUB>> ]
-"3203" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>872</SUB>> ]
-"3210" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>873</SUB>> ]
-"3214" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>873</SUB>> ]
-"3221" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>873</SUB>> ]
-"3197" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>872</SUB>> ]
-"3215" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>873</SUB>> ]
-"3198" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>872</SUB>> ]
-"3200" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>872</SUB>> ]
-"3216" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>873</SUB>> ]
-"3218" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>873</SUB>> ]
-"3181" [label = <(METHOD,CallCharMethodA)<SUB>871</SUB>> ]
-"3235" [label = <(METHOD_RETURN,jchar)<SUB>871</SUB>> ]
+"3187" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>871</SUB>> ]
+"3205" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>872</SUB>> ]
+"3224" [label = <(soa,soa(env))<SUB>873</SUB>> ]
+"3226" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();)<SUB>874</SUB>> ]
+"3227" [label = <(GetC,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC())<SUB>874</SUB>> ]
+"3228" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC)<SUB>874</SUB>> ]
+"3191" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>871</SUB>> ]
+"3209" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>872</SUB>> ]
+"3229" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>874</SUB>> ]
+"3234" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>874</SUB>> ]
+"3192" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>871</SUB>> ]
+"3196" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>871</SUB>> ]
+"3203" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>871</SUB>> ]
+"3210" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>872</SUB>> ]
+"3214" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>872</SUB>> ]
+"3221" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>872</SUB>> ]
+"3197" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>871</SUB>> ]
+"3215" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>872</SUB>> ]
+"3198" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>871</SUB>> ]
+"3200" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>871</SUB>> ]
+"3216" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>872</SUB>> ]
+"3218" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>872</SUB>> ]
+"3181" [label = <(METHOD,CallCharMethodA)<SUB>870</SUB>> ]
+"3235" [label = <(METHOD_RETURN,jchar)<SUB>870</SUB>> ]
   "3187" -> "3192" 
   "3187" -> "3205" 
   "3205" -> "3210" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/64-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/64-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/64-cfg.dot	2023-06-07 19:34:22.067390833 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/64-cfg.dot	2023-06-07 19:34:28.587390226 +0330
@@ -1,31 +1,31 @@
 digraph "CallDoubleMethod" {  
-"3243" [label = <(va_start,va_start(ap, mid))<SUB>880</SUB>> ]
-"3246" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>881</SUB>> ]
-"3264" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>882</SUB>> ]
-"3283" [label = <(soa,soa(env))<SUB>883</SUB>> ]
-"3286" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>884</SUB>> ]
-"3292" [label = <(va_end,va_end(ap))<SUB>885</SUB>> ]
-"3294" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>886</SUB>> ]
-"3287" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>884</SUB>> ]
-"3295" [label = <(GetD,result.GetD())<SUB>886</SUB>> ]
-"3296" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>886</SUB>> ]
-"3250" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>881</SUB>> ]
-"3268" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>882</SUB>> ]
-"3298" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>886</SUB>> ]
-"3251" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>881</SUB>> ]
-"3255" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>881</SUB>> ]
-"3262" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>881</SUB>> ]
-"3269" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>882</SUB>> ]
-"3273" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>882</SUB>> ]
-"3280" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>882</SUB>> ]
-"3256" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>881</SUB>> ]
-"3274" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>882</SUB>> ]
-"3257" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>881</SUB>> ]
-"3259" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>881</SUB>> ]
-"3275" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>882</SUB>> ]
-"3277" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>882</SUB>> ]
-"3237" [label = <(METHOD,CallDoubleMethod)<SUB>878</SUB>> ]
-"3299" [label = <(METHOD_RETURN,jdouble)<SUB>878</SUB>> ]
+"3243" [label = <(va_start,va_start(ap, mid))<SUB>879</SUB>> ]
+"3246" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>880</SUB>> ]
+"3264" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>881</SUB>> ]
+"3283" [label = <(soa,soa(env))<SUB>882</SUB>> ]
+"3286" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>883</SUB>> ]
+"3292" [label = <(va_end,va_end(ap))<SUB>884</SUB>> ]
+"3294" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>885</SUB>> ]
+"3287" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>883</SUB>> ]
+"3295" [label = <(GetD,result.GetD())<SUB>885</SUB>> ]
+"3296" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>885</SUB>> ]
+"3250" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>880</SUB>> ]
+"3268" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>881</SUB>> ]
+"3298" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>885</SUB>> ]
+"3251" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>880</SUB>> ]
+"3255" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>880</SUB>> ]
+"3262" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>880</SUB>> ]
+"3269" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>881</SUB>> ]
+"3273" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>881</SUB>> ]
+"3280" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>881</SUB>> ]
+"3256" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>880</SUB>> ]
+"3274" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>881</SUB>> ]
+"3257" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>880</SUB>> ]
+"3259" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>880</SUB>> ]
+"3275" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>881</SUB>> ]
+"3277" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>881</SUB>> ]
+"3237" [label = <(METHOD,CallDoubleMethod)<SUB>877</SUB>> ]
+"3299" [label = <(METHOD_RETURN,jdouble)<SUB>877</SUB>> ]
   "3243" -> "3246" 
   "3246" -> "3251" 
   "3246" -> "3264" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/65-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/65-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/65-cfg.dot	2023-06-07 19:34:22.067390833 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/65-cfg.dot	2023-06-07 19:34:28.587390226 +0330
@@ -1,28 +1,28 @@
 digraph "CallDoubleMethodV" {  
-"3307" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>890</SUB>> ]
-"3325" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>891</SUB>> ]
-"3344" [label = <(soa,soa(env))<SUB>892</SUB>> ]
-"3346" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();)<SUB>893</SUB>> ]
-"3347" [label = <(GetD,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD())<SUB>893</SUB>> ]
-"3348" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD)<SUB>893</SUB>> ]
-"3311" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>890</SUB>> ]
-"3329" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>891</SUB>> ]
-"3349" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>893</SUB>> ]
-"3354" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>893</SUB>> ]
-"3312" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>890</SUB>> ]
-"3316" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>890</SUB>> ]
-"3323" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>890</SUB>> ]
-"3330" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>891</SUB>> ]
-"3334" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>891</SUB>> ]
-"3341" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>891</SUB>> ]
-"3317" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>890</SUB>> ]
-"3335" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>891</SUB>> ]
-"3318" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>890</SUB>> ]
-"3320" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>890</SUB>> ]
-"3336" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>891</SUB>> ]
-"3338" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>891</SUB>> ]
-"3301" [label = <(METHOD,CallDoubleMethodV)<SUB>889</SUB>> ]
-"3355" [label = <(METHOD_RETURN,jdouble)<SUB>889</SUB>> ]
+"3307" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>889</SUB>> ]
+"3325" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>890</SUB>> ]
+"3344" [label = <(soa,soa(env))<SUB>891</SUB>> ]
+"3346" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();)<SUB>892</SUB>> ]
+"3347" [label = <(GetD,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD())<SUB>892</SUB>> ]
+"3348" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD)<SUB>892</SUB>> ]
+"3311" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>889</SUB>> ]
+"3329" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>890</SUB>> ]
+"3349" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>892</SUB>> ]
+"3354" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>892</SUB>> ]
+"3312" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>889</SUB>> ]
+"3316" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>889</SUB>> ]
+"3323" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>889</SUB>> ]
+"3330" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>890</SUB>> ]
+"3334" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>890</SUB>> ]
+"3341" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>890</SUB>> ]
+"3317" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>889</SUB>> ]
+"3335" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>890</SUB>> ]
+"3318" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>889</SUB>> ]
+"3320" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>889</SUB>> ]
+"3336" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>890</SUB>> ]
+"3338" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>890</SUB>> ]
+"3301" [label = <(METHOD,CallDoubleMethodV)<SUB>888</SUB>> ]
+"3355" [label = <(METHOD_RETURN,jdouble)<SUB>888</SUB>> ]
   "3307" -> "3312" 
   "3307" -> "3325" 
   "3325" -> "3330" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/66-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/66-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/66-cfg.dot	2023-06-07 19:34:22.067390833 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/66-cfg.dot	2023-06-07 19:34:28.587390226 +0330
@@ -1,28 +1,28 @@
 digraph "CallDoubleMethodA" {  
-"3363" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>897</SUB>> ]
-"3381" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>898</SUB>> ]
-"3400" [label = <(soa,soa(env))<SUB>899</SUB>> ]
-"3402" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();)<SUB>900</SUB>> ]
-"3403" [label = <(GetD,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD())<SUB>900</SUB>> ]
-"3404" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD)<SUB>900</SUB>> ]
-"3367" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>897</SUB>> ]
-"3385" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>898</SUB>> ]
-"3405" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>900</SUB>> ]
-"3410" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>900</SUB>> ]
-"3368" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>897</SUB>> ]
-"3372" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>897</SUB>> ]
-"3379" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>897</SUB>> ]
-"3386" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>898</SUB>> ]
-"3390" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>898</SUB>> ]
-"3397" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>898</SUB>> ]
-"3373" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>897</SUB>> ]
-"3391" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>898</SUB>> ]
-"3374" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>897</SUB>> ]
-"3376" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>897</SUB>> ]
-"3392" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>898</SUB>> ]
-"3394" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>898</SUB>> ]
-"3357" [label = <(METHOD,CallDoubleMethodA)<SUB>896</SUB>> ]
-"3411" [label = <(METHOD_RETURN,jdouble)<SUB>896</SUB>> ]
+"3363" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>896</SUB>> ]
+"3381" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>897</SUB>> ]
+"3400" [label = <(soa,soa(env))<SUB>898</SUB>> ]
+"3402" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();)<SUB>899</SUB>> ]
+"3403" [label = <(GetD,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD())<SUB>899</SUB>> ]
+"3404" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD)<SUB>899</SUB>> ]
+"3367" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>896</SUB>> ]
+"3385" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>897</SUB>> ]
+"3405" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>899</SUB>> ]
+"3410" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>899</SUB>> ]
+"3368" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>896</SUB>> ]
+"3372" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>896</SUB>> ]
+"3379" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>896</SUB>> ]
+"3386" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>897</SUB>> ]
+"3390" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>897</SUB>> ]
+"3397" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>897</SUB>> ]
+"3373" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>896</SUB>> ]
+"3391" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>897</SUB>> ]
+"3374" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>896</SUB>> ]
+"3376" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>896</SUB>> ]
+"3392" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>897</SUB>> ]
+"3394" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>897</SUB>> ]
+"3357" [label = <(METHOD,CallDoubleMethodA)<SUB>895</SUB>> ]
+"3411" [label = <(METHOD_RETURN,jdouble)<SUB>895</SUB>> ]
   "3363" -> "3368" 
   "3363" -> "3381" 
   "3381" -> "3386" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/67-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/67-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/67-cfg.dot	2023-06-07 19:34:22.067390833 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/67-cfg.dot	2023-06-07 19:34:28.587390226 +0330
@@ -1,31 +1,31 @@
 digraph "CallFloatMethod" {  
-"3419" [label = <(va_start,va_start(ap, mid))<SUB>905</SUB>> ]
-"3422" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>906</SUB>> ]
-"3440" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>907</SUB>> ]
-"3459" [label = <(soa,soa(env))<SUB>908</SUB>> ]
-"3462" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>909</SUB>> ]
-"3468" [label = <(va_end,va_end(ap))<SUB>910</SUB>> ]
-"3470" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>911</SUB>> ]
-"3463" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>909</SUB>> ]
-"3471" [label = <(GetF,result.GetF())<SUB>911</SUB>> ]
-"3472" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>911</SUB>> ]
-"3426" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>906</SUB>> ]
-"3444" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>907</SUB>> ]
-"3474" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>911</SUB>> ]
-"3427" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>906</SUB>> ]
-"3431" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>906</SUB>> ]
-"3438" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>906</SUB>> ]
-"3445" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>907</SUB>> ]
-"3449" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>907</SUB>> ]
-"3456" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>907</SUB>> ]
-"3432" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>906</SUB>> ]
-"3450" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>907</SUB>> ]
-"3433" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>906</SUB>> ]
-"3435" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>906</SUB>> ]
-"3451" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>907</SUB>> ]
-"3453" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>907</SUB>> ]
-"3413" [label = <(METHOD,CallFloatMethod)<SUB>903</SUB>> ]
-"3475" [label = <(METHOD_RETURN,jfloat)<SUB>903</SUB>> ]
+"3419" [label = <(va_start,va_start(ap, mid))<SUB>904</SUB>> ]
+"3422" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>905</SUB>> ]
+"3440" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>906</SUB>> ]
+"3459" [label = <(soa,soa(env))<SUB>907</SUB>> ]
+"3462" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>908</SUB>> ]
+"3468" [label = <(va_end,va_end(ap))<SUB>909</SUB>> ]
+"3470" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>910</SUB>> ]
+"3463" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>908</SUB>> ]
+"3471" [label = <(GetF,result.GetF())<SUB>910</SUB>> ]
+"3472" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>910</SUB>> ]
+"3426" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>905</SUB>> ]
+"3444" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>906</SUB>> ]
+"3474" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>910</SUB>> ]
+"3427" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>905</SUB>> ]
+"3431" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>905</SUB>> ]
+"3438" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>905</SUB>> ]
+"3445" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>906</SUB>> ]
+"3449" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>906</SUB>> ]
+"3456" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>906</SUB>> ]
+"3432" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>905</SUB>> ]
+"3450" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>906</SUB>> ]
+"3433" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>905</SUB>> ]
+"3435" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>905</SUB>> ]
+"3451" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>906</SUB>> ]
+"3453" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>906</SUB>> ]
+"3413" [label = <(METHOD,CallFloatMethod)<SUB>902</SUB>> ]
+"3475" [label = <(METHOD_RETURN,jfloat)<SUB>902</SUB>> ]
   "3419" -> "3422" 
   "3422" -> "3427" 
   "3422" -> "3440" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/68-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/68-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/68-cfg.dot	2023-06-07 19:34:22.067390833 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/68-cfg.dot	2023-06-07 19:34:28.587390226 +0330
@@ -1,28 +1,28 @@
 digraph "CallFloatMethodV" {  
-"3483" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>915</SUB>> ]
-"3501" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>916</SUB>> ]
-"3520" [label = <(soa,soa(env))<SUB>917</SUB>> ]
-"3522" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();)<SUB>918</SUB>> ]
-"3523" [label = <(GetF,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF())<SUB>918</SUB>> ]
-"3524" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF)<SUB>918</SUB>> ]
-"3487" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>915</SUB>> ]
-"3505" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>916</SUB>> ]
-"3525" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>918</SUB>> ]
-"3530" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>918</SUB>> ]
-"3488" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>915</SUB>> ]
-"3492" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>915</SUB>> ]
-"3499" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>915</SUB>> ]
-"3506" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>916</SUB>> ]
-"3510" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>916</SUB>> ]
-"3517" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>916</SUB>> ]
-"3493" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>915</SUB>> ]
-"3511" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>916</SUB>> ]
-"3494" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>915</SUB>> ]
-"3496" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>915</SUB>> ]
-"3512" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>916</SUB>> ]
-"3514" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>916</SUB>> ]
-"3477" [label = <(METHOD,CallFloatMethodV)<SUB>914</SUB>> ]
-"3531" [label = <(METHOD_RETURN,jfloat)<SUB>914</SUB>> ]
+"3483" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>914</SUB>> ]
+"3501" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>915</SUB>> ]
+"3520" [label = <(soa,soa(env))<SUB>916</SUB>> ]
+"3522" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();)<SUB>917</SUB>> ]
+"3523" [label = <(GetF,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF())<SUB>917</SUB>> ]
+"3524" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF)<SUB>917</SUB>> ]
+"3487" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>914</SUB>> ]
+"3505" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>915</SUB>> ]
+"3525" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>917</SUB>> ]
+"3530" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>917</SUB>> ]
+"3488" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>914</SUB>> ]
+"3492" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>914</SUB>> ]
+"3499" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>914</SUB>> ]
+"3506" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>915</SUB>> ]
+"3510" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>915</SUB>> ]
+"3517" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>915</SUB>> ]
+"3493" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>914</SUB>> ]
+"3511" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>915</SUB>> ]
+"3494" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>914</SUB>> ]
+"3496" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>914</SUB>> ]
+"3512" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>915</SUB>> ]
+"3514" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>915</SUB>> ]
+"3477" [label = <(METHOD,CallFloatMethodV)<SUB>913</SUB>> ]
+"3531" [label = <(METHOD_RETURN,jfloat)<SUB>913</SUB>> ]
   "3483" -> "3488" 
   "3483" -> "3501" 
   "3501" -> "3506" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/69-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/69-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/69-cfg.dot	2023-06-07 19:34:22.067390833 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/69-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,28 +1,28 @@
 digraph "CallFloatMethodA" {  
-"3539" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>922</SUB>> ]
-"3557" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>923</SUB>> ]
-"3576" [label = <(soa,soa(env))<SUB>924</SUB>> ]
-"3578" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();)<SUB>925</SUB>> ]
-"3579" [label = <(GetF,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF())<SUB>925</SUB>> ]
-"3580" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF)<SUB>925</SUB>> ]
-"3543" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>922</SUB>> ]
-"3561" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>923</SUB>> ]
-"3581" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>925</SUB>> ]
-"3586" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>925</SUB>> ]
-"3544" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>922</SUB>> ]
-"3548" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>922</SUB>> ]
-"3555" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>922</SUB>> ]
-"3562" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>923</SUB>> ]
-"3566" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>923</SUB>> ]
-"3573" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>923</SUB>> ]
-"3549" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>922</SUB>> ]
-"3567" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>923</SUB>> ]
-"3550" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>922</SUB>> ]
-"3552" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>922</SUB>> ]
-"3568" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>923</SUB>> ]
-"3570" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>923</SUB>> ]
-"3533" [label = <(METHOD,CallFloatMethodA)<SUB>921</SUB>> ]
-"3587" [label = <(METHOD_RETURN,jfloat)<SUB>921</SUB>> ]
+"3539" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>921</SUB>> ]
+"3557" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>922</SUB>> ]
+"3576" [label = <(soa,soa(env))<SUB>923</SUB>> ]
+"3578" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();)<SUB>924</SUB>> ]
+"3579" [label = <(GetF,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF())<SUB>924</SUB>> ]
+"3580" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF)<SUB>924</SUB>> ]
+"3543" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>921</SUB>> ]
+"3561" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>922</SUB>> ]
+"3581" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>924</SUB>> ]
+"3586" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>924</SUB>> ]
+"3544" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>921</SUB>> ]
+"3548" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>921</SUB>> ]
+"3555" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>921</SUB>> ]
+"3562" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>922</SUB>> ]
+"3566" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>922</SUB>> ]
+"3573" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>922</SUB>> ]
+"3549" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>921</SUB>> ]
+"3567" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>922</SUB>> ]
+"3550" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>921</SUB>> ]
+"3552" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>921</SUB>> ]
+"3568" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>922</SUB>> ]
+"3570" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>922</SUB>> ]
+"3533" [label = <(METHOD,CallFloatMethodA)<SUB>920</SUB>> ]
+"3587" [label = <(METHOD_RETURN,jfloat)<SUB>920</SUB>> ]
   "3539" -> "3544" 
   "3539" -> "3557" 
   "3557" -> "3562" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/7-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/7-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/7-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/7-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,5 +1,5 @@
 digraph "ReportInvalidJNINativeMethod" {  
-"285" [label = <(METHOD,ReportInvalidJNINativeMethod)<SUB>188</SUB>> ]
-"292" [label = <(METHOD_RETURN,void)<SUB>188</SUB>> ]
+"285" [label = <(METHOD,ReportInvalidJNINativeMethod)<SUB>187</SUB>> ]
+"292" [label = <(METHOD_RETURN,void)<SUB>187</SUB>> ]
   "285" -> "292" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/70-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/70-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/70-cfg.dot	2023-06-07 19:34:22.067390833 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/70-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,31 +1,31 @@
 digraph "CallIntMethod" {  
-"3595" [label = <(va_start,va_start(ap, mid))<SUB>930</SUB>> ]
-"3598" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>931</SUB>> ]
-"3616" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>932</SUB>> ]
-"3635" [label = <(soa,soa(env))<SUB>933</SUB>> ]
-"3638" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>934</SUB>> ]
-"3644" [label = <(va_end,va_end(ap))<SUB>935</SUB>> ]
-"3646" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>936</SUB>> ]
-"3639" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>934</SUB>> ]
-"3647" [label = <(GetI,result.GetI())<SUB>936</SUB>> ]
-"3648" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>936</SUB>> ]
-"3602" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>931</SUB>> ]
-"3620" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>932</SUB>> ]
-"3650" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>936</SUB>> ]
-"3603" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>931</SUB>> ]
-"3607" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>931</SUB>> ]
-"3614" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>931</SUB>> ]
-"3621" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>932</SUB>> ]
-"3625" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>932</SUB>> ]
-"3632" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>932</SUB>> ]
-"3608" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>931</SUB>> ]
-"3626" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>932</SUB>> ]
-"3609" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>931</SUB>> ]
-"3611" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>931</SUB>> ]
-"3627" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>932</SUB>> ]
-"3629" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>932</SUB>> ]
-"3589" [label = <(METHOD,CallIntMethod)<SUB>928</SUB>> ]
-"3651" [label = <(METHOD_RETURN,jint)<SUB>928</SUB>> ]
+"3595" [label = <(va_start,va_start(ap, mid))<SUB>929</SUB>> ]
+"3598" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>930</SUB>> ]
+"3616" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>931</SUB>> ]
+"3635" [label = <(soa,soa(env))<SUB>932</SUB>> ]
+"3638" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>933</SUB>> ]
+"3644" [label = <(va_end,va_end(ap))<SUB>934</SUB>> ]
+"3646" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>935</SUB>> ]
+"3639" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>933</SUB>> ]
+"3647" [label = <(GetI,result.GetI())<SUB>935</SUB>> ]
+"3648" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>935</SUB>> ]
+"3602" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>930</SUB>> ]
+"3620" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>931</SUB>> ]
+"3650" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>935</SUB>> ]
+"3603" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>930</SUB>> ]
+"3607" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>930</SUB>> ]
+"3614" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>930</SUB>> ]
+"3621" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>931</SUB>> ]
+"3625" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>931</SUB>> ]
+"3632" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>931</SUB>> ]
+"3608" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>930</SUB>> ]
+"3626" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>931</SUB>> ]
+"3609" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>930</SUB>> ]
+"3611" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>930</SUB>> ]
+"3627" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>931</SUB>> ]
+"3629" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>931</SUB>> ]
+"3589" [label = <(METHOD,CallIntMethod)<SUB>927</SUB>> ]
+"3651" [label = <(METHOD_RETURN,jint)<SUB>927</SUB>> ]
   "3595" -> "3598" 
   "3598" -> "3603" 
   "3598" -> "3616" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/71-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/71-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/71-cfg.dot	2023-06-07 19:34:22.067390833 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/71-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,28 +1,28 @@
 digraph "CallIntMethodV" {  
-"3659" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>940</SUB>> ]
-"3677" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>941</SUB>> ]
-"3696" [label = <(soa,soa(env))<SUB>942</SUB>> ]
-"3698" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();)<SUB>943</SUB>> ]
-"3699" [label = <(GetI,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI())<SUB>943</SUB>> ]
-"3700" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI)<SUB>943</SUB>> ]
-"3663" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>940</SUB>> ]
-"3681" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>941</SUB>> ]
-"3701" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>943</SUB>> ]
-"3706" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>943</SUB>> ]
-"3664" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>940</SUB>> ]
-"3668" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>940</SUB>> ]
-"3675" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>940</SUB>> ]
-"3682" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>941</SUB>> ]
-"3686" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>941</SUB>> ]
-"3693" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>941</SUB>> ]
-"3669" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>940</SUB>> ]
-"3687" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>941</SUB>> ]
-"3670" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>940</SUB>> ]
-"3672" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>940</SUB>> ]
-"3688" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>941</SUB>> ]
-"3690" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>941</SUB>> ]
-"3653" [label = <(METHOD,CallIntMethodV)<SUB>939</SUB>> ]
-"3707" [label = <(METHOD_RETURN,jint)<SUB>939</SUB>> ]
+"3659" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>939</SUB>> ]
+"3677" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>940</SUB>> ]
+"3696" [label = <(soa,soa(env))<SUB>941</SUB>> ]
+"3698" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();)<SUB>942</SUB>> ]
+"3699" [label = <(GetI,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI())<SUB>942</SUB>> ]
+"3700" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI)<SUB>942</SUB>> ]
+"3663" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>939</SUB>> ]
+"3681" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>940</SUB>> ]
+"3701" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>942</SUB>> ]
+"3706" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>942</SUB>> ]
+"3664" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>939</SUB>> ]
+"3668" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>939</SUB>> ]
+"3675" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>939</SUB>> ]
+"3682" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>940</SUB>> ]
+"3686" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>940</SUB>> ]
+"3693" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>940</SUB>> ]
+"3669" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>939</SUB>> ]
+"3687" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>940</SUB>> ]
+"3670" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>939</SUB>> ]
+"3672" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>939</SUB>> ]
+"3688" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>940</SUB>> ]
+"3690" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>940</SUB>> ]
+"3653" [label = <(METHOD,CallIntMethodV)<SUB>938</SUB>> ]
+"3707" [label = <(METHOD_RETURN,jint)<SUB>938</SUB>> ]
   "3659" -> "3664" 
   "3659" -> "3677" 
   "3677" -> "3682" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/72-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/72-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/72-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/72-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,28 +1,28 @@
 digraph "CallIntMethodA" {  
-"3715" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>947</SUB>> ]
-"3733" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>948</SUB>> ]
-"3752" [label = <(soa,soa(env))<SUB>949</SUB>> ]
-"3754" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();)<SUB>950</SUB>> ]
-"3755" [label = <(GetI,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI())<SUB>950</SUB>> ]
-"3756" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI)<SUB>950</SUB>> ]
-"3719" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>947</SUB>> ]
-"3737" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>948</SUB>> ]
-"3757" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>950</SUB>> ]
-"3762" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>950</SUB>> ]
-"3720" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>947</SUB>> ]
-"3724" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>947</SUB>> ]
-"3731" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>947</SUB>> ]
-"3738" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>948</SUB>> ]
-"3742" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>948</SUB>> ]
-"3749" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>948</SUB>> ]
-"3725" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>947</SUB>> ]
-"3743" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>948</SUB>> ]
-"3726" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>947</SUB>> ]
-"3728" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>947</SUB>> ]
-"3744" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>948</SUB>> ]
-"3746" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>948</SUB>> ]
-"3709" [label = <(METHOD,CallIntMethodA)<SUB>946</SUB>> ]
-"3763" [label = <(METHOD_RETURN,jint)<SUB>946</SUB>> ]
+"3715" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>946</SUB>> ]
+"3733" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>947</SUB>> ]
+"3752" [label = <(soa,soa(env))<SUB>948</SUB>> ]
+"3754" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();)<SUB>949</SUB>> ]
+"3755" [label = <(GetI,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI())<SUB>949</SUB>> ]
+"3756" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI)<SUB>949</SUB>> ]
+"3719" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>946</SUB>> ]
+"3737" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>947</SUB>> ]
+"3757" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>949</SUB>> ]
+"3762" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>949</SUB>> ]
+"3720" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>946</SUB>> ]
+"3724" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>946</SUB>> ]
+"3731" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>946</SUB>> ]
+"3738" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>947</SUB>> ]
+"3742" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>947</SUB>> ]
+"3749" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>947</SUB>> ]
+"3725" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>946</SUB>> ]
+"3743" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>947</SUB>> ]
+"3726" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>946</SUB>> ]
+"3728" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>946</SUB>> ]
+"3744" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>947</SUB>> ]
+"3746" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>947</SUB>> ]
+"3709" [label = <(METHOD,CallIntMethodA)<SUB>945</SUB>> ]
+"3763" [label = <(METHOD_RETURN,jint)<SUB>945</SUB>> ]
   "3715" -> "3720" 
   "3715" -> "3733" 
   "3733" -> "3738" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/73-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/73-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/73-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/73-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,31 +1,31 @@
 digraph "CallLongMethod" {  
-"3771" [label = <(va_start,va_start(ap, mid))<SUB>955</SUB>> ]
-"3774" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>956</SUB>> ]
-"3792" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>957</SUB>> ]
-"3811" [label = <(soa,soa(env))<SUB>958</SUB>> ]
-"3814" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>959</SUB>> ]
-"3820" [label = <(va_end,va_end(ap))<SUB>960</SUB>> ]
-"3822" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>961</SUB>> ]
-"3815" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>959</SUB>> ]
-"3823" [label = <(GetJ,result.GetJ())<SUB>961</SUB>> ]
-"3824" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>961</SUB>> ]
-"3778" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>956</SUB>> ]
-"3796" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>957</SUB>> ]
-"3826" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>961</SUB>> ]
-"3779" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>956</SUB>> ]
-"3783" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>956</SUB>> ]
-"3790" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>956</SUB>> ]
-"3797" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>957</SUB>> ]
-"3801" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>957</SUB>> ]
-"3808" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>957</SUB>> ]
-"3784" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>956</SUB>> ]
-"3802" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>957</SUB>> ]
-"3785" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>956</SUB>> ]
-"3787" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>956</SUB>> ]
-"3803" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>957</SUB>> ]
-"3805" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>957</SUB>> ]
-"3765" [label = <(METHOD,CallLongMethod)<SUB>953</SUB>> ]
-"3827" [label = <(METHOD_RETURN,jlong)<SUB>953</SUB>> ]
+"3771" [label = <(va_start,va_start(ap, mid))<SUB>954</SUB>> ]
+"3774" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>955</SUB>> ]
+"3792" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>956</SUB>> ]
+"3811" [label = <(soa,soa(env))<SUB>957</SUB>> ]
+"3814" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>958</SUB>> ]
+"3820" [label = <(va_end,va_end(ap))<SUB>959</SUB>> ]
+"3822" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>960</SUB>> ]
+"3815" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>958</SUB>> ]
+"3823" [label = <(GetJ,result.GetJ())<SUB>960</SUB>> ]
+"3824" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>960</SUB>> ]
+"3778" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>955</SUB>> ]
+"3796" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>956</SUB>> ]
+"3826" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>960</SUB>> ]
+"3779" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>955</SUB>> ]
+"3783" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>955</SUB>> ]
+"3790" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>955</SUB>> ]
+"3797" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>956</SUB>> ]
+"3801" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>956</SUB>> ]
+"3808" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>956</SUB>> ]
+"3784" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>955</SUB>> ]
+"3802" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>956</SUB>> ]
+"3785" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>955</SUB>> ]
+"3787" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>955</SUB>> ]
+"3803" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>956</SUB>> ]
+"3805" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>956</SUB>> ]
+"3765" [label = <(METHOD,CallLongMethod)<SUB>952</SUB>> ]
+"3827" [label = <(METHOD_RETURN,jlong)<SUB>952</SUB>> ]
   "3771" -> "3774" 
   "3774" -> "3779" 
   "3774" -> "3792" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/74-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/74-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/74-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/74-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,28 +1,28 @@
 digraph "CallLongMethodV" {  
-"3835" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>965</SUB>> ]
-"3853" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>966</SUB>> ]
-"3872" [label = <(soa,soa(env))<SUB>967</SUB>> ]
-"3874" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>968</SUB>> ]
-"3875" [label = <(GetJ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ())<SUB>968</SUB>> ]
-"3876" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ)<SUB>968</SUB>> ]
-"3839" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>965</SUB>> ]
-"3857" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>966</SUB>> ]
-"3877" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>968</SUB>> ]
-"3882" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>968</SUB>> ]
-"3840" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>965</SUB>> ]
-"3844" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>965</SUB>> ]
-"3851" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>965</SUB>> ]
-"3858" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>966</SUB>> ]
-"3862" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>966</SUB>> ]
-"3869" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>966</SUB>> ]
-"3845" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>965</SUB>> ]
-"3863" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>966</SUB>> ]
-"3846" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>965</SUB>> ]
-"3848" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>965</SUB>> ]
-"3864" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>966</SUB>> ]
-"3866" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>966</SUB>> ]
-"3829" [label = <(METHOD,CallLongMethodV)<SUB>964</SUB>> ]
-"3883" [label = <(METHOD_RETURN,jlong)<SUB>964</SUB>> ]
+"3835" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>964</SUB>> ]
+"3853" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>965</SUB>> ]
+"3872" [label = <(soa,soa(env))<SUB>966</SUB>> ]
+"3874" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>967</SUB>> ]
+"3875" [label = <(GetJ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ())<SUB>967</SUB>> ]
+"3876" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ)<SUB>967</SUB>> ]
+"3839" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>964</SUB>> ]
+"3857" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>965</SUB>> ]
+"3877" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>967</SUB>> ]
+"3882" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>967</SUB>> ]
+"3840" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>964</SUB>> ]
+"3844" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>964</SUB>> ]
+"3851" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>964</SUB>> ]
+"3858" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>965</SUB>> ]
+"3862" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>965</SUB>> ]
+"3869" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>965</SUB>> ]
+"3845" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>964</SUB>> ]
+"3863" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>965</SUB>> ]
+"3846" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>964</SUB>> ]
+"3848" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>964</SUB>> ]
+"3864" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>965</SUB>> ]
+"3866" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>965</SUB>> ]
+"3829" [label = <(METHOD,CallLongMethodV)<SUB>963</SUB>> ]
+"3883" [label = <(METHOD_RETURN,jlong)<SUB>963</SUB>> ]
   "3835" -> "3840" 
   "3835" -> "3853" 
   "3853" -> "3858" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/75-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/75-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/75-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/75-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,28 +1,28 @@
 digraph "CallLongMethodA" {  
-"3891" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>972</SUB>> ]
-"3909" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>973</SUB>> ]
-"3928" [label = <(soa,soa(env))<SUB>974</SUB>> ]
-"3930" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();)<SUB>975</SUB>> ]
-"3931" [label = <(GetJ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ())<SUB>975</SUB>> ]
-"3932" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ)<SUB>975</SUB>> ]
-"3895" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>972</SUB>> ]
-"3913" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>973</SUB>> ]
-"3933" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>975</SUB>> ]
-"3938" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>975</SUB>> ]
-"3896" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>972</SUB>> ]
-"3900" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>972</SUB>> ]
-"3907" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>972</SUB>> ]
-"3914" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>973</SUB>> ]
-"3918" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>973</SUB>> ]
-"3925" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>973</SUB>> ]
-"3901" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>972</SUB>> ]
-"3919" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>973</SUB>> ]
-"3902" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>972</SUB>> ]
-"3904" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>972</SUB>> ]
-"3920" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>973</SUB>> ]
-"3922" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>973</SUB>> ]
-"3885" [label = <(METHOD,CallLongMethodA)<SUB>971</SUB>> ]
-"3939" [label = <(METHOD_RETURN,jlong)<SUB>971</SUB>> ]
+"3891" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>971</SUB>> ]
+"3909" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>972</SUB>> ]
+"3928" [label = <(soa,soa(env))<SUB>973</SUB>> ]
+"3930" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();)<SUB>974</SUB>> ]
+"3931" [label = <(GetJ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ())<SUB>974</SUB>> ]
+"3932" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ)<SUB>974</SUB>> ]
+"3895" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>971</SUB>> ]
+"3913" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>972</SUB>> ]
+"3933" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>974</SUB>> ]
+"3938" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>974</SUB>> ]
+"3896" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>971</SUB>> ]
+"3900" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>971</SUB>> ]
+"3907" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>971</SUB>> ]
+"3914" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>972</SUB>> ]
+"3918" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>972</SUB>> ]
+"3925" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>972</SUB>> ]
+"3901" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>971</SUB>> ]
+"3919" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>972</SUB>> ]
+"3902" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>971</SUB>> ]
+"3904" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>971</SUB>> ]
+"3920" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>972</SUB>> ]
+"3922" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>972</SUB>> ]
+"3885" [label = <(METHOD,CallLongMethodA)<SUB>970</SUB>> ]
+"3939" [label = <(METHOD_RETURN,jlong)<SUB>970</SUB>> ]
   "3891" -> "3896" 
   "3891" -> "3909" 
   "3909" -> "3914" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/76-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/76-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/76-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/76-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,31 +1,31 @@
 digraph "CallShortMethod" {  
-"3947" [label = <(va_start,va_start(ap, mid))<SUB>980</SUB>> ]
-"3950" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>981</SUB>> ]
-"3968" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>982</SUB>> ]
-"3987" [label = <(soa,soa(env))<SUB>983</SUB>> ]
-"3990" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>984</SUB>> ]
-"3996" [label = <(va_end,va_end(ap))<SUB>985</SUB>> ]
-"3998" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>986</SUB>> ]
-"3991" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>984</SUB>> ]
-"3999" [label = <(GetS,result.GetS())<SUB>986</SUB>> ]
-"4000" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>986</SUB>> ]
-"3954" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>981</SUB>> ]
-"3972" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>982</SUB>> ]
-"4002" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>986</SUB>> ]
-"3955" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>981</SUB>> ]
-"3959" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>981</SUB>> ]
-"3966" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>981</SUB>> ]
-"3973" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>982</SUB>> ]
-"3977" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>982</SUB>> ]
-"3984" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>982</SUB>> ]
-"3960" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>981</SUB>> ]
-"3978" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>982</SUB>> ]
-"3961" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>981</SUB>> ]
-"3963" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>981</SUB>> ]
-"3979" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>982</SUB>> ]
-"3981" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>982</SUB>> ]
-"3941" [label = <(METHOD,CallShortMethod)<SUB>978</SUB>> ]
-"4003" [label = <(METHOD_RETURN,jshort)<SUB>978</SUB>> ]
+"3947" [label = <(va_start,va_start(ap, mid))<SUB>979</SUB>> ]
+"3950" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>980</SUB>> ]
+"3968" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>981</SUB>> ]
+"3987" [label = <(soa,soa(env))<SUB>982</SUB>> ]
+"3990" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>983</SUB>> ]
+"3996" [label = <(va_end,va_end(ap))<SUB>984</SUB>> ]
+"3998" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>985</SUB>> ]
+"3991" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>983</SUB>> ]
+"3999" [label = <(GetS,result.GetS())<SUB>985</SUB>> ]
+"4000" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>985</SUB>> ]
+"3954" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>980</SUB>> ]
+"3972" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>981</SUB>> ]
+"4002" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>985</SUB>> ]
+"3955" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>980</SUB>> ]
+"3959" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>980</SUB>> ]
+"3966" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>980</SUB>> ]
+"3973" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>981</SUB>> ]
+"3977" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>981</SUB>> ]
+"3984" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>981</SUB>> ]
+"3960" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>980</SUB>> ]
+"3978" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>981</SUB>> ]
+"3961" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>980</SUB>> ]
+"3963" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>980</SUB>> ]
+"3979" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>981</SUB>> ]
+"3981" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>981</SUB>> ]
+"3941" [label = <(METHOD,CallShortMethod)<SUB>977</SUB>> ]
+"4003" [label = <(METHOD_RETURN,jshort)<SUB>977</SUB>> ]
   "3947" -> "3950" 
   "3950" -> "3955" 
   "3950" -> "3968" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/77-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/77-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/77-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/77-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,28 +1,28 @@
 digraph "CallShortMethodV" {  
-"4011" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>990</SUB>> ]
-"4029" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>991</SUB>> ]
-"4048" [label = <(soa,soa(env))<SUB>992</SUB>> ]
-"4050" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();)<SUB>993</SUB>> ]
-"4051" [label = <(GetS,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS())<SUB>993</SUB>> ]
-"4052" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS)<SUB>993</SUB>> ]
-"4015" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>990</SUB>> ]
-"4033" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>991</SUB>> ]
-"4053" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>993</SUB>> ]
-"4058" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>993</SUB>> ]
-"4016" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>990</SUB>> ]
-"4020" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>990</SUB>> ]
-"4027" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>990</SUB>> ]
-"4034" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>991</SUB>> ]
-"4038" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>991</SUB>> ]
-"4045" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>991</SUB>> ]
-"4021" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>990</SUB>> ]
-"4039" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>991</SUB>> ]
-"4022" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>990</SUB>> ]
-"4024" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>990</SUB>> ]
-"4040" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>991</SUB>> ]
-"4042" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>991</SUB>> ]
-"4005" [label = <(METHOD,CallShortMethodV)<SUB>989</SUB>> ]
-"4059" [label = <(METHOD_RETURN,jshort)<SUB>989</SUB>> ]
+"4011" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>989</SUB>> ]
+"4029" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>990</SUB>> ]
+"4048" [label = <(soa,soa(env))<SUB>991</SUB>> ]
+"4050" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();)<SUB>992</SUB>> ]
+"4051" [label = <(GetS,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS())<SUB>992</SUB>> ]
+"4052" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS)<SUB>992</SUB>> ]
+"4015" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>989</SUB>> ]
+"4033" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>990</SUB>> ]
+"4053" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>992</SUB>> ]
+"4058" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>992</SUB>> ]
+"4016" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>989</SUB>> ]
+"4020" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>989</SUB>> ]
+"4027" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>989</SUB>> ]
+"4034" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>990</SUB>> ]
+"4038" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>990</SUB>> ]
+"4045" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>990</SUB>> ]
+"4021" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>989</SUB>> ]
+"4039" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>990</SUB>> ]
+"4022" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>989</SUB>> ]
+"4024" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>989</SUB>> ]
+"4040" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>990</SUB>> ]
+"4042" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>990</SUB>> ]
+"4005" [label = <(METHOD,CallShortMethodV)<SUB>988</SUB>> ]
+"4059" [label = <(METHOD_RETURN,jshort)<SUB>988</SUB>> ]
   "4011" -> "4016" 
   "4011" -> "4029" 
   "4029" -> "4034" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/78-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/78-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/78-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/78-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,28 +1,28 @@
 digraph "CallShortMethodA" {  
-"4067" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>997</SUB>> ]
-"4085" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>998</SUB>> ]
-"4104" [label = <(soa,soa(env))<SUB>999</SUB>> ]
-"4106" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();)<SUB>1000</SUB>> ]
-"4107" [label = <(GetS,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS())<SUB>1000</SUB>> ]
-"4108" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS)<SUB>1000</SUB>> ]
-"4071" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>997</SUB>> ]
-"4089" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>998</SUB>> ]
-"4109" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1000</SUB>> ]
-"4114" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1000</SUB>> ]
-"4072" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>997</SUB>> ]
-"4076" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>997</SUB>> ]
-"4083" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>997</SUB>> ]
-"4090" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>998</SUB>> ]
-"4094" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>998</SUB>> ]
-"4101" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>998</SUB>> ]
-"4077" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>997</SUB>> ]
-"4095" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>998</SUB>> ]
-"4078" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>997</SUB>> ]
-"4080" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>997</SUB>> ]
-"4096" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>998</SUB>> ]
-"4098" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>998</SUB>> ]
-"4061" [label = <(METHOD,CallShortMethodA)<SUB>996</SUB>> ]
-"4115" [label = <(METHOD_RETURN,jshort)<SUB>996</SUB>> ]
+"4067" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>996</SUB>> ]
+"4085" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>997</SUB>> ]
+"4104" [label = <(soa,soa(env))<SUB>998</SUB>> ]
+"4106" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();)<SUB>999</SUB>> ]
+"4107" [label = <(GetS,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS())<SUB>999</SUB>> ]
+"4108" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS)<SUB>999</SUB>> ]
+"4071" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>996</SUB>> ]
+"4089" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>997</SUB>> ]
+"4109" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>999</SUB>> ]
+"4114" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>999</SUB>> ]
+"4072" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>996</SUB>> ]
+"4076" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>996</SUB>> ]
+"4083" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>996</SUB>> ]
+"4090" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>997</SUB>> ]
+"4094" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>997</SUB>> ]
+"4101" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>997</SUB>> ]
+"4077" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>996</SUB>> ]
+"4095" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>997</SUB>> ]
+"4078" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>996</SUB>> ]
+"4080" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>996</SUB>> ]
+"4096" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>997</SUB>> ]
+"4098" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>997</SUB>> ]
+"4061" [label = <(METHOD,CallShortMethodA)<SUB>995</SUB>> ]
+"4115" [label = <(METHOD_RETURN,jshort)<SUB>995</SUB>> ]
   "4067" -> "4072" 
   "4067" -> "4085" 
   "4085" -> "4090" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/79-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/79-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/79-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/79-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,26 +1,26 @@
 digraph "CallVoidMethod" {  
-"4123" [label = <(va_start,va_start(ap, mid))<SUB>1005</SUB>> ]
-"4126" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1006</SUB>> ]
-"4143" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1007</SUB>> ]
-"4161" [label = <(soa,soa(env))<SUB>1008</SUB>> ]
-"4163" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1009</SUB>> ]
-"4168" [label = <(va_end,va_end(ap))<SUB>1010</SUB>> ]
-"4130" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1006</SUB>> ]
-"4147" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1007</SUB>> ]
-"4131" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1006</SUB>> ]
-"4135" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1006</SUB>> ]
-"4142" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1006</SUB>> ]
-"4148" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1007</SUB>> ]
-"4152" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1007</SUB>> ]
-"4159" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1007</SUB>> ]
-"4136" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1006</SUB>> ]
-"4153" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1007</SUB>> ]
-"4137" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1006</SUB>> ]
-"4139" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1006</SUB>> ]
-"4154" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1007</SUB>> ]
-"4156" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1007</SUB>> ]
-"4117" [label = <(METHOD,CallVoidMethod)<SUB>1003</SUB>> ]
-"4170" [label = <(METHOD_RETURN,void)<SUB>1003</SUB>> ]
+"4123" [label = <(va_start,va_start(ap, mid))<SUB>1004</SUB>> ]
+"4126" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1005</SUB>> ]
+"4143" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1006</SUB>> ]
+"4161" [label = <(soa,soa(env))<SUB>1007</SUB>> ]
+"4163" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1008</SUB>> ]
+"4168" [label = <(va_end,va_end(ap))<SUB>1009</SUB>> ]
+"4130" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1005</SUB>> ]
+"4147" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1006</SUB>> ]
+"4131" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1005</SUB>> ]
+"4135" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1005</SUB>> ]
+"4142" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1005</SUB>> ]
+"4148" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1006</SUB>> ]
+"4152" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1006</SUB>> ]
+"4159" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1006</SUB>> ]
+"4136" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1005</SUB>> ]
+"4153" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1006</SUB>> ]
+"4137" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1005</SUB>> ]
+"4139" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1005</SUB>> ]
+"4154" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1006</SUB>> ]
+"4156" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1006</SUB>> ]
+"4117" [label = <(METHOD,CallVoidMethod)<SUB>1002</SUB>> ]
+"4170" [label = <(METHOD_RETURN,void)<SUB>1002</SUB>> ]
   "4123" -> "4126" 
   "4126" -> "4131" 
   "4126" -> "4143" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/8-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/8-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/8-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/8-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureInitialized" {  
-"298" [label = <(METHOD,EnsureInitialized)<SUB>204</SUB>> ]
-"302" [label = <(METHOD_RETURN,ANY)<SUB>204</SUB>> ]
+"298" [label = <(METHOD,EnsureInitialized)<SUB>203</SUB>> ]
+"302" [label = <(METHOD_RETURN,ANY)<SUB>203</SUB>> ]
   "298" -> "302" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/80-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/80-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/80-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/80-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,24 +1,24 @@
 digraph "CallVoidMethodV" {  
-"4178" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1014</SUB>> ]
-"4195" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1015</SUB>> ]
-"4213" [label = <(soa,soa(env))<SUB>1016</SUB>> ]
-"4215" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1017</SUB>> ]
-"4182" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1014</SUB>> ]
-"4199" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1015</SUB>> ]
-"4183" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1014</SUB>> ]
-"4187" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1014</SUB>> ]
-"4194" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1014</SUB>> ]
-"4200" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1015</SUB>> ]
-"4204" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1015</SUB>> ]
-"4211" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1015</SUB>> ]
-"4188" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1014</SUB>> ]
-"4205" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1015</SUB>> ]
-"4189" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1014</SUB>> ]
-"4191" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1014</SUB>> ]
-"4206" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1015</SUB>> ]
-"4208" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1015</SUB>> ]
-"4172" [label = <(METHOD,CallVoidMethodV)<SUB>1013</SUB>> ]
-"4220" [label = <(METHOD_RETURN,void)<SUB>1013</SUB>> ]
+"4178" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1013</SUB>> ]
+"4195" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1014</SUB>> ]
+"4213" [label = <(soa,soa(env))<SUB>1015</SUB>> ]
+"4215" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1016</SUB>> ]
+"4182" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1013</SUB>> ]
+"4199" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1014</SUB>> ]
+"4183" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1013</SUB>> ]
+"4187" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1013</SUB>> ]
+"4194" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1013</SUB>> ]
+"4200" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1014</SUB>> ]
+"4204" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1014</SUB>> ]
+"4211" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1014</SUB>> ]
+"4188" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1013</SUB>> ]
+"4205" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1014</SUB>> ]
+"4189" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1013</SUB>> ]
+"4191" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1013</SUB>> ]
+"4206" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1014</SUB>> ]
+"4208" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1014</SUB>> ]
+"4172" [label = <(METHOD,CallVoidMethodV)<SUB>1012</SUB>> ]
+"4220" [label = <(METHOD_RETURN,void)<SUB>1012</SUB>> ]
   "4178" -> "4183" 
   "4178" -> "4195" 
   "4195" -> "4200" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/81-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/81-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/81-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/81-cfg.dot	2023-06-07 19:34:28.597390224 +0330
@@ -1,24 +1,24 @@
 digraph "CallVoidMethodA" {  
-"4228" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1021</SUB>> ]
-"4245" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1022</SUB>> ]
-"4263" [label = <(soa,soa(env))<SUB>1023</SUB>> ]
-"4265" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1024</SUB>> ]
-"4232" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1021</SUB>> ]
-"4249" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1022</SUB>> ]
-"4233" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1021</SUB>> ]
-"4237" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1021</SUB>> ]
-"4244" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1021</SUB>> ]
-"4250" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1022</SUB>> ]
-"4254" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1022</SUB>> ]
-"4261" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1022</SUB>> ]
-"4238" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1021</SUB>> ]
-"4255" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1022</SUB>> ]
-"4239" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1021</SUB>> ]
-"4241" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1021</SUB>> ]
-"4256" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1022</SUB>> ]
-"4258" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1022</SUB>> ]
-"4222" [label = <(METHOD,CallVoidMethodA)<SUB>1020</SUB>> ]
-"4270" [label = <(METHOD_RETURN,void)<SUB>1020</SUB>> ]
+"4228" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1020</SUB>> ]
+"4245" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1021</SUB>> ]
+"4263" [label = <(soa,soa(env))<SUB>1022</SUB>> ]
+"4265" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1023</SUB>> ]
+"4232" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1020</SUB>> ]
+"4249" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1021</SUB>> ]
+"4233" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1020</SUB>> ]
+"4237" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1020</SUB>> ]
+"4244" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1020</SUB>> ]
+"4250" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1021</SUB>> ]
+"4254" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1021</SUB>> ]
+"4261" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1021</SUB>> ]
+"4238" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1020</SUB>> ]
+"4255" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1021</SUB>> ]
+"4239" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1020</SUB>> ]
+"4241" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1020</SUB>> ]
+"4256" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1021</SUB>> ]
+"4258" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1021</SUB>> ]
+"4222" [label = <(METHOD,CallVoidMethodA)<SUB>1019</SUB>> ]
+"4270" [label = <(METHOD_RETURN,void)<SUB>1019</SUB>> ]
   "4228" -> "4233" 
   "4228" -> "4245" 
   "4245" -> "4250" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/82-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/82-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/82-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/82-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,36 +1,36 @@
 digraph "CallNonvirtualObjectMethod" {  
-"4279" [label = <(va_start,va_start(ap, mid))<SUB>1029</SUB>> ]
-"4282" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1030</SUB>> ]
-"4300" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1031</SUB>> ]
-"4319" [label = <(soa,soa(env))<SUB>1032</SUB>> ]
-"4322" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1033</SUB>> ]
-"4329" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1034</SUB>> ]
-"4341" [label = <(va_end,va_end(ap))<SUB>1035</SUB>> ]
-"4343" [label = <(RETURN,return local_result;,return local_result;)<SUB>1036</SUB>> ]
-"4323" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1033</SUB>> ]
-"4331" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1034</SUB>> ]
-"4332" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1034</SUB>> ]
-"4337" [label = <(GetL,result.GetL())<SUB>1034</SUB>> ]
-"4286" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1030</SUB>> ]
-"4304" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1031</SUB>> ]
-"4333" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1034</SUB>> ]
-"4338" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1034</SUB>> ]
-"4287" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1030</SUB>> ]
-"4291" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1030</SUB>> ]
-"4298" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1030</SUB>> ]
-"4305" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1031</SUB>> ]
-"4309" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1031</SUB>> ]
-"4316" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1031</SUB>> ]
-"4335" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1034</SUB>> ]
-"4340" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1034</SUB>> ]
-"4292" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1030</SUB>> ]
-"4310" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1031</SUB>> ]
-"4293" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1030</SUB>> ]
-"4295" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1030</SUB>> ]
-"4311" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1031</SUB>> ]
-"4313" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1031</SUB>> ]
-"4272" [label = <(METHOD,CallNonvirtualObjectMethod)<SUB>1027</SUB>> ]
-"4345" [label = <(METHOD_RETURN,jobject)<SUB>1027</SUB>> ]
+"4279" [label = <(va_start,va_start(ap, mid))<SUB>1028</SUB>> ]
+"4282" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1029</SUB>> ]
+"4300" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1030</SUB>> ]
+"4319" [label = <(soa,soa(env))<SUB>1031</SUB>> ]
+"4322" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1032</SUB>> ]
+"4329" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1033</SUB>> ]
+"4341" [label = <(va_end,va_end(ap))<SUB>1034</SUB>> ]
+"4343" [label = <(RETURN,return local_result;,return local_result;)<SUB>1035</SUB>> ]
+"4323" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1032</SUB>> ]
+"4331" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1033</SUB>> ]
+"4332" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1033</SUB>> ]
+"4337" [label = <(GetL,result.GetL())<SUB>1033</SUB>> ]
+"4286" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1029</SUB>> ]
+"4304" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1030</SUB>> ]
+"4333" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1033</SUB>> ]
+"4338" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1033</SUB>> ]
+"4287" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1029</SUB>> ]
+"4291" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1029</SUB>> ]
+"4298" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1029</SUB>> ]
+"4305" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1030</SUB>> ]
+"4309" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1030</SUB>> ]
+"4316" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1030</SUB>> ]
+"4335" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1033</SUB>> ]
+"4340" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1033</SUB>> ]
+"4292" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1029</SUB>> ]
+"4310" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1030</SUB>> ]
+"4293" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1029</SUB>> ]
+"4295" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1029</SUB>> ]
+"4311" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1030</SUB>> ]
+"4313" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1030</SUB>> ]
+"4272" [label = <(METHOD,CallNonvirtualObjectMethod)<SUB>1026</SUB>> ]
+"4345" [label = <(METHOD_RETURN,jobject)<SUB>1026</SUB>> ]
   "4279" -> "4282" 
   "4282" -> "4287" 
   "4282" -> "4300" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/83-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/83-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/83-cfg.dot	2023-06-07 19:34:22.077390831 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/83-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,33 +1,33 @@
 digraph "CallNonvirtualObjectMethodV" {  
-"4354" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1041</SUB>> ]
-"4372" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1042</SUB>> ]
-"4391" [label = <(soa,soa(env))<SUB>1043</SUB>> ]
-"4394" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, args)))<SUB>1044</SUB>> ]
-"4400" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1045</SUB>> ]
-"4395" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1044</SUB>> ]
-"4401" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1045</SUB>> ]
-"4402" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1045</SUB>> ]
-"4407" [label = <(GetL,result.GetL())<SUB>1045</SUB>> ]
-"4358" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1041</SUB>> ]
-"4376" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1042</SUB>> ]
-"4403" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1045</SUB>> ]
-"4408" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1045</SUB>> ]
-"4359" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1041</SUB>> ]
-"4363" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1041</SUB>> ]
-"4370" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1041</SUB>> ]
-"4377" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1042</SUB>> ]
-"4381" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1042</SUB>> ]
-"4388" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1042</SUB>> ]
-"4405" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1045</SUB>> ]
-"4410" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1045</SUB>> ]
-"4364" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1041</SUB>> ]
-"4382" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1042</SUB>> ]
-"4365" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1041</SUB>> ]
-"4367" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1041</SUB>> ]
-"4383" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1042</SUB>> ]
-"4385" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1042</SUB>> ]
-"4347" [label = <(METHOD,CallNonvirtualObjectMethodV)<SUB>1039</SUB>> ]
-"4411" [label = <(METHOD_RETURN,jobject)<SUB>1039</SUB>> ]
+"4354" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1040</SUB>> ]
+"4372" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1041</SUB>> ]
+"4391" [label = <(soa,soa(env))<SUB>1042</SUB>> ]
+"4394" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, args)))<SUB>1043</SUB>> ]
+"4400" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1044</SUB>> ]
+"4395" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1043</SUB>> ]
+"4401" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1044</SUB>> ]
+"4402" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1044</SUB>> ]
+"4407" [label = <(GetL,result.GetL())<SUB>1044</SUB>> ]
+"4358" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1040</SUB>> ]
+"4376" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1041</SUB>> ]
+"4403" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1044</SUB>> ]
+"4408" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1044</SUB>> ]
+"4359" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1040</SUB>> ]
+"4363" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1040</SUB>> ]
+"4370" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1040</SUB>> ]
+"4377" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1041</SUB>> ]
+"4381" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1041</SUB>> ]
+"4388" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1041</SUB>> ]
+"4405" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1044</SUB>> ]
+"4410" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1044</SUB>> ]
+"4364" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1040</SUB>> ]
+"4382" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1041</SUB>> ]
+"4365" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1040</SUB>> ]
+"4367" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1040</SUB>> ]
+"4383" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1041</SUB>> ]
+"4385" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1041</SUB>> ]
+"4347" [label = <(METHOD,CallNonvirtualObjectMethodV)<SUB>1038</SUB>> ]
+"4411" [label = <(METHOD_RETURN,jobject)<SUB>1038</SUB>> ]
   "4354" -> "4359" 
   "4354" -> "4372" 
   "4372" -> "4377" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/84-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/84-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/84-cfg.dot	2023-06-07 19:34:22.087390829 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/84-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,33 +1,33 @@
 digraph "CallNonvirtualObjectMethodA" {  
-"4420" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1050</SUB>> ]
-"4438" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1051</SUB>> ]
-"4457" [label = <(soa,soa(env))<SUB>1052</SUB>> ]
-"4460" [label = <(result,result(InvokeWithJValues(soa, obj, mid, args)))<SUB>1053</SUB>> ]
-"4466" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1054</SUB>> ]
-"4461" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1053</SUB>> ]
-"4467" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1054</SUB>> ]
-"4468" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1054</SUB>> ]
-"4473" [label = <(GetL,result.GetL())<SUB>1054</SUB>> ]
-"4424" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1050</SUB>> ]
-"4442" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1051</SUB>> ]
-"4469" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1054</SUB>> ]
-"4474" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1054</SUB>> ]
-"4425" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1050</SUB>> ]
-"4429" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1050</SUB>> ]
-"4436" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1050</SUB>> ]
-"4443" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1051</SUB>> ]
-"4447" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1051</SUB>> ]
-"4454" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1051</SUB>> ]
-"4471" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1054</SUB>> ]
-"4476" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1054</SUB>> ]
-"4430" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1050</SUB>> ]
-"4448" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1051</SUB>> ]
-"4431" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1050</SUB>> ]
-"4433" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1050</SUB>> ]
-"4449" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1051</SUB>> ]
-"4451" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1051</SUB>> ]
-"4413" [label = <(METHOD,CallNonvirtualObjectMethodA)<SUB>1048</SUB>> ]
-"4477" [label = <(METHOD_RETURN,jobject)<SUB>1048</SUB>> ]
+"4420" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1049</SUB>> ]
+"4438" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1050</SUB>> ]
+"4457" [label = <(soa,soa(env))<SUB>1051</SUB>> ]
+"4460" [label = <(result,result(InvokeWithJValues(soa, obj, mid, args)))<SUB>1052</SUB>> ]
+"4466" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1053</SUB>> ]
+"4461" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1052</SUB>> ]
+"4467" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1053</SUB>> ]
+"4468" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1053</SUB>> ]
+"4473" [label = <(GetL,result.GetL())<SUB>1053</SUB>> ]
+"4424" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1049</SUB>> ]
+"4442" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1050</SUB>> ]
+"4469" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1053</SUB>> ]
+"4474" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1053</SUB>> ]
+"4425" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1049</SUB>> ]
+"4429" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1049</SUB>> ]
+"4436" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1049</SUB>> ]
+"4443" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1050</SUB>> ]
+"4447" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1050</SUB>> ]
+"4454" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1050</SUB>> ]
+"4471" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1053</SUB>> ]
+"4476" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1053</SUB>> ]
+"4430" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1049</SUB>> ]
+"4448" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1050</SUB>> ]
+"4431" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1049</SUB>> ]
+"4433" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1049</SUB>> ]
+"4449" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1050</SUB>> ]
+"4451" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1050</SUB>> ]
+"4413" [label = <(METHOD,CallNonvirtualObjectMethodA)<SUB>1047</SUB>> ]
+"4477" [label = <(METHOD_RETURN,jobject)<SUB>1047</SUB>> ]
   "4420" -> "4425" 
   "4420" -> "4438" 
   "4438" -> "4443" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/85-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/85-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/85-cfg.dot	2023-06-07 19:34:22.087390829 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/85-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,31 +1,31 @@
 digraph "CallNonvirtualBooleanMethod" {  
-"4486" [label = <(va_start,va_start(ap, mid))<SUB>1060</SUB>> ]
-"4489" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1061</SUB>> ]
-"4507" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1062</SUB>> ]
-"4526" [label = <(soa,soa(env))<SUB>1063</SUB>> ]
-"4529" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1064</SUB>> ]
-"4535" [label = <(va_end,va_end(ap))<SUB>1065</SUB>> ]
-"4537" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1066</SUB>> ]
-"4530" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1064</SUB>> ]
-"4538" [label = <(GetZ,result.GetZ())<SUB>1066</SUB>> ]
-"4539" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1066</SUB>> ]
-"4493" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1061</SUB>> ]
-"4511" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1062</SUB>> ]
-"4541" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1066</SUB>> ]
-"4494" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1061</SUB>> ]
-"4498" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1061</SUB>> ]
-"4505" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1061</SUB>> ]
-"4512" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1062</SUB>> ]
-"4516" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1062</SUB>> ]
-"4523" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1062</SUB>> ]
-"4499" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1061</SUB>> ]
-"4517" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1062</SUB>> ]
-"4500" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1061</SUB>> ]
-"4502" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1061</SUB>> ]
-"4518" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1062</SUB>> ]
-"4520" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1062</SUB>> ]
-"4479" [label = <(METHOD,CallNonvirtualBooleanMethod)<SUB>1057</SUB>> ]
-"4542" [label = <(METHOD_RETURN,jboolean)<SUB>1057</SUB>> ]
+"4486" [label = <(va_start,va_start(ap, mid))<SUB>1059</SUB>> ]
+"4489" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1060</SUB>> ]
+"4507" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1061</SUB>> ]
+"4526" [label = <(soa,soa(env))<SUB>1062</SUB>> ]
+"4529" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1063</SUB>> ]
+"4535" [label = <(va_end,va_end(ap))<SUB>1064</SUB>> ]
+"4537" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1065</SUB>> ]
+"4530" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1063</SUB>> ]
+"4538" [label = <(GetZ,result.GetZ())<SUB>1065</SUB>> ]
+"4539" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1065</SUB>> ]
+"4493" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1060</SUB>> ]
+"4511" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1061</SUB>> ]
+"4541" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1065</SUB>> ]
+"4494" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1060</SUB>> ]
+"4498" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1060</SUB>> ]
+"4505" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1060</SUB>> ]
+"4512" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1061</SUB>> ]
+"4516" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1061</SUB>> ]
+"4523" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1061</SUB>> ]
+"4499" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1060</SUB>> ]
+"4517" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1061</SUB>> ]
+"4500" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1060</SUB>> ]
+"4502" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1060</SUB>> ]
+"4518" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1061</SUB>> ]
+"4520" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1061</SUB>> ]
+"4479" [label = <(METHOD,CallNonvirtualBooleanMethod)<SUB>1056</SUB>> ]
+"4542" [label = <(METHOD_RETURN,jboolean)<SUB>1056</SUB>> ]
   "4486" -> "4489" 
   "4489" -> "4494" 
   "4489" -> "4507" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/86-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/86-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/86-cfg.dot	2023-06-07 19:34:22.087390829 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/86-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualBooleanMethodV" {  
-"4551" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1071</SUB>> ]
-"4569" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1072</SUB>> ]
-"4588" [label = <(soa,soa(env))<SUB>1073</SUB>> ]
-"4590" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>1074</SUB>> ]
-"4591" [label = <(GetZ,InvokeWithVarArgs(soa, obj, mid, args).GetZ())<SUB>1074</SUB>> ]
-"4592" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetZ)<SUB>1074</SUB>> ]
-"4555" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1071</SUB>> ]
-"4573" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1072</SUB>> ]
-"4593" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1074</SUB>> ]
-"4598" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1074</SUB>> ]
-"4556" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1071</SUB>> ]
-"4560" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1071</SUB>> ]
-"4567" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1071</SUB>> ]
-"4574" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1072</SUB>> ]
-"4578" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1072</SUB>> ]
-"4585" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1072</SUB>> ]
-"4561" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1071</SUB>> ]
-"4579" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1072</SUB>> ]
-"4562" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1071</SUB>> ]
-"4564" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1071</SUB>> ]
-"4580" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1072</SUB>> ]
-"4582" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1072</SUB>> ]
-"4544" [label = <(METHOD,CallNonvirtualBooleanMethodV)<SUB>1069</SUB>> ]
-"4599" [label = <(METHOD_RETURN,jboolean)<SUB>1069</SUB>> ]
+"4551" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1070</SUB>> ]
+"4569" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1071</SUB>> ]
+"4588" [label = <(soa,soa(env))<SUB>1072</SUB>> ]
+"4590" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>1073</SUB>> ]
+"4591" [label = <(GetZ,InvokeWithVarArgs(soa, obj, mid, args).GetZ())<SUB>1073</SUB>> ]
+"4592" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetZ)<SUB>1073</SUB>> ]
+"4555" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1070</SUB>> ]
+"4573" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1071</SUB>> ]
+"4593" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1073</SUB>> ]
+"4598" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1073</SUB>> ]
+"4556" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1070</SUB>> ]
+"4560" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1070</SUB>> ]
+"4567" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1070</SUB>> ]
+"4574" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1071</SUB>> ]
+"4578" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1071</SUB>> ]
+"4585" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1071</SUB>> ]
+"4561" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1070</SUB>> ]
+"4579" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1071</SUB>> ]
+"4562" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1070</SUB>> ]
+"4564" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1070</SUB>> ]
+"4580" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1071</SUB>> ]
+"4582" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1071</SUB>> ]
+"4544" [label = <(METHOD,CallNonvirtualBooleanMethodV)<SUB>1068</SUB>> ]
+"4599" [label = <(METHOD_RETURN,jboolean)<SUB>1068</SUB>> ]
   "4551" -> "4556" 
   "4551" -> "4569" 
   "4569" -> "4574" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/87-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/87-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/87-cfg.dot	2023-06-07 19:34:22.087390829 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/87-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualBooleanMethodA" {  
-"4608" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1079</SUB>> ]
-"4626" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1080</SUB>> ]
-"4645" [label = <(soa,soa(env))<SUB>1081</SUB>> ]
-"4647" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetZ();,return InvokeWithJValues(soa, obj, mid, args).GetZ();)<SUB>1082</SUB>> ]
-"4648" [label = <(GetZ,InvokeWithJValues(soa, obj, mid, args).GetZ())<SUB>1082</SUB>> ]
-"4649" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetZ)<SUB>1082</SUB>> ]
-"4612" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1079</SUB>> ]
-"4630" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1080</SUB>> ]
-"4650" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1082</SUB>> ]
-"4655" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1082</SUB>> ]
-"4613" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1079</SUB>> ]
-"4617" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1079</SUB>> ]
-"4624" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1079</SUB>> ]
-"4631" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1080</SUB>> ]
-"4635" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1080</SUB>> ]
-"4642" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1080</SUB>> ]
-"4618" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1079</SUB>> ]
-"4636" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1080</SUB>> ]
-"4619" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1079</SUB>> ]
-"4621" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1079</SUB>> ]
-"4637" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1080</SUB>> ]
-"4639" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1080</SUB>> ]
-"4601" [label = <(METHOD,CallNonvirtualBooleanMethodA)<SUB>1077</SUB>> ]
-"4656" [label = <(METHOD_RETURN,jboolean)<SUB>1077</SUB>> ]
+"4608" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1078</SUB>> ]
+"4626" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1079</SUB>> ]
+"4645" [label = <(soa,soa(env))<SUB>1080</SUB>> ]
+"4647" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetZ();,return InvokeWithJValues(soa, obj, mid, args).GetZ();)<SUB>1081</SUB>> ]
+"4648" [label = <(GetZ,InvokeWithJValues(soa, obj, mid, args).GetZ())<SUB>1081</SUB>> ]
+"4649" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetZ)<SUB>1081</SUB>> ]
+"4612" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1078</SUB>> ]
+"4630" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1079</SUB>> ]
+"4650" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1081</SUB>> ]
+"4655" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1081</SUB>> ]
+"4613" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1078</SUB>> ]
+"4617" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1078</SUB>> ]
+"4624" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1078</SUB>> ]
+"4631" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1079</SUB>> ]
+"4635" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1079</SUB>> ]
+"4642" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1079</SUB>> ]
+"4618" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1078</SUB>> ]
+"4636" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1079</SUB>> ]
+"4619" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1078</SUB>> ]
+"4621" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1078</SUB>> ]
+"4637" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1079</SUB>> ]
+"4639" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1079</SUB>> ]
+"4601" [label = <(METHOD,CallNonvirtualBooleanMethodA)<SUB>1076</SUB>> ]
+"4656" [label = <(METHOD_RETURN,jboolean)<SUB>1076</SUB>> ]
   "4608" -> "4613" 
   "4608" -> "4626" 
   "4626" -> "4631" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/88-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/88-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/88-cfg.dot	2023-06-07 19:34:22.087390829 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/88-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,31 +1,31 @@
 digraph "CallNonvirtualByteMethod" {  
-"4665" [label = <(va_start,va_start(ap, mid))<SUB>1087</SUB>> ]
-"4668" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1088</SUB>> ]
-"4686" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1089</SUB>> ]
-"4705" [label = <(soa,soa(env))<SUB>1090</SUB>> ]
-"4708" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1091</SUB>> ]
-"4714" [label = <(va_end,va_end(ap))<SUB>1092</SUB>> ]
-"4716" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1093</SUB>> ]
-"4709" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1091</SUB>> ]
-"4717" [label = <(GetB,result.GetB())<SUB>1093</SUB>> ]
-"4718" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1093</SUB>> ]
-"4672" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1088</SUB>> ]
-"4690" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1089</SUB>> ]
-"4720" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1093</SUB>> ]
-"4673" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1088</SUB>> ]
-"4677" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1088</SUB>> ]
-"4684" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1088</SUB>> ]
-"4691" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1089</SUB>> ]
-"4695" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1089</SUB>> ]
-"4702" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1089</SUB>> ]
-"4678" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1088</SUB>> ]
-"4696" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1089</SUB>> ]
-"4679" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1088</SUB>> ]
-"4681" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1088</SUB>> ]
-"4697" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1089</SUB>> ]
-"4699" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1089</SUB>> ]
-"4658" [label = <(METHOD,CallNonvirtualByteMethod)<SUB>1085</SUB>> ]
-"4721" [label = <(METHOD_RETURN,jbyte)<SUB>1085</SUB>> ]
+"4665" [label = <(va_start,va_start(ap, mid))<SUB>1086</SUB>> ]
+"4668" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1087</SUB>> ]
+"4686" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1088</SUB>> ]
+"4705" [label = <(soa,soa(env))<SUB>1089</SUB>> ]
+"4708" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1090</SUB>> ]
+"4714" [label = <(va_end,va_end(ap))<SUB>1091</SUB>> ]
+"4716" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1092</SUB>> ]
+"4709" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1090</SUB>> ]
+"4717" [label = <(GetB,result.GetB())<SUB>1092</SUB>> ]
+"4718" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1092</SUB>> ]
+"4672" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1087</SUB>> ]
+"4690" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1088</SUB>> ]
+"4720" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1092</SUB>> ]
+"4673" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1087</SUB>> ]
+"4677" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1087</SUB>> ]
+"4684" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1087</SUB>> ]
+"4691" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1088</SUB>> ]
+"4695" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1088</SUB>> ]
+"4702" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1088</SUB>> ]
+"4678" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1087</SUB>> ]
+"4696" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1088</SUB>> ]
+"4679" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1087</SUB>> ]
+"4681" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1087</SUB>> ]
+"4697" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1088</SUB>> ]
+"4699" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1088</SUB>> ]
+"4658" [label = <(METHOD,CallNonvirtualByteMethod)<SUB>1084</SUB>> ]
+"4721" [label = <(METHOD_RETURN,jbyte)<SUB>1084</SUB>> ]
   "4665" -> "4668" 
   "4668" -> "4673" 
   "4668" -> "4686" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/89-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/89-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/89-cfg.dot	2023-06-07 19:34:22.087390829 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/89-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualByteMethodV" {  
-"4730" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1098</SUB>> ]
-"4748" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1099</SUB>> ]
-"4767" [label = <(soa,soa(env))<SUB>1100</SUB>> ]
-"4769" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetB();,return InvokeWithVarArgs(soa, obj, mid, args).GetB();)<SUB>1101</SUB>> ]
-"4770" [label = <(GetB,InvokeWithVarArgs(soa, obj, mid, args).GetB())<SUB>1101</SUB>> ]
-"4771" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetB)<SUB>1101</SUB>> ]
-"4734" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1098</SUB>> ]
-"4752" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1099</SUB>> ]
-"4772" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1101</SUB>> ]
-"4777" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1101</SUB>> ]
-"4735" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1098</SUB>> ]
-"4739" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1098</SUB>> ]
-"4746" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1098</SUB>> ]
-"4753" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1099</SUB>> ]
-"4757" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1099</SUB>> ]
-"4764" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1099</SUB>> ]
-"4740" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1098</SUB>> ]
-"4758" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1099</SUB>> ]
-"4741" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1098</SUB>> ]
-"4743" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1098</SUB>> ]
-"4759" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1099</SUB>> ]
-"4761" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1099</SUB>> ]
-"4723" [label = <(METHOD,CallNonvirtualByteMethodV)<SUB>1096</SUB>> ]
-"4778" [label = <(METHOD_RETURN,jbyte)<SUB>1096</SUB>> ]
+"4730" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1097</SUB>> ]
+"4748" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1098</SUB>> ]
+"4767" [label = <(soa,soa(env))<SUB>1099</SUB>> ]
+"4769" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetB();,return InvokeWithVarArgs(soa, obj, mid, args).GetB();)<SUB>1100</SUB>> ]
+"4770" [label = <(GetB,InvokeWithVarArgs(soa, obj, mid, args).GetB())<SUB>1100</SUB>> ]
+"4771" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetB)<SUB>1100</SUB>> ]
+"4734" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1097</SUB>> ]
+"4752" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1098</SUB>> ]
+"4772" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1100</SUB>> ]
+"4777" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1100</SUB>> ]
+"4735" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1097</SUB>> ]
+"4739" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1097</SUB>> ]
+"4746" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1097</SUB>> ]
+"4753" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1098</SUB>> ]
+"4757" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1098</SUB>> ]
+"4764" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1098</SUB>> ]
+"4740" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1097</SUB>> ]
+"4758" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1098</SUB>> ]
+"4741" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1097</SUB>> ]
+"4743" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1097</SUB>> ]
+"4759" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1098</SUB>> ]
+"4761" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1098</SUB>> ]
+"4723" [label = <(METHOD,CallNonvirtualByteMethodV)<SUB>1095</SUB>> ]
+"4778" [label = <(METHOD_RETURN,jbyte)<SUB>1095</SUB>> ]
   "4730" -> "4735" 
   "4730" -> "4748" 
   "4748" -> "4753" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/9-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/9-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/9-cfg.dot	2023-06-07 19:34:22.007390838 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/9-cfg.dot	2023-06-07 19:34:28.547390227 +0330
@@ -1,5 +1,5 @@
 digraph "hs" {  
-"306" [label = <(METHOD,hs)<SUB>209</SUB>> ]
-"309" [label = <(METHOD_RETURN,StackHandleScope&lt;1&gt;)<SUB>209</SUB>> ]
+"306" [label = <(METHOD,hs)<SUB>208</SUB>> ]
+"309" [label = <(METHOD_RETURN,StackHandleScope&lt;1&gt;)<SUB>208</SUB>> ]
   "306" -> "309" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/90-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/90-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/90-cfg.dot	2023-06-07 19:34:22.087390829 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/90-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualByteMethodA" {  
-"4787" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1106</SUB>> ]
-"4805" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1107</SUB>> ]
-"4824" [label = <(soa,soa(env))<SUB>1108</SUB>> ]
-"4826" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetB();,return InvokeWithJValues(soa, obj, mid, args).GetB();)<SUB>1109</SUB>> ]
-"4827" [label = <(GetB,InvokeWithJValues(soa, obj, mid, args).GetB())<SUB>1109</SUB>> ]
-"4828" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetB)<SUB>1109</SUB>> ]
-"4791" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1106</SUB>> ]
-"4809" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1107</SUB>> ]
-"4829" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1109</SUB>> ]
-"4834" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1109</SUB>> ]
-"4792" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1106</SUB>> ]
-"4796" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1106</SUB>> ]
-"4803" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1106</SUB>> ]
-"4810" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1107</SUB>> ]
-"4814" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1107</SUB>> ]
-"4821" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1107</SUB>> ]
-"4797" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1106</SUB>> ]
-"4815" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1107</SUB>> ]
-"4798" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1106</SUB>> ]
-"4800" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1106</SUB>> ]
-"4816" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1107</SUB>> ]
-"4818" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1107</SUB>> ]
-"4780" [label = <(METHOD,CallNonvirtualByteMethodA)<SUB>1104</SUB>> ]
-"4835" [label = <(METHOD_RETURN,jbyte)<SUB>1104</SUB>> ]
+"4787" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1105</SUB>> ]
+"4805" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1106</SUB>> ]
+"4824" [label = <(soa,soa(env))<SUB>1107</SUB>> ]
+"4826" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetB();,return InvokeWithJValues(soa, obj, mid, args).GetB();)<SUB>1108</SUB>> ]
+"4827" [label = <(GetB,InvokeWithJValues(soa, obj, mid, args).GetB())<SUB>1108</SUB>> ]
+"4828" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetB)<SUB>1108</SUB>> ]
+"4791" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1105</SUB>> ]
+"4809" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1106</SUB>> ]
+"4829" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1108</SUB>> ]
+"4834" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1108</SUB>> ]
+"4792" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1105</SUB>> ]
+"4796" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1105</SUB>> ]
+"4803" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1105</SUB>> ]
+"4810" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1106</SUB>> ]
+"4814" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1106</SUB>> ]
+"4821" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1106</SUB>> ]
+"4797" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1105</SUB>> ]
+"4815" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1106</SUB>> ]
+"4798" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1105</SUB>> ]
+"4800" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1105</SUB>> ]
+"4816" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1106</SUB>> ]
+"4818" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1106</SUB>> ]
+"4780" [label = <(METHOD,CallNonvirtualByteMethodA)<SUB>1103</SUB>> ]
+"4835" [label = <(METHOD_RETURN,jbyte)<SUB>1103</SUB>> ]
   "4787" -> "4792" 
   "4787" -> "4805" 
   "4805" -> "4810" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/91-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/91-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/91-cfg.dot	2023-06-07 19:34:22.087390829 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/91-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,31 +1,31 @@
 digraph "CallNonvirtualCharMethod" {  
-"4844" [label = <(va_start,va_start(ap, mid))<SUB>1114</SUB>> ]
-"4847" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1115</SUB>> ]
-"4865" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1116</SUB>> ]
-"4884" [label = <(soa,soa(env))<SUB>1117</SUB>> ]
-"4887" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1118</SUB>> ]
-"4893" [label = <(va_end,va_end(ap))<SUB>1119</SUB>> ]
-"4895" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1120</SUB>> ]
-"4888" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1118</SUB>> ]
-"4896" [label = <(GetC,result.GetC())<SUB>1120</SUB>> ]
-"4897" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1120</SUB>> ]
-"4851" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1115</SUB>> ]
-"4869" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1116</SUB>> ]
-"4899" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1120</SUB>> ]
-"4852" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1115</SUB>> ]
-"4856" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1115</SUB>> ]
-"4863" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1115</SUB>> ]
-"4870" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1116</SUB>> ]
-"4874" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1116</SUB>> ]
-"4881" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1116</SUB>> ]
-"4857" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1115</SUB>> ]
-"4875" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1116</SUB>> ]
-"4858" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1115</SUB>> ]
-"4860" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1115</SUB>> ]
-"4876" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1116</SUB>> ]
-"4878" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1116</SUB>> ]
-"4837" [label = <(METHOD,CallNonvirtualCharMethod)<SUB>1112</SUB>> ]
-"4900" [label = <(METHOD_RETURN,jchar)<SUB>1112</SUB>> ]
+"4844" [label = <(va_start,va_start(ap, mid))<SUB>1113</SUB>> ]
+"4847" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1114</SUB>> ]
+"4865" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1115</SUB>> ]
+"4884" [label = <(soa,soa(env))<SUB>1116</SUB>> ]
+"4887" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1117</SUB>> ]
+"4893" [label = <(va_end,va_end(ap))<SUB>1118</SUB>> ]
+"4895" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1119</SUB>> ]
+"4888" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1117</SUB>> ]
+"4896" [label = <(GetC,result.GetC())<SUB>1119</SUB>> ]
+"4897" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1119</SUB>> ]
+"4851" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1114</SUB>> ]
+"4869" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1115</SUB>> ]
+"4899" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1119</SUB>> ]
+"4852" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1114</SUB>> ]
+"4856" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1114</SUB>> ]
+"4863" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1114</SUB>> ]
+"4870" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1115</SUB>> ]
+"4874" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1115</SUB>> ]
+"4881" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1115</SUB>> ]
+"4857" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1114</SUB>> ]
+"4875" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1115</SUB>> ]
+"4858" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1114</SUB>> ]
+"4860" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1114</SUB>> ]
+"4876" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1115</SUB>> ]
+"4878" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1115</SUB>> ]
+"4837" [label = <(METHOD,CallNonvirtualCharMethod)<SUB>1111</SUB>> ]
+"4900" [label = <(METHOD_RETURN,jchar)<SUB>1111</SUB>> ]
   "4844" -> "4847" 
   "4847" -> "4852" 
   "4847" -> "4865" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/92-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/92-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/92-cfg.dot	2023-06-07 19:34:22.087390829 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/92-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualCharMethodV" {  
-"4909" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1125</SUB>> ]
-"4927" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1126</SUB>> ]
-"4946" [label = <(soa,soa(env))<SUB>1127</SUB>> ]
-"4948" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetC();,return InvokeWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1128</SUB>> ]
-"4949" [label = <(GetC,InvokeWithVarArgs(soa, obj, mid, args).GetC())<SUB>1128</SUB>> ]
-"4950" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetC)<SUB>1128</SUB>> ]
-"4913" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1125</SUB>> ]
-"4931" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1126</SUB>> ]
-"4951" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1128</SUB>> ]
-"4956" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1128</SUB>> ]
-"4914" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1125</SUB>> ]
-"4918" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1125</SUB>> ]
-"4925" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1125</SUB>> ]
-"4932" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1126</SUB>> ]
-"4936" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1126</SUB>> ]
-"4943" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1126</SUB>> ]
-"4919" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1125</SUB>> ]
-"4937" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1126</SUB>> ]
-"4920" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1125</SUB>> ]
-"4922" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1125</SUB>> ]
-"4938" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1126</SUB>> ]
-"4940" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1126</SUB>> ]
-"4902" [label = <(METHOD,CallNonvirtualCharMethodV)<SUB>1123</SUB>> ]
-"4957" [label = <(METHOD_RETURN,jchar)<SUB>1123</SUB>> ]
+"4909" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1124</SUB>> ]
+"4927" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1125</SUB>> ]
+"4946" [label = <(soa,soa(env))<SUB>1126</SUB>> ]
+"4948" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetC();,return InvokeWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1127</SUB>> ]
+"4949" [label = <(GetC,InvokeWithVarArgs(soa, obj, mid, args).GetC())<SUB>1127</SUB>> ]
+"4950" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetC)<SUB>1127</SUB>> ]
+"4913" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1124</SUB>> ]
+"4931" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1125</SUB>> ]
+"4951" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1127</SUB>> ]
+"4956" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1127</SUB>> ]
+"4914" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1124</SUB>> ]
+"4918" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1124</SUB>> ]
+"4925" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1124</SUB>> ]
+"4932" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1125</SUB>> ]
+"4936" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1125</SUB>> ]
+"4943" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1125</SUB>> ]
+"4919" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1124</SUB>> ]
+"4937" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1125</SUB>> ]
+"4920" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1124</SUB>> ]
+"4922" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1124</SUB>> ]
+"4938" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1125</SUB>> ]
+"4940" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1125</SUB>> ]
+"4902" [label = <(METHOD,CallNonvirtualCharMethodV)<SUB>1122</SUB>> ]
+"4957" [label = <(METHOD_RETURN,jchar)<SUB>1122</SUB>> ]
   "4909" -> "4914" 
   "4909" -> "4927" 
   "4927" -> "4932" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/93-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/93-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/93-cfg.dot	2023-06-07 19:34:22.087390829 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/93-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualCharMethodA" {  
-"4966" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1133</SUB>> ]
-"4984" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1134</SUB>> ]
-"5003" [label = <(soa,soa(env))<SUB>1135</SUB>> ]
-"5005" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetC();,return InvokeWithJValues(soa, obj, mid, args).GetC();)<SUB>1136</SUB>> ]
-"5006" [label = <(GetC,InvokeWithJValues(soa, obj, mid, args).GetC())<SUB>1136</SUB>> ]
-"5007" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetC)<SUB>1136</SUB>> ]
-"4970" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1133</SUB>> ]
-"4988" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1134</SUB>> ]
-"5008" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1136</SUB>> ]
-"5013" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1136</SUB>> ]
-"4971" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1133</SUB>> ]
-"4975" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1133</SUB>> ]
-"4982" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1133</SUB>> ]
-"4989" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1134</SUB>> ]
-"4993" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1134</SUB>> ]
-"5000" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1134</SUB>> ]
-"4976" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1133</SUB>> ]
-"4994" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1134</SUB>> ]
-"4977" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1133</SUB>> ]
-"4979" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1133</SUB>> ]
-"4995" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1134</SUB>> ]
-"4997" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1134</SUB>> ]
-"4959" [label = <(METHOD,CallNonvirtualCharMethodA)<SUB>1131</SUB>> ]
-"5014" [label = <(METHOD_RETURN,jchar)<SUB>1131</SUB>> ]
+"4966" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1132</SUB>> ]
+"4984" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1133</SUB>> ]
+"5003" [label = <(soa,soa(env))<SUB>1134</SUB>> ]
+"5005" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetC();,return InvokeWithJValues(soa, obj, mid, args).GetC();)<SUB>1135</SUB>> ]
+"5006" [label = <(GetC,InvokeWithJValues(soa, obj, mid, args).GetC())<SUB>1135</SUB>> ]
+"5007" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetC)<SUB>1135</SUB>> ]
+"4970" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1132</SUB>> ]
+"4988" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1133</SUB>> ]
+"5008" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1135</SUB>> ]
+"5013" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1135</SUB>> ]
+"4971" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1132</SUB>> ]
+"4975" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1132</SUB>> ]
+"4982" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1132</SUB>> ]
+"4989" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1133</SUB>> ]
+"4993" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1133</SUB>> ]
+"5000" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1133</SUB>> ]
+"4976" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1132</SUB>> ]
+"4994" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1133</SUB>> ]
+"4977" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1132</SUB>> ]
+"4979" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1132</SUB>> ]
+"4995" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1133</SUB>> ]
+"4997" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1133</SUB>> ]
+"4959" [label = <(METHOD,CallNonvirtualCharMethodA)<SUB>1130</SUB>> ]
+"5014" [label = <(METHOD_RETURN,jchar)<SUB>1130</SUB>> ]
   "4966" -> "4971" 
   "4966" -> "4984" 
   "4984" -> "4989" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/94-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/94-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/94-cfg.dot	2023-06-07 19:34:22.087390829 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/94-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,31 +1,31 @@
 digraph "CallNonvirtualShortMethod" {  
-"5023" [label = <(va_start,va_start(ap, mid))<SUB>1141</SUB>> ]
-"5026" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1142</SUB>> ]
-"5044" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1143</SUB>> ]
-"5063" [label = <(soa,soa(env))<SUB>1144</SUB>> ]
-"5066" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1145</SUB>> ]
-"5072" [label = <(va_end,va_end(ap))<SUB>1146</SUB>> ]
-"5074" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1147</SUB>> ]
-"5067" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1145</SUB>> ]
-"5075" [label = <(GetS,result.GetS())<SUB>1147</SUB>> ]
-"5076" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1147</SUB>> ]
-"5030" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1142</SUB>> ]
-"5048" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1143</SUB>> ]
-"5078" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1147</SUB>> ]
-"5031" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1142</SUB>> ]
-"5035" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1142</SUB>> ]
-"5042" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1142</SUB>> ]
-"5049" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1143</SUB>> ]
-"5053" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1143</SUB>> ]
-"5060" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1143</SUB>> ]
-"5036" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1142</SUB>> ]
-"5054" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1143</SUB>> ]
-"5037" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1142</SUB>> ]
-"5039" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1142</SUB>> ]
-"5055" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1143</SUB>> ]
-"5057" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1143</SUB>> ]
-"5016" [label = <(METHOD,CallNonvirtualShortMethod)<SUB>1139</SUB>> ]
-"5079" [label = <(METHOD_RETURN,jshort)<SUB>1139</SUB>> ]
+"5023" [label = <(va_start,va_start(ap, mid))<SUB>1140</SUB>> ]
+"5026" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1141</SUB>> ]
+"5044" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1142</SUB>> ]
+"5063" [label = <(soa,soa(env))<SUB>1143</SUB>> ]
+"5066" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1144</SUB>> ]
+"5072" [label = <(va_end,va_end(ap))<SUB>1145</SUB>> ]
+"5074" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1146</SUB>> ]
+"5067" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1144</SUB>> ]
+"5075" [label = <(GetS,result.GetS())<SUB>1146</SUB>> ]
+"5076" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1146</SUB>> ]
+"5030" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1141</SUB>> ]
+"5048" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1142</SUB>> ]
+"5078" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1146</SUB>> ]
+"5031" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1141</SUB>> ]
+"5035" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1141</SUB>> ]
+"5042" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1141</SUB>> ]
+"5049" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1142</SUB>> ]
+"5053" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1142</SUB>> ]
+"5060" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1142</SUB>> ]
+"5036" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1141</SUB>> ]
+"5054" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1142</SUB>> ]
+"5037" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1141</SUB>> ]
+"5039" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1141</SUB>> ]
+"5055" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1142</SUB>> ]
+"5057" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1142</SUB>> ]
+"5016" [label = <(METHOD,CallNonvirtualShortMethod)<SUB>1138</SUB>> ]
+"5079" [label = <(METHOD_RETURN,jshort)<SUB>1138</SUB>> ]
   "5023" -> "5026" 
   "5026" -> "5031" 
   "5026" -> "5044" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/95-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/95-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/95-cfg.dot	2023-06-07 19:34:22.097390830 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/95-cfg.dot	2023-06-07 19:34:28.607390222 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualShortMethodV" {  
-"5088" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1152</SUB>> ]
-"5106" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1153</SUB>> ]
-"5125" [label = <(soa,soa(env))<SUB>1154</SUB>> ]
-"5127" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetS();,return InvokeWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1155</SUB>> ]
-"5128" [label = <(GetS,InvokeWithVarArgs(soa, obj, mid, args).GetS())<SUB>1155</SUB>> ]
-"5129" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetS)<SUB>1155</SUB>> ]
-"5092" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1152</SUB>> ]
-"5110" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1153</SUB>> ]
-"5130" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1155</SUB>> ]
-"5135" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1155</SUB>> ]
-"5093" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1152</SUB>> ]
-"5097" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1152</SUB>> ]
-"5104" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1152</SUB>> ]
-"5111" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1153</SUB>> ]
-"5115" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1153</SUB>> ]
-"5122" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1153</SUB>> ]
-"5098" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1152</SUB>> ]
-"5116" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1153</SUB>> ]
-"5099" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1152</SUB>> ]
-"5101" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1152</SUB>> ]
-"5117" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1153</SUB>> ]
-"5119" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1153</SUB>> ]
-"5081" [label = <(METHOD,CallNonvirtualShortMethodV)<SUB>1150</SUB>> ]
-"5136" [label = <(METHOD_RETURN,jshort)<SUB>1150</SUB>> ]
+"5088" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1151</SUB>> ]
+"5106" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1152</SUB>> ]
+"5125" [label = <(soa,soa(env))<SUB>1153</SUB>> ]
+"5127" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetS();,return InvokeWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1154</SUB>> ]
+"5128" [label = <(GetS,InvokeWithVarArgs(soa, obj, mid, args).GetS())<SUB>1154</SUB>> ]
+"5129" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetS)<SUB>1154</SUB>> ]
+"5092" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1151</SUB>> ]
+"5110" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1152</SUB>> ]
+"5130" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1154</SUB>> ]
+"5135" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1154</SUB>> ]
+"5093" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1151</SUB>> ]
+"5097" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1151</SUB>> ]
+"5104" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1151</SUB>> ]
+"5111" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1152</SUB>> ]
+"5115" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1152</SUB>> ]
+"5122" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1152</SUB>> ]
+"5098" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1151</SUB>> ]
+"5116" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1152</SUB>> ]
+"5099" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1151</SUB>> ]
+"5101" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1151</SUB>> ]
+"5117" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1152</SUB>> ]
+"5119" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1152</SUB>> ]
+"5081" [label = <(METHOD,CallNonvirtualShortMethodV)<SUB>1149</SUB>> ]
+"5136" [label = <(METHOD_RETURN,jshort)<SUB>1149</SUB>> ]
   "5088" -> "5093" 
   "5088" -> "5106" 
   "5106" -> "5111" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/96-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/96-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/96-cfg.dot	2023-06-07 19:34:22.097390830 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/96-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualShortMethodA" {  
-"5145" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1160</SUB>> ]
-"5163" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1161</SUB>> ]
-"5182" [label = <(soa,soa(env))<SUB>1162</SUB>> ]
-"5184" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetS();,return InvokeWithJValues(soa, obj, mid, args).GetS();)<SUB>1163</SUB>> ]
-"5185" [label = <(GetS,InvokeWithJValues(soa, obj, mid, args).GetS())<SUB>1163</SUB>> ]
-"5186" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetS)<SUB>1163</SUB>> ]
-"5149" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1160</SUB>> ]
-"5167" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1161</SUB>> ]
-"5187" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1163</SUB>> ]
-"5192" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1163</SUB>> ]
-"5150" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1160</SUB>> ]
-"5154" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1160</SUB>> ]
-"5161" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1160</SUB>> ]
-"5168" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1161</SUB>> ]
-"5172" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1161</SUB>> ]
-"5179" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1161</SUB>> ]
-"5155" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1160</SUB>> ]
-"5173" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1161</SUB>> ]
-"5156" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1160</SUB>> ]
-"5158" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1160</SUB>> ]
-"5174" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1161</SUB>> ]
-"5176" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1161</SUB>> ]
-"5138" [label = <(METHOD,CallNonvirtualShortMethodA)<SUB>1158</SUB>> ]
-"5193" [label = <(METHOD_RETURN,jshort)<SUB>1158</SUB>> ]
+"5145" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1159</SUB>> ]
+"5163" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1160</SUB>> ]
+"5182" [label = <(soa,soa(env))<SUB>1161</SUB>> ]
+"5184" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetS();,return InvokeWithJValues(soa, obj, mid, args).GetS();)<SUB>1162</SUB>> ]
+"5185" [label = <(GetS,InvokeWithJValues(soa, obj, mid, args).GetS())<SUB>1162</SUB>> ]
+"5186" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetS)<SUB>1162</SUB>> ]
+"5149" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1159</SUB>> ]
+"5167" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1160</SUB>> ]
+"5187" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1162</SUB>> ]
+"5192" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1162</SUB>> ]
+"5150" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1159</SUB>> ]
+"5154" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1159</SUB>> ]
+"5161" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1159</SUB>> ]
+"5168" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1160</SUB>> ]
+"5172" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1160</SUB>> ]
+"5179" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1160</SUB>> ]
+"5155" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1159</SUB>> ]
+"5173" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1160</SUB>> ]
+"5156" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1159</SUB>> ]
+"5158" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1159</SUB>> ]
+"5174" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1160</SUB>> ]
+"5176" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1160</SUB>> ]
+"5138" [label = <(METHOD,CallNonvirtualShortMethodA)<SUB>1157</SUB>> ]
+"5193" [label = <(METHOD_RETURN,jshort)<SUB>1157</SUB>> ]
   "5145" -> "5150" 
   "5145" -> "5163" 
   "5163" -> "5168" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/97-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/97-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/97-cfg.dot	2023-06-07 19:34:22.097390830 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/97-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,31 +1,31 @@
 digraph "CallNonvirtualIntMethod" {  
-"5202" [label = <(va_start,va_start(ap, mid))<SUB>1168</SUB>> ]
-"5205" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1169</SUB>> ]
-"5223" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1170</SUB>> ]
-"5242" [label = <(soa,soa(env))<SUB>1171</SUB>> ]
-"5245" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1172</SUB>> ]
-"5251" [label = <(va_end,va_end(ap))<SUB>1173</SUB>> ]
-"5253" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1174</SUB>> ]
-"5246" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1172</SUB>> ]
-"5254" [label = <(GetI,result.GetI())<SUB>1174</SUB>> ]
-"5255" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1174</SUB>> ]
-"5209" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1169</SUB>> ]
-"5227" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1170</SUB>> ]
-"5257" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1174</SUB>> ]
-"5210" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1169</SUB>> ]
-"5214" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1169</SUB>> ]
-"5221" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1169</SUB>> ]
-"5228" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1170</SUB>> ]
-"5232" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1170</SUB>> ]
-"5239" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1170</SUB>> ]
-"5215" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1169</SUB>> ]
-"5233" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1170</SUB>> ]
-"5216" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1169</SUB>> ]
-"5218" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1169</SUB>> ]
-"5234" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1170</SUB>> ]
-"5236" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1170</SUB>> ]
-"5195" [label = <(METHOD,CallNonvirtualIntMethod)<SUB>1166</SUB>> ]
-"5258" [label = <(METHOD_RETURN,jint)<SUB>1166</SUB>> ]
+"5202" [label = <(va_start,va_start(ap, mid))<SUB>1167</SUB>> ]
+"5205" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1168</SUB>> ]
+"5223" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1169</SUB>> ]
+"5242" [label = <(soa,soa(env))<SUB>1170</SUB>> ]
+"5245" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1171</SUB>> ]
+"5251" [label = <(va_end,va_end(ap))<SUB>1172</SUB>> ]
+"5253" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1173</SUB>> ]
+"5246" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1171</SUB>> ]
+"5254" [label = <(GetI,result.GetI())<SUB>1173</SUB>> ]
+"5255" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1173</SUB>> ]
+"5209" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1168</SUB>> ]
+"5227" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1169</SUB>> ]
+"5257" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1173</SUB>> ]
+"5210" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1168</SUB>> ]
+"5214" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1168</SUB>> ]
+"5221" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1168</SUB>> ]
+"5228" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1169</SUB>> ]
+"5232" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1169</SUB>> ]
+"5239" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1169</SUB>> ]
+"5215" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1168</SUB>> ]
+"5233" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1169</SUB>> ]
+"5216" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1168</SUB>> ]
+"5218" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1168</SUB>> ]
+"5234" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1169</SUB>> ]
+"5236" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1169</SUB>> ]
+"5195" [label = <(METHOD,CallNonvirtualIntMethod)<SUB>1165</SUB>> ]
+"5258" [label = <(METHOD_RETURN,jint)<SUB>1165</SUB>> ]
   "5202" -> "5205" 
   "5205" -> "5210" 
   "5205" -> "5223" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/98-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/98-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/98-cfg.dot	2023-06-07 19:34:22.097390830 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/98-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualIntMethodV" {  
-"5267" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1179</SUB>> ]
-"5285" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1180</SUB>> ]
-"5304" [label = <(soa,soa(env))<SUB>1181</SUB>> ]
-"5306" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetI();,return InvokeWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1182</SUB>> ]
-"5307" [label = <(GetI,InvokeWithVarArgs(soa, obj, mid, args).GetI())<SUB>1182</SUB>> ]
-"5308" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetI)<SUB>1182</SUB>> ]
-"5271" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1179</SUB>> ]
-"5289" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1180</SUB>> ]
-"5309" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1182</SUB>> ]
-"5314" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1182</SUB>> ]
-"5272" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1179</SUB>> ]
-"5276" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1179</SUB>> ]
-"5283" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1179</SUB>> ]
-"5290" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1180</SUB>> ]
-"5294" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1180</SUB>> ]
-"5301" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1180</SUB>> ]
-"5277" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1179</SUB>> ]
-"5295" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1180</SUB>> ]
-"5278" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1179</SUB>> ]
-"5280" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1179</SUB>> ]
-"5296" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1180</SUB>> ]
-"5298" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1180</SUB>> ]
-"5260" [label = <(METHOD,CallNonvirtualIntMethodV)<SUB>1177</SUB>> ]
-"5315" [label = <(METHOD_RETURN,jint)<SUB>1177</SUB>> ]
+"5267" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1178</SUB>> ]
+"5285" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1179</SUB>> ]
+"5304" [label = <(soa,soa(env))<SUB>1180</SUB>> ]
+"5306" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetI();,return InvokeWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1181</SUB>> ]
+"5307" [label = <(GetI,InvokeWithVarArgs(soa, obj, mid, args).GetI())<SUB>1181</SUB>> ]
+"5308" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetI)<SUB>1181</SUB>> ]
+"5271" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1178</SUB>> ]
+"5289" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1179</SUB>> ]
+"5309" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1181</SUB>> ]
+"5314" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1181</SUB>> ]
+"5272" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1178</SUB>> ]
+"5276" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1178</SUB>> ]
+"5283" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1178</SUB>> ]
+"5290" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1179</SUB>> ]
+"5294" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1179</SUB>> ]
+"5301" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1179</SUB>> ]
+"5277" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1178</SUB>> ]
+"5295" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1179</SUB>> ]
+"5278" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1178</SUB>> ]
+"5280" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1178</SUB>> ]
+"5296" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1179</SUB>> ]
+"5298" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1179</SUB>> ]
+"5260" [label = <(METHOD,CallNonvirtualIntMethodV)<SUB>1176</SUB>> ]
+"5315" [label = <(METHOD_RETURN,jint)<SUB>1176</SUB>> ]
   "5267" -> "5272" 
   "5267" -> "5285" 
   "5285" -> "5290" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/99-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/99-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/secure/out/99-cfg.dot	2023-06-07 19:34:22.097390830 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_2/vulnerable/out/99-cfg.dot	2023-06-07 19:34:28.617390223 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualIntMethodA" {  
-"5324" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1187</SUB>> ]
-"5342" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1188</SUB>> ]
-"5361" [label = <(soa,soa(env))<SUB>1189</SUB>> ]
-"5363" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetI();,return InvokeWithJValues(soa, obj, mid, args).GetI();)<SUB>1190</SUB>> ]
-"5364" [label = <(GetI,InvokeWithJValues(soa, obj, mid, args).GetI())<SUB>1190</SUB>> ]
-"5365" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetI)<SUB>1190</SUB>> ]
-"5328" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1187</SUB>> ]
-"5346" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1188</SUB>> ]
-"5366" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1190</SUB>> ]
-"5371" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1190</SUB>> ]
-"5329" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1187</SUB>> ]
-"5333" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1187</SUB>> ]
-"5340" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1187</SUB>> ]
-"5347" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1188</SUB>> ]
-"5351" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1188</SUB>> ]
-"5358" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1188</SUB>> ]
-"5334" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1187</SUB>> ]
-"5352" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1188</SUB>> ]
-"5335" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1187</SUB>> ]
-"5337" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1187</SUB>> ]
-"5353" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1188</SUB>> ]
-"5355" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1188</SUB>> ]
-"5317" [label = <(METHOD,CallNonvirtualIntMethodA)<SUB>1185</SUB>> ]
-"5372" [label = <(METHOD_RETURN,jint)<SUB>1185</SUB>> ]
+"5324" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1186</SUB>> ]
+"5342" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1187</SUB>> ]
+"5361" [label = <(soa,soa(env))<SUB>1188</SUB>> ]
+"5363" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetI();,return InvokeWithJValues(soa, obj, mid, args).GetI();)<SUB>1189</SUB>> ]
+"5364" [label = <(GetI,InvokeWithJValues(soa, obj, mid, args).GetI())<SUB>1189</SUB>> ]
+"5365" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetI)<SUB>1189</SUB>> ]
+"5328" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1186</SUB>> ]
+"5346" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1187</SUB>> ]
+"5366" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1189</SUB>> ]
+"5371" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1189</SUB>> ]
+"5329" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1186</SUB>> ]
+"5333" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;obj == null&quot;))<SUB>1186</SUB>> ]
+"5340" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1186</SUB>> ]
+"5347" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1187</SUB>> ]
+"5351" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbortF(__FUNCTION__, &quot;mid == null&quot;))<SUB>1187</SUB>> ]
+"5358" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1187</SUB>> ]
+"5334" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1186</SUB>> ]
+"5352" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1187</SUB>> ]
+"5335" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1186</SUB>> ]
+"5337" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1186</SUB>> ]
+"5353" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1187</SUB>> ]
+"5355" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1187</SUB>> ]
+"5317" [label = <(METHOD,CallNonvirtualIntMethodA)<SUB>1184</SUB>> ]
+"5372" [label = <(METHOD_RETURN,jint)<SUB>1184</SUB>> ]
   "5324" -> "5329" 
   "5324" -> "5342" 
   "5342" -> "5347" 

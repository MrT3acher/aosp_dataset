diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/0-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/0-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/0-cfg.dot	2023-06-07 19:35:41.217383241 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/0-cfg.dot	2023-06-07 19:35:47.637382817 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_8" {  
-"3" [label = <(METHOD,anonymous_lambda_8)<SUB>109</SUB>> ]
-"5" [label = <(METHOD_RETURN,ANY)<SUB>109</SUB>> ]
+"3" [label = <(METHOD,anonymous_lambda_8)<SUB>108</SUB>> ]
+"5" [label = <(METHOD_RETURN,ANY)<SUB>108</SUB>> ]
   "3" -> "5" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/1-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/1-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/1-cfg.dot	2023-06-07 19:35:41.217383241 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/1-cfg.dot	2023-06-07 19:35:47.637382817 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_9" {  
-"8" [label = <(METHOD,anonymous_lambda_9)<SUB>1934</SUB>> ]
-"12" [label = <(METHOD_RETURN,ANY)<SUB>1934</SUB>> ]
+"8" [label = <(METHOD,anonymous_lambda_9)<SUB>1932</SUB>> ]
+"12" [label = <(METHOD_RETURN,ANY)<SUB>1932</SUB>> ]
   "8" -> "12" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/10-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/10-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/10-cfg.dot	2023-06-07 19:35:41.347383235 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/10-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "NotifySetPrimitiveField" {  
-"252" [label = <(METHOD,NotifySetPrimitiveField)<SUB>212</SUB>> ]
-"257" [label = <(METHOD_RETURN,void)<SUB>212</SUB>> ]
+"252" [label = <(METHOD,NotifySetPrimitiveField)<SUB>211</SUB>> ]
+"257" [label = <(METHOD_RETURN,void)<SUB>211</SUB>> ]
   "252" -> "257" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/100-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/100-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/100-cfg.dot	2023-06-07 19:35:41.447383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/100-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualCharMethod" {  
-"5333" [label = <(va_start,va_start(ap, mid))<SUB>1253</SUB>> ]
-"5337" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1254</SUB>> ]
-"5340" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1255</SUB>> ]
-"5358" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1256</SUB>> ]
-"5377" [label = <(soa,soa(env))<SUB>1257</SUB>> ]
-"5380" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1258</SUB>> ]
-"5386" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1259</SUB>> ]
-"5338" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1254</SUB>> ]
-"5381" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1258</SUB>> ]
-"5387" [label = <(GetC,result.GetC())<SUB>1259</SUB>> ]
-"5388" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1259</SUB>> ]
-"5344" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1255</SUB>> ]
-"5362" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1256</SUB>> ]
-"5390" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1259</SUB>> ]
-"5345" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1255</SUB>> ]
-"5349" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1255</SUB>> ]
-"5356" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1255</SUB>> ]
-"5363" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1256</SUB>> ]
-"5367" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1256</SUB>> ]
-"5374" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1256</SUB>> ]
-"5350" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1255</SUB>> ]
-"5368" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1256</SUB>> ]
-"5351" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1255</SUB>> ]
-"5353" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1255</SUB>> ]
-"5369" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1256</SUB>> ]
-"5371" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1256</SUB>> ]
-"5326" [label = <(METHOD,CallNonvirtualCharMethod)<SUB>1251</SUB>> ]
-"5391" [label = <(METHOD_RETURN,jchar)<SUB>1251</SUB>> ]
+"5333" [label = <(va_start,va_start(ap, mid))<SUB>1252</SUB>> ]
+"5337" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1253</SUB>> ]
+"5340" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1254</SUB>> ]
+"5358" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1255</SUB>> ]
+"5377" [label = <(soa,soa(env))<SUB>1256</SUB>> ]
+"5380" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1257</SUB>> ]
+"5386" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1258</SUB>> ]
+"5338" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1253</SUB>> ]
+"5381" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1257</SUB>> ]
+"5387" [label = <(GetC,result.GetC())<SUB>1258</SUB>> ]
+"5388" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1258</SUB>> ]
+"5344" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1254</SUB>> ]
+"5362" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1255</SUB>> ]
+"5390" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1258</SUB>> ]
+"5345" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1254</SUB>> ]
+"5349" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1254</SUB>> ]
+"5356" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1254</SUB>> ]
+"5363" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1255</SUB>> ]
+"5367" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1255</SUB>> ]
+"5374" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1255</SUB>> ]
+"5350" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1254</SUB>> ]
+"5368" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1255</SUB>> ]
+"5351" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1254</SUB>> ]
+"5353" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1254</SUB>> ]
+"5369" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1255</SUB>> ]
+"5371" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1255</SUB>> ]
+"5326" [label = <(METHOD,CallNonvirtualCharMethod)<SUB>1250</SUB>> ]
+"5391" [label = <(METHOD_RETURN,jchar)<SUB>1250</SUB>> ]
   "5333" -> "5338" 
   "5337" -> "5340" 
   "5340" -> "5345" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/101-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/101-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/101-cfg.dot	2023-06-07 19:35:41.447383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/101-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualCharMethodV" {  
-"5400" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1264</SUB>> ]
-"5418" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1265</SUB>> ]
-"5437" [label = <(soa,soa(env))<SUB>1266</SUB>> ]
-"5439" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetC();,return InvokeWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1267</SUB>> ]
-"5440" [label = <(GetC,InvokeWithVarArgs(soa, obj, mid, args).GetC())<SUB>1267</SUB>> ]
-"5441" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetC)<SUB>1267</SUB>> ]
-"5404" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1264</SUB>> ]
-"5422" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1265</SUB>> ]
-"5442" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1267</SUB>> ]
-"5447" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1267</SUB>> ]
-"5405" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1264</SUB>> ]
-"5409" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1264</SUB>> ]
-"5416" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1264</SUB>> ]
-"5423" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1265</SUB>> ]
-"5427" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1265</SUB>> ]
-"5434" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1265</SUB>> ]
-"5410" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1264</SUB>> ]
-"5428" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1265</SUB>> ]
-"5411" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1264</SUB>> ]
-"5413" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1264</SUB>> ]
-"5429" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1265</SUB>> ]
-"5431" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1265</SUB>> ]
-"5393" [label = <(METHOD,CallNonvirtualCharMethodV)<SUB>1262</SUB>> ]
-"5448" [label = <(METHOD_RETURN,jchar)<SUB>1262</SUB>> ]
+"5400" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1263</SUB>> ]
+"5418" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1264</SUB>> ]
+"5437" [label = <(soa,soa(env))<SUB>1265</SUB>> ]
+"5439" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetC();,return InvokeWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1266</SUB>> ]
+"5440" [label = <(GetC,InvokeWithVarArgs(soa, obj, mid, args).GetC())<SUB>1266</SUB>> ]
+"5441" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetC)<SUB>1266</SUB>> ]
+"5404" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1263</SUB>> ]
+"5422" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1264</SUB>> ]
+"5442" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1266</SUB>> ]
+"5447" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1266</SUB>> ]
+"5405" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1263</SUB>> ]
+"5409" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1263</SUB>> ]
+"5416" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1263</SUB>> ]
+"5423" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1264</SUB>> ]
+"5427" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1264</SUB>> ]
+"5434" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1264</SUB>> ]
+"5410" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1263</SUB>> ]
+"5428" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1264</SUB>> ]
+"5411" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1263</SUB>> ]
+"5413" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1263</SUB>> ]
+"5429" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1264</SUB>> ]
+"5431" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1264</SUB>> ]
+"5393" [label = <(METHOD,CallNonvirtualCharMethodV)<SUB>1261</SUB>> ]
+"5448" [label = <(METHOD_RETURN,jchar)<SUB>1261</SUB>> ]
   "5400" -> "5405" 
   "5400" -> "5418" 
   "5418" -> "5423" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/102-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/102-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/102-cfg.dot	2023-06-07 19:35:41.447383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/102-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualCharMethodA" {  
-"5457" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1272</SUB>> ]
-"5475" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1273</SUB>> ]
-"5494" [label = <(soa,soa(env))<SUB>1274</SUB>> ]
-"5496" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetC();,return InvokeWithJValues(soa, obj, mid, args).GetC();)<SUB>1275</SUB>> ]
-"5497" [label = <(GetC,InvokeWithJValues(soa, obj, mid, args).GetC())<SUB>1275</SUB>> ]
-"5498" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetC)<SUB>1275</SUB>> ]
-"5461" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1272</SUB>> ]
-"5479" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1273</SUB>> ]
-"5499" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1275</SUB>> ]
-"5504" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1275</SUB>> ]
-"5462" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1272</SUB>> ]
-"5466" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1272</SUB>> ]
-"5473" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1272</SUB>> ]
-"5480" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1273</SUB>> ]
-"5484" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1273</SUB>> ]
-"5491" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1273</SUB>> ]
-"5467" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1272</SUB>> ]
-"5485" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1273</SUB>> ]
-"5468" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1272</SUB>> ]
-"5470" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1272</SUB>> ]
-"5486" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1273</SUB>> ]
-"5488" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1273</SUB>> ]
-"5450" [label = <(METHOD,CallNonvirtualCharMethodA)<SUB>1270</SUB>> ]
-"5505" [label = <(METHOD_RETURN,jchar)<SUB>1270</SUB>> ]
+"5457" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1271</SUB>> ]
+"5475" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1272</SUB>> ]
+"5494" [label = <(soa,soa(env))<SUB>1273</SUB>> ]
+"5496" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetC();,return InvokeWithJValues(soa, obj, mid, args).GetC();)<SUB>1274</SUB>> ]
+"5497" [label = <(GetC,InvokeWithJValues(soa, obj, mid, args).GetC())<SUB>1274</SUB>> ]
+"5498" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetC)<SUB>1274</SUB>> ]
+"5461" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1271</SUB>> ]
+"5479" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1272</SUB>> ]
+"5499" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1274</SUB>> ]
+"5504" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1274</SUB>> ]
+"5462" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1271</SUB>> ]
+"5466" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1271</SUB>> ]
+"5473" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1271</SUB>> ]
+"5480" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1272</SUB>> ]
+"5484" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1272</SUB>> ]
+"5491" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1272</SUB>> ]
+"5467" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1271</SUB>> ]
+"5485" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1272</SUB>> ]
+"5468" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1271</SUB>> ]
+"5470" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1271</SUB>> ]
+"5486" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1272</SUB>> ]
+"5488" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1272</SUB>> ]
+"5450" [label = <(METHOD,CallNonvirtualCharMethodA)<SUB>1269</SUB>> ]
+"5505" [label = <(METHOD_RETURN,jchar)<SUB>1269</SUB>> ]
   "5457" -> "5462" 
   "5457" -> "5475" 
   "5475" -> "5480" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/103-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/103-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/103-cfg.dot	2023-06-07 19:35:41.447383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/103-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualShortMethod" {  
-"5514" [label = <(va_start,va_start(ap, mid))<SUB>1280</SUB>> ]
-"5518" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1281</SUB>> ]
-"5521" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1282</SUB>> ]
-"5539" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1283</SUB>> ]
-"5558" [label = <(soa,soa(env))<SUB>1284</SUB>> ]
-"5561" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1285</SUB>> ]
-"5567" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1286</SUB>> ]
-"5519" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1281</SUB>> ]
-"5562" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1285</SUB>> ]
-"5568" [label = <(GetS,result.GetS())<SUB>1286</SUB>> ]
-"5569" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1286</SUB>> ]
-"5525" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1282</SUB>> ]
-"5543" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1283</SUB>> ]
-"5571" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1286</SUB>> ]
-"5526" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1282</SUB>> ]
-"5530" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1282</SUB>> ]
-"5537" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1282</SUB>> ]
-"5544" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1283</SUB>> ]
-"5548" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1283</SUB>> ]
-"5555" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1283</SUB>> ]
-"5531" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1282</SUB>> ]
-"5549" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1283</SUB>> ]
-"5532" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1282</SUB>> ]
-"5534" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1282</SUB>> ]
-"5550" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1283</SUB>> ]
-"5552" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1283</SUB>> ]
-"5507" [label = <(METHOD,CallNonvirtualShortMethod)<SUB>1278</SUB>> ]
-"5572" [label = <(METHOD_RETURN,jshort)<SUB>1278</SUB>> ]
+"5514" [label = <(va_start,va_start(ap, mid))<SUB>1279</SUB>> ]
+"5518" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1280</SUB>> ]
+"5521" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1281</SUB>> ]
+"5539" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1282</SUB>> ]
+"5558" [label = <(soa,soa(env))<SUB>1283</SUB>> ]
+"5561" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1284</SUB>> ]
+"5567" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1285</SUB>> ]
+"5519" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1280</SUB>> ]
+"5562" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1284</SUB>> ]
+"5568" [label = <(GetS,result.GetS())<SUB>1285</SUB>> ]
+"5569" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1285</SUB>> ]
+"5525" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1281</SUB>> ]
+"5543" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1282</SUB>> ]
+"5571" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1285</SUB>> ]
+"5526" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1281</SUB>> ]
+"5530" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1281</SUB>> ]
+"5537" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1281</SUB>> ]
+"5544" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1282</SUB>> ]
+"5548" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1282</SUB>> ]
+"5555" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1282</SUB>> ]
+"5531" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1281</SUB>> ]
+"5549" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1282</SUB>> ]
+"5532" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1281</SUB>> ]
+"5534" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1281</SUB>> ]
+"5550" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1282</SUB>> ]
+"5552" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1282</SUB>> ]
+"5507" [label = <(METHOD,CallNonvirtualShortMethod)<SUB>1277</SUB>> ]
+"5572" [label = <(METHOD_RETURN,jshort)<SUB>1277</SUB>> ]
   "5514" -> "5519" 
   "5518" -> "5521" 
   "5521" -> "5526" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/104-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/104-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/104-cfg.dot	2023-06-07 19:35:41.447383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/104-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualShortMethodV" {  
-"5581" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1291</SUB>> ]
-"5599" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1292</SUB>> ]
-"5618" [label = <(soa,soa(env))<SUB>1293</SUB>> ]
-"5620" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetS();,return InvokeWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1294</SUB>> ]
-"5621" [label = <(GetS,InvokeWithVarArgs(soa, obj, mid, args).GetS())<SUB>1294</SUB>> ]
-"5622" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetS)<SUB>1294</SUB>> ]
-"5585" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1291</SUB>> ]
-"5603" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1292</SUB>> ]
-"5623" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1294</SUB>> ]
-"5628" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1294</SUB>> ]
-"5586" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1291</SUB>> ]
-"5590" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1291</SUB>> ]
-"5597" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1291</SUB>> ]
-"5604" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1292</SUB>> ]
-"5608" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1292</SUB>> ]
-"5615" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1292</SUB>> ]
-"5591" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1291</SUB>> ]
-"5609" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1292</SUB>> ]
-"5592" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1291</SUB>> ]
-"5594" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1291</SUB>> ]
-"5610" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1292</SUB>> ]
-"5612" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1292</SUB>> ]
-"5574" [label = <(METHOD,CallNonvirtualShortMethodV)<SUB>1289</SUB>> ]
-"5629" [label = <(METHOD_RETURN,jshort)<SUB>1289</SUB>> ]
+"5581" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1290</SUB>> ]
+"5599" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1291</SUB>> ]
+"5618" [label = <(soa,soa(env))<SUB>1292</SUB>> ]
+"5620" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetS();,return InvokeWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1293</SUB>> ]
+"5621" [label = <(GetS,InvokeWithVarArgs(soa, obj, mid, args).GetS())<SUB>1293</SUB>> ]
+"5622" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetS)<SUB>1293</SUB>> ]
+"5585" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1290</SUB>> ]
+"5603" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1291</SUB>> ]
+"5623" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1293</SUB>> ]
+"5628" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1293</SUB>> ]
+"5586" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1290</SUB>> ]
+"5590" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1290</SUB>> ]
+"5597" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1290</SUB>> ]
+"5604" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1291</SUB>> ]
+"5608" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1291</SUB>> ]
+"5615" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1291</SUB>> ]
+"5591" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1290</SUB>> ]
+"5609" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1291</SUB>> ]
+"5592" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1290</SUB>> ]
+"5594" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1290</SUB>> ]
+"5610" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1291</SUB>> ]
+"5612" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1291</SUB>> ]
+"5574" [label = <(METHOD,CallNonvirtualShortMethodV)<SUB>1288</SUB>> ]
+"5629" [label = <(METHOD_RETURN,jshort)<SUB>1288</SUB>> ]
   "5581" -> "5586" 
   "5581" -> "5599" 
   "5599" -> "5604" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/105-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/105-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/105-cfg.dot	2023-06-07 19:35:41.447383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/105-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualShortMethodA" {  
-"5638" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1299</SUB>> ]
-"5656" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1300</SUB>> ]
-"5675" [label = <(soa,soa(env))<SUB>1301</SUB>> ]
-"5677" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetS();,return InvokeWithJValues(soa, obj, mid, args).GetS();)<SUB>1302</SUB>> ]
-"5678" [label = <(GetS,InvokeWithJValues(soa, obj, mid, args).GetS())<SUB>1302</SUB>> ]
-"5679" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetS)<SUB>1302</SUB>> ]
-"5642" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1299</SUB>> ]
-"5660" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1300</SUB>> ]
-"5680" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1302</SUB>> ]
-"5685" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1302</SUB>> ]
-"5643" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1299</SUB>> ]
-"5647" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1299</SUB>> ]
-"5654" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1299</SUB>> ]
-"5661" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1300</SUB>> ]
-"5665" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1300</SUB>> ]
-"5672" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1300</SUB>> ]
-"5648" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1299</SUB>> ]
-"5666" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1300</SUB>> ]
-"5649" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1299</SUB>> ]
-"5651" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1299</SUB>> ]
-"5667" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1300</SUB>> ]
-"5669" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1300</SUB>> ]
-"5631" [label = <(METHOD,CallNonvirtualShortMethodA)<SUB>1297</SUB>> ]
-"5686" [label = <(METHOD_RETURN,jshort)<SUB>1297</SUB>> ]
+"5638" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1298</SUB>> ]
+"5656" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1299</SUB>> ]
+"5675" [label = <(soa,soa(env))<SUB>1300</SUB>> ]
+"5677" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetS();,return InvokeWithJValues(soa, obj, mid, args).GetS();)<SUB>1301</SUB>> ]
+"5678" [label = <(GetS,InvokeWithJValues(soa, obj, mid, args).GetS())<SUB>1301</SUB>> ]
+"5679" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetS)<SUB>1301</SUB>> ]
+"5642" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1298</SUB>> ]
+"5660" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1299</SUB>> ]
+"5680" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1301</SUB>> ]
+"5685" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1301</SUB>> ]
+"5643" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1298</SUB>> ]
+"5647" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1298</SUB>> ]
+"5654" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1298</SUB>> ]
+"5661" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1299</SUB>> ]
+"5665" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1299</SUB>> ]
+"5672" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1299</SUB>> ]
+"5648" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1298</SUB>> ]
+"5666" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1299</SUB>> ]
+"5649" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1298</SUB>> ]
+"5651" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1298</SUB>> ]
+"5667" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1299</SUB>> ]
+"5669" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1299</SUB>> ]
+"5631" [label = <(METHOD,CallNonvirtualShortMethodA)<SUB>1296</SUB>> ]
+"5686" [label = <(METHOD_RETURN,jshort)<SUB>1296</SUB>> ]
   "5638" -> "5643" 
   "5638" -> "5656" 
   "5656" -> "5661" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/106-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/106-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/106-cfg.dot	2023-06-07 19:35:41.447383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/106-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualIntMethod" {  
-"5695" [label = <(va_start,va_start(ap, mid))<SUB>1307</SUB>> ]
-"5699" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1308</SUB>> ]
-"5702" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1309</SUB>> ]
-"5720" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1310</SUB>> ]
-"5739" [label = <(soa,soa(env))<SUB>1311</SUB>> ]
-"5742" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1312</SUB>> ]
-"5748" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1313</SUB>> ]
-"5700" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1308</SUB>> ]
-"5743" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1312</SUB>> ]
-"5749" [label = <(GetI,result.GetI())<SUB>1313</SUB>> ]
-"5750" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1313</SUB>> ]
-"5706" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1309</SUB>> ]
-"5724" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1310</SUB>> ]
-"5752" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1313</SUB>> ]
-"5707" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1309</SUB>> ]
-"5711" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1309</SUB>> ]
-"5718" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1309</SUB>> ]
-"5725" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1310</SUB>> ]
-"5729" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1310</SUB>> ]
-"5736" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1310</SUB>> ]
-"5712" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1309</SUB>> ]
-"5730" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1310</SUB>> ]
-"5713" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1309</SUB>> ]
-"5715" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1309</SUB>> ]
-"5731" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1310</SUB>> ]
-"5733" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1310</SUB>> ]
-"5688" [label = <(METHOD,CallNonvirtualIntMethod)<SUB>1305</SUB>> ]
-"5753" [label = <(METHOD_RETURN,jint)<SUB>1305</SUB>> ]
+"5695" [label = <(va_start,va_start(ap, mid))<SUB>1306</SUB>> ]
+"5699" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1307</SUB>> ]
+"5702" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1308</SUB>> ]
+"5720" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1309</SUB>> ]
+"5739" [label = <(soa,soa(env))<SUB>1310</SUB>> ]
+"5742" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1311</SUB>> ]
+"5748" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1312</SUB>> ]
+"5700" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1307</SUB>> ]
+"5743" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1311</SUB>> ]
+"5749" [label = <(GetI,result.GetI())<SUB>1312</SUB>> ]
+"5750" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1312</SUB>> ]
+"5706" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1308</SUB>> ]
+"5724" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1309</SUB>> ]
+"5752" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1312</SUB>> ]
+"5707" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1308</SUB>> ]
+"5711" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1308</SUB>> ]
+"5718" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1308</SUB>> ]
+"5725" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1309</SUB>> ]
+"5729" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1309</SUB>> ]
+"5736" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1309</SUB>> ]
+"5712" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1308</SUB>> ]
+"5730" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1309</SUB>> ]
+"5713" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1308</SUB>> ]
+"5715" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1308</SUB>> ]
+"5731" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1309</SUB>> ]
+"5733" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1309</SUB>> ]
+"5688" [label = <(METHOD,CallNonvirtualIntMethod)<SUB>1304</SUB>> ]
+"5753" [label = <(METHOD_RETURN,jint)<SUB>1304</SUB>> ]
   "5695" -> "5700" 
   "5699" -> "5702" 
   "5702" -> "5707" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/107-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/107-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/107-cfg.dot	2023-06-07 19:35:41.447383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/107-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualIntMethodV" {  
-"5762" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1318</SUB>> ]
-"5780" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1319</SUB>> ]
-"5799" [label = <(soa,soa(env))<SUB>1320</SUB>> ]
-"5801" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetI();,return InvokeWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1321</SUB>> ]
-"5802" [label = <(GetI,InvokeWithVarArgs(soa, obj, mid, args).GetI())<SUB>1321</SUB>> ]
-"5803" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetI)<SUB>1321</SUB>> ]
-"5766" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1318</SUB>> ]
-"5784" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1319</SUB>> ]
-"5804" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1321</SUB>> ]
-"5809" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1321</SUB>> ]
-"5767" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1318</SUB>> ]
-"5771" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1318</SUB>> ]
-"5778" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1318</SUB>> ]
-"5785" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1319</SUB>> ]
-"5789" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1319</SUB>> ]
-"5796" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1319</SUB>> ]
-"5772" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1318</SUB>> ]
-"5790" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1319</SUB>> ]
-"5773" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1318</SUB>> ]
-"5775" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1318</SUB>> ]
-"5791" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1319</SUB>> ]
-"5793" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1319</SUB>> ]
-"5755" [label = <(METHOD,CallNonvirtualIntMethodV)<SUB>1316</SUB>> ]
-"5810" [label = <(METHOD_RETURN,jint)<SUB>1316</SUB>> ]
+"5762" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1317</SUB>> ]
+"5780" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1318</SUB>> ]
+"5799" [label = <(soa,soa(env))<SUB>1319</SUB>> ]
+"5801" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetI();,return InvokeWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1320</SUB>> ]
+"5802" [label = <(GetI,InvokeWithVarArgs(soa, obj, mid, args).GetI())<SUB>1320</SUB>> ]
+"5803" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetI)<SUB>1320</SUB>> ]
+"5766" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1317</SUB>> ]
+"5784" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1318</SUB>> ]
+"5804" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1320</SUB>> ]
+"5809" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1320</SUB>> ]
+"5767" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1317</SUB>> ]
+"5771" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1317</SUB>> ]
+"5778" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1317</SUB>> ]
+"5785" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1318</SUB>> ]
+"5789" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1318</SUB>> ]
+"5796" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1318</SUB>> ]
+"5772" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1317</SUB>> ]
+"5790" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1318</SUB>> ]
+"5773" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1317</SUB>> ]
+"5775" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1317</SUB>> ]
+"5791" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1318</SUB>> ]
+"5793" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1318</SUB>> ]
+"5755" [label = <(METHOD,CallNonvirtualIntMethodV)<SUB>1315</SUB>> ]
+"5810" [label = <(METHOD_RETURN,jint)<SUB>1315</SUB>> ]
   "5762" -> "5767" 
   "5762" -> "5780" 
   "5780" -> "5785" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/108-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/108-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/108-cfg.dot	2023-06-07 19:35:41.457383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/108-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualIntMethodA" {  
-"5819" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1326</SUB>> ]
-"5837" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1327</SUB>> ]
-"5856" [label = <(soa,soa(env))<SUB>1328</SUB>> ]
-"5858" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetI();,return InvokeWithJValues(soa, obj, mid, args).GetI();)<SUB>1329</SUB>> ]
-"5859" [label = <(GetI,InvokeWithJValues(soa, obj, mid, args).GetI())<SUB>1329</SUB>> ]
-"5860" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetI)<SUB>1329</SUB>> ]
-"5823" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1326</SUB>> ]
-"5841" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1327</SUB>> ]
-"5861" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1329</SUB>> ]
-"5866" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1329</SUB>> ]
-"5824" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1326</SUB>> ]
-"5828" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1326</SUB>> ]
-"5835" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1326</SUB>> ]
-"5842" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1327</SUB>> ]
-"5846" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1327</SUB>> ]
-"5853" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1327</SUB>> ]
-"5829" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1326</SUB>> ]
-"5847" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1327</SUB>> ]
-"5830" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1326</SUB>> ]
-"5832" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1326</SUB>> ]
-"5848" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1327</SUB>> ]
-"5850" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1327</SUB>> ]
-"5812" [label = <(METHOD,CallNonvirtualIntMethodA)<SUB>1324</SUB>> ]
-"5867" [label = <(METHOD_RETURN,jint)<SUB>1324</SUB>> ]
+"5819" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1325</SUB>> ]
+"5837" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1326</SUB>> ]
+"5856" [label = <(soa,soa(env))<SUB>1327</SUB>> ]
+"5858" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetI();,return InvokeWithJValues(soa, obj, mid, args).GetI();)<SUB>1328</SUB>> ]
+"5859" [label = <(GetI,InvokeWithJValues(soa, obj, mid, args).GetI())<SUB>1328</SUB>> ]
+"5860" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetI)<SUB>1328</SUB>> ]
+"5823" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1325</SUB>> ]
+"5841" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1326</SUB>> ]
+"5861" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1328</SUB>> ]
+"5866" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1328</SUB>> ]
+"5824" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1325</SUB>> ]
+"5828" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1325</SUB>> ]
+"5835" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1325</SUB>> ]
+"5842" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1326</SUB>> ]
+"5846" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1326</SUB>> ]
+"5853" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1326</SUB>> ]
+"5829" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1325</SUB>> ]
+"5847" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1326</SUB>> ]
+"5830" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1325</SUB>> ]
+"5832" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1325</SUB>> ]
+"5848" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1326</SUB>> ]
+"5850" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1326</SUB>> ]
+"5812" [label = <(METHOD,CallNonvirtualIntMethodA)<SUB>1323</SUB>> ]
+"5867" [label = <(METHOD_RETURN,jint)<SUB>1323</SUB>> ]
   "5819" -> "5824" 
   "5819" -> "5837" 
   "5837" -> "5842" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/109-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/109-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/109-cfg.dot	2023-06-07 19:35:41.457383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/109-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualLongMethod" {  
-"5876" [label = <(va_start,va_start(ap, mid))<SUB>1334</SUB>> ]
-"5880" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1335</SUB>> ]
-"5883" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1336</SUB>> ]
-"5901" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1337</SUB>> ]
-"5920" [label = <(soa,soa(env))<SUB>1338</SUB>> ]
-"5923" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1339</SUB>> ]
-"5929" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1340</SUB>> ]
-"5881" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1335</SUB>> ]
-"5924" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1339</SUB>> ]
-"5930" [label = <(GetJ,result.GetJ())<SUB>1340</SUB>> ]
-"5931" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1340</SUB>> ]
-"5887" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1336</SUB>> ]
-"5905" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1337</SUB>> ]
-"5933" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1340</SUB>> ]
-"5888" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1336</SUB>> ]
-"5892" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1336</SUB>> ]
-"5899" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1336</SUB>> ]
-"5906" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1337</SUB>> ]
-"5910" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1337</SUB>> ]
-"5917" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1337</SUB>> ]
-"5893" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1336</SUB>> ]
-"5911" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1337</SUB>> ]
-"5894" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1336</SUB>> ]
-"5896" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1336</SUB>> ]
-"5912" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1337</SUB>> ]
-"5914" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1337</SUB>> ]
-"5869" [label = <(METHOD,CallNonvirtualLongMethod)<SUB>1332</SUB>> ]
-"5934" [label = <(METHOD_RETURN,jlong)<SUB>1332</SUB>> ]
+"5876" [label = <(va_start,va_start(ap, mid))<SUB>1333</SUB>> ]
+"5880" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1334</SUB>> ]
+"5883" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1335</SUB>> ]
+"5901" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1336</SUB>> ]
+"5920" [label = <(soa,soa(env))<SUB>1337</SUB>> ]
+"5923" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1338</SUB>> ]
+"5929" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1339</SUB>> ]
+"5881" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1334</SUB>> ]
+"5924" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1338</SUB>> ]
+"5930" [label = <(GetJ,result.GetJ())<SUB>1339</SUB>> ]
+"5931" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1339</SUB>> ]
+"5887" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1335</SUB>> ]
+"5905" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1336</SUB>> ]
+"5933" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1339</SUB>> ]
+"5888" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1335</SUB>> ]
+"5892" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1335</SUB>> ]
+"5899" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1335</SUB>> ]
+"5906" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1336</SUB>> ]
+"5910" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1336</SUB>> ]
+"5917" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1336</SUB>> ]
+"5893" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1335</SUB>> ]
+"5911" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1336</SUB>> ]
+"5894" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1335</SUB>> ]
+"5896" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1335</SUB>> ]
+"5912" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1336</SUB>> ]
+"5914" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1336</SUB>> ]
+"5869" [label = <(METHOD,CallNonvirtualLongMethod)<SUB>1331</SUB>> ]
+"5934" [label = <(METHOD_RETURN,jlong)<SUB>1331</SUB>> ]
   "5876" -> "5881" 
   "5880" -> "5883" 
   "5883" -> "5888" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/11-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/11-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/11-cfg.dot	2023-06-07 19:35:41.347383235 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/11-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "NotifyGetField" {  
-"273" [label = <(METHOD,NotifyGetField)<SUB>237</SUB>> ]
-"277" [label = <(METHOD_RETURN,void)<SUB>237</SUB>> ]
+"273" [label = <(METHOD,NotifyGetField)<SUB>236</SUB>> ]
+"277" [label = <(METHOD_RETURN,void)<SUB>236</SUB>> ]
   "273" -> "277" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/110-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/110-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/110-cfg.dot	2023-06-07 19:35:41.457383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/110-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualLongMethodV" {  
-"5943" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1345</SUB>> ]
-"5961" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1346</SUB>> ]
-"5980" [label = <(soa,soa(env))<SUB>1347</SUB>> ]
-"5982" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1348</SUB>> ]
-"5983" [label = <(GetJ,InvokeWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1348</SUB>> ]
-"5984" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1348</SUB>> ]
-"5947" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1345</SUB>> ]
-"5965" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1346</SUB>> ]
-"5985" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1348</SUB>> ]
-"5990" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1348</SUB>> ]
-"5948" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1345</SUB>> ]
-"5952" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1345</SUB>> ]
-"5959" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1345</SUB>> ]
-"5966" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1346</SUB>> ]
-"5970" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1346</SUB>> ]
-"5977" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1346</SUB>> ]
-"5953" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1345</SUB>> ]
-"5971" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1346</SUB>> ]
-"5954" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1345</SUB>> ]
-"5956" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1345</SUB>> ]
-"5972" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1346</SUB>> ]
-"5974" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1346</SUB>> ]
-"5936" [label = <(METHOD,CallNonvirtualLongMethodV)<SUB>1343</SUB>> ]
-"5991" [label = <(METHOD_RETURN,jlong)<SUB>1343</SUB>> ]
+"5943" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1344</SUB>> ]
+"5961" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1345</SUB>> ]
+"5980" [label = <(soa,soa(env))<SUB>1346</SUB>> ]
+"5982" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1347</SUB>> ]
+"5983" [label = <(GetJ,InvokeWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1347</SUB>> ]
+"5984" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1347</SUB>> ]
+"5947" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1344</SUB>> ]
+"5965" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1345</SUB>> ]
+"5985" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1347</SUB>> ]
+"5990" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1347</SUB>> ]
+"5948" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1344</SUB>> ]
+"5952" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1344</SUB>> ]
+"5959" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1344</SUB>> ]
+"5966" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1345</SUB>> ]
+"5970" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1345</SUB>> ]
+"5977" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1345</SUB>> ]
+"5953" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1344</SUB>> ]
+"5971" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1345</SUB>> ]
+"5954" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1344</SUB>> ]
+"5956" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1344</SUB>> ]
+"5972" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1345</SUB>> ]
+"5974" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1345</SUB>> ]
+"5936" [label = <(METHOD,CallNonvirtualLongMethodV)<SUB>1342</SUB>> ]
+"5991" [label = <(METHOD_RETURN,jlong)<SUB>1342</SUB>> ]
   "5943" -> "5948" 
   "5943" -> "5961" 
   "5961" -> "5966" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/111-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/111-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/111-cfg.dot	2023-06-07 19:35:41.457383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/111-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualLongMethodA" {  
-"6000" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1353</SUB>> ]
-"6018" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1354</SUB>> ]
-"6037" [label = <(soa,soa(env))<SUB>1355</SUB>> ]
-"6039" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetJ();,return InvokeWithJValues(soa, obj, mid, args).GetJ();)<SUB>1356</SUB>> ]
-"6040" [label = <(GetJ,InvokeWithJValues(soa, obj, mid, args).GetJ())<SUB>1356</SUB>> ]
-"6041" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetJ)<SUB>1356</SUB>> ]
-"6004" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1353</SUB>> ]
-"6022" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1354</SUB>> ]
-"6042" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1356</SUB>> ]
-"6047" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1356</SUB>> ]
-"6005" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1353</SUB>> ]
-"6009" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1353</SUB>> ]
-"6016" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1353</SUB>> ]
-"6023" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1354</SUB>> ]
-"6027" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1354</SUB>> ]
-"6034" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1354</SUB>> ]
-"6010" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1353</SUB>> ]
-"6028" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1354</SUB>> ]
-"6011" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1353</SUB>> ]
-"6013" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1353</SUB>> ]
-"6029" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1354</SUB>> ]
-"6031" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1354</SUB>> ]
-"5993" [label = <(METHOD,CallNonvirtualLongMethodA)<SUB>1351</SUB>> ]
-"6048" [label = <(METHOD_RETURN,jlong)<SUB>1351</SUB>> ]
+"6000" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1352</SUB>> ]
+"6018" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1353</SUB>> ]
+"6037" [label = <(soa,soa(env))<SUB>1354</SUB>> ]
+"6039" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetJ();,return InvokeWithJValues(soa, obj, mid, args).GetJ();)<SUB>1355</SUB>> ]
+"6040" [label = <(GetJ,InvokeWithJValues(soa, obj, mid, args).GetJ())<SUB>1355</SUB>> ]
+"6041" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetJ)<SUB>1355</SUB>> ]
+"6004" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1352</SUB>> ]
+"6022" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1353</SUB>> ]
+"6042" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1355</SUB>> ]
+"6047" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1355</SUB>> ]
+"6005" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1352</SUB>> ]
+"6009" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1352</SUB>> ]
+"6016" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1352</SUB>> ]
+"6023" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1353</SUB>> ]
+"6027" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1353</SUB>> ]
+"6034" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1353</SUB>> ]
+"6010" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1352</SUB>> ]
+"6028" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1353</SUB>> ]
+"6011" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1352</SUB>> ]
+"6013" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1352</SUB>> ]
+"6029" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1353</SUB>> ]
+"6031" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1353</SUB>> ]
+"5993" [label = <(METHOD,CallNonvirtualLongMethodA)<SUB>1350</SUB>> ]
+"6048" [label = <(METHOD_RETURN,jlong)<SUB>1350</SUB>> ]
   "6000" -> "6005" 
   "6000" -> "6018" 
   "6018" -> "6023" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/112-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/112-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/112-cfg.dot	2023-06-07 19:35:41.457383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/112-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualFloatMethod" {  
-"6057" [label = <(va_start,va_start(ap, mid))<SUB>1361</SUB>> ]
-"6061" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1362</SUB>> ]
-"6064" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1363</SUB>> ]
-"6082" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1364</SUB>> ]
-"6101" [label = <(soa,soa(env))<SUB>1365</SUB>> ]
-"6104" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1366</SUB>> ]
-"6110" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1367</SUB>> ]
-"6062" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1362</SUB>> ]
-"6105" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1366</SUB>> ]
-"6111" [label = <(GetF,result.GetF())<SUB>1367</SUB>> ]
-"6112" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1367</SUB>> ]
-"6068" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1363</SUB>> ]
-"6086" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1364</SUB>> ]
-"6114" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1367</SUB>> ]
-"6069" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1363</SUB>> ]
-"6073" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1363</SUB>> ]
-"6080" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1363</SUB>> ]
-"6087" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1364</SUB>> ]
-"6091" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1364</SUB>> ]
-"6098" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1364</SUB>> ]
-"6074" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1363</SUB>> ]
-"6092" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1364</SUB>> ]
-"6075" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1363</SUB>> ]
-"6077" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1363</SUB>> ]
-"6093" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1364</SUB>> ]
-"6095" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1364</SUB>> ]
-"6050" [label = <(METHOD,CallNonvirtualFloatMethod)<SUB>1359</SUB>> ]
-"6115" [label = <(METHOD_RETURN,jfloat)<SUB>1359</SUB>> ]
+"6057" [label = <(va_start,va_start(ap, mid))<SUB>1360</SUB>> ]
+"6061" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1361</SUB>> ]
+"6064" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1362</SUB>> ]
+"6082" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1363</SUB>> ]
+"6101" [label = <(soa,soa(env))<SUB>1364</SUB>> ]
+"6104" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1365</SUB>> ]
+"6110" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1366</SUB>> ]
+"6062" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1361</SUB>> ]
+"6105" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1365</SUB>> ]
+"6111" [label = <(GetF,result.GetF())<SUB>1366</SUB>> ]
+"6112" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1366</SUB>> ]
+"6068" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1362</SUB>> ]
+"6086" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1363</SUB>> ]
+"6114" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1366</SUB>> ]
+"6069" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1362</SUB>> ]
+"6073" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1362</SUB>> ]
+"6080" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1362</SUB>> ]
+"6087" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1363</SUB>> ]
+"6091" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1363</SUB>> ]
+"6098" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1363</SUB>> ]
+"6074" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1362</SUB>> ]
+"6092" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1363</SUB>> ]
+"6075" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1362</SUB>> ]
+"6077" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1362</SUB>> ]
+"6093" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1363</SUB>> ]
+"6095" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1363</SUB>> ]
+"6050" [label = <(METHOD,CallNonvirtualFloatMethod)<SUB>1358</SUB>> ]
+"6115" [label = <(METHOD_RETURN,jfloat)<SUB>1358</SUB>> ]
   "6057" -> "6062" 
   "6061" -> "6064" 
   "6064" -> "6069" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/113-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/113-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/113-cfg.dot	2023-06-07 19:35:41.457383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/113-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualFloatMethodV" {  
-"6124" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1372</SUB>> ]
-"6142" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1373</SUB>> ]
-"6161" [label = <(soa,soa(env))<SUB>1374</SUB>> ]
-"6163" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetF();,return InvokeWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1375</SUB>> ]
-"6164" [label = <(GetF,InvokeWithVarArgs(soa, obj, mid, args).GetF())<SUB>1375</SUB>> ]
-"6165" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetF)<SUB>1375</SUB>> ]
-"6128" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1372</SUB>> ]
-"6146" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1373</SUB>> ]
-"6166" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1375</SUB>> ]
-"6171" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1375</SUB>> ]
-"6129" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1372</SUB>> ]
-"6133" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1372</SUB>> ]
-"6140" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1372</SUB>> ]
-"6147" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1373</SUB>> ]
-"6151" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1373</SUB>> ]
-"6158" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1373</SUB>> ]
-"6134" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1372</SUB>> ]
-"6152" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1373</SUB>> ]
-"6135" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1372</SUB>> ]
-"6137" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1372</SUB>> ]
-"6153" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1373</SUB>> ]
-"6155" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1373</SUB>> ]
-"6117" [label = <(METHOD,CallNonvirtualFloatMethodV)<SUB>1370</SUB>> ]
-"6172" [label = <(METHOD_RETURN,jfloat)<SUB>1370</SUB>> ]
+"6124" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1371</SUB>> ]
+"6142" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1372</SUB>> ]
+"6161" [label = <(soa,soa(env))<SUB>1373</SUB>> ]
+"6163" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetF();,return InvokeWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1374</SUB>> ]
+"6164" [label = <(GetF,InvokeWithVarArgs(soa, obj, mid, args).GetF())<SUB>1374</SUB>> ]
+"6165" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetF)<SUB>1374</SUB>> ]
+"6128" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1371</SUB>> ]
+"6146" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1372</SUB>> ]
+"6166" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1374</SUB>> ]
+"6171" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1374</SUB>> ]
+"6129" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1371</SUB>> ]
+"6133" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1371</SUB>> ]
+"6140" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1371</SUB>> ]
+"6147" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1372</SUB>> ]
+"6151" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1372</SUB>> ]
+"6158" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1372</SUB>> ]
+"6134" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1371</SUB>> ]
+"6152" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1372</SUB>> ]
+"6135" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1371</SUB>> ]
+"6137" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1371</SUB>> ]
+"6153" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1372</SUB>> ]
+"6155" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1372</SUB>> ]
+"6117" [label = <(METHOD,CallNonvirtualFloatMethodV)<SUB>1369</SUB>> ]
+"6172" [label = <(METHOD_RETURN,jfloat)<SUB>1369</SUB>> ]
   "6124" -> "6129" 
   "6124" -> "6142" 
   "6142" -> "6147" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/114-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/114-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/114-cfg.dot	2023-06-07 19:35:41.457383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/114-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualFloatMethodA" {  
-"6181" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1380</SUB>> ]
-"6199" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1381</SUB>> ]
-"6218" [label = <(soa,soa(env))<SUB>1382</SUB>> ]
-"6220" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetF();,return InvokeWithJValues(soa, obj, mid, args).GetF();)<SUB>1383</SUB>> ]
-"6221" [label = <(GetF,InvokeWithJValues(soa, obj, mid, args).GetF())<SUB>1383</SUB>> ]
-"6222" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetF)<SUB>1383</SUB>> ]
-"6185" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1380</SUB>> ]
-"6203" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1381</SUB>> ]
-"6223" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1383</SUB>> ]
-"6228" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1383</SUB>> ]
-"6186" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1380</SUB>> ]
-"6190" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1380</SUB>> ]
-"6197" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1380</SUB>> ]
-"6204" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1381</SUB>> ]
-"6208" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1381</SUB>> ]
-"6215" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1381</SUB>> ]
-"6191" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1380</SUB>> ]
-"6209" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1381</SUB>> ]
-"6192" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1380</SUB>> ]
-"6194" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1380</SUB>> ]
-"6210" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1381</SUB>> ]
-"6212" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1381</SUB>> ]
-"6174" [label = <(METHOD,CallNonvirtualFloatMethodA)<SUB>1378</SUB>> ]
-"6229" [label = <(METHOD_RETURN,jfloat)<SUB>1378</SUB>> ]
+"6181" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1379</SUB>> ]
+"6199" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1380</SUB>> ]
+"6218" [label = <(soa,soa(env))<SUB>1381</SUB>> ]
+"6220" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetF();,return InvokeWithJValues(soa, obj, mid, args).GetF();)<SUB>1382</SUB>> ]
+"6221" [label = <(GetF,InvokeWithJValues(soa, obj, mid, args).GetF())<SUB>1382</SUB>> ]
+"6222" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetF)<SUB>1382</SUB>> ]
+"6185" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1379</SUB>> ]
+"6203" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1380</SUB>> ]
+"6223" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1382</SUB>> ]
+"6228" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1382</SUB>> ]
+"6186" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1379</SUB>> ]
+"6190" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1379</SUB>> ]
+"6197" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1379</SUB>> ]
+"6204" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1380</SUB>> ]
+"6208" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1380</SUB>> ]
+"6215" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1380</SUB>> ]
+"6191" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1379</SUB>> ]
+"6209" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1380</SUB>> ]
+"6192" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1379</SUB>> ]
+"6194" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1379</SUB>> ]
+"6210" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1380</SUB>> ]
+"6212" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1380</SUB>> ]
+"6174" [label = <(METHOD,CallNonvirtualFloatMethodA)<SUB>1377</SUB>> ]
+"6229" [label = <(METHOD_RETURN,jfloat)<SUB>1377</SUB>> ]
   "6181" -> "6186" 
   "6181" -> "6199" 
   "6199" -> "6204" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/115-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/115-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/115-cfg.dot	2023-06-07 19:35:41.457383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/115-cfg.dot	2023-06-07 19:35:47.887382795 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualDoubleMethod" {  
-"6238" [label = <(va_start,va_start(ap, mid))<SUB>1388</SUB>> ]
-"6242" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1389</SUB>> ]
-"6245" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1390</SUB>> ]
-"6263" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1391</SUB>> ]
-"6282" [label = <(soa,soa(env))<SUB>1392</SUB>> ]
-"6285" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1393</SUB>> ]
-"6291" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1394</SUB>> ]
-"6243" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1389</SUB>> ]
-"6286" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1393</SUB>> ]
-"6292" [label = <(GetD,result.GetD())<SUB>1394</SUB>> ]
-"6293" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1394</SUB>> ]
-"6249" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1390</SUB>> ]
-"6267" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1391</SUB>> ]
-"6295" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1394</SUB>> ]
-"6250" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1390</SUB>> ]
-"6254" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1390</SUB>> ]
-"6261" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1390</SUB>> ]
-"6268" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1391</SUB>> ]
-"6272" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1391</SUB>> ]
-"6279" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1391</SUB>> ]
-"6255" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1390</SUB>> ]
-"6273" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1391</SUB>> ]
-"6256" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1390</SUB>> ]
-"6258" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1390</SUB>> ]
-"6274" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1391</SUB>> ]
-"6276" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1391</SUB>> ]
-"6231" [label = <(METHOD,CallNonvirtualDoubleMethod)<SUB>1386</SUB>> ]
-"6296" [label = <(METHOD_RETURN,jdouble)<SUB>1386</SUB>> ]
+"6238" [label = <(va_start,va_start(ap, mid))<SUB>1387</SUB>> ]
+"6242" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1388</SUB>> ]
+"6245" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1389</SUB>> ]
+"6263" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1390</SUB>> ]
+"6282" [label = <(soa,soa(env))<SUB>1391</SUB>> ]
+"6285" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1392</SUB>> ]
+"6291" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1393</SUB>> ]
+"6243" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1388</SUB>> ]
+"6286" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1392</SUB>> ]
+"6292" [label = <(GetD,result.GetD())<SUB>1393</SUB>> ]
+"6293" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1393</SUB>> ]
+"6249" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1389</SUB>> ]
+"6267" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1390</SUB>> ]
+"6295" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1393</SUB>> ]
+"6250" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1389</SUB>> ]
+"6254" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1389</SUB>> ]
+"6261" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1389</SUB>> ]
+"6268" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1390</SUB>> ]
+"6272" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1390</SUB>> ]
+"6279" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1390</SUB>> ]
+"6255" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1389</SUB>> ]
+"6273" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1390</SUB>> ]
+"6256" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1389</SUB>> ]
+"6258" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1389</SUB>> ]
+"6274" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1390</SUB>> ]
+"6276" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1390</SUB>> ]
+"6231" [label = <(METHOD,CallNonvirtualDoubleMethod)<SUB>1385</SUB>> ]
+"6296" [label = <(METHOD_RETURN,jdouble)<SUB>1385</SUB>> ]
   "6238" -> "6243" 
   "6242" -> "6245" 
   "6245" -> "6250" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/116-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/116-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/116-cfg.dot	2023-06-07 19:35:41.457383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/116-cfg.dot	2023-06-07 19:35:47.897382796 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualDoubleMethodV" {  
-"6305" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1399</SUB>> ]
-"6323" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1400</SUB>> ]
-"6342" [label = <(soa,soa(env))<SUB>1401</SUB>> ]
-"6344" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetD();,return InvokeWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1402</SUB>> ]
-"6345" [label = <(GetD,InvokeWithVarArgs(soa, obj, mid, args).GetD())<SUB>1402</SUB>> ]
-"6346" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetD)<SUB>1402</SUB>> ]
-"6309" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1399</SUB>> ]
-"6327" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1400</SUB>> ]
-"6347" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1402</SUB>> ]
-"6352" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1402</SUB>> ]
-"6310" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1399</SUB>> ]
-"6314" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1399</SUB>> ]
-"6321" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1399</SUB>> ]
-"6328" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1400</SUB>> ]
-"6332" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1400</SUB>> ]
-"6339" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1400</SUB>> ]
-"6315" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1399</SUB>> ]
-"6333" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1400</SUB>> ]
-"6316" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1399</SUB>> ]
-"6318" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1399</SUB>> ]
-"6334" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1400</SUB>> ]
-"6336" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1400</SUB>> ]
-"6298" [label = <(METHOD,CallNonvirtualDoubleMethodV)<SUB>1397</SUB>> ]
-"6353" [label = <(METHOD_RETURN,jdouble)<SUB>1397</SUB>> ]
+"6305" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1398</SUB>> ]
+"6323" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1399</SUB>> ]
+"6342" [label = <(soa,soa(env))<SUB>1400</SUB>> ]
+"6344" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetD();,return InvokeWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1401</SUB>> ]
+"6345" [label = <(GetD,InvokeWithVarArgs(soa, obj, mid, args).GetD())<SUB>1401</SUB>> ]
+"6346" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetD)<SUB>1401</SUB>> ]
+"6309" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1398</SUB>> ]
+"6327" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1399</SUB>> ]
+"6347" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1401</SUB>> ]
+"6352" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1401</SUB>> ]
+"6310" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1398</SUB>> ]
+"6314" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1398</SUB>> ]
+"6321" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1398</SUB>> ]
+"6328" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1399</SUB>> ]
+"6332" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1399</SUB>> ]
+"6339" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1399</SUB>> ]
+"6315" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1398</SUB>> ]
+"6333" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1399</SUB>> ]
+"6316" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1398</SUB>> ]
+"6318" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1398</SUB>> ]
+"6334" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1399</SUB>> ]
+"6336" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1399</SUB>> ]
+"6298" [label = <(METHOD,CallNonvirtualDoubleMethodV)<SUB>1396</SUB>> ]
+"6353" [label = <(METHOD_RETURN,jdouble)<SUB>1396</SUB>> ]
   "6305" -> "6310" 
   "6305" -> "6323" 
   "6323" -> "6328" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/117-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/117-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/117-cfg.dot	2023-06-07 19:35:41.467383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/117-cfg.dot	2023-06-07 19:35:47.897382796 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualDoubleMethodA" {  
-"6362" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1407</SUB>> ]
-"6380" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1408</SUB>> ]
-"6399" [label = <(soa,soa(env))<SUB>1409</SUB>> ]
-"6401" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetD();,return InvokeWithJValues(soa, obj, mid, args).GetD();)<SUB>1410</SUB>> ]
-"6402" [label = <(GetD,InvokeWithJValues(soa, obj, mid, args).GetD())<SUB>1410</SUB>> ]
-"6403" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetD)<SUB>1410</SUB>> ]
-"6366" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1407</SUB>> ]
-"6384" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1408</SUB>> ]
-"6404" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1410</SUB>> ]
-"6409" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1410</SUB>> ]
-"6367" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1407</SUB>> ]
-"6371" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1407</SUB>> ]
-"6378" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1407</SUB>> ]
-"6385" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1408</SUB>> ]
-"6389" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1408</SUB>> ]
-"6396" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1408</SUB>> ]
-"6372" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1407</SUB>> ]
-"6390" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1408</SUB>> ]
-"6373" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1407</SUB>> ]
-"6375" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1407</SUB>> ]
-"6391" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1408</SUB>> ]
-"6393" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1408</SUB>> ]
-"6355" [label = <(METHOD,CallNonvirtualDoubleMethodA)<SUB>1405</SUB>> ]
-"6410" [label = <(METHOD_RETURN,jdouble)<SUB>1405</SUB>> ]
+"6362" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1406</SUB>> ]
+"6380" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1407</SUB>> ]
+"6399" [label = <(soa,soa(env))<SUB>1408</SUB>> ]
+"6401" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetD();,return InvokeWithJValues(soa, obj, mid, args).GetD();)<SUB>1409</SUB>> ]
+"6402" [label = <(GetD,InvokeWithJValues(soa, obj, mid, args).GetD())<SUB>1409</SUB>> ]
+"6403" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetD)<SUB>1409</SUB>> ]
+"6366" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1406</SUB>> ]
+"6384" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1407</SUB>> ]
+"6404" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1409</SUB>> ]
+"6409" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1409</SUB>> ]
+"6367" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1406</SUB>> ]
+"6371" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1406</SUB>> ]
+"6378" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1406</SUB>> ]
+"6385" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1407</SUB>> ]
+"6389" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1407</SUB>> ]
+"6396" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1407</SUB>> ]
+"6372" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1406</SUB>> ]
+"6390" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1407</SUB>> ]
+"6373" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1406</SUB>> ]
+"6375" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1406</SUB>> ]
+"6391" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1407</SUB>> ]
+"6393" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1407</SUB>> ]
+"6355" [label = <(METHOD,CallNonvirtualDoubleMethodA)<SUB>1404</SUB>> ]
+"6410" [label = <(METHOD_RETURN,jdouble)<SUB>1404</SUB>> ]
   "6362" -> "6367" 
   "6362" -> "6380" 
   "6380" -> "6385" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/118-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/118-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/118-cfg.dot	2023-06-07 19:35:41.467383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/118-cfg.dot	2023-06-07 19:35:47.897382796 +0330
@@ -1,27 +1,27 @@
 digraph "CallNonvirtualVoidMethod" {  
-"6419" [label = <(va_start,va_start(ap, mid))<SUB>1415</SUB>> ]
-"6423" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1416</SUB>> ]
-"6426" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1417</SUB>> ]
-"6443" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1418</SUB>> ]
-"6461" [label = <(soa,soa(env))<SUB>1419</SUB>> ]
-"6463" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1420</SUB>> ]
-"6424" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1416</SUB>> ]
-"6430" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1417</SUB>> ]
-"6447" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1418</SUB>> ]
-"6431" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1417</SUB>> ]
-"6435" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1417</SUB>> ]
-"6442" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1417</SUB>> ]
-"6448" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1418</SUB>> ]
-"6452" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1418</SUB>> ]
-"6459" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1418</SUB>> ]
-"6436" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1417</SUB>> ]
-"6453" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1418</SUB>> ]
-"6437" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1417</SUB>> ]
-"6439" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1417</SUB>> ]
-"6454" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1418</SUB>> ]
-"6456" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1418</SUB>> ]
-"6412" [label = <(METHOD,CallNonvirtualVoidMethod)<SUB>1413</SUB>> ]
-"6468" [label = <(METHOD_RETURN,void)<SUB>1413</SUB>> ]
+"6419" [label = <(va_start,va_start(ap, mid))<SUB>1414</SUB>> ]
+"6423" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1415</SUB>> ]
+"6426" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1416</SUB>> ]
+"6443" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1417</SUB>> ]
+"6461" [label = <(soa,soa(env))<SUB>1418</SUB>> ]
+"6463" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1419</SUB>> ]
+"6424" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1415</SUB>> ]
+"6430" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1416</SUB>> ]
+"6447" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1417</SUB>> ]
+"6431" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1416</SUB>> ]
+"6435" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1416</SUB>> ]
+"6442" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1416</SUB>> ]
+"6448" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1417</SUB>> ]
+"6452" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1417</SUB>> ]
+"6459" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1417</SUB>> ]
+"6436" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1416</SUB>> ]
+"6453" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1417</SUB>> ]
+"6437" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1416</SUB>> ]
+"6439" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1416</SUB>> ]
+"6454" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1417</SUB>> ]
+"6456" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1417</SUB>> ]
+"6412" [label = <(METHOD,CallNonvirtualVoidMethod)<SUB>1412</SUB>> ]
+"6468" [label = <(METHOD_RETURN,void)<SUB>1412</SUB>> ]
   "6419" -> "6424" 
   "6423" -> "6426" 
   "6426" -> "6431" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/119-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/119-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/119-cfg.dot	2023-06-07 19:35:41.467383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/119-cfg.dot	2023-06-07 19:35:47.897382796 +0330
@@ -1,24 +1,24 @@
 digraph "CallNonvirtualVoidMethodV" {  
-"6477" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1425</SUB>> ]
-"6494" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1426</SUB>> ]
-"6512" [label = <(soa,soa(env))<SUB>1427</SUB>> ]
-"6514" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1428</SUB>> ]
-"6481" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1425</SUB>> ]
-"6498" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1426</SUB>> ]
-"6482" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1425</SUB>> ]
-"6486" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1425</SUB>> ]
-"6493" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1425</SUB>> ]
-"6499" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1426</SUB>> ]
-"6503" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1426</SUB>> ]
-"6510" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1426</SUB>> ]
-"6487" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1425</SUB>> ]
-"6504" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1426</SUB>> ]
-"6488" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1425</SUB>> ]
-"6490" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1425</SUB>> ]
-"6505" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1426</SUB>> ]
-"6507" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1426</SUB>> ]
-"6470" [label = <(METHOD,CallNonvirtualVoidMethodV)<SUB>1423</SUB>> ]
-"6519" [label = <(METHOD_RETURN,void)<SUB>1423</SUB>> ]
+"6477" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1424</SUB>> ]
+"6494" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1425</SUB>> ]
+"6512" [label = <(soa,soa(env))<SUB>1426</SUB>> ]
+"6514" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1427</SUB>> ]
+"6481" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1424</SUB>> ]
+"6498" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1425</SUB>> ]
+"6482" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1424</SUB>> ]
+"6486" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1424</SUB>> ]
+"6493" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1424</SUB>> ]
+"6499" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1425</SUB>> ]
+"6503" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1425</SUB>> ]
+"6510" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1425</SUB>> ]
+"6487" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1424</SUB>> ]
+"6504" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1425</SUB>> ]
+"6488" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1424</SUB>> ]
+"6490" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1424</SUB>> ]
+"6505" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1425</SUB>> ]
+"6507" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1425</SUB>> ]
+"6470" [label = <(METHOD,CallNonvirtualVoidMethodV)<SUB>1422</SUB>> ]
+"6519" [label = <(METHOD_RETURN,void)<SUB>1422</SUB>> ]
   "6477" -> "6482" 
   "6477" -> "6494" 
   "6494" -> "6499" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/12-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/12-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/12-cfg.dot	2023-06-07 19:35:41.347383235 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/12-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,34 +1,34 @@
 digraph "NormalizeJniClassDescriptor" {  
-"345" [label = <(RETURN,return result;,return result;)<SUB>281</SUB>> ]
-"288" [label = <(&lt;operator&gt;.equals,name[0] == '[')<SUB>268</SUB>> ]
-"309" [label = <(&lt;operator&gt;.notEquals,result.find('.') != std::string::npos)<SUB>276</SUB>> ]
-"289" [label = <(&lt;operator&gt;.indirectIndexAccess,name[0])<SUB>268</SUB>> ]
-"294" [label = <(&lt;operator&gt;.assignment,result = name)<SUB>269</SUB>> ]
-"310" [label = <(find,result.find('.'))<SUB>276</SUB>> ]
-"315" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>276</SUB>> ]
-"321" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot;&quot;)<SUB>277</SUB>> ]
-"331" [label = <(std::replace,std::replace(result.begin(), result.end(), '.', '/'))<SUB>279</SUB>> ]
-"299" [label = <(&lt;operator&gt;.assignmentPlus,result += 'L')<SUB>271</SUB>> ]
-"302" [label = <(&lt;operator&gt;.assignmentPlus,result += name)<SUB>272</SUB>> ]
-"305" [label = <(&lt;operator&gt;.assignmentPlus,result += ';')<SUB>273</SUB>> ]
-"311" [label = <(&lt;operator&gt;.fieldAccess,result.find)<SUB>276</SUB>> ]
-"316" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>276</SUB>> ]
-"319" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>276</SUB>> ]
-"322" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name)<SUB>277</SUB>> ]
-"332" [label = <(&lt;operator&gt;.fieldAccess,std::replace)<SUB>279</SUB>> ]
-"335" [label = <(begin,result.begin())<SUB>279</SUB>> ]
-"339" [label = <(end,result.end())<SUB>279</SUB>> ]
-"313" [label = <(FIELD_IDENTIFIER,find,find)<SUB>276</SUB>> ]
-"323" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot;)<SUB>277</SUB>> ]
-"334" [label = <(FIELD_IDENTIFIER,replace,replace)<SUB>279</SUB>> ]
-"336" [label = <(&lt;operator&gt;.fieldAccess,result.begin)<SUB>279</SUB>> ]
-"340" [label = <(&lt;operator&gt;.fieldAccess,result.end)<SUB>279</SUB>> ]
-"324" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;)<SUB>277</SUB>> ]
-"338" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>279</SUB>> ]
-"342" [label = <(FIELD_IDENTIFIER,end,end)<SUB>279</SUB>> ]
-"325" [label = <(LOG,LOG(WARNING))<SUB>277</SUB>> ]
-"283" [label = <(METHOD,NormalizeJniClassDescriptor)<SUB>265</SUB>> ]
-"347" [label = <(METHOD_RETURN,string)<SUB>265</SUB>> ]
+"345" [label = <(RETURN,return result;,return result;)<SUB>280</SUB>> ]
+"288" [label = <(&lt;operator&gt;.equals,name[0] == '[')<SUB>267</SUB>> ]
+"309" [label = <(&lt;operator&gt;.notEquals,result.find('.') != std::string::npos)<SUB>275</SUB>> ]
+"289" [label = <(&lt;operator&gt;.indirectIndexAccess,name[0])<SUB>267</SUB>> ]
+"294" [label = <(&lt;operator&gt;.assignment,result = name)<SUB>268</SUB>> ]
+"310" [label = <(find,result.find('.'))<SUB>275</SUB>> ]
+"315" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>275</SUB>> ]
+"321" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot;&quot;)<SUB>276</SUB>> ]
+"331" [label = <(std::replace,std::replace(result.begin(), result.end(), '.', '/'))<SUB>278</SUB>> ]
+"299" [label = <(&lt;operator&gt;.assignmentPlus,result += 'L')<SUB>270</SUB>> ]
+"302" [label = <(&lt;operator&gt;.assignmentPlus,result += name)<SUB>271</SUB>> ]
+"305" [label = <(&lt;operator&gt;.assignmentPlus,result += ';')<SUB>272</SUB>> ]
+"311" [label = <(&lt;operator&gt;.fieldAccess,result.find)<SUB>275</SUB>> ]
+"316" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>275</SUB>> ]
+"319" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>275</SUB>> ]
+"322" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name)<SUB>276</SUB>> ]
+"332" [label = <(&lt;operator&gt;.fieldAccess,std::replace)<SUB>278</SUB>> ]
+"335" [label = <(begin,result.begin())<SUB>278</SUB>> ]
+"339" [label = <(end,result.end())<SUB>278</SUB>> ]
+"313" [label = <(FIELD_IDENTIFIER,find,find)<SUB>275</SUB>> ]
+"323" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot;)<SUB>276</SUB>> ]
+"334" [label = <(FIELD_IDENTIFIER,replace,replace)<SUB>278</SUB>> ]
+"336" [label = <(&lt;operator&gt;.fieldAccess,result.begin)<SUB>278</SUB>> ]
+"340" [label = <(&lt;operator&gt;.fieldAccess,result.end)<SUB>278</SUB>> ]
+"324" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;)<SUB>276</SUB>> ]
+"338" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>278</SUB>> ]
+"342" [label = <(FIELD_IDENTIFIER,end,end)<SUB>278</SUB>> ]
+"325" [label = <(LOG,LOG(WARNING))<SUB>276</SUB>> ]
+"283" [label = <(METHOD,NormalizeJniClassDescriptor)<SUB>264</SUB>> ]
+"347" [label = <(METHOD_RETURN,string)<SUB>264</SUB>> ]
   "345" -> "347" 
   "288" -> "294" 
   "288" -> "299" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/120-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/120-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/120-cfg.dot	2023-06-07 19:35:41.467383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/120-cfg.dot	2023-06-07 19:35:47.897382796 +0330
@@ -1,24 +1,24 @@
 digraph "CallNonvirtualVoidMethodA" {  
-"6528" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1433</SUB>> ]
-"6545" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1434</SUB>> ]
-"6563" [label = <(soa,soa(env))<SUB>1435</SUB>> ]
-"6565" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1436</SUB>> ]
-"6532" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1433</SUB>> ]
-"6549" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1434</SUB>> ]
-"6533" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1433</SUB>> ]
-"6537" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1433</SUB>> ]
-"6544" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1433</SUB>> ]
-"6550" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1434</SUB>> ]
-"6554" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1434</SUB>> ]
-"6561" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1434</SUB>> ]
-"6538" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1433</SUB>> ]
-"6555" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1434</SUB>> ]
-"6539" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1433</SUB>> ]
-"6541" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1433</SUB>> ]
-"6556" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1434</SUB>> ]
-"6558" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1434</SUB>> ]
-"6521" [label = <(METHOD,CallNonvirtualVoidMethodA)<SUB>1431</SUB>> ]
-"6570" [label = <(METHOD_RETURN,void)<SUB>1431</SUB>> ]
+"6528" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1432</SUB>> ]
+"6545" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1433</SUB>> ]
+"6563" [label = <(soa,soa(env))<SUB>1434</SUB>> ]
+"6565" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1435</SUB>> ]
+"6532" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1432</SUB>> ]
+"6549" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1433</SUB>> ]
+"6533" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1432</SUB>> ]
+"6537" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1432</SUB>> ]
+"6544" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1432</SUB>> ]
+"6550" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1433</SUB>> ]
+"6554" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1433</SUB>> ]
+"6561" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1433</SUB>> ]
+"6538" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1432</SUB>> ]
+"6555" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1433</SUB>> ]
+"6539" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1432</SUB>> ]
+"6541" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1432</SUB>> ]
+"6556" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1433</SUB>> ]
+"6558" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1433</SUB>> ]
+"6521" [label = <(METHOD,CallNonvirtualVoidMethodA)<SUB>1430</SUB>> ]
+"6570" [label = <(METHOD_RETURN,void)<SUB>1430</SUB>> ]
   "6528" -> "6533" 
   "6528" -> "6545" 
   "6545" -> "6550" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/121-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/121-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/121-cfg.dot	2023-06-07 19:35:41.467383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/121-cfg.dot	2023-06-07 19:35:47.897382796 +0330
@@ -1,36 +1,36 @@
 digraph "GetFieldID" {  
-"6578" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1440</SUB>> ]
-"6596" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1441</SUB>> ]
-"6614" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1442</SUB>> ]
-"6633" [label = <(soa,soa(env))<SUB>1443</SUB>> ]
-"6635" [label = <(RETURN,return FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false);,return FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false);)<SUB>1444</SUB>> ]
-"6636" [label = <(&lt;operator&gt;.greaterThan,FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false))<SUB>1444</SUB>> ]
-"6637" [label = <(&lt;operator&gt;.lessThan,FindFieldID&lt;kEnableIndexIds)<SUB>1444</SUB>> ]
-"6640" [label = <(&lt;operator&gt;.bracketedPrimary,(soa, java_class, name, sig, false))<SUB>1444</SUB>> ]
-"6582" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1440</SUB>> ]
-"6600" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1441</SUB>> ]
-"6618" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1442</SUB>> ]
-"6641" [label = <(&lt;operator&gt;.expressionList,soa, java_class, name, sig, false)<SUB>1444</SUB>> ]
-"6583" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1440</SUB>> ]
-"6587" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1440</SUB>> ]
-"6594" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1440</SUB>> ]
-"6601" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1441</SUB>> ]
-"6605" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1441</SUB>> ]
-"6612" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1441</SUB>> ]
-"6619" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1442</SUB>> ]
-"6623" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1442</SUB>> ]
-"6630" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1442</SUB>> ]
-"6588" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1440</SUB>> ]
-"6606" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1441</SUB>> ]
-"6624" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1442</SUB>> ]
-"6589" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1440</SUB>> ]
-"6591" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1440</SUB>> ]
-"6607" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1441</SUB>> ]
-"6609" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1441</SUB>> ]
-"6625" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1442</SUB>> ]
-"6627" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1442</SUB>> ]
-"6572" [label = <(METHOD,GetFieldID)<SUB>1439</SUB>> ]
-"6647" [label = <(METHOD_RETURN,jfieldID)<SUB>1439</SUB>> ]
+"6578" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1439</SUB>> ]
+"6596" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1440</SUB>> ]
+"6614" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1441</SUB>> ]
+"6633" [label = <(soa,soa(env))<SUB>1442</SUB>> ]
+"6635" [label = <(RETURN,return FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false);,return FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false);)<SUB>1443</SUB>> ]
+"6636" [label = <(&lt;operator&gt;.greaterThan,FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false))<SUB>1443</SUB>> ]
+"6637" [label = <(&lt;operator&gt;.lessThan,FindFieldID&lt;kEnableIndexIds)<SUB>1443</SUB>> ]
+"6640" [label = <(&lt;operator&gt;.bracketedPrimary,(soa, java_class, name, sig, false))<SUB>1443</SUB>> ]
+"6582" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1439</SUB>> ]
+"6600" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1440</SUB>> ]
+"6618" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1441</SUB>> ]
+"6641" [label = <(&lt;operator&gt;.expressionList,soa, java_class, name, sig, false)<SUB>1443</SUB>> ]
+"6583" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1439</SUB>> ]
+"6587" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1439</SUB>> ]
+"6594" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1439</SUB>> ]
+"6601" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1440</SUB>> ]
+"6605" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1440</SUB>> ]
+"6612" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1440</SUB>> ]
+"6619" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1441</SUB>> ]
+"6623" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1441</SUB>> ]
+"6630" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1441</SUB>> ]
+"6588" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1439</SUB>> ]
+"6606" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1440</SUB>> ]
+"6624" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1441</SUB>> ]
+"6589" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1439</SUB>> ]
+"6591" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1439</SUB>> ]
+"6607" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1440</SUB>> ]
+"6609" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1440</SUB>> ]
+"6625" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1441</SUB>> ]
+"6627" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1441</SUB>> ]
+"6572" [label = <(METHOD,GetFieldID)<SUB>1438</SUB>> ]
+"6647" [label = <(METHOD_RETURN,jfieldID)<SUB>1438</SUB>> ]
   "6578" -> "6583" 
   "6578" -> "6596" 
   "6596" -> "6601" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/122-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/122-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/122-cfg.dot	2023-06-07 19:35:41.467383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/122-cfg.dot	2023-06-07 19:35:47.897382796 +0330
@@ -1,36 +1,36 @@
 digraph "GetStaticFieldID" {  
-"6655" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1449</SUB>> ]
-"6673" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1450</SUB>> ]
-"6691" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1451</SUB>> ]
-"6710" [label = <(soa,soa(env))<SUB>1452</SUB>> ]
-"6712" [label = <(RETURN,return FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true);,return FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true);)<SUB>1453</SUB>> ]
-"6713" [label = <(&lt;operator&gt;.greaterThan,FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true))<SUB>1453</SUB>> ]
-"6714" [label = <(&lt;operator&gt;.lessThan,FindFieldID&lt;kEnableIndexIds)<SUB>1453</SUB>> ]
-"6717" [label = <(&lt;operator&gt;.bracketedPrimary,(soa, java_class, name, sig, true))<SUB>1453</SUB>> ]
-"6659" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1449</SUB>> ]
-"6677" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1450</SUB>> ]
-"6695" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1451</SUB>> ]
-"6718" [label = <(&lt;operator&gt;.expressionList,soa, java_class, name, sig, true)<SUB>1453</SUB>> ]
-"6660" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1449</SUB>> ]
-"6664" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1449</SUB>> ]
-"6671" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1449</SUB>> ]
-"6678" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1450</SUB>> ]
-"6682" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1450</SUB>> ]
-"6689" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1450</SUB>> ]
-"6696" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1451</SUB>> ]
-"6700" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1451</SUB>> ]
-"6707" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1451</SUB>> ]
-"6665" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1449</SUB>> ]
-"6683" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1450</SUB>> ]
-"6701" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1451</SUB>> ]
-"6666" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1449</SUB>> ]
-"6668" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1449</SUB>> ]
-"6684" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1450</SUB>> ]
-"6686" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1450</SUB>> ]
-"6702" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1451</SUB>> ]
-"6704" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1451</SUB>> ]
-"6649" [label = <(METHOD,GetStaticFieldID)<SUB>1447</SUB>> ]
-"6724" [label = <(METHOD_RETURN,jfieldID)<SUB>1447</SUB>> ]
+"6655" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1448</SUB>> ]
+"6673" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1449</SUB>> ]
+"6691" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1450</SUB>> ]
+"6710" [label = <(soa,soa(env))<SUB>1451</SUB>> ]
+"6712" [label = <(RETURN,return FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true);,return FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true);)<SUB>1452</SUB>> ]
+"6713" [label = <(&lt;operator&gt;.greaterThan,FindFieldID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true))<SUB>1452</SUB>> ]
+"6714" [label = <(&lt;operator&gt;.lessThan,FindFieldID&lt;kEnableIndexIds)<SUB>1452</SUB>> ]
+"6717" [label = <(&lt;operator&gt;.bracketedPrimary,(soa, java_class, name, sig, true))<SUB>1452</SUB>> ]
+"6659" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1448</SUB>> ]
+"6677" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1449</SUB>> ]
+"6695" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1450</SUB>> ]
+"6718" [label = <(&lt;operator&gt;.expressionList,soa, java_class, name, sig, true)<SUB>1452</SUB>> ]
+"6660" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1448</SUB>> ]
+"6664" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1448</SUB>> ]
+"6671" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1448</SUB>> ]
+"6678" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1449</SUB>> ]
+"6682" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1449</SUB>> ]
+"6689" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1449</SUB>> ]
+"6696" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1450</SUB>> ]
+"6700" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1450</SUB>> ]
+"6707" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1450</SUB>> ]
+"6665" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1448</SUB>> ]
+"6683" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1449</SUB>> ]
+"6701" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1450</SUB>> ]
+"6666" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1448</SUB>> ]
+"6668" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1448</SUB>> ]
+"6684" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1449</SUB>> ]
+"6686" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1449</SUB>> ]
+"6702" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1450</SUB>> ]
+"6704" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1450</SUB>> ]
+"6649" [label = <(METHOD,GetStaticFieldID)<SUB>1446</SUB>> ]
+"6724" [label = <(METHOD_RETURN,jfieldID)<SUB>1446</SUB>> ]
   "6655" -> "6660" 
   "6655" -> "6673" 
   "6673" -> "6678" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/123-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/123-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/123-cfg.dot	2023-06-07 19:35:41.467383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/123-cfg.dot	2023-06-07 19:35:47.897382796 +0330
@@ -1,48 +1,48 @@
 digraph "GetObjectField" {  
-"6731" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1457</SUB>> ]
-"6749" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1458</SUB>> ]
-"6768" [label = <(soa,soa(env))<SUB>1459</SUB>> ]
-"6771" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1460</SUB>> ]
-"6780" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1461</SUB>> ]
-"6783" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1462</SUB>> ]
-"6800" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));)<SUB>1463</SUB>> ]
-"6773" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1460</SUB>> ]
-"6784" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1462</SUB>> ]
-"6791" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1462</SUB>> ]
-"6801" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o)))<SUB>1463</SUB>> ]
-"6774" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField&lt;kEnableIndexIds)<SUB>1460</SUB>> ]
-"6785" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1462</SUB>> ]
-"6792" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1462</SUB>> ]
-"6802" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1463</SUB>> ]
-"6807" [label = <(GetObject,f-&gt;GetObject(o))<SUB>1463</SUB>> ]
-"6735" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1457</SUB>> ]
-"6753" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1458</SUB>> ]
-"6775" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1460</SUB>> ]
-"6787" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1462</SUB>> ]
-"6793" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1462</SUB>> ]
-"6796" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1462</SUB>> ]
-"6803" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1463</SUB>> ]
-"6808" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1463</SUB>> ]
-"6736" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1457</SUB>> ]
-"6740" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1457</SUB>> ]
-"6747" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1457</SUB>> ]
-"6754" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1458</SUB>> ]
-"6758" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1458</SUB>> ]
-"6765" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1458</SUB>> ]
-"6777" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1460</SUB>> ]
-"6789" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1462</SUB>> ]
-"6795" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1462</SUB>> ]
-"6798" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1462</SUB>> ]
-"6805" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1463</SUB>> ]
-"6810" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1463</SUB>> ]
-"6741" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1457</SUB>> ]
-"6759" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1458</SUB>> ]
-"6742" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1457</SUB>> ]
-"6744" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1457</SUB>> ]
-"6760" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1458</SUB>> ]
-"6762" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1458</SUB>> ]
-"6726" [label = <(METHOD,GetObjectField)<SUB>1456</SUB>> ]
-"6812" [label = <(METHOD_RETURN,jobject)<SUB>1456</SUB>> ]
+"6731" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1456</SUB>> ]
+"6749" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1457</SUB>> ]
+"6768" [label = <(soa,soa(env))<SUB>1458</SUB>> ]
+"6771" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1459</SUB>> ]
+"6780" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1460</SUB>> ]
+"6783" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1461</SUB>> ]
+"6800" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));)<SUB>1462</SUB>> ]
+"6773" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1459</SUB>> ]
+"6784" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1461</SUB>> ]
+"6791" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1461</SUB>> ]
+"6801" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o)))<SUB>1462</SUB>> ]
+"6774" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField&lt;kEnableIndexIds)<SUB>1459</SUB>> ]
+"6785" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1461</SUB>> ]
+"6792" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1461</SUB>> ]
+"6802" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1462</SUB>> ]
+"6807" [label = <(GetObject,f-&gt;GetObject(o))<SUB>1462</SUB>> ]
+"6735" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1456</SUB>> ]
+"6753" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1457</SUB>> ]
+"6775" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1459</SUB>> ]
+"6787" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1461</SUB>> ]
+"6793" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1461</SUB>> ]
+"6796" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1461</SUB>> ]
+"6803" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1462</SUB>> ]
+"6808" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1462</SUB>> ]
+"6736" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1456</SUB>> ]
+"6740" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1456</SUB>> ]
+"6747" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1456</SUB>> ]
+"6754" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1457</SUB>> ]
+"6758" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1457</SUB>> ]
+"6765" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1457</SUB>> ]
+"6777" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1459</SUB>> ]
+"6789" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1461</SUB>> ]
+"6795" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1461</SUB>> ]
+"6798" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1461</SUB>> ]
+"6805" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1462</SUB>> ]
+"6810" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1462</SUB>> ]
+"6741" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1456</SUB>> ]
+"6759" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1457</SUB>> ]
+"6742" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1456</SUB>> ]
+"6744" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1456</SUB>> ]
+"6760" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1457</SUB>> ]
+"6762" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1457</SUB>> ]
+"6726" [label = <(METHOD,GetObjectField)<SUB>1455</SUB>> ]
+"6812" [label = <(METHOD_RETURN,jobject)<SUB>1455</SUB>> ]
   "6731" -> "6736" 
   "6731" -> "6749" 
   "6749" -> "6754" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/124-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/124-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/124-cfg.dot	2023-06-07 19:35:41.467383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/124-cfg.dot	2023-06-07 19:35:47.897382796 +0330
@@ -1,32 +1,32 @@
 digraph "GetStaticObjectField" {  
-"6819" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1467</SUB>> ]
-"6838" [label = <(soa,soa(env))<SUB>1468</SUB>> ]
-"6841" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1469</SUB>> ]
-"6850" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1470</SUB>> ]
-"6853" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));)<SUB>1471</SUB>> ]
-"6843" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1469</SUB>> ]
-"6854" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass())))<SUB>1471</SUB>> ]
-"6844" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField&lt;kEnableIndexIds)<SUB>1469</SUB>> ]
-"6855" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1471</SUB>> ]
-"6860" [label = <(GetObject,f-&gt;GetObject(f-&gt;GetDeclaringClass()))<SUB>1471</SUB>> ]
-"6823" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1467</SUB>> ]
-"6845" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1469</SUB>> ]
-"6856" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1471</SUB>> ]
-"6861" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1471</SUB>> ]
-"6864" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1471</SUB>> ]
-"6824" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1467</SUB>> ]
-"6828" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1467</SUB>> ]
-"6835" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1467</SUB>> ]
-"6847" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1469</SUB>> ]
-"6858" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1471</SUB>> ]
-"6863" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1471</SUB>> ]
-"6865" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1471</SUB>> ]
-"6829" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1467</SUB>> ]
-"6867" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1471</SUB>> ]
-"6830" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1467</SUB>> ]
-"6832" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1467</SUB>> ]
-"6814" [label = <(METHOD,GetStaticObjectField)<SUB>1466</SUB>> ]
-"6868" [label = <(METHOD_RETURN,jobject)<SUB>1466</SUB>> ]
+"6819" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1466</SUB>> ]
+"6838" [label = <(soa,soa(env))<SUB>1467</SUB>> ]
+"6841" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1468</SUB>> ]
+"6850" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1469</SUB>> ]
+"6853" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));)<SUB>1470</SUB>> ]
+"6843" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1468</SUB>> ]
+"6854" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass())))<SUB>1470</SUB>> ]
+"6844" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField&lt;kEnableIndexIds)<SUB>1468</SUB>> ]
+"6855" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1470</SUB>> ]
+"6860" [label = <(GetObject,f-&gt;GetObject(f-&gt;GetDeclaringClass()))<SUB>1470</SUB>> ]
+"6823" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1466</SUB>> ]
+"6845" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1468</SUB>> ]
+"6856" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1470</SUB>> ]
+"6861" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1470</SUB>> ]
+"6864" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1470</SUB>> ]
+"6824" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1466</SUB>> ]
+"6828" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1466</SUB>> ]
+"6835" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1466</SUB>> ]
+"6847" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1468</SUB>> ]
+"6858" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1470</SUB>> ]
+"6863" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1470</SUB>> ]
+"6865" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1470</SUB>> ]
+"6829" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1466</SUB>> ]
+"6867" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1470</SUB>> ]
+"6830" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1466</SUB>> ]
+"6832" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1466</SUB>> ]
+"6814" [label = <(METHOD,GetStaticObjectField)<SUB>1465</SUB>> ]
+"6868" [label = <(METHOD_RETURN,jobject)<SUB>1465</SUB>> ]
   "6819" -> "6824" 
   "6819" -> "6838" 
   "6838" -> "6847" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/125-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/125-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/125-cfg.dot	2023-06-07 19:35:41.467383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/125-cfg.dot	2023-06-07 19:35:47.897382796 +0330
@@ -1,57 +1,57 @@
 digraph "SetObjectField" {  
-"6876" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1475</SUB>> ]
-"6893" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1476</SUB>> ]
-"6911" [label = <(soa,soa(env))<SUB>1477</SUB>> ]
-"6914" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1478</SUB>> ]
-"6923" [label = <(NotifySetObjectField,NotifySetObjectField(f, java_object, java_value))<SUB>1479</SUB>> ]
-"6927" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1480</SUB>> ]
-"6944" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1481</SUB>> ]
-"6961" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(o, v))<SUB>1482</SUB>> ]
-"6916" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1478</SUB>> ]
-"6928" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1480</SUB>> ]
-"6935" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1480</SUB>> ]
-"6945" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1481</SUB>> ]
-"6952" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1481</SUB>> ]
-"6962" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1482</SUB>> ]
-"6967" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1482</SUB>> ]
-"6917" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField&lt;kEnableIndexIds)<SUB>1478</SUB>> ]
-"6929" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1480</SUB>> ]
-"6936" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1480</SUB>> ]
-"6946" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1481</SUB>> ]
-"6953" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1481</SUB>> ]
-"6963" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1482</SUB>> ]
-"6968" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1482</SUB>> ]
-"6880" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>1475</SUB>> ]
-"6897" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1476</SUB>> ]
-"6918" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1478</SUB>> ]
-"6931" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1480</SUB>> ]
-"6937" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1480</SUB>> ]
-"6940" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1480</SUB>> ]
-"6948" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1481</SUB>> ]
-"6954" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1481</SUB>> ]
-"6957" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1481</SUB>> ]
-"6965" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1482</SUB>> ]
-"6881" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>1475</SUB>> ]
-"6885" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>1475</SUB>> ]
-"6892" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1475</SUB>> ]
-"6898" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1476</SUB>> ]
-"6902" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1476</SUB>> ]
-"6909" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1476</SUB>> ]
-"6920" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1478</SUB>> ]
-"6933" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1480</SUB>> ]
-"6939" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1480</SUB>> ]
-"6942" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1480</SUB>> ]
-"6950" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1481</SUB>> ]
-"6956" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1481</SUB>> ]
-"6959" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1481</SUB>> ]
-"6886" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1475</SUB>> ]
-"6903" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1476</SUB>> ]
-"6887" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1475</SUB>> ]
-"6889" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1475</SUB>> ]
-"6904" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1476</SUB>> ]
-"6906" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1476</SUB>> ]
-"6870" [label = <(METHOD,SetObjectField)<SUB>1474</SUB>> ]
-"6971" [label = <(METHOD_RETURN,void)<SUB>1474</SUB>> ]
+"6876" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1474</SUB>> ]
+"6893" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1475</SUB>> ]
+"6911" [label = <(soa,soa(env))<SUB>1476</SUB>> ]
+"6914" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1477</SUB>> ]
+"6923" [label = <(NotifySetObjectField,NotifySetObjectField(f, java_object, java_value))<SUB>1478</SUB>> ]
+"6927" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1479</SUB>> ]
+"6944" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1480</SUB>> ]
+"6961" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(o, v))<SUB>1481</SUB>> ]
+"6916" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1477</SUB>> ]
+"6928" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1479</SUB>> ]
+"6935" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1479</SUB>> ]
+"6945" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1480</SUB>> ]
+"6952" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1480</SUB>> ]
+"6962" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1481</SUB>> ]
+"6967" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1481</SUB>> ]
+"6917" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField&lt;kEnableIndexIds)<SUB>1477</SUB>> ]
+"6929" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1479</SUB>> ]
+"6936" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1479</SUB>> ]
+"6946" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1480</SUB>> ]
+"6953" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1480</SUB>> ]
+"6963" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1481</SUB>> ]
+"6968" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1481</SUB>> ]
+"6880" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>1474</SUB>> ]
+"6897" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1475</SUB>> ]
+"6918" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1477</SUB>> ]
+"6931" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1479</SUB>> ]
+"6937" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1479</SUB>> ]
+"6940" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1479</SUB>> ]
+"6948" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1480</SUB>> ]
+"6954" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1480</SUB>> ]
+"6957" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1480</SUB>> ]
+"6965" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1481</SUB>> ]
+"6881" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>1474</SUB>> ]
+"6885" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>1474</SUB>> ]
+"6892" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1474</SUB>> ]
+"6898" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1475</SUB>> ]
+"6902" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1475</SUB>> ]
+"6909" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1475</SUB>> ]
+"6920" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1477</SUB>> ]
+"6933" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1479</SUB>> ]
+"6939" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1479</SUB>> ]
+"6942" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1479</SUB>> ]
+"6950" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1480</SUB>> ]
+"6956" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1480</SUB>> ]
+"6959" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1480</SUB>> ]
+"6886" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1474</SUB>> ]
+"6903" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1475</SUB>> ]
+"6887" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1474</SUB>> ]
+"6889" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1474</SUB>> ]
+"6904" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1475</SUB>> ]
+"6906" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1475</SUB>> ]
+"6870" [label = <(METHOD,SetObjectField)<SUB>1473</SUB>> ]
+"6971" [label = <(METHOD_RETURN,void)<SUB>1473</SUB>> ]
   "6876" -> "6881" 
   "6876" -> "6893" 
   "6893" -> "6898" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/126-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/126-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/126-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/126-cfg.dot	2023-06-07 19:35:47.907382795 +0330
@@ -1,41 +1,41 @@
 digraph "SetStaticObjectField" {  
-"6979" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1486</SUB>> ]
-"6997" [label = <(soa,soa(env))<SUB>1487</SUB>> ]
-"7000" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1488</SUB>> ]
-"7009" [label = <(NotifySetObjectField,NotifySetObjectField(f, nullptr, java_value))<SUB>1489</SUB>> ]
-"7013" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1490</SUB>> ]
-"7030" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(f-&gt;GetDeclaringClass(), v))<SUB>1491</SUB>> ]
-"7002" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1488</SUB>> ]
-"7014" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1490</SUB>> ]
-"7021" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1490</SUB>> ]
-"7031" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1491</SUB>> ]
-"7036" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1491</SUB>> ]
-"7003" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField&lt;kEnableIndexIds)<SUB>1488</SUB>> ]
-"7015" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1490</SUB>> ]
-"7022" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1490</SUB>> ]
-"7032" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1491</SUB>> ]
-"7037" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1491</SUB>> ]
-"6983" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1486</SUB>> ]
-"7004" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1488</SUB>> ]
-"7017" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1490</SUB>> ]
-"7023" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1490</SUB>> ]
-"7026" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1490</SUB>> ]
-"7034" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1491</SUB>> ]
-"7038" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1491</SUB>> ]
-"6984" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1486</SUB>> ]
-"6988" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1486</SUB>> ]
-"6995" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1486</SUB>> ]
-"7006" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1488</SUB>> ]
-"7019" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1490</SUB>> ]
-"7025" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1490</SUB>> ]
-"7028" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1490</SUB>> ]
-"7039" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1491</SUB>> ]
-"6989" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1486</SUB>> ]
-"7041" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1491</SUB>> ]
-"6990" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1486</SUB>> ]
-"6992" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1486</SUB>> ]
-"6973" [label = <(METHOD,SetStaticObjectField)<SUB>1485</SUB>> ]
-"7043" [label = <(METHOD_RETURN,void)<SUB>1485</SUB>> ]
+"6979" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1485</SUB>> ]
+"6997" [label = <(soa,soa(env))<SUB>1486</SUB>> ]
+"7000" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1487</SUB>> ]
+"7009" [label = <(NotifySetObjectField,NotifySetObjectField(f, nullptr, java_value))<SUB>1488</SUB>> ]
+"7013" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1489</SUB>> ]
+"7030" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(f-&gt;GetDeclaringClass(), v))<SUB>1490</SUB>> ]
+"7002" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField&lt;kEnableIndexIds&gt;(fid))<SUB>1487</SUB>> ]
+"7014" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1489</SUB>> ]
+"7021" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1489</SUB>> ]
+"7031" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1490</SUB>> ]
+"7036" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1490</SUB>> ]
+"7003" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField&lt;kEnableIndexIds)<SUB>1487</SUB>> ]
+"7015" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1489</SUB>> ]
+"7022" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1489</SUB>> ]
+"7032" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1490</SUB>> ]
+"7037" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1490</SUB>> ]
+"6983" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1485</SUB>> ]
+"7004" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1487</SUB>> ]
+"7017" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1489</SUB>> ]
+"7023" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1489</SUB>> ]
+"7026" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1489</SUB>> ]
+"7034" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1490</SUB>> ]
+"7038" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1490</SUB>> ]
+"6984" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1485</SUB>> ]
+"6988" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1485</SUB>> ]
+"6995" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1485</SUB>> ]
+"7006" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1487</SUB>> ]
+"7019" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1489</SUB>> ]
+"7025" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1489</SUB>> ]
+"7028" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1489</SUB>> ]
+"7039" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1490</SUB>> ]
+"6989" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1485</SUB>> ]
+"7041" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1490</SUB>> ]
+"6990" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1485</SUB>> ]
+"6992" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1485</SUB>> ]
+"6973" [label = <(METHOD,SetStaticObjectField)<SUB>1484</SUB>> ]
+"7043" [label = <(METHOD_RETURN,void)<SUB>1484</SUB>> ]
   "6979" -> "6984" 
   "6979" -> "6997" 
   "6997" -> "7006" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/127-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/127-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/127-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/127-cfg.dot	2023-06-07 19:35:47.907382795 +0330
@@ -1,43 +1,43 @@
 digraph "GetBooleanField" {  
-"7050" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1527</SUB>> ]
-"7084" [label = <(soa,ScopedObjectAccess)<SUB>1527</SUB>> ]
-"7087" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1527</SUB>> ]
-"7096" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1527</SUB>> ]
-"7099" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1527</SUB>> ]
-"7116" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj);,GET_PRIMITIVE_FIELD(Boolean, obj);)<SUB>1527</SUB>> ]
-"7069" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1527</SUB>> ]
-"7089" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1527</SUB>> ]
-"7100" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1527</SUB>> ]
-"7107" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1527</SUB>> ]
-"7117" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),f-&gt;GetBoolean(o))<SUB>1527</SUB>> ]
-"7070" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1527</SUB>> ]
-"7074" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1527</SUB>> ]
-"7081" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1527</SUB>> ]
-"7090" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1527</SUB>> ]
-"7101" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1527</SUB>> ]
-"7108" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1527</SUB>> ]
-"7118" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1527</SUB>> ]
-"7054" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1527</SUB>> ]
-"7075" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1527</SUB>> ]
-"7091" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1527</SUB>> ]
-"7103" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1527</SUB>> ]
-"7109" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1527</SUB>> ]
-"7112" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1527</SUB>> ]
-"7120" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1527</SUB>> ]
-"7055" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1527</SUB>> ]
-"7059" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1527</SUB>> ]
-"7066" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1527</SUB>> ]
-"7076" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1527</SUB>> ]
-"7078" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1527</SUB>> ]
-"7093" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1527</SUB>> ]
-"7105" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1527</SUB>> ]
-"7111" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1527</SUB>> ]
-"7114" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1527</SUB>> ]
-"7060" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1527</SUB>> ]
-"7061" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1527</SUB>> ]
-"7063" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1527</SUB>> ]
-"7045" [label = <(METHOD,GetBooleanField)<SUB>1526</SUB>> ]
-"7122" [label = <(METHOD_RETURN,jboolean)<SUB>1526</SUB>> ]
+"7050" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1526</SUB>> ]
+"7084" [label = <(soa,ScopedObjectAccess)<SUB>1526</SUB>> ]
+"7087" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1526</SUB>> ]
+"7096" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1526</SUB>> ]
+"7099" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1526</SUB>> ]
+"7116" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj);,GET_PRIMITIVE_FIELD(Boolean, obj);)<SUB>1526</SUB>> ]
+"7069" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1526</SUB>> ]
+"7089" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1526</SUB>> ]
+"7100" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1526</SUB>> ]
+"7107" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1526</SUB>> ]
+"7117" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),f-&gt;GetBoolean(o))<SUB>1526</SUB>> ]
+"7070" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1526</SUB>> ]
+"7074" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1526</SUB>> ]
+"7081" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1526</SUB>> ]
+"7090" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1526</SUB>> ]
+"7101" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1526</SUB>> ]
+"7108" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1526</SUB>> ]
+"7118" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1526</SUB>> ]
+"7054" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1526</SUB>> ]
+"7075" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1526</SUB>> ]
+"7091" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1526</SUB>> ]
+"7103" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1526</SUB>> ]
+"7109" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1526</SUB>> ]
+"7112" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1526</SUB>> ]
+"7120" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1526</SUB>> ]
+"7055" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1526</SUB>> ]
+"7059" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1526</SUB>> ]
+"7066" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1526</SUB>> ]
+"7076" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1526</SUB>> ]
+"7078" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1526</SUB>> ]
+"7093" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1526</SUB>> ]
+"7105" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1526</SUB>> ]
+"7111" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1526</SUB>> ]
+"7114" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1526</SUB>> ]
+"7060" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1526</SUB>> ]
+"7061" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1526</SUB>> ]
+"7063" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1526</SUB>> ]
+"7045" [label = <(METHOD,GetBooleanField)<SUB>1525</SUB>> ]
+"7122" [label = <(METHOD_RETURN,jboolean)<SUB>1525</SUB>> ]
   "7050" -> "7055" 
   "7050" -> "7070" 
   "7084" -> "7093" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/128-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/128-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/128-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/128-cfg.dot	2023-06-07 19:35:47.907382795 +0330
@@ -1,43 +1,43 @@
 digraph "GetByteField" {  
-"7129" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1531</SUB>> ]
-"7163" [label = <(soa,ScopedObjectAccess)<SUB>1531</SUB>> ]
-"7166" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1531</SUB>> ]
-"7175" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1531</SUB>> ]
-"7178" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1531</SUB>> ]
-"7195" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj);,GET_PRIMITIVE_FIELD(Byte, obj);)<SUB>1531</SUB>> ]
-"7148" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1531</SUB>> ]
-"7168" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1531</SUB>> ]
-"7179" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1531</SUB>> ]
-"7186" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1531</SUB>> ]
-"7196" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),f-&gt;GetByte(o))<SUB>1531</SUB>> ]
-"7149" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1531</SUB>> ]
-"7153" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1531</SUB>> ]
-"7160" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1531</SUB>> ]
-"7169" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1531</SUB>> ]
-"7180" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1531</SUB>> ]
-"7187" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1531</SUB>> ]
-"7197" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1531</SUB>> ]
-"7133" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1531</SUB>> ]
-"7154" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1531</SUB>> ]
-"7170" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1531</SUB>> ]
-"7182" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1531</SUB>> ]
-"7188" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1531</SUB>> ]
-"7191" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1531</SUB>> ]
-"7199" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1531</SUB>> ]
-"7134" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1531</SUB>> ]
-"7138" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1531</SUB>> ]
-"7145" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1531</SUB>> ]
-"7155" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1531</SUB>> ]
-"7157" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1531</SUB>> ]
-"7172" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1531</SUB>> ]
-"7184" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1531</SUB>> ]
-"7190" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1531</SUB>> ]
-"7193" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1531</SUB>> ]
-"7139" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1531</SUB>> ]
-"7140" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1531</SUB>> ]
-"7142" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1531</SUB>> ]
-"7124" [label = <(METHOD,GetByteField)<SUB>1530</SUB>> ]
-"7201" [label = <(METHOD_RETURN,jbyte)<SUB>1530</SUB>> ]
+"7129" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1530</SUB>> ]
+"7163" [label = <(soa,ScopedObjectAccess)<SUB>1530</SUB>> ]
+"7166" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1530</SUB>> ]
+"7175" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1530</SUB>> ]
+"7178" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1530</SUB>> ]
+"7195" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj);,GET_PRIMITIVE_FIELD(Byte, obj);)<SUB>1530</SUB>> ]
+"7148" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1530</SUB>> ]
+"7168" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1530</SUB>> ]
+"7179" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1530</SUB>> ]
+"7186" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1530</SUB>> ]
+"7196" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),f-&gt;GetByte(o))<SUB>1530</SUB>> ]
+"7149" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1530</SUB>> ]
+"7153" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1530</SUB>> ]
+"7160" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1530</SUB>> ]
+"7169" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1530</SUB>> ]
+"7180" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1530</SUB>> ]
+"7187" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1530</SUB>> ]
+"7197" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1530</SUB>> ]
+"7133" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1530</SUB>> ]
+"7154" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1530</SUB>> ]
+"7170" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1530</SUB>> ]
+"7182" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1530</SUB>> ]
+"7188" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1530</SUB>> ]
+"7191" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1530</SUB>> ]
+"7199" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1530</SUB>> ]
+"7134" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1530</SUB>> ]
+"7138" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1530</SUB>> ]
+"7145" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1530</SUB>> ]
+"7155" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1530</SUB>> ]
+"7157" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1530</SUB>> ]
+"7172" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1530</SUB>> ]
+"7184" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1530</SUB>> ]
+"7190" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1530</SUB>> ]
+"7193" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1530</SUB>> ]
+"7139" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1530</SUB>> ]
+"7140" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1530</SUB>> ]
+"7142" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1530</SUB>> ]
+"7124" [label = <(METHOD,GetByteField)<SUB>1529</SUB>> ]
+"7201" [label = <(METHOD_RETURN,jbyte)<SUB>1529</SUB>> ]
   "7129" -> "7134" 
   "7129" -> "7149" 
   "7163" -> "7172" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/129-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/129-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/129-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/129-cfg.dot	2023-06-07 19:35:47.907382795 +0330
@@ -1,43 +1,43 @@
 digraph "GetCharField" {  
-"7208" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1535</SUB>> ]
-"7242" [label = <(soa,ScopedObjectAccess)<SUB>1535</SUB>> ]
-"7245" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1535</SUB>> ]
-"7254" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1535</SUB>> ]
-"7257" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1535</SUB>> ]
-"7274" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj);,GET_PRIMITIVE_FIELD(Char, obj);)<SUB>1535</SUB>> ]
-"7227" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1535</SUB>> ]
-"7247" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1535</SUB>> ]
-"7258" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1535</SUB>> ]
-"7265" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1535</SUB>> ]
-"7275" [label = <(GET_PRIMITIVE_FIELD(Char, obj),f-&gt;GetChar(o))<SUB>1535</SUB>> ]
-"7228" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1535</SUB>> ]
-"7232" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1535</SUB>> ]
-"7239" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1535</SUB>> ]
-"7248" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1535</SUB>> ]
-"7259" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1535</SUB>> ]
-"7266" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1535</SUB>> ]
-"7276" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1535</SUB>> ]
-"7212" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1535</SUB>> ]
-"7233" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1535</SUB>> ]
-"7249" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1535</SUB>> ]
-"7261" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1535</SUB>> ]
-"7267" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1535</SUB>> ]
-"7270" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1535</SUB>> ]
-"7278" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1535</SUB>> ]
-"7213" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1535</SUB>> ]
-"7217" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1535</SUB>> ]
-"7224" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1535</SUB>> ]
-"7234" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1535</SUB>> ]
-"7236" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1535</SUB>> ]
-"7251" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1535</SUB>> ]
-"7263" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1535</SUB>> ]
-"7269" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1535</SUB>> ]
-"7272" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1535</SUB>> ]
-"7218" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1535</SUB>> ]
-"7219" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1535</SUB>> ]
-"7221" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1535</SUB>> ]
-"7203" [label = <(METHOD,GetCharField)<SUB>1534</SUB>> ]
-"7280" [label = <(METHOD_RETURN,jchar)<SUB>1534</SUB>> ]
+"7208" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1534</SUB>> ]
+"7242" [label = <(soa,ScopedObjectAccess)<SUB>1534</SUB>> ]
+"7245" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1534</SUB>> ]
+"7254" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1534</SUB>> ]
+"7257" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1534</SUB>> ]
+"7274" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj);,GET_PRIMITIVE_FIELD(Char, obj);)<SUB>1534</SUB>> ]
+"7227" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1534</SUB>> ]
+"7247" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1534</SUB>> ]
+"7258" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1534</SUB>> ]
+"7265" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1534</SUB>> ]
+"7275" [label = <(GET_PRIMITIVE_FIELD(Char, obj),f-&gt;GetChar(o))<SUB>1534</SUB>> ]
+"7228" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1534</SUB>> ]
+"7232" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1534</SUB>> ]
+"7239" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1534</SUB>> ]
+"7248" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1534</SUB>> ]
+"7259" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1534</SUB>> ]
+"7266" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1534</SUB>> ]
+"7276" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1534</SUB>> ]
+"7212" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1534</SUB>> ]
+"7233" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1534</SUB>> ]
+"7249" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1534</SUB>> ]
+"7261" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1534</SUB>> ]
+"7267" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1534</SUB>> ]
+"7270" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1534</SUB>> ]
+"7278" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1534</SUB>> ]
+"7213" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1534</SUB>> ]
+"7217" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1534</SUB>> ]
+"7224" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1534</SUB>> ]
+"7234" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1534</SUB>> ]
+"7236" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1534</SUB>> ]
+"7251" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1534</SUB>> ]
+"7263" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1534</SUB>> ]
+"7269" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1534</SUB>> ]
+"7272" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1534</SUB>> ]
+"7218" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1534</SUB>> ]
+"7219" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1534</SUB>> ]
+"7221" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1534</SUB>> ]
+"7203" [label = <(METHOD,GetCharField)<SUB>1533</SUB>> ]
+"7280" [label = <(METHOD_RETURN,jchar)<SUB>1533</SUB>> ]
   "7208" -> "7213" 
   "7208" -> "7228" 
   "7242" -> "7251" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/13-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/13-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/13-cfg.dot	2023-06-07 19:35:41.347383235 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/13-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "ReportInvalidJNINativeMethod" {  
-"349" [label = <(METHOD,ReportInvalidJNINativeMethod)<SUB>284</SUB>> ]
-"355" [label = <(METHOD_RETURN,void)<SUB>284</SUB>> ]
+"349" [label = <(METHOD,ReportInvalidJNINativeMethod)<SUB>283</SUB>> ]
+"355" [label = <(METHOD_RETURN,void)<SUB>283</SUB>> ]
   "349" -> "355" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/130-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/130-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/130-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/130-cfg.dot	2023-06-07 19:35:47.907382795 +0330
@@ -1,43 +1,43 @@
 digraph "GetShortField" {  
-"7287" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1539</SUB>> ]
-"7321" [label = <(soa,ScopedObjectAccess)<SUB>1539</SUB>> ]
-"7324" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1539</SUB>> ]
-"7333" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1539</SUB>> ]
-"7336" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1539</SUB>> ]
-"7353" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj);,GET_PRIMITIVE_FIELD(Short, obj);)<SUB>1539</SUB>> ]
-"7306" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1539</SUB>> ]
-"7326" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1539</SUB>> ]
-"7337" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1539</SUB>> ]
-"7344" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1539</SUB>> ]
-"7354" [label = <(GET_PRIMITIVE_FIELD(Short, obj),f-&gt;GetShort(o))<SUB>1539</SUB>> ]
-"7307" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1539</SUB>> ]
-"7311" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1539</SUB>> ]
-"7318" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1539</SUB>> ]
-"7327" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1539</SUB>> ]
-"7338" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1539</SUB>> ]
-"7345" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1539</SUB>> ]
-"7355" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1539</SUB>> ]
-"7291" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1539</SUB>> ]
-"7312" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1539</SUB>> ]
-"7328" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1539</SUB>> ]
-"7340" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1539</SUB>> ]
-"7346" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1539</SUB>> ]
-"7349" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1539</SUB>> ]
-"7357" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1539</SUB>> ]
-"7292" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1539</SUB>> ]
-"7296" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1539</SUB>> ]
-"7303" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1539</SUB>> ]
-"7313" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1539</SUB>> ]
-"7315" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1539</SUB>> ]
-"7330" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1539</SUB>> ]
-"7342" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1539</SUB>> ]
-"7348" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1539</SUB>> ]
-"7351" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1539</SUB>> ]
-"7297" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1539</SUB>> ]
-"7298" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1539</SUB>> ]
-"7300" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1539</SUB>> ]
-"7282" [label = <(METHOD,GetShortField)<SUB>1538</SUB>> ]
-"7359" [label = <(METHOD_RETURN,jshort)<SUB>1538</SUB>> ]
+"7287" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1538</SUB>> ]
+"7321" [label = <(soa,ScopedObjectAccess)<SUB>1538</SUB>> ]
+"7324" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1538</SUB>> ]
+"7333" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1538</SUB>> ]
+"7336" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1538</SUB>> ]
+"7353" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj);,GET_PRIMITIVE_FIELD(Short, obj);)<SUB>1538</SUB>> ]
+"7306" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1538</SUB>> ]
+"7326" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1538</SUB>> ]
+"7337" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1538</SUB>> ]
+"7344" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1538</SUB>> ]
+"7354" [label = <(GET_PRIMITIVE_FIELD(Short, obj),f-&gt;GetShort(o))<SUB>1538</SUB>> ]
+"7307" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1538</SUB>> ]
+"7311" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1538</SUB>> ]
+"7318" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1538</SUB>> ]
+"7327" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1538</SUB>> ]
+"7338" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1538</SUB>> ]
+"7345" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1538</SUB>> ]
+"7355" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1538</SUB>> ]
+"7291" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1538</SUB>> ]
+"7312" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1538</SUB>> ]
+"7328" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1538</SUB>> ]
+"7340" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1538</SUB>> ]
+"7346" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1538</SUB>> ]
+"7349" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1538</SUB>> ]
+"7357" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1538</SUB>> ]
+"7292" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1538</SUB>> ]
+"7296" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1538</SUB>> ]
+"7303" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1538</SUB>> ]
+"7313" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1538</SUB>> ]
+"7315" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1538</SUB>> ]
+"7330" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1538</SUB>> ]
+"7342" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1538</SUB>> ]
+"7348" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1538</SUB>> ]
+"7351" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1538</SUB>> ]
+"7297" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1538</SUB>> ]
+"7298" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1538</SUB>> ]
+"7300" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1538</SUB>> ]
+"7282" [label = <(METHOD,GetShortField)<SUB>1537</SUB>> ]
+"7359" [label = <(METHOD_RETURN,jshort)<SUB>1537</SUB>> ]
   "7287" -> "7292" 
   "7287" -> "7307" 
   "7321" -> "7330" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/131-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/131-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/131-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/131-cfg.dot	2023-06-07 19:35:47.907382795 +0330
@@ -1,43 +1,43 @@
 digraph "GetIntField" {  
-"7366" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1543</SUB>> ]
-"7400" [label = <(soa,ScopedObjectAccess)<SUB>1543</SUB>> ]
-"7403" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1543</SUB>> ]
-"7412" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1543</SUB>> ]
-"7415" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1543</SUB>> ]
-"7432" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj);,GET_PRIMITIVE_FIELD(Int, obj);)<SUB>1543</SUB>> ]
-"7385" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1543</SUB>> ]
-"7405" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1543</SUB>> ]
-"7416" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1543</SUB>> ]
-"7423" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1543</SUB>> ]
-"7433" [label = <(GET_PRIMITIVE_FIELD(Int, obj),f-&gt;GetInt(o))<SUB>1543</SUB>> ]
-"7386" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1543</SUB>> ]
-"7390" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1543</SUB>> ]
-"7397" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1543</SUB>> ]
-"7406" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1543</SUB>> ]
-"7417" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1543</SUB>> ]
-"7424" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1543</SUB>> ]
-"7434" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1543</SUB>> ]
-"7370" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1543</SUB>> ]
-"7391" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1543</SUB>> ]
-"7407" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1543</SUB>> ]
-"7419" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1543</SUB>> ]
-"7425" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1543</SUB>> ]
-"7428" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1543</SUB>> ]
-"7436" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1543</SUB>> ]
-"7371" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1543</SUB>> ]
-"7375" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1543</SUB>> ]
-"7382" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1543</SUB>> ]
-"7392" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1543</SUB>> ]
-"7394" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1543</SUB>> ]
-"7409" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1543</SUB>> ]
-"7421" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1543</SUB>> ]
-"7427" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1543</SUB>> ]
-"7430" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1543</SUB>> ]
-"7376" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1543</SUB>> ]
-"7377" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1543</SUB>> ]
-"7379" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1543</SUB>> ]
-"7361" [label = <(METHOD,GetIntField)<SUB>1542</SUB>> ]
-"7438" [label = <(METHOD_RETURN,jint)<SUB>1542</SUB>> ]
+"7366" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1542</SUB>> ]
+"7400" [label = <(soa,ScopedObjectAccess)<SUB>1542</SUB>> ]
+"7403" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1542</SUB>> ]
+"7412" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1542</SUB>> ]
+"7415" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1542</SUB>> ]
+"7432" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj);,GET_PRIMITIVE_FIELD(Int, obj);)<SUB>1542</SUB>> ]
+"7385" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1542</SUB>> ]
+"7405" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1542</SUB>> ]
+"7416" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1542</SUB>> ]
+"7423" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1542</SUB>> ]
+"7433" [label = <(GET_PRIMITIVE_FIELD(Int, obj),f-&gt;GetInt(o))<SUB>1542</SUB>> ]
+"7386" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1542</SUB>> ]
+"7390" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1542</SUB>> ]
+"7397" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1542</SUB>> ]
+"7406" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1542</SUB>> ]
+"7417" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1542</SUB>> ]
+"7424" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1542</SUB>> ]
+"7434" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1542</SUB>> ]
+"7370" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1542</SUB>> ]
+"7391" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1542</SUB>> ]
+"7407" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1542</SUB>> ]
+"7419" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1542</SUB>> ]
+"7425" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1542</SUB>> ]
+"7428" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1542</SUB>> ]
+"7436" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1542</SUB>> ]
+"7371" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1542</SUB>> ]
+"7375" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1542</SUB>> ]
+"7382" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1542</SUB>> ]
+"7392" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1542</SUB>> ]
+"7394" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1542</SUB>> ]
+"7409" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1542</SUB>> ]
+"7421" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1542</SUB>> ]
+"7427" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1542</SUB>> ]
+"7430" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1542</SUB>> ]
+"7376" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1542</SUB>> ]
+"7377" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1542</SUB>> ]
+"7379" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1542</SUB>> ]
+"7361" [label = <(METHOD,GetIntField)<SUB>1541</SUB>> ]
+"7438" [label = <(METHOD_RETURN,jint)<SUB>1541</SUB>> ]
   "7366" -> "7371" 
   "7366" -> "7386" 
   "7400" -> "7409" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/132-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/132-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/132-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/132-cfg.dot	2023-06-07 19:35:47.907382795 +0330
@@ -1,43 +1,43 @@
 digraph "GetLongField" {  
-"7445" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1547</SUB>> ]
-"7479" [label = <(soa,ScopedObjectAccess)<SUB>1547</SUB>> ]
-"7482" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1547</SUB>> ]
-"7491" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1547</SUB>> ]
-"7494" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1547</SUB>> ]
-"7511" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj);,GET_PRIMITIVE_FIELD(Long, obj);)<SUB>1547</SUB>> ]
-"7464" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1547</SUB>> ]
-"7484" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1547</SUB>> ]
-"7495" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1547</SUB>> ]
-"7502" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1547</SUB>> ]
-"7512" [label = <(GET_PRIMITIVE_FIELD(Long, obj),f-&gt;GetLong(o))<SUB>1547</SUB>> ]
-"7465" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1547</SUB>> ]
-"7469" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1547</SUB>> ]
-"7476" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1547</SUB>> ]
-"7485" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1547</SUB>> ]
-"7496" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1547</SUB>> ]
-"7503" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1547</SUB>> ]
-"7513" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1547</SUB>> ]
-"7449" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1547</SUB>> ]
-"7470" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1547</SUB>> ]
-"7486" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1547</SUB>> ]
-"7498" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1547</SUB>> ]
-"7504" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1547</SUB>> ]
-"7507" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1547</SUB>> ]
-"7515" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1547</SUB>> ]
-"7450" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1547</SUB>> ]
-"7454" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1547</SUB>> ]
-"7461" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1547</SUB>> ]
-"7471" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1547</SUB>> ]
-"7473" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1547</SUB>> ]
-"7488" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1547</SUB>> ]
-"7500" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1547</SUB>> ]
-"7506" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1547</SUB>> ]
-"7509" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1547</SUB>> ]
-"7455" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1547</SUB>> ]
-"7456" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1547</SUB>> ]
-"7458" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1547</SUB>> ]
-"7440" [label = <(METHOD,GetLongField)<SUB>1546</SUB>> ]
-"7517" [label = <(METHOD_RETURN,jlong)<SUB>1546</SUB>> ]
+"7445" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1546</SUB>> ]
+"7479" [label = <(soa,ScopedObjectAccess)<SUB>1546</SUB>> ]
+"7482" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1546</SUB>> ]
+"7491" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1546</SUB>> ]
+"7494" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1546</SUB>> ]
+"7511" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj);,GET_PRIMITIVE_FIELD(Long, obj);)<SUB>1546</SUB>> ]
+"7464" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1546</SUB>> ]
+"7484" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1546</SUB>> ]
+"7495" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1546</SUB>> ]
+"7502" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1546</SUB>> ]
+"7512" [label = <(GET_PRIMITIVE_FIELD(Long, obj),f-&gt;GetLong(o))<SUB>1546</SUB>> ]
+"7465" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1546</SUB>> ]
+"7469" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1546</SUB>> ]
+"7476" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1546</SUB>> ]
+"7485" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1546</SUB>> ]
+"7496" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1546</SUB>> ]
+"7503" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1546</SUB>> ]
+"7513" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1546</SUB>> ]
+"7449" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1546</SUB>> ]
+"7470" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1546</SUB>> ]
+"7486" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1546</SUB>> ]
+"7498" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1546</SUB>> ]
+"7504" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1546</SUB>> ]
+"7507" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1546</SUB>> ]
+"7515" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1546</SUB>> ]
+"7450" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1546</SUB>> ]
+"7454" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1546</SUB>> ]
+"7461" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1546</SUB>> ]
+"7471" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1546</SUB>> ]
+"7473" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1546</SUB>> ]
+"7488" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1546</SUB>> ]
+"7500" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1546</SUB>> ]
+"7506" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1546</SUB>> ]
+"7509" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1546</SUB>> ]
+"7455" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1546</SUB>> ]
+"7456" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1546</SUB>> ]
+"7458" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1546</SUB>> ]
+"7440" [label = <(METHOD,GetLongField)<SUB>1545</SUB>> ]
+"7517" [label = <(METHOD_RETURN,jlong)<SUB>1545</SUB>> ]
   "7445" -> "7450" 
   "7445" -> "7465" 
   "7479" -> "7488" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/133-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/133-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/133-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/133-cfg.dot	2023-06-07 19:35:47.907382795 +0330
@@ -1,43 +1,43 @@
 digraph "GetFloatField" {  
-"7524" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1551</SUB>> ]
-"7558" [label = <(soa,ScopedObjectAccess)<SUB>1551</SUB>> ]
-"7561" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1551</SUB>> ]
-"7570" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1551</SUB>> ]
-"7573" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1551</SUB>> ]
-"7590" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj);,GET_PRIMITIVE_FIELD(Float, obj);)<SUB>1551</SUB>> ]
-"7543" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1551</SUB>> ]
-"7563" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1551</SUB>> ]
-"7574" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1551</SUB>> ]
-"7581" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1551</SUB>> ]
-"7591" [label = <(GET_PRIMITIVE_FIELD(Float, obj),f-&gt;GetFloat(o))<SUB>1551</SUB>> ]
-"7544" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1551</SUB>> ]
-"7548" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1551</SUB>> ]
-"7555" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1551</SUB>> ]
-"7564" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1551</SUB>> ]
-"7575" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1551</SUB>> ]
-"7582" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1551</SUB>> ]
-"7592" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1551</SUB>> ]
-"7528" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1551</SUB>> ]
-"7549" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1551</SUB>> ]
-"7565" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1551</SUB>> ]
-"7577" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1551</SUB>> ]
-"7583" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1551</SUB>> ]
-"7586" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1551</SUB>> ]
-"7594" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1551</SUB>> ]
-"7529" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1551</SUB>> ]
-"7533" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1551</SUB>> ]
-"7540" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1551</SUB>> ]
-"7550" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1551</SUB>> ]
-"7552" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1551</SUB>> ]
-"7567" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1551</SUB>> ]
-"7579" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1551</SUB>> ]
-"7585" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1551</SUB>> ]
-"7588" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1551</SUB>> ]
-"7534" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1551</SUB>> ]
-"7535" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1551</SUB>> ]
-"7537" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1551</SUB>> ]
-"7519" [label = <(METHOD,GetFloatField)<SUB>1550</SUB>> ]
-"7596" [label = <(METHOD_RETURN,jfloat)<SUB>1550</SUB>> ]
+"7524" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1550</SUB>> ]
+"7558" [label = <(soa,ScopedObjectAccess)<SUB>1550</SUB>> ]
+"7561" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1550</SUB>> ]
+"7570" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1550</SUB>> ]
+"7573" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1550</SUB>> ]
+"7590" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj);,GET_PRIMITIVE_FIELD(Float, obj);)<SUB>1550</SUB>> ]
+"7543" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1550</SUB>> ]
+"7563" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1550</SUB>> ]
+"7574" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1550</SUB>> ]
+"7581" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1550</SUB>> ]
+"7591" [label = <(GET_PRIMITIVE_FIELD(Float, obj),f-&gt;GetFloat(o))<SUB>1550</SUB>> ]
+"7544" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1550</SUB>> ]
+"7548" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1550</SUB>> ]
+"7555" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1550</SUB>> ]
+"7564" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1550</SUB>> ]
+"7575" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1550</SUB>> ]
+"7582" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1550</SUB>> ]
+"7592" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1550</SUB>> ]
+"7528" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1550</SUB>> ]
+"7549" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1550</SUB>> ]
+"7565" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1550</SUB>> ]
+"7577" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1550</SUB>> ]
+"7583" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1550</SUB>> ]
+"7586" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1550</SUB>> ]
+"7594" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1550</SUB>> ]
+"7529" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1550</SUB>> ]
+"7533" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1550</SUB>> ]
+"7540" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1550</SUB>> ]
+"7550" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1550</SUB>> ]
+"7552" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1550</SUB>> ]
+"7567" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1550</SUB>> ]
+"7579" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1550</SUB>> ]
+"7585" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1550</SUB>> ]
+"7588" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1550</SUB>> ]
+"7534" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1550</SUB>> ]
+"7535" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1550</SUB>> ]
+"7537" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1550</SUB>> ]
+"7519" [label = <(METHOD,GetFloatField)<SUB>1549</SUB>> ]
+"7596" [label = <(METHOD_RETURN,jfloat)<SUB>1549</SUB>> ]
   "7524" -> "7529" 
   "7524" -> "7544" 
   "7558" -> "7567" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/134-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/134-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/134-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/134-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,43 +1,43 @@
 digraph "GetDoubleField" {  
-"7603" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1555</SUB>> ]
-"7637" [label = <(soa,ScopedObjectAccess)<SUB>1555</SUB>> ]
-"7640" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1555</SUB>> ]
-"7649" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1555</SUB>> ]
-"7652" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1555</SUB>> ]
-"7669" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj);,GET_PRIMITIVE_FIELD(Double, obj);)<SUB>1555</SUB>> ]
-"7622" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1555</SUB>> ]
-"7642" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1555</SUB>> ]
-"7653" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1555</SUB>> ]
-"7660" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1555</SUB>> ]
-"7670" [label = <(GET_PRIMITIVE_FIELD(Double, obj),f-&gt;GetDouble(o))<SUB>1555</SUB>> ]
-"7623" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1555</SUB>> ]
-"7627" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1555</SUB>> ]
-"7634" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1555</SUB>> ]
-"7643" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1555</SUB>> ]
-"7654" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1555</SUB>> ]
-"7661" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1555</SUB>> ]
-"7671" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1555</SUB>> ]
-"7607" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1555</SUB>> ]
-"7628" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1555</SUB>> ]
-"7644" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1555</SUB>> ]
-"7656" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1555</SUB>> ]
-"7662" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1555</SUB>> ]
-"7665" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1555</SUB>> ]
-"7673" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1555</SUB>> ]
-"7608" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1555</SUB>> ]
-"7612" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1555</SUB>> ]
-"7619" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1555</SUB>> ]
-"7629" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1555</SUB>> ]
-"7631" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1555</SUB>> ]
-"7646" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1555</SUB>> ]
-"7658" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1555</SUB>> ]
-"7664" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1555</SUB>> ]
-"7667" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1555</SUB>> ]
-"7613" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1555</SUB>> ]
-"7614" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1555</SUB>> ]
-"7616" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1555</SUB>> ]
-"7598" [label = <(METHOD,GetDoubleField)<SUB>1554</SUB>> ]
-"7675" [label = <(METHOD_RETURN,jdouble)<SUB>1554</SUB>> ]
+"7603" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1554</SUB>> ]
+"7637" [label = <(soa,ScopedObjectAccess)<SUB>1554</SUB>> ]
+"7640" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1554</SUB>> ]
+"7649" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1554</SUB>> ]
+"7652" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1554</SUB>> ]
+"7669" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj);,GET_PRIMITIVE_FIELD(Double, obj);)<SUB>1554</SUB>> ]
+"7622" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1554</SUB>> ]
+"7642" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1554</SUB>> ]
+"7653" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1554</SUB>> ]
+"7660" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1554</SUB>> ]
+"7670" [label = <(GET_PRIMITIVE_FIELD(Double, obj),f-&gt;GetDouble(o))<SUB>1554</SUB>> ]
+"7623" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1554</SUB>> ]
+"7627" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1554</SUB>> ]
+"7634" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1554</SUB>> ]
+"7643" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1554</SUB>> ]
+"7654" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1554</SUB>> ]
+"7661" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1554</SUB>> ]
+"7671" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1554</SUB>> ]
+"7607" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1554</SUB>> ]
+"7628" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1554</SUB>> ]
+"7644" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1554</SUB>> ]
+"7656" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1554</SUB>> ]
+"7662" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1554</SUB>> ]
+"7665" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1554</SUB>> ]
+"7673" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1554</SUB>> ]
+"7608" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1554</SUB>> ]
+"7612" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1554</SUB>> ]
+"7619" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1554</SUB>> ]
+"7629" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1554</SUB>> ]
+"7631" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1554</SUB>> ]
+"7646" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1554</SUB>> ]
+"7658" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1554</SUB>> ]
+"7664" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1554</SUB>> ]
+"7667" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1554</SUB>> ]
+"7613" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1554</SUB>> ]
+"7614" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1554</SUB>> ]
+"7616" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1554</SUB>> ]
+"7598" [label = <(METHOD,GetDoubleField)<SUB>1553</SUB>> ]
+"7675" [label = <(METHOD_RETURN,jdouble)<SUB>1553</SUB>> ]
   "7603" -> "7608" 
   "7603" -> "7623" 
   "7637" -> "7646" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/135-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/135-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/135-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/135-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,28 +1,28 @@
 digraph "GetStaticBooleanField" {  
-"7682" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1559</SUB>> ]
-"7700" [label = <(soa,ScopedObjectAccess)<SUB>1559</SUB>> ]
-"7703" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1559</SUB>> ]
-"7712" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1559</SUB>> ]
-"7715" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean);,GET_STATIC_PRIMITIVE_FIELD(Boolean);)<SUB>1559</SUB>> ]
-"7705" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1559</SUB>> ]
-"7716" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetBoolean(f-&gt;GetDeclaringClass()))<SUB>1559</SUB>> ]
-"7706" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1559</SUB>> ]
-"7717" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1559</SUB>> ]
-"7720" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetDeclaringClass())<SUB>1559</SUB>> ]
-"7685" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1559</SUB>> ]
-"7707" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1559</SUB>> ]
-"7719" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1559</SUB>> ]
-"7721" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1559</SUB>> ]
-"7686" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1559</SUB>> ]
-"7690" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1559</SUB>> ]
-"7697" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean),GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1559</SUB>> ]
-"7709" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1559</SUB>> ]
-"7723" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1559</SUB>> ]
-"7691" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1559</SUB>> ]
-"7692" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1559</SUB>> ]
-"7694" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1559</SUB>> ]
-"7677" [label = <(METHOD,GetStaticBooleanField)<SUB>1558</SUB>> ]
-"7724" [label = <(METHOD_RETURN,jboolean)<SUB>1558</SUB>> ]
+"7682" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1558</SUB>> ]
+"7700" [label = <(soa,ScopedObjectAccess)<SUB>1558</SUB>> ]
+"7703" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1558</SUB>> ]
+"7712" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1558</SUB>> ]
+"7715" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean);,GET_STATIC_PRIMITIVE_FIELD(Boolean);)<SUB>1558</SUB>> ]
+"7705" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1558</SUB>> ]
+"7716" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetBoolean(f-&gt;GetDeclaringClass()))<SUB>1558</SUB>> ]
+"7706" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1558</SUB>> ]
+"7717" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1558</SUB>> ]
+"7720" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetDeclaringClass())<SUB>1558</SUB>> ]
+"7685" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1558</SUB>> ]
+"7707" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1558</SUB>> ]
+"7719" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1558</SUB>> ]
+"7721" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1558</SUB>> ]
+"7686" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1558</SUB>> ]
+"7690" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1558</SUB>> ]
+"7697" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean),GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1558</SUB>> ]
+"7709" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1558</SUB>> ]
+"7723" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1558</SUB>> ]
+"7691" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1558</SUB>> ]
+"7692" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1558</SUB>> ]
+"7694" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1558</SUB>> ]
+"7677" [label = <(METHOD,GetStaticBooleanField)<SUB>1557</SUB>> ]
+"7724" [label = <(METHOD_RETURN,jboolean)<SUB>1557</SUB>> ]
   "7682" -> "7686" 
   "7682" -> "7700" 
   "7700" -> "7709" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/136-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/136-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/136-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/136-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,28 +1,28 @@
 digraph "GetStaticByteField" {  
-"7731" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1563</SUB>> ]
-"7749" [label = <(soa,ScopedObjectAccess)<SUB>1563</SUB>> ]
-"7752" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1563</SUB>> ]
-"7761" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1563</SUB>> ]
-"7764" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte);,GET_STATIC_PRIMITIVE_FIELD(Byte);)<SUB>1563</SUB>> ]
-"7754" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1563</SUB>> ]
-"7765" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetByte(f-&gt;GetDeclaringClass()))<SUB>1563</SUB>> ]
-"7755" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1563</SUB>> ]
-"7766" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1563</SUB>> ]
-"7769" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetDeclaringClass())<SUB>1563</SUB>> ]
-"7734" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1563</SUB>> ]
-"7756" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1563</SUB>> ]
-"7768" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1563</SUB>> ]
-"7770" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1563</SUB>> ]
-"7735" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1563</SUB>> ]
-"7739" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1563</SUB>> ]
-"7746" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte),GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1563</SUB>> ]
-"7758" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1563</SUB>> ]
-"7772" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1563</SUB>> ]
-"7740" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1563</SUB>> ]
-"7741" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1563</SUB>> ]
-"7743" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1563</SUB>> ]
-"7726" [label = <(METHOD,GetStaticByteField)<SUB>1562</SUB>> ]
-"7773" [label = <(METHOD_RETURN,jbyte)<SUB>1562</SUB>> ]
+"7731" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1562</SUB>> ]
+"7749" [label = <(soa,ScopedObjectAccess)<SUB>1562</SUB>> ]
+"7752" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1562</SUB>> ]
+"7761" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1562</SUB>> ]
+"7764" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte);,GET_STATIC_PRIMITIVE_FIELD(Byte);)<SUB>1562</SUB>> ]
+"7754" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1562</SUB>> ]
+"7765" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetByte(f-&gt;GetDeclaringClass()))<SUB>1562</SUB>> ]
+"7755" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1562</SUB>> ]
+"7766" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1562</SUB>> ]
+"7769" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetDeclaringClass())<SUB>1562</SUB>> ]
+"7734" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1562</SUB>> ]
+"7756" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1562</SUB>> ]
+"7768" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1562</SUB>> ]
+"7770" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1562</SUB>> ]
+"7735" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1562</SUB>> ]
+"7739" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1562</SUB>> ]
+"7746" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte),GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1562</SUB>> ]
+"7758" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1562</SUB>> ]
+"7772" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1562</SUB>> ]
+"7740" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1562</SUB>> ]
+"7741" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1562</SUB>> ]
+"7743" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1562</SUB>> ]
+"7726" [label = <(METHOD,GetStaticByteField)<SUB>1561</SUB>> ]
+"7773" [label = <(METHOD_RETURN,jbyte)<SUB>1561</SUB>> ]
   "7731" -> "7735" 
   "7731" -> "7749" 
   "7749" -> "7758" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/137-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/137-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/137-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/137-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,28 +1,28 @@
 digraph "GetStaticCharField" {  
-"7780" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1567</SUB>> ]
-"7798" [label = <(soa,ScopedObjectAccess)<SUB>1567</SUB>> ]
-"7801" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1567</SUB>> ]
-"7810" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1567</SUB>> ]
-"7813" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char);,GET_STATIC_PRIMITIVE_FIELD(Char);)<SUB>1567</SUB>> ]
-"7803" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1567</SUB>> ]
-"7814" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetChar(f-&gt;GetDeclaringClass()))<SUB>1567</SUB>> ]
-"7804" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1567</SUB>> ]
-"7815" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1567</SUB>> ]
-"7818" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetDeclaringClass())<SUB>1567</SUB>> ]
-"7783" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1567</SUB>> ]
-"7805" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1567</SUB>> ]
-"7817" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1567</SUB>> ]
-"7819" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1567</SUB>> ]
-"7784" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1567</SUB>> ]
-"7788" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1567</SUB>> ]
-"7795" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char),GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1567</SUB>> ]
-"7807" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1567</SUB>> ]
-"7821" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1567</SUB>> ]
-"7789" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1567</SUB>> ]
-"7790" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1567</SUB>> ]
-"7792" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1567</SUB>> ]
-"7775" [label = <(METHOD,GetStaticCharField)<SUB>1566</SUB>> ]
-"7822" [label = <(METHOD_RETURN,jchar)<SUB>1566</SUB>> ]
+"7780" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1566</SUB>> ]
+"7798" [label = <(soa,ScopedObjectAccess)<SUB>1566</SUB>> ]
+"7801" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1566</SUB>> ]
+"7810" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1566</SUB>> ]
+"7813" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char);,GET_STATIC_PRIMITIVE_FIELD(Char);)<SUB>1566</SUB>> ]
+"7803" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1566</SUB>> ]
+"7814" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetChar(f-&gt;GetDeclaringClass()))<SUB>1566</SUB>> ]
+"7804" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1566</SUB>> ]
+"7815" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1566</SUB>> ]
+"7818" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetDeclaringClass())<SUB>1566</SUB>> ]
+"7783" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1566</SUB>> ]
+"7805" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1566</SUB>> ]
+"7817" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1566</SUB>> ]
+"7819" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1566</SUB>> ]
+"7784" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1566</SUB>> ]
+"7788" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1566</SUB>> ]
+"7795" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char),GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1566</SUB>> ]
+"7807" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1566</SUB>> ]
+"7821" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1566</SUB>> ]
+"7789" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1566</SUB>> ]
+"7790" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1566</SUB>> ]
+"7792" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1566</SUB>> ]
+"7775" [label = <(METHOD,GetStaticCharField)<SUB>1565</SUB>> ]
+"7822" [label = <(METHOD_RETURN,jchar)<SUB>1565</SUB>> ]
   "7780" -> "7784" 
   "7780" -> "7798" 
   "7798" -> "7807" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/138-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/138-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/138-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/138-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,28 +1,28 @@
 digraph "GetStaticShortField" {  
-"7829" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1571</SUB>> ]
-"7847" [label = <(soa,ScopedObjectAccess)<SUB>1571</SUB>> ]
-"7850" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1571</SUB>> ]
-"7859" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1571</SUB>> ]
-"7862" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short);,GET_STATIC_PRIMITIVE_FIELD(Short);)<SUB>1571</SUB>> ]
-"7852" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1571</SUB>> ]
-"7863" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetShort(f-&gt;GetDeclaringClass()))<SUB>1571</SUB>> ]
-"7853" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1571</SUB>> ]
-"7864" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1571</SUB>> ]
-"7867" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetDeclaringClass())<SUB>1571</SUB>> ]
-"7832" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1571</SUB>> ]
-"7854" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1571</SUB>> ]
-"7866" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1571</SUB>> ]
-"7868" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1571</SUB>> ]
-"7833" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1571</SUB>> ]
-"7837" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1571</SUB>> ]
-"7844" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short),GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1571</SUB>> ]
-"7856" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1571</SUB>> ]
-"7870" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1571</SUB>> ]
-"7838" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1571</SUB>> ]
-"7839" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1571</SUB>> ]
-"7841" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1571</SUB>> ]
-"7824" [label = <(METHOD,GetStaticShortField)<SUB>1570</SUB>> ]
-"7871" [label = <(METHOD_RETURN,jshort)<SUB>1570</SUB>> ]
+"7829" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1570</SUB>> ]
+"7847" [label = <(soa,ScopedObjectAccess)<SUB>1570</SUB>> ]
+"7850" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1570</SUB>> ]
+"7859" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1570</SUB>> ]
+"7862" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short);,GET_STATIC_PRIMITIVE_FIELD(Short);)<SUB>1570</SUB>> ]
+"7852" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1570</SUB>> ]
+"7863" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetShort(f-&gt;GetDeclaringClass()))<SUB>1570</SUB>> ]
+"7853" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1570</SUB>> ]
+"7864" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1570</SUB>> ]
+"7867" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetDeclaringClass())<SUB>1570</SUB>> ]
+"7832" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1570</SUB>> ]
+"7854" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1570</SUB>> ]
+"7866" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1570</SUB>> ]
+"7868" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1570</SUB>> ]
+"7833" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1570</SUB>> ]
+"7837" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1570</SUB>> ]
+"7844" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short),GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1570</SUB>> ]
+"7856" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1570</SUB>> ]
+"7870" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1570</SUB>> ]
+"7838" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1570</SUB>> ]
+"7839" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1570</SUB>> ]
+"7841" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1570</SUB>> ]
+"7824" [label = <(METHOD,GetStaticShortField)<SUB>1569</SUB>> ]
+"7871" [label = <(METHOD_RETURN,jshort)<SUB>1569</SUB>> ]
   "7829" -> "7833" 
   "7829" -> "7847" 
   "7847" -> "7856" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/139-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/139-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/139-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/139-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,28 +1,28 @@
 digraph "GetStaticIntField" {  
-"7878" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1575</SUB>> ]
-"7896" [label = <(soa,ScopedObjectAccess)<SUB>1575</SUB>> ]
-"7899" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1575</SUB>> ]
-"7908" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1575</SUB>> ]
-"7911" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int);,GET_STATIC_PRIMITIVE_FIELD(Int);)<SUB>1575</SUB>> ]
-"7901" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1575</SUB>> ]
-"7912" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetInt(f-&gt;GetDeclaringClass()))<SUB>1575</SUB>> ]
-"7902" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1575</SUB>> ]
-"7913" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1575</SUB>> ]
-"7916" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetDeclaringClass())<SUB>1575</SUB>> ]
-"7881" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1575</SUB>> ]
-"7903" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1575</SUB>> ]
-"7915" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1575</SUB>> ]
-"7917" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1575</SUB>> ]
-"7882" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1575</SUB>> ]
-"7886" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1575</SUB>> ]
-"7893" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int),GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1575</SUB>> ]
-"7905" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1575</SUB>> ]
-"7919" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1575</SUB>> ]
-"7887" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1575</SUB>> ]
-"7888" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1575</SUB>> ]
-"7890" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1575</SUB>> ]
-"7873" [label = <(METHOD,GetStaticIntField)<SUB>1574</SUB>> ]
-"7920" [label = <(METHOD_RETURN,jint)<SUB>1574</SUB>> ]
+"7878" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1574</SUB>> ]
+"7896" [label = <(soa,ScopedObjectAccess)<SUB>1574</SUB>> ]
+"7899" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1574</SUB>> ]
+"7908" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1574</SUB>> ]
+"7911" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int);,GET_STATIC_PRIMITIVE_FIELD(Int);)<SUB>1574</SUB>> ]
+"7901" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1574</SUB>> ]
+"7912" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetInt(f-&gt;GetDeclaringClass()))<SUB>1574</SUB>> ]
+"7902" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1574</SUB>> ]
+"7913" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1574</SUB>> ]
+"7916" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetDeclaringClass())<SUB>1574</SUB>> ]
+"7881" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1574</SUB>> ]
+"7903" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1574</SUB>> ]
+"7915" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1574</SUB>> ]
+"7917" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1574</SUB>> ]
+"7882" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1574</SUB>> ]
+"7886" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1574</SUB>> ]
+"7893" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int),GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1574</SUB>> ]
+"7905" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1574</SUB>> ]
+"7919" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1574</SUB>> ]
+"7887" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1574</SUB>> ]
+"7888" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1574</SUB>> ]
+"7890" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1574</SUB>> ]
+"7873" [label = <(METHOD,GetStaticIntField)<SUB>1573</SUB>> ]
+"7920" [label = <(METHOD_RETURN,jint)<SUB>1573</SUB>> ]
   "7878" -> "7882" 
   "7878" -> "7896" 
   "7896" -> "7905" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/14-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/14-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/14-cfg.dot	2023-06-07 19:35:41.347383235 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/14-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "FindMethodID" {  
-"361" [label = <(METHOD,FindMethodID)<SUB>300</SUB>> ]
-"368" [label = <(METHOD_RETURN,jmethodID)<SUB>300</SUB>> ]
+"361" [label = <(METHOD,FindMethodID)<SUB>299</SUB>> ]
+"368" [label = <(METHOD_RETURN,jmethodID)<SUB>299</SUB>> ]
   "361" -> "368" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/140-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/140-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/140-cfg.dot	2023-06-07 19:35:41.477383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/140-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,28 +1,28 @@
 digraph "GetStaticLongField" {  
-"7927" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1579</SUB>> ]
-"7945" [label = <(soa,ScopedObjectAccess)<SUB>1579</SUB>> ]
-"7948" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1579</SUB>> ]
-"7957" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1579</SUB>> ]
-"7960" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long);,GET_STATIC_PRIMITIVE_FIELD(Long);)<SUB>1579</SUB>> ]
-"7950" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1579</SUB>> ]
-"7961" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetLong(f-&gt;GetDeclaringClass()))<SUB>1579</SUB>> ]
-"7951" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1579</SUB>> ]
-"7962" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1579</SUB>> ]
-"7965" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetDeclaringClass())<SUB>1579</SUB>> ]
-"7930" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1579</SUB>> ]
-"7952" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1579</SUB>> ]
-"7964" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1579</SUB>> ]
-"7966" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1579</SUB>> ]
-"7931" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1579</SUB>> ]
-"7935" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1579</SUB>> ]
-"7942" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long),GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1579</SUB>> ]
-"7954" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1579</SUB>> ]
-"7968" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1579</SUB>> ]
-"7936" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1579</SUB>> ]
-"7937" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1579</SUB>> ]
-"7939" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1579</SUB>> ]
-"7922" [label = <(METHOD,GetStaticLongField)<SUB>1578</SUB>> ]
-"7969" [label = <(METHOD_RETURN,jlong)<SUB>1578</SUB>> ]
+"7927" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1578</SUB>> ]
+"7945" [label = <(soa,ScopedObjectAccess)<SUB>1578</SUB>> ]
+"7948" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1578</SUB>> ]
+"7957" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1578</SUB>> ]
+"7960" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long);,GET_STATIC_PRIMITIVE_FIELD(Long);)<SUB>1578</SUB>> ]
+"7950" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1578</SUB>> ]
+"7961" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetLong(f-&gt;GetDeclaringClass()))<SUB>1578</SUB>> ]
+"7951" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1578</SUB>> ]
+"7962" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1578</SUB>> ]
+"7965" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetDeclaringClass())<SUB>1578</SUB>> ]
+"7930" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1578</SUB>> ]
+"7952" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1578</SUB>> ]
+"7964" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1578</SUB>> ]
+"7966" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1578</SUB>> ]
+"7931" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1578</SUB>> ]
+"7935" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1578</SUB>> ]
+"7942" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long),GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1578</SUB>> ]
+"7954" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1578</SUB>> ]
+"7968" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1578</SUB>> ]
+"7936" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1578</SUB>> ]
+"7937" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1578</SUB>> ]
+"7939" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1578</SUB>> ]
+"7922" [label = <(METHOD,GetStaticLongField)<SUB>1577</SUB>> ]
+"7969" [label = <(METHOD_RETURN,jlong)<SUB>1577</SUB>> ]
   "7927" -> "7931" 
   "7927" -> "7945" 
   "7945" -> "7954" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/141-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/141-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/141-cfg.dot	2023-06-07 19:35:41.487383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/141-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,28 +1,28 @@
 digraph "GetStaticFloatField" {  
-"7976" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1583</SUB>> ]
-"7994" [label = <(soa,ScopedObjectAccess)<SUB>1583</SUB>> ]
-"7997" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1583</SUB>> ]
-"8006" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1583</SUB>> ]
-"8009" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float);,GET_STATIC_PRIMITIVE_FIELD(Float);)<SUB>1583</SUB>> ]
-"7999" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1583</SUB>> ]
-"8010" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetFloat(f-&gt;GetDeclaringClass()))<SUB>1583</SUB>> ]
-"8000" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1583</SUB>> ]
-"8011" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1583</SUB>> ]
-"8014" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetDeclaringClass())<SUB>1583</SUB>> ]
-"7979" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1583</SUB>> ]
-"8001" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1583</SUB>> ]
-"8013" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1583</SUB>> ]
-"8015" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1583</SUB>> ]
-"7980" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1583</SUB>> ]
-"7984" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1583</SUB>> ]
-"7991" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float),GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1583</SUB>> ]
-"8003" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1583</SUB>> ]
-"8017" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1583</SUB>> ]
-"7985" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1583</SUB>> ]
-"7986" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1583</SUB>> ]
-"7988" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1583</SUB>> ]
-"7971" [label = <(METHOD,GetStaticFloatField)<SUB>1582</SUB>> ]
-"8018" [label = <(METHOD_RETURN,jfloat)<SUB>1582</SUB>> ]
+"7976" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1582</SUB>> ]
+"7994" [label = <(soa,ScopedObjectAccess)<SUB>1582</SUB>> ]
+"7997" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1582</SUB>> ]
+"8006" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1582</SUB>> ]
+"8009" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float);,GET_STATIC_PRIMITIVE_FIELD(Float);)<SUB>1582</SUB>> ]
+"7999" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1582</SUB>> ]
+"8010" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetFloat(f-&gt;GetDeclaringClass()))<SUB>1582</SUB>> ]
+"8000" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1582</SUB>> ]
+"8011" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1582</SUB>> ]
+"8014" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetDeclaringClass())<SUB>1582</SUB>> ]
+"7979" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1582</SUB>> ]
+"8001" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1582</SUB>> ]
+"8013" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1582</SUB>> ]
+"8015" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1582</SUB>> ]
+"7980" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1582</SUB>> ]
+"7984" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1582</SUB>> ]
+"7991" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float),GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1582</SUB>> ]
+"8003" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1582</SUB>> ]
+"8017" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1582</SUB>> ]
+"7985" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1582</SUB>> ]
+"7986" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1582</SUB>> ]
+"7988" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1582</SUB>> ]
+"7971" [label = <(METHOD,GetStaticFloatField)<SUB>1581</SUB>> ]
+"8018" [label = <(METHOD_RETURN,jfloat)<SUB>1581</SUB>> ]
   "7976" -> "7980" 
   "7976" -> "7994" 
   "7994" -> "8003" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/142-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/142-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/142-cfg.dot	2023-06-07 19:35:41.487383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/142-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,28 +1,28 @@
 digraph "GetStaticDoubleField" {  
-"8025" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1587</SUB>> ]
-"8043" [label = <(soa,ScopedObjectAccess)<SUB>1587</SUB>> ]
-"8046" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1587</SUB>> ]
-"8055" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1587</SUB>> ]
-"8058" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double);,GET_STATIC_PRIMITIVE_FIELD(Double);)<SUB>1587</SUB>> ]
-"8048" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1587</SUB>> ]
-"8059" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDouble(f-&gt;GetDeclaringClass()))<SUB>1587</SUB>> ]
-"8049" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1587</SUB>> ]
-"8060" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1587</SUB>> ]
-"8063" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDeclaringClass())<SUB>1587</SUB>> ]
-"8028" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1587</SUB>> ]
-"8050" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1587</SUB>> ]
-"8062" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1587</SUB>> ]
-"8064" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1587</SUB>> ]
-"8029" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1587</SUB>> ]
-"8033" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1587</SUB>> ]
-"8040" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double),GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1587</SUB>> ]
-"8052" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1587</SUB>> ]
-"8066" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1587</SUB>> ]
-"8034" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1587</SUB>> ]
-"8035" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1587</SUB>> ]
-"8037" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1587</SUB>> ]
-"8020" [label = <(METHOD,GetStaticDoubleField)<SUB>1586</SUB>> ]
-"8067" [label = <(METHOD_RETURN,jdouble)<SUB>1586</SUB>> ]
+"8025" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1586</SUB>> ]
+"8043" [label = <(soa,ScopedObjectAccess)<SUB>1586</SUB>> ]
+"8046" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1586</SUB>> ]
+"8055" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1586</SUB>> ]
+"8058" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double);,GET_STATIC_PRIMITIVE_FIELD(Double);)<SUB>1586</SUB>> ]
+"8048" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1586</SUB>> ]
+"8059" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDouble(f-&gt;GetDeclaringClass()))<SUB>1586</SUB>> ]
+"8049" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1586</SUB>> ]
+"8060" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1586</SUB>> ]
+"8063" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDeclaringClass())<SUB>1586</SUB>> ]
+"8028" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1586</SUB>> ]
+"8050" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1586</SUB>> ]
+"8062" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1586</SUB>> ]
+"8064" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1586</SUB>> ]
+"8029" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1586</SUB>> ]
+"8033" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1586</SUB>> ]
+"8040" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double),GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1586</SUB>> ]
+"8052" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1586</SUB>> ]
+"8066" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1586</SUB>> ]
+"8034" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1586</SUB>> ]
+"8035" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1586</SUB>> ]
+"8037" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1586</SUB>> ]
+"8020" [label = <(METHOD,GetStaticDoubleField)<SUB>1585</SUB>> ]
+"8067" [label = <(METHOD_RETURN,jdouble)<SUB>1585</SUB>> ]
   "8025" -> "8029" 
   "8025" -> "8043" 
   "8043" -> "8052" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/143-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/143-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/143-cfg.dot	2023-06-07 19:35:41.487383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/143-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,48 +1,48 @@
 digraph "SetBooleanField" {  
-"8075" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1591</SUB>> ]
-"8107" [label = <(soa,ScopedObjectAccess)<SUB>1591</SUB>> ]
-"8110" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1591</SUB>> ]
-"8119" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v)))<SUB>1591</SUB>> ]
-"8127" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1591</SUB>> ]
-"8144" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (o, v))<SUB>1591</SUB>> ]
-"8093" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1591</SUB>> ]
-"8112" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1591</SUB>> ]
-"8122" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v))<SUB>1591</SUB>> ]
-"8128" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1591</SUB>> ]
-"8135" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1591</SUB>> ]
-"8145" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1591</SUB>> ]
-"8150" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1591</SUB>> ]
-"8094" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1591</SUB>> ]
-"8098" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1591</SUB>> ]
-"8105" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1591</SUB>> ]
-"8113" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1591</SUB>> ]
-"8123" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1591</SUB>> ]
-"8129" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1591</SUB>> ]
-"8136" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1591</SUB>> ]
-"8146" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1591</SUB>> ]
-"8151" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1591</SUB>> ]
-"8079" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1591</SUB>> ]
-"8099" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1591</SUB>> ]
-"8114" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1591</SUB>> ]
-"8125" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;)<SUB>1591</SUB>> ]
-"8131" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1591</SUB>> ]
-"8137" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1591</SUB>> ]
-"8140" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1591</SUB>> ]
-"8148" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1591</SUB>> ]
-"8080" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1591</SUB>> ]
-"8084" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1591</SUB>> ]
-"8091" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1591</SUB>> ]
-"8100" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1591</SUB>> ]
-"8102" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1591</SUB>> ]
-"8116" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1591</SUB>> ]
-"8133" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1591</SUB>> ]
-"8139" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1591</SUB>> ]
-"8142" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1591</SUB>> ]
-"8085" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1591</SUB>> ]
-"8086" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1591</SUB>> ]
-"8088" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1591</SUB>> ]
-"8069" [label = <(METHOD,SetBooleanField)<SUB>1590</SUB>> ]
-"8154" [label = <(METHOD_RETURN,void)<SUB>1590</SUB>> ]
+"8075" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1590</SUB>> ]
+"8107" [label = <(soa,ScopedObjectAccess)<SUB>1590</SUB>> ]
+"8110" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1590</SUB>> ]
+"8119" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v)))<SUB>1590</SUB>> ]
+"8127" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1590</SUB>> ]
+"8144" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (o, v))<SUB>1590</SUB>> ]
+"8093" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1590</SUB>> ]
+"8112" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1590</SUB>> ]
+"8122" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v))<SUB>1590</SUB>> ]
+"8128" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1590</SUB>> ]
+"8135" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1590</SUB>> ]
+"8145" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1590</SUB>> ]
+"8150" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1590</SUB>> ]
+"8094" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1590</SUB>> ]
+"8098" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1590</SUB>> ]
+"8105" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1590</SUB>> ]
+"8113" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1590</SUB>> ]
+"8123" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1590</SUB>> ]
+"8129" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1590</SUB>> ]
+"8136" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1590</SUB>> ]
+"8146" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1590</SUB>> ]
+"8151" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1590</SUB>> ]
+"8079" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1590</SUB>> ]
+"8099" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1590</SUB>> ]
+"8114" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1590</SUB>> ]
+"8125" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;)<SUB>1590</SUB>> ]
+"8131" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1590</SUB>> ]
+"8137" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1590</SUB>> ]
+"8140" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1590</SUB>> ]
+"8148" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1590</SUB>> ]
+"8080" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1590</SUB>> ]
+"8084" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1590</SUB>> ]
+"8091" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1590</SUB>> ]
+"8100" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1590</SUB>> ]
+"8102" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1590</SUB>> ]
+"8116" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1590</SUB>> ]
+"8133" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1590</SUB>> ]
+"8139" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1590</SUB>> ]
+"8142" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1590</SUB>> ]
+"8085" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1590</SUB>> ]
+"8086" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1590</SUB>> ]
+"8088" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1590</SUB>> ]
+"8069" [label = <(METHOD,SetBooleanField)<SUB>1589</SUB>> ]
+"8154" [label = <(METHOD_RETURN,void)<SUB>1589</SUB>> ]
   "8075" -> "8080" 
   "8075" -> "8094" 
   "8107" -> "8116" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/144-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/144-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/144-cfg.dot	2023-06-07 19:35:41.487383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/144-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,48 +1,48 @@
 digraph "SetByteField" {  
-"8162" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1595</SUB>> ]
-"8194" [label = <(soa,ScopedObjectAccess)<SUB>1595</SUB>> ]
-"8197" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1595</SUB>> ]
-"8206" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v)))<SUB>1595</SUB>> ]
-"8214" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1595</SUB>> ]
-"8231" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (o, v))<SUB>1595</SUB>> ]
-"8180" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1595</SUB>> ]
-"8199" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1595</SUB>> ]
-"8209" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v))<SUB>1595</SUB>> ]
-"8215" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1595</SUB>> ]
-"8222" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1595</SUB>> ]
-"8232" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1595</SUB>> ]
-"8237" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1595</SUB>> ]
-"8181" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1595</SUB>> ]
-"8185" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1595</SUB>> ]
-"8192" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1595</SUB>> ]
-"8200" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1595</SUB>> ]
-"8210" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1595</SUB>> ]
-"8216" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1595</SUB>> ]
-"8223" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1595</SUB>> ]
-"8233" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1595</SUB>> ]
-"8238" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1595</SUB>> ]
-"8166" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1595</SUB>> ]
-"8186" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1595</SUB>> ]
-"8201" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1595</SUB>> ]
-"8212" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;)<SUB>1595</SUB>> ]
-"8218" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1595</SUB>> ]
-"8224" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1595</SUB>> ]
-"8227" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1595</SUB>> ]
-"8235" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1595</SUB>> ]
-"8167" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1595</SUB>> ]
-"8171" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1595</SUB>> ]
-"8178" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1595</SUB>> ]
-"8187" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1595</SUB>> ]
-"8189" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1595</SUB>> ]
-"8203" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1595</SUB>> ]
-"8220" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1595</SUB>> ]
-"8226" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1595</SUB>> ]
-"8229" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1595</SUB>> ]
-"8172" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1595</SUB>> ]
-"8173" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1595</SUB>> ]
-"8175" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1595</SUB>> ]
-"8156" [label = <(METHOD,SetByteField)<SUB>1594</SUB>> ]
-"8241" [label = <(METHOD_RETURN,void)<SUB>1594</SUB>> ]
+"8162" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1594</SUB>> ]
+"8194" [label = <(soa,ScopedObjectAccess)<SUB>1594</SUB>> ]
+"8197" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1594</SUB>> ]
+"8206" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v)))<SUB>1594</SUB>> ]
+"8214" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1594</SUB>> ]
+"8231" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (o, v))<SUB>1594</SUB>> ]
+"8180" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1594</SUB>> ]
+"8199" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1594</SUB>> ]
+"8209" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v))<SUB>1594</SUB>> ]
+"8215" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1594</SUB>> ]
+"8222" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1594</SUB>> ]
+"8232" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1594</SUB>> ]
+"8237" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1594</SUB>> ]
+"8181" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1594</SUB>> ]
+"8185" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1594</SUB>> ]
+"8192" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1594</SUB>> ]
+"8200" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1594</SUB>> ]
+"8210" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1594</SUB>> ]
+"8216" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1594</SUB>> ]
+"8223" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1594</SUB>> ]
+"8233" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1594</SUB>> ]
+"8238" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1594</SUB>> ]
+"8166" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1594</SUB>> ]
+"8186" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1594</SUB>> ]
+"8201" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1594</SUB>> ]
+"8212" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;)<SUB>1594</SUB>> ]
+"8218" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1594</SUB>> ]
+"8224" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1594</SUB>> ]
+"8227" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1594</SUB>> ]
+"8235" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1594</SUB>> ]
+"8167" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1594</SUB>> ]
+"8171" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1594</SUB>> ]
+"8178" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1594</SUB>> ]
+"8187" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1594</SUB>> ]
+"8189" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1594</SUB>> ]
+"8203" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1594</SUB>> ]
+"8220" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1594</SUB>> ]
+"8226" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1594</SUB>> ]
+"8229" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1594</SUB>> ]
+"8172" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1594</SUB>> ]
+"8173" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1594</SUB>> ]
+"8175" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1594</SUB>> ]
+"8156" [label = <(METHOD,SetByteField)<SUB>1593</SUB>> ]
+"8241" [label = <(METHOD_RETURN,void)<SUB>1593</SUB>> ]
   "8162" -> "8167" 
   "8162" -> "8181" 
   "8194" -> "8203" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/145-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/145-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/145-cfg.dot	2023-06-07 19:35:41.487383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/145-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,48 +1,48 @@
 digraph "SetCharField" {  
-"8249" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1599</SUB>> ]
-"8281" [label = <(soa,ScopedObjectAccess)<SUB>1599</SUB>> ]
-"8284" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1599</SUB>> ]
-"8293" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v)))<SUB>1599</SUB>> ]
-"8301" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1599</SUB>> ]
-"8318" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (o, v))<SUB>1599</SUB>> ]
-"8267" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1599</SUB>> ]
-"8286" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1599</SUB>> ]
-"8296" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v))<SUB>1599</SUB>> ]
-"8302" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1599</SUB>> ]
-"8309" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1599</SUB>> ]
-"8319" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1599</SUB>> ]
-"8324" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1599</SUB>> ]
-"8268" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1599</SUB>> ]
-"8272" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1599</SUB>> ]
-"8279" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1599</SUB>> ]
-"8287" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1599</SUB>> ]
-"8297" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1599</SUB>> ]
-"8303" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1599</SUB>> ]
-"8310" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1599</SUB>> ]
-"8320" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1599</SUB>> ]
-"8325" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1599</SUB>> ]
-"8253" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1599</SUB>> ]
-"8273" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1599</SUB>> ]
-"8288" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1599</SUB>> ]
-"8299" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;)<SUB>1599</SUB>> ]
-"8305" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1599</SUB>> ]
-"8311" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1599</SUB>> ]
-"8314" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1599</SUB>> ]
-"8322" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1599</SUB>> ]
-"8254" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1599</SUB>> ]
-"8258" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1599</SUB>> ]
-"8265" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1599</SUB>> ]
-"8274" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1599</SUB>> ]
-"8276" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1599</SUB>> ]
-"8290" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1599</SUB>> ]
-"8307" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1599</SUB>> ]
-"8313" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1599</SUB>> ]
-"8316" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1599</SUB>> ]
-"8259" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1599</SUB>> ]
-"8260" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1599</SUB>> ]
-"8262" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1599</SUB>> ]
-"8243" [label = <(METHOD,SetCharField)<SUB>1598</SUB>> ]
-"8328" [label = <(METHOD_RETURN,void)<SUB>1598</SUB>> ]
+"8249" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1598</SUB>> ]
+"8281" [label = <(soa,ScopedObjectAccess)<SUB>1598</SUB>> ]
+"8284" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1598</SUB>> ]
+"8293" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v)))<SUB>1598</SUB>> ]
+"8301" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1598</SUB>> ]
+"8318" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (o, v))<SUB>1598</SUB>> ]
+"8267" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1598</SUB>> ]
+"8286" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1598</SUB>> ]
+"8296" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v))<SUB>1598</SUB>> ]
+"8302" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1598</SUB>> ]
+"8309" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1598</SUB>> ]
+"8319" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1598</SUB>> ]
+"8324" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1598</SUB>> ]
+"8268" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1598</SUB>> ]
+"8272" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1598</SUB>> ]
+"8279" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1598</SUB>> ]
+"8287" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1598</SUB>> ]
+"8297" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1598</SUB>> ]
+"8303" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1598</SUB>> ]
+"8310" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1598</SUB>> ]
+"8320" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1598</SUB>> ]
+"8325" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1598</SUB>> ]
+"8253" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1598</SUB>> ]
+"8273" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1598</SUB>> ]
+"8288" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1598</SUB>> ]
+"8299" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;)<SUB>1598</SUB>> ]
+"8305" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1598</SUB>> ]
+"8311" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1598</SUB>> ]
+"8314" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1598</SUB>> ]
+"8322" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1598</SUB>> ]
+"8254" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1598</SUB>> ]
+"8258" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1598</SUB>> ]
+"8265" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1598</SUB>> ]
+"8274" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1598</SUB>> ]
+"8276" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1598</SUB>> ]
+"8290" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1598</SUB>> ]
+"8307" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1598</SUB>> ]
+"8313" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1598</SUB>> ]
+"8316" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1598</SUB>> ]
+"8259" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1598</SUB>> ]
+"8260" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1598</SUB>> ]
+"8262" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1598</SUB>> ]
+"8243" [label = <(METHOD,SetCharField)<SUB>1597</SUB>> ]
+"8328" [label = <(METHOD_RETURN,void)<SUB>1597</SUB>> ]
   "8249" -> "8254" 
   "8249" -> "8268" 
   "8281" -> "8290" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/146-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/146-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/146-cfg.dot	2023-06-07 19:35:41.487383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/146-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,48 +1,48 @@
 digraph "SetFloatField" {  
-"8336" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1603</SUB>> ]
-"8368" [label = <(soa,ScopedObjectAccess)<SUB>1603</SUB>> ]
-"8371" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1603</SUB>> ]
-"8380" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v)))<SUB>1603</SUB>> ]
-"8388" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1603</SUB>> ]
-"8405" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (o, v))<SUB>1603</SUB>> ]
-"8354" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1603</SUB>> ]
-"8373" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1603</SUB>> ]
-"8383" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v))<SUB>1603</SUB>> ]
-"8389" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1603</SUB>> ]
-"8396" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1603</SUB>> ]
-"8406" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1603</SUB>> ]
-"8411" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1603</SUB>> ]
-"8355" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1603</SUB>> ]
-"8359" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1603</SUB>> ]
-"8366" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1603</SUB>> ]
-"8374" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1603</SUB>> ]
-"8384" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1603</SUB>> ]
-"8390" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1603</SUB>> ]
-"8397" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1603</SUB>> ]
-"8407" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1603</SUB>> ]
-"8412" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1603</SUB>> ]
-"8340" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1603</SUB>> ]
-"8360" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1603</SUB>> ]
-"8375" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1603</SUB>> ]
-"8386" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;)<SUB>1603</SUB>> ]
-"8392" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1603</SUB>> ]
-"8398" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1603</SUB>> ]
-"8401" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1603</SUB>> ]
-"8409" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1603</SUB>> ]
-"8341" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1603</SUB>> ]
-"8345" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1603</SUB>> ]
-"8352" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1603</SUB>> ]
-"8361" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1603</SUB>> ]
-"8363" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1603</SUB>> ]
-"8377" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1603</SUB>> ]
-"8394" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1603</SUB>> ]
-"8400" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1603</SUB>> ]
-"8403" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1603</SUB>> ]
-"8346" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1603</SUB>> ]
-"8347" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1603</SUB>> ]
-"8349" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1603</SUB>> ]
-"8330" [label = <(METHOD,SetFloatField)<SUB>1602</SUB>> ]
-"8415" [label = <(METHOD_RETURN,void)<SUB>1602</SUB>> ]
+"8336" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1602</SUB>> ]
+"8368" [label = <(soa,ScopedObjectAccess)<SUB>1602</SUB>> ]
+"8371" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1602</SUB>> ]
+"8380" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v)))<SUB>1602</SUB>> ]
+"8388" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1602</SUB>> ]
+"8405" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (o, v))<SUB>1602</SUB>> ]
+"8354" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1602</SUB>> ]
+"8373" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1602</SUB>> ]
+"8383" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v))<SUB>1602</SUB>> ]
+"8389" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1602</SUB>> ]
+"8396" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1602</SUB>> ]
+"8406" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1602</SUB>> ]
+"8411" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1602</SUB>> ]
+"8355" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1602</SUB>> ]
+"8359" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1602</SUB>> ]
+"8366" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1602</SUB>> ]
+"8374" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1602</SUB>> ]
+"8384" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1602</SUB>> ]
+"8390" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1602</SUB>> ]
+"8397" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1602</SUB>> ]
+"8407" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1602</SUB>> ]
+"8412" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1602</SUB>> ]
+"8340" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1602</SUB>> ]
+"8360" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1602</SUB>> ]
+"8375" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1602</SUB>> ]
+"8386" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;)<SUB>1602</SUB>> ]
+"8392" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1602</SUB>> ]
+"8398" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1602</SUB>> ]
+"8401" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1602</SUB>> ]
+"8409" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1602</SUB>> ]
+"8341" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1602</SUB>> ]
+"8345" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1602</SUB>> ]
+"8352" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1602</SUB>> ]
+"8361" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1602</SUB>> ]
+"8363" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1602</SUB>> ]
+"8377" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1602</SUB>> ]
+"8394" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1602</SUB>> ]
+"8400" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1602</SUB>> ]
+"8403" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1602</SUB>> ]
+"8346" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1602</SUB>> ]
+"8347" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1602</SUB>> ]
+"8349" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1602</SUB>> ]
+"8330" [label = <(METHOD,SetFloatField)<SUB>1601</SUB>> ]
+"8415" [label = <(METHOD_RETURN,void)<SUB>1601</SUB>> ]
   "8336" -> "8341" 
   "8336" -> "8355" 
   "8368" -> "8377" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/147-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/147-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/147-cfg.dot	2023-06-07 19:35:41.487383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/147-cfg.dot	2023-06-07 19:35:47.917382792 +0330
@@ -1,48 +1,48 @@
 digraph "SetDoubleField" {  
-"8423" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1607</SUB>> ]
-"8455" [label = <(soa,ScopedObjectAccess)<SUB>1607</SUB>> ]
-"8458" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1607</SUB>> ]
-"8467" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v)))<SUB>1607</SUB>> ]
-"8475" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1607</SUB>> ]
-"8492" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (o, v))<SUB>1607</SUB>> ]
-"8441" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1607</SUB>> ]
-"8460" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1607</SUB>> ]
-"8470" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v))<SUB>1607</SUB>> ]
-"8476" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1607</SUB>> ]
-"8483" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1607</SUB>> ]
-"8493" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1607</SUB>> ]
-"8498" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1607</SUB>> ]
-"8442" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1607</SUB>> ]
-"8446" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1607</SUB>> ]
-"8453" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1607</SUB>> ]
-"8461" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1607</SUB>> ]
-"8471" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1607</SUB>> ]
-"8477" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1607</SUB>> ]
-"8484" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1607</SUB>> ]
-"8494" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1607</SUB>> ]
-"8499" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1607</SUB>> ]
-"8427" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1607</SUB>> ]
-"8447" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1607</SUB>> ]
-"8462" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1607</SUB>> ]
-"8473" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;)<SUB>1607</SUB>> ]
-"8479" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1607</SUB>> ]
-"8485" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1607</SUB>> ]
-"8488" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1607</SUB>> ]
-"8496" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1607</SUB>> ]
-"8428" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1607</SUB>> ]
-"8432" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1607</SUB>> ]
-"8439" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1607</SUB>> ]
-"8448" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1607</SUB>> ]
-"8450" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1607</SUB>> ]
-"8464" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1607</SUB>> ]
-"8481" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1607</SUB>> ]
-"8487" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1607</SUB>> ]
-"8490" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1607</SUB>> ]
-"8433" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1607</SUB>> ]
-"8434" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1607</SUB>> ]
-"8436" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1607</SUB>> ]
-"8417" [label = <(METHOD,SetDoubleField)<SUB>1606</SUB>> ]
-"8502" [label = <(METHOD_RETURN,void)<SUB>1606</SUB>> ]
+"8423" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1606</SUB>> ]
+"8455" [label = <(soa,ScopedObjectAccess)<SUB>1606</SUB>> ]
+"8458" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1606</SUB>> ]
+"8467" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v)))<SUB>1606</SUB>> ]
+"8475" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1606</SUB>> ]
+"8492" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (o, v))<SUB>1606</SUB>> ]
+"8441" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1606</SUB>> ]
+"8460" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1606</SUB>> ]
+"8470" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v))<SUB>1606</SUB>> ]
+"8476" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1606</SUB>> ]
+"8483" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1606</SUB>> ]
+"8493" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1606</SUB>> ]
+"8498" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1606</SUB>> ]
+"8442" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1606</SUB>> ]
+"8446" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1606</SUB>> ]
+"8453" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1606</SUB>> ]
+"8461" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1606</SUB>> ]
+"8471" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1606</SUB>> ]
+"8477" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1606</SUB>> ]
+"8484" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1606</SUB>> ]
+"8494" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1606</SUB>> ]
+"8499" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1606</SUB>> ]
+"8427" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1606</SUB>> ]
+"8447" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1606</SUB>> ]
+"8462" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1606</SUB>> ]
+"8473" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;)<SUB>1606</SUB>> ]
+"8479" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1606</SUB>> ]
+"8485" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1606</SUB>> ]
+"8488" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1606</SUB>> ]
+"8496" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1606</SUB>> ]
+"8428" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1606</SUB>> ]
+"8432" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1606</SUB>> ]
+"8439" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1606</SUB>> ]
+"8448" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1606</SUB>> ]
+"8450" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1606</SUB>> ]
+"8464" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1606</SUB>> ]
+"8481" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1606</SUB>> ]
+"8487" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1606</SUB>> ]
+"8490" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1606</SUB>> ]
+"8433" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1606</SUB>> ]
+"8434" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1606</SUB>> ]
+"8436" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1606</SUB>> ]
+"8417" [label = <(METHOD,SetDoubleField)<SUB>1605</SUB>> ]
+"8502" [label = <(METHOD_RETURN,void)<SUB>1605</SUB>> ]
   "8423" -> "8428" 
   "8423" -> "8442" 
   "8455" -> "8464" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/148-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/148-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/148-cfg.dot	2023-06-07 19:35:41.487383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/148-cfg.dot	2023-06-07 19:35:47.927382793 +0330
@@ -1,48 +1,48 @@
 digraph "SetIntField" {  
-"8510" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1611</SUB>> ]
-"8542" [label = <(soa,ScopedObjectAccess)<SUB>1611</SUB>> ]
-"8545" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1611</SUB>> ]
-"8554" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v)))<SUB>1611</SUB>> ]
-"8562" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1611</SUB>> ]
-"8579" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (o, v))<SUB>1611</SUB>> ]
-"8528" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1611</SUB>> ]
-"8547" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1611</SUB>> ]
-"8557" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v))<SUB>1611</SUB>> ]
-"8563" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1611</SUB>> ]
-"8570" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1611</SUB>> ]
-"8580" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1611</SUB>> ]
-"8585" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1611</SUB>> ]
-"8529" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1611</SUB>> ]
-"8533" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1611</SUB>> ]
-"8540" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1611</SUB>> ]
-"8548" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1611</SUB>> ]
-"8558" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1611</SUB>> ]
-"8564" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1611</SUB>> ]
-"8571" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1611</SUB>> ]
-"8581" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1611</SUB>> ]
-"8586" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1611</SUB>> ]
-"8514" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1611</SUB>> ]
-"8534" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1611</SUB>> ]
-"8549" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1611</SUB>> ]
-"8560" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;)<SUB>1611</SUB>> ]
-"8566" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1611</SUB>> ]
-"8572" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1611</SUB>> ]
-"8575" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1611</SUB>> ]
-"8583" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1611</SUB>> ]
-"8515" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1611</SUB>> ]
-"8519" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1611</SUB>> ]
-"8526" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1611</SUB>> ]
-"8535" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1611</SUB>> ]
-"8537" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1611</SUB>> ]
-"8551" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1611</SUB>> ]
-"8568" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1611</SUB>> ]
-"8574" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1611</SUB>> ]
-"8577" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1611</SUB>> ]
-"8520" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1611</SUB>> ]
-"8521" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1611</SUB>> ]
-"8523" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1611</SUB>> ]
-"8504" [label = <(METHOD,SetIntField)<SUB>1610</SUB>> ]
-"8589" [label = <(METHOD_RETURN,void)<SUB>1610</SUB>> ]
+"8510" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1610</SUB>> ]
+"8542" [label = <(soa,ScopedObjectAccess)<SUB>1610</SUB>> ]
+"8545" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1610</SUB>> ]
+"8554" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v)))<SUB>1610</SUB>> ]
+"8562" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1610</SUB>> ]
+"8579" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (o, v))<SUB>1610</SUB>> ]
+"8528" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1610</SUB>> ]
+"8547" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1610</SUB>> ]
+"8557" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v))<SUB>1610</SUB>> ]
+"8563" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1610</SUB>> ]
+"8570" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1610</SUB>> ]
+"8580" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1610</SUB>> ]
+"8585" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1610</SUB>> ]
+"8529" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1610</SUB>> ]
+"8533" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1610</SUB>> ]
+"8540" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1610</SUB>> ]
+"8548" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1610</SUB>> ]
+"8558" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1610</SUB>> ]
+"8564" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1610</SUB>> ]
+"8571" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1610</SUB>> ]
+"8581" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1610</SUB>> ]
+"8586" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1610</SUB>> ]
+"8514" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1610</SUB>> ]
+"8534" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1610</SUB>> ]
+"8549" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1610</SUB>> ]
+"8560" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;)<SUB>1610</SUB>> ]
+"8566" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1610</SUB>> ]
+"8572" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1610</SUB>> ]
+"8575" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1610</SUB>> ]
+"8583" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1610</SUB>> ]
+"8515" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1610</SUB>> ]
+"8519" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1610</SUB>> ]
+"8526" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1610</SUB>> ]
+"8535" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1610</SUB>> ]
+"8537" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1610</SUB>> ]
+"8551" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1610</SUB>> ]
+"8568" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1610</SUB>> ]
+"8574" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1610</SUB>> ]
+"8577" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1610</SUB>> ]
+"8520" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1610</SUB>> ]
+"8521" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1610</SUB>> ]
+"8523" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1610</SUB>> ]
+"8504" [label = <(METHOD,SetIntField)<SUB>1609</SUB>> ]
+"8589" [label = <(METHOD_RETURN,void)<SUB>1609</SUB>> ]
   "8510" -> "8515" 
   "8510" -> "8529" 
   "8542" -> "8551" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/149-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/149-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/149-cfg.dot	2023-06-07 19:35:41.487383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/149-cfg.dot	2023-06-07 19:35:47.927382793 +0330
@@ -1,48 +1,48 @@
 digraph "SetLongField" {  
-"8597" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1615</SUB>> ]
-"8629" [label = <(soa,ScopedObjectAccess)<SUB>1615</SUB>> ]
-"8632" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1615</SUB>> ]
-"8641" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v)))<SUB>1615</SUB>> ]
-"8649" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1615</SUB>> ]
-"8666" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (o, v))<SUB>1615</SUB>> ]
-"8615" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1615</SUB>> ]
-"8634" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1615</SUB>> ]
-"8644" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v))<SUB>1615</SUB>> ]
-"8650" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1615</SUB>> ]
-"8657" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1615</SUB>> ]
-"8667" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1615</SUB>> ]
-"8672" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1615</SUB>> ]
-"8616" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1615</SUB>> ]
-"8620" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1615</SUB>> ]
-"8627" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1615</SUB>> ]
-"8635" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1615</SUB>> ]
-"8645" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1615</SUB>> ]
-"8651" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1615</SUB>> ]
-"8658" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1615</SUB>> ]
-"8668" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1615</SUB>> ]
-"8673" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1615</SUB>> ]
-"8601" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1615</SUB>> ]
-"8621" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1615</SUB>> ]
-"8636" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1615</SUB>> ]
-"8647" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;)<SUB>1615</SUB>> ]
-"8653" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1615</SUB>> ]
-"8659" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1615</SUB>> ]
-"8662" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1615</SUB>> ]
-"8670" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1615</SUB>> ]
-"8602" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1615</SUB>> ]
-"8606" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1615</SUB>> ]
-"8613" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1615</SUB>> ]
-"8622" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1615</SUB>> ]
-"8624" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1615</SUB>> ]
-"8638" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1615</SUB>> ]
-"8655" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1615</SUB>> ]
-"8661" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1615</SUB>> ]
-"8664" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1615</SUB>> ]
-"8607" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1615</SUB>> ]
-"8608" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1615</SUB>> ]
-"8610" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1615</SUB>> ]
-"8591" [label = <(METHOD,SetLongField)<SUB>1614</SUB>> ]
-"8676" [label = <(METHOD_RETURN,void)<SUB>1614</SUB>> ]
+"8597" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1614</SUB>> ]
+"8629" [label = <(soa,ScopedObjectAccess)<SUB>1614</SUB>> ]
+"8632" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1614</SUB>> ]
+"8641" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v)))<SUB>1614</SUB>> ]
+"8649" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1614</SUB>> ]
+"8666" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (o, v))<SUB>1614</SUB>> ]
+"8615" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1614</SUB>> ]
+"8634" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1614</SUB>> ]
+"8644" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v))<SUB>1614</SUB>> ]
+"8650" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1614</SUB>> ]
+"8657" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1614</SUB>> ]
+"8667" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1614</SUB>> ]
+"8672" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1614</SUB>> ]
+"8616" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1614</SUB>> ]
+"8620" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1614</SUB>> ]
+"8627" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1614</SUB>> ]
+"8635" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1614</SUB>> ]
+"8645" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1614</SUB>> ]
+"8651" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1614</SUB>> ]
+"8658" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1614</SUB>> ]
+"8668" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1614</SUB>> ]
+"8673" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1614</SUB>> ]
+"8601" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1614</SUB>> ]
+"8621" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1614</SUB>> ]
+"8636" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1614</SUB>> ]
+"8647" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;)<SUB>1614</SUB>> ]
+"8653" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1614</SUB>> ]
+"8659" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1614</SUB>> ]
+"8662" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1614</SUB>> ]
+"8670" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1614</SUB>> ]
+"8602" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1614</SUB>> ]
+"8606" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1614</SUB>> ]
+"8613" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1614</SUB>> ]
+"8622" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1614</SUB>> ]
+"8624" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1614</SUB>> ]
+"8638" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1614</SUB>> ]
+"8655" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1614</SUB>> ]
+"8661" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1614</SUB>> ]
+"8664" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1614</SUB>> ]
+"8607" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1614</SUB>> ]
+"8608" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1614</SUB>> ]
+"8610" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1614</SUB>> ]
+"8591" [label = <(METHOD,SetLongField)<SUB>1613</SUB>> ]
+"8676" [label = <(METHOD_RETURN,void)<SUB>1613</SUB>> ]
   "8597" -> "8602" 
   "8597" -> "8616" 
   "8629" -> "8638" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/15-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/15-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/15-cfg.dot	2023-06-07 19:35:41.347383235 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/15-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "GetClassLoader" {  
-"373" [label = <(METHOD,GetClassLoader)<SUB>307</SUB>> ]
-"376" [label = <(METHOD_RETURN,ANY)<SUB>307</SUB>> ]
+"373" [label = <(METHOD,GetClassLoader)<SUB>306</SUB>> ]
+"376" [label = <(METHOD_RETURN,ANY)<SUB>306</SUB>> ]
   "373" -> "376" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/150-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/150-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/150-cfg.dot	2023-06-07 19:35:41.487383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/150-cfg.dot	2023-06-07 19:35:47.927382793 +0330
@@ -1,48 +1,48 @@
 digraph "SetShortField" {  
-"8684" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1619</SUB>> ]
-"8716" [label = <(soa,ScopedObjectAccess)<SUB>1619</SUB>> ]
-"8719" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1619</SUB>> ]
-"8728" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v)))<SUB>1619</SUB>> ]
-"8736" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1619</SUB>> ]
-"8753" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (o, v))<SUB>1619</SUB>> ]
-"8702" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1619</SUB>> ]
-"8721" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1619</SUB>> ]
-"8731" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v))<SUB>1619</SUB>> ]
-"8737" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1619</SUB>> ]
-"8744" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1619</SUB>> ]
-"8754" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1619</SUB>> ]
-"8759" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1619</SUB>> ]
-"8703" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1619</SUB>> ]
-"8707" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1619</SUB>> ]
-"8714" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1619</SUB>> ]
-"8722" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1619</SUB>> ]
-"8732" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1619</SUB>> ]
-"8738" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1619</SUB>> ]
-"8745" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1619</SUB>> ]
-"8755" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1619</SUB>> ]
-"8760" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1619</SUB>> ]
-"8688" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1619</SUB>> ]
-"8708" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1619</SUB>> ]
-"8723" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1619</SUB>> ]
-"8734" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;)<SUB>1619</SUB>> ]
-"8740" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1619</SUB>> ]
-"8746" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1619</SUB>> ]
-"8749" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1619</SUB>> ]
-"8757" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1619</SUB>> ]
-"8689" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1619</SUB>> ]
-"8693" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1619</SUB>> ]
-"8700" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1619</SUB>> ]
-"8709" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1619</SUB>> ]
-"8711" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1619</SUB>> ]
-"8725" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1619</SUB>> ]
-"8742" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1619</SUB>> ]
-"8748" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1619</SUB>> ]
-"8751" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1619</SUB>> ]
-"8694" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1619</SUB>> ]
-"8695" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1619</SUB>> ]
-"8697" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1619</SUB>> ]
-"8678" [label = <(METHOD,SetShortField)<SUB>1618</SUB>> ]
-"8763" [label = <(METHOD_RETURN,void)<SUB>1618</SUB>> ]
+"8684" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1618</SUB>> ]
+"8716" [label = <(soa,ScopedObjectAccess)<SUB>1618</SUB>> ]
+"8719" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1618</SUB>> ]
+"8728" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v)))<SUB>1618</SUB>> ]
+"8736" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1618</SUB>> ]
+"8753" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (o, v))<SUB>1618</SUB>> ]
+"8702" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1618</SUB>> ]
+"8721" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1618</SUB>> ]
+"8731" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v))<SUB>1618</SUB>> ]
+"8737" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1618</SUB>> ]
+"8744" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1618</SUB>> ]
+"8754" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1618</SUB>> ]
+"8759" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1618</SUB>> ]
+"8703" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1618</SUB>> ]
+"8707" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1618</SUB>> ]
+"8714" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1618</SUB>> ]
+"8722" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1618</SUB>> ]
+"8732" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1618</SUB>> ]
+"8738" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1618</SUB>> ]
+"8745" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1618</SUB>> ]
+"8755" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1618</SUB>> ]
+"8760" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1618</SUB>> ]
+"8688" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1618</SUB>> ]
+"8708" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1618</SUB>> ]
+"8723" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1618</SUB>> ]
+"8734" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;)<SUB>1618</SUB>> ]
+"8740" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1618</SUB>> ]
+"8746" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1618</SUB>> ]
+"8749" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1618</SUB>> ]
+"8757" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1618</SUB>> ]
+"8689" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1618</SUB>> ]
+"8693" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1618</SUB>> ]
+"8700" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1618</SUB>> ]
+"8709" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1618</SUB>> ]
+"8711" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1618</SUB>> ]
+"8725" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1618</SUB>> ]
+"8742" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1618</SUB>> ]
+"8748" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1618</SUB>> ]
+"8751" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1618</SUB>> ]
+"8694" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1618</SUB>> ]
+"8695" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1618</SUB>> ]
+"8697" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1618</SUB>> ]
+"8678" [label = <(METHOD,SetShortField)<SUB>1617</SUB>> ]
+"8763" [label = <(METHOD_RETURN,void)<SUB>1617</SUB>> ]
   "8684" -> "8689" 
   "8684" -> "8703" 
   "8716" -> "8725" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/151-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/151-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/151-cfg.dot	2023-06-07 19:35:41.487383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/151-cfg.dot	2023-06-07 19:35:47.927382793 +0330
@@ -1,33 +1,33 @@
 digraph "SetStaticBooleanField" {  
-"8771" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1623</SUB>> ]
-"8788" [label = <(soa,ScopedObjectAccess)<SUB>1623</SUB>> ]
-"8791" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1623</SUB>> ]
-"8800" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v)))<SUB>1623</SUB>> ]
-"8808" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1623</SUB>> ]
-"8793" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1623</SUB>> ]
-"8803" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v))<SUB>1623</SUB>> ]
-"8809" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1623</SUB>> ]
-"8814" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1623</SUB>> ]
-"8794" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1623</SUB>> ]
-"8804" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1623</SUB>> ]
-"8810" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1623</SUB>> ]
-"8815" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1623</SUB>> ]
-"8774" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1623</SUB>> ]
-"8795" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1623</SUB>> ]
-"8806" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;)<SUB>1623</SUB>> ]
-"8812" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1623</SUB>> ]
-"8816" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),f-&gt;GetDeclaringClass())<SUB>1623</SUB>> ]
-"8775" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1623</SUB>> ]
-"8779" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1623</SUB>> ]
-"8786" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Boolean, v),SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1623</SUB>> ]
-"8797" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1623</SUB>> ]
-"8817" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1623</SUB>> ]
-"8780" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1623</SUB>> ]
-"8819" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1623</SUB>> ]
-"8781" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1623</SUB>> ]
-"8783" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1623</SUB>> ]
-"8765" [label = <(METHOD,SetStaticBooleanField)<SUB>1622</SUB>> ]
-"8821" [label = <(METHOD_RETURN,void)<SUB>1622</SUB>> ]
+"8771" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1622</SUB>> ]
+"8788" [label = <(soa,ScopedObjectAccess)<SUB>1622</SUB>> ]
+"8791" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1622</SUB>> ]
+"8800" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v)))<SUB>1622</SUB>> ]
+"8808" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1622</SUB>> ]
+"8793" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1622</SUB>> ]
+"8803" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v))<SUB>1622</SUB>> ]
+"8809" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1622</SUB>> ]
+"8814" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1622</SUB>> ]
+"8794" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1622</SUB>> ]
+"8804" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1622</SUB>> ]
+"8810" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1622</SUB>> ]
+"8815" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1622</SUB>> ]
+"8774" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1622</SUB>> ]
+"8795" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1622</SUB>> ]
+"8806" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;)<SUB>1622</SUB>> ]
+"8812" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1622</SUB>> ]
+"8816" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),f-&gt;GetDeclaringClass())<SUB>1622</SUB>> ]
+"8775" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1622</SUB>> ]
+"8779" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1622</SUB>> ]
+"8786" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Boolean, v),SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1622</SUB>> ]
+"8797" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1622</SUB>> ]
+"8817" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1622</SUB>> ]
+"8780" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1622</SUB>> ]
+"8819" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1622</SUB>> ]
+"8781" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1622</SUB>> ]
+"8783" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1622</SUB>> ]
+"8765" [label = <(METHOD,SetStaticBooleanField)<SUB>1621</SUB>> ]
+"8821" [label = <(METHOD_RETURN,void)<SUB>1621</SUB>> ]
   "8771" -> "8775" 
   "8771" -> "8788" 
   "8788" -> "8797" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/152-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/152-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/152-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/152-cfg.dot	2023-06-07 19:35:47.927382793 +0330
@@ -1,33 +1,33 @@
 digraph "SetStaticByteField" {  
-"8829" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1627</SUB>> ]
-"8846" [label = <(soa,ScopedObjectAccess)<SUB>1627</SUB>> ]
-"8849" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1627</SUB>> ]
-"8858" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v)))<SUB>1627</SUB>> ]
-"8866" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1627</SUB>> ]
-"8851" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1627</SUB>> ]
-"8861" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v))<SUB>1627</SUB>> ]
-"8867" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1627</SUB>> ]
-"8872" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1627</SUB>> ]
-"8852" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1627</SUB>> ]
-"8862" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1627</SUB>> ]
-"8868" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1627</SUB>> ]
-"8873" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1627</SUB>> ]
-"8832" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1627</SUB>> ]
-"8853" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1627</SUB>> ]
-"8864" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;)<SUB>1627</SUB>> ]
-"8870" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1627</SUB>> ]
-"8874" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),f-&gt;GetDeclaringClass())<SUB>1627</SUB>> ]
-"8833" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1627</SUB>> ]
-"8837" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1627</SUB>> ]
-"8844" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Byte, v),SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1627</SUB>> ]
-"8855" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1627</SUB>> ]
-"8875" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1627</SUB>> ]
-"8838" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1627</SUB>> ]
-"8877" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1627</SUB>> ]
-"8839" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1627</SUB>> ]
-"8841" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1627</SUB>> ]
-"8823" [label = <(METHOD,SetStaticByteField)<SUB>1626</SUB>> ]
-"8879" [label = <(METHOD_RETURN,void)<SUB>1626</SUB>> ]
+"8829" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1626</SUB>> ]
+"8846" [label = <(soa,ScopedObjectAccess)<SUB>1626</SUB>> ]
+"8849" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1626</SUB>> ]
+"8858" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v)))<SUB>1626</SUB>> ]
+"8866" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1626</SUB>> ]
+"8851" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1626</SUB>> ]
+"8861" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v))<SUB>1626</SUB>> ]
+"8867" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1626</SUB>> ]
+"8872" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1626</SUB>> ]
+"8852" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1626</SUB>> ]
+"8862" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1626</SUB>> ]
+"8868" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1626</SUB>> ]
+"8873" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1626</SUB>> ]
+"8832" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1626</SUB>> ]
+"8853" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1626</SUB>> ]
+"8864" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;)<SUB>1626</SUB>> ]
+"8870" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1626</SUB>> ]
+"8874" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),f-&gt;GetDeclaringClass())<SUB>1626</SUB>> ]
+"8833" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1626</SUB>> ]
+"8837" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1626</SUB>> ]
+"8844" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Byte, v),SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1626</SUB>> ]
+"8855" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1626</SUB>> ]
+"8875" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1626</SUB>> ]
+"8838" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1626</SUB>> ]
+"8877" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1626</SUB>> ]
+"8839" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1626</SUB>> ]
+"8841" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1626</SUB>> ]
+"8823" [label = <(METHOD,SetStaticByteField)<SUB>1625</SUB>> ]
+"8879" [label = <(METHOD_RETURN,void)<SUB>1625</SUB>> ]
   "8829" -> "8833" 
   "8829" -> "8846" 
   "8846" -> "8855" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/153-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/153-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/153-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/153-cfg.dot	2023-06-07 19:35:47.927382793 +0330
@@ -1,33 +1,33 @@
 digraph "SetStaticCharField" {  
-"8887" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1631</SUB>> ]
-"8904" [label = <(soa,ScopedObjectAccess)<SUB>1631</SUB>> ]
-"8907" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1631</SUB>> ]
-"8916" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v)))<SUB>1631</SUB>> ]
-"8924" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1631</SUB>> ]
-"8909" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1631</SUB>> ]
-"8919" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v))<SUB>1631</SUB>> ]
-"8925" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1631</SUB>> ]
-"8930" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1631</SUB>> ]
-"8910" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1631</SUB>> ]
-"8920" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1631</SUB>> ]
-"8926" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1631</SUB>> ]
-"8931" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1631</SUB>> ]
-"8890" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1631</SUB>> ]
-"8911" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1631</SUB>> ]
-"8922" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;)<SUB>1631</SUB>> ]
-"8928" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1631</SUB>> ]
-"8932" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),f-&gt;GetDeclaringClass())<SUB>1631</SUB>> ]
-"8891" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1631</SUB>> ]
-"8895" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1631</SUB>> ]
-"8902" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Char, v),SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1631</SUB>> ]
-"8913" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1631</SUB>> ]
-"8933" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1631</SUB>> ]
-"8896" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1631</SUB>> ]
-"8935" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1631</SUB>> ]
-"8897" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1631</SUB>> ]
-"8899" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1631</SUB>> ]
-"8881" [label = <(METHOD,SetStaticCharField)<SUB>1630</SUB>> ]
-"8937" [label = <(METHOD_RETURN,void)<SUB>1630</SUB>> ]
+"8887" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1630</SUB>> ]
+"8904" [label = <(soa,ScopedObjectAccess)<SUB>1630</SUB>> ]
+"8907" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1630</SUB>> ]
+"8916" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v)))<SUB>1630</SUB>> ]
+"8924" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1630</SUB>> ]
+"8909" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1630</SUB>> ]
+"8919" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v))<SUB>1630</SUB>> ]
+"8925" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1630</SUB>> ]
+"8930" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1630</SUB>> ]
+"8910" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1630</SUB>> ]
+"8920" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1630</SUB>> ]
+"8926" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1630</SUB>> ]
+"8931" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1630</SUB>> ]
+"8890" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1630</SUB>> ]
+"8911" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1630</SUB>> ]
+"8922" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;)<SUB>1630</SUB>> ]
+"8928" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1630</SUB>> ]
+"8932" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),f-&gt;GetDeclaringClass())<SUB>1630</SUB>> ]
+"8891" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1630</SUB>> ]
+"8895" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1630</SUB>> ]
+"8902" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Char, v),SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1630</SUB>> ]
+"8913" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1630</SUB>> ]
+"8933" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1630</SUB>> ]
+"8896" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1630</SUB>> ]
+"8935" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1630</SUB>> ]
+"8897" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1630</SUB>> ]
+"8899" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1630</SUB>> ]
+"8881" [label = <(METHOD,SetStaticCharField)<SUB>1629</SUB>> ]
+"8937" [label = <(METHOD_RETURN,void)<SUB>1629</SUB>> ]
   "8887" -> "8891" 
   "8887" -> "8904" 
   "8904" -> "8913" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/154-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/154-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/154-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/154-cfg.dot	2023-06-07 19:35:47.927382793 +0330
@@ -1,33 +1,33 @@
 digraph "SetStaticFloatField" {  
-"8945" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1635</SUB>> ]
-"8962" [label = <(soa,ScopedObjectAccess)<SUB>1635</SUB>> ]
-"8965" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1635</SUB>> ]
-"8974" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v)))<SUB>1635</SUB>> ]
-"8982" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1635</SUB>> ]
-"8967" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1635</SUB>> ]
-"8977" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v))<SUB>1635</SUB>> ]
-"8983" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1635</SUB>> ]
-"8988" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1635</SUB>> ]
-"8968" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1635</SUB>> ]
-"8978" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1635</SUB>> ]
-"8984" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1635</SUB>> ]
-"8989" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1635</SUB>> ]
-"8948" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1635</SUB>> ]
-"8969" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1635</SUB>> ]
-"8980" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;)<SUB>1635</SUB>> ]
-"8986" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1635</SUB>> ]
-"8990" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),f-&gt;GetDeclaringClass())<SUB>1635</SUB>> ]
-"8949" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1635</SUB>> ]
-"8953" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1635</SUB>> ]
-"8960" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Float, v),SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1635</SUB>> ]
-"8971" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1635</SUB>> ]
-"8991" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1635</SUB>> ]
-"8954" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1635</SUB>> ]
-"8993" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1635</SUB>> ]
-"8955" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1635</SUB>> ]
-"8957" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1635</SUB>> ]
-"8939" [label = <(METHOD,SetStaticFloatField)<SUB>1634</SUB>> ]
-"8995" [label = <(METHOD_RETURN,void)<SUB>1634</SUB>> ]
+"8945" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1634</SUB>> ]
+"8962" [label = <(soa,ScopedObjectAccess)<SUB>1634</SUB>> ]
+"8965" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1634</SUB>> ]
+"8974" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v)))<SUB>1634</SUB>> ]
+"8982" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1634</SUB>> ]
+"8967" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1634</SUB>> ]
+"8977" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v))<SUB>1634</SUB>> ]
+"8983" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1634</SUB>> ]
+"8988" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1634</SUB>> ]
+"8968" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1634</SUB>> ]
+"8978" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1634</SUB>> ]
+"8984" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1634</SUB>> ]
+"8989" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1634</SUB>> ]
+"8948" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1634</SUB>> ]
+"8969" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1634</SUB>> ]
+"8980" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;)<SUB>1634</SUB>> ]
+"8986" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1634</SUB>> ]
+"8990" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),f-&gt;GetDeclaringClass())<SUB>1634</SUB>> ]
+"8949" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1634</SUB>> ]
+"8953" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1634</SUB>> ]
+"8960" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Float, v),SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1634</SUB>> ]
+"8971" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1634</SUB>> ]
+"8991" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1634</SUB>> ]
+"8954" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1634</SUB>> ]
+"8993" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1634</SUB>> ]
+"8955" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1634</SUB>> ]
+"8957" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1634</SUB>> ]
+"8939" [label = <(METHOD,SetStaticFloatField)<SUB>1633</SUB>> ]
+"8995" [label = <(METHOD_RETURN,void)<SUB>1633</SUB>> ]
   "8945" -> "8949" 
   "8945" -> "8962" 
   "8962" -> "8971" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/155-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/155-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/155-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/155-cfg.dot	2023-06-07 19:35:47.937382792 +0330
@@ -1,33 +1,33 @@
 digraph "SetStaticDoubleField" {  
-"9003" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1639</SUB>> ]
-"9020" [label = <(soa,ScopedObjectAccess)<SUB>1639</SUB>> ]
-"9023" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1639</SUB>> ]
-"9032" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v)))<SUB>1639</SUB>> ]
-"9040" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1639</SUB>> ]
-"9025" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1639</SUB>> ]
-"9035" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v))<SUB>1639</SUB>> ]
-"9041" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1639</SUB>> ]
-"9046" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1639</SUB>> ]
-"9026" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1639</SUB>> ]
-"9036" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1639</SUB>> ]
-"9042" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1639</SUB>> ]
-"9047" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1639</SUB>> ]
-"9006" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1639</SUB>> ]
-"9027" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1639</SUB>> ]
-"9038" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;)<SUB>1639</SUB>> ]
-"9044" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1639</SUB>> ]
-"9048" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),f-&gt;GetDeclaringClass())<SUB>1639</SUB>> ]
-"9007" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1639</SUB>> ]
-"9011" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1639</SUB>> ]
-"9018" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Double, v),SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1639</SUB>> ]
-"9029" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1639</SUB>> ]
-"9049" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1639</SUB>> ]
-"9012" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1639</SUB>> ]
-"9051" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1639</SUB>> ]
-"9013" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1639</SUB>> ]
-"9015" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1639</SUB>> ]
-"8997" [label = <(METHOD,SetStaticDoubleField)<SUB>1638</SUB>> ]
-"9053" [label = <(METHOD_RETURN,void)<SUB>1638</SUB>> ]
+"9003" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1638</SUB>> ]
+"9020" [label = <(soa,ScopedObjectAccess)<SUB>1638</SUB>> ]
+"9023" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1638</SUB>> ]
+"9032" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v)))<SUB>1638</SUB>> ]
+"9040" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1638</SUB>> ]
+"9025" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1638</SUB>> ]
+"9035" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v))<SUB>1638</SUB>> ]
+"9041" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1638</SUB>> ]
+"9046" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1638</SUB>> ]
+"9026" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1638</SUB>> ]
+"9036" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1638</SUB>> ]
+"9042" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1638</SUB>> ]
+"9047" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1638</SUB>> ]
+"9006" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1638</SUB>> ]
+"9027" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1638</SUB>> ]
+"9038" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;)<SUB>1638</SUB>> ]
+"9044" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1638</SUB>> ]
+"9048" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),f-&gt;GetDeclaringClass())<SUB>1638</SUB>> ]
+"9007" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1638</SUB>> ]
+"9011" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1638</SUB>> ]
+"9018" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Double, v),SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1638</SUB>> ]
+"9029" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1638</SUB>> ]
+"9049" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1638</SUB>> ]
+"9012" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1638</SUB>> ]
+"9051" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1638</SUB>> ]
+"9013" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1638</SUB>> ]
+"9015" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1638</SUB>> ]
+"8997" [label = <(METHOD,SetStaticDoubleField)<SUB>1637</SUB>> ]
+"9053" [label = <(METHOD_RETURN,void)<SUB>1637</SUB>> ]
   "9003" -> "9007" 
   "9003" -> "9020" 
   "9020" -> "9029" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/156-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/156-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/156-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/156-cfg.dot	2023-06-07 19:35:47.937382792 +0330
@@ -1,33 +1,33 @@
 digraph "SetStaticIntField" {  
-"9061" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1643</SUB>> ]
-"9078" [label = <(soa,ScopedObjectAccess)<SUB>1643</SUB>> ]
-"9081" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1643</SUB>> ]
-"9090" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v)))<SUB>1643</SUB>> ]
-"9098" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1643</SUB>> ]
-"9083" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1643</SUB>> ]
-"9093" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v))<SUB>1643</SUB>> ]
-"9099" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1643</SUB>> ]
-"9104" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1643</SUB>> ]
-"9084" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1643</SUB>> ]
-"9094" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1643</SUB>> ]
-"9100" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1643</SUB>> ]
-"9105" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1643</SUB>> ]
-"9064" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1643</SUB>> ]
-"9085" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1643</SUB>> ]
-"9096" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;)<SUB>1643</SUB>> ]
-"9102" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1643</SUB>> ]
-"9106" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),f-&gt;GetDeclaringClass())<SUB>1643</SUB>> ]
-"9065" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1643</SUB>> ]
-"9069" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1643</SUB>> ]
-"9076" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Int, v),SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1643</SUB>> ]
-"9087" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1643</SUB>> ]
-"9107" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1643</SUB>> ]
-"9070" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1643</SUB>> ]
-"9109" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1643</SUB>> ]
-"9071" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1643</SUB>> ]
-"9073" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1643</SUB>> ]
-"9055" [label = <(METHOD,SetStaticIntField)<SUB>1642</SUB>> ]
-"9111" [label = <(METHOD_RETURN,void)<SUB>1642</SUB>> ]
+"9061" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1642</SUB>> ]
+"9078" [label = <(soa,ScopedObjectAccess)<SUB>1642</SUB>> ]
+"9081" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1642</SUB>> ]
+"9090" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v)))<SUB>1642</SUB>> ]
+"9098" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1642</SUB>> ]
+"9083" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1642</SUB>> ]
+"9093" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v))<SUB>1642</SUB>> ]
+"9099" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1642</SUB>> ]
+"9104" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1642</SUB>> ]
+"9084" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1642</SUB>> ]
+"9094" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1642</SUB>> ]
+"9100" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1642</SUB>> ]
+"9105" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1642</SUB>> ]
+"9064" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1642</SUB>> ]
+"9085" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1642</SUB>> ]
+"9096" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;)<SUB>1642</SUB>> ]
+"9102" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1642</SUB>> ]
+"9106" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),f-&gt;GetDeclaringClass())<SUB>1642</SUB>> ]
+"9065" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1642</SUB>> ]
+"9069" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1642</SUB>> ]
+"9076" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Int, v),SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1642</SUB>> ]
+"9087" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1642</SUB>> ]
+"9107" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1642</SUB>> ]
+"9070" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1642</SUB>> ]
+"9109" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1642</SUB>> ]
+"9071" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1642</SUB>> ]
+"9073" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1642</SUB>> ]
+"9055" [label = <(METHOD,SetStaticIntField)<SUB>1641</SUB>> ]
+"9111" [label = <(METHOD_RETURN,void)<SUB>1641</SUB>> ]
   "9061" -> "9065" 
   "9061" -> "9078" 
   "9078" -> "9087" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/157-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/157-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/157-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/157-cfg.dot	2023-06-07 19:35:47.937382792 +0330
@@ -1,33 +1,33 @@
 digraph "SetStaticLongField" {  
-"9119" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1647</SUB>> ]
-"9136" [label = <(soa,ScopedObjectAccess)<SUB>1647</SUB>> ]
-"9139" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1647</SUB>> ]
-"9148" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v)))<SUB>1647</SUB>> ]
-"9156" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1647</SUB>> ]
-"9141" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1647</SUB>> ]
-"9151" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v))<SUB>1647</SUB>> ]
-"9157" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1647</SUB>> ]
-"9162" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1647</SUB>> ]
-"9142" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1647</SUB>> ]
-"9152" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1647</SUB>> ]
-"9158" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1647</SUB>> ]
-"9163" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1647</SUB>> ]
-"9122" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1647</SUB>> ]
-"9143" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1647</SUB>> ]
-"9154" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;)<SUB>1647</SUB>> ]
-"9160" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1647</SUB>> ]
-"9164" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),f-&gt;GetDeclaringClass())<SUB>1647</SUB>> ]
-"9123" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1647</SUB>> ]
-"9127" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1647</SUB>> ]
-"9134" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Long, v),SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1647</SUB>> ]
-"9145" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1647</SUB>> ]
-"9165" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1647</SUB>> ]
-"9128" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1647</SUB>> ]
-"9167" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1647</SUB>> ]
-"9129" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1647</SUB>> ]
-"9131" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1647</SUB>> ]
-"9113" [label = <(METHOD,SetStaticLongField)<SUB>1646</SUB>> ]
-"9169" [label = <(METHOD_RETURN,void)<SUB>1646</SUB>> ]
+"9119" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1646</SUB>> ]
+"9136" [label = <(soa,ScopedObjectAccess)<SUB>1646</SUB>> ]
+"9139" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1646</SUB>> ]
+"9148" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v)))<SUB>1646</SUB>> ]
+"9156" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1646</SUB>> ]
+"9141" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1646</SUB>> ]
+"9151" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v))<SUB>1646</SUB>> ]
+"9157" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1646</SUB>> ]
+"9162" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1646</SUB>> ]
+"9142" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1646</SUB>> ]
+"9152" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1646</SUB>> ]
+"9158" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1646</SUB>> ]
+"9163" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1646</SUB>> ]
+"9122" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1646</SUB>> ]
+"9143" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1646</SUB>> ]
+"9154" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;)<SUB>1646</SUB>> ]
+"9160" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1646</SUB>> ]
+"9164" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),f-&gt;GetDeclaringClass())<SUB>1646</SUB>> ]
+"9123" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1646</SUB>> ]
+"9127" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1646</SUB>> ]
+"9134" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Long, v),SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1646</SUB>> ]
+"9145" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1646</SUB>> ]
+"9165" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1646</SUB>> ]
+"9128" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1646</SUB>> ]
+"9167" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1646</SUB>> ]
+"9129" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1646</SUB>> ]
+"9131" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1646</SUB>> ]
+"9113" [label = <(METHOD,SetStaticLongField)<SUB>1645</SUB>> ]
+"9169" [label = <(METHOD_RETURN,void)<SUB>1645</SUB>> ]
   "9119" -> "9123" 
   "9119" -> "9136" 
   "9136" -> "9145" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/158-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/158-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/158-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/158-cfg.dot	2023-06-07 19:35:47.937382792 +0330
@@ -1,33 +1,33 @@
 digraph "SetStaticShortField" {  
-"9177" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1651</SUB>> ]
-"9194" [label = <(soa,ScopedObjectAccess)<SUB>1651</SUB>> ]
-"9197" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1651</SUB>> ]
-"9206" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v)))<SUB>1651</SUB>> ]
-"9214" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1651</SUB>> ]
-"9199" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1651</SUB>> ]
-"9209" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v))<SUB>1651</SUB>> ]
-"9215" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1651</SUB>> ]
-"9220" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1651</SUB>> ]
-"9200" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1651</SUB>> ]
-"9210" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1651</SUB>> ]
-"9216" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1651</SUB>> ]
-"9221" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1651</SUB>> ]
-"9180" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1651</SUB>> ]
-"9201" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1651</SUB>> ]
-"9212" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;)<SUB>1651</SUB>> ]
-"9218" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1651</SUB>> ]
-"9222" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),f-&gt;GetDeclaringClass())<SUB>1651</SUB>> ]
-"9181" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1651</SUB>> ]
-"9185" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1651</SUB>> ]
-"9192" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Short, v),SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1651</SUB>> ]
-"9203" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1651</SUB>> ]
-"9223" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1651</SUB>> ]
-"9186" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1651</SUB>> ]
-"9225" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1651</SUB>> ]
-"9187" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1651</SUB>> ]
-"9189" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1651</SUB>> ]
-"9171" [label = <(METHOD,SetStaticShortField)<SUB>1650</SUB>> ]
-"9227" [label = <(METHOD_RETURN,void)<SUB>1650</SUB>> ]
+"9177" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1650</SUB>> ]
+"9194" [label = <(soa,ScopedObjectAccess)<SUB>1650</SUB>> ]
+"9197" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1650</SUB>> ]
+"9206" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v)))<SUB>1650</SUB>> ]
+"9214" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1650</SUB>> ]
+"9199" [label = <(&lt;operator&gt;.greaterThan,jni::DecodeArtField &lt; kEnableIndexIds &gt; (fid))<SUB>1650</SUB>> ]
+"9209" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v))<SUB>1650</SUB>> ]
+"9215" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1650</SUB>> ]
+"9220" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1650</SUB>> ]
+"9200" [label = <(&lt;operator&gt;.lessThan,jni::DecodeArtField &lt; kEnableIndexIds)<SUB>1650</SUB>> ]
+"9210" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1650</SUB>> ]
+"9216" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1650</SUB>> ]
+"9221" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1650</SUB>> ]
+"9180" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1650</SUB>> ]
+"9201" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1650</SUB>> ]
+"9212" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;)<SUB>1650</SUB>> ]
+"9218" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1650</SUB>> ]
+"9222" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),f-&gt;GetDeclaringClass())<SUB>1650</SUB>> ]
+"9181" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1650</SUB>> ]
+"9185" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1650</SUB>> ]
+"9192" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Short, v),SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1650</SUB>> ]
+"9203" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1650</SUB>> ]
+"9223" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1650</SUB>> ]
+"9186" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1650</SUB>> ]
+"9225" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1650</SUB>> ]
+"9187" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1650</SUB>> ]
+"9189" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1650</SUB>> ]
+"9171" [label = <(METHOD,SetStaticShortField)<SUB>1649</SUB>> ]
+"9227" [label = <(METHOD_RETURN,void)<SUB>1649</SUB>> ]
   "9177" -> "9181" 
   "9177" -> "9194" 
   "9194" -> "9203" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/159-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/159-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/159-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/159-cfg.dot	2023-06-07 19:35:47.937382792 +0330
@@ -1,29 +1,29 @@
 digraph "CallStaticObjectMethod" {  
-"9235" [label = <(va_start,va_start(ap, mid))<SUB>1656</SUB>> ]
-"9239" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1657</SUB>> ]
-"9242" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1658</SUB>> ]
-"9261" [label = <(soa,soa(env))<SUB>1659</SUB>> ]
-"9264" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1660</SUB>> ]
-"9271" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1661</SUB>> ]
-"9283" [label = <(RETURN,return local_result;,return local_result;)<SUB>1662</SUB>> ]
-"9240" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1657</SUB>> ]
-"9265" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1660</SUB>> ]
-"9273" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1661</SUB>> ]
-"9274" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1661</SUB>> ]
-"9279" [label = <(GetL,result.GetL())<SUB>1661</SUB>> ]
-"9246" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1658</SUB>> ]
-"9275" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1661</SUB>> ]
-"9280" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1661</SUB>> ]
-"9247" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1658</SUB>> ]
-"9251" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1658</SUB>> ]
-"9258" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1658</SUB>> ]
-"9277" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1661</SUB>> ]
-"9282" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1661</SUB>> ]
-"9252" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1658</SUB>> ]
-"9253" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1658</SUB>> ]
-"9255" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1658</SUB>> ]
-"9229" [label = <(METHOD,CallStaticObjectMethod)<SUB>1654</SUB>> ]
-"9285" [label = <(METHOD_RETURN,jobject)<SUB>1654</SUB>> ]
+"9235" [label = <(va_start,va_start(ap, mid))<SUB>1655</SUB>> ]
+"9239" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1656</SUB>> ]
+"9242" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1657</SUB>> ]
+"9261" [label = <(soa,soa(env))<SUB>1658</SUB>> ]
+"9264" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1659</SUB>> ]
+"9271" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1660</SUB>> ]
+"9283" [label = <(RETURN,return local_result;,return local_result;)<SUB>1661</SUB>> ]
+"9240" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1656</SUB>> ]
+"9265" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1659</SUB>> ]
+"9273" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1660</SUB>> ]
+"9274" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1660</SUB>> ]
+"9279" [label = <(GetL,result.GetL())<SUB>1660</SUB>> ]
+"9246" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1657</SUB>> ]
+"9275" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1660</SUB>> ]
+"9280" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1660</SUB>> ]
+"9247" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1657</SUB>> ]
+"9251" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1657</SUB>> ]
+"9258" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1657</SUB>> ]
+"9277" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1660</SUB>> ]
+"9282" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1660</SUB>> ]
+"9252" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1657</SUB>> ]
+"9253" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1657</SUB>> ]
+"9255" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1657</SUB>> ]
+"9229" [label = <(METHOD,CallStaticObjectMethod)<SUB>1653</SUB>> ]
+"9285" [label = <(METHOD_RETURN,jobject)<SUB>1653</SUB>> ]
   "9235" -> "9240" 
   "9239" -> "9242" 
   "9242" -> "9247" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/16-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/16-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/16-cfg.dot	2023-06-07 19:35:41.347383235 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/16-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "FindFieldID" {  
-"405" [label = <(METHOD,FindFieldID)<SUB>339</SUB>> ]
-"412" [label = <(METHOD_RETURN,jfieldID)<SUB>339</SUB>> ]
+"405" [label = <(METHOD,FindFieldID)<SUB>338</SUB>> ]
+"412" [label = <(METHOD_RETURN,jfieldID)<SUB>338</SUB>> ]
   "405" -> "412" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/160-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/160-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/160-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/160-cfg.dot	2023-06-07 19:35:47.937382792 +0330
@@ -1,25 +1,25 @@
 digraph "CallStaticObjectMethodV" {  
-"9293" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1666</SUB>> ]
-"9312" [label = <(soa,soa(env))<SUB>1667</SUB>> ]
-"9315" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, args)))<SUB>1668</SUB>> ]
-"9321" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1669</SUB>> ]
-"9316" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1668</SUB>> ]
-"9322" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1669</SUB>> ]
-"9323" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1669</SUB>> ]
-"9328" [label = <(GetL,result.GetL())<SUB>1669</SUB>> ]
-"9297" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1666</SUB>> ]
-"9324" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1669</SUB>> ]
-"9329" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1669</SUB>> ]
-"9298" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1666</SUB>> ]
-"9302" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1666</SUB>> ]
-"9309" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1666</SUB>> ]
-"9326" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1669</SUB>> ]
-"9331" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1669</SUB>> ]
-"9303" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1666</SUB>> ]
-"9304" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1666</SUB>> ]
-"9306" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1666</SUB>> ]
-"9287" [label = <(METHOD,CallStaticObjectMethodV)<SUB>1665</SUB>> ]
-"9332" [label = <(METHOD_RETURN,jobject)<SUB>1665</SUB>> ]
+"9293" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1665</SUB>> ]
+"9312" [label = <(soa,soa(env))<SUB>1666</SUB>> ]
+"9315" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, args)))<SUB>1667</SUB>> ]
+"9321" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1668</SUB>> ]
+"9316" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1667</SUB>> ]
+"9322" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1668</SUB>> ]
+"9323" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1668</SUB>> ]
+"9328" [label = <(GetL,result.GetL())<SUB>1668</SUB>> ]
+"9297" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1665</SUB>> ]
+"9324" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1668</SUB>> ]
+"9329" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1668</SUB>> ]
+"9298" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1665</SUB>> ]
+"9302" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1665</SUB>> ]
+"9309" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1665</SUB>> ]
+"9326" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1668</SUB>> ]
+"9331" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1668</SUB>> ]
+"9303" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1665</SUB>> ]
+"9304" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1665</SUB>> ]
+"9306" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1665</SUB>> ]
+"9287" [label = <(METHOD,CallStaticObjectMethodV)<SUB>1664</SUB>> ]
+"9332" [label = <(METHOD_RETURN,jobject)<SUB>1664</SUB>> ]
   "9293" -> "9298" 
   "9293" -> "9312" 
   "9312" -> "9316" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/161-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/161-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/161-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/161-cfg.dot	2023-06-07 19:35:47.937382792 +0330
@@ -1,25 +1,25 @@
 digraph "CallStaticObjectMethodA" {  
-"9340" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1673</SUB>> ]
-"9359" [label = <(soa,soa(env))<SUB>1674</SUB>> ]
-"9362" [label = <(result,result(InvokeWithJValues(soa, nullptr, mid, args)))<SUB>1675</SUB>> ]
-"9368" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1676</SUB>> ]
-"9363" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1675</SUB>> ]
-"9369" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1676</SUB>> ]
-"9370" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1676</SUB>> ]
-"9375" [label = <(GetL,result.GetL())<SUB>1676</SUB>> ]
-"9344" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1673</SUB>> ]
-"9371" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1676</SUB>> ]
-"9376" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1676</SUB>> ]
-"9345" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1673</SUB>> ]
-"9349" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1673</SUB>> ]
-"9356" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1673</SUB>> ]
-"9373" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1676</SUB>> ]
-"9378" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1676</SUB>> ]
-"9350" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1673</SUB>> ]
-"9351" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1673</SUB>> ]
-"9353" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1673</SUB>> ]
-"9334" [label = <(METHOD,CallStaticObjectMethodA)<SUB>1672</SUB>> ]
-"9379" [label = <(METHOD_RETURN,jobject)<SUB>1672</SUB>> ]
+"9340" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1672</SUB>> ]
+"9359" [label = <(soa,soa(env))<SUB>1673</SUB>> ]
+"9362" [label = <(result,result(InvokeWithJValues(soa, nullptr, mid, args)))<SUB>1674</SUB>> ]
+"9368" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1675</SUB>> ]
+"9363" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1674</SUB>> ]
+"9369" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1675</SUB>> ]
+"9370" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1675</SUB>> ]
+"9375" [label = <(GetL,result.GetL())<SUB>1675</SUB>> ]
+"9344" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1672</SUB>> ]
+"9371" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1675</SUB>> ]
+"9376" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1675</SUB>> ]
+"9345" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1672</SUB>> ]
+"9349" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1672</SUB>> ]
+"9356" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1672</SUB>> ]
+"9373" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1675</SUB>> ]
+"9378" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1675</SUB>> ]
+"9350" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1672</SUB>> ]
+"9351" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1672</SUB>> ]
+"9353" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1672</SUB>> ]
+"9334" [label = <(METHOD,CallStaticObjectMethodA)<SUB>1671</SUB>> ]
+"9379" [label = <(METHOD_RETURN,jobject)<SUB>1671</SUB>> ]
   "9340" -> "9345" 
   "9340" -> "9359" 
   "9359" -> "9363" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/162-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/162-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/162-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/162-cfg.dot	2023-06-07 19:35:47.937382792 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticBooleanMethod" {  
-"9387" [label = <(va_start,va_start(ap, mid))<SUB>1681</SUB>> ]
-"9391" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1682</SUB>> ]
-"9394" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1683</SUB>> ]
-"9413" [label = <(soa,soa(env))<SUB>1684</SUB>> ]
-"9416" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1685</SUB>> ]
-"9422" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1686</SUB>> ]
-"9392" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1682</SUB>> ]
-"9417" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1685</SUB>> ]
-"9423" [label = <(GetZ,result.GetZ())<SUB>1686</SUB>> ]
-"9424" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1686</SUB>> ]
-"9398" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1683</SUB>> ]
-"9426" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1686</SUB>> ]
-"9399" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1683</SUB>> ]
-"9403" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1683</SUB>> ]
-"9410" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1683</SUB>> ]
-"9404" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1683</SUB>> ]
-"9405" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1683</SUB>> ]
-"9407" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1683</SUB>> ]
-"9381" [label = <(METHOD,CallStaticBooleanMethod)<SUB>1679</SUB>> ]
-"9427" [label = <(METHOD_RETURN,jboolean)<SUB>1679</SUB>> ]
+"9387" [label = <(va_start,va_start(ap, mid))<SUB>1680</SUB>> ]
+"9391" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1681</SUB>> ]
+"9394" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1682</SUB>> ]
+"9413" [label = <(soa,soa(env))<SUB>1683</SUB>> ]
+"9416" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1684</SUB>> ]
+"9422" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1685</SUB>> ]
+"9392" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1681</SUB>> ]
+"9417" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1684</SUB>> ]
+"9423" [label = <(GetZ,result.GetZ())<SUB>1685</SUB>> ]
+"9424" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1685</SUB>> ]
+"9398" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1682</SUB>> ]
+"9426" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1685</SUB>> ]
+"9399" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1682</SUB>> ]
+"9403" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1682</SUB>> ]
+"9410" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1682</SUB>> ]
+"9404" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1682</SUB>> ]
+"9405" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1682</SUB>> ]
+"9407" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1682</SUB>> ]
+"9381" [label = <(METHOD,CallStaticBooleanMethod)<SUB>1678</SUB>> ]
+"9427" [label = <(METHOD_RETURN,jboolean)<SUB>1678</SUB>> ]
   "9387" -> "9392" 
   "9391" -> "9394" 
   "9394" -> "9399" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/163-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/163-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/163-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/163-cfg.dot	2023-06-07 19:35:47.937382792 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticBooleanMethodV" {  
-"9435" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1690</SUB>> ]
-"9454" [label = <(soa,soa(env))<SUB>1691</SUB>> ]
-"9456" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();)<SUB>1692</SUB>> ]
-"9457" [label = <(GetZ,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ())<SUB>1692</SUB>> ]
-"9458" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ)<SUB>1692</SUB>> ]
-"9439" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1690</SUB>> ]
-"9459" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1692</SUB>> ]
-"9464" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1692</SUB>> ]
-"9440" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1690</SUB>> ]
-"9444" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1690</SUB>> ]
-"9451" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1690</SUB>> ]
-"9445" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1690</SUB>> ]
-"9446" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1690</SUB>> ]
-"9448" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1690</SUB>> ]
-"9429" [label = <(METHOD,CallStaticBooleanMethodV)<SUB>1689</SUB>> ]
-"9465" [label = <(METHOD_RETURN,jboolean)<SUB>1689</SUB>> ]
+"9435" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1689</SUB>> ]
+"9454" [label = <(soa,soa(env))<SUB>1690</SUB>> ]
+"9456" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();)<SUB>1691</SUB>> ]
+"9457" [label = <(GetZ,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ())<SUB>1691</SUB>> ]
+"9458" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ)<SUB>1691</SUB>> ]
+"9439" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1689</SUB>> ]
+"9459" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1691</SUB>> ]
+"9464" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1691</SUB>> ]
+"9440" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1689</SUB>> ]
+"9444" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1689</SUB>> ]
+"9451" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1689</SUB>> ]
+"9445" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1689</SUB>> ]
+"9446" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1689</SUB>> ]
+"9448" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1689</SUB>> ]
+"9429" [label = <(METHOD,CallStaticBooleanMethodV)<SUB>1688</SUB>> ]
+"9465" [label = <(METHOD_RETURN,jboolean)<SUB>1688</SUB>> ]
   "9435" -> "9440" 
   "9435" -> "9454" 
   "9454" -> "9459" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/164-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/164-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/164-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/164-cfg.dot	2023-06-07 19:35:47.947382789 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticBooleanMethodA" {  
-"9473" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1696</SUB>> ]
-"9492" [label = <(soa,soa(env))<SUB>1697</SUB>> ]
-"9494" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();)<SUB>1698</SUB>> ]
-"9495" [label = <(GetZ,InvokeWithJValues(soa, nullptr, mid, args).GetZ())<SUB>1698</SUB>> ]
-"9496" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetZ)<SUB>1698</SUB>> ]
-"9477" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1696</SUB>> ]
-"9497" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1698</SUB>> ]
-"9502" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1698</SUB>> ]
-"9478" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1696</SUB>> ]
-"9482" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1696</SUB>> ]
-"9489" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1696</SUB>> ]
-"9483" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1696</SUB>> ]
-"9484" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1696</SUB>> ]
-"9486" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1696</SUB>> ]
-"9467" [label = <(METHOD,CallStaticBooleanMethodA)<SUB>1695</SUB>> ]
-"9503" [label = <(METHOD_RETURN,jboolean)<SUB>1695</SUB>> ]
+"9473" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1695</SUB>> ]
+"9492" [label = <(soa,soa(env))<SUB>1696</SUB>> ]
+"9494" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();)<SUB>1697</SUB>> ]
+"9495" [label = <(GetZ,InvokeWithJValues(soa, nullptr, mid, args).GetZ())<SUB>1697</SUB>> ]
+"9496" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetZ)<SUB>1697</SUB>> ]
+"9477" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1695</SUB>> ]
+"9497" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1697</SUB>> ]
+"9502" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1697</SUB>> ]
+"9478" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1695</SUB>> ]
+"9482" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1695</SUB>> ]
+"9489" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1695</SUB>> ]
+"9483" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1695</SUB>> ]
+"9484" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1695</SUB>> ]
+"9486" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1695</SUB>> ]
+"9467" [label = <(METHOD,CallStaticBooleanMethodA)<SUB>1694</SUB>> ]
+"9503" [label = <(METHOD_RETURN,jboolean)<SUB>1694</SUB>> ]
   "9473" -> "9478" 
   "9473" -> "9492" 
   "9492" -> "9497" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/165-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/165-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/165-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/165-cfg.dot	2023-06-07 19:35:47.947382789 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticByteMethod" {  
-"9511" [label = <(va_start,va_start(ap, mid))<SUB>1703</SUB>> ]
-"9515" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1704</SUB>> ]
-"9518" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1705</SUB>> ]
-"9537" [label = <(soa,soa(env))<SUB>1706</SUB>> ]
-"9540" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1707</SUB>> ]
-"9546" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1708</SUB>> ]
-"9516" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1704</SUB>> ]
-"9541" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1707</SUB>> ]
-"9547" [label = <(GetB,result.GetB())<SUB>1708</SUB>> ]
-"9548" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1708</SUB>> ]
-"9522" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1705</SUB>> ]
-"9550" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1708</SUB>> ]
-"9523" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1705</SUB>> ]
-"9527" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1705</SUB>> ]
-"9534" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1705</SUB>> ]
-"9528" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1705</SUB>> ]
-"9529" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1705</SUB>> ]
-"9531" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1705</SUB>> ]
-"9505" [label = <(METHOD,CallStaticByteMethod)<SUB>1701</SUB>> ]
-"9551" [label = <(METHOD_RETURN,jbyte)<SUB>1701</SUB>> ]
+"9511" [label = <(va_start,va_start(ap, mid))<SUB>1702</SUB>> ]
+"9515" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1703</SUB>> ]
+"9518" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1704</SUB>> ]
+"9537" [label = <(soa,soa(env))<SUB>1705</SUB>> ]
+"9540" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1706</SUB>> ]
+"9546" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1707</SUB>> ]
+"9516" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1703</SUB>> ]
+"9541" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1706</SUB>> ]
+"9547" [label = <(GetB,result.GetB())<SUB>1707</SUB>> ]
+"9548" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1707</SUB>> ]
+"9522" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1704</SUB>> ]
+"9550" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1707</SUB>> ]
+"9523" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1704</SUB>> ]
+"9527" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1704</SUB>> ]
+"9534" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1704</SUB>> ]
+"9528" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1704</SUB>> ]
+"9529" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1704</SUB>> ]
+"9531" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1704</SUB>> ]
+"9505" [label = <(METHOD,CallStaticByteMethod)<SUB>1700</SUB>> ]
+"9551" [label = <(METHOD_RETURN,jbyte)<SUB>1700</SUB>> ]
   "9511" -> "9516" 
   "9515" -> "9518" 
   "9518" -> "9523" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/166-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/166-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/166-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/166-cfg.dot	2023-06-07 19:35:47.947382789 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticByteMethodV" {  
-"9559" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1712</SUB>> ]
-"9578" [label = <(soa,soa(env))<SUB>1713</SUB>> ]
-"9580" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();)<SUB>1714</SUB>> ]
-"9581" [label = <(GetB,InvokeWithVarArgs(soa, nullptr, mid, args).GetB())<SUB>1714</SUB>> ]
-"9582" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetB)<SUB>1714</SUB>> ]
-"9563" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1712</SUB>> ]
-"9583" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1714</SUB>> ]
-"9588" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1714</SUB>> ]
-"9564" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1712</SUB>> ]
-"9568" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1712</SUB>> ]
-"9575" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1712</SUB>> ]
-"9569" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1712</SUB>> ]
-"9570" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1712</SUB>> ]
-"9572" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1712</SUB>> ]
-"9553" [label = <(METHOD,CallStaticByteMethodV)<SUB>1711</SUB>> ]
-"9589" [label = <(METHOD_RETURN,jbyte)<SUB>1711</SUB>> ]
+"9559" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1711</SUB>> ]
+"9578" [label = <(soa,soa(env))<SUB>1712</SUB>> ]
+"9580" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();)<SUB>1713</SUB>> ]
+"9581" [label = <(GetB,InvokeWithVarArgs(soa, nullptr, mid, args).GetB())<SUB>1713</SUB>> ]
+"9582" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetB)<SUB>1713</SUB>> ]
+"9563" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1711</SUB>> ]
+"9583" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1713</SUB>> ]
+"9588" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1713</SUB>> ]
+"9564" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1711</SUB>> ]
+"9568" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1711</SUB>> ]
+"9575" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1711</SUB>> ]
+"9569" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1711</SUB>> ]
+"9570" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1711</SUB>> ]
+"9572" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1711</SUB>> ]
+"9553" [label = <(METHOD,CallStaticByteMethodV)<SUB>1710</SUB>> ]
+"9589" [label = <(METHOD_RETURN,jbyte)<SUB>1710</SUB>> ]
   "9559" -> "9564" 
   "9559" -> "9578" 
   "9578" -> "9583" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/167-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/167-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/167-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/167-cfg.dot	2023-06-07 19:35:47.947382789 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticByteMethodA" {  
-"9597" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1718</SUB>> ]
-"9616" [label = <(soa,soa(env))<SUB>1719</SUB>> ]
-"9618" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetB();,return InvokeWithJValues(soa, nullptr, mid, args).GetB();)<SUB>1720</SUB>> ]
-"9619" [label = <(GetB,InvokeWithJValues(soa, nullptr, mid, args).GetB())<SUB>1720</SUB>> ]
-"9620" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetB)<SUB>1720</SUB>> ]
-"9601" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1718</SUB>> ]
-"9621" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1720</SUB>> ]
-"9626" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1720</SUB>> ]
-"9602" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1718</SUB>> ]
-"9606" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1718</SUB>> ]
-"9613" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1718</SUB>> ]
-"9607" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1718</SUB>> ]
-"9608" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1718</SUB>> ]
-"9610" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1718</SUB>> ]
-"9591" [label = <(METHOD,CallStaticByteMethodA)<SUB>1717</SUB>> ]
-"9627" [label = <(METHOD_RETURN,jbyte)<SUB>1717</SUB>> ]
+"9597" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1717</SUB>> ]
+"9616" [label = <(soa,soa(env))<SUB>1718</SUB>> ]
+"9618" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetB();,return InvokeWithJValues(soa, nullptr, mid, args).GetB();)<SUB>1719</SUB>> ]
+"9619" [label = <(GetB,InvokeWithJValues(soa, nullptr, mid, args).GetB())<SUB>1719</SUB>> ]
+"9620" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetB)<SUB>1719</SUB>> ]
+"9601" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1717</SUB>> ]
+"9621" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1719</SUB>> ]
+"9626" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1719</SUB>> ]
+"9602" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1717</SUB>> ]
+"9606" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1717</SUB>> ]
+"9613" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1717</SUB>> ]
+"9607" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1717</SUB>> ]
+"9608" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1717</SUB>> ]
+"9610" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1717</SUB>> ]
+"9591" [label = <(METHOD,CallStaticByteMethodA)<SUB>1716</SUB>> ]
+"9627" [label = <(METHOD_RETURN,jbyte)<SUB>1716</SUB>> ]
   "9597" -> "9602" 
   "9597" -> "9616" 
   "9616" -> "9621" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/168-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/168-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/168-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/168-cfg.dot	2023-06-07 19:35:47.947382789 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticCharMethod" {  
-"9635" [label = <(va_start,va_start(ap, mid))<SUB>1725</SUB>> ]
-"9639" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1726</SUB>> ]
-"9642" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1727</SUB>> ]
-"9661" [label = <(soa,soa(env))<SUB>1728</SUB>> ]
-"9664" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1729</SUB>> ]
-"9670" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1730</SUB>> ]
-"9640" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1726</SUB>> ]
-"9665" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1729</SUB>> ]
-"9671" [label = <(GetC,result.GetC())<SUB>1730</SUB>> ]
-"9672" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1730</SUB>> ]
-"9646" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1727</SUB>> ]
-"9674" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1730</SUB>> ]
-"9647" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1727</SUB>> ]
-"9651" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1727</SUB>> ]
-"9658" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1727</SUB>> ]
-"9652" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1727</SUB>> ]
-"9653" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1727</SUB>> ]
-"9655" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1727</SUB>> ]
-"9629" [label = <(METHOD,CallStaticCharMethod)<SUB>1723</SUB>> ]
-"9675" [label = <(METHOD_RETURN,jchar)<SUB>1723</SUB>> ]
+"9635" [label = <(va_start,va_start(ap, mid))<SUB>1724</SUB>> ]
+"9639" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1725</SUB>> ]
+"9642" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1726</SUB>> ]
+"9661" [label = <(soa,soa(env))<SUB>1727</SUB>> ]
+"9664" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1728</SUB>> ]
+"9670" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1729</SUB>> ]
+"9640" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1725</SUB>> ]
+"9665" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1728</SUB>> ]
+"9671" [label = <(GetC,result.GetC())<SUB>1729</SUB>> ]
+"9672" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1729</SUB>> ]
+"9646" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1726</SUB>> ]
+"9674" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1729</SUB>> ]
+"9647" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1726</SUB>> ]
+"9651" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1726</SUB>> ]
+"9658" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1726</SUB>> ]
+"9652" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1726</SUB>> ]
+"9653" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1726</SUB>> ]
+"9655" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1726</SUB>> ]
+"9629" [label = <(METHOD,CallStaticCharMethod)<SUB>1722</SUB>> ]
+"9675" [label = <(METHOD_RETURN,jchar)<SUB>1722</SUB>> ]
   "9635" -> "9640" 
   "9639" -> "9642" 
   "9642" -> "9647" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/169-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/169-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/169-cfg.dot	2023-06-07 19:35:41.497383224 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/169-cfg.dot	2023-06-07 19:35:47.947382789 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticCharMethodV" {  
-"9683" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1734</SUB>> ]
-"9702" [label = <(soa,soa(env))<SUB>1735</SUB>> ]
-"9704" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();)<SUB>1736</SUB>> ]
-"9705" [label = <(GetC,InvokeWithVarArgs(soa, nullptr, mid, args).GetC())<SUB>1736</SUB>> ]
-"9706" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetC)<SUB>1736</SUB>> ]
-"9687" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1734</SUB>> ]
-"9707" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1736</SUB>> ]
-"9712" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1736</SUB>> ]
-"9688" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1734</SUB>> ]
-"9692" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1734</SUB>> ]
-"9699" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1734</SUB>> ]
-"9693" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1734</SUB>> ]
-"9694" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1734</SUB>> ]
-"9696" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1734</SUB>> ]
-"9677" [label = <(METHOD,CallStaticCharMethodV)<SUB>1733</SUB>> ]
-"9713" [label = <(METHOD_RETURN,jchar)<SUB>1733</SUB>> ]
+"9683" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1733</SUB>> ]
+"9702" [label = <(soa,soa(env))<SUB>1734</SUB>> ]
+"9704" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();)<SUB>1735</SUB>> ]
+"9705" [label = <(GetC,InvokeWithVarArgs(soa, nullptr, mid, args).GetC())<SUB>1735</SUB>> ]
+"9706" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetC)<SUB>1735</SUB>> ]
+"9687" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1733</SUB>> ]
+"9707" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1735</SUB>> ]
+"9712" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1735</SUB>> ]
+"9688" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1733</SUB>> ]
+"9692" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1733</SUB>> ]
+"9699" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1733</SUB>> ]
+"9693" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1733</SUB>> ]
+"9694" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1733</SUB>> ]
+"9696" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1733</SUB>> ]
+"9677" [label = <(METHOD,CallStaticCharMethodV)<SUB>1732</SUB>> ]
+"9713" [label = <(METHOD_RETURN,jchar)<SUB>1732</SUB>> ]
   "9683" -> "9688" 
   "9683" -> "9702" 
   "9702" -> "9707" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/17-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/17-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/17-cfg.dot	2023-06-07 19:35:41.347383235 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/17-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowAIOOBE" {  
-"417" [label = <(METHOD,ThrowAIOOBE)<SUB>345</SUB>> ]
-"424" [label = <(METHOD_RETURN,void)<SUB>345</SUB>> ]
+"417" [label = <(METHOD,ThrowAIOOBE)<SUB>344</SUB>> ]
+"424" [label = <(METHOD_RETURN,void)<SUB>344</SUB>> ]
   "417" -> "424" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/170-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/170-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/170-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/170-cfg.dot	2023-06-07 19:35:47.947382789 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticCharMethodA" {  
-"9721" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1740</SUB>> ]
-"9740" [label = <(soa,soa(env))<SUB>1741</SUB>> ]
-"9742" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetC();,return InvokeWithJValues(soa, nullptr, mid, args).GetC();)<SUB>1742</SUB>> ]
-"9743" [label = <(GetC,InvokeWithJValues(soa, nullptr, mid, args).GetC())<SUB>1742</SUB>> ]
-"9744" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetC)<SUB>1742</SUB>> ]
-"9725" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1740</SUB>> ]
-"9745" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1742</SUB>> ]
-"9750" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1742</SUB>> ]
-"9726" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1740</SUB>> ]
-"9730" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1740</SUB>> ]
-"9737" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1740</SUB>> ]
-"9731" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1740</SUB>> ]
-"9732" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1740</SUB>> ]
-"9734" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1740</SUB>> ]
-"9715" [label = <(METHOD,CallStaticCharMethodA)<SUB>1739</SUB>> ]
-"9751" [label = <(METHOD_RETURN,jchar)<SUB>1739</SUB>> ]
+"9721" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1739</SUB>> ]
+"9740" [label = <(soa,soa(env))<SUB>1740</SUB>> ]
+"9742" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetC();,return InvokeWithJValues(soa, nullptr, mid, args).GetC();)<SUB>1741</SUB>> ]
+"9743" [label = <(GetC,InvokeWithJValues(soa, nullptr, mid, args).GetC())<SUB>1741</SUB>> ]
+"9744" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetC)<SUB>1741</SUB>> ]
+"9725" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1739</SUB>> ]
+"9745" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1741</SUB>> ]
+"9750" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1741</SUB>> ]
+"9726" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1739</SUB>> ]
+"9730" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1739</SUB>> ]
+"9737" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1739</SUB>> ]
+"9731" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1739</SUB>> ]
+"9732" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1739</SUB>> ]
+"9734" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1739</SUB>> ]
+"9715" [label = <(METHOD,CallStaticCharMethodA)<SUB>1738</SUB>> ]
+"9751" [label = <(METHOD_RETURN,jchar)<SUB>1738</SUB>> ]
   "9721" -> "9726" 
   "9721" -> "9740" 
   "9740" -> "9745" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/171-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/171-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/171-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/171-cfg.dot	2023-06-07 19:35:47.947382789 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticShortMethod" {  
-"9759" [label = <(va_start,va_start(ap, mid))<SUB>1747</SUB>> ]
-"9763" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1748</SUB>> ]
-"9766" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1749</SUB>> ]
-"9785" [label = <(soa,soa(env))<SUB>1750</SUB>> ]
-"9788" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1751</SUB>> ]
-"9794" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1752</SUB>> ]
-"9764" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1748</SUB>> ]
-"9789" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1751</SUB>> ]
-"9795" [label = <(GetS,result.GetS())<SUB>1752</SUB>> ]
-"9796" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1752</SUB>> ]
-"9770" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1749</SUB>> ]
-"9798" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1752</SUB>> ]
-"9771" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1749</SUB>> ]
-"9775" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1749</SUB>> ]
-"9782" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1749</SUB>> ]
-"9776" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1749</SUB>> ]
-"9777" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1749</SUB>> ]
-"9779" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1749</SUB>> ]
-"9753" [label = <(METHOD,CallStaticShortMethod)<SUB>1745</SUB>> ]
-"9799" [label = <(METHOD_RETURN,jshort)<SUB>1745</SUB>> ]
+"9759" [label = <(va_start,va_start(ap, mid))<SUB>1746</SUB>> ]
+"9763" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1747</SUB>> ]
+"9766" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1748</SUB>> ]
+"9785" [label = <(soa,soa(env))<SUB>1749</SUB>> ]
+"9788" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1750</SUB>> ]
+"9794" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1751</SUB>> ]
+"9764" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1747</SUB>> ]
+"9789" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1750</SUB>> ]
+"9795" [label = <(GetS,result.GetS())<SUB>1751</SUB>> ]
+"9796" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1751</SUB>> ]
+"9770" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1748</SUB>> ]
+"9798" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1751</SUB>> ]
+"9771" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1748</SUB>> ]
+"9775" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1748</SUB>> ]
+"9782" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1748</SUB>> ]
+"9776" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1748</SUB>> ]
+"9777" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1748</SUB>> ]
+"9779" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1748</SUB>> ]
+"9753" [label = <(METHOD,CallStaticShortMethod)<SUB>1744</SUB>> ]
+"9799" [label = <(METHOD_RETURN,jshort)<SUB>1744</SUB>> ]
   "9759" -> "9764" 
   "9763" -> "9766" 
   "9766" -> "9771" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/172-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/172-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/172-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/172-cfg.dot	2023-06-07 19:35:47.947382789 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticShortMethodV" {  
-"9807" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1756</SUB>> ]
-"9826" [label = <(soa,soa(env))<SUB>1757</SUB>> ]
-"9828" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();)<SUB>1758</SUB>> ]
-"9829" [label = <(GetS,InvokeWithVarArgs(soa, nullptr, mid, args).GetS())<SUB>1758</SUB>> ]
-"9830" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetS)<SUB>1758</SUB>> ]
-"9811" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1756</SUB>> ]
-"9831" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1758</SUB>> ]
-"9836" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1758</SUB>> ]
-"9812" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1756</SUB>> ]
-"9816" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1756</SUB>> ]
-"9823" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1756</SUB>> ]
-"9817" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1756</SUB>> ]
-"9818" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1756</SUB>> ]
-"9820" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1756</SUB>> ]
-"9801" [label = <(METHOD,CallStaticShortMethodV)<SUB>1755</SUB>> ]
-"9837" [label = <(METHOD_RETURN,jshort)<SUB>1755</SUB>> ]
+"9807" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1755</SUB>> ]
+"9826" [label = <(soa,soa(env))<SUB>1756</SUB>> ]
+"9828" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();)<SUB>1757</SUB>> ]
+"9829" [label = <(GetS,InvokeWithVarArgs(soa, nullptr, mid, args).GetS())<SUB>1757</SUB>> ]
+"9830" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetS)<SUB>1757</SUB>> ]
+"9811" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1755</SUB>> ]
+"9831" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1757</SUB>> ]
+"9836" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1757</SUB>> ]
+"9812" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1755</SUB>> ]
+"9816" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1755</SUB>> ]
+"9823" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1755</SUB>> ]
+"9817" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1755</SUB>> ]
+"9818" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1755</SUB>> ]
+"9820" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1755</SUB>> ]
+"9801" [label = <(METHOD,CallStaticShortMethodV)<SUB>1754</SUB>> ]
+"9837" [label = <(METHOD_RETURN,jshort)<SUB>1754</SUB>> ]
   "9807" -> "9812" 
   "9807" -> "9826" 
   "9826" -> "9831" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/173-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/173-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/173-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/173-cfg.dot	2023-06-07 19:35:47.947382789 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticShortMethodA" {  
-"9845" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1762</SUB>> ]
-"9864" [label = <(soa,soa(env))<SUB>1763</SUB>> ]
-"9866" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetS();,return InvokeWithJValues(soa, nullptr, mid, args).GetS();)<SUB>1764</SUB>> ]
-"9867" [label = <(GetS,InvokeWithJValues(soa, nullptr, mid, args).GetS())<SUB>1764</SUB>> ]
-"9868" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetS)<SUB>1764</SUB>> ]
-"9849" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1762</SUB>> ]
-"9869" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1764</SUB>> ]
-"9874" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1764</SUB>> ]
-"9850" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1762</SUB>> ]
-"9854" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1762</SUB>> ]
-"9861" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1762</SUB>> ]
-"9855" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1762</SUB>> ]
-"9856" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1762</SUB>> ]
-"9858" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1762</SUB>> ]
-"9839" [label = <(METHOD,CallStaticShortMethodA)<SUB>1761</SUB>> ]
-"9875" [label = <(METHOD_RETURN,jshort)<SUB>1761</SUB>> ]
+"9845" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1761</SUB>> ]
+"9864" [label = <(soa,soa(env))<SUB>1762</SUB>> ]
+"9866" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetS();,return InvokeWithJValues(soa, nullptr, mid, args).GetS();)<SUB>1763</SUB>> ]
+"9867" [label = <(GetS,InvokeWithJValues(soa, nullptr, mid, args).GetS())<SUB>1763</SUB>> ]
+"9868" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetS)<SUB>1763</SUB>> ]
+"9849" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1761</SUB>> ]
+"9869" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1763</SUB>> ]
+"9874" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1763</SUB>> ]
+"9850" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1761</SUB>> ]
+"9854" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1761</SUB>> ]
+"9861" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1761</SUB>> ]
+"9855" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1761</SUB>> ]
+"9856" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1761</SUB>> ]
+"9858" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1761</SUB>> ]
+"9839" [label = <(METHOD,CallStaticShortMethodA)<SUB>1760</SUB>> ]
+"9875" [label = <(METHOD_RETURN,jshort)<SUB>1760</SUB>> ]
   "9845" -> "9850" 
   "9845" -> "9864" 
   "9864" -> "9869" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/174-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/174-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/174-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/174-cfg.dot	2023-06-07 19:35:47.957382791 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticIntMethod" {  
-"9883" [label = <(va_start,va_start(ap, mid))<SUB>1769</SUB>> ]
-"9887" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1770</SUB>> ]
-"9890" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1771</SUB>> ]
-"9909" [label = <(soa,soa(env))<SUB>1772</SUB>> ]
-"9912" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1773</SUB>> ]
-"9918" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1774</SUB>> ]
-"9888" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1770</SUB>> ]
-"9913" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1773</SUB>> ]
-"9919" [label = <(GetI,result.GetI())<SUB>1774</SUB>> ]
-"9920" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1774</SUB>> ]
-"9894" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1771</SUB>> ]
-"9922" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1774</SUB>> ]
-"9895" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1771</SUB>> ]
-"9899" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1771</SUB>> ]
-"9906" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1771</SUB>> ]
-"9900" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1771</SUB>> ]
-"9901" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1771</SUB>> ]
-"9903" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1771</SUB>> ]
-"9877" [label = <(METHOD,CallStaticIntMethod)<SUB>1767</SUB>> ]
-"9923" [label = <(METHOD_RETURN,jint)<SUB>1767</SUB>> ]
+"9883" [label = <(va_start,va_start(ap, mid))<SUB>1768</SUB>> ]
+"9887" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1769</SUB>> ]
+"9890" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1770</SUB>> ]
+"9909" [label = <(soa,soa(env))<SUB>1771</SUB>> ]
+"9912" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1772</SUB>> ]
+"9918" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1773</SUB>> ]
+"9888" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1769</SUB>> ]
+"9913" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1772</SUB>> ]
+"9919" [label = <(GetI,result.GetI())<SUB>1773</SUB>> ]
+"9920" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1773</SUB>> ]
+"9894" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1770</SUB>> ]
+"9922" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1773</SUB>> ]
+"9895" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1770</SUB>> ]
+"9899" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1770</SUB>> ]
+"9906" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1770</SUB>> ]
+"9900" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1770</SUB>> ]
+"9901" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1770</SUB>> ]
+"9903" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1770</SUB>> ]
+"9877" [label = <(METHOD,CallStaticIntMethod)<SUB>1766</SUB>> ]
+"9923" [label = <(METHOD_RETURN,jint)<SUB>1766</SUB>> ]
   "9883" -> "9888" 
   "9887" -> "9890" 
   "9890" -> "9895" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/175-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/175-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/175-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/175-cfg.dot	2023-06-07 19:35:47.957382791 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticIntMethodV" {  
-"9931" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1778</SUB>> ]
-"9950" [label = <(soa,soa(env))<SUB>1779</SUB>> ]
-"9952" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();)<SUB>1780</SUB>> ]
-"9953" [label = <(GetI,InvokeWithVarArgs(soa, nullptr, mid, args).GetI())<SUB>1780</SUB>> ]
-"9954" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetI)<SUB>1780</SUB>> ]
-"9935" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1778</SUB>> ]
-"9955" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1780</SUB>> ]
-"9960" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1780</SUB>> ]
-"9936" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1778</SUB>> ]
-"9940" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1778</SUB>> ]
-"9947" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1778</SUB>> ]
-"9941" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1778</SUB>> ]
-"9942" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1778</SUB>> ]
-"9944" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1778</SUB>> ]
-"9925" [label = <(METHOD,CallStaticIntMethodV)<SUB>1777</SUB>> ]
-"9961" [label = <(METHOD_RETURN,jint)<SUB>1777</SUB>> ]
+"9931" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1777</SUB>> ]
+"9950" [label = <(soa,soa(env))<SUB>1778</SUB>> ]
+"9952" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();)<SUB>1779</SUB>> ]
+"9953" [label = <(GetI,InvokeWithVarArgs(soa, nullptr, mid, args).GetI())<SUB>1779</SUB>> ]
+"9954" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetI)<SUB>1779</SUB>> ]
+"9935" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1777</SUB>> ]
+"9955" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1779</SUB>> ]
+"9960" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1779</SUB>> ]
+"9936" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1777</SUB>> ]
+"9940" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1777</SUB>> ]
+"9947" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1777</SUB>> ]
+"9941" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1777</SUB>> ]
+"9942" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1777</SUB>> ]
+"9944" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1777</SUB>> ]
+"9925" [label = <(METHOD,CallStaticIntMethodV)<SUB>1776</SUB>> ]
+"9961" [label = <(METHOD_RETURN,jint)<SUB>1776</SUB>> ]
   "9931" -> "9936" 
   "9931" -> "9950" 
   "9950" -> "9955" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/176-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/176-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/176-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/176-cfg.dot	2023-06-07 19:35:47.957382791 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticIntMethodA" {  
-"9969" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1784</SUB>> ]
-"9988" [label = <(soa,soa(env))<SUB>1785</SUB>> ]
-"9990" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetI();,return InvokeWithJValues(soa, nullptr, mid, args).GetI();)<SUB>1786</SUB>> ]
-"9991" [label = <(GetI,InvokeWithJValues(soa, nullptr, mid, args).GetI())<SUB>1786</SUB>> ]
-"9992" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetI)<SUB>1786</SUB>> ]
-"9973" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1784</SUB>> ]
-"9993" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1786</SUB>> ]
-"9998" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1786</SUB>> ]
-"9974" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1784</SUB>> ]
-"9978" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1784</SUB>> ]
-"9985" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1784</SUB>> ]
-"9979" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1784</SUB>> ]
-"9980" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1784</SUB>> ]
-"9982" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1784</SUB>> ]
-"9963" [label = <(METHOD,CallStaticIntMethodA)<SUB>1783</SUB>> ]
-"9999" [label = <(METHOD_RETURN,jint)<SUB>1783</SUB>> ]
+"9969" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1783</SUB>> ]
+"9988" [label = <(soa,soa(env))<SUB>1784</SUB>> ]
+"9990" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetI();,return InvokeWithJValues(soa, nullptr, mid, args).GetI();)<SUB>1785</SUB>> ]
+"9991" [label = <(GetI,InvokeWithJValues(soa, nullptr, mid, args).GetI())<SUB>1785</SUB>> ]
+"9992" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetI)<SUB>1785</SUB>> ]
+"9973" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1783</SUB>> ]
+"9993" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1785</SUB>> ]
+"9998" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1785</SUB>> ]
+"9974" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1783</SUB>> ]
+"9978" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1783</SUB>> ]
+"9985" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1783</SUB>> ]
+"9979" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1783</SUB>> ]
+"9980" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1783</SUB>> ]
+"9982" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1783</SUB>> ]
+"9963" [label = <(METHOD,CallStaticIntMethodA)<SUB>1782</SUB>> ]
+"9999" [label = <(METHOD_RETURN,jint)<SUB>1782</SUB>> ]
   "9969" -> "9974" 
   "9969" -> "9988" 
   "9988" -> "9993" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/177-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/177-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/177-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/177-cfg.dot	2023-06-07 19:35:47.957382791 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticLongMethod" {  
-"10007" [label = <(va_start,va_start(ap, mid))<SUB>1791</SUB>> ]
-"10011" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1792</SUB>> ]
-"10014" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1793</SUB>> ]
-"10033" [label = <(soa,soa(env))<SUB>1794</SUB>> ]
-"10036" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1795</SUB>> ]
-"10042" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1796</SUB>> ]
-"10012" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1792</SUB>> ]
-"10037" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1795</SUB>> ]
-"10043" [label = <(GetJ,result.GetJ())<SUB>1796</SUB>> ]
-"10044" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1796</SUB>> ]
-"10018" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1793</SUB>> ]
-"10046" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1796</SUB>> ]
-"10019" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1793</SUB>> ]
-"10023" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1793</SUB>> ]
-"10030" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1793</SUB>> ]
-"10024" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1793</SUB>> ]
-"10025" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1793</SUB>> ]
-"10027" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1793</SUB>> ]
-"10001" [label = <(METHOD,CallStaticLongMethod)<SUB>1789</SUB>> ]
-"10047" [label = <(METHOD_RETURN,jlong)<SUB>1789</SUB>> ]
+"10007" [label = <(va_start,va_start(ap, mid))<SUB>1790</SUB>> ]
+"10011" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1791</SUB>> ]
+"10014" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1792</SUB>> ]
+"10033" [label = <(soa,soa(env))<SUB>1793</SUB>> ]
+"10036" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1794</SUB>> ]
+"10042" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1795</SUB>> ]
+"10012" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1791</SUB>> ]
+"10037" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1794</SUB>> ]
+"10043" [label = <(GetJ,result.GetJ())<SUB>1795</SUB>> ]
+"10044" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1795</SUB>> ]
+"10018" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1792</SUB>> ]
+"10046" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1795</SUB>> ]
+"10019" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1792</SUB>> ]
+"10023" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1792</SUB>> ]
+"10030" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1792</SUB>> ]
+"10024" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1792</SUB>> ]
+"10025" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1792</SUB>> ]
+"10027" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1792</SUB>> ]
+"10001" [label = <(METHOD,CallStaticLongMethod)<SUB>1788</SUB>> ]
+"10047" [label = <(METHOD_RETURN,jlong)<SUB>1788</SUB>> ]
   "10007" -> "10012" 
   "10011" -> "10014" 
   "10014" -> "10019" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/178-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/178-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/178-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/178-cfg.dot	2023-06-07 19:35:47.957382791 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticLongMethodV" {  
-"10055" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1800</SUB>> ]
-"10074" [label = <(soa,soa(env))<SUB>1801</SUB>> ]
-"10076" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();)<SUB>1802</SUB>> ]
-"10077" [label = <(GetJ,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ())<SUB>1802</SUB>> ]
-"10078" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ)<SUB>1802</SUB>> ]
-"10059" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1800</SUB>> ]
-"10079" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1802</SUB>> ]
-"10084" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1802</SUB>> ]
-"10060" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1800</SUB>> ]
-"10064" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1800</SUB>> ]
-"10071" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1800</SUB>> ]
-"10065" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1800</SUB>> ]
-"10066" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1800</SUB>> ]
-"10068" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1800</SUB>> ]
-"10049" [label = <(METHOD,CallStaticLongMethodV)<SUB>1799</SUB>> ]
-"10085" [label = <(METHOD_RETURN,jlong)<SUB>1799</SUB>> ]
+"10055" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1799</SUB>> ]
+"10074" [label = <(soa,soa(env))<SUB>1800</SUB>> ]
+"10076" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();)<SUB>1801</SUB>> ]
+"10077" [label = <(GetJ,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ())<SUB>1801</SUB>> ]
+"10078" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ)<SUB>1801</SUB>> ]
+"10059" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1799</SUB>> ]
+"10079" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1801</SUB>> ]
+"10084" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1801</SUB>> ]
+"10060" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1799</SUB>> ]
+"10064" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1799</SUB>> ]
+"10071" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1799</SUB>> ]
+"10065" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1799</SUB>> ]
+"10066" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1799</SUB>> ]
+"10068" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1799</SUB>> ]
+"10049" [label = <(METHOD,CallStaticLongMethodV)<SUB>1798</SUB>> ]
+"10085" [label = <(METHOD_RETURN,jlong)<SUB>1798</SUB>> ]
   "10055" -> "10060" 
   "10055" -> "10074" 
   "10074" -> "10079" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/179-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/179-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/179-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/179-cfg.dot	2023-06-07 19:35:47.957382791 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticLongMethodA" {  
-"10093" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1806</SUB>> ]
-"10112" [label = <(soa,soa(env))<SUB>1807</SUB>> ]
-"10114" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();)<SUB>1808</SUB>> ]
-"10115" [label = <(GetJ,InvokeWithJValues(soa, nullptr, mid, args).GetJ())<SUB>1808</SUB>> ]
-"10116" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetJ)<SUB>1808</SUB>> ]
-"10097" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1806</SUB>> ]
-"10117" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1808</SUB>> ]
-"10122" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1808</SUB>> ]
-"10098" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1806</SUB>> ]
-"10102" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1806</SUB>> ]
-"10109" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1806</SUB>> ]
-"10103" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1806</SUB>> ]
-"10104" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1806</SUB>> ]
-"10106" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1806</SUB>> ]
-"10087" [label = <(METHOD,CallStaticLongMethodA)<SUB>1805</SUB>> ]
-"10123" [label = <(METHOD_RETURN,jlong)<SUB>1805</SUB>> ]
+"10093" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1805</SUB>> ]
+"10112" [label = <(soa,soa(env))<SUB>1806</SUB>> ]
+"10114" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();)<SUB>1807</SUB>> ]
+"10115" [label = <(GetJ,InvokeWithJValues(soa, nullptr, mid, args).GetJ())<SUB>1807</SUB>> ]
+"10116" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetJ)<SUB>1807</SUB>> ]
+"10097" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1805</SUB>> ]
+"10117" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1807</SUB>> ]
+"10122" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1807</SUB>> ]
+"10098" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1805</SUB>> ]
+"10102" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1805</SUB>> ]
+"10109" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1805</SUB>> ]
+"10103" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1805</SUB>> ]
+"10104" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1805</SUB>> ]
+"10106" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1805</SUB>> ]
+"10087" [label = <(METHOD,CallStaticLongMethodA)<SUB>1804</SUB>> ]
+"10123" [label = <(METHOD_RETURN,jlong)<SUB>1804</SUB>> ]
   "10093" -> "10098" 
   "10093" -> "10112" 
   "10112" -> "10117" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/18-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/18-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/18-cfg.dot	2023-06-07 19:35:41.347383235 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/18-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowSIOOBE" {  
-"430" [label = <(METHOD,ThrowSIOOBE)<SUB>357</SUB>> ]
-"436" [label = <(METHOD_RETURN,void)<SUB>357</SUB>> ]
+"430" [label = <(METHOD,ThrowSIOOBE)<SUB>356</SUB>> ]
+"436" [label = <(METHOD_RETURN,void)<SUB>356</SUB>> ]
   "430" -> "436" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/180-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/180-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/180-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/180-cfg.dot	2023-06-07 19:35:47.957382791 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticFloatMethod" {  
-"10131" [label = <(va_start,va_start(ap, mid))<SUB>1813</SUB>> ]
-"10135" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1814</SUB>> ]
-"10138" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1815</SUB>> ]
-"10157" [label = <(soa,soa(env))<SUB>1816</SUB>> ]
-"10160" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1817</SUB>> ]
-"10166" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1818</SUB>> ]
-"10136" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1814</SUB>> ]
-"10161" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1817</SUB>> ]
-"10167" [label = <(GetF,result.GetF())<SUB>1818</SUB>> ]
-"10168" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1818</SUB>> ]
-"10142" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1815</SUB>> ]
-"10170" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1818</SUB>> ]
-"10143" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1815</SUB>> ]
-"10147" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1815</SUB>> ]
-"10154" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1815</SUB>> ]
-"10148" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1815</SUB>> ]
-"10149" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1815</SUB>> ]
-"10151" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1815</SUB>> ]
-"10125" [label = <(METHOD,CallStaticFloatMethod)<SUB>1811</SUB>> ]
-"10171" [label = <(METHOD_RETURN,jfloat)<SUB>1811</SUB>> ]
+"10131" [label = <(va_start,va_start(ap, mid))<SUB>1812</SUB>> ]
+"10135" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1813</SUB>> ]
+"10138" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1814</SUB>> ]
+"10157" [label = <(soa,soa(env))<SUB>1815</SUB>> ]
+"10160" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1816</SUB>> ]
+"10166" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1817</SUB>> ]
+"10136" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1813</SUB>> ]
+"10161" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1816</SUB>> ]
+"10167" [label = <(GetF,result.GetF())<SUB>1817</SUB>> ]
+"10168" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1817</SUB>> ]
+"10142" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1814</SUB>> ]
+"10170" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1817</SUB>> ]
+"10143" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1814</SUB>> ]
+"10147" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1814</SUB>> ]
+"10154" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1814</SUB>> ]
+"10148" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1814</SUB>> ]
+"10149" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1814</SUB>> ]
+"10151" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1814</SUB>> ]
+"10125" [label = <(METHOD,CallStaticFloatMethod)<SUB>1810</SUB>> ]
+"10171" [label = <(METHOD_RETURN,jfloat)<SUB>1810</SUB>> ]
   "10131" -> "10136" 
   "10135" -> "10138" 
   "10138" -> "10143" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/181-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/181-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/181-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/181-cfg.dot	2023-06-07 19:35:47.957382791 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticFloatMethodV" {  
-"10179" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1822</SUB>> ]
-"10198" [label = <(soa,soa(env))<SUB>1823</SUB>> ]
-"10200" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();)<SUB>1824</SUB>> ]
-"10201" [label = <(GetF,InvokeWithVarArgs(soa, nullptr, mid, args).GetF())<SUB>1824</SUB>> ]
-"10202" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetF)<SUB>1824</SUB>> ]
-"10183" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1822</SUB>> ]
-"10203" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1824</SUB>> ]
-"10208" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1824</SUB>> ]
-"10184" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1822</SUB>> ]
-"10188" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1822</SUB>> ]
-"10195" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1822</SUB>> ]
-"10189" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1822</SUB>> ]
-"10190" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1822</SUB>> ]
-"10192" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1822</SUB>> ]
-"10173" [label = <(METHOD,CallStaticFloatMethodV)<SUB>1821</SUB>> ]
-"10209" [label = <(METHOD_RETURN,jfloat)<SUB>1821</SUB>> ]
+"10179" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1821</SUB>> ]
+"10198" [label = <(soa,soa(env))<SUB>1822</SUB>> ]
+"10200" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();)<SUB>1823</SUB>> ]
+"10201" [label = <(GetF,InvokeWithVarArgs(soa, nullptr, mid, args).GetF())<SUB>1823</SUB>> ]
+"10202" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetF)<SUB>1823</SUB>> ]
+"10183" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1821</SUB>> ]
+"10203" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1823</SUB>> ]
+"10208" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1823</SUB>> ]
+"10184" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1821</SUB>> ]
+"10188" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1821</SUB>> ]
+"10195" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1821</SUB>> ]
+"10189" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1821</SUB>> ]
+"10190" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1821</SUB>> ]
+"10192" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1821</SUB>> ]
+"10173" [label = <(METHOD,CallStaticFloatMethodV)<SUB>1820</SUB>> ]
+"10209" [label = <(METHOD_RETURN,jfloat)<SUB>1820</SUB>> ]
   "10179" -> "10184" 
   "10179" -> "10198" 
   "10198" -> "10203" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/182-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/182-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/182-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/182-cfg.dot	2023-06-07 19:35:47.957382791 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticFloatMethodA" {  
-"10217" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1828</SUB>> ]
-"10236" [label = <(soa,soa(env))<SUB>1829</SUB>> ]
-"10238" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetF();,return InvokeWithJValues(soa, nullptr, mid, args).GetF();)<SUB>1830</SUB>> ]
-"10239" [label = <(GetF,InvokeWithJValues(soa, nullptr, mid, args).GetF())<SUB>1830</SUB>> ]
-"10240" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetF)<SUB>1830</SUB>> ]
-"10221" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1828</SUB>> ]
-"10241" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1830</SUB>> ]
-"10246" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1830</SUB>> ]
-"10222" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1828</SUB>> ]
-"10226" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1828</SUB>> ]
-"10233" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1828</SUB>> ]
-"10227" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1828</SUB>> ]
-"10228" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1828</SUB>> ]
-"10230" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1828</SUB>> ]
-"10211" [label = <(METHOD,CallStaticFloatMethodA)<SUB>1827</SUB>> ]
-"10247" [label = <(METHOD_RETURN,jfloat)<SUB>1827</SUB>> ]
+"10217" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1827</SUB>> ]
+"10236" [label = <(soa,soa(env))<SUB>1828</SUB>> ]
+"10238" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetF();,return InvokeWithJValues(soa, nullptr, mid, args).GetF();)<SUB>1829</SUB>> ]
+"10239" [label = <(GetF,InvokeWithJValues(soa, nullptr, mid, args).GetF())<SUB>1829</SUB>> ]
+"10240" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetF)<SUB>1829</SUB>> ]
+"10221" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1827</SUB>> ]
+"10241" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1829</SUB>> ]
+"10246" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1829</SUB>> ]
+"10222" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1827</SUB>> ]
+"10226" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1827</SUB>> ]
+"10233" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1827</SUB>> ]
+"10227" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1827</SUB>> ]
+"10228" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1827</SUB>> ]
+"10230" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1827</SUB>> ]
+"10211" [label = <(METHOD,CallStaticFloatMethodA)<SUB>1826</SUB>> ]
+"10247" [label = <(METHOD_RETURN,jfloat)<SUB>1826</SUB>> ]
   "10217" -> "10222" 
   "10217" -> "10236" 
   "10236" -> "10241" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/183-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/183-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/183-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/183-cfg.dot	2023-06-07 19:35:47.957382791 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticDoubleMethod" {  
-"10255" [label = <(va_start,va_start(ap, mid))<SUB>1835</SUB>> ]
-"10259" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1836</SUB>> ]
-"10262" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1837</SUB>> ]
-"10281" [label = <(soa,soa(env))<SUB>1838</SUB>> ]
-"10284" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1839</SUB>> ]
-"10290" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1840</SUB>> ]
-"10260" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1836</SUB>> ]
-"10285" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1839</SUB>> ]
-"10291" [label = <(GetD,result.GetD())<SUB>1840</SUB>> ]
-"10292" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1840</SUB>> ]
-"10266" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1837</SUB>> ]
-"10294" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1840</SUB>> ]
-"10267" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1837</SUB>> ]
-"10271" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1837</SUB>> ]
-"10278" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1837</SUB>> ]
-"10272" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1837</SUB>> ]
-"10273" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1837</SUB>> ]
-"10275" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1837</SUB>> ]
-"10249" [label = <(METHOD,CallStaticDoubleMethod)<SUB>1833</SUB>> ]
-"10295" [label = <(METHOD_RETURN,jdouble)<SUB>1833</SUB>> ]
+"10255" [label = <(va_start,va_start(ap, mid))<SUB>1834</SUB>> ]
+"10259" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1835</SUB>> ]
+"10262" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1836</SUB>> ]
+"10281" [label = <(soa,soa(env))<SUB>1837</SUB>> ]
+"10284" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1838</SUB>> ]
+"10290" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1839</SUB>> ]
+"10260" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1835</SUB>> ]
+"10285" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1838</SUB>> ]
+"10291" [label = <(GetD,result.GetD())<SUB>1839</SUB>> ]
+"10292" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1839</SUB>> ]
+"10266" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1836</SUB>> ]
+"10294" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1839</SUB>> ]
+"10267" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1836</SUB>> ]
+"10271" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1836</SUB>> ]
+"10278" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1836</SUB>> ]
+"10272" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1836</SUB>> ]
+"10273" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1836</SUB>> ]
+"10275" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1836</SUB>> ]
+"10249" [label = <(METHOD,CallStaticDoubleMethod)<SUB>1832</SUB>> ]
+"10295" [label = <(METHOD_RETURN,jdouble)<SUB>1832</SUB>> ]
   "10255" -> "10260" 
   "10259" -> "10262" 
   "10262" -> "10267" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/184-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/184-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/184-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/184-cfg.dot	2023-06-07 19:35:47.967382788 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticDoubleMethodV" {  
-"10303" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1844</SUB>> ]
-"10322" [label = <(soa,soa(env))<SUB>1845</SUB>> ]
-"10324" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();)<SUB>1846</SUB>> ]
-"10325" [label = <(GetD,InvokeWithVarArgs(soa, nullptr, mid, args).GetD())<SUB>1846</SUB>> ]
-"10326" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetD)<SUB>1846</SUB>> ]
-"10307" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1844</SUB>> ]
-"10327" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1846</SUB>> ]
-"10332" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1846</SUB>> ]
-"10308" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1844</SUB>> ]
-"10312" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1844</SUB>> ]
-"10319" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1844</SUB>> ]
-"10313" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1844</SUB>> ]
-"10314" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1844</SUB>> ]
-"10316" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1844</SUB>> ]
-"10297" [label = <(METHOD,CallStaticDoubleMethodV)<SUB>1843</SUB>> ]
-"10333" [label = <(METHOD_RETURN,jdouble)<SUB>1843</SUB>> ]
+"10303" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1843</SUB>> ]
+"10322" [label = <(soa,soa(env))<SUB>1844</SUB>> ]
+"10324" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();)<SUB>1845</SUB>> ]
+"10325" [label = <(GetD,InvokeWithVarArgs(soa, nullptr, mid, args).GetD())<SUB>1845</SUB>> ]
+"10326" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetD)<SUB>1845</SUB>> ]
+"10307" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1843</SUB>> ]
+"10327" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1845</SUB>> ]
+"10332" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1845</SUB>> ]
+"10308" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1843</SUB>> ]
+"10312" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1843</SUB>> ]
+"10319" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1843</SUB>> ]
+"10313" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1843</SUB>> ]
+"10314" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1843</SUB>> ]
+"10316" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1843</SUB>> ]
+"10297" [label = <(METHOD,CallStaticDoubleMethodV)<SUB>1842</SUB>> ]
+"10333" [label = <(METHOD_RETURN,jdouble)<SUB>1842</SUB>> ]
   "10303" -> "10308" 
   "10303" -> "10322" 
   "10322" -> "10327" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/185-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/185-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/185-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/185-cfg.dot	2023-06-07 19:35:47.967382788 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticDoubleMethodA" {  
-"10341" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1850</SUB>> ]
-"10360" [label = <(soa,soa(env))<SUB>1851</SUB>> ]
-"10362" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetD();,return InvokeWithJValues(soa, nullptr, mid, args).GetD();)<SUB>1852</SUB>> ]
-"10363" [label = <(GetD,InvokeWithJValues(soa, nullptr, mid, args).GetD())<SUB>1852</SUB>> ]
-"10364" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetD)<SUB>1852</SUB>> ]
-"10345" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1850</SUB>> ]
-"10365" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1852</SUB>> ]
-"10370" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1852</SUB>> ]
-"10346" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1850</SUB>> ]
-"10350" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1850</SUB>> ]
-"10357" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1850</SUB>> ]
-"10351" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1850</SUB>> ]
-"10352" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1850</SUB>> ]
-"10354" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1850</SUB>> ]
-"10335" [label = <(METHOD,CallStaticDoubleMethodA)<SUB>1849</SUB>> ]
-"10371" [label = <(METHOD_RETURN,jdouble)<SUB>1849</SUB>> ]
+"10341" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1849</SUB>> ]
+"10360" [label = <(soa,soa(env))<SUB>1850</SUB>> ]
+"10362" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetD();,return InvokeWithJValues(soa, nullptr, mid, args).GetD();)<SUB>1851</SUB>> ]
+"10363" [label = <(GetD,InvokeWithJValues(soa, nullptr, mid, args).GetD())<SUB>1851</SUB>> ]
+"10364" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetD)<SUB>1851</SUB>> ]
+"10345" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1849</SUB>> ]
+"10365" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1851</SUB>> ]
+"10370" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1851</SUB>> ]
+"10346" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1849</SUB>> ]
+"10350" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1849</SUB>> ]
+"10357" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1849</SUB>> ]
+"10351" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1849</SUB>> ]
+"10352" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1849</SUB>> ]
+"10354" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1849</SUB>> ]
+"10335" [label = <(METHOD,CallStaticDoubleMethodA)<SUB>1848</SUB>> ]
+"10371" [label = <(METHOD_RETURN,jdouble)<SUB>1848</SUB>> ]
   "10341" -> "10346" 
   "10341" -> "10360" 
   "10360" -> "10365" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/186-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/186-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/186-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/186-cfg.dot	2023-06-07 19:35:47.967382788 +0330
@@ -1,19 +1,19 @@
 digraph "CallStaticVoidMethod" {  
-"10379" [label = <(va_start,va_start(ap, mid))<SUB>1857</SUB>> ]
-"10383" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1858</SUB>> ]
-"10386" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1859</SUB>> ]
-"10404" [label = <(soa,soa(env))<SUB>1860</SUB>> ]
-"10406" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1861</SUB>> ]
-"10384" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1858</SUB>> ]
-"10390" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1859</SUB>> ]
-"10391" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1859</SUB>> ]
-"10395" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1859</SUB>> ]
-"10402" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1859</SUB>> ]
-"10396" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1859</SUB>> ]
-"10397" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1859</SUB>> ]
-"10399" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1859</SUB>> ]
-"10373" [label = <(METHOD,CallStaticVoidMethod)<SUB>1855</SUB>> ]
-"10411" [label = <(METHOD_RETURN,void)<SUB>1855</SUB>> ]
+"10379" [label = <(va_start,va_start(ap, mid))<SUB>1856</SUB>> ]
+"10383" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1857</SUB>> ]
+"10386" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1858</SUB>> ]
+"10404" [label = <(soa,soa(env))<SUB>1859</SUB>> ]
+"10406" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1860</SUB>> ]
+"10384" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1857</SUB>> ]
+"10390" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1858</SUB>> ]
+"10391" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1858</SUB>> ]
+"10395" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1858</SUB>> ]
+"10402" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1858</SUB>> ]
+"10396" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1858</SUB>> ]
+"10397" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1858</SUB>> ]
+"10399" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1858</SUB>> ]
+"10373" [label = <(METHOD,CallStaticVoidMethod)<SUB>1854</SUB>> ]
+"10411" [label = <(METHOD_RETURN,void)<SUB>1854</SUB>> ]
   "10379" -> "10384" 
   "10383" -> "10386" 
   "10386" -> "10391" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/187-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/187-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/187-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/187-cfg.dot	2023-06-07 19:35:47.967382788 +0330
@@ -1,16 +1,16 @@
 digraph "CallStaticVoidMethodV" {  
-"10419" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1865</SUB>> ]
-"10437" [label = <(soa,soa(env))<SUB>1866</SUB>> ]
-"10439" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1867</SUB>> ]
-"10423" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1865</SUB>> ]
-"10424" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1865</SUB>> ]
-"10428" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1865</SUB>> ]
-"10435" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1865</SUB>> ]
-"10429" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1865</SUB>> ]
-"10430" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1865</SUB>> ]
-"10432" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1865</SUB>> ]
-"10413" [label = <(METHOD,CallStaticVoidMethodV)<SUB>1864</SUB>> ]
-"10444" [label = <(METHOD_RETURN,void)<SUB>1864</SUB>> ]
+"10419" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1864</SUB>> ]
+"10437" [label = <(soa,soa(env))<SUB>1865</SUB>> ]
+"10439" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1866</SUB>> ]
+"10423" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1864</SUB>> ]
+"10424" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1864</SUB>> ]
+"10428" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1864</SUB>> ]
+"10435" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1864</SUB>> ]
+"10429" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1864</SUB>> ]
+"10430" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1864</SUB>> ]
+"10432" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1864</SUB>> ]
+"10413" [label = <(METHOD,CallStaticVoidMethodV)<SUB>1863</SUB>> ]
+"10444" [label = <(METHOD_RETURN,void)<SUB>1863</SUB>> ]
   "10419" -> "10424" 
   "10419" -> "10437" 
   "10437" -> "10439" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/188-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/188-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/188-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/188-cfg.dot	2023-06-07 19:35:47.967382788 +0330
@@ -1,16 +1,16 @@
 digraph "CallStaticVoidMethodA" {  
-"10452" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1871</SUB>> ]
-"10470" [label = <(soa,soa(env))<SUB>1872</SUB>> ]
-"10472" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1873</SUB>> ]
-"10456" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1871</SUB>> ]
-"10457" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1871</SUB>> ]
-"10461" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1871</SUB>> ]
-"10468" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1871</SUB>> ]
-"10462" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1871</SUB>> ]
-"10463" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1871</SUB>> ]
-"10465" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1871</SUB>> ]
-"10446" [label = <(METHOD,CallStaticVoidMethodA)<SUB>1870</SUB>> ]
-"10477" [label = <(METHOD_RETURN,void)<SUB>1870</SUB>> ]
+"10452" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1870</SUB>> ]
+"10470" [label = <(soa,soa(env))<SUB>1871</SUB>> ]
+"10472" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1872</SUB>> ]
+"10456" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1870</SUB>> ]
+"10457" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1870</SUB>> ]
+"10461" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1870</SUB>> ]
+"10468" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1870</SUB>> ]
+"10462" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1870</SUB>> ]
+"10463" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1870</SUB>> ]
+"10465" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1870</SUB>> ]
+"10446" [label = <(METHOD,CallStaticVoidMethodA)<SUB>1869</SUB>> ]
+"10477" [label = <(METHOD_RETURN,void)<SUB>1869</SUB>> ]
   "10452" -> "10457" 
   "10452" -> "10470" 
   "10470" -> "10472" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/189-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/189-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/189-cfg.dot	2023-06-07 19:35:41.507383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/189-cfg.dot	2023-06-07 19:35:47.967382788 +0330
@@ -1,40 +1,40 @@
 digraph "NewString" {  
-"10520" [label = <(soa,soa(env))<SUB>1885</SUB>> ]
-"10522" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; result = mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1886</SUB>> ]
-"10542" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1887</SUB>> ]
-"10485" [label = <(UNLIKELY,UNLIKELY(char_count &lt; 0))<SUB>1877</SUB>> ]
-"10501" [label = <(UNLIKELY,UNLIKELY(chars == nullptr &amp;&amp; char_count &gt; 0))<SUB>1881</SUB>> ]
-"10523" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; result)<SUB>1886</SUB>> ]
-"10530" [label = <(mirror::String::AllocFromUtf16,mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1886</SUB>> ]
-"10543" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1887</SUB>> ]
-"10486" [label = <(&lt;operator&gt;.lessThan,char_count &lt; 0)<SUB>1877</SUB>> ]
-"10490" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;char_count &lt; 0: %d&quot;, char_count))<SUB>1878</SUB>> ]
-"10498" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1879</SUB>> ]
-"10502" [label = <(&lt;operator&gt;.logicalAnd,chars == nullptr &amp;&amp; char_count &gt; 0)<SUB>1881</SUB>> ]
-"10510" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;chars == null &amp;&amp; char_count &gt; 0&quot;))<SUB>1882</SUB>> ]
-"10517" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1883</SUB>> ]
-"10524" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1886</SUB>> ]
-"10531" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromUtf16)<SUB>1886</SUB>> ]
-"10536" [label = <(Self,soa.Self())<SUB>1886</SUB>> ]
-"10544" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1887</SUB>> ]
-"10491" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1878</SUB>> ]
-"10503" [label = <(&lt;operator&gt;.equals,chars == nullptr)<SUB>1881</SUB>> ]
-"10506" [label = <(&lt;operator&gt;.greaterThan,char_count &gt; 0)<SUB>1881</SUB>> ]
-"10511" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1882</SUB>> ]
-"10526" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1886</SUB>> ]
-"10532" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1886</SUB>> ]
-"10535" [label = <(FIELD_IDENTIFIER,AllocFromUtf16,AllocFromUtf16)<SUB>1886</SUB>> ]
-"10537" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1886</SUB>> ]
-"10545" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1887</SUB>> ]
-"10492" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1878</SUB>> ]
-"10494" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1878</SUB>> ]
-"10512" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1882</SUB>> ]
-"10514" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1882</SUB>> ]
-"10528" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1886</SUB>> ]
-"10539" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1886</SUB>> ]
-"10547" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1887</SUB>> ]
-"10479" [label = <(METHOD,NewString)<SUB>1876</SUB>> ]
-"10550" [label = <(METHOD_RETURN,jstring)<SUB>1876</SUB>> ]
+"10520" [label = <(soa,soa(env))<SUB>1884</SUB>> ]
+"10522" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; result = mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1885</SUB>> ]
+"10542" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1886</SUB>> ]
+"10485" [label = <(UNLIKELY,UNLIKELY(char_count &lt; 0))<SUB>1876</SUB>> ]
+"10501" [label = <(UNLIKELY,UNLIKELY(chars == nullptr &amp;&amp; char_count &gt; 0))<SUB>1880</SUB>> ]
+"10523" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; result)<SUB>1885</SUB>> ]
+"10530" [label = <(mirror::String::AllocFromUtf16,mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1885</SUB>> ]
+"10543" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1886</SUB>> ]
+"10486" [label = <(&lt;operator&gt;.lessThan,char_count &lt; 0)<SUB>1876</SUB>> ]
+"10490" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;char_count &lt; 0: %d&quot;, char_count))<SUB>1877</SUB>> ]
+"10498" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1878</SUB>> ]
+"10502" [label = <(&lt;operator&gt;.logicalAnd,chars == nullptr &amp;&amp; char_count &gt; 0)<SUB>1880</SUB>> ]
+"10510" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;chars == null &amp;&amp; char_count &gt; 0&quot;))<SUB>1881</SUB>> ]
+"10517" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1882</SUB>> ]
+"10524" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1885</SUB>> ]
+"10531" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromUtf16)<SUB>1885</SUB>> ]
+"10536" [label = <(Self,soa.Self())<SUB>1885</SUB>> ]
+"10544" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1886</SUB>> ]
+"10491" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1877</SUB>> ]
+"10503" [label = <(&lt;operator&gt;.equals,chars == nullptr)<SUB>1880</SUB>> ]
+"10506" [label = <(&lt;operator&gt;.greaterThan,char_count &gt; 0)<SUB>1880</SUB>> ]
+"10511" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1881</SUB>> ]
+"10526" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1885</SUB>> ]
+"10532" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1885</SUB>> ]
+"10535" [label = <(FIELD_IDENTIFIER,AllocFromUtf16,AllocFromUtf16)<SUB>1885</SUB>> ]
+"10537" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1885</SUB>> ]
+"10545" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1886</SUB>> ]
+"10492" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1877</SUB>> ]
+"10494" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1877</SUB>> ]
+"10512" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1881</SUB>> ]
+"10514" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1881</SUB>> ]
+"10528" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1885</SUB>> ]
+"10539" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1885</SUB>> ]
+"10547" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1886</SUB>> ]
+"10479" [label = <(METHOD,NewString)<SUB>1875</SUB>> ]
+"10550" [label = <(METHOD_RETURN,jstring)<SUB>1875</SUB>> ]
   "10520" -> "10528" 
   "10522" -> "10547" 
   "10542" -> "10550" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/19-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/19-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/19-cfg.dot	2023-06-07 19:35:41.357383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/19-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowNoSuchMethodError" {  
-"441" [label = <(METHOD,ThrowNoSuchMethodError)<SUB>365</SUB>> ]
-"448" [label = <(METHOD_RETURN,void)<SUB>365</SUB>> ]
+"441" [label = <(METHOD,ThrowNoSuchMethodError)<SUB>364</SUB>> ]
+"448" [label = <(METHOD_RETURN,void)<SUB>364</SUB>> ]
   "441" -> "448" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/190-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/190-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/190-cfg.dot	2023-06-07 19:35:41.517383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/190-cfg.dot	2023-06-07 19:35:47.967382788 +0330
@@ -1,171 +1,169 @@
 digraph "NewStringUTF" {  
-"10564" [label = <(&lt;operator&gt;.assignment,utf8_length = strlen(utf))<SUB>1899</SUB>> ]
-"10612" [label = <(&lt;operator&gt;.greaterThan,std::optional&lt;std::string&gt; replacement_utf)<SUB>1910</SUB>> ]
-"10622" [label = <(UNKNOWN,t,t)<SUB>1911</SUB>> ]
-"10623" [label = <(UNKNOWN,utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {},utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {})<SUB>1911</SUB>> ]
-"10624" [label = <(UNKNOWN,,\012 /*bad=*/ []() { return true; },,\012 /*bad=*/ []() { return true; })<SUB>1914</SUB>> ]
-"10625" [label = <(UNKNOWN,);,);)<SUB>1915</SUB>> ]
-"10715" [label = <(DCHECK_LE,DCHECK_LE(utf16_length, utf8_length))<SUB>1944</SUB>> ]
-"10718" [label = <(DCHECK_LE,DCHECK_LE(utf8_length, static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1945</SUB>> ]
-"10733" [label = <(soa,soa(env))<SUB>1947</SUB>> ]
-"10735" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; result =\012        mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1948</SUB>> ]
-"10756" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1950</SUB>> ]
-"10557" [label = <(&lt;operator&gt;.equals,utf == nullptr)<SUB>1891</SUB>> ]
-"10566" [label = <(strlen,strlen(utf))<SUB>1899</SUB>> ]
-"10569" [label = <(UNLIKELY,UNLIKELY(utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1900</SUB>> ]
-"10613" [label = <(&lt;operator&gt;.lessThan,std::optional&lt;std::string)<SUB>1910</SUB>> ]
-"10627" [label = <(UNLIKELY,UNLIKELY(utf8_length != 0u &amp;&amp; utf16_length == 0u))<SUB>1916</SUB>> ]
-"10720" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1945</SUB>> ]
-"10736" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; result)<SUB>1948</SUB>> ]
-"10743" [label = <(mirror::String::AllocFromModifiedUtf8,mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1949</SUB>> ]
-"10757" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1950</SUB>> ]
-"10561" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1892</SUB>> ]
-"10570" [label = <(&lt;operator&gt;.greaterThan,utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1900</SUB>> ]
-"10586" [label = <(&lt;operator&gt;.assignment,error =\012          android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1904</SUB>> ]
-"10597" [label = <(soa,soa(env))<SUB>1906</SUB>> ]
-"10599" [label = <(ThrowOutOfMemoryError,soa.Self()-&gt;ThrowOutOfMemoryError(error.c_str()))<SUB>1907</SUB>> ]
-"10610" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1908</SUB>> ]
-"10614" [label = <(&lt;operator&gt;.fieldAccess,std::optional)<SUB>1910</SUB>> ]
-"10617" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>1910</SUB>> ]
-"10628" [label = <(&lt;operator&gt;.logicalAnd,utf8_length != 0u &amp;&amp; utf16_length == 0u)<SUB>1916</SUB>> ]
-"10636" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;172655291&quot;))<SUB>1918</SUB>> ]
-"10640" [label = <(&lt;operator&gt;.assignment,kMinDelay = UINT64_C(10000000000))<SUB>1920</SUB>> ]
-"10645" [label = <(prev_bad_input_time,prev_bad_input_time(UINT64_C(0)))<SUB>1921</SUB>> ]
-"10649" [label = <(&lt;operator&gt;.assignment,prev_time = prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1922</SUB>> ]
-"10659" [label = <(&lt;operator&gt;.assignment,now = NanoTime())<SUB>1923</SUB>> ]
-"10687" [label = <(emplace,replacement_utf.emplace())<SUB>1929</SUB>> ]
-"10691" [label = <(reserve,replacement_utf-&gt;reserve(utf8_length))<SUB>1930</SUB>> ]
-"10696" [label = <(&lt;operator&gt;.assignment,utf16_length = VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>1931</SUB>> ]
-"10703" [label = <(&lt;operator&gt;.assignment,utf = replacement_utf-&gt;c_str())<SUB>1941</SUB>> ]
-"10709" [label = <(&lt;operator&gt;.assignment,utf8_length = replacement_utf-&gt;length())<SUB>1942</SUB>> ]
-"10721" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1945</SUB>> ]
-"10722" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1945</SUB>> ]
-"10737" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1948</SUB>> ]
-"10744" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromModifiedUtf8)<SUB>1949</SUB>> ]
-"10749" [label = <(Self,soa.Self())<SUB>1949</SUB>> ]
-"10758" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1950</SUB>> ]
-"10572" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1900</SUB>> ]
-"10588" [label = <(android::base::StringPrintf,android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1905</SUB>> ]
-"10600" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowOutOfMemoryError)<SUB>1907</SUB>> ]
-"10606" [label = <(c_str,error.c_str())<SUB>1907</SUB>> ]
-"10616" [label = <(FIELD_IDENTIFIER,optional,optional)<SUB>1910</SUB>> ]
-"10619" [label = <(FIELD_IDENTIFIER,string,string)<SUB>1910</SUB>> ]
-"10629" [label = <(&lt;operator&gt;.notEquals,utf8_length != 0u)<SUB>1916</SUB>> ]
-"10632" [label = <(&lt;operator&gt;.equals,utf16_length == 0u)<SUB>1916</SUB>> ]
-"10642" [label = <(UINT64_C,UINT64_C(10000000000))<SUB>1920</SUB>> ]
-"10646" [label = <(UINT64_C,UINT64_C(0))<SUB>1921</SUB>> ]
-"10651" [label = <(load,prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1922</SUB>> ]
-"10661" [label = <(NanoTime,NanoTime())<SUB>1923</SUB>> ]
-"10663" [label = <(&lt;operator&gt;.logicalAnd,(prev_time == 0u || now - prev_time &gt;= kMinDelay) &amp;&amp;\012          prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1924</SUB>> ]
-"10688" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.emplace)<SUB>1929</SUB>> ]
-"10692" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;reserve)<SUB>1930</SUB>> ]
-"10698" [label = <(VisitModifiedUtf8Chars,VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>1931</SUB>> ]
-"10705" [label = <(c_str,replacement_utf-&gt;c_str())<SUB>1941</SUB>> ]
-"10711" [label = <(length,replacement_utf-&gt;length())<SUB>1942</SUB>> ]
-"10723" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1945</SUB>> ]
-"10728" [label = <(::max,::max())<SUB>1945</SUB>> ]
-"10739" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1948</SUB>> ]
-"10745" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1949</SUB>> ]
-"10748" [label = <(FIELD_IDENTIFIER,AllocFromModifiedUtf8,AllocFromModifiedUtf8)<SUB>1949</SUB>> ]
-"10750" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1949</SUB>> ]
-"10759" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1950</SUB>> ]
-"10573" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1900</SUB>> ]
-"10574" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1900</SUB>> ]
-"10589" [label = <(&lt;operator&gt;.fieldAccess,android::base::StringPrintf)<SUB>1905</SUB>> ]
-"10601" [label = <(Self,soa.Self())<SUB>1907</SUB>> ]
-"10605" [label = <(FIELD_IDENTIFIER,ThrowOutOfMemoryError,ThrowOutOfMemoryError)<SUB>1907</SUB>> ]
-"10607" [label = <(&lt;operator&gt;.fieldAccess,error.c_str)<SUB>1907</SUB>> ]
-"10652" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.load)<SUB>1922</SUB>> ]
-"10655" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1922</SUB>> ]
-"10664" [label = <(&lt;operator&gt;.logicalOr,prev_time == 0u || now - prev_time &gt;= kMinDelay)<SUB>1924</SUB>> ]
-"10673" [label = <(compare_exchange_strong,prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1925</SUB>> ]
-"10683" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Invalid UTF-8 input to JNI::NewStringUTF()&quot;)<SUB>1926</SUB>> ]
-"10690" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>1929</SUB>> ]
-"10694" [label = <(FIELD_IDENTIFIER,reserve,reserve)<SUB>1930</SUB>> ]
-"10701" [label = <(METHOD_REF,ANY anonymous_lambda_9 (const char* ptr,size_t length),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>1934</SUB>> ]
-"10702" [label = <(METHOD_REF,ANY anonymous_lambda_10 (),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>1937</SUB>> ]
-"10706" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;c_str)<SUB>1941</SUB>> ]
-"10712" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;length)<SUB>1942</SUB>> ]
-"10724" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1945</SUB>> ]
-"10729" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1945</SUB>> ]
-"10741" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1948</SUB>> ]
-"10752" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1949</SUB>> ]
-"10761" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1950</SUB>> ]
-"10575" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1900</SUB>> ]
-"10580" [label = <(::max,::max())<SUB>1900</SUB>> ]
-"10590" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>1905</SUB>> ]
-"10593" [label = <(FIELD_IDENTIFIER,StringPrintf,StringPrintf)<SUB>1905</SUB>> ]
-"10602" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1907</SUB>> ]
-"10609" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1907</SUB>> ]
-"10654" [label = <(FIELD_IDENTIFIER,load,load)<SUB>1922</SUB>> ]
-"10657" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1922</SUB>> ]
-"10665" [label = <(&lt;operator&gt;.equals,prev_time == 0u)<SUB>1924</SUB>> ]
-"10668" [label = <(&lt;operator&gt;.greaterEqualsThan,now - prev_time &gt;= kMinDelay)<SUB>1924</SUB>> ]
-"10674" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.compare_exchange_strong)<SUB>1925</SUB>> ]
-"10679" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1925</SUB>> ]
-"10684" [label = <(LOG,LOG(ERROR))<SUB>1926</SUB>> ]
-"10708" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1941</SUB>> ]
-"10714" [label = <(FIELD_IDENTIFIER,length,length)<SUB>1942</SUB>> ]
-"10726" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1945</SUB>> ]
-"10731" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1945</SUB>> ]
-"10576" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1900</SUB>> ]
-"10581" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1900</SUB>> ]
-"10604" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1907</SUB>> ]
-"10669" [label = <(&lt;operator&gt;.subtraction,now - prev_time)<SUB>1924</SUB>> ]
-"10676" [label = <(FIELD_IDENTIFIER,compare_exchange_strong,compare_exchange_strong)<SUB>1925</SUB>> ]
-"10681" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1925</SUB>> ]
-"10578" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1900</SUB>> ]
-"10583" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1900</SUB>> ]
-"10552" [label = <(METHOD,NewStringUTF)<SUB>1890</SUB>> ]
-"10764" [label = <(METHOD_RETURN,jstring)<SUB>1890</SUB>> ]
+"10564" [label = <(&lt;operator&gt;.assignment,utf8_length = strlen(utf))<SUB>1898</SUB>> ]
+"10612" [label = <(&lt;operator&gt;.greaterThan,std::optional&lt;std::string&gt; replacement_utf)<SUB>1909</SUB>> ]
+"10622" [label = <(UNKNOWN,t,t)<SUB>1910</SUB>> ]
+"10623" [label = <(UNKNOWN,utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {},utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {})<SUB>1910</SUB>> ]
+"10624" [label = <(UNKNOWN,,\012 /*bad=*/ []() { return true; },,\012 /*bad=*/ []() { return true; })<SUB>1913</SUB>> ]
+"10625" [label = <(UNKNOWN,);,);)<SUB>1914</SUB>> ]
+"10712" [label = <(DCHECK_LE,DCHECK_LE(utf16_length, utf8_length))<SUB>1942</SUB>> ]
+"10715" [label = <(DCHECK_LE,DCHECK_LE(utf8_length, static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1943</SUB>> ]
+"10730" [label = <(soa,soa(env))<SUB>1945</SUB>> ]
+"10732" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; result =\012        mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1946</SUB>> ]
+"10753" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1948</SUB>> ]
+"10557" [label = <(&lt;operator&gt;.equals,utf == nullptr)<SUB>1890</SUB>> ]
+"10566" [label = <(strlen,strlen(utf))<SUB>1898</SUB>> ]
+"10569" [label = <(UNLIKELY,UNLIKELY(utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1899</SUB>> ]
+"10613" [label = <(&lt;operator&gt;.lessThan,std::optional&lt;std::string)<SUB>1909</SUB>> ]
+"10627" [label = <(UNLIKELY,UNLIKELY(utf8_length != 0u &amp;&amp; utf16_length == 0u))<SUB>1915</SUB>> ]
+"10717" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1943</SUB>> ]
+"10733" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; result)<SUB>1946</SUB>> ]
+"10740" [label = <(mirror::String::AllocFromModifiedUtf8,mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1947</SUB>> ]
+"10754" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1948</SUB>> ]
+"10561" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1891</SUB>> ]
+"10570" [label = <(&lt;operator&gt;.greaterThan,utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1899</SUB>> ]
+"10586" [label = <(&lt;operator&gt;.assignment,error =\012          android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1903</SUB>> ]
+"10597" [label = <(soa,soa(env))<SUB>1905</SUB>> ]
+"10599" [label = <(ThrowOutOfMemoryError,soa.Self()-&gt;ThrowOutOfMemoryError(error.c_str()))<SUB>1906</SUB>> ]
+"10610" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1907</SUB>> ]
+"10614" [label = <(&lt;operator&gt;.fieldAccess,std::optional)<SUB>1909</SUB>> ]
+"10617" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>1909</SUB>> ]
+"10628" [label = <(&lt;operator&gt;.logicalAnd,utf8_length != 0u &amp;&amp; utf16_length == 0u)<SUB>1915</SUB>> ]
+"10637" [label = <(&lt;operator&gt;.assignment,kMinDelay = UINT64_C(10000000000))<SUB>1918</SUB>> ]
+"10642" [label = <(prev_bad_input_time,prev_bad_input_time(UINT64_C(0)))<SUB>1919</SUB>> ]
+"10646" [label = <(&lt;operator&gt;.assignment,prev_time = prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1920</SUB>> ]
+"10656" [label = <(&lt;operator&gt;.assignment,now = NanoTime())<SUB>1921</SUB>> ]
+"10684" [label = <(emplace,replacement_utf.emplace())<SUB>1927</SUB>> ]
+"10688" [label = <(reserve,replacement_utf-&gt;reserve(utf8_length))<SUB>1928</SUB>> ]
+"10693" [label = <(&lt;operator&gt;.assignment,utf16_length = VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>1929</SUB>> ]
+"10700" [label = <(&lt;operator&gt;.assignment,utf = replacement_utf-&gt;c_str())<SUB>1939</SUB>> ]
+"10706" [label = <(&lt;operator&gt;.assignment,utf8_length = replacement_utf-&gt;length())<SUB>1940</SUB>> ]
+"10718" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1943</SUB>> ]
+"10719" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1943</SUB>> ]
+"10734" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1946</SUB>> ]
+"10741" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromModifiedUtf8)<SUB>1947</SUB>> ]
+"10746" [label = <(Self,soa.Self())<SUB>1947</SUB>> ]
+"10755" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1948</SUB>> ]
+"10572" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1899</SUB>> ]
+"10588" [label = <(android::base::StringPrintf,android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1904</SUB>> ]
+"10600" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowOutOfMemoryError)<SUB>1906</SUB>> ]
+"10606" [label = <(c_str,error.c_str())<SUB>1906</SUB>> ]
+"10616" [label = <(FIELD_IDENTIFIER,optional,optional)<SUB>1909</SUB>> ]
+"10619" [label = <(FIELD_IDENTIFIER,string,string)<SUB>1909</SUB>> ]
+"10629" [label = <(&lt;operator&gt;.notEquals,utf8_length != 0u)<SUB>1915</SUB>> ]
+"10632" [label = <(&lt;operator&gt;.equals,utf16_length == 0u)<SUB>1915</SUB>> ]
+"10639" [label = <(UINT64_C,UINT64_C(10000000000))<SUB>1918</SUB>> ]
+"10643" [label = <(UINT64_C,UINT64_C(0))<SUB>1919</SUB>> ]
+"10648" [label = <(load,prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1920</SUB>> ]
+"10658" [label = <(NanoTime,NanoTime())<SUB>1921</SUB>> ]
+"10660" [label = <(&lt;operator&gt;.logicalAnd,(prev_time == 0u || now - prev_time &gt;= kMinDelay) &amp;&amp;\012          prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1922</SUB>> ]
+"10685" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.emplace)<SUB>1927</SUB>> ]
+"10689" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;reserve)<SUB>1928</SUB>> ]
+"10695" [label = <(VisitModifiedUtf8Chars,VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>1929</SUB>> ]
+"10702" [label = <(c_str,replacement_utf-&gt;c_str())<SUB>1939</SUB>> ]
+"10708" [label = <(length,replacement_utf-&gt;length())<SUB>1940</SUB>> ]
+"10720" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1943</SUB>> ]
+"10725" [label = <(::max,::max())<SUB>1943</SUB>> ]
+"10736" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1946</SUB>> ]
+"10742" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1947</SUB>> ]
+"10745" [label = <(FIELD_IDENTIFIER,AllocFromModifiedUtf8,AllocFromModifiedUtf8)<SUB>1947</SUB>> ]
+"10747" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1947</SUB>> ]
+"10756" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1948</SUB>> ]
+"10573" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1899</SUB>> ]
+"10574" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1899</SUB>> ]
+"10589" [label = <(&lt;operator&gt;.fieldAccess,android::base::StringPrintf)<SUB>1904</SUB>> ]
+"10601" [label = <(Self,soa.Self())<SUB>1906</SUB>> ]
+"10605" [label = <(FIELD_IDENTIFIER,ThrowOutOfMemoryError,ThrowOutOfMemoryError)<SUB>1906</SUB>> ]
+"10607" [label = <(&lt;operator&gt;.fieldAccess,error.c_str)<SUB>1906</SUB>> ]
+"10649" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.load)<SUB>1920</SUB>> ]
+"10652" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1920</SUB>> ]
+"10661" [label = <(&lt;operator&gt;.logicalOr,prev_time == 0u || now - prev_time &gt;= kMinDelay)<SUB>1922</SUB>> ]
+"10670" [label = <(compare_exchange_strong,prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1923</SUB>> ]
+"10680" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Invalid UTF-8 input to JNI::NewStringUTF()&quot;)<SUB>1924</SUB>> ]
+"10687" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>1927</SUB>> ]
+"10691" [label = <(FIELD_IDENTIFIER,reserve,reserve)<SUB>1928</SUB>> ]
+"10698" [label = <(METHOD_REF,ANY anonymous_lambda_9 (const char* ptr,size_t length),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>1932</SUB>> ]
+"10699" [label = <(METHOD_REF,ANY anonymous_lambda_10 (),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>1935</SUB>> ]
+"10703" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;c_str)<SUB>1939</SUB>> ]
+"10709" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;length)<SUB>1940</SUB>> ]
+"10721" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1943</SUB>> ]
+"10726" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1943</SUB>> ]
+"10738" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1946</SUB>> ]
+"10749" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1947</SUB>> ]
+"10758" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1948</SUB>> ]
+"10575" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1899</SUB>> ]
+"10580" [label = <(::max,::max())<SUB>1899</SUB>> ]
+"10590" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>1904</SUB>> ]
+"10593" [label = <(FIELD_IDENTIFIER,StringPrintf,StringPrintf)<SUB>1904</SUB>> ]
+"10602" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1906</SUB>> ]
+"10609" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1906</SUB>> ]
+"10651" [label = <(FIELD_IDENTIFIER,load,load)<SUB>1920</SUB>> ]
+"10654" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1920</SUB>> ]
+"10662" [label = <(&lt;operator&gt;.equals,prev_time == 0u)<SUB>1922</SUB>> ]
+"10665" [label = <(&lt;operator&gt;.greaterEqualsThan,now - prev_time &gt;= kMinDelay)<SUB>1922</SUB>> ]
+"10671" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.compare_exchange_strong)<SUB>1923</SUB>> ]
+"10676" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1923</SUB>> ]
+"10681" [label = <(LOG,LOG(ERROR))<SUB>1924</SUB>> ]
+"10705" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1939</SUB>> ]
+"10711" [label = <(FIELD_IDENTIFIER,length,length)<SUB>1940</SUB>> ]
+"10723" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1943</SUB>> ]
+"10728" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1943</SUB>> ]
+"10576" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1899</SUB>> ]
+"10581" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1899</SUB>> ]
+"10604" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1906</SUB>> ]
+"10666" [label = <(&lt;operator&gt;.subtraction,now - prev_time)<SUB>1922</SUB>> ]
+"10673" [label = <(FIELD_IDENTIFIER,compare_exchange_strong,compare_exchange_strong)<SUB>1923</SUB>> ]
+"10678" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1923</SUB>> ]
+"10578" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1899</SUB>> ]
+"10583" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1899</SUB>> ]
+"10552" [label = <(METHOD,NewStringUTF)<SUB>1889</SUB>> ]
+"10761" [label = <(METHOD_RETURN,jstring)<SUB>1889</SUB>> ]
   "10564" -> "10573" 
   "10612" -> "10622" 
   "10622" -> "10623" 
   "10623" -> "10624" 
   "10624" -> "10625" 
   "10625" -> "10629" 
-  "10715" -> "10721" 
-  "10718" -> "10733" 
-  "10733" -> "10741" 
-  "10735" -> "10761" 
-  "10756" -> "10764" 
+  "10712" -> "10718" 
+  "10715" -> "10730" 
+  "10730" -> "10738" 
+  "10732" -> "10758" 
+  "10753" -> "10761" 
   "10557" -> "10561" 
   "10557" -> "10566" 
   "10566" -> "10564" 
   "10569" -> "10590" 
   "10569" -> "10616" 
   "10613" -> "10612" 
-  "10627" -> "10636" 
-  "10627" -> "10715" 
-  "10720" -> "10718" 
-  "10736" -> "10745" 
-  "10743" -> "10735" 
-  "10757" -> "10756" 
-  "10561" -> "10764" 
+  "10627" -> "10639" 
+  "10627" -> "10712" 
+  "10717" -> "10715" 
+  "10733" -> "10742" 
+  "10740" -> "10732" 
+  "10754" -> "10753" 
+  "10561" -> "10761" 
   "10570" -> "10569" 
   "10586" -> "10597" 
   "10597" -> "10604" 
   "10599" -> "10610" 
-  "10610" -> "10764" 
+  "10610" -> "10761" 
   "10614" -> "10619" 
   "10617" -> "10613" 
   "10628" -> "10627" 
-  "10636" -> "10642" 
-  "10640" -> "10646" 
-  "10645" -> "10654" 
-  "10649" -> "10661" 
-  "10659" -> "10665" 
-  "10687" -> "10694" 
-  "10691" -> "10701" 
-  "10696" -> "10708" 
-  "10703" -> "10714" 
-  "10709" -> "10715" 
-  "10721" -> "10726" 
-  "10722" -> "10720" 
-  "10737" -> "10736" 
-  "10744" -> "10752" 
-  "10749" -> "10743" 
-  "10758" -> "10757" 
+  "10637" -> "10643" 
+  "10642" -> "10651" 
+  "10646" -> "10658" 
+  "10656" -> "10662" 
+  "10684" -> "10691" 
+  "10688" -> "10698" 
+  "10693" -> "10705" 
+  "10700" -> "10711" 
+  "10706" -> "10712" 
+  "10718" -> "10723" 
+  "10719" -> "10717" 
+  "10734" -> "10733" 
+  "10741" -> "10749" 
+  "10746" -> "10740" 
+  "10755" -> "10754" 
   "10572" -> "10570" 
   "10588" -> "10586" 
   "10600" -> "10609" 
@@ -175,71 +173,71 @@
   "10629" -> "10628" 
   "10629" -> "10632" 
   "10632" -> "10628" 
-  "10642" -> "10640" 
-  "10646" -> "10645" 
-  "10651" -> "10649" 
-  "10661" -> "10659" 
-  "10663" -> "10684" 
-  "10663" -> "10690" 
-  "10688" -> "10687" 
-  "10692" -> "10691" 
-  "10698" -> "10696" 
-  "10705" -> "10703" 
-  "10711" -> "10709" 
-  "10723" -> "10731" 
-  "10728" -> "10722" 
-  "10739" -> "10737" 
-  "10745" -> "10748" 
-  "10748" -> "10744" 
-  "10750" -> "10749" 
-  "10759" -> "10758" 
+  "10639" -> "10637" 
+  "10643" -> "10642" 
+  "10648" -> "10646" 
+  "10658" -> "10656" 
+  "10660" -> "10681" 
+  "10660" -> "10687" 
+  "10685" -> "10684" 
+  "10689" -> "10688" 
+  "10695" -> "10693" 
+  "10702" -> "10700" 
+  "10708" -> "10706" 
+  "10720" -> "10728" 
+  "10725" -> "10719" 
+  "10736" -> "10734" 
+  "10742" -> "10745" 
+  "10745" -> "10741" 
+  "10747" -> "10746" 
+  "10756" -> "10755" 
   "10573" -> "10578" 
   "10574" -> "10572" 
   "10589" -> "10588" 
   "10601" -> "10605" 
   "10605" -> "10600" 
   "10607" -> "10606" 
-  "10652" -> "10657" 
-  "10655" -> "10651" 
-  "10664" -> "10663" 
-  "10664" -> "10676" 
-  "10673" -> "10663" 
-  "10683" -> "10690" 
-  "10690" -> "10688" 
-  "10694" -> "10692" 
-  "10701" -> "10702" 
-  "10702" -> "10698" 
-  "10706" -> "10705" 
-  "10712" -> "10711" 
-  "10724" -> "10723" 
-  "10729" -> "10728" 
-  "10741" -> "10739" 
-  "10752" -> "10750" 
-  "10761" -> "10759" 
+  "10649" -> "10654" 
+  "10652" -> "10648" 
+  "10661" -> "10660" 
+  "10661" -> "10673" 
+  "10670" -> "10660" 
+  "10680" -> "10687" 
+  "10687" -> "10685" 
+  "10691" -> "10689" 
+  "10698" -> "10699" 
+  "10699" -> "10695" 
+  "10703" -> "10702" 
+  "10709" -> "10708" 
+  "10721" -> "10720" 
+  "10726" -> "10725" 
+  "10738" -> "10736" 
+  "10749" -> "10747" 
+  "10758" -> "10756" 
   "10575" -> "10583" 
   "10580" -> "10574" 
   "10590" -> "10593" 
   "10593" -> "10589" 
   "10602" -> "10601" 
   "10609" -> "10607" 
+  "10651" -> "10649" 
   "10654" -> "10652" 
-  "10657" -> "10655" 
-  "10665" -> "10664" 
-  "10665" -> "10669" 
-  "10668" -> "10664" 
-  "10674" -> "10681" 
-  "10679" -> "10673" 
-  "10684" -> "10683" 
-  "10708" -> "10706" 
-  "10714" -> "10712" 
-  "10726" -> "10724" 
-  "10731" -> "10729" 
+  "10662" -> "10661" 
+  "10662" -> "10666" 
+  "10665" -> "10661" 
+  "10671" -> "10678" 
+  "10676" -> "10670" 
+  "10681" -> "10680" 
+  "10705" -> "10703" 
+  "10711" -> "10709" 
+  "10723" -> "10721" 
+  "10728" -> "10726" 
   "10576" -> "10575" 
   "10581" -> "10580" 
   "10604" -> "10602" 
-  "10669" -> "10668" 
-  "10676" -> "10674" 
-  "10681" -> "10679" 
+  "10666" -> "10665" 
+  "10673" -> "10671" 
+  "10678" -> "10676" 
   "10578" -> "10576" 
   "10583" -> "10581" 
   "10552" -> "10557" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/191-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/191-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/191-cfg.dot	2023-06-07 19:35:41.517383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/191-cfg.dot	2023-06-07 19:35:47.977382789 +0330
@@ -1,45 +1,45 @@
 digraph "GetStringLength" {  
-"10770" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1954</SUB>> ]
-"10789" [label = <(soa,soa(env))<SUB>1955</SUB>> ]
-"10791" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();)<SUB>1956</SUB>> ]
-"10792" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength())<SUB>1956</SUB>> ]
-"10793" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1956</SUB>> ]
-"10800" [label = <(GetLength,(java_string)-&gt;GetLength())<SUB>1956</SUB>> ]
-"10774" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1954</SUB>> ]
-"10794" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1956</SUB>> ]
-"10797" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1956</SUB>> ]
-"10801" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetLength)<SUB>1956</SUB>> ]
-"10775" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1954</SUB>> ]
-"10779" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1954</SUB>> ]
-"10786" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1954</SUB>> ]
-"10796" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1956</SUB>> ]
-"10799" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1956</SUB>> ]
-"10803" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1956</SUB>> ]
-"10780" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1954</SUB>> ]
-"10781" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1954</SUB>> ]
-"10783" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1954</SUB>> ]
-"10766" [label = <(METHOD,GetStringLength)<SUB>1953</SUB>> ]
-"10804" [label = <(METHOD_RETURN,jsize)<SUB>1953</SUB>> ]
-  "10770" -> "10775" 
-  "10770" -> "10789" 
-  "10789" -> "10796" 
-  "10791" -> "10804" 
-  "10792" -> "10791" 
-  "10793" -> "10803" 
-  "10800" -> "10792" 
-  "10774" -> "10781" 
-  "10774" -> "10789" 
-  "10794" -> "10799" 
-  "10797" -> "10793" 
-  "10801" -> "10800" 
-  "10775" -> "10774" 
-  "10779" -> "10786" 
-  "10786" -> "10804" 
+"10767" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1952</SUB>> ]
+"10786" [label = <(soa,soa(env))<SUB>1953</SUB>> ]
+"10788" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();)<SUB>1954</SUB>> ]
+"10789" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength())<SUB>1954</SUB>> ]
+"10790" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1954</SUB>> ]
+"10797" [label = <(GetLength,(java_string)-&gt;GetLength())<SUB>1954</SUB>> ]
+"10771" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1952</SUB>> ]
+"10791" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1954</SUB>> ]
+"10794" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1954</SUB>> ]
+"10798" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetLength)<SUB>1954</SUB>> ]
+"10772" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1952</SUB>> ]
+"10776" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1952</SUB>> ]
+"10783" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1952</SUB>> ]
+"10793" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1954</SUB>> ]
+"10796" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1954</SUB>> ]
+"10800" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1954</SUB>> ]
+"10777" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1952</SUB>> ]
+"10778" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1952</SUB>> ]
+"10780" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1952</SUB>> ]
+"10763" [label = <(METHOD,GetStringLength)<SUB>1951</SUB>> ]
+"10801" [label = <(METHOD_RETURN,jsize)<SUB>1951</SUB>> ]
+  "10767" -> "10772" 
+  "10767" -> "10786" 
+  "10786" -> "10793" 
+  "10788" -> "10801" 
+  "10789" -> "10788" 
+  "10790" -> "10800" 
+  "10797" -> "10789" 
+  "10771" -> "10778" 
+  "10771" -> "10786" 
+  "10791" -> "10796" 
+  "10794" -> "10790" 
+  "10798" -> "10797" 
+  "10772" -> "10771" 
+  "10776" -> "10783" 
+  "10783" -> "10801" 
+  "10793" -> "10791" 
   "10796" -> "10794" 
-  "10799" -> "10797" 
-  "10803" -> "10801" 
-  "10780" -> "10779" 
-  "10781" -> "10783" 
-  "10783" -> "10780" 
-  "10766" -> "10770" 
+  "10800" -> "10798" 
+  "10777" -> "10776" 
+  "10778" -> "10780" 
+  "10780" -> "10777" 
+  "10763" -> "10767" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/192-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/192-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/192-cfg.dot	2023-06-07 19:35:41.517383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/192-cfg.dot	2023-06-07 19:35:47.977382789 +0330
@@ -1,45 +1,45 @@
 digraph "GetStringUTFLength" {  
-"10810" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1960</SUB>> ]
-"10829" [label = <(soa,soa(env))<SUB>1961</SUB>> ]
-"10831" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();)<SUB>1962</SUB>> ]
-"10832" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength())<SUB>1962</SUB>> ]
-"10833" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1962</SUB>> ]
-"10840" [label = <(GetUtfLength,(java_string)-&gt;GetUtfLength())<SUB>1962</SUB>> ]
-"10814" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1960</SUB>> ]
-"10834" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1962</SUB>> ]
-"10837" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1962</SUB>> ]
-"10841" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetUtfLength)<SUB>1962</SUB>> ]
-"10815" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1960</SUB>> ]
-"10819" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1960</SUB>> ]
-"10826" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1960</SUB>> ]
-"10836" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1962</SUB>> ]
-"10839" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1962</SUB>> ]
-"10843" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>1962</SUB>> ]
-"10820" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1960</SUB>> ]
-"10821" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1960</SUB>> ]
-"10823" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1960</SUB>> ]
-"10806" [label = <(METHOD,GetStringUTFLength)<SUB>1959</SUB>> ]
-"10844" [label = <(METHOD_RETURN,jsize)<SUB>1959</SUB>> ]
-  "10810" -> "10815" 
-  "10810" -> "10829" 
-  "10829" -> "10836" 
-  "10831" -> "10844" 
-  "10832" -> "10831" 
-  "10833" -> "10843" 
-  "10840" -> "10832" 
-  "10814" -> "10821" 
-  "10814" -> "10829" 
-  "10834" -> "10839" 
-  "10837" -> "10833" 
-  "10841" -> "10840" 
-  "10815" -> "10814" 
-  "10819" -> "10826" 
-  "10826" -> "10844" 
+"10807" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1958</SUB>> ]
+"10826" [label = <(soa,soa(env))<SUB>1959</SUB>> ]
+"10828" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();)<SUB>1960</SUB>> ]
+"10829" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength())<SUB>1960</SUB>> ]
+"10830" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1960</SUB>> ]
+"10837" [label = <(GetUtfLength,(java_string)-&gt;GetUtfLength())<SUB>1960</SUB>> ]
+"10811" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1958</SUB>> ]
+"10831" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1960</SUB>> ]
+"10834" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1960</SUB>> ]
+"10838" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetUtfLength)<SUB>1960</SUB>> ]
+"10812" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1958</SUB>> ]
+"10816" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1958</SUB>> ]
+"10823" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1958</SUB>> ]
+"10833" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1960</SUB>> ]
+"10836" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1960</SUB>> ]
+"10840" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>1960</SUB>> ]
+"10817" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1958</SUB>> ]
+"10818" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1958</SUB>> ]
+"10820" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1958</SUB>> ]
+"10803" [label = <(METHOD,GetStringUTFLength)<SUB>1957</SUB>> ]
+"10841" [label = <(METHOD_RETURN,jsize)<SUB>1957</SUB>> ]
+  "10807" -> "10812" 
+  "10807" -> "10826" 
+  "10826" -> "10833" 
+  "10828" -> "10841" 
+  "10829" -> "10828" 
+  "10830" -> "10840" 
+  "10837" -> "10829" 
+  "10811" -> "10818" 
+  "10811" -> "10826" 
+  "10831" -> "10836" 
+  "10834" -> "10830" 
+  "10838" -> "10837" 
+  "10812" -> "10811" 
+  "10816" -> "10823" 
+  "10823" -> "10841" 
+  "10833" -> "10831" 
   "10836" -> "10834" 
-  "10839" -> "10837" 
-  "10843" -> "10841" 
-  "10820" -> "10819" 
-  "10821" -> "10823" 
-  "10823" -> "10820" 
-  "10806" -> "10810" 
+  "10840" -> "10838" 
+  "10817" -> "10816" 
+  "10818" -> "10820" 
+  "10820" -> "10817" 
+  "10803" -> "10807" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/193-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/193-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/193-cfg.dot	2023-06-07 19:35:41.517383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/193-cfg.dot	2023-06-07 19:35:47.977382789 +0330
@@ -1,149 +1,149 @@
 digraph "GetStringRegion" {  
-"10853" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1967</SUB>> ]
-"10871" [label = <(soa,soa(env))<SUB>1968</SUB>> ]
-"10873" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1969</SUB>> ]
-"10874" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1969</SUB>> ]
-"10881" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1969</SUB>> ]
-"10891" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1970</SUB>> ]
-"10875" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1969</SUB>> ]
-"10882" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1969</SUB>> ]
-"10892" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1970</SUB>> ]
-"10899" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1970</SUB>> ]
-"10908" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1971</SUB>> ]
-"10857" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1967</SUB>> ]
-"10877" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1969</SUB>> ]
-"10883" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1969</SUB>> ]
-"10886" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1969</SUB>> ]
-"10893" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1970</SUB>> ]
-"10896" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1970</SUB>> ]
-"10901" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1970</SUB>> ]
-"10912" [label = <(GetLength,s-&gt;GetLength())<SUB>1971</SUB>> ]
-"10918" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1973</SUB>> ]
-"10858" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1967</SUB>> ]
-"10862" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1967</SUB>> ]
-"10869" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1967</SUB>> ]
-"10879" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1969</SUB>> ]
-"10885" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1969</SUB>> ]
-"10888" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1969</SUB>> ]
-"10902" [label = <(GetLength,s-&gt;GetLength())<SUB>1970</SUB>> ]
-"10913" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1971</SUB>> ]
-"10941" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1974</SUB>> ]
-"10863" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1967</SUB>> ]
-"10903" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1970</SUB>> ]
-"10915" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1971</SUB>> ]
-"10942" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1974</SUB>> ]
-"10864" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1967</SUB>> ]
-"10866" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1967</SUB>> ]
-"10905" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1970</SUB>> ]
-"10923" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1973</SUB>> ]
-"10944" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1974</SUB>> ]
-"10952" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1975</SUB>> ]
-"10955" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1975</SUB>> ]
-"10974" [label = <(&lt;operator&gt;.assignment,* chars = static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1979</SUB>> ]
-"10982" [label = <(memcpy,memcpy(buf, chars + start, length * sizeof(jchar)))<SUB>1980</SUB>> ]
-"10924" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1973</SUB>> ]
-"10932" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>1973</SUB>> ]
-"10939" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1973</SUB>> ]
-"10949" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1975</SUB>> ]
-"10958" [label = <(&lt;operator&gt;.assignment,buf[i] = static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1976</SUB>> ]
-"10976" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1979</SUB>> ]
-"10984" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1980</SUB>> ]
-"10987" [label = <(&lt;operator&gt;.multiplication,length * sizeof(jchar))<SUB>1980</SUB>> ]
-"10925" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1973</SUB>> ]
-"10928" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1973</SUB>> ]
-"10933" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1973</SUB>> ]
-"10959" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1976</SUB>> ]
-"10962" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1976</SUB>> ]
-"10977" [label = <(UNKNOWN,jchar*,jchar*)<SUB>1979</SUB>> ]
-"10978" [label = <(GetValue,s-&gt;GetValue())<SUB>1979</SUB>> ]
-"10989" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>1980</SUB>> ]
-"10934" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1973</SUB>> ]
-"10936" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1973</SUB>> ]
-"10963" [label = <(UNKNOWN,jchar,jchar)<SUB>1976</SUB>> ]
-"10964" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1976</SUB>> ]
-"10979" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1979</SUB>> ]
-"10965" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1976</SUB>> ]
-"10968" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1976</SUB>> ]
-"10981" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1979</SUB>> ]
-"10967" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1976</SUB>> ]
-"10846" [label = <(METHOD,GetStringRegion)<SUB>1965</SUB>> ]
-"10991" [label = <(METHOD_RETURN,void)<SUB>1965</SUB>> ]
-  "10853" -> "10858" 
-  "10853" -> "10871" 
-  "10871" -> "10879" 
-  "10873" -> "10893" 
-  "10874" -> "10885" 
-  "10881" -> "10873" 
-  "10891" -> "10915" 
-  "10891" -> "10918" 
-  "10875" -> "10874" 
-  "10882" -> "10881" 
-  "10892" -> "10891" 
-  "10892" -> "10905" 
-  "10899" -> "10891" 
-  "10908" -> "10991" 
-  "10857" -> "10864" 
-  "10857" -> "10871" 
-  "10877" -> "10875" 
-  "10883" -> "10888" 
-  "10886" -> "10882" 
-  "10893" -> "10892" 
-  "10893" -> "10896" 
-  "10896" -> "10892" 
-  "10901" -> "10899" 
-  "10912" -> "10908" 
-  "10918" -> "10925" 
-  "10918" -> "10944" 
-  "10858" -> "10857" 
-  "10862" -> "10869" 
-  "10869" -> "10991" 
-  "10879" -> "10877" 
+"10850" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1965</SUB>> ]
+"10868" [label = <(soa,soa(env))<SUB>1966</SUB>> ]
+"10870" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1967</SUB>> ]
+"10871" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1967</SUB>> ]
+"10878" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1967</SUB>> ]
+"10888" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1968</SUB>> ]
+"10872" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1967</SUB>> ]
+"10879" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1967</SUB>> ]
+"10889" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1968</SUB>> ]
+"10896" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1968</SUB>> ]
+"10905" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1969</SUB>> ]
+"10854" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1965</SUB>> ]
+"10874" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1967</SUB>> ]
+"10880" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1967</SUB>> ]
+"10883" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1967</SUB>> ]
+"10890" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1968</SUB>> ]
+"10893" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1968</SUB>> ]
+"10898" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1968</SUB>> ]
+"10909" [label = <(GetLength,s-&gt;GetLength())<SUB>1969</SUB>> ]
+"10915" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1971</SUB>> ]
+"10855" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1965</SUB>> ]
+"10859" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1965</SUB>> ]
+"10866" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1965</SUB>> ]
+"10876" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1967</SUB>> ]
+"10882" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1967</SUB>> ]
+"10885" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1967</SUB>> ]
+"10899" [label = <(GetLength,s-&gt;GetLength())<SUB>1968</SUB>> ]
+"10910" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1969</SUB>> ]
+"10938" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1972</SUB>> ]
+"10860" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1965</SUB>> ]
+"10900" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1968</SUB>> ]
+"10912" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1969</SUB>> ]
+"10939" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1972</SUB>> ]
+"10861" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1965</SUB>> ]
+"10863" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1965</SUB>> ]
+"10902" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1968</SUB>> ]
+"10920" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1971</SUB>> ]
+"10941" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1972</SUB>> ]
+"10949" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1973</SUB>> ]
+"10952" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1973</SUB>> ]
+"10971" [label = <(&lt;operator&gt;.assignment,* chars = static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1977</SUB>> ]
+"10979" [label = <(memcpy,memcpy(buf, chars + start, length * sizeof(jchar)))<SUB>1978</SUB>> ]
+"10921" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1971</SUB>> ]
+"10929" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>1971</SUB>> ]
+"10936" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1971</SUB>> ]
+"10946" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1973</SUB>> ]
+"10955" [label = <(&lt;operator&gt;.assignment,buf[i] = static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1974</SUB>> ]
+"10973" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1977</SUB>> ]
+"10981" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1978</SUB>> ]
+"10984" [label = <(&lt;operator&gt;.multiplication,length * sizeof(jchar))<SUB>1978</SUB>> ]
+"10922" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1971</SUB>> ]
+"10925" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1971</SUB>> ]
+"10930" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1971</SUB>> ]
+"10956" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1974</SUB>> ]
+"10959" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1974</SUB>> ]
+"10974" [label = <(UNKNOWN,jchar*,jchar*)<SUB>1977</SUB>> ]
+"10975" [label = <(GetValue,s-&gt;GetValue())<SUB>1977</SUB>> ]
+"10986" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>1978</SUB>> ]
+"10931" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1971</SUB>> ]
+"10933" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1971</SUB>> ]
+"10960" [label = <(UNKNOWN,jchar,jchar)<SUB>1974</SUB>> ]
+"10961" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1974</SUB>> ]
+"10976" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1977</SUB>> ]
+"10962" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1974</SUB>> ]
+"10965" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1974</SUB>> ]
+"10978" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1977</SUB>> ]
+"10964" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1974</SUB>> ]
+"10843" [label = <(METHOD,GetStringRegion)<SUB>1963</SUB>> ]
+"10988" [label = <(METHOD_RETURN,void)<SUB>1963</SUB>> ]
+  "10850" -> "10855" 
+  "10850" -> "10868" 
+  "10868" -> "10876" 
+  "10870" -> "10890" 
+  "10871" -> "10882" 
+  "10878" -> "10870" 
+  "10888" -> "10912" 
+  "10888" -> "10915" 
+  "10872" -> "10871" 
+  "10879" -> "10878" 
+  "10889" -> "10888" 
+  "10889" -> "10902" 
+  "10896" -> "10888" 
+  "10905" -> "10988" 
+  "10854" -> "10861" 
+  "10854" -> "10868" 
+  "10874" -> "10872" 
+  "10880" -> "10885" 
+  "10883" -> "10879" 
+  "10890" -> "10889" 
+  "10890" -> "10893" 
+  "10893" -> "10889" 
+  "10898" -> "10896" 
+  "10909" -> "10905" 
+  "10915" -> "10922" 
+  "10915" -> "10941" 
+  "10855" -> "10854" 
+  "10859" -> "10866" 
+  "10866" -> "10988" 
+  "10876" -> "10874" 
+  "10882" -> "10880" 
   "10885" -> "10883" 
-  "10888" -> "10886" 
-  "10902" -> "10901" 
-  "10913" -> "10912" 
-  "10941" -> "10949" 
-  "10941" -> "10977" 
-  "10863" -> "10862" 
-  "10903" -> "10902" 
-  "10915" -> "10913" 
-  "10942" -> "10941" 
-  "10864" -> "10866" 
-  "10866" -> "10863" 
-  "10905" -> "10903" 
-  "10923" -> "10934" 
-  "10923" -> "10944" 
-  "10944" -> "10942" 
-  "10952" -> "10991" 
-  "10952" -> "10959" 
+  "10899" -> "10898" 
+  "10910" -> "10909" 
+  "10938" -> "10946" 
+  "10938" -> "10974" 
+  "10860" -> "10859" 
+  "10900" -> "10899" 
+  "10912" -> "10910" 
+  "10939" -> "10938" 
+  "10861" -> "10863" 
+  "10863" -> "10860" 
+  "10902" -> "10900" 
+  "10920" -> "10931" 
+  "10920" -> "10941" 
+  "10941" -> "10939" 
+  "10949" -> "10988" 
+  "10949" -> "10956" 
+  "10952" -> "10949" 
+  "10971" -> "10981" 
+  "10979" -> "10988" 
+  "10921" -> "10920" 
+  "10929" -> "10936" 
+  "10936" -> "10988" 
+  "10946" -> "10949" 
   "10955" -> "10952" 
-  "10974" -> "10984" 
-  "10982" -> "10991" 
-  "10924" -> "10923" 
-  "10932" -> "10939" 
-  "10939" -> "10991" 
-  "10949" -> "10952" 
-  "10958" -> "10955" 
-  "10976" -> "10974" 
-  "10984" -> "10989" 
-  "10987" -> "10982" 
-  "10925" -> "10924" 
-  "10925" -> "10928" 
-  "10928" -> "10924" 
-  "10933" -> "10932" 
-  "10959" -> "10963" 
-  "10962" -> "10958" 
-  "10977" -> "10981" 
+  "10973" -> "10971" 
+  "10981" -> "10986" 
+  "10984" -> "10979" 
+  "10922" -> "10921" 
+  "10922" -> "10925" 
+  "10925" -> "10921" 
+  "10930" -> "10929" 
+  "10956" -> "10960" 
+  "10959" -> "10955" 
+  "10974" -> "10978" 
+  "10975" -> "10973" 
+  "10986" -> "10984" 
+  "10931" -> "10933" 
+  "10933" -> "10930" 
+  "10960" -> "10964" 
+  "10961" -> "10959" 
+  "10976" -> "10975" 
+  "10962" -> "10965" 
+  "10965" -> "10961" 
   "10978" -> "10976" 
-  "10989" -> "10987" 
-  "10934" -> "10936" 
-  "10936" -> "10933" 
-  "10963" -> "10967" 
   "10964" -> "10962" 
-  "10979" -> "10978" 
-  "10965" -> "10968" 
-  "10968" -> "10964" 
-  "10981" -> "10979" 
-  "10967" -> "10965" 
-  "10846" -> "10853" 
+  "10843" -> "10850" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/194-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/194-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/194-cfg.dot	2023-06-07 19:35:41.517383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/194-cfg.dot	2023-06-07 19:35:47.977382789 +0330
@@ -1,143 +1,143 @@
 digraph "GetStringUTFRegion" {  
-"11000" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1987</SUB>> ]
-"11018" [label = <(soa,soa(env))<SUB>1988</SUB>> ]
-"11020" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1989</SUB>> ]
-"11021" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1989</SUB>> ]
-"11028" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1989</SUB>> ]
-"11038" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1990</SUB>> ]
-"11022" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1989</SUB>> ]
-"11029" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1989</SUB>> ]
-"11039" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1990</SUB>> ]
-"11046" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1990</SUB>> ]
-"11055" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1991</SUB>> ]
-"11004" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1987</SUB>> ]
-"11024" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1989</SUB>> ]
-"11030" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1989</SUB>> ]
-"11033" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1989</SUB>> ]
-"11040" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1990</SUB>> ]
-"11043" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1990</SUB>> ]
-"11048" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1990</SUB>> ]
-"11059" [label = <(GetLength,s-&gt;GetLength())<SUB>1991</SUB>> ]
-"11065" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1993</SUB>> ]
-"11005" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1987</SUB>> ]
-"11009" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1987</SUB>> ]
-"11016" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1987</SUB>> ]
-"11026" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1989</SUB>> ]
-"11032" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1989</SUB>> ]
-"11035" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1989</SUB>> ]
-"11049" [label = <(GetLength,s-&gt;GetLength())<SUB>1990</SUB>> ]
-"11060" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1991</SUB>> ]
-"11088" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1994</SUB>> ]
-"11010" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1987</SUB>> ]
-"11050" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1990</SUB>> ]
-"11062" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1991</SUB>> ]
-"11089" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1994</SUB>> ]
-"11011" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1987</SUB>> ]
-"11013" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1987</SUB>> ]
-"11052" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1990</SUB>> ]
-"11070" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1993</SUB>> ]
-"11091" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1994</SUB>> ]
-"11099" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1995</SUB>> ]
-"11102" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1995</SUB>> ]
-"11119" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>1999</SUB>> ]
-"11126" [label = <(&lt;operator&gt;.assignment,bytes = CountUtf8Bytes(chars + start, length))<SUB>2000</SUB>> ]
-"11133" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(buf, bytes, chars + start, length))<SUB>2001</SUB>> ]
-"11071" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1993</SUB>> ]
-"11079" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>1993</SUB>> ]
-"11086" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1993</SUB>> ]
-"11096" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1995</SUB>> ]
-"11105" [label = <(&lt;operator&gt;.assignment,buf[i] = s-&gt;CharAt(start+i))<SUB>1996</SUB>> ]
-"11121" [label = <(GetValue,s-&gt;GetValue())<SUB>1999</SUB>> ]
-"11128" [label = <(CountUtf8Bytes,CountUtf8Bytes(chars + start, length))<SUB>2000</SUB>> ]
-"11136" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>2001</SUB>> ]
-"11072" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1993</SUB>> ]
-"11075" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1993</SUB>> ]
-"11080" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1993</SUB>> ]
-"11106" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1996</SUB>> ]
-"11109" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1996</SUB>> ]
-"11122" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1999</SUB>> ]
-"11129" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>2000</SUB>> ]
-"11081" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1993</SUB>> ]
-"11083" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1993</SUB>> ]
-"11110" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1996</SUB>> ]
-"11113" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1996</SUB>> ]
-"11124" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1999</SUB>> ]
-"11112" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1996</SUB>> ]
-"10993" [label = <(METHOD,GetStringUTFRegion)<SUB>1985</SUB>> ]
-"11140" [label = <(METHOD_RETURN,void)<SUB>1985</SUB>> ]
-  "11000" -> "11005" 
-  "11000" -> "11018" 
-  "11018" -> "11026" 
-  "11020" -> "11040" 
-  "11021" -> "11032" 
-  "11028" -> "11020" 
-  "11038" -> "11062" 
-  "11038" -> "11065" 
-  "11022" -> "11021" 
-  "11029" -> "11028" 
-  "11039" -> "11038" 
-  "11039" -> "11052" 
-  "11046" -> "11038" 
-  "11055" -> "11140" 
-  "11004" -> "11011" 
-  "11004" -> "11018" 
-  "11024" -> "11022" 
-  "11030" -> "11035" 
-  "11033" -> "11029" 
-  "11040" -> "11039" 
-  "11040" -> "11043" 
-  "11043" -> "11039" 
-  "11048" -> "11046" 
-  "11059" -> "11055" 
-  "11065" -> "11072" 
-  "11065" -> "11091" 
-  "11005" -> "11004" 
-  "11009" -> "11016" 
-  "11016" -> "11140" 
-  "11026" -> "11024" 
+"10997" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1985</SUB>> ]
+"11015" [label = <(soa,soa(env))<SUB>1986</SUB>> ]
+"11017" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1987</SUB>> ]
+"11018" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1987</SUB>> ]
+"11025" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1987</SUB>> ]
+"11035" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1988</SUB>> ]
+"11019" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1987</SUB>> ]
+"11026" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1987</SUB>> ]
+"11036" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1988</SUB>> ]
+"11043" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1988</SUB>> ]
+"11052" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1989</SUB>> ]
+"11001" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1985</SUB>> ]
+"11021" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1987</SUB>> ]
+"11027" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1987</SUB>> ]
+"11030" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1987</SUB>> ]
+"11037" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1988</SUB>> ]
+"11040" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1988</SUB>> ]
+"11045" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1988</SUB>> ]
+"11056" [label = <(GetLength,s-&gt;GetLength())<SUB>1989</SUB>> ]
+"11062" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1991</SUB>> ]
+"11002" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1985</SUB>> ]
+"11006" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1985</SUB>> ]
+"11013" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1985</SUB>> ]
+"11023" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1987</SUB>> ]
+"11029" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1987</SUB>> ]
+"11032" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1987</SUB>> ]
+"11046" [label = <(GetLength,s-&gt;GetLength())<SUB>1988</SUB>> ]
+"11057" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1989</SUB>> ]
+"11085" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1992</SUB>> ]
+"11007" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1985</SUB>> ]
+"11047" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1988</SUB>> ]
+"11059" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1989</SUB>> ]
+"11086" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1992</SUB>> ]
+"11008" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1985</SUB>> ]
+"11010" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1985</SUB>> ]
+"11049" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1988</SUB>> ]
+"11067" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1991</SUB>> ]
+"11088" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1992</SUB>> ]
+"11096" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1993</SUB>> ]
+"11099" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1993</SUB>> ]
+"11116" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>1997</SUB>> ]
+"11123" [label = <(&lt;operator&gt;.assignment,bytes = CountUtf8Bytes(chars + start, length))<SUB>1998</SUB>> ]
+"11130" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(buf, bytes, chars + start, length))<SUB>1999</SUB>> ]
+"11068" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1991</SUB>> ]
+"11076" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>1991</SUB>> ]
+"11083" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1991</SUB>> ]
+"11093" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1993</SUB>> ]
+"11102" [label = <(&lt;operator&gt;.assignment,buf[i] = s-&gt;CharAt(start+i))<SUB>1994</SUB>> ]
+"11118" [label = <(GetValue,s-&gt;GetValue())<SUB>1997</SUB>> ]
+"11125" [label = <(CountUtf8Bytes,CountUtf8Bytes(chars + start, length))<SUB>1998</SUB>> ]
+"11133" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1999</SUB>> ]
+"11069" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1991</SUB>> ]
+"11072" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1991</SUB>> ]
+"11077" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1991</SUB>> ]
+"11103" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1994</SUB>> ]
+"11106" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1994</SUB>> ]
+"11119" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1997</SUB>> ]
+"11126" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1998</SUB>> ]
+"11078" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1991</SUB>> ]
+"11080" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1991</SUB>> ]
+"11107" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1994</SUB>> ]
+"11110" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1994</SUB>> ]
+"11121" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1997</SUB>> ]
+"11109" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1994</SUB>> ]
+"10990" [label = <(METHOD,GetStringUTFRegion)<SUB>1983</SUB>> ]
+"11137" [label = <(METHOD_RETURN,void)<SUB>1983</SUB>> ]
+  "10997" -> "11002" 
+  "10997" -> "11015" 
+  "11015" -> "11023" 
+  "11017" -> "11037" 
+  "11018" -> "11029" 
+  "11025" -> "11017" 
+  "11035" -> "11059" 
+  "11035" -> "11062" 
+  "11019" -> "11018" 
+  "11026" -> "11025" 
+  "11036" -> "11035" 
+  "11036" -> "11049" 
+  "11043" -> "11035" 
+  "11052" -> "11137" 
+  "11001" -> "11008" 
+  "11001" -> "11015" 
+  "11021" -> "11019" 
+  "11027" -> "11032" 
+  "11030" -> "11026" 
+  "11037" -> "11036" 
+  "11037" -> "11040" 
+  "11040" -> "11036" 
+  "11045" -> "11043" 
+  "11056" -> "11052" 
+  "11062" -> "11069" 
+  "11062" -> "11088" 
+  "11002" -> "11001" 
+  "11006" -> "11013" 
+  "11013" -> "11137" 
+  "11023" -> "11021" 
+  "11029" -> "11027" 
   "11032" -> "11030" 
-  "11035" -> "11033" 
-  "11049" -> "11048" 
-  "11060" -> "11059" 
-  "11088" -> "11096" 
-  "11088" -> "11124" 
-  "11010" -> "11009" 
-  "11050" -> "11049" 
-  "11062" -> "11060" 
-  "11089" -> "11088" 
-  "11011" -> "11013" 
-  "11013" -> "11010" 
-  "11052" -> "11050" 
-  "11070" -> "11081" 
-  "11070" -> "11091" 
-  "11091" -> "11089" 
-  "11099" -> "11140" 
-  "11099" -> "11106" 
+  "11046" -> "11045" 
+  "11057" -> "11056" 
+  "11085" -> "11093" 
+  "11085" -> "11121" 
+  "11007" -> "11006" 
+  "11047" -> "11046" 
+  "11059" -> "11057" 
+  "11086" -> "11085" 
+  "11008" -> "11010" 
+  "11010" -> "11007" 
+  "11049" -> "11047" 
+  "11067" -> "11078" 
+  "11067" -> "11088" 
+  "11088" -> "11086" 
+  "11096" -> "11137" 
+  "11096" -> "11103" 
+  "11099" -> "11096" 
+  "11116" -> "11126" 
+  "11123" -> "11133" 
+  "11130" -> "11137" 
+  "11068" -> "11067" 
+  "11076" -> "11083" 
+  "11083" -> "11137" 
+  "11093" -> "11096" 
   "11102" -> "11099" 
-  "11119" -> "11129" 
-  "11126" -> "11136" 
-  "11133" -> "11140" 
-  "11071" -> "11070" 
-  "11079" -> "11086" 
-  "11086" -> "11140" 
-  "11096" -> "11099" 
-  "11105" -> "11102" 
+  "11118" -> "11116" 
+  "11125" -> "11123" 
+  "11133" -> "11130" 
+  "11069" -> "11068" 
+  "11069" -> "11072" 
+  "11072" -> "11068" 
+  "11077" -> "11076" 
+  "11103" -> "11109" 
+  "11106" -> "11102" 
+  "11119" -> "11118" 
+  "11126" -> "11125" 
+  "11078" -> "11080" 
+  "11080" -> "11077" 
+  "11107" -> "11110" 
+  "11110" -> "11106" 
   "11121" -> "11119" 
-  "11128" -> "11126" 
-  "11136" -> "11133" 
-  "11072" -> "11071" 
-  "11072" -> "11075" 
-  "11075" -> "11071" 
-  "11080" -> "11079" 
-  "11106" -> "11112" 
-  "11109" -> "11105" 
-  "11122" -> "11121" 
-  "11129" -> "11128" 
-  "11081" -> "11083" 
-  "11083" -> "11080" 
-  "11110" -> "11113" 
-  "11113" -> "11109" 
-  "11124" -> "11122" 
-  "11112" -> "11110" 
-  "10993" -> "11000" 
+  "11109" -> "11107" 
+  "10990" -> "10997" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/195-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/195-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/195-cfg.dot	2023-06-07 19:35:41.517383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/195-cfg.dot	2023-06-07 19:35:47.987382788 +0330
@@ -1,159 +1,159 @@
 digraph "GetStringChars" {  
-"11147" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2007</SUB>> ]
-"11166" [label = <(soa,soa(env))<SUB>2008</SUB>> ]
-"11168" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2009</SUB>> ]
-"11186" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2010</SUB>> ]
-"11281" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2029</SUB>> ]
-"11169" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2009</SUB>> ]
-"11176" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2009</SUB>> ]
-"11188" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2010</SUB>> ]
-"11196" [label = <(&lt;operator&gt;.logicalOr,heap-&gt;IsMovableObject(s) || s-&gt;IsCompressed())<SUB>2011</SUB>> ]
-"11273" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2026</SUB>> ]
-"11282" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2029</SUB>> ]
-"11170" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2009</SUB>> ]
-"11177" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2009</SUB>> ]
-"11189" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2010</SUB>> ]
-"11197" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2011</SUB>> ]
-"11202" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2011</SUB>> ]
-"11208" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[s-&gt;GetLength()])<SUB>2012</SUB>> ]
-"11270" [label = <(RETURN,return chars;,return chars;)<SUB>2024</SUB>> ]
-"11277" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2027</SUB>> ]
-"11283" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2029</SUB>> ]
-"11284" [label = <(GetValue,s-&gt;GetValue())<SUB>2029</SUB>> ]
-"11151" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2007</SUB>> ]
-"11172" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2009</SUB>> ]
-"11178" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2009</SUB>> ]
-"11181" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2009</SUB>> ]
-"11190" [label = <(Runtime::Current,Runtime::Current())<SUB>2010</SUB>> ]
-"11194" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2010</SUB>> ]
-"11198" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2011</SUB>> ]
-"11203" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2011</SUB>> ]
-"11210" [label = <(&lt;operator&gt;.new,new jchar[s-&gt;GetLength()])<SUB>2012</SUB>> ]
-"11213" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2013</SUB>> ]
-"11262" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2021</SUB>> ]
-"11278" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2027</SUB>> ]
-"11285" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2029</SUB>> ]
-"11152" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2007</SUB>> ]
-"11156" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2007</SUB>> ]
-"11163" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2007</SUB>> ]
-"11174" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2009</SUB>> ]
-"11180" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2009</SUB>> ]
-"11183" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2009</SUB>> ]
-"11191" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2010</SUB>> ]
-"11200" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2011</SUB>> ]
-"11205" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2011</SUB>> ]
-"11214" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2013</SUB>> ]
-"11219" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>2014</SUB>> ]
-"11266" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2022</SUB>> ]
-"11287" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2029</SUB>> ]
-"11157" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2007</SUB>> ]
-"11193" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2010</SUB>> ]
-"11216" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2013</SUB>> ]
-"11221" [label = <(GetLength,s-&gt;GetLength())<SUB>2014</SUB>> ]
-"11231" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2015</SUB>> ]
-"11234" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2015</SUB>> ]
-"11248" [label = <(memcpy,memcpy(chars, s-&gt;GetValue(), sizeof(jchar) * s-&gt;GetLength()))<SUB>2019</SUB>> ]
-"11267" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2022</SUB>> ]
-"11158" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2007</SUB>> ]
-"11160" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2007</SUB>> ]
-"11222" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2014</SUB>> ]
-"11228" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2015</SUB>> ]
-"11237" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>2016</SUB>> ]
-"11250" [label = <(GetValue,s-&gt;GetValue())<SUB>2019</SUB>> ]
-"11254" [label = <(&lt;operator&gt;.multiplication,sizeof(jchar) * s-&gt;GetLength())<SUB>2019</SUB>> ]
-"11224" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2014</SUB>> ]
-"11238" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>2016</SUB>> ]
-"11241" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2016</SUB>> ]
-"11251" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2019</SUB>> ]
-"11255" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>2019</SUB>> ]
-"11257" [label = <(GetLength,s-&gt;GetLength())<SUB>2019</SUB>> ]
-"11242" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2016</SUB>> ]
-"11253" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2019</SUB>> ]
-"11258" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2019</SUB>> ]
-"11244" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2016</SUB>> ]
-"11260" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2019</SUB>> ]
-"11142" [label = <(METHOD,GetStringChars)<SUB>2006</SUB>> ]
-"11288" [label = <(METHOD_RETURN,jchar)<SUB>2006</SUB>> ]
-  "11147" -> "11152" 
-  "11147" -> "11166" 
-  "11166" -> "11174" 
-  "11168" -> "11193" 
-  "11186" -> "11200" 
-  "11281" -> "11288" 
-  "11169" -> "11180" 
-  "11176" -> "11168" 
-  "11188" -> "11186" 
-  "11196" -> "11210" 
-  "11196" -> "11273" 
-  "11273" -> "11283" 
-  "11273" -> "11278" 
+"11144" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2005</SUB>> ]
+"11163" [label = <(soa,soa(env))<SUB>2006</SUB>> ]
+"11165" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2007</SUB>> ]
+"11183" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2008</SUB>> ]
+"11278" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2027</SUB>> ]
+"11166" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2007</SUB>> ]
+"11173" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2007</SUB>> ]
+"11185" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2008</SUB>> ]
+"11193" [label = <(&lt;operator&gt;.logicalOr,heap-&gt;IsMovableObject(s) || s-&gt;IsCompressed())<SUB>2009</SUB>> ]
+"11270" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2024</SUB>> ]
+"11279" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2027</SUB>> ]
+"11167" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2007</SUB>> ]
+"11174" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2007</SUB>> ]
+"11186" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2008</SUB>> ]
+"11194" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2009</SUB>> ]
+"11199" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2009</SUB>> ]
+"11205" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[s-&gt;GetLength()])<SUB>2010</SUB>> ]
+"11267" [label = <(RETURN,return chars;,return chars;)<SUB>2022</SUB>> ]
+"11274" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2025</SUB>> ]
+"11280" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2027</SUB>> ]
+"11281" [label = <(GetValue,s-&gt;GetValue())<SUB>2027</SUB>> ]
+"11148" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2005</SUB>> ]
+"11169" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2007</SUB>> ]
+"11175" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2007</SUB>> ]
+"11178" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2007</SUB>> ]
+"11187" [label = <(Runtime::Current,Runtime::Current())<SUB>2008</SUB>> ]
+"11191" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2008</SUB>> ]
+"11195" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2009</SUB>> ]
+"11200" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2009</SUB>> ]
+"11207" [label = <(&lt;operator&gt;.new,new jchar[s-&gt;GetLength()])<SUB>2010</SUB>> ]
+"11210" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2011</SUB>> ]
+"11259" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2019</SUB>> ]
+"11275" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2025</SUB>> ]
+"11282" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2027</SUB>> ]
+"11149" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2005</SUB>> ]
+"11153" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2005</SUB>> ]
+"11160" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2005</SUB>> ]
+"11171" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2007</SUB>> ]
+"11177" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2007</SUB>> ]
+"11180" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2007</SUB>> ]
+"11188" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2008</SUB>> ]
+"11197" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2009</SUB>> ]
+"11202" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2009</SUB>> ]
+"11211" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2011</SUB>> ]
+"11216" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>2012</SUB>> ]
+"11263" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2020</SUB>> ]
+"11284" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2027</SUB>> ]
+"11154" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2005</SUB>> ]
+"11190" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2008</SUB>> ]
+"11213" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2011</SUB>> ]
+"11218" [label = <(GetLength,s-&gt;GetLength())<SUB>2012</SUB>> ]
+"11228" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2013</SUB>> ]
+"11231" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2013</SUB>> ]
+"11245" [label = <(memcpy,memcpy(chars, s-&gt;GetValue(), sizeof(jchar) * s-&gt;GetLength()))<SUB>2017</SUB>> ]
+"11264" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2020</SUB>> ]
+"11155" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2005</SUB>> ]
+"11157" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2005</SUB>> ]
+"11219" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2012</SUB>> ]
+"11225" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2013</SUB>> ]
+"11234" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>2014</SUB>> ]
+"11247" [label = <(GetValue,s-&gt;GetValue())<SUB>2017</SUB>> ]
+"11251" [label = <(&lt;operator&gt;.multiplication,sizeof(jchar) * s-&gt;GetLength())<SUB>2017</SUB>> ]
+"11221" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2012</SUB>> ]
+"11235" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>2014</SUB>> ]
+"11238" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2014</SUB>> ]
+"11248" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2017</SUB>> ]
+"11252" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>2017</SUB>> ]
+"11254" [label = <(GetLength,s-&gt;GetLength())<SUB>2017</SUB>> ]
+"11239" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2014</SUB>> ]
+"11250" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2017</SUB>> ]
+"11255" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2017</SUB>> ]
+"11241" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2014</SUB>> ]
+"11257" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2017</SUB>> ]
+"11139" [label = <(METHOD,GetStringChars)<SUB>2004</SUB>> ]
+"11285" [label = <(METHOD_RETURN,jchar)<SUB>2004</SUB>> ]
+  "11144" -> "11149" 
+  "11144" -> "11163" 
+  "11163" -> "11171" 
+  "11165" -> "11190" 
+  "11183" -> "11197" 
+  "11278" -> "11285" 
+  "11166" -> "11177" 
+  "11173" -> "11165" 
+  "11185" -> "11183" 
+  "11193" -> "11207" 
+  "11193" -> "11270" 
+  "11270" -> "11280" 
+  "11270" -> "11275" 
+  "11279" -> "11278" 
+  "11167" -> "11166" 
+  "11174" -> "11173" 
+  "11186" -> "11185" 
+  "11194" -> "11193" 
+  "11194" -> "11202" 
+  "11199" -> "11193" 
+  "11205" -> "11213" 
+  "11267" -> "11285" 
+  "11274" -> "11280" 
+  "11280" -> "11284" 
+  "11281" -> "11279" 
+  "11148" -> "11155" 
+  "11148" -> "11163" 
+  "11169" -> "11167" 
+  "11175" -> "11180" 
+  "11178" -> "11174" 
+  "11187" -> "11191" 
+  "11191" -> "11186" 
+  "11195" -> "11194" 
+  "11200" -> "11199" 
+  "11207" -> "11205" 
+  "11210" -> "11221" 
+  "11210" -> "11250" 
+  "11259" -> "11264" 
+  "11259" -> "11267" 
+  "11275" -> "11274" 
   "11282" -> "11281" 
-  "11170" -> "11169" 
-  "11177" -> "11176" 
-  "11189" -> "11188" 
-  "11197" -> "11196" 
-  "11197" -> "11205" 
-  "11202" -> "11196" 
-  "11208" -> "11216" 
-  "11270" -> "11288" 
-  "11277" -> "11283" 
-  "11283" -> "11287" 
-  "11284" -> "11282" 
-  "11151" -> "11158" 
-  "11151" -> "11166" 
-  "11172" -> "11170" 
-  "11178" -> "11183" 
-  "11181" -> "11177" 
-  "11190" -> "11194" 
-  "11194" -> "11189" 
-  "11198" -> "11197" 
-  "11203" -> "11202" 
-  "11210" -> "11208" 
-  "11213" -> "11224" 
-  "11213" -> "11253" 
-  "11262" -> "11267" 
-  "11262" -> "11270" 
-  "11278" -> "11277" 
-  "11285" -> "11284" 
-  "11152" -> "11151" 
-  "11156" -> "11163" 
-  "11163" -> "11288" 
-  "11174" -> "11172" 
+  "11149" -> "11148" 
+  "11153" -> "11160" 
+  "11160" -> "11285" 
+  "11171" -> "11169" 
+  "11177" -> "11175" 
   "11180" -> "11178" 
-  "11183" -> "11181" 
-  "11191" -> "11190" 
-  "11200" -> "11198" 
-  "11205" -> "11203" 
-  "11214" -> "11213" 
-  "11219" -> "11228" 
-  "11266" -> "11270" 
-  "11287" -> "11285" 
-  "11157" -> "11156" 
-  "11193" -> "11191" 
-  "11216" -> "11214" 
-  "11221" -> "11219" 
-  "11231" -> "11238" 
-  "11231" -> "11262" 
+  "11188" -> "11187" 
+  "11197" -> "11195" 
+  "11202" -> "11200" 
+  "11211" -> "11210" 
+  "11216" -> "11225" 
+  "11263" -> "11267" 
+  "11284" -> "11282" 
+  "11154" -> "11153" 
+  "11190" -> "11188" 
+  "11213" -> "11211" 
+  "11218" -> "11216" 
+  "11228" -> "11235" 
+  "11228" -> "11259" 
+  "11231" -> "11228" 
+  "11245" -> "11259" 
+  "11264" -> "11263" 
+  "11155" -> "11157" 
+  "11157" -> "11154" 
+  "11219" -> "11218" 
+  "11225" -> "11228" 
   "11234" -> "11231" 
-  "11248" -> "11262" 
-  "11267" -> "11266" 
-  "11158" -> "11160" 
-  "11160" -> "11157" 
-  "11222" -> "11221" 
-  "11228" -> "11231" 
-  "11237" -> "11234" 
-  "11250" -> "11255" 
-  "11254" -> "11248" 
-  "11224" -> "11222" 
-  "11238" -> "11244" 
-  "11241" -> "11237" 
-  "11251" -> "11250" 
-  "11255" -> "11260" 
-  "11257" -> "11254" 
-  "11242" -> "11241" 
-  "11253" -> "11251" 
-  "11258" -> "11257" 
-  "11244" -> "11242" 
-  "11260" -> "11258" 
-  "11142" -> "11147" 
+  "11247" -> "11252" 
+  "11251" -> "11245" 
+  "11221" -> "11219" 
+  "11235" -> "11241" 
+  "11238" -> "11234" 
+  "11248" -> "11247" 
+  "11252" -> "11257" 
+  "11254" -> "11251" 
+  "11239" -> "11238" 
+  "11250" -> "11248" 
+  "11255" -> "11254" 
+  "11241" -> "11239" 
+  "11257" -> "11255" 
+  "11139" -> "11144" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/196-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/196-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/196-cfg.dot	2023-06-07 19:35:41.517383223 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/196-cfg.dot	2023-06-07 19:35:47.987382788 +0330
@@ -1,78 +1,78 @@
 digraph "ReleaseStringChars" {  
-"11295" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2033</SUB>> ]
-"11313" [label = <(soa,soa(env))<SUB>2034</SUB>> ]
-"11315" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2035</SUB>> ]
-"11316" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2035</SUB>> ]
-"11323" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2035</SUB>> ]
-"11333" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue()))<SUB>2036</SUB>> ]
-"11317" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2035</SUB>> ]
-"11324" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2035</SUB>> ]
-"11334" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2036</SUB>> ]
-"11338" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue())<SUB>2036</SUB>> ]
-"11352" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2037</SUB>> ]
-"11299" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2033</SUB>> ]
-"11319" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2035</SUB>> ]
-"11325" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2035</SUB>> ]
-"11328" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2035</SUB>> ]
-"11335" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2036</SUB>> ]
-"11339" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2036</SUB>> ]
-"11345" [label = <(&lt;operator&gt;.notEquals,chars != s-&gt;GetValue())<SUB>2036</SUB>> ]
-"11300" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2033</SUB>> ]
-"11304" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2033</SUB>> ]
-"11311" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2033</SUB>> ]
-"11321" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2035</SUB>> ]
-"11327" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2035</SUB>> ]
-"11330" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2035</SUB>> ]
-"11337" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2036</SUB>> ]
-"11340" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2036</SUB>> ]
-"11347" [label = <(GetValue,s-&gt;GetValue())<SUB>2036</SUB>> ]
-"11305" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2033</SUB>> ]
-"11341" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2036</SUB>> ]
-"11348" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2036</SUB>> ]
-"11306" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2033</SUB>> ]
-"11308" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2033</SUB>> ]
-"11343" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2036</SUB>> ]
-"11350" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2036</SUB>> ]
-"11290" [label = <(METHOD,ReleaseStringChars)<SUB>2032</SUB>> ]
-"11354" [label = <(METHOD_RETURN,void)<SUB>2032</SUB>> ]
-  "11295" -> "11300" 
-  "11295" -> "11313" 
-  "11313" -> "11321" 
-  "11315" -> "11337" 
-  "11316" -> "11327" 
-  "11323" -> "11315" 
-  "11333" -> "11354" 
-  "11333" -> "11352" 
-  "11317" -> "11316" 
-  "11324" -> "11323" 
-  "11334" -> "11333" 
-  "11334" -> "11343" 
-  "11338" -> "11333" 
-  "11352" -> "11354" 
-  "11299" -> "11306" 
-  "11299" -> "11313" 
-  "11319" -> "11317" 
-  "11325" -> "11330" 
-  "11328" -> "11324" 
-  "11335" -> "11334" 
-  "11339" -> "11338" 
-  "11339" -> "11350" 
-  "11345" -> "11338" 
-  "11300" -> "11299" 
-  "11304" -> "11311" 
-  "11311" -> "11354" 
-  "11321" -> "11319" 
+"11292" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2031</SUB>> ]
+"11310" [label = <(soa,soa(env))<SUB>2032</SUB>> ]
+"11312" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2033</SUB>> ]
+"11313" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2033</SUB>> ]
+"11320" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2033</SUB>> ]
+"11330" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue()))<SUB>2034</SUB>> ]
+"11314" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2033</SUB>> ]
+"11321" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2033</SUB>> ]
+"11331" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2034</SUB>> ]
+"11335" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue())<SUB>2034</SUB>> ]
+"11349" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2035</SUB>> ]
+"11296" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2031</SUB>> ]
+"11316" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2033</SUB>> ]
+"11322" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2033</SUB>> ]
+"11325" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2033</SUB>> ]
+"11332" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2034</SUB>> ]
+"11336" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2034</SUB>> ]
+"11342" [label = <(&lt;operator&gt;.notEquals,chars != s-&gt;GetValue())<SUB>2034</SUB>> ]
+"11297" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2031</SUB>> ]
+"11301" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2031</SUB>> ]
+"11308" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2031</SUB>> ]
+"11318" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2033</SUB>> ]
+"11324" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2033</SUB>> ]
+"11327" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2033</SUB>> ]
+"11334" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2034</SUB>> ]
+"11337" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2034</SUB>> ]
+"11344" [label = <(GetValue,s-&gt;GetValue())<SUB>2034</SUB>> ]
+"11302" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2031</SUB>> ]
+"11338" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2034</SUB>> ]
+"11345" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2034</SUB>> ]
+"11303" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2031</SUB>> ]
+"11305" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2031</SUB>> ]
+"11340" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2034</SUB>> ]
+"11347" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2034</SUB>> ]
+"11287" [label = <(METHOD,ReleaseStringChars)<SUB>2030</SUB>> ]
+"11351" [label = <(METHOD_RETURN,void)<SUB>2030</SUB>> ]
+  "11292" -> "11297" 
+  "11292" -> "11310" 
+  "11310" -> "11318" 
+  "11312" -> "11334" 
+  "11313" -> "11324" 
+  "11320" -> "11312" 
+  "11330" -> "11351" 
+  "11330" -> "11349" 
+  "11314" -> "11313" 
+  "11321" -> "11320" 
+  "11331" -> "11330" 
+  "11331" -> "11340" 
+  "11335" -> "11330" 
+  "11349" -> "11351" 
+  "11296" -> "11303" 
+  "11296" -> "11310" 
+  "11316" -> "11314" 
+  "11322" -> "11327" 
+  "11325" -> "11321" 
+  "11332" -> "11331" 
+  "11336" -> "11335" 
+  "11336" -> "11347" 
+  "11342" -> "11335" 
+  "11297" -> "11296" 
+  "11301" -> "11308" 
+  "11308" -> "11351" 
+  "11318" -> "11316" 
+  "11324" -> "11322" 
   "11327" -> "11325" 
-  "11330" -> "11328" 
-  "11337" -> "11335" 
-  "11340" -> "11339" 
+  "11334" -> "11332" 
+  "11337" -> "11336" 
+  "11344" -> "11342" 
+  "11302" -> "11301" 
+  "11338" -> "11337" 
+  "11345" -> "11344" 
+  "11303" -> "11305" 
+  "11305" -> "11302" 
+  "11340" -> "11338" 
   "11347" -> "11345" 
-  "11305" -> "11304" 
-  "11341" -> "11340" 
-  "11348" -> "11347" 
-  "11306" -> "11308" 
-  "11308" -> "11305" 
-  "11343" -> "11341" 
-  "11350" -> "11348" 
-  "11290" -> "11295" 
+  "11287" -> "11292" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/197-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/197-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/197-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/197-cfg.dot	2023-06-07 19:35:47.987382788 +0330
@@ -1,189 +1,189 @@
 digraph "GetStringCritical" {  
-"11361" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2042</SUB>> ]
-"11380" [label = <(soa,soa(env))<SUB>2043</SUB>> ]
-"11382" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2044</SUB>> ]
-"11400" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2045</SUB>> ]
-"11383" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2044</SUB>> ]
-"11390" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2044</SUB>> ]
-"11402" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2045</SUB>> ]
-"11410" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2046</SUB>> ]
-"11461" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2057</SUB>> ]
-"11384" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2044</SUB>> ]
-"11391" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2044</SUB>> ]
-"11403" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2045</SUB>> ]
-"11411" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2046</SUB>> ]
-"11416" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2047</SUB>> ]
-"11425" [label = <(&lt;operator&gt;.greaterThan,HandleWrapperObjPtr&lt;mirror::String&gt; h(hs.NewHandleWrapper(&amp;s)))<SUB>2048</SUB>> ]
-"11462" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2057</SUB>> ]
-"11476" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>2061</SUB>> ]
-"11483" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[length])<SUB>2062</SUB>> ]
-"11508" [label = <(RETURN,return chars;,return chars;)<SUB>2066</SUB>> ]
-"11365" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2042</SUB>> ]
-"11386" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2044</SUB>> ]
-"11392" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2044</SUB>> ]
-"11395" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2044</SUB>> ]
-"11404" [label = <(Runtime::Current,Runtime::Current())<SUB>2045</SUB>> ]
-"11408" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2045</SUB>> ]
-"11413" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2046</SUB>> ]
-"11417" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2047</SUB>> ]
-"11420" [label = <(hs,hs(soa.Self()))<SUB>2047</SUB>> ]
-"11426" [label = <(&lt;operator&gt;.lessThan,HandleWrapperObjPtr&lt;mirror::String)<SUB>2048</SUB>> ]
-"11431" [label = <(h,h(hs.NewHandleWrapper(&amp;s)))<SUB>2048</SUB>> ]
-"11439" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2049</SUB>> ]
-"11464" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2057</SUB>> ]
-"11467" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2058</SUB>> ]
-"11478" [label = <(GetLength,s-&gt;GetLength())<SUB>2061</SUB>> ]
-"11485" [label = <(&lt;operator&gt;.new,new jchar[length])<SUB>2062</SUB>> ]
-"11493" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2063</SUB>> ]
-"11496" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2063</SUB>> ]
-"11521" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2071</SUB>> ]
-"11366" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2042</SUB>> ]
-"11370" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2042</SUB>> ]
-"11377" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2042</SUB>> ]
-"11388" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2044</SUB>> ]
-"11394" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2044</SUB>> ]
-"11397" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2044</SUB>> ]
-"11405" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2045</SUB>> ]
-"11421" [label = <(Self,soa.Self())<SUB>2047</SUB>> ]
-"11428" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2048</SUB>> ]
-"11432" [label = <(NewHandleWrapper,hs.NewHandleWrapper(&amp;s))<SUB>2048</SUB>> ]
-"11442" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2050</SUB>> ]
-"11471" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2059</SUB>> ]
-"11479" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2061</SUB>> ]
-"11490" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2063</SUB>> ]
-"11499" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>2064</SUB>> ]
-"11513" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2068</SUB>> ]
-"11522" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2071</SUB>> ]
-"11371" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2042</SUB>> ]
-"11407" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2045</SUB>> ]
-"11422" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2047</SUB>> ]
-"11430" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2048</SUB>> ]
-"11433" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandleWrapper)<SUB>2048</SUB>> ]
-"11436" [label = <(&lt;operator&gt;.addressOf,&amp;s)<SUB>2048</SUB>> ]
-"11443" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2050</SUB>> ]
-"11446" [label = <(Self,soa.Self())<SUB>2050</SUB>> ]
-"11452" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2054</SUB>> ]
-"11472" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2059</SUB>> ]
-"11481" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2061</SUB>> ]
-"11500" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>2064</SUB>> ]
-"11503" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2064</SUB>> ]
-"11517" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2069</SUB>> ]
-"11523" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2071</SUB>> ]
-"11524" [label = <(GetValue,s-&gt;GetValue())<SUB>2071</SUB>> ]
-"11372" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2042</SUB>> ]
-"11374" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2042</SUB>> ]
-"11424" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2047</SUB>> ]
-"11435" [label = <(FIELD_IDENTIFIER,NewHandleWrapper,NewHandleWrapper)<SUB>2048</SUB>> ]
-"11445" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2050</SUB>> ]
-"11447" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2050</SUB>> ]
-"11453" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2054</SUB>> ]
-"11456" [label = <(Self,soa.Self())<SUB>2054</SUB>> ]
-"11504" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2064</SUB>> ]
-"11518" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2069</SUB>> ]
-"11525" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2071</SUB>> ]
-"11449" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2050</SUB>> ]
-"11455" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2054</SUB>> ]
-"11457" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2054</SUB>> ]
-"11506" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2064</SUB>> ]
-"11527" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2071</SUB>> ]
-"11459" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2054</SUB>> ]
-"11356" [label = <(METHOD,GetStringCritical)<SUB>2041</SUB>> ]
-"11528" [label = <(METHOD_RETURN,jchar)<SUB>2041</SUB>> ]
-  "11361" -> "11366" 
-  "11361" -> "11380" 
-  "11380" -> "11388" 
-  "11382" -> "11407" 
-  "11400" -> "11413" 
-  "11383" -> "11394" 
-  "11390" -> "11382" 
-  "11402" -> "11400" 
-  "11410" -> "11417" 
-  "11410" -> "11464" 
-  "11461" -> "11467" 
-  "11461" -> "11513" 
-  "11384" -> "11383" 
-  "11391" -> "11390" 
-  "11403" -> "11402" 
-  "11411" -> "11410" 
-  "11416" -> "11430" 
-  "11425" -> "11439" 
-  "11462" -> "11461" 
-  "11476" -> "11485" 
-  "11483" -> "11490" 
-  "11508" -> "11528" 
-  "11365" -> "11372" 
-  "11365" -> "11380" 
-  "11386" -> "11384" 
-  "11392" -> "11397" 
-  "11395" -> "11391" 
-  "11404" -> "11408" 
-  "11408" -> "11403" 
-  "11413" -> "11411" 
-  "11417" -> "11424" 
-  "11420" -> "11416" 
-  "11426" -> "11435" 
-  "11431" -> "11425" 
-  "11439" -> "11445" 
-  "11439" -> "11455" 
-  "11464" -> "11462" 
-  "11467" -> "11472" 
-  "11467" -> "11481" 
-  "11478" -> "11476" 
-  "11485" -> "11483" 
-  "11493" -> "11500" 
-  "11493" -> "11508" 
-  "11496" -> "11493" 
-  "11521" -> "11528" 
-  "11366" -> "11365" 
-  "11370" -> "11377" 
-  "11377" -> "11528" 
-  "11388" -> "11386" 
+"11358" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2040</SUB>> ]
+"11377" [label = <(soa,soa(env))<SUB>2041</SUB>> ]
+"11379" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2042</SUB>> ]
+"11397" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2043</SUB>> ]
+"11380" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2042</SUB>> ]
+"11387" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2042</SUB>> ]
+"11399" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2043</SUB>> ]
+"11407" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2044</SUB>> ]
+"11458" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2055</SUB>> ]
+"11381" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2042</SUB>> ]
+"11388" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2042</SUB>> ]
+"11400" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2043</SUB>> ]
+"11408" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2044</SUB>> ]
+"11413" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2045</SUB>> ]
+"11422" [label = <(&lt;operator&gt;.greaterThan,HandleWrapperObjPtr&lt;mirror::String&gt; h(hs.NewHandleWrapper(&amp;s)))<SUB>2046</SUB>> ]
+"11459" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2055</SUB>> ]
+"11473" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>2059</SUB>> ]
+"11480" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[length])<SUB>2060</SUB>> ]
+"11505" [label = <(RETURN,return chars;,return chars;)<SUB>2064</SUB>> ]
+"11362" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2040</SUB>> ]
+"11383" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2042</SUB>> ]
+"11389" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2042</SUB>> ]
+"11392" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2042</SUB>> ]
+"11401" [label = <(Runtime::Current,Runtime::Current())<SUB>2043</SUB>> ]
+"11405" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2043</SUB>> ]
+"11410" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2044</SUB>> ]
+"11414" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2045</SUB>> ]
+"11417" [label = <(hs,hs(soa.Self()))<SUB>2045</SUB>> ]
+"11423" [label = <(&lt;operator&gt;.lessThan,HandleWrapperObjPtr&lt;mirror::String)<SUB>2046</SUB>> ]
+"11428" [label = <(h,h(hs.NewHandleWrapper(&amp;s)))<SUB>2046</SUB>> ]
+"11436" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2047</SUB>> ]
+"11461" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2055</SUB>> ]
+"11464" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2056</SUB>> ]
+"11475" [label = <(GetLength,s-&gt;GetLength())<SUB>2059</SUB>> ]
+"11482" [label = <(&lt;operator&gt;.new,new jchar[length])<SUB>2060</SUB>> ]
+"11490" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2061</SUB>> ]
+"11493" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2061</SUB>> ]
+"11518" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2069</SUB>> ]
+"11363" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2040</SUB>> ]
+"11367" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2040</SUB>> ]
+"11374" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2040</SUB>> ]
+"11385" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2042</SUB>> ]
+"11391" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2042</SUB>> ]
+"11394" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2042</SUB>> ]
+"11402" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2043</SUB>> ]
+"11418" [label = <(Self,soa.Self())<SUB>2045</SUB>> ]
+"11425" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2046</SUB>> ]
+"11429" [label = <(NewHandleWrapper,hs.NewHandleWrapper(&amp;s))<SUB>2046</SUB>> ]
+"11439" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2048</SUB>> ]
+"11468" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2057</SUB>> ]
+"11476" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2059</SUB>> ]
+"11487" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2061</SUB>> ]
+"11496" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>2062</SUB>> ]
+"11510" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2066</SUB>> ]
+"11519" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2069</SUB>> ]
+"11368" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2040</SUB>> ]
+"11404" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2043</SUB>> ]
+"11419" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2045</SUB>> ]
+"11427" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2046</SUB>> ]
+"11430" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandleWrapper)<SUB>2046</SUB>> ]
+"11433" [label = <(&lt;operator&gt;.addressOf,&amp;s)<SUB>2046</SUB>> ]
+"11440" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2048</SUB>> ]
+"11443" [label = <(Self,soa.Self())<SUB>2048</SUB>> ]
+"11449" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2052</SUB>> ]
+"11469" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2057</SUB>> ]
+"11478" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2059</SUB>> ]
+"11497" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>2062</SUB>> ]
+"11500" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2062</SUB>> ]
+"11514" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2067</SUB>> ]
+"11520" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2069</SUB>> ]
+"11521" [label = <(GetValue,s-&gt;GetValue())<SUB>2069</SUB>> ]
+"11369" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2040</SUB>> ]
+"11371" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2040</SUB>> ]
+"11421" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2045</SUB>> ]
+"11432" [label = <(FIELD_IDENTIFIER,NewHandleWrapper,NewHandleWrapper)<SUB>2046</SUB>> ]
+"11442" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2048</SUB>> ]
+"11444" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2048</SUB>> ]
+"11450" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2052</SUB>> ]
+"11453" [label = <(Self,soa.Self())<SUB>2052</SUB>> ]
+"11501" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2062</SUB>> ]
+"11515" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2067</SUB>> ]
+"11522" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2069</SUB>> ]
+"11446" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2048</SUB>> ]
+"11452" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2052</SUB>> ]
+"11454" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2052</SUB>> ]
+"11503" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2062</SUB>> ]
+"11524" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2069</SUB>> ]
+"11456" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2052</SUB>> ]
+"11353" [label = <(METHOD,GetStringCritical)<SUB>2039</SUB>> ]
+"11525" [label = <(METHOD_RETURN,jchar)<SUB>2039</SUB>> ]
+  "11358" -> "11363" 
+  "11358" -> "11377" 
+  "11377" -> "11385" 
+  "11379" -> "11404" 
+  "11397" -> "11410" 
+  "11380" -> "11391" 
+  "11387" -> "11379" 
+  "11399" -> "11397" 
+  "11407" -> "11414" 
+  "11407" -> "11461" 
+  "11458" -> "11464" 
+  "11458" -> "11510" 
+  "11381" -> "11380" 
+  "11388" -> "11387" 
+  "11400" -> "11399" 
+  "11408" -> "11407" 
+  "11413" -> "11427" 
+  "11422" -> "11436" 
+  "11459" -> "11458" 
+  "11473" -> "11482" 
+  "11480" -> "11487" 
+  "11505" -> "11525" 
+  "11362" -> "11369" 
+  "11362" -> "11377" 
+  "11383" -> "11381" 
+  "11389" -> "11394" 
+  "11392" -> "11388" 
+  "11401" -> "11405" 
+  "11405" -> "11400" 
+  "11410" -> "11408" 
+  "11414" -> "11421" 
+  "11417" -> "11413" 
+  "11423" -> "11432" 
+  "11428" -> "11422" 
+  "11436" -> "11442" 
+  "11436" -> "11452" 
+  "11461" -> "11459" 
+  "11464" -> "11469" 
+  "11464" -> "11478" 
+  "11475" -> "11473" 
+  "11482" -> "11480" 
+  "11490" -> "11497" 
+  "11490" -> "11505" 
+  "11493" -> "11490" 
+  "11518" -> "11525" 
+  "11363" -> "11362" 
+  "11367" -> "11374" 
+  "11374" -> "11525" 
+  "11385" -> "11383" 
+  "11391" -> "11389" 
   "11394" -> "11392" 
-  "11397" -> "11395" 
-  "11405" -> "11404" 
-  "11421" -> "11420" 
-  "11428" -> "11426" 
-  "11432" -> "11431" 
-  "11442" -> "11464" 
-  "11471" -> "11481" 
-  "11479" -> "11478" 
-  "11490" -> "11493" 
-  "11499" -> "11496" 
-  "11513" -> "11523" 
-  "11513" -> "11518" 
+  "11402" -> "11401" 
+  "11418" -> "11417" 
+  "11425" -> "11423" 
+  "11429" -> "11428" 
+  "11439" -> "11461" 
+  "11468" -> "11478" 
+  "11476" -> "11475" 
+  "11487" -> "11490" 
+  "11496" -> "11493" 
+  "11510" -> "11520" 
+  "11510" -> "11515" 
+  "11519" -> "11518" 
+  "11368" -> "11367" 
+  "11404" -> "11402" 
+  "11419" -> "11418" 
+  "11427" -> "11425" 
+  "11430" -> "11433" 
+  "11433" -> "11429" 
+  "11440" -> "11446" 
+  "11443" -> "11439" 
+  "11449" -> "11461" 
+  "11469" -> "11468" 
+  "11478" -> "11476" 
+  "11497" -> "11503" 
+  "11500" -> "11496" 
+  "11514" -> "11520" 
+  "11520" -> "11524" 
+  "11521" -> "11519" 
+  "11369" -> "11371" 
+  "11371" -> "11368" 
+  "11421" -> "11419" 
+  "11432" -> "11430" 
+  "11442" -> "11440" 
+  "11444" -> "11443" 
+  "11450" -> "11456" 
+  "11453" -> "11449" 
+  "11501" -> "11500" 
+  "11515" -> "11514" 
   "11522" -> "11521" 
-  "11371" -> "11370" 
-  "11407" -> "11405" 
-  "11422" -> "11421" 
-  "11430" -> "11428" 
-  "11433" -> "11436" 
-  "11436" -> "11432" 
-  "11443" -> "11449" 
-  "11446" -> "11442" 
-  "11452" -> "11464" 
-  "11472" -> "11471" 
-  "11481" -> "11479" 
-  "11500" -> "11506" 
-  "11503" -> "11499" 
-  "11517" -> "11523" 
-  "11523" -> "11527" 
+  "11446" -> "11444" 
+  "11452" -> "11450" 
+  "11454" -> "11453" 
+  "11503" -> "11501" 
   "11524" -> "11522" 
-  "11372" -> "11374" 
-  "11374" -> "11371" 
-  "11424" -> "11422" 
-  "11435" -> "11433" 
-  "11445" -> "11443" 
-  "11447" -> "11446" 
-  "11453" -> "11459" 
-  "11456" -> "11452" 
-  "11504" -> "11503" 
-  "11518" -> "11517" 
-  "11525" -> "11524" 
-  "11449" -> "11447" 
-  "11455" -> "11453" 
-  "11457" -> "11456" 
-  "11506" -> "11504" 
-  "11527" -> "11525" 
-  "11459" -> "11457" 
-  "11356" -> "11361" 
+  "11456" -> "11454" 
+  "11353" -> "11358" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/198-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/198-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/198-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/198-cfg.dot	2023-06-07 19:35:47.997382785 +0330
@@ -1,126 +1,126 @@
 digraph "ReleaseStringCritical" {  
-"11535" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2078</SUB>> ]
-"11553" [label = <(soa,soa(env))<SUB>2079</SUB>> ]
-"11556" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2080</SUB>> ]
-"11565" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2081</SUB>> ]
-"11558" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2080</SUB>> ]
-"11566" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2081</SUB>> ]
-"11573" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2081</SUB>> ]
-"11583" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2082</SUB>> ]
-"11612" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars))<SUB>2089</SUB>> ]
-"11559" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2080</SUB>> ]
-"11567" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2081</SUB>> ]
-"11574" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2081</SUB>> ]
-"11584" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2082</SUB>> ]
-"11613" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2089</SUB>> ]
-"11617" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars)<SUB>2089</SUB>> ]
-"11631" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2090</SUB>> ]
-"11539" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2078</SUB>> ]
-"11560" [label = <(Runtime::Current,Runtime::Current())<SUB>2080</SUB>> ]
-"11564" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2080</SUB>> ]
-"11569" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2081</SUB>> ]
-"11575" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2081</SUB>> ]
-"11578" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2081</SUB>> ]
-"11586" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2082</SUB>> ]
-"11590" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2083</SUB>> ]
-"11614" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2089</SUB>> ]
-"11618" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2089</SUB>> ]
-"11624" [label = <(&lt;operator&gt;.notEquals,s-&gt;GetValue() != chars)<SUB>2089</SUB>> ]
-"11540" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2078</SUB>> ]
-"11544" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2078</SUB>> ]
-"11551" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2078</SUB>> ]
-"11561" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2080</SUB>> ]
-"11571" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2081</SUB>> ]
-"11577" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2081</SUB>> ]
-"11580" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2081</SUB>> ]
-"11593" [label = <(DecrementDisableMovingGC,heap-&gt;DecrementDisableMovingGC(soa.Self()))<SUB>2084</SUB>> ]
-"11616" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2089</SUB>> ]
-"11619" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2089</SUB>> ]
-"11625" [label = <(GetValue,s-&gt;GetValue())<SUB>2089</SUB>> ]
-"11545" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2078</SUB>> ]
-"11563" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2080</SUB>> ]
-"11594" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableMovingGC)<SUB>2084</SUB>> ]
-"11597" [label = <(Self,soa.Self())<SUB>2084</SUB>> ]
-"11603" [label = <(DecrementDisableThreadFlip,heap-&gt;DecrementDisableThreadFlip(soa.Self()))<SUB>2086</SUB>> ]
-"11620" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2089</SUB>> ]
-"11626" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2089</SUB>> ]
-"11546" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2078</SUB>> ]
-"11548" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2078</SUB>> ]
-"11596" [label = <(FIELD_IDENTIFIER,DecrementDisableMovingGC,DecrementDisableMovingGC)<SUB>2084</SUB>> ]
-"11598" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2084</SUB>> ]
-"11604" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableThreadFlip)<SUB>2086</SUB>> ]
-"11607" [label = <(Self,soa.Self())<SUB>2086</SUB>> ]
-"11622" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2089</SUB>> ]
-"11628" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2089</SUB>> ]
-"11600" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2084</SUB>> ]
-"11606" [label = <(FIELD_IDENTIFIER,DecrementDisableThreadFlip,DecrementDisableThreadFlip)<SUB>2086</SUB>> ]
-"11608" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2086</SUB>> ]
-"11610" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2086</SUB>> ]
-"11530" [label = <(METHOD,ReleaseStringCritical)<SUB>2075</SUB>> ]
-"11633" [label = <(METHOD_RETURN,void)<SUB>2075</SUB>> ]
-  "11535" -> "11540" 
-  "11535" -> "11553" 
-  "11553" -> "11563" 
-  "11556" -> "11571" 
-  "11565" -> "11586" 
-  "11558" -> "11556" 
-  "11566" -> "11577" 
-  "11573" -> "11565" 
-  "11583" -> "11590" 
-  "11583" -> "11616" 
-  "11612" -> "11633" 
-  "11612" -> "11631" 
-  "11559" -> "11558" 
-  "11567" -> "11566" 
-  "11574" -> "11573" 
-  "11584" -> "11583" 
-  "11613" -> "11612" 
-  "11613" -> "11622" 
-  "11617" -> "11612" 
-  "11631" -> "11633" 
-  "11539" -> "11546" 
-  "11539" -> "11553" 
-  "11560" -> "11564" 
-  "11564" -> "11559" 
-  "11569" -> "11567" 
-  "11575" -> "11580" 
-  "11578" -> "11574" 
-  "11586" -> "11584" 
-  "11590" -> "11596" 
-  "11590" -> "11606" 
-  "11614" -> "11613" 
-  "11618" -> "11617" 
-  "11618" -> "11628" 
-  "11624" -> "11617" 
-  "11540" -> "11539" 
-  "11544" -> "11551" 
-  "11551" -> "11633" 
-  "11561" -> "11560" 
-  "11571" -> "11569" 
+"11532" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2076</SUB>> ]
+"11550" [label = <(soa,soa(env))<SUB>2077</SUB>> ]
+"11553" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2078</SUB>> ]
+"11562" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2079</SUB>> ]
+"11555" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2078</SUB>> ]
+"11563" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2079</SUB>> ]
+"11570" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2079</SUB>> ]
+"11580" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2080</SUB>> ]
+"11609" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars))<SUB>2087</SUB>> ]
+"11556" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2078</SUB>> ]
+"11564" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2079</SUB>> ]
+"11571" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2079</SUB>> ]
+"11581" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2080</SUB>> ]
+"11610" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2087</SUB>> ]
+"11614" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars)<SUB>2087</SUB>> ]
+"11628" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2088</SUB>> ]
+"11536" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2076</SUB>> ]
+"11557" [label = <(Runtime::Current,Runtime::Current())<SUB>2078</SUB>> ]
+"11561" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2078</SUB>> ]
+"11566" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2079</SUB>> ]
+"11572" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2079</SUB>> ]
+"11575" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2079</SUB>> ]
+"11583" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2080</SUB>> ]
+"11587" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2081</SUB>> ]
+"11611" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2087</SUB>> ]
+"11615" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2087</SUB>> ]
+"11621" [label = <(&lt;operator&gt;.notEquals,s-&gt;GetValue() != chars)<SUB>2087</SUB>> ]
+"11537" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2076</SUB>> ]
+"11541" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2076</SUB>> ]
+"11548" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2076</SUB>> ]
+"11558" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2078</SUB>> ]
+"11568" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2079</SUB>> ]
+"11574" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2079</SUB>> ]
+"11577" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2079</SUB>> ]
+"11590" [label = <(DecrementDisableMovingGC,heap-&gt;DecrementDisableMovingGC(soa.Self()))<SUB>2082</SUB>> ]
+"11613" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2087</SUB>> ]
+"11616" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2087</SUB>> ]
+"11622" [label = <(GetValue,s-&gt;GetValue())<SUB>2087</SUB>> ]
+"11542" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2076</SUB>> ]
+"11560" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2078</SUB>> ]
+"11591" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableMovingGC)<SUB>2082</SUB>> ]
+"11594" [label = <(Self,soa.Self())<SUB>2082</SUB>> ]
+"11600" [label = <(DecrementDisableThreadFlip,heap-&gt;DecrementDisableThreadFlip(soa.Self()))<SUB>2084</SUB>> ]
+"11617" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2087</SUB>> ]
+"11623" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2087</SUB>> ]
+"11543" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2076</SUB>> ]
+"11545" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2076</SUB>> ]
+"11593" [label = <(FIELD_IDENTIFIER,DecrementDisableMovingGC,DecrementDisableMovingGC)<SUB>2082</SUB>> ]
+"11595" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2082</SUB>> ]
+"11601" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableThreadFlip)<SUB>2084</SUB>> ]
+"11604" [label = <(Self,soa.Self())<SUB>2084</SUB>> ]
+"11619" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2087</SUB>> ]
+"11625" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2087</SUB>> ]
+"11597" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2082</SUB>> ]
+"11603" [label = <(FIELD_IDENTIFIER,DecrementDisableThreadFlip,DecrementDisableThreadFlip)<SUB>2084</SUB>> ]
+"11605" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2084</SUB>> ]
+"11607" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2084</SUB>> ]
+"11527" [label = <(METHOD,ReleaseStringCritical)<SUB>2073</SUB>> ]
+"11630" [label = <(METHOD_RETURN,void)<SUB>2073</SUB>> ]
+  "11532" -> "11537" 
+  "11532" -> "11550" 
+  "11550" -> "11560" 
+  "11553" -> "11568" 
+  "11562" -> "11583" 
+  "11555" -> "11553" 
+  "11563" -> "11574" 
+  "11570" -> "11562" 
+  "11580" -> "11587" 
+  "11580" -> "11613" 
+  "11609" -> "11630" 
+  "11609" -> "11628" 
+  "11556" -> "11555" 
+  "11564" -> "11563" 
+  "11571" -> "11570" 
+  "11581" -> "11580" 
+  "11610" -> "11609" 
+  "11610" -> "11619" 
+  "11614" -> "11609" 
+  "11628" -> "11630" 
+  "11536" -> "11543" 
+  "11536" -> "11550" 
+  "11557" -> "11561" 
+  "11561" -> "11556" 
+  "11566" -> "11564" 
+  "11572" -> "11577" 
+  "11575" -> "11571" 
+  "11583" -> "11581" 
+  "11587" -> "11593" 
+  "11587" -> "11603" 
+  "11611" -> "11610" 
+  "11615" -> "11614" 
+  "11615" -> "11625" 
+  "11621" -> "11614" 
+  "11537" -> "11536" 
+  "11541" -> "11548" 
+  "11548" -> "11630" 
+  "11558" -> "11557" 
+  "11568" -> "11566" 
+  "11574" -> "11572" 
   "11577" -> "11575" 
-  "11580" -> "11578" 
-  "11593" -> "11616" 
-  "11616" -> "11614" 
-  "11619" -> "11618" 
-  "11625" -> "11624" 
-  "11545" -> "11544" 
-  "11563" -> "11561" 
-  "11594" -> "11600" 
-  "11597" -> "11593" 
-  "11603" -> "11616" 
-  "11620" -> "11619" 
-  "11626" -> "11625" 
-  "11546" -> "11548" 
-  "11548" -> "11545" 
-  "11596" -> "11594" 
-  "11598" -> "11597" 
-  "11604" -> "11610" 
-  "11607" -> "11603" 
-  "11622" -> "11620" 
-  "11628" -> "11626" 
-  "11600" -> "11598" 
-  "11606" -> "11604" 
-  "11608" -> "11607" 
-  "11610" -> "11608" 
-  "11530" -> "11535" 
+  "11590" -> "11613" 
+  "11613" -> "11611" 
+  "11616" -> "11615" 
+  "11622" -> "11621" 
+  "11542" -> "11541" 
+  "11560" -> "11558" 
+  "11591" -> "11597" 
+  "11594" -> "11590" 
+  "11600" -> "11613" 
+  "11617" -> "11616" 
+  "11623" -> "11622" 
+  "11543" -> "11545" 
+  "11545" -> "11542" 
+  "11593" -> "11591" 
+  "11595" -> "11594" 
+  "11601" -> "11607" 
+  "11604" -> "11600" 
+  "11619" -> "11617" 
+  "11625" -> "11623" 
+  "11597" -> "11595" 
+  "11603" -> "11601" 
+  "11605" -> "11604" 
+  "11607" -> "11605" 
+  "11527" -> "11532" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/199-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/199-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/199-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/199-cfg.dot	2023-06-07 19:35:47.997382785 +0330
@@ -1,103 +1,103 @@
 digraph "GetStringUTFChars" {  
-"11657" [label = <(soa,soa(env))<SUB>2101</SUB>> ]
-"11659" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2102</SUB>> ]
-"11677" [label = <(&lt;operator&gt;.assignment,byte_count = s-&gt;GetUtfLength())<SUB>2103</SUB>> ]
-"11684" [label = <(&lt;operator&gt;.assignment,* bytes = new char[byte_count + 1])<SUB>2104</SUB>> ]
-"11688" [label = <(CHECK,CHECK(bytes != nullptr))<SUB>2105</SUB>> ]
-"11736" [label = <(&lt;operator&gt;.assignment,bytes[byte_count] = '\0')<SUB>2114</SUB>> ]
-"11741" [label = <(RETURN,return bytes;,return bytes;)<SUB>2115</SUB>> ]
-"11641" [label = <(&lt;operator&gt;.equals,java_string == nullptr)<SUB>2095</SUB>> ]
-"11648" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2098</SUB>> ]
-"11660" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2102</SUB>> ]
-"11667" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2102</SUB>> ]
-"11679" [label = <(GetUtfLength,s-&gt;GetUtfLength())<SUB>2103</SUB>> ]
-"11686" [label = <(&lt;operator&gt;.new,new char[byte_count + 1])<SUB>2104</SUB>> ]
-"11689" [label = <(&lt;operator&gt;.notEquals,bytes != nullptr)<SUB>2105</SUB>> ]
-"11693" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2106</SUB>> ]
-"11737" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[byte_count])<SUB>2114</SUB>> ]
-"11645" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2096</SUB>> ]
-"11652" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2099</SUB>> ]
-"11661" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2102</SUB>> ]
-"11668" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2102</SUB>> ]
-"11680" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetUtfLength)<SUB>2103</SUB>> ]
-"11694" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2106</SUB>> ]
-"11653" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2099</SUB>> ]
-"11663" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2102</SUB>> ]
-"11669" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2102</SUB>> ]
-"11672" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2102</SUB>> ]
-"11682" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>2103</SUB>> ]
-"11696" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2106</SUB>> ]
-"11704" [label = <(&lt;operator&gt;.lessThan,i &lt; byte_count)<SUB>2107</SUB>> ]
-"11707" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2107</SUB>> ]
-"11722" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>2111</SUB>> ]
-"11728" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(bytes, byte_count, chars, s-&gt;GetLength()))<SUB>2112</SUB>> ]
-"11665" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2102</SUB>> ]
-"11671" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2102</SUB>> ]
-"11674" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2102</SUB>> ]
-"11701" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2107</SUB>> ]
-"11710" [label = <(&lt;operator&gt;.assignment,bytes[i] = s-&gt;CharAt(i))<SUB>2108</SUB>> ]
-"11724" [label = <(GetValue,s-&gt;GetValue())<SUB>2111</SUB>> ]
-"11732" [label = <(GetLength,s-&gt;GetLength())<SUB>2112</SUB>> ]
-"11711" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[i])<SUB>2108</SUB>> ]
-"11714" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2108</SUB>> ]
-"11725" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2111</SUB>> ]
-"11733" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2112</SUB>> ]
-"11715" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2108</SUB>> ]
-"11727" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2111</SUB>> ]
-"11735" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2112</SUB>> ]
-"11717" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2108</SUB>> ]
-"11635" [label = <(METHOD,GetStringUTFChars)<SUB>2094</SUB>> ]
-"11743" [label = <(METHOD_RETURN,const char*)<SUB>2094</SUB>> ]
-  "11657" -> "11665" 
-  "11659" -> "11682" 
-  "11677" -> "11686" 
-  "11684" -> "11689" 
-  "11688" -> "11696" 
-  "11736" -> "11741" 
-  "11741" -> "11743" 
-  "11641" -> "11645" 
-  "11641" -> "11648" 
-  "11648" -> "11653" 
-  "11648" -> "11657" 
-  "11660" -> "11671" 
-  "11667" -> "11659" 
+"11654" [label = <(soa,soa(env))<SUB>2099</SUB>> ]
+"11656" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2100</SUB>> ]
+"11674" [label = <(&lt;operator&gt;.assignment,byte_count = s-&gt;GetUtfLength())<SUB>2101</SUB>> ]
+"11681" [label = <(&lt;operator&gt;.assignment,* bytes = new char[byte_count + 1])<SUB>2102</SUB>> ]
+"11685" [label = <(CHECK,CHECK(bytes != nullptr))<SUB>2103</SUB>> ]
+"11733" [label = <(&lt;operator&gt;.assignment,bytes[byte_count] = '\0')<SUB>2112</SUB>> ]
+"11738" [label = <(RETURN,return bytes;,return bytes;)<SUB>2113</SUB>> ]
+"11638" [label = <(&lt;operator&gt;.equals,java_string == nullptr)<SUB>2093</SUB>> ]
+"11645" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2096</SUB>> ]
+"11657" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2100</SUB>> ]
+"11664" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2100</SUB>> ]
+"11676" [label = <(GetUtfLength,s-&gt;GetUtfLength())<SUB>2101</SUB>> ]
+"11683" [label = <(&lt;operator&gt;.new,new char[byte_count + 1])<SUB>2102</SUB>> ]
+"11686" [label = <(&lt;operator&gt;.notEquals,bytes != nullptr)<SUB>2103</SUB>> ]
+"11690" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2104</SUB>> ]
+"11734" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[byte_count])<SUB>2112</SUB>> ]
+"11642" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2094</SUB>> ]
+"11649" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2097</SUB>> ]
+"11658" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2100</SUB>> ]
+"11665" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2100</SUB>> ]
+"11677" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetUtfLength)<SUB>2101</SUB>> ]
+"11691" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2104</SUB>> ]
+"11650" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2097</SUB>> ]
+"11660" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2100</SUB>> ]
+"11666" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2100</SUB>> ]
+"11669" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2100</SUB>> ]
+"11679" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>2101</SUB>> ]
+"11693" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2104</SUB>> ]
+"11701" [label = <(&lt;operator&gt;.lessThan,i &lt; byte_count)<SUB>2105</SUB>> ]
+"11704" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2105</SUB>> ]
+"11719" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>2109</SUB>> ]
+"11725" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(bytes, byte_count, chars, s-&gt;GetLength()))<SUB>2110</SUB>> ]
+"11662" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2100</SUB>> ]
+"11668" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2100</SUB>> ]
+"11671" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2100</SUB>> ]
+"11698" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2105</SUB>> ]
+"11707" [label = <(&lt;operator&gt;.assignment,bytes[i] = s-&gt;CharAt(i))<SUB>2106</SUB>> ]
+"11721" [label = <(GetValue,s-&gt;GetValue())<SUB>2109</SUB>> ]
+"11729" [label = <(GetLength,s-&gt;GetLength())<SUB>2110</SUB>> ]
+"11708" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[i])<SUB>2106</SUB>> ]
+"11711" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2106</SUB>> ]
+"11722" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2109</SUB>> ]
+"11730" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2110</SUB>> ]
+"11712" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2106</SUB>> ]
+"11724" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2109</SUB>> ]
+"11732" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2110</SUB>> ]
+"11714" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2106</SUB>> ]
+"11632" [label = <(METHOD,GetStringUTFChars)<SUB>2092</SUB>> ]
+"11740" [label = <(METHOD_RETURN,const char*)<SUB>2092</SUB>> ]
+  "11654" -> "11662" 
+  "11656" -> "11679" 
+  "11674" -> "11683" 
+  "11681" -> "11686" 
+  "11685" -> "11693" 
+  "11733" -> "11738" 
+  "11738" -> "11740" 
+  "11638" -> "11642" 
+  "11638" -> "11645" 
+  "11645" -> "11650" 
+  "11645" -> "11654" 
+  "11657" -> "11668" 
+  "11664" -> "11656" 
+  "11676" -> "11674" 
+  "11683" -> "11681" 
+  "11686" -> "11685" 
+  "11690" -> "11698" 
+  "11690" -> "11724" 
+  "11734" -> "11733" 
+  "11642" -> "11740" 
+  "11649" -> "11654" 
+  "11658" -> "11657" 
+  "11665" -> "11664" 
+  "11677" -> "11676" 
+  "11691" -> "11690" 
+  "11650" -> "11649" 
+  "11660" -> "11658" 
+  "11666" -> "11671" 
+  "11669" -> "11665" 
   "11679" -> "11677" 
-  "11686" -> "11684" 
-  "11689" -> "11688" 
-  "11693" -> "11701" 
-  "11693" -> "11727" 
-  "11737" -> "11736" 
-  "11645" -> "11743" 
-  "11652" -> "11657" 
-  "11661" -> "11660" 
-  "11668" -> "11667" 
-  "11680" -> "11679" 
-  "11694" -> "11693" 
-  "11653" -> "11652" 
-  "11663" -> "11661" 
-  "11669" -> "11674" 
-  "11672" -> "11668" 
-  "11682" -> "11680" 
-  "11696" -> "11694" 
-  "11704" -> "11711" 
-  "11704" -> "11737" 
-  "11707" -> "11704" 
-  "11722" -> "11735" 
-  "11728" -> "11737" 
-  "11665" -> "11663" 
+  "11693" -> "11691" 
+  "11701" -> "11708" 
+  "11701" -> "11734" 
+  "11704" -> "11701" 
+  "11719" -> "11732" 
+  "11725" -> "11734" 
+  "11662" -> "11660" 
+  "11668" -> "11666" 
   "11671" -> "11669" 
-  "11674" -> "11672" 
-  "11701" -> "11704" 
-  "11710" -> "11707" 
+  "11698" -> "11701" 
+  "11707" -> "11704" 
+  "11721" -> "11719" 
+  "11729" -> "11725" 
+  "11708" -> "11714" 
+  "11711" -> "11707" 
+  "11722" -> "11721" 
+  "11730" -> "11729" 
+  "11712" -> "11711" 
   "11724" -> "11722" 
-  "11732" -> "11728" 
-  "11711" -> "11717" 
-  "11714" -> "11710" 
-  "11725" -> "11724" 
-  "11733" -> "11732" 
-  "11715" -> "11714" 
-  "11727" -> "11725" 
-  "11735" -> "11733" 
-  "11717" -> "11715" 
-  "11635" -> "11641" 
+  "11732" -> "11730" 
+  "11714" -> "11712" 
+  "11632" -> "11638" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/2-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/2-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/2-cfg.dot	2023-06-07 19:35:41.217383241 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/2-cfg.dot	2023-06-07 19:35:47.637382817 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_10" {  
-"15" [label = <(METHOD,anonymous_lambda_10)<SUB>1937</SUB>> ]
-"17" [label = <(METHOD_RETURN,ANY)<SUB>1937</SUB>> ]
+"15" [label = <(METHOD,anonymous_lambda_10)<SUB>1935</SUB>> ]
+"17" [label = <(METHOD_RETURN,ANY)<SUB>1935</SUB>> ]
   "15" -> "17" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/20-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/20-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/20-cfg.dot	2023-06-07 19:35:41.357383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/20-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureInitialized" {  
-"454" [label = <(METHOD,EnsureInitialized)<SUB>380</SUB>> ]
-"458" [label = <(METHOD_RETURN,ANY)<SUB>380</SUB>> ]
+"454" [label = <(METHOD,EnsureInitialized)<SUB>379</SUB>> ]
+"458" [label = <(METHOD_RETURN,ANY)<SUB>379</SUB>> ]
   "454" -> "458" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/200-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/200-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/200-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/200-cfg.dot	2023-06-07 19:35:47.997382785 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseStringUTFChars" {  
-"11750" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2119</SUB>> ]
-"11745" [label = <(METHOD,ReleaseStringUTFChars)<SUB>2118</SUB>> ]
-"11752" [label = <(METHOD_RETURN,void)<SUB>2118</SUB>> ]
-  "11750" -> "11752" 
-  "11745" -> "11750" 
+"11747" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2117</SUB>> ]
+"11742" [label = <(METHOD,ReleaseStringUTFChars)<SUB>2116</SUB>> ]
+"11749" [label = <(METHOD_RETURN,void)<SUB>2116</SUB>> ]
+  "11747" -> "11749" 
+  "11742" -> "11747" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/201-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/201-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/201-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/201-cfg.dot	2023-06-07 19:35:48.007382787 +0330
@@ -1,108 +1,108 @@
 digraph "GetArrayLength" {  
-"11758" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2123</SUB>> ]
-"11777" [label = <(soa,soa(env))<SUB>2124</SUB>> ]
-"11779" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2125</SUB>> ]
-"11822" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = obj-&gt;AsArray())<SUB>2130</SUB>> ]
-"11834" [label = <(RETURN,return array-&gt;GetLength();,return array-&gt;GetLength();)<SUB>2131</SUB>> ]
-"11780" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>2125</SUB>> ]
-"11787" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2125</SUB>> ]
-"11797" [label = <(UNLIKELY,UNLIKELY(!obj-&gt;IsArrayInstance()))<SUB>2126</SUB>> ]
-"11823" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2130</SUB>> ]
-"11830" [label = <(AsArray,obj-&gt;AsArray())<SUB>2130</SUB>> ]
-"11835" [label = <(GetLength,array-&gt;GetLength())<SUB>2131</SUB>> ]
-"11781" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2125</SUB>> ]
-"11788" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2125</SUB>> ]
-"11798" [label = <(&lt;operator&gt;.logicalNot,!obj-&gt;IsArrayInstance())<SUB>2126</SUB>> ]
-"11804" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetArrayLength&quot;, &quot;not an array: %s&quot;, obj-&gt;PrettyTypeOf().c_str()))<SUB>2127</SUB>> ]
-"11820" [label = <(RETURN,return 0;,return 0;)<SUB>2128</SUB>> ]
-"11824" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2130</SUB>> ]
-"11831" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;AsArray)<SUB>2130</SUB>> ]
-"11836" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2131</SUB>> ]
-"11762" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2123</SUB>> ]
-"11783" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2125</SUB>> ]
-"11789" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2125</SUB>> ]
-"11792" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2125</SUB>> ]
-"11799" [label = <(IsArrayInstance,obj-&gt;IsArrayInstance())<SUB>2126</SUB>> ]
-"11805" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2127</SUB>> ]
-"11813" [label = <(c_str,obj-&gt;PrettyTypeOf().c_str())<SUB>2127</SUB>> ]
-"11826" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2130</SUB>> ]
-"11833" [label = <(FIELD_IDENTIFIER,AsArray,AsArray)<SUB>2130</SUB>> ]
-"11838" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2131</SUB>> ]
-"11763" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2123</SUB>> ]
-"11767" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2123</SUB>> ]
-"11774" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2123</SUB>> ]
-"11785" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2125</SUB>> ]
-"11791" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2125</SUB>> ]
-"11794" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2125</SUB>> ]
-"11800" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;IsArrayInstance)<SUB>2126</SUB>> ]
-"11806" [label = <(Vm,soa.Vm())<SUB>2127</SUB>> ]
-"11810" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2127</SUB>> ]
-"11814" [label = <(&lt;operator&gt;.fieldAccess,obj-&gt;PrettyTypeOf().c_str)<SUB>2127</SUB>> ]
-"11828" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2130</SUB>> ]
-"11768" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2123</SUB>> ]
-"11802" [label = <(FIELD_IDENTIFIER,IsArrayInstance,IsArrayInstance)<SUB>2126</SUB>> ]
-"11807" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2127</SUB>> ]
-"11815" [label = <(PrettyTypeOf,obj-&gt;PrettyTypeOf())<SUB>2127</SUB>> ]
-"11819" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2127</SUB>> ]
-"11769" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2123</SUB>> ]
-"11771" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2123</SUB>> ]
-"11809" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2127</SUB>> ]
-"11816" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;PrettyTypeOf)<SUB>2127</SUB>> ]
-"11818" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>2127</SUB>> ]
-"11754" [label = <(METHOD,GetArrayLength)<SUB>2122</SUB>> ]
-"11839" [label = <(METHOD_RETURN,jsize)<SUB>2122</SUB>> ]
-  "11758" -> "11763" 
-  "11758" -> "11777" 
-  "11777" -> "11785" 
-  "11779" -> "11802" 
-  "11822" -> "11838" 
-  "11834" -> "11839" 
-  "11780" -> "11791" 
-  "11787" -> "11779" 
-  "11797" -> "11809" 
-  "11797" -> "11828" 
-  "11823" -> "11833" 
-  "11830" -> "11822" 
-  "11835" -> "11834" 
-  "11781" -> "11780" 
-  "11788" -> "11787" 
-  "11798" -> "11797" 
-  "11804" -> "11820" 
-  "11820" -> "11839" 
-  "11824" -> "11823" 
-  "11831" -> "11830" 
-  "11836" -> "11835" 
-  "11762" -> "11769" 
-  "11762" -> "11777" 
-  "11783" -> "11781" 
-  "11789" -> "11794" 
-  "11792" -> "11788" 
-  "11799" -> "11798" 
-  "11805" -> "11818" 
-  "11813" -> "11804" 
-  "11826" -> "11824" 
-  "11833" -> "11831" 
-  "11838" -> "11836" 
-  "11763" -> "11762" 
-  "11767" -> "11774" 
-  "11774" -> "11839" 
-  "11785" -> "11783" 
+"11755" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2121</SUB>> ]
+"11774" [label = <(soa,soa(env))<SUB>2122</SUB>> ]
+"11776" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2123</SUB>> ]
+"11819" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = obj-&gt;AsArray())<SUB>2128</SUB>> ]
+"11831" [label = <(RETURN,return array-&gt;GetLength();,return array-&gt;GetLength();)<SUB>2129</SUB>> ]
+"11777" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>2123</SUB>> ]
+"11784" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2123</SUB>> ]
+"11794" [label = <(UNLIKELY,UNLIKELY(!obj-&gt;IsArrayInstance()))<SUB>2124</SUB>> ]
+"11820" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2128</SUB>> ]
+"11827" [label = <(AsArray,obj-&gt;AsArray())<SUB>2128</SUB>> ]
+"11832" [label = <(GetLength,array-&gt;GetLength())<SUB>2129</SUB>> ]
+"11778" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2123</SUB>> ]
+"11785" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2123</SUB>> ]
+"11795" [label = <(&lt;operator&gt;.logicalNot,!obj-&gt;IsArrayInstance())<SUB>2124</SUB>> ]
+"11801" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetArrayLength&quot;, &quot;not an array: %s&quot;, obj-&gt;PrettyTypeOf().c_str()))<SUB>2125</SUB>> ]
+"11817" [label = <(RETURN,return 0;,return 0;)<SUB>2126</SUB>> ]
+"11821" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2128</SUB>> ]
+"11828" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;AsArray)<SUB>2128</SUB>> ]
+"11833" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2129</SUB>> ]
+"11759" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2121</SUB>> ]
+"11780" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2123</SUB>> ]
+"11786" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2123</SUB>> ]
+"11789" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2123</SUB>> ]
+"11796" [label = <(IsArrayInstance,obj-&gt;IsArrayInstance())<SUB>2124</SUB>> ]
+"11802" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2125</SUB>> ]
+"11810" [label = <(c_str,obj-&gt;PrettyTypeOf().c_str())<SUB>2125</SUB>> ]
+"11823" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2128</SUB>> ]
+"11830" [label = <(FIELD_IDENTIFIER,AsArray,AsArray)<SUB>2128</SUB>> ]
+"11835" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2129</SUB>> ]
+"11760" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2121</SUB>> ]
+"11764" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2121</SUB>> ]
+"11771" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2121</SUB>> ]
+"11782" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2123</SUB>> ]
+"11788" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2123</SUB>> ]
+"11791" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2123</SUB>> ]
+"11797" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;IsArrayInstance)<SUB>2124</SUB>> ]
+"11803" [label = <(Vm,soa.Vm())<SUB>2125</SUB>> ]
+"11807" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2125</SUB>> ]
+"11811" [label = <(&lt;operator&gt;.fieldAccess,obj-&gt;PrettyTypeOf().c_str)<SUB>2125</SUB>> ]
+"11825" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2128</SUB>> ]
+"11765" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2121</SUB>> ]
+"11799" [label = <(FIELD_IDENTIFIER,IsArrayInstance,IsArrayInstance)<SUB>2124</SUB>> ]
+"11804" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2125</SUB>> ]
+"11812" [label = <(PrettyTypeOf,obj-&gt;PrettyTypeOf())<SUB>2125</SUB>> ]
+"11816" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2125</SUB>> ]
+"11766" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2121</SUB>> ]
+"11768" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2121</SUB>> ]
+"11806" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2125</SUB>> ]
+"11813" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;PrettyTypeOf)<SUB>2125</SUB>> ]
+"11815" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>2125</SUB>> ]
+"11751" [label = <(METHOD,GetArrayLength)<SUB>2120</SUB>> ]
+"11836" [label = <(METHOD_RETURN,jsize)<SUB>2120</SUB>> ]
+  "11755" -> "11760" 
+  "11755" -> "11774" 
+  "11774" -> "11782" 
+  "11776" -> "11799" 
+  "11819" -> "11835" 
+  "11831" -> "11836" 
+  "11777" -> "11788" 
+  "11784" -> "11776" 
+  "11794" -> "11806" 
+  "11794" -> "11825" 
+  "11820" -> "11830" 
+  "11827" -> "11819" 
+  "11832" -> "11831" 
+  "11778" -> "11777" 
+  "11785" -> "11784" 
+  "11795" -> "11794" 
+  "11801" -> "11817" 
+  "11817" -> "11836" 
+  "11821" -> "11820" 
+  "11828" -> "11827" 
+  "11833" -> "11832" 
+  "11759" -> "11766" 
+  "11759" -> "11774" 
+  "11780" -> "11778" 
+  "11786" -> "11791" 
+  "11789" -> "11785" 
+  "11796" -> "11795" 
+  "11802" -> "11815" 
+  "11810" -> "11801" 
+  "11823" -> "11821" 
+  "11830" -> "11828" 
+  "11835" -> "11833" 
+  "11760" -> "11759" 
+  "11764" -> "11771" 
+  "11771" -> "11836" 
+  "11782" -> "11780" 
+  "11788" -> "11786" 
   "11791" -> "11789" 
-  "11794" -> "11792" 
-  "11800" -> "11799" 
-  "11806" -> "11810" 
-  "11810" -> "11805" 
-  "11814" -> "11813" 
-  "11828" -> "11826" 
-  "11768" -> "11767" 
-  "11802" -> "11800" 
-  "11807" -> "11806" 
-  "11815" -> "11819" 
-  "11819" -> "11814" 
-  "11769" -> "11771" 
-  "11771" -> "11768" 
-  "11809" -> "11807" 
-  "11816" -> "11815" 
-  "11818" -> "11816" 
-  "11754" -> "11758" 
+  "11797" -> "11796" 
+  "11803" -> "11807" 
+  "11807" -> "11802" 
+  "11811" -> "11810" 
+  "11825" -> "11823" 
+  "11765" -> "11764" 
+  "11799" -> "11797" 
+  "11804" -> "11803" 
+  "11812" -> "11816" 
+  "11816" -> "11811" 
+  "11766" -> "11768" 
+  "11768" -> "11765" 
+  "11806" -> "11804" 
+  "11813" -> "11812" 
+  "11815" -> "11813" 
+  "11751" -> "11755" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/202-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/202-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/202-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/202-cfg.dot	2023-06-07 19:35:48.007382787 +0330
@@ -1,75 +1,75 @@
 digraph "GetObjectArrayElement" {  
-"11846" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2135</SUB>> ]
-"11865" [label = <(soa,soa(env))<SUB>2136</SUB>> ]
-"11867" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2137</SUB>> ]
-"11892" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));)<SUB>2139</SUB>> ]
-"11868" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2137</SUB>> ]
-"11879" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2138</SUB>> ]
-"11893" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index)))<SUB>2139</SUB>> ]
-"11869" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2137</SUB>> ]
-"11874" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2137</SUB>> ]
-"11880" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2138</SUB>> ]
-"11887" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2138</SUB>> ]
-"11894" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>2139</SUB>> ]
-"11899" [label = <(Get,array-&gt;Get(index))<SUB>2139</SUB>> ]
-"11850" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2135</SUB>> ]
-"11871" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2137</SUB>> ]
-"11875" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2137</SUB>> ]
-"11881" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2138</SUB>> ]
-"11884" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2138</SUB>> ]
-"11888" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2138</SUB>> ]
-"11895" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2139</SUB>> ]
-"11900" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Get)<SUB>2139</SUB>> ]
-"11851" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2135</SUB>> ]
-"11855" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2135</SUB>> ]
-"11862" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2135</SUB>> ]
-"11873" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2137</SUB>> ]
-"11877" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2137</SUB>> ]
-"11883" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2138</SUB>> ]
-"11886" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2138</SUB>> ]
-"11890" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2138</SUB>> ]
-"11897" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2139</SUB>> ]
-"11902" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2139</SUB>> ]
-"11856" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2135</SUB>> ]
-"11857" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2135</SUB>> ]
-"11859" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2135</SUB>> ]
-"11841" [label = <(METHOD,GetObjectArrayElement)<SUB>2134</SUB>> ]
-"11904" [label = <(METHOD_RETURN,jobject)<SUB>2134</SUB>> ]
-  "11846" -> "11851" 
-  "11846" -> "11865" 
-  "11865" -> "11873" 
-  "11867" -> "11897" 
-  "11892" -> "11904" 
-  "11868" -> "11883" 
-  "11879" -> "11867" 
-  "11893" -> "11892" 
-  "11869" -> "11877" 
-  "11874" -> "11868" 
-  "11880" -> "11890" 
-  "11887" -> "11879" 
-  "11894" -> "11902" 
-  "11899" -> "11893" 
-  "11850" -> "11857" 
-  "11850" -> "11865" 
-  "11871" -> "11869" 
-  "11875" -> "11874" 
-  "11881" -> "11886" 
-  "11884" -> "11880" 
-  "11888" -> "11887" 
-  "11895" -> "11894" 
-  "11900" -> "11899" 
-  "11851" -> "11850" 
-  "11855" -> "11862" 
-  "11862" -> "11904" 
-  "11873" -> "11871" 
-  "11877" -> "11875" 
+"11843" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2133</SUB>> ]
+"11862" [label = <(soa,soa(env))<SUB>2134</SUB>> ]
+"11864" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2135</SUB>> ]
+"11889" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));)<SUB>2137</SUB>> ]
+"11865" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2135</SUB>> ]
+"11876" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2136</SUB>> ]
+"11890" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index)))<SUB>2137</SUB>> ]
+"11866" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2135</SUB>> ]
+"11871" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2135</SUB>> ]
+"11877" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2136</SUB>> ]
+"11884" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2136</SUB>> ]
+"11891" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>2137</SUB>> ]
+"11896" [label = <(Get,array-&gt;Get(index))<SUB>2137</SUB>> ]
+"11847" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2133</SUB>> ]
+"11868" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2135</SUB>> ]
+"11872" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2135</SUB>> ]
+"11878" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2136</SUB>> ]
+"11881" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2136</SUB>> ]
+"11885" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2136</SUB>> ]
+"11892" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2137</SUB>> ]
+"11897" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Get)<SUB>2137</SUB>> ]
+"11848" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2133</SUB>> ]
+"11852" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2133</SUB>> ]
+"11859" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2133</SUB>> ]
+"11870" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2135</SUB>> ]
+"11874" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2135</SUB>> ]
+"11880" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2136</SUB>> ]
+"11883" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2136</SUB>> ]
+"11887" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2136</SUB>> ]
+"11894" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2137</SUB>> ]
+"11899" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2137</SUB>> ]
+"11853" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2133</SUB>> ]
+"11854" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2133</SUB>> ]
+"11856" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2133</SUB>> ]
+"11838" [label = <(METHOD,GetObjectArrayElement)<SUB>2132</SUB>> ]
+"11901" [label = <(METHOD_RETURN,jobject)<SUB>2132</SUB>> ]
+  "11843" -> "11848" 
+  "11843" -> "11862" 
+  "11862" -> "11870" 
+  "11864" -> "11894" 
+  "11889" -> "11901" 
+  "11865" -> "11880" 
+  "11876" -> "11864" 
+  "11890" -> "11889" 
+  "11866" -> "11874" 
+  "11871" -> "11865" 
+  "11877" -> "11887" 
+  "11884" -> "11876" 
+  "11891" -> "11899" 
+  "11896" -> "11890" 
+  "11847" -> "11854" 
+  "11847" -> "11862" 
+  "11868" -> "11866" 
+  "11872" -> "11871" 
+  "11878" -> "11883" 
+  "11881" -> "11877" 
+  "11885" -> "11884" 
+  "11892" -> "11891" 
+  "11897" -> "11896" 
+  "11848" -> "11847" 
+  "11852" -> "11859" 
+  "11859" -> "11901" 
+  "11870" -> "11868" 
+  "11874" -> "11872" 
+  "11880" -> "11878" 
   "11883" -> "11881" 
-  "11886" -> "11884" 
-  "11890" -> "11888" 
-  "11897" -> "11895" 
-  "11902" -> "11900" 
-  "11856" -> "11855" 
-  "11857" -> "11859" 
-  "11859" -> "11856" 
-  "11841" -> "11846" 
+  "11887" -> "11885" 
+  "11894" -> "11892" 
+  "11899" -> "11897" 
+  "11853" -> "11852" 
+  "11854" -> "11856" 
+  "11856" -> "11853" 
+  "11838" -> "11843" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/203-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/203-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/203-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/203-cfg.dot	2023-06-07 19:35:48.007382787 +0330
@@ -1,93 +1,93 @@
 digraph "SetObjectArrayElement" {  
-"11912" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2144</SUB>> ]
-"11930" [label = <(soa,soa(env))<SUB>2145</SUB>> ]
-"11932" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2146</SUB>> ]
-"11957" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; value = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2148</SUB>> ]
-"11974" [label = <(&lt;operator&gt;.greaterThan,array-&gt;Set&lt;false&gt;(index, value))<SUB>2149</SUB>> ]
-"11933" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2146</SUB>> ]
-"11944" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2147</SUB>> ]
-"11958" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; value)<SUB>2148</SUB>> ]
-"11965" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2148</SUB>> ]
-"11975" [label = <(&lt;operator&gt;.lessThan,array-&gt;Set&lt;false)<SUB>2149</SUB>> ]
-"11980" [label = <(&lt;operator&gt;.bracketedPrimary,(index, value))<SUB>2149</SUB>> ]
-"11934" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2146</SUB>> ]
-"11939" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2146</SUB>> ]
-"11945" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2147</SUB>> ]
-"11952" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2147</SUB>> ]
-"11959" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2148</SUB>> ]
-"11966" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2148</SUB>> ]
-"11976" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Set)<SUB>2149</SUB>> ]
-"11981" [label = <(&lt;operator&gt;.expressionList,index, value)<SUB>2149</SUB>> ]
-"11916" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2144</SUB>> ]
-"11936" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2146</SUB>> ]
-"11940" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2146</SUB>> ]
-"11946" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2147</SUB>> ]
-"11949" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2147</SUB>> ]
-"11953" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2147</SUB>> ]
-"11961" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2148</SUB>> ]
-"11967" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2148</SUB>> ]
-"11970" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2148</SUB>> ]
-"11978" [label = <(FIELD_IDENTIFIER,Set,Set)<SUB>2149</SUB>> ]
-"11917" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2144</SUB>> ]
-"11921" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2144</SUB>> ]
-"11928" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2144</SUB>> ]
-"11938" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2146</SUB>> ]
-"11942" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2146</SUB>> ]
-"11948" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2147</SUB>> ]
-"11951" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2147</SUB>> ]
-"11955" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2147</SUB>> ]
-"11963" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2148</SUB>> ]
-"11969" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2148</SUB>> ]
-"11972" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2148</SUB>> ]
-"11922" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2144</SUB>> ]
-"11923" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2144</SUB>> ]
-"11925" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2144</SUB>> ]
-"11906" [label = <(METHOD,SetObjectArrayElement)<SUB>2142</SUB>> ]
-"11984" [label = <(METHOD_RETURN,void)<SUB>2142</SUB>> ]
-  "11912" -> "11917" 
-  "11912" -> "11930" 
-  "11930" -> "11938" 
-  "11932" -> "11963" 
-  "11957" -> "11978" 
-  "11974" -> "11984" 
-  "11933" -> "11948" 
-  "11944" -> "11932" 
-  "11958" -> "11969" 
-  "11965" -> "11957" 
-  "11975" -> "11981" 
-  "11980" -> "11974" 
-  "11934" -> "11942" 
-  "11939" -> "11933" 
-  "11945" -> "11955" 
-  "11952" -> "11944" 
-  "11959" -> "11958" 
-  "11966" -> "11965" 
-  "11976" -> "11975" 
-  "11981" -> "11980" 
-  "11916" -> "11923" 
-  "11916" -> "11930" 
-  "11936" -> "11934" 
-  "11940" -> "11939" 
-  "11946" -> "11951" 
-  "11949" -> "11945" 
-  "11953" -> "11952" 
-  "11961" -> "11959" 
-  "11967" -> "11972" 
-  "11970" -> "11966" 
-  "11978" -> "11976" 
-  "11917" -> "11916" 
-  "11921" -> "11928" 
-  "11928" -> "11984" 
-  "11938" -> "11936" 
-  "11942" -> "11940" 
+"11909" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2142</SUB>> ]
+"11927" [label = <(soa,soa(env))<SUB>2143</SUB>> ]
+"11929" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2144</SUB>> ]
+"11954" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; value = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2146</SUB>> ]
+"11971" [label = <(&lt;operator&gt;.greaterThan,array-&gt;Set&lt;false&gt;(index, value))<SUB>2147</SUB>> ]
+"11930" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2144</SUB>> ]
+"11941" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2145</SUB>> ]
+"11955" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; value)<SUB>2146</SUB>> ]
+"11962" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2146</SUB>> ]
+"11972" [label = <(&lt;operator&gt;.lessThan,array-&gt;Set&lt;false)<SUB>2147</SUB>> ]
+"11977" [label = <(&lt;operator&gt;.bracketedPrimary,(index, value))<SUB>2147</SUB>> ]
+"11931" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2144</SUB>> ]
+"11936" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2144</SUB>> ]
+"11942" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2145</SUB>> ]
+"11949" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2145</SUB>> ]
+"11956" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2146</SUB>> ]
+"11963" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2146</SUB>> ]
+"11973" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Set)<SUB>2147</SUB>> ]
+"11978" [label = <(&lt;operator&gt;.expressionList,index, value)<SUB>2147</SUB>> ]
+"11913" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2142</SUB>> ]
+"11933" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2144</SUB>> ]
+"11937" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2144</SUB>> ]
+"11943" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2145</SUB>> ]
+"11946" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2145</SUB>> ]
+"11950" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2145</SUB>> ]
+"11958" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2146</SUB>> ]
+"11964" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2146</SUB>> ]
+"11967" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2146</SUB>> ]
+"11975" [label = <(FIELD_IDENTIFIER,Set,Set)<SUB>2147</SUB>> ]
+"11914" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2142</SUB>> ]
+"11918" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2142</SUB>> ]
+"11925" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2142</SUB>> ]
+"11935" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2144</SUB>> ]
+"11939" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2144</SUB>> ]
+"11945" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2145</SUB>> ]
+"11948" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2145</SUB>> ]
+"11952" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2145</SUB>> ]
+"11960" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2146</SUB>> ]
+"11966" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2146</SUB>> ]
+"11969" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2146</SUB>> ]
+"11919" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2142</SUB>> ]
+"11920" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2142</SUB>> ]
+"11922" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2142</SUB>> ]
+"11903" [label = <(METHOD,SetObjectArrayElement)<SUB>2140</SUB>> ]
+"11981" [label = <(METHOD_RETURN,void)<SUB>2140</SUB>> ]
+  "11909" -> "11914" 
+  "11909" -> "11927" 
+  "11927" -> "11935" 
+  "11929" -> "11960" 
+  "11954" -> "11975" 
+  "11971" -> "11981" 
+  "11930" -> "11945" 
+  "11941" -> "11929" 
+  "11955" -> "11966" 
+  "11962" -> "11954" 
+  "11972" -> "11978" 
+  "11977" -> "11971" 
+  "11931" -> "11939" 
+  "11936" -> "11930" 
+  "11942" -> "11952" 
+  "11949" -> "11941" 
+  "11956" -> "11955" 
+  "11963" -> "11962" 
+  "11973" -> "11972" 
+  "11978" -> "11977" 
+  "11913" -> "11920" 
+  "11913" -> "11927" 
+  "11933" -> "11931" 
+  "11937" -> "11936" 
+  "11943" -> "11948" 
+  "11946" -> "11942" 
+  "11950" -> "11949" 
+  "11958" -> "11956" 
+  "11964" -> "11969" 
+  "11967" -> "11963" 
+  "11975" -> "11973" 
+  "11914" -> "11913" 
+  "11918" -> "11925" 
+  "11925" -> "11981" 
+  "11935" -> "11933" 
+  "11939" -> "11937" 
+  "11945" -> "11943" 
   "11948" -> "11946" 
-  "11951" -> "11949" 
-  "11955" -> "11953" 
-  "11963" -> "11961" 
+  "11952" -> "11950" 
+  "11960" -> "11958" 
+  "11966" -> "11964" 
   "11969" -> "11967" 
-  "11972" -> "11970" 
-  "11922" -> "11921" 
-  "11923" -> "11925" 
-  "11925" -> "11922" 
-  "11906" -> "11912" 
+  "11919" -> "11918" 
+  "11920" -> "11922" 
+  "11922" -> "11919" 
+  "11903" -> "11909" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/204-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/204-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/204-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/204-cfg.dot	2023-06-07 19:35:48.007382787 +0330
@@ -1,9 +1,9 @@
 digraph "NewBooleanArray" {  
-"11990" [label = <(RETURN,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);)<SUB>2153</SUB>> ]
-"11991" [label = <(NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;,NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length))<SUB>2153</SUB>> ]
-"11986" [label = <(METHOD,NewBooleanArray)<SUB>2152</SUB>> ]
-"11994" [label = <(METHOD_RETURN,jbooleanArray)<SUB>2152</SUB>> ]
-  "11990" -> "11994" 
-  "11991" -> "11990" 
-  "11986" -> "11991" 
+"11987" [label = <(RETURN,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);)<SUB>2151</SUB>> ]
+"11988" [label = <(NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;,NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length))<SUB>2151</SUB>> ]
+"11983" [label = <(METHOD,NewBooleanArray)<SUB>2150</SUB>> ]
+"11991" [label = <(METHOD_RETURN,jbooleanArray)<SUB>2150</SUB>> ]
+  "11987" -> "11991" 
+  "11988" -> "11987" 
+  "11983" -> "11988" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/205-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/205-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/205-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/205-cfg.dot	2023-06-07 19:35:48.007382787 +0330
@@ -1,9 +1,9 @@
 digraph "NewByteArray" {  
-"12000" [label = <(RETURN,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);)<SUB>2157</SUB>> ]
-"12001" [label = <(NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;,NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length))<SUB>2157</SUB>> ]
-"11996" [label = <(METHOD,NewByteArray)<SUB>2156</SUB>> ]
-"12004" [label = <(METHOD_RETURN,jbyteArray)<SUB>2156</SUB>> ]
-  "12000" -> "12004" 
-  "12001" -> "12000" 
-  "11996" -> "12001" 
+"11997" [label = <(RETURN,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);)<SUB>2155</SUB>> ]
+"11998" [label = <(NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;,NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length))<SUB>2155</SUB>> ]
+"11993" [label = <(METHOD,NewByteArray)<SUB>2154</SUB>> ]
+"12001" [label = <(METHOD_RETURN,jbyteArray)<SUB>2154</SUB>> ]
+  "11997" -> "12001" 
+  "11998" -> "11997" 
+  "11993" -> "11998" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/206-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/206-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/206-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/206-cfg.dot	2023-06-07 19:35:48.007382787 +0330
@@ -1,9 +1,9 @@
 digraph "NewCharArray" {  
-"12010" [label = <(RETURN,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);)<SUB>2161</SUB>> ]
-"12011" [label = <(NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;,NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length))<SUB>2161</SUB>> ]
-"12006" [label = <(METHOD,NewCharArray)<SUB>2160</SUB>> ]
-"12014" [label = <(METHOD_RETURN,jcharArray)<SUB>2160</SUB>> ]
-  "12010" -> "12014" 
-  "12011" -> "12010" 
-  "12006" -> "12011" 
+"12007" [label = <(RETURN,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);)<SUB>2159</SUB>> ]
+"12008" [label = <(NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;,NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length))<SUB>2159</SUB>> ]
+"12003" [label = <(METHOD,NewCharArray)<SUB>2158</SUB>> ]
+"12011" [label = <(METHOD_RETURN,jcharArray)<SUB>2158</SUB>> ]
+  "12007" -> "12011" 
+  "12008" -> "12007" 
+  "12003" -> "12008" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/207-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/207-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/207-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/207-cfg.dot	2023-06-07 19:35:48.007382787 +0330
@@ -1,9 +1,9 @@
 digraph "NewDoubleArray" {  
-"12020" [label = <(RETURN,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);)<SUB>2165</SUB>> ]
-"12021" [label = <(NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;,NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length))<SUB>2165</SUB>> ]
-"12016" [label = <(METHOD,NewDoubleArray)<SUB>2164</SUB>> ]
-"12024" [label = <(METHOD_RETURN,jdoubleArray)<SUB>2164</SUB>> ]
-  "12020" -> "12024" 
-  "12021" -> "12020" 
-  "12016" -> "12021" 
+"12017" [label = <(RETURN,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);)<SUB>2163</SUB>> ]
+"12018" [label = <(NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;,NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length))<SUB>2163</SUB>> ]
+"12013" [label = <(METHOD,NewDoubleArray)<SUB>2162</SUB>> ]
+"12021" [label = <(METHOD_RETURN,jdoubleArray)<SUB>2162</SUB>> ]
+  "12017" -> "12021" 
+  "12018" -> "12017" 
+  "12013" -> "12018" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/208-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/208-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/208-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/208-cfg.dot	2023-06-07 19:35:48.007382787 +0330
@@ -1,9 +1,9 @@
 digraph "NewFloatArray" {  
-"12030" [label = <(RETURN,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);)<SUB>2169</SUB>> ]
-"12031" [label = <(NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;,NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length))<SUB>2169</SUB>> ]
-"12026" [label = <(METHOD,NewFloatArray)<SUB>2168</SUB>> ]
-"12034" [label = <(METHOD_RETURN,jfloatArray)<SUB>2168</SUB>> ]
-  "12030" -> "12034" 
-  "12031" -> "12030" 
-  "12026" -> "12031" 
+"12027" [label = <(RETURN,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);)<SUB>2167</SUB>> ]
+"12028" [label = <(NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;,NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length))<SUB>2167</SUB>> ]
+"12023" [label = <(METHOD,NewFloatArray)<SUB>2166</SUB>> ]
+"12031" [label = <(METHOD_RETURN,jfloatArray)<SUB>2166</SUB>> ]
+  "12027" -> "12031" 
+  "12028" -> "12027" 
+  "12023" -> "12028" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/209-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/209-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/209-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/209-cfg.dot	2023-06-07 19:35:48.017382785 +0330
@@ -1,9 +1,9 @@
 digraph "NewIntArray" {  
-"12040" [label = <(RETURN,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);)<SUB>2173</SUB>> ]
-"12041" [label = <(NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;,NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length))<SUB>2173</SUB>> ]
-"12036" [label = <(METHOD,NewIntArray)<SUB>2172</SUB>> ]
-"12044" [label = <(METHOD_RETURN,jintArray)<SUB>2172</SUB>> ]
-  "12040" -> "12044" 
-  "12041" -> "12040" 
-  "12036" -> "12041" 
+"12037" [label = <(RETURN,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);)<SUB>2171</SUB>> ]
+"12038" [label = <(NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;,NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length))<SUB>2171</SUB>> ]
+"12033" [label = <(METHOD,NewIntArray)<SUB>2170</SUB>> ]
+"12041" [label = <(METHOD_RETURN,jintArray)<SUB>2170</SUB>> ]
+  "12037" -> "12041" 
+  "12038" -> "12037" 
+  "12033" -> "12038" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/21-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/21-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/21-cfg.dot	2023-06-07 19:35:41.357383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/21-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "hs" {  
-"462" [label = <(METHOD,hs)<SUB>385</SUB>> ]
-"465" [label = <(METHOD_RETURN,StackHandleScope&lt;1&gt;)<SUB>385</SUB>> ]
+"462" [label = <(METHOD,hs)<SUB>384</SUB>> ]
+"465" [label = <(METHOD_RETURN,StackHandleScope&lt;1&gt;)<SUB>384</SUB>> ]
   "462" -> "465" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/210-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/210-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/210-cfg.dot	2023-06-07 19:35:41.527383221 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/210-cfg.dot	2023-06-07 19:35:48.017382785 +0330
@@ -1,9 +1,9 @@
 digraph "NewLongArray" {  
-"12050" [label = <(RETURN,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);)<SUB>2177</SUB>> ]
-"12051" [label = <(NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;,NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length))<SUB>2177</SUB>> ]
-"12046" [label = <(METHOD,NewLongArray)<SUB>2176</SUB>> ]
-"12054" [label = <(METHOD_RETURN,jlongArray)<SUB>2176</SUB>> ]
-  "12050" -> "12054" 
-  "12051" -> "12050" 
-  "12046" -> "12051" 
+"12047" [label = <(RETURN,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);)<SUB>2175</SUB>> ]
+"12048" [label = <(NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;,NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length))<SUB>2175</SUB>> ]
+"12043" [label = <(METHOD,NewLongArray)<SUB>2174</SUB>> ]
+"12051" [label = <(METHOD_RETURN,jlongArray)<SUB>2174</SUB>> ]
+  "12047" -> "12051" 
+  "12048" -> "12047" 
+  "12043" -> "12048" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/211-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/211-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/211-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/211-cfg.dot	2023-06-07 19:35:48.037382782 +0330
@@ -1,327 +1,327 @@
 digraph "NewObjectArray" {  
-"12078" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2186</SUB>> ]
-"12097" [label = <(soa,soa(env))<SUB>2189</SUB>> ]
-"12099" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; array_class)<SUB>2190</SUB>> ]
-"12178" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; result =\012        mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2207</SUB>> ]
-"12321" [label = <(RETURN,return soa.AddLocalReference&lt;jobjectArray&gt;(result);,return soa.AddLocalReference&lt;jobjectArray&gt;(result);)<SUB>2226</SUB>> ]
-"12063" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2182</SUB>> ]
-"12100" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2190</SUB>> ]
-"12107" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = soa.Decode&lt;mirror::Class&gt;(element_jclass))<SUB>2192</SUB>> ]
-"12150" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>2199</SUB>> ]
-"12159" [label = <(&lt;operator&gt;.assignment,array_class = class_linker-&gt;FindArrayClass(soa.Self(), element_class))<SUB>2200</SUB>> ]
-"12179" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; result)<SUB>2207</SUB>> ]
-"12190" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2208</SUB>> ]
-"12209" [label = <(&lt;operator&gt;.logicalAnd,result != nullptr &amp;&amp; initial_element != nullptr)<SUB>2209</SUB>> ]
-"12322" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>2226</SUB>> ]
-"12064" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2182</SUB>> ]
-"12068" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2183</SUB>> ]
-"12076" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2184</SUB>> ]
-"12102" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2190</SUB>> ]
-"12108" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2192</SUB>> ]
-"12115" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(element_jclass))<SUB>2192</SUB>> ]
-"12125" [label = <(UNLIKELY,UNLIKELY(element_class-&gt;IsPrimitive()))<SUB>2193</SUB>> ]
-"12152" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2199</SUB>> ]
-"12161" [label = <(FindArrayClass,class_linker-&gt;FindArrayClass(soa.Self(), element_class))<SUB>2200</SUB>> ]
-"12171" [label = <(UNLIKELY,UNLIKELY(array_class == nullptr))<SUB>2201</SUB>> ]
-"12180" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2207</SUB>> ]
-"12185" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; result)<SUB>2207</SUB>> ]
-"12191" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2208</SUB>> ]
-"12198" [label = <(::Alloc,::Alloc(soa.Self(), array_class, length))<SUB>2208</SUB>> ]
-"12210" [label = <(&lt;operator&gt;.notEquals,result != nullptr)<SUB>2209</SUB>> ]
-"12213" [label = <(&lt;operator&gt;.notEquals,initial_element != nullptr)<SUB>2209</SUB>> ]
-"12217" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; initial_object = soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2210</SUB>> ]
-"12323" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>2226</SUB>> ]
-"12069" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2183</SUB>> ]
-"12082" [label = <(UNLIKELY,UNLIKELY((element_jclass) == nullptr))<SUB>2186</SUB>> ]
-"12104" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2190</SUB>> ]
-"12109" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2192</SUB>> ]
-"12116" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2192</SUB>> ]
-"12126" [label = <(IsPrimitive,element_class-&gt;IsPrimitive())<SUB>2193</SUB>> ]
-"12131" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;,\012 &quot;not an object type: %s&quot;,\012                            element_class-&gt;PrettyDescriptor().c_str()))<SUB>2194</SUB>> ]
-"12147" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2197</SUB>> ]
-"12153" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2199</SUB>> ]
-"12162" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindArrayClass)<SUB>2200</SUB>> ]
-"12165" [label = <(Self,soa.Self())<SUB>2200</SUB>> ]
-"12172" [label = <(&lt;operator&gt;.equals,array_class == nullptr)<SUB>2201</SUB>> ]
-"12176" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2202</SUB>> ]
-"12182" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2207</SUB>> ]
-"12186" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2207</SUB>> ]
-"12192" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2208</SUB>> ]
-"12195" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2208</SUB>> ]
-"12199" [label = <(&lt;operator&gt;.fieldAccess,::Alloc)<SUB>2208</SUB>> ]
-"12202" [label = <(Self,soa.Self())<SUB>2208</SUB>> ]
-"12218" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; initial_object)<SUB>2210</SUB>> ]
-"12225" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2210</SUB>> ]
-"12235" [label = <(&lt;operator&gt;.notEquals,initial_object != nullptr)<SUB>2211</SUB>> ]
-"12324" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2226</SUB>> ]
-"12070" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2183</SUB>> ]
-"12072" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2183</SUB>> ]
-"12083" [label = <(&lt;operator&gt;.equals,(element_jclass) == nullptr)<SUB>2186</SUB>> ]
-"12087" [label = <(CHECK_NON_NULL_ARGUMENT(element_jclass),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;element_jclass == null&quot;))<SUB>2186</SUB>> ]
-"12094" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(element_jclass),CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2186</SUB>> ]
-"12111" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2192</SUB>> ]
-"12117" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2192</SUB>> ]
-"12120" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2192</SUB>> ]
-"12127" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsPrimitive)<SUB>2193</SUB>> ]
-"12132" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2194</SUB>> ]
-"12140" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2196</SUB>> ]
-"12154" [label = <(Runtime::Current,Runtime::Current())<SUB>2199</SUB>> ]
-"12158" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2199</SUB>> ]
-"12164" [label = <(FIELD_IDENTIFIER,FindArrayClass,FindArrayClass)<SUB>2200</SUB>> ]
-"12166" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2200</SUB>> ]
-"12184" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2207</SUB>> ]
-"12188" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2207</SUB>> ]
-"12194" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2208</SUB>> ]
-"12197" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2208</SUB>> ]
-"12201" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2208</SUB>> ]
-"12203" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2208</SUB>> ]
-"12219" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2210</SUB>> ]
-"12226" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2210</SUB>> ]
-"12239" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = result-&gt;GetClass()-&gt;GetComponentType())<SUB>2212</SUB>> ]
-"12326" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2226</SUB>> ]
-"12088" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2186</SUB>> ]
-"12113" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2192</SUB>> ]
-"12119" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2192</SUB>> ]
-"12122" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2192</SUB>> ]
-"12129" [label = <(FIELD_IDENTIFIER,IsPrimitive,IsPrimitive)<SUB>2193</SUB>> ]
-"12133" [label = <(Vm,soa.Vm())<SUB>2194</SUB>> ]
-"12137" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2194</SUB>> ]
-"12141" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2196</SUB>> ]
-"12155" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2199</SUB>> ]
-"12168" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2200</SUB>> ]
-"12205" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2208</SUB>> ]
-"12221" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2210</SUB>> ]
-"12227" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2210</SUB>> ]
-"12230" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2210</SUB>> ]
-"12240" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2212</SUB>> ]
-"12247" [label = <(GetComponentType,result-&gt;GetClass()-&gt;GetComponentType())<SUB>2212</SUB>> ]
-"12255" [label = <(UNLIKELY,UNLIKELY(!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass())))<SUB>2213</SUB>> ]
-"12089" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2186</SUB>> ]
-"12091" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2186</SUB>> ]
-"12134" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2194</SUB>> ]
-"12142" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2196</SUB>> ]
-"12146" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2196</SUB>> ]
-"12157" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2199</SUB>> ]
-"12223" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2210</SUB>> ]
-"12229" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2210</SUB>> ]
-"12232" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2210</SUB>> ]
-"12241" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2212</SUB>> ]
-"12248" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass()-&gt;GetComponentType)<SUB>2212</SUB>> ]
-"12256" [label = <(&lt;operator&gt;.logicalNot,!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2213</SUB>> ]
-"12266" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;cannot assign object of type '%s' to array with &quot;\012 &quot;element type of '%s'&quot;,\012                              mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str(),\012                              element_class-&gt;PrettyDescriptor().c_str()))<SUB>2214</SUB>> ]
-"12295" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2218</SUB>> ]
-"12136" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2194</SUB>> ]
-"12143" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2196</SUB>> ]
-"12243" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2212</SUB>> ]
-"12249" [label = <(GetClass,result-&gt;GetClass())<SUB>2212</SUB>> ]
-"12253" [label = <(FIELD_IDENTIFIER,GetComponentType,GetComponentType)<SUB>2212</SUB>> ]
-"12257" [label = <(IsAssignableFrom,element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2213</SUB>> ]
-"12267" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2214</SUB>> ]
-"12275" [label = <(c_str,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str())<SUB>2216</SUB>> ]
-"12288" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2217</SUB>> ]
-"12145" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2196</SUB>> ]
-"12245" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2212</SUB>> ]
-"12250" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass)<SUB>2212</SUB>> ]
-"12258" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsAssignableFrom)<SUB>2213</SUB>> ]
-"12261" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2213</SUB>> ]
-"12268" [label = <(Vm,soa.Vm())<SUB>2214</SUB>> ]
-"12272" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2214</SUB>> ]
-"12276" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str)<SUB>2216</SUB>> ]
-"12289" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2217</SUB>> ]
-"12305" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2220</SUB>> ]
-"12308" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2220</SUB>> ]
-"12252" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2212</SUB>> ]
-"12260" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2213</SUB>> ]
-"12262" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2213</SUB>> ]
-"12269" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2214</SUB>> ]
-"12277" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()))<SUB>2216</SUB>> ]
-"12287" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2216</SUB>> ]
-"12290" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2217</SUB>> ]
-"12294" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2217</SUB>> ]
-"12302" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2220</SUB>> ]
-"12311" [label = <(&lt;operator&gt;.greaterThan,result-&gt;SetWithoutChecks&lt;false&gt;(i, initial_object))<SUB>2221</SUB>> ]
-"12264" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2213</SUB>> ]
-"12271" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2214</SUB>> ]
-"12278" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2216</SUB>> ]
-"12283" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2216</SUB>> ]
-"12291" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2217</SUB>> ]
-"12312" [label = <(&lt;operator&gt;.lessThan,result-&gt;SetWithoutChecks&lt;false)<SUB>2221</SUB>> ]
-"12317" [label = <(&lt;operator&gt;.bracketedPrimary,(i, initial_object))<SUB>2221</SUB>> ]
-"12279" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2216</SUB>> ]
-"12282" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2216</SUB>> ]
-"12284" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2216</SUB>> ]
-"12293" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2217</SUB>> ]
-"12313" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;SetWithoutChecks)<SUB>2221</SUB>> ]
-"12318" [label = <(&lt;operator&gt;.expressionList,i, initial_object)<SUB>2221</SUB>> ]
-"12286" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2216</SUB>> ]
-"12315" [label = <(FIELD_IDENTIFIER,SetWithoutChecks,SetWithoutChecks)<SUB>2221</SUB>> ]
-"12056" [label = <(METHOD,NewObjectArray)<SUB>2180</SUB>> ]
-"12329" [label = <(METHOD_RETURN,jobjectArray)<SUB>2180</SUB>> ]
-  "12078" -> "12083" 
-  "12078" -> "12097" 
-  "12097" -> "12104" 
-  "12099" -> "12113" 
-  "12178" -> "12210" 
-  "12321" -> "12329" 
-  "12063" -> "12070" 
-  "12063" -> "12078" 
-  "12100" -> "12099" 
-  "12107" -> "12129" 
-  "12150" -> "12164" 
-  "12159" -> "12172" 
-  "12179" -> "12194" 
-  "12190" -> "12178" 
-  "12209" -> "12223" 
-  "12209" -> "12326" 
-  "12322" -> "12321" 
-  "12064" -> "12063" 
-  "12068" -> "12076" 
-  "12076" -> "12329" 
-  "12102" -> "12100" 
-  "12108" -> "12119" 
-  "12115" -> "12107" 
-  "12125" -> "12136" 
-  "12125" -> "12157" 
-  "12152" -> "12150" 
+"12075" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2184</SUB>> ]
+"12094" [label = <(soa,soa(env))<SUB>2187</SUB>> ]
+"12096" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; array_class)<SUB>2188</SUB>> ]
+"12175" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; result =\012        mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2205</SUB>> ]
+"12318" [label = <(RETURN,return soa.AddLocalReference&lt;jobjectArray&gt;(result);,return soa.AddLocalReference&lt;jobjectArray&gt;(result);)<SUB>2224</SUB>> ]
+"12060" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2180</SUB>> ]
+"12097" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2188</SUB>> ]
+"12104" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = soa.Decode&lt;mirror::Class&gt;(element_jclass))<SUB>2190</SUB>> ]
+"12147" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>2197</SUB>> ]
+"12156" [label = <(&lt;operator&gt;.assignment,array_class = class_linker-&gt;FindArrayClass(soa.Self(), element_class))<SUB>2198</SUB>> ]
+"12176" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; result)<SUB>2205</SUB>> ]
+"12187" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2206</SUB>> ]
+"12206" [label = <(&lt;operator&gt;.logicalAnd,result != nullptr &amp;&amp; initial_element != nullptr)<SUB>2207</SUB>> ]
+"12319" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>2224</SUB>> ]
+"12061" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2180</SUB>> ]
+"12065" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2181</SUB>> ]
+"12073" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2182</SUB>> ]
+"12099" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2188</SUB>> ]
+"12105" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2190</SUB>> ]
+"12112" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(element_jclass))<SUB>2190</SUB>> ]
+"12122" [label = <(UNLIKELY,UNLIKELY(element_class-&gt;IsPrimitive()))<SUB>2191</SUB>> ]
+"12149" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2197</SUB>> ]
+"12158" [label = <(FindArrayClass,class_linker-&gt;FindArrayClass(soa.Self(), element_class))<SUB>2198</SUB>> ]
+"12168" [label = <(UNLIKELY,UNLIKELY(array_class == nullptr))<SUB>2199</SUB>> ]
+"12177" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2205</SUB>> ]
+"12182" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; result)<SUB>2205</SUB>> ]
+"12188" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2206</SUB>> ]
+"12195" [label = <(::Alloc,::Alloc(soa.Self(), array_class, length))<SUB>2206</SUB>> ]
+"12207" [label = <(&lt;operator&gt;.notEquals,result != nullptr)<SUB>2207</SUB>> ]
+"12210" [label = <(&lt;operator&gt;.notEquals,initial_element != nullptr)<SUB>2207</SUB>> ]
+"12214" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; initial_object = soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2208</SUB>> ]
+"12320" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>2224</SUB>> ]
+"12066" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2181</SUB>> ]
+"12079" [label = <(UNLIKELY,UNLIKELY((element_jclass) == nullptr))<SUB>2184</SUB>> ]
+"12101" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2188</SUB>> ]
+"12106" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2190</SUB>> ]
+"12113" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2190</SUB>> ]
+"12123" [label = <(IsPrimitive,element_class-&gt;IsPrimitive())<SUB>2191</SUB>> ]
+"12128" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;,\012 &quot;not an object type: %s&quot;,\012                            element_class-&gt;PrettyDescriptor().c_str()))<SUB>2192</SUB>> ]
+"12144" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2195</SUB>> ]
+"12150" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2197</SUB>> ]
+"12159" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindArrayClass)<SUB>2198</SUB>> ]
+"12162" [label = <(Self,soa.Self())<SUB>2198</SUB>> ]
+"12169" [label = <(&lt;operator&gt;.equals,array_class == nullptr)<SUB>2199</SUB>> ]
+"12173" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2200</SUB>> ]
+"12179" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2205</SUB>> ]
+"12183" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2205</SUB>> ]
+"12189" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2206</SUB>> ]
+"12192" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2206</SUB>> ]
+"12196" [label = <(&lt;operator&gt;.fieldAccess,::Alloc)<SUB>2206</SUB>> ]
+"12199" [label = <(Self,soa.Self())<SUB>2206</SUB>> ]
+"12215" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; initial_object)<SUB>2208</SUB>> ]
+"12222" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2208</SUB>> ]
+"12232" [label = <(&lt;operator&gt;.notEquals,initial_object != nullptr)<SUB>2209</SUB>> ]
+"12321" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2224</SUB>> ]
+"12067" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2181</SUB>> ]
+"12069" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2181</SUB>> ]
+"12080" [label = <(&lt;operator&gt;.equals,(element_jclass) == nullptr)<SUB>2184</SUB>> ]
+"12084" [label = <(CHECK_NON_NULL_ARGUMENT(element_jclass),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;element_jclass == null&quot;))<SUB>2184</SUB>> ]
+"12091" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(element_jclass),CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2184</SUB>> ]
+"12108" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2190</SUB>> ]
+"12114" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2190</SUB>> ]
+"12117" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2190</SUB>> ]
+"12124" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsPrimitive)<SUB>2191</SUB>> ]
+"12129" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2192</SUB>> ]
+"12137" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2194</SUB>> ]
+"12151" [label = <(Runtime::Current,Runtime::Current())<SUB>2197</SUB>> ]
+"12155" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2197</SUB>> ]
+"12161" [label = <(FIELD_IDENTIFIER,FindArrayClass,FindArrayClass)<SUB>2198</SUB>> ]
+"12163" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2198</SUB>> ]
+"12181" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2205</SUB>> ]
+"12185" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2205</SUB>> ]
+"12191" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2206</SUB>> ]
+"12194" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2206</SUB>> ]
+"12198" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2206</SUB>> ]
+"12200" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2206</SUB>> ]
+"12216" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2208</SUB>> ]
+"12223" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2208</SUB>> ]
+"12236" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = result-&gt;GetClass()-&gt;GetComponentType())<SUB>2210</SUB>> ]
+"12323" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2224</SUB>> ]
+"12085" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2184</SUB>> ]
+"12110" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2190</SUB>> ]
+"12116" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2190</SUB>> ]
+"12119" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2190</SUB>> ]
+"12126" [label = <(FIELD_IDENTIFIER,IsPrimitive,IsPrimitive)<SUB>2191</SUB>> ]
+"12130" [label = <(Vm,soa.Vm())<SUB>2192</SUB>> ]
+"12134" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2192</SUB>> ]
+"12138" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2194</SUB>> ]
+"12152" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2197</SUB>> ]
+"12165" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2198</SUB>> ]
+"12202" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2206</SUB>> ]
+"12218" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2208</SUB>> ]
+"12224" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2208</SUB>> ]
+"12227" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2208</SUB>> ]
+"12237" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2210</SUB>> ]
+"12244" [label = <(GetComponentType,result-&gt;GetClass()-&gt;GetComponentType())<SUB>2210</SUB>> ]
+"12252" [label = <(UNLIKELY,UNLIKELY(!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass())))<SUB>2211</SUB>> ]
+"12086" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2184</SUB>> ]
+"12088" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2184</SUB>> ]
+"12131" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2192</SUB>> ]
+"12139" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2194</SUB>> ]
+"12143" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2194</SUB>> ]
+"12154" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2197</SUB>> ]
+"12220" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2208</SUB>> ]
+"12226" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2208</SUB>> ]
+"12229" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2208</SUB>> ]
+"12238" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2210</SUB>> ]
+"12245" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass()-&gt;GetComponentType)<SUB>2210</SUB>> ]
+"12253" [label = <(&lt;operator&gt;.logicalNot,!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2211</SUB>> ]
+"12263" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;cannot assign object of type '%s' to array with &quot;\012 &quot;element type of '%s'&quot;,\012                              mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str(),\012                              element_class-&gt;PrettyDescriptor().c_str()))<SUB>2212</SUB>> ]
+"12292" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2216</SUB>> ]
+"12133" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2192</SUB>> ]
+"12140" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2194</SUB>> ]
+"12240" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2210</SUB>> ]
+"12246" [label = <(GetClass,result-&gt;GetClass())<SUB>2210</SUB>> ]
+"12250" [label = <(FIELD_IDENTIFIER,GetComponentType,GetComponentType)<SUB>2210</SUB>> ]
+"12254" [label = <(IsAssignableFrom,element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2211</SUB>> ]
+"12264" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2212</SUB>> ]
+"12272" [label = <(c_str,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str())<SUB>2214</SUB>> ]
+"12285" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2215</SUB>> ]
+"12142" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2194</SUB>> ]
+"12242" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2210</SUB>> ]
+"12247" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass)<SUB>2210</SUB>> ]
+"12255" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsAssignableFrom)<SUB>2211</SUB>> ]
+"12258" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2211</SUB>> ]
+"12265" [label = <(Vm,soa.Vm())<SUB>2212</SUB>> ]
+"12269" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2212</SUB>> ]
+"12273" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str)<SUB>2214</SUB>> ]
+"12286" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2215</SUB>> ]
+"12302" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2218</SUB>> ]
+"12305" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2218</SUB>> ]
+"12249" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2210</SUB>> ]
+"12257" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2211</SUB>> ]
+"12259" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2211</SUB>> ]
+"12266" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2212</SUB>> ]
+"12274" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()))<SUB>2214</SUB>> ]
+"12284" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2214</SUB>> ]
+"12287" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2215</SUB>> ]
+"12291" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2215</SUB>> ]
+"12299" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2218</SUB>> ]
+"12308" [label = <(&lt;operator&gt;.greaterThan,result-&gt;SetWithoutChecks&lt;false&gt;(i, initial_object))<SUB>2219</SUB>> ]
+"12261" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2211</SUB>> ]
+"12268" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2212</SUB>> ]
+"12275" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2214</SUB>> ]
+"12280" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2214</SUB>> ]
+"12288" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2215</SUB>> ]
+"12309" [label = <(&lt;operator&gt;.lessThan,result-&gt;SetWithoutChecks&lt;false)<SUB>2219</SUB>> ]
+"12314" [label = <(&lt;operator&gt;.bracketedPrimary,(i, initial_object))<SUB>2219</SUB>> ]
+"12276" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2214</SUB>> ]
+"12279" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2214</SUB>> ]
+"12281" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2214</SUB>> ]
+"12290" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2215</SUB>> ]
+"12310" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;SetWithoutChecks)<SUB>2219</SUB>> ]
+"12315" [label = <(&lt;operator&gt;.expressionList,i, initial_object)<SUB>2219</SUB>> ]
+"12283" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2214</SUB>> ]
+"12312" [label = <(FIELD_IDENTIFIER,SetWithoutChecks,SetWithoutChecks)<SUB>2219</SUB>> ]
+"12053" [label = <(METHOD,NewObjectArray)<SUB>2178</SUB>> ]
+"12326" [label = <(METHOD_RETURN,jobjectArray)<SUB>2178</SUB>> ]
+  "12075" -> "12080" 
+  "12075" -> "12094" 
+  "12094" -> "12101" 
+  "12096" -> "12110" 
+  "12175" -> "12207" 
+  "12318" -> "12326" 
+  "12060" -> "12067" 
+  "12060" -> "12075" 
+  "12097" -> "12096" 
+  "12104" -> "12126" 
+  "12147" -> "12161" 
+  "12156" -> "12169" 
+  "12176" -> "12191" 
+  "12187" -> "12175" 
+  "12206" -> "12220" 
+  "12206" -> "12323" 
+  "12319" -> "12318" 
+  "12061" -> "12060" 
+  "12065" -> "12073" 
+  "12073" -> "12326" 
+  "12099" -> "12097" 
+  "12105" -> "12116" 
+  "12112" -> "12104" 
+  "12122" -> "12133" 
+  "12122" -> "12154" 
+  "12149" -> "12147" 
+  "12158" -> "12156" 
+  "12168" -> "12173" 
+  "12168" -> "12181" 
+  "12177" -> "12185" 
+  "12182" -> "12176" 
+  "12188" -> "12198" 
+  "12195" -> "12187" 
+  "12207" -> "12206" 
+  "12207" -> "12210" 
+  "12210" -> "12206" 
+  "12214" -> "12232" 
+  "12320" -> "12319" 
+  "12066" -> "12065" 
+  "12079" -> "12086" 
+  "12079" -> "12094" 
+  "12101" -> "12099" 
+  "12106" -> "12105" 
+  "12113" -> "12112" 
+  "12123" -> "12122" 
+  "12128" -> "12144" 
+  "12144" -> "12326" 
+  "12150" -> "12149" 
+  "12159" -> "12165" 
+  "12162" -> "12158" 
+  "12169" -> "12168" 
+  "12173" -> "12326" 
+  "12179" -> "12177" 
+  "12183" -> "12182" 
+  "12189" -> "12194" 
+  "12192" -> "12188" 
+  "12196" -> "12202" 
+  "12199" -> "12195" 
+  "12215" -> "12226" 
+  "12222" -> "12214" 
+  "12232" -> "12242" 
+  "12232" -> "12323" 
+  "12321" -> "12320" 
+  "12067" -> "12069" 
+  "12069" -> "12066" 
+  "12080" -> "12079" 
+  "12084" -> "12091" 
+  "12091" -> "12326" 
+  "12108" -> "12106" 
+  "12114" -> "12119" 
+  "12117" -> "12113" 
+  "12124" -> "12123" 
+  "12129" -> "12142" 
+  "12137" -> "12128" 
+  "12151" -> "12155" 
+  "12155" -> "12150" 
   "12161" -> "12159" 
-  "12171" -> "12176" 
-  "12171" -> "12184" 
-  "12180" -> "12188" 
-  "12185" -> "12179" 
-  "12191" -> "12201" 
-  "12198" -> "12190" 
-  "12210" -> "12209" 
-  "12210" -> "12213" 
-  "12213" -> "12209" 
-  "12217" -> "12235" 
-  "12323" -> "12322" 
-  "12069" -> "12068" 
-  "12082" -> "12089" 
-  "12082" -> "12097" 
-  "12104" -> "12102" 
-  "12109" -> "12108" 
-  "12116" -> "12115" 
-  "12126" -> "12125" 
-  "12131" -> "12147" 
-  "12147" -> "12329" 
-  "12153" -> "12152" 
-  "12162" -> "12168" 
-  "12165" -> "12161" 
-  "12172" -> "12171" 
-  "12176" -> "12329" 
-  "12182" -> "12180" 
-  "12186" -> "12185" 
-  "12192" -> "12197" 
-  "12195" -> "12191" 
-  "12199" -> "12205" 
-  "12202" -> "12198" 
-  "12218" -> "12229" 
-  "12225" -> "12217" 
-  "12235" -> "12245" 
-  "12235" -> "12326" 
-  "12324" -> "12323" 
-  "12070" -> "12072" 
-  "12072" -> "12069" 
-  "12083" -> "12082" 
-  "12087" -> "12094" 
-  "12094" -> "12329" 
-  "12111" -> "12109" 
-  "12117" -> "12122" 
-  "12120" -> "12116" 
-  "12127" -> "12126" 
-  "12132" -> "12145" 
-  "12140" -> "12131" 
-  "12154" -> "12158" 
-  "12158" -> "12153" 
-  "12164" -> "12162" 
-  "12166" -> "12165" 
-  "12184" -> "12182" 
-  "12188" -> "12186" 
+  "12163" -> "12162" 
+  "12181" -> "12179" 
+  "12185" -> "12183" 
+  "12191" -> "12189" 
   "12194" -> "12192" 
-  "12197" -> "12195" 
-  "12201" -> "12199" 
-  "12203" -> "12202" 
-  "12219" -> "12218" 
-  "12226" -> "12225" 
-  "12239" -> "12260" 
-  "12326" -> "12324" 
-  "12088" -> "12087" 
-  "12113" -> "12111" 
+  "12198" -> "12196" 
+  "12200" -> "12199" 
+  "12216" -> "12215" 
+  "12223" -> "12222" 
+  "12236" -> "12257" 
+  "12323" -> "12321" 
+  "12085" -> "12084" 
+  "12110" -> "12108" 
+  "12116" -> "12114" 
   "12119" -> "12117" 
-  "12122" -> "12120" 
-  "12129" -> "12127" 
-  "12133" -> "12137" 
-  "12137" -> "12132" 
-  "12141" -> "12140" 
-  "12155" -> "12154" 
-  "12168" -> "12166" 
-  "12205" -> "12203" 
-  "12221" -> "12219" 
-  "12227" -> "12232" 
-  "12230" -> "12226" 
-  "12240" -> "12252" 
-  "12247" -> "12239" 
-  "12255" -> "12271" 
-  "12255" -> "12302" 
-  "12089" -> "12091" 
-  "12091" -> "12088" 
-  "12134" -> "12133" 
-  "12142" -> "12146" 
-  "12146" -> "12141" 
-  "12157" -> "12155" 
-  "12223" -> "12221" 
+  "12126" -> "12124" 
+  "12130" -> "12134" 
+  "12134" -> "12129" 
+  "12138" -> "12137" 
+  "12152" -> "12151" 
+  "12165" -> "12163" 
+  "12202" -> "12200" 
+  "12218" -> "12216" 
+  "12224" -> "12229" 
+  "12227" -> "12223" 
+  "12237" -> "12249" 
+  "12244" -> "12236" 
+  "12252" -> "12268" 
+  "12252" -> "12299" 
+  "12086" -> "12088" 
+  "12088" -> "12085" 
+  "12131" -> "12130" 
+  "12139" -> "12143" 
+  "12143" -> "12138" 
+  "12154" -> "12152" 
+  "12220" -> "12218" 
+  "12226" -> "12224" 
   "12229" -> "12227" 
-  "12232" -> "12230" 
-  "12241" -> "12240" 
-  "12248" -> "12247" 
-  "12256" -> "12255" 
-  "12266" -> "12295" 
-  "12295" -> "12329" 
-  "12136" -> "12134" 
-  "12143" -> "12142" 
-  "12243" -> "12241" 
-  "12249" -> "12253" 
-  "12253" -> "12248" 
-  "12257" -> "12256" 
-  "12267" -> "12279" 
-  "12275" -> "12293" 
-  "12288" -> "12266" 
-  "12145" -> "12143" 
-  "12245" -> "12243" 
-  "12250" -> "12249" 
-  "12258" -> "12264" 
-  "12261" -> "12257" 
-  "12268" -> "12272" 
-  "12272" -> "12267" 
-  "12276" -> "12275" 
-  "12289" -> "12288" 
-  "12305" -> "12315" 
-  "12305" -> "12326" 
+  "12238" -> "12237" 
+  "12245" -> "12244" 
+  "12253" -> "12252" 
+  "12263" -> "12292" 
+  "12292" -> "12326" 
+  "12133" -> "12131" 
+  "12140" -> "12139" 
+  "12240" -> "12238" 
+  "12246" -> "12250" 
+  "12250" -> "12245" 
+  "12254" -> "12253" 
+  "12264" -> "12276" 
+  "12272" -> "12290" 
+  "12285" -> "12263" 
+  "12142" -> "12140" 
+  "12242" -> "12240" 
+  "12247" -> "12246" 
+  "12255" -> "12261" 
+  "12258" -> "12254" 
+  "12265" -> "12269" 
+  "12269" -> "12264" 
+  "12273" -> "12272" 
+  "12286" -> "12285" 
+  "12302" -> "12312" 
+  "12302" -> "12323" 
+  "12305" -> "12302" 
+  "12249" -> "12247" 
+  "12257" -> "12255" 
+  "12259" -> "12258" 
+  "12266" -> "12265" 
+  "12274" -> "12284" 
+  "12284" -> "12273" 
+  "12287" -> "12291" 
+  "12291" -> "12286" 
+  "12299" -> "12302" 
   "12308" -> "12305" 
-  "12252" -> "12250" 
-  "12260" -> "12258" 
-  "12262" -> "12261" 
-  "12269" -> "12268" 
-  "12277" -> "12287" 
-  "12287" -> "12276" 
-  "12290" -> "12294" 
-  "12294" -> "12289" 
-  "12302" -> "12305" 
-  "12311" -> "12308" 
-  "12264" -> "12262" 
-  "12271" -> "12269" 
-  "12278" -> "12286" 
-  "12283" -> "12277" 
-  "12291" -> "12290" 
-  "12312" -> "12318" 
-  "12317" -> "12311" 
-  "12279" -> "12282" 
-  "12282" -> "12278" 
-  "12284" -> "12283" 
-  "12293" -> "12291" 
-  "12313" -> "12312" 
-  "12318" -> "12317" 
-  "12286" -> "12284" 
-  "12315" -> "12313" 
-  "12056" -> "12064" 
+  "12261" -> "12259" 
+  "12268" -> "12266" 
+  "12275" -> "12283" 
+  "12280" -> "12274" 
+  "12288" -> "12287" 
+  "12309" -> "12315" 
+  "12314" -> "12308" 
+  "12276" -> "12279" 
+  "12279" -> "12275" 
+  "12281" -> "12280" 
+  "12290" -> "12288" 
+  "12310" -> "12309" 
+  "12315" -> "12314" 
+  "12283" -> "12281" 
+  "12312" -> "12310" 
+  "12053" -> "12061" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/212-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/212-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/212-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/212-cfg.dot	2023-06-07 19:35:48.037382782 +0330
@@ -1,9 +1,9 @@
 digraph "NewShortArray" {  
-"12335" [label = <(RETURN,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);)<SUB>2230</SUB>> ]
-"12336" [label = <(NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;,NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length))<SUB>2230</SUB>> ]
-"12331" [label = <(METHOD,NewShortArray)<SUB>2229</SUB>> ]
-"12339" [label = <(METHOD_RETURN,jshortArray)<SUB>2229</SUB>> ]
-  "12335" -> "12339" 
-  "12336" -> "12335" 
-  "12331" -> "12336" 
+"12332" [label = <(RETURN,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);)<SUB>2228</SUB>> ]
+"12333" [label = <(NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;,NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length))<SUB>2228</SUB>> ]
+"12328" [label = <(METHOD,NewShortArray)<SUB>2227</SUB>> ]
+"12336" [label = <(METHOD_RETURN,jshortArray)<SUB>2227</SUB>> ]
+  "12332" -> "12336" 
+  "12333" -> "12332" 
+  "12328" -> "12333" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/213-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/213-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/213-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/213-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,185 +1,185 @@
 digraph "GetPrimitiveArrayCritical" {  
-"12346" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2234</SUB>> ]
-"12365" [label = <(soa,soa(env))<SUB>2235</SUB>> ]
-"12367" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2236</SUB>> ]
-"12417" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2242</SUB>> ]
-"12475" [label = <(RETURN,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);)<SUB>2257</SUB>> ]
-"12368" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2236</SUB>> ]
-"12375" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2236</SUB>> ]
-"12385" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2237</SUB>> ]
-"12419" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2242</SUB>> ]
-"12427" [label = <(IsMovableObject,heap-&gt;IsMovableObject(array))<SUB>2243</SUB>> ]
-"12467" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2254</SUB>> ]
-"12476" [label = <(GetRawData,array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0))<SUB>2257</SUB>> ]
-"12369" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2236</SUB>> ]
-"12376" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2236</SUB>> ]
-"12386" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2237</SUB>> ]
-"12395" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetPrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2238</SUB>> ]
-"12414" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2240</SUB>> ]
-"12420" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2242</SUB>> ]
-"12428" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2243</SUB>> ]
-"12455" [label = <(&lt;operator&gt;.assignment,array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2252</SUB>> ]
-"12471" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2255</SUB>> ]
-"12477" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetRawData)<SUB>2257</SUB>> ]
-"12480" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2257</SUB>> ]
-"12350" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2234</SUB>> ]
-"12371" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2236</SUB>> ]
-"12377" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2236</SUB>> ]
-"12380" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2236</SUB>> ]
-"12387" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2237</SUB>> ]
-"12396" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2238</SUB>> ]
-"12404" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2239</SUB>> ]
-"12421" [label = <(Runtime::Current,Runtime::Current())<SUB>2242</SUB>> ]
-"12425" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2242</SUB>> ]
-"12430" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2243</SUB>> ]
-"12434" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2244</SUB>> ]
-"12457" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2252</SUB>> ]
-"12472" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2255</SUB>> ]
-"12479" [label = <(FIELD_IDENTIFIER,GetRawData,GetRawData)<SUB>2257</SUB>> ]
-"12481" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2257</SUB>> ]
-"12351" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2234</SUB>> ]
-"12355" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2234</SUB>> ]
-"12362" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2234</SUB>> ]
-"12373" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2236</SUB>> ]
-"12379" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2236</SUB>> ]
-"12382" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2236</SUB>> ]
-"12388" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2237</SUB>> ]
-"12397" [label = <(Vm,soa.Vm())<SUB>2238</SUB>> ]
-"12401" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2238</SUB>> ]
-"12405" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2239</SUB>> ]
-"12422" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2242</SUB>> ]
-"12437" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2245</SUB>> ]
-"12458" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2252</SUB>> ]
-"12482" [label = <(GetClass,array-&gt;GetClass())<SUB>2257</SUB>> ]
-"12486" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2257</SUB>> ]
-"12356" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2234</SUB>> ]
-"12389" [label = <(GetClass,array-&gt;GetClass())<SUB>2237</SUB>> ]
-"12393" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2237</SUB>> ]
-"12398" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2238</SUB>> ]
-"12406" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2239</SUB>> ]
-"12413" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2239</SUB>> ]
-"12424" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2242</SUB>> ]
-"12438" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2245</SUB>> ]
-"12441" [label = <(Self,soa.Self())<SUB>2245</SUB>> ]
-"12447" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2249</SUB>> ]
-"12459" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2252</SUB>> ]
-"12462" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2252</SUB>> ]
-"12483" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2257</SUB>> ]
-"12357" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2234</SUB>> ]
-"12359" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2234</SUB>> ]
-"12390" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2237</SUB>> ]
-"12400" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2238</SUB>> ]
-"12407" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2239</SUB>> ]
-"12440" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2245</SUB>> ]
-"12442" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2245</SUB>> ]
-"12448" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2249</SUB>> ]
-"12451" [label = <(Self,soa.Self())<SUB>2249</SUB>> ]
-"12461" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2252</SUB>> ]
-"12464" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2252</SUB>> ]
-"12485" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2257</SUB>> ]
-"12392" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2237</SUB>> ]
-"12408" [label = <(GetClass,array-&gt;GetClass())<SUB>2239</SUB>> ]
-"12412" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2239</SUB>> ]
-"12444" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2245</SUB>> ]
-"12450" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2249</SUB>> ]
-"12452" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2249</SUB>> ]
-"12409" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2239</SUB>> ]
-"12454" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2249</SUB>> ]
-"12411" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2239</SUB>> ]
-"12341" [label = <(METHOD,GetPrimitiveArrayCritical)<SUB>2233</SUB>> ]
-"12488" [label = <(METHOD_RETURN,void*)<SUB>2233</SUB>> ]
-  "12346" -> "12351" 
-  "12346" -> "12365" 
-  "12365" -> "12373" 
-  "12367" -> "12392" 
-  "12417" -> "12430" 
-  "12475" -> "12488" 
-  "12368" -> "12379" 
-  "12375" -> "12367" 
-  "12385" -> "12400" 
-  "12385" -> "12424" 
-  "12419" -> "12417" 
-  "12427" -> "12434" 
-  "12427" -> "12467" 
-  "12467" -> "12472" 
-  "12467" -> "12479" 
-  "12476" -> "12475" 
-  "12369" -> "12368" 
-  "12376" -> "12375" 
-  "12386" -> "12385" 
-  "12395" -> "12414" 
-  "12414" -> "12488" 
-  "12420" -> "12419" 
-  "12428" -> "12427" 
-  "12455" -> "12467" 
-  "12471" -> "12479" 
-  "12477" -> "12485" 
-  "12480" -> "12476" 
-  "12350" -> "12357" 
-  "12350" -> "12365" 
-  "12371" -> "12369" 
-  "12377" -> "12382" 
-  "12380" -> "12376" 
-  "12387" -> "12386" 
-  "12396" -> "12411" 
-  "12404" -> "12395" 
-  "12421" -> "12425" 
-  "12425" -> "12420" 
-  "12430" -> "12428" 
-  "12434" -> "12440" 
-  "12434" -> "12450" 
-  "12457" -> "12455" 
-  "12472" -> "12471" 
-  "12479" -> "12477" 
-  "12481" -> "12480" 
-  "12351" -> "12350" 
-  "12355" -> "12362" 
-  "12362" -> "12488" 
-  "12373" -> "12371" 
+"12343" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2232</SUB>> ]
+"12362" [label = <(soa,soa(env))<SUB>2233</SUB>> ]
+"12364" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2234</SUB>> ]
+"12414" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2240</SUB>> ]
+"12472" [label = <(RETURN,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);)<SUB>2255</SUB>> ]
+"12365" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2234</SUB>> ]
+"12372" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2234</SUB>> ]
+"12382" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2235</SUB>> ]
+"12416" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2240</SUB>> ]
+"12424" [label = <(IsMovableObject,heap-&gt;IsMovableObject(array))<SUB>2241</SUB>> ]
+"12464" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2252</SUB>> ]
+"12473" [label = <(GetRawData,array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0))<SUB>2255</SUB>> ]
+"12366" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2234</SUB>> ]
+"12373" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2234</SUB>> ]
+"12383" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2235</SUB>> ]
+"12392" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetPrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2236</SUB>> ]
+"12411" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2238</SUB>> ]
+"12417" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2240</SUB>> ]
+"12425" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2241</SUB>> ]
+"12452" [label = <(&lt;operator&gt;.assignment,array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2250</SUB>> ]
+"12468" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2253</SUB>> ]
+"12474" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetRawData)<SUB>2255</SUB>> ]
+"12477" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2255</SUB>> ]
+"12347" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2232</SUB>> ]
+"12368" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2234</SUB>> ]
+"12374" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2234</SUB>> ]
+"12377" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2234</SUB>> ]
+"12384" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2235</SUB>> ]
+"12393" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2236</SUB>> ]
+"12401" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2237</SUB>> ]
+"12418" [label = <(Runtime::Current,Runtime::Current())<SUB>2240</SUB>> ]
+"12422" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2240</SUB>> ]
+"12427" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2241</SUB>> ]
+"12431" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2242</SUB>> ]
+"12454" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2250</SUB>> ]
+"12469" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2253</SUB>> ]
+"12476" [label = <(FIELD_IDENTIFIER,GetRawData,GetRawData)<SUB>2255</SUB>> ]
+"12478" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2255</SUB>> ]
+"12348" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2232</SUB>> ]
+"12352" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2232</SUB>> ]
+"12359" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2232</SUB>> ]
+"12370" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2234</SUB>> ]
+"12376" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2234</SUB>> ]
+"12379" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2234</SUB>> ]
+"12385" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2235</SUB>> ]
+"12394" [label = <(Vm,soa.Vm())<SUB>2236</SUB>> ]
+"12398" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2236</SUB>> ]
+"12402" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2237</SUB>> ]
+"12419" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2240</SUB>> ]
+"12434" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2243</SUB>> ]
+"12455" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2250</SUB>> ]
+"12479" [label = <(GetClass,array-&gt;GetClass())<SUB>2255</SUB>> ]
+"12483" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2255</SUB>> ]
+"12353" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2232</SUB>> ]
+"12386" [label = <(GetClass,array-&gt;GetClass())<SUB>2235</SUB>> ]
+"12390" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2235</SUB>> ]
+"12395" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2236</SUB>> ]
+"12403" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2237</SUB>> ]
+"12410" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2237</SUB>> ]
+"12421" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2240</SUB>> ]
+"12435" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2243</SUB>> ]
+"12438" [label = <(Self,soa.Self())<SUB>2243</SUB>> ]
+"12444" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2247</SUB>> ]
+"12456" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2250</SUB>> ]
+"12459" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2250</SUB>> ]
+"12480" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2255</SUB>> ]
+"12354" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2232</SUB>> ]
+"12356" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2232</SUB>> ]
+"12387" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2235</SUB>> ]
+"12397" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2236</SUB>> ]
+"12404" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2237</SUB>> ]
+"12437" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2243</SUB>> ]
+"12439" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2243</SUB>> ]
+"12445" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2247</SUB>> ]
+"12448" [label = <(Self,soa.Self())<SUB>2247</SUB>> ]
+"12458" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2250</SUB>> ]
+"12461" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2250</SUB>> ]
+"12482" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2255</SUB>> ]
+"12389" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2235</SUB>> ]
+"12405" [label = <(GetClass,array-&gt;GetClass())<SUB>2237</SUB>> ]
+"12409" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2237</SUB>> ]
+"12441" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2243</SUB>> ]
+"12447" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2247</SUB>> ]
+"12449" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2247</SUB>> ]
+"12406" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2237</SUB>> ]
+"12451" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2247</SUB>> ]
+"12408" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2237</SUB>> ]
+"12338" [label = <(METHOD,GetPrimitiveArrayCritical)<SUB>2231</SUB>> ]
+"12485" [label = <(METHOD_RETURN,void*)<SUB>2231</SUB>> ]
+  "12343" -> "12348" 
+  "12343" -> "12362" 
+  "12362" -> "12370" 
+  "12364" -> "12389" 
+  "12414" -> "12427" 
+  "12472" -> "12485" 
+  "12365" -> "12376" 
+  "12372" -> "12364" 
+  "12382" -> "12397" 
+  "12382" -> "12421" 
+  "12416" -> "12414" 
+  "12424" -> "12431" 
+  "12424" -> "12464" 
+  "12464" -> "12469" 
+  "12464" -> "12476" 
+  "12473" -> "12472" 
+  "12366" -> "12365" 
+  "12373" -> "12372" 
+  "12383" -> "12382" 
+  "12392" -> "12411" 
+  "12411" -> "12485" 
+  "12417" -> "12416" 
+  "12425" -> "12424" 
+  "12452" -> "12464" 
+  "12468" -> "12476" 
+  "12474" -> "12482" 
+  "12477" -> "12473" 
+  "12347" -> "12354" 
+  "12347" -> "12362" 
+  "12368" -> "12366" 
+  "12374" -> "12379" 
+  "12377" -> "12373" 
+  "12384" -> "12383" 
+  "12393" -> "12408" 
+  "12401" -> "12392" 
+  "12418" -> "12422" 
+  "12422" -> "12417" 
+  "12427" -> "12425" 
+  "12431" -> "12437" 
+  "12431" -> "12447" 
+  "12454" -> "12452" 
+  "12469" -> "12468" 
+  "12476" -> "12474" 
+  "12478" -> "12477" 
+  "12348" -> "12347" 
+  "12352" -> "12359" 
+  "12359" -> "12485" 
+  "12370" -> "12368" 
+  "12376" -> "12374" 
   "12379" -> "12377" 
-  "12382" -> "12380" 
-  "12388" -> "12387" 
-  "12397" -> "12401" 
-  "12401" -> "12396" 
-  "12405" -> "12404" 
-  "12422" -> "12421" 
-  "12437" -> "12461" 
-  "12458" -> "12457" 
-  "12482" -> "12486" 
-  "12486" -> "12481" 
-  "12356" -> "12355" 
-  "12389" -> "12393" 
-  "12393" -> "12388" 
-  "12398" -> "12397" 
-  "12406" -> "12413" 
-  "12413" -> "12405" 
-  "12424" -> "12422" 
-  "12438" -> "12444" 
-  "12441" -> "12437" 
-  "12447" -> "12461" 
-  "12459" -> "12464" 
-  "12462" -> "12458" 
-  "12483" -> "12482" 
-  "12357" -> "12359" 
-  "12359" -> "12356" 
-  "12390" -> "12389" 
-  "12400" -> "12398" 
-  "12407" -> "12406" 
-  "12440" -> "12438" 
-  "12442" -> "12441" 
-  "12448" -> "12454" 
-  "12451" -> "12447" 
+  "12385" -> "12384" 
+  "12394" -> "12398" 
+  "12398" -> "12393" 
+  "12402" -> "12401" 
+  "12419" -> "12418" 
+  "12434" -> "12458" 
+  "12455" -> "12454" 
+  "12479" -> "12483" 
+  "12483" -> "12478" 
+  "12353" -> "12352" 
+  "12386" -> "12390" 
+  "12390" -> "12385" 
+  "12395" -> "12394" 
+  "12403" -> "12410" 
+  "12410" -> "12402" 
+  "12421" -> "12419" 
+  "12435" -> "12441" 
+  "12438" -> "12434" 
+  "12444" -> "12458" 
+  "12456" -> "12461" 
+  "12459" -> "12455" 
+  "12480" -> "12479" 
+  "12354" -> "12356" 
+  "12356" -> "12353" 
+  "12387" -> "12386" 
+  "12397" -> "12395" 
+  "12404" -> "12403" 
+  "12437" -> "12435" 
+  "12439" -> "12438" 
+  "12445" -> "12451" 
+  "12448" -> "12444" 
+  "12458" -> "12456" 
   "12461" -> "12459" 
-  "12464" -> "12462" 
-  "12485" -> "12483" 
-  "12392" -> "12390" 
-  "12408" -> "12412" 
-  "12412" -> "12407" 
-  "12444" -> "12442" 
-  "12450" -> "12448" 
-  "12452" -> "12451" 
-  "12409" -> "12408" 
-  "12454" -> "12452" 
-  "12411" -> "12409" 
-  "12341" -> "12346" 
+  "12482" -> "12480" 
+  "12389" -> "12387" 
+  "12405" -> "12409" 
+  "12409" -> "12404" 
+  "12441" -> "12439" 
+  "12447" -> "12445" 
+  "12449" -> "12448" 
+  "12406" -> "12405" 
+  "12451" -> "12449" 
+  "12408" -> "12406" 
+  "12338" -> "12343" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/214-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/214-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/214-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/214-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,112 +1,112 @@
 digraph "ReleasePrimitiveArrayCritical" {  
-"12496" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2262</SUB>> ]
-"12514" [label = <(soa,soa(env))<SUB>2263</SUB>> ]
-"12516" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2264</SUB>> ]
-"12565" [label = <(&lt;operator&gt;.assignment,component_size = array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2270</SUB>> ]
-"12574" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, component_size, elements, mode))<SUB>2271</SUB>> ]
-"12517" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2264</SUB>> ]
-"12524" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2264</SUB>> ]
-"12534" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2265</SUB>> ]
-"12567" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2270</SUB>> ]
-"12518" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2264</SUB>> ]
-"12525" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2264</SUB>> ]
-"12535" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2265</SUB>> ]
-"12544" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;ReleasePrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2266</SUB>> ]
-"12563" [label = <(RETURN,return;,return;)<SUB>2268</SUB>> ]
-"12568" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2270</SUB>> ]
-"12500" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2262</SUB>> ]
-"12520" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2264</SUB>> ]
-"12526" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2264</SUB>> ]
-"12529" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2264</SUB>> ]
-"12536" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2265</SUB>> ]
-"12545" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2266</SUB>> ]
-"12553" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2267</SUB>> ]
-"12569" [label = <(GetClass,array-&gt;GetClass())<SUB>2270</SUB>> ]
-"12573" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2270</SUB>> ]
-"12501" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2262</SUB>> ]
-"12505" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2262</SUB>> ]
-"12512" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2262</SUB>> ]
-"12522" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2264</SUB>> ]
-"12528" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2264</SUB>> ]
-"12531" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2264</SUB>> ]
-"12537" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2265</SUB>> ]
-"12546" [label = <(Vm,soa.Vm())<SUB>2266</SUB>> ]
-"12550" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2266</SUB>> ]
-"12554" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2267</SUB>> ]
-"12570" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2270</SUB>> ]
-"12506" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2262</SUB>> ]
-"12538" [label = <(GetClass,array-&gt;GetClass())<SUB>2265</SUB>> ]
-"12542" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2265</SUB>> ]
-"12547" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2266</SUB>> ]
-"12555" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2267</SUB>> ]
-"12562" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2267</SUB>> ]
-"12572" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2270</SUB>> ]
-"12507" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2262</SUB>> ]
-"12509" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2262</SUB>> ]
-"12539" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2265</SUB>> ]
-"12549" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2266</SUB>> ]
-"12556" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2267</SUB>> ]
-"12541" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2265</SUB>> ]
-"12557" [label = <(GetClass,array-&gt;GetClass())<SUB>2267</SUB>> ]
-"12561" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2267</SUB>> ]
-"12558" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2267</SUB>> ]
-"12560" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2267</SUB>> ]
-"12490" [label = <(METHOD,ReleasePrimitiveArrayCritical)<SUB>2260</SUB>> ]
-"12580" [label = <(METHOD_RETURN,void)<SUB>2260</SUB>> ]
-  "12496" -> "12501" 
-  "12496" -> "12514" 
-  "12514" -> "12522" 
-  "12516" -> "12541" 
-  "12565" -> "12574" 
-  "12574" -> "12580" 
-  "12517" -> "12528" 
-  "12524" -> "12516" 
-  "12534" -> "12549" 
-  "12534" -> "12572" 
-  "12567" -> "12565" 
-  "12518" -> "12517" 
-  "12525" -> "12524" 
-  "12535" -> "12534" 
-  "12544" -> "12563" 
-  "12563" -> "12580" 
-  "12568" -> "12567" 
-  "12500" -> "12507" 
-  "12500" -> "12514" 
-  "12520" -> "12518" 
-  "12526" -> "12531" 
-  "12529" -> "12525" 
-  "12536" -> "12535" 
-  "12545" -> "12560" 
-  "12553" -> "12544" 
-  "12569" -> "12573" 
-  "12573" -> "12568" 
-  "12501" -> "12500" 
-  "12505" -> "12512" 
-  "12512" -> "12580" 
-  "12522" -> "12520" 
+"12493" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2260</SUB>> ]
+"12511" [label = <(soa,soa(env))<SUB>2261</SUB>> ]
+"12513" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2262</SUB>> ]
+"12562" [label = <(&lt;operator&gt;.assignment,component_size = array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2268</SUB>> ]
+"12571" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, component_size, elements, mode))<SUB>2269</SUB>> ]
+"12514" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2262</SUB>> ]
+"12521" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2262</SUB>> ]
+"12531" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2263</SUB>> ]
+"12564" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2268</SUB>> ]
+"12515" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2262</SUB>> ]
+"12522" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2262</SUB>> ]
+"12532" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2263</SUB>> ]
+"12541" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;ReleasePrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2264</SUB>> ]
+"12560" [label = <(RETURN,return;,return;)<SUB>2266</SUB>> ]
+"12565" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2268</SUB>> ]
+"12497" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2260</SUB>> ]
+"12517" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2262</SUB>> ]
+"12523" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2262</SUB>> ]
+"12526" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2262</SUB>> ]
+"12533" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2263</SUB>> ]
+"12542" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2264</SUB>> ]
+"12550" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2265</SUB>> ]
+"12566" [label = <(GetClass,array-&gt;GetClass())<SUB>2268</SUB>> ]
+"12570" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2268</SUB>> ]
+"12498" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2260</SUB>> ]
+"12502" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2260</SUB>> ]
+"12509" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2260</SUB>> ]
+"12519" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2262</SUB>> ]
+"12525" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2262</SUB>> ]
+"12528" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2262</SUB>> ]
+"12534" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2263</SUB>> ]
+"12543" [label = <(Vm,soa.Vm())<SUB>2264</SUB>> ]
+"12547" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2264</SUB>> ]
+"12551" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2265</SUB>> ]
+"12567" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2268</SUB>> ]
+"12503" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2260</SUB>> ]
+"12535" [label = <(GetClass,array-&gt;GetClass())<SUB>2263</SUB>> ]
+"12539" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2263</SUB>> ]
+"12544" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2264</SUB>> ]
+"12552" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2265</SUB>> ]
+"12559" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2265</SUB>> ]
+"12569" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2268</SUB>> ]
+"12504" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2260</SUB>> ]
+"12506" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2260</SUB>> ]
+"12536" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2263</SUB>> ]
+"12546" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2264</SUB>> ]
+"12553" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2265</SUB>> ]
+"12538" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2263</SUB>> ]
+"12554" [label = <(GetClass,array-&gt;GetClass())<SUB>2265</SUB>> ]
+"12558" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2265</SUB>> ]
+"12555" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2265</SUB>> ]
+"12557" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2265</SUB>> ]
+"12487" [label = <(METHOD,ReleasePrimitiveArrayCritical)<SUB>2258</SUB>> ]
+"12577" [label = <(METHOD_RETURN,void)<SUB>2258</SUB>> ]
+  "12493" -> "12498" 
+  "12493" -> "12511" 
+  "12511" -> "12519" 
+  "12513" -> "12538" 
+  "12562" -> "12571" 
+  "12571" -> "12577" 
+  "12514" -> "12525" 
+  "12521" -> "12513" 
+  "12531" -> "12546" 
+  "12531" -> "12569" 
+  "12564" -> "12562" 
+  "12515" -> "12514" 
+  "12522" -> "12521" 
+  "12532" -> "12531" 
+  "12541" -> "12560" 
+  "12560" -> "12577" 
+  "12565" -> "12564" 
+  "12497" -> "12504" 
+  "12497" -> "12511" 
+  "12517" -> "12515" 
+  "12523" -> "12528" 
+  "12526" -> "12522" 
+  "12533" -> "12532" 
+  "12542" -> "12557" 
+  "12550" -> "12541" 
+  "12566" -> "12570" 
+  "12570" -> "12565" 
+  "12498" -> "12497" 
+  "12502" -> "12509" 
+  "12509" -> "12577" 
+  "12519" -> "12517" 
+  "12525" -> "12523" 
   "12528" -> "12526" 
-  "12531" -> "12529" 
-  "12537" -> "12536" 
-  "12546" -> "12550" 
-  "12550" -> "12545" 
-  "12554" -> "12553" 
-  "12570" -> "12569" 
-  "12506" -> "12505" 
-  "12538" -> "12542" 
-  "12542" -> "12537" 
-  "12547" -> "12546" 
-  "12555" -> "12562" 
-  "12562" -> "12554" 
-  "12572" -> "12570" 
-  "12507" -> "12509" 
-  "12509" -> "12506" 
-  "12539" -> "12538" 
-  "12549" -> "12547" 
-  "12556" -> "12555" 
-  "12541" -> "12539" 
-  "12557" -> "12561" 
-  "12561" -> "12556" 
-  "12558" -> "12557" 
-  "12560" -> "12558" 
-  "12490" -> "12496" 
+  "12534" -> "12533" 
+  "12543" -> "12547" 
+  "12547" -> "12542" 
+  "12551" -> "12550" 
+  "12567" -> "12566" 
+  "12503" -> "12502" 
+  "12535" -> "12539" 
+  "12539" -> "12534" 
+  "12544" -> "12543" 
+  "12552" -> "12559" 
+  "12559" -> "12551" 
+  "12569" -> "12567" 
+  "12504" -> "12506" 
+  "12506" -> "12503" 
+  "12536" -> "12535" 
+  "12546" -> "12544" 
+  "12553" -> "12552" 
+  "12538" -> "12536" 
+  "12554" -> "12558" 
+  "12558" -> "12553" 
+  "12555" -> "12554" 
+  "12557" -> "12555" 
+  "12487" -> "12493" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/215-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/215-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/215-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/215-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,9 +1,9 @@
 digraph "GetBooleanArrayElements" {  
-"12587" [label = <(RETURN,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);)<SUB>2275</SUB>> ]
-"12588" [label = <(GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy))<SUB>2275</SUB>> ]
-"12582" [label = <(METHOD,GetBooleanArrayElements)<SUB>2274</SUB>> ]
-"12592" [label = <(METHOD_RETURN,jboolean)<SUB>2274</SUB>> ]
-  "12587" -> "12592" 
-  "12588" -> "12587" 
-  "12582" -> "12588" 
+"12584" [label = <(RETURN,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);)<SUB>2273</SUB>> ]
+"12585" [label = <(GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy))<SUB>2273</SUB>> ]
+"12579" [label = <(METHOD,GetBooleanArrayElements)<SUB>2272</SUB>> ]
+"12589" [label = <(METHOD_RETURN,jboolean)<SUB>2272</SUB>> ]
+  "12584" -> "12589" 
+  "12585" -> "12584" 
+  "12579" -> "12585" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/216-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/216-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/216-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/216-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,9 +1,9 @@
 digraph "GetByteArrayElements" {  
-"12599" [label = <(RETURN,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);)<SUB>2279</SUB>> ]
-"12600" [label = <(GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy))<SUB>2279</SUB>> ]
-"12594" [label = <(METHOD,GetByteArrayElements)<SUB>2278</SUB>> ]
-"12604" [label = <(METHOD_RETURN,jbyte)<SUB>2278</SUB>> ]
-  "12599" -> "12604" 
-  "12600" -> "12599" 
-  "12594" -> "12600" 
+"12596" [label = <(RETURN,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);)<SUB>2277</SUB>> ]
+"12597" [label = <(GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy))<SUB>2277</SUB>> ]
+"12591" [label = <(METHOD,GetByteArrayElements)<SUB>2276</SUB>> ]
+"12601" [label = <(METHOD_RETURN,jbyte)<SUB>2276</SUB>> ]
+  "12596" -> "12601" 
+  "12597" -> "12596" 
+  "12591" -> "12597" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/217-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/217-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/217-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/217-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,9 +1,9 @@
 digraph "GetCharArrayElements" {  
-"12611" [label = <(RETURN,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);)<SUB>2283</SUB>> ]
-"12612" [label = <(GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy))<SUB>2283</SUB>> ]
-"12606" [label = <(METHOD,GetCharArrayElements)<SUB>2282</SUB>> ]
-"12616" [label = <(METHOD_RETURN,jchar)<SUB>2282</SUB>> ]
-  "12611" -> "12616" 
-  "12612" -> "12611" 
-  "12606" -> "12612" 
+"12608" [label = <(RETURN,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);)<SUB>2281</SUB>> ]
+"12609" [label = <(GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy))<SUB>2281</SUB>> ]
+"12603" [label = <(METHOD,GetCharArrayElements)<SUB>2280</SUB>> ]
+"12613" [label = <(METHOD_RETURN,jchar)<SUB>2280</SUB>> ]
+  "12608" -> "12613" 
+  "12609" -> "12608" 
+  "12603" -> "12609" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/218-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/218-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/218-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/218-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,9 +1,9 @@
 digraph "GetDoubleArrayElements" {  
-"12623" [label = <(RETURN,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);)<SUB>2287</SUB>> ]
-"12624" [label = <(GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy))<SUB>2287</SUB>> ]
-"12618" [label = <(METHOD,GetDoubleArrayElements)<SUB>2286</SUB>> ]
-"12628" [label = <(METHOD_RETURN,jdouble)<SUB>2286</SUB>> ]
-  "12623" -> "12628" 
-  "12624" -> "12623" 
-  "12618" -> "12624" 
+"12620" [label = <(RETURN,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);)<SUB>2285</SUB>> ]
+"12621" [label = <(GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy))<SUB>2285</SUB>> ]
+"12615" [label = <(METHOD,GetDoubleArrayElements)<SUB>2284</SUB>> ]
+"12625" [label = <(METHOD_RETURN,jdouble)<SUB>2284</SUB>> ]
+  "12620" -> "12625" 
+  "12621" -> "12620" 
+  "12615" -> "12621" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/219-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/219-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/219-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/219-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,9 +1,9 @@
 digraph "GetFloatArrayElements" {  
-"12635" [label = <(RETURN,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);)<SUB>2291</SUB>> ]
-"12636" [label = <(GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy))<SUB>2291</SUB>> ]
-"12630" [label = <(METHOD,GetFloatArrayElements)<SUB>2290</SUB>> ]
-"12640" [label = <(METHOD_RETURN,jfloat)<SUB>2290</SUB>> ]
-  "12635" -> "12640" 
-  "12636" -> "12635" 
-  "12630" -> "12636" 
+"12632" [label = <(RETURN,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);)<SUB>2289</SUB>> ]
+"12633" [label = <(GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy))<SUB>2289</SUB>> ]
+"12627" [label = <(METHOD,GetFloatArrayElements)<SUB>2288</SUB>> ]
+"12637" [label = <(METHOD_RETURN,jfloat)<SUB>2288</SUB>> ]
+  "12632" -> "12637" 
+  "12633" -> "12632" 
+  "12627" -> "12633" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/22-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/22-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/22-cfg.dot	2023-06-07 19:35:41.357383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/22-cfg.dot	2023-06-07 19:35:47.797382804 +0330
@@ -1,62 +1,62 @@
 digraph "FindMethodJNI" {  
-"484" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>398</SUB>> ]
-"514" [label = <(&lt;operator&gt;.assignment,* method = nullptr)<SUB>402</SUB>> ]
-"518" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>403</SUB>> ]
-"594" [label = <(RETURN,return method;,return method;)<SUB>416</SUB>> ]
-"485" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>398</SUB>> ]
-"492" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>398</SUB>> ]
-"507" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>399</SUB>> ]
-"520" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>403</SUB>> ]
-"531" [label = <(IsInterface,c-&gt;IsInterface())<SUB>404</SUB>> ]
-"557" [label = <(&lt;operator&gt;.logicalAnd,method != nullptr &amp;&amp; ShouldDenyAccessToMember(method, soa.Self()))<SUB>409</SUB>> ]
-"572" [label = <(&lt;operator&gt;.logicalOr,method == nullptr || method-&gt;IsStatic() != is_static)<SUB>412</SUB>> ]
-"486" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>398</SUB>> ]
-"493" [label = <(Self,soa.Self())<SUB>398</SUB>> ]
-"497" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(jni_class))<SUB>398</SUB>> ]
-"511" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>400</SUB>> ]
-"521" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>403</SUB>> ]
-"532" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsInterface)<SUB>404</SUB>> ]
-"536" [label = <(&lt;operator&gt;.assignment,method = c-&gt;FindInterfaceMethod(name, sig, pointer_size))<SUB>405</SUB>> ]
-"558" [label = <(&lt;operator&gt;.notEquals,method != nullptr)<SUB>409</SUB>> ]
-"561" [label = <(ShouldDenyAccessToMember,ShouldDenyAccessToMember(method, soa.Self()))<SUB>409</SUB>> ]
-"568" [label = <(&lt;operator&gt;.assignment,method = nullptr)<SUB>410</SUB>> ]
-"573" [label = <(&lt;operator&gt;.equals,method == nullptr)<SUB>412</SUB>> ]
-"576" [label = <(&lt;operator&gt;.notEquals,method-&gt;IsStatic() != is_static)<SUB>412</SUB>> ]
-"583" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;))<SUB>413</SUB>> ]
-"592" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>414</SUB>> ]
-"488" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>398</SUB>> ]
-"494" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>398</SUB>> ]
-"498" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>398</SUB>> ]
-"522" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>403</SUB>> ]
-"529" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>403</SUB>> ]
-"534" [label = <(FIELD_IDENTIFIER,IsInterface,IsInterface)<SUB>404</SUB>> ]
-"538" [label = <(FindInterfaceMethod,c-&gt;FindInterfaceMethod(name, sig, pointer_size))<SUB>405</SUB>> ]
-"547" [label = <(&lt;operator&gt;.assignment,method = c-&gt;FindClassMethod(name, sig, pointer_size))<SUB>407</SUB>> ]
-"563" [label = <(Self,soa.Self())<SUB>409</SUB>> ]
-"577" [label = <(IsStatic,method-&gt;IsStatic())<SUB>412</SUB>> ]
-"588" [label = <(&lt;operator&gt;.conditional,is_static ? &quot;static&quot; : &quot;non-static&quot;)<SUB>413</SUB>> ]
-"490" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>398</SUB>> ]
-"496" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>398</SUB>> ]
-"499" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>398</SUB>> ]
-"502" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>398</SUB>> ]
-"523" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>403</SUB>> ]
-"539" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;FindInterfaceMethod)<SUB>405</SUB>> ]
-"549" [label = <(FindClassMethod,c-&gt;FindClassMethod(name, sig, pointer_size))<SUB>407</SUB>> ]
-"564" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>409</SUB>> ]
-"578" [label = <(&lt;operator&gt;.indirectFieldAccess,method-&gt;IsStatic)<SUB>412</SUB>> ]
-"501" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>398</SUB>> ]
-"504" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>398</SUB>> ]
-"524" [label = <(Runtime::Current,Runtime::Current())<SUB>403</SUB>> ]
-"528" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>403</SUB>> ]
-"541" [label = <(FIELD_IDENTIFIER,FindInterfaceMethod,FindInterfaceMethod)<SUB>405</SUB>> ]
-"550" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;FindClassMethod)<SUB>407</SUB>> ]
-"566" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>409</SUB>> ]
-"580" [label = <(FIELD_IDENTIFIER,IsStatic,IsStatic)<SUB>412</SUB>> ]
-"525" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>403</SUB>> ]
-"552" [label = <(FIELD_IDENTIFIER,FindClassMethod,FindClassMethod)<SUB>407</SUB>> ]
-"527" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>403</SUB>> ]
-"477" [label = <(METHOD,FindMethodJNI)<SUB>393</SUB>> ]
-"596" [label = <(METHOD_RETURN,ArtMethod)<SUB>393</SUB>> ]
+"484" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>397</SUB>> ]
+"514" [label = <(&lt;operator&gt;.assignment,* method = nullptr)<SUB>401</SUB>> ]
+"518" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>402</SUB>> ]
+"594" [label = <(RETURN,return method;,return method;)<SUB>415</SUB>> ]
+"485" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>397</SUB>> ]
+"492" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>397</SUB>> ]
+"507" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>398</SUB>> ]
+"520" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>402</SUB>> ]
+"531" [label = <(IsInterface,c-&gt;IsInterface())<SUB>403</SUB>> ]
+"557" [label = <(&lt;operator&gt;.logicalAnd,method != nullptr &amp;&amp; ShouldDenyAccessToMember(method, soa.Self()))<SUB>408</SUB>> ]
+"572" [label = <(&lt;operator&gt;.logicalOr,method == nullptr || method-&gt;IsStatic() != is_static)<SUB>411</SUB>> ]
+"486" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>397</SUB>> ]
+"493" [label = <(Self,soa.Self())<SUB>397</SUB>> ]
+"497" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(jni_class))<SUB>397</SUB>> ]
+"511" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>399</SUB>> ]
+"521" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>402</SUB>> ]
+"532" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsInterface)<SUB>403</SUB>> ]
+"536" [label = <(&lt;operator&gt;.assignment,method = c-&gt;FindInterfaceMethod(name, sig, pointer_size))<SUB>404</SUB>> ]
+"558" [label = <(&lt;operator&gt;.notEquals,method != nullptr)<SUB>408</SUB>> ]
+"561" [label = <(ShouldDenyAccessToMember,ShouldDenyAccessToMember(method, soa.Self()))<SUB>408</SUB>> ]
+"568" [label = <(&lt;operator&gt;.assignment,method = nullptr)<SUB>409</SUB>> ]
+"573" [label = <(&lt;operator&gt;.equals,method == nullptr)<SUB>411</SUB>> ]
+"576" [label = <(&lt;operator&gt;.notEquals,method-&gt;IsStatic() != is_static)<SUB>411</SUB>> ]
+"583" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;))<SUB>412</SUB>> ]
+"592" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>413</SUB>> ]
+"488" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>397</SUB>> ]
+"494" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>397</SUB>> ]
+"498" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>397</SUB>> ]
+"522" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>402</SUB>> ]
+"529" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>402</SUB>> ]
+"534" [label = <(FIELD_IDENTIFIER,IsInterface,IsInterface)<SUB>403</SUB>> ]
+"538" [label = <(FindInterfaceMethod,c-&gt;FindInterfaceMethod(name, sig, pointer_size))<SUB>404</SUB>> ]
+"547" [label = <(&lt;operator&gt;.assignment,method = c-&gt;FindClassMethod(name, sig, pointer_size))<SUB>406</SUB>> ]
+"563" [label = <(Self,soa.Self())<SUB>408</SUB>> ]
+"577" [label = <(IsStatic,method-&gt;IsStatic())<SUB>411</SUB>> ]
+"588" [label = <(&lt;operator&gt;.conditional,is_static ? &quot;static&quot; : &quot;non-static&quot;)<SUB>412</SUB>> ]
+"490" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>397</SUB>> ]
+"496" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>397</SUB>> ]
+"499" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>397</SUB>> ]
+"502" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>397</SUB>> ]
+"523" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>402</SUB>> ]
+"539" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;FindInterfaceMethod)<SUB>404</SUB>> ]
+"549" [label = <(FindClassMethod,c-&gt;FindClassMethod(name, sig, pointer_size))<SUB>406</SUB>> ]
+"564" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>408</SUB>> ]
+"578" [label = <(&lt;operator&gt;.indirectFieldAccess,method-&gt;IsStatic)<SUB>411</SUB>> ]
+"501" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>397</SUB>> ]
+"504" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>397</SUB>> ]
+"524" [label = <(Runtime::Current,Runtime::Current())<SUB>402</SUB>> ]
+"528" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>402</SUB>> ]
+"541" [label = <(FIELD_IDENTIFIER,FindInterfaceMethod,FindInterfaceMethod)<SUB>404</SUB>> ]
+"550" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;FindClassMethod)<SUB>406</SUB>> ]
+"566" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>408</SUB>> ]
+"580" [label = <(FIELD_IDENTIFIER,IsStatic,IsStatic)<SUB>411</SUB>> ]
+"525" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>402</SUB>> ]
+"552" [label = <(FIELD_IDENTIFIER,FindClassMethod,FindClassMethod)<SUB>406</SUB>> ]
+"527" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>402</SUB>> ]
+"477" [label = <(METHOD,FindMethodJNI)<SUB>392</SUB>> ]
+"596" [label = <(METHOD_RETURN,ArtMethod)<SUB>392</SUB>> ]
   "484" -> "507" 
   "514" -> "527" 
   "518" -> "534" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/220-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/220-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/220-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/220-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,9 +1,9 @@
 digraph "GetIntArrayElements" {  
-"12647" [label = <(RETURN,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);)<SUB>2295</SUB>> ]
-"12648" [label = <(GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy))<SUB>2295</SUB>> ]
-"12642" [label = <(METHOD,GetIntArrayElements)<SUB>2294</SUB>> ]
-"12652" [label = <(METHOD_RETURN,jint)<SUB>2294</SUB>> ]
-  "12647" -> "12652" 
-  "12648" -> "12647" 
-  "12642" -> "12648" 
+"12644" [label = <(RETURN,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);)<SUB>2293</SUB>> ]
+"12645" [label = <(GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy))<SUB>2293</SUB>> ]
+"12639" [label = <(METHOD,GetIntArrayElements)<SUB>2292</SUB>> ]
+"12649" [label = <(METHOD_RETURN,jint)<SUB>2292</SUB>> ]
+  "12644" -> "12649" 
+  "12645" -> "12644" 
+  "12639" -> "12645" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/221-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/221-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/221-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/221-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,9 +1,9 @@
 digraph "GetLongArrayElements" {  
-"12659" [label = <(RETURN,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);)<SUB>2299</SUB>> ]
-"12660" [label = <(GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy))<SUB>2299</SUB>> ]
-"12654" [label = <(METHOD,GetLongArrayElements)<SUB>2298</SUB>> ]
-"12664" [label = <(METHOD_RETURN,jlong)<SUB>2298</SUB>> ]
-  "12659" -> "12664" 
-  "12660" -> "12659" 
-  "12654" -> "12660" 
+"12656" [label = <(RETURN,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);)<SUB>2297</SUB>> ]
+"12657" [label = <(GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy))<SUB>2297</SUB>> ]
+"12651" [label = <(METHOD,GetLongArrayElements)<SUB>2296</SUB>> ]
+"12661" [label = <(METHOD_RETURN,jlong)<SUB>2296</SUB>> ]
+  "12656" -> "12661" 
+  "12657" -> "12656" 
+  "12651" -> "12657" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/222-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/222-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/222-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/222-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,9 +1,9 @@
 digraph "GetShortArrayElements" {  
-"12671" [label = <(RETURN,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);)<SUB>2303</SUB>> ]
-"12672" [label = <(GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy))<SUB>2303</SUB>> ]
-"12666" [label = <(METHOD,GetShortArrayElements)<SUB>2302</SUB>> ]
-"12676" [label = <(METHOD_RETURN,jshort)<SUB>2302</SUB>> ]
-  "12671" -> "12676" 
-  "12672" -> "12671" 
-  "12666" -> "12672" 
+"12668" [label = <(RETURN,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);)<SUB>2301</SUB>> ]
+"12669" [label = <(GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy))<SUB>2301</SUB>> ]
+"12663" [label = <(METHOD,GetShortArrayElements)<SUB>2300</SUB>> ]
+"12673" [label = <(METHOD_RETURN,jshort)<SUB>2300</SUB>> ]
+  "12668" -> "12673" 
+  "12669" -> "12668" 
+  "12663" -> "12669" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/223-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/223-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/223-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/223-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseBooleanArrayElements" {  
-"12684" [label = <(ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,ReleasePrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, elements,\012                                                                         mode))<SUB>2308</SUB>> ]
-"12678" [label = <(METHOD,ReleaseBooleanArrayElements)<SUB>2306</SUB>> ]
-"12689" [label = <(METHOD_RETURN,void)<SUB>2306</SUB>> ]
-  "12684" -> "12689" 
-  "12678" -> "12684" 
+"12681" [label = <(ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,ReleasePrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, elements,\012                                                                         mode))<SUB>2306</SUB>> ]
+"12675" [label = <(METHOD,ReleaseBooleanArrayElements)<SUB>2304</SUB>> ]
+"12686" [label = <(METHOD_RETURN,void)<SUB>2304</SUB>> ]
+  "12681" -> "12686" 
+  "12675" -> "12681" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/224-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/224-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/224-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/224-cfg.dot	2023-06-07 19:35:48.047382782 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseByteArrayElements" {  
-"12697" [label = <(ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,ReleasePrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, elements, mode))<SUB>2313</SUB>> ]
-"12691" [label = <(METHOD,ReleaseByteArrayElements)<SUB>2312</SUB>> ]
-"12702" [label = <(METHOD_RETURN,void)<SUB>2312</SUB>> ]
-  "12697" -> "12702" 
-  "12691" -> "12697" 
+"12694" [label = <(ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,ReleasePrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, elements, mode))<SUB>2311</SUB>> ]
+"12688" [label = <(METHOD,ReleaseByteArrayElements)<SUB>2310</SUB>> ]
+"12699" [label = <(METHOD_RETURN,void)<SUB>2310</SUB>> ]
+  "12694" -> "12699" 
+  "12688" -> "12694" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/225-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/225-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/225-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/225-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseCharArrayElements" {  
-"12710" [label = <(ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,ReleasePrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, elements, mode))<SUB>2317</SUB>> ]
-"12704" [label = <(METHOD,ReleaseCharArrayElements)<SUB>2316</SUB>> ]
-"12715" [label = <(METHOD_RETURN,void)<SUB>2316</SUB>> ]
-  "12710" -> "12715" 
-  "12704" -> "12710" 
+"12707" [label = <(ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,ReleasePrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, elements, mode))<SUB>2315</SUB>> ]
+"12701" [label = <(METHOD,ReleaseCharArrayElements)<SUB>2314</SUB>> ]
+"12712" [label = <(METHOD_RETURN,void)<SUB>2314</SUB>> ]
+  "12707" -> "12712" 
+  "12701" -> "12707" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/226-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/226-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/226-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/226-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseDoubleArrayElements" {  
-"12723" [label = <(ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,ReleasePrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, elements, mode))<SUB>2322</SUB>> ]
-"12717" [label = <(METHOD,ReleaseDoubleArrayElements)<SUB>2320</SUB>> ]
-"12728" [label = <(METHOD_RETURN,void)<SUB>2320</SUB>> ]
-  "12723" -> "12728" 
-  "12717" -> "12723" 
+"12720" [label = <(ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,ReleasePrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, elements, mode))<SUB>2320</SUB>> ]
+"12714" [label = <(METHOD,ReleaseDoubleArrayElements)<SUB>2318</SUB>> ]
+"12725" [label = <(METHOD_RETURN,void)<SUB>2318</SUB>> ]
+  "12720" -> "12725" 
+  "12714" -> "12720" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/227-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/227-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/227-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/227-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseFloatArrayElements" {  
-"12736" [label = <(ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,ReleasePrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, elements, mode))<SUB>2327</SUB>> ]
-"12730" [label = <(METHOD,ReleaseFloatArrayElements)<SUB>2325</SUB>> ]
-"12741" [label = <(METHOD_RETURN,void)<SUB>2325</SUB>> ]
-  "12736" -> "12741" 
-  "12730" -> "12736" 
+"12733" [label = <(ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,ReleasePrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, elements, mode))<SUB>2325</SUB>> ]
+"12727" [label = <(METHOD,ReleaseFloatArrayElements)<SUB>2323</SUB>> ]
+"12738" [label = <(METHOD_RETURN,void)<SUB>2323</SUB>> ]
+  "12733" -> "12738" 
+  "12727" -> "12733" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/228-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/228-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/228-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/228-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseIntArrayElements" {  
-"12749" [label = <(ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,ReleasePrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, elements, mode))<SUB>2331</SUB>> ]
-"12743" [label = <(METHOD,ReleaseIntArrayElements)<SUB>2330</SUB>> ]
-"12754" [label = <(METHOD_RETURN,void)<SUB>2330</SUB>> ]
-  "12749" -> "12754" 
-  "12743" -> "12749" 
+"12746" [label = <(ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,ReleasePrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, elements, mode))<SUB>2329</SUB>> ]
+"12740" [label = <(METHOD,ReleaseIntArrayElements)<SUB>2328</SUB>> ]
+"12751" [label = <(METHOD_RETURN,void)<SUB>2328</SUB>> ]
+  "12746" -> "12751" 
+  "12740" -> "12746" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/229-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/229-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/229-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/229-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseLongArrayElements" {  
-"12762" [label = <(ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,ReleasePrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, elements, mode))<SUB>2335</SUB>> ]
-"12756" [label = <(METHOD,ReleaseLongArrayElements)<SUB>2334</SUB>> ]
-"12767" [label = <(METHOD_RETURN,void)<SUB>2334</SUB>> ]
-  "12762" -> "12767" 
-  "12756" -> "12762" 
+"12759" [label = <(ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,ReleasePrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, elements, mode))<SUB>2333</SUB>> ]
+"12753" [label = <(METHOD,ReleaseLongArrayElements)<SUB>2332</SUB>> ]
+"12764" [label = <(METHOD_RETURN,void)<SUB>2332</SUB>> ]
+  "12759" -> "12764" 
+  "12753" -> "12759" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/23-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/23-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/23-cfg.dot	2023-06-07 19:35:41.367383233 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/23-cfg.dot	2023-06-07 19:35:47.807382803 +0330
@@ -1,178 +1,178 @@
 digraph "FindFieldJNI" {  
-"605" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;2&gt; hs(soa.Self()))<SUB>424</SUB>> ]
-"614" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Class&gt; c(\012      hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))))<SUB>425</SUB>> ]
-"647" [label = <(&lt;operator&gt;.assignment,* field = nullptr)<SUB>430</SUB>> ]
-"650" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; field_type)<SUB>431</SUB>> ]
-"658" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>432</SUB>> ]
-"898" [label = <(RETURN,return field;,return field;)<SUB>473</SUB>> ]
-"606" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;2)<SUB>424</SUB>> ]
-"609" [label = <(hs,hs(soa.Self()))<SUB>424</SUB>> ]
-"615" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Class)<SUB>425</SUB>> ]
-"620" [label = <(c,c(\012      hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))))<SUB>425</SUB>> ]
-"640" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>427</SUB>> ]
-"651" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>431</SUB>> ]
-"660" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>432</SUB>> ]
-"668" [label = <(UNLIKELY,UNLIKELY(sig[0] == '\0'))<SUB>433</SUB>> ]
-"726" [label = <(&lt;operator&gt;.equals,field_type == nullptr)<SUB>441</SUB>> ]
-"860" [label = <(&lt;operator&gt;.logicalAnd,field != nullptr &amp;&amp; ShouldDenyAccessToMember(field, soa.Self()))<SUB>464</SUB>> ]
-"875" [label = <(&lt;operator&gt;.equals,field == nullptr)<SUB>467</SUB>> ]
-"610" [label = <(Self,soa.Self())<SUB>424</SUB>> ]
-"617" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>425</SUB>> ]
-"621" [label = <(NewHandle,hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class))))<SUB>426</SUB>> ]
-"644" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>428</SUB>> ]
-"653" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>431</SUB>> ]
-"661" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>432</SUB>> ]
-"669" [label = <(&lt;operator&gt;.equals,sig[0] == '\0')<SUB>433</SUB>> ]
-"675" [label = <(DCHECK,DCHECK(field == nullptr))<SUB>434</SUB>> ]
-"730" [label = <(DCHECK,DCHECK(sig[0] == '\0' || soa.Self()-&gt;IsExceptionPending()))<SUB>443</SUB>> ]
-"744" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs2(soa.Self()))<SUB>444</SUB>> ]
-"753" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException())))<SUB>445</SUB>> ]
-"771" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>446</SUB>> ]
-"779" [label = <(ThrowNewExceptionF,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp)))<SUB>448</SUB>> ]
-"815" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>455</SUB>> ]
-"821" [label = <(&lt;operator&gt;.assignment,field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp)))<SUB>459</SUB>> ]
-"861" [label = <(&lt;operator&gt;.notEquals,field != nullptr)<SUB>464</SUB>> ]
-"864" [label = <(ShouldDenyAccessToMember,ShouldDenyAccessToMember(field, soa.Self()))<SUB>464</SUB>> ]
-"871" [label = <(&lt;operator&gt;.assignment,field = nullptr)<SUB>465</SUB>> ]
-"879" [label = <(ThrowNewExceptionF,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp)))<SUB>468</SUB>> ]
-"896" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>471</SUB>> ]
-"611" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>424</SUB>> ]
-"619" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>425</SUB>> ]
-"622" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>426</SUB>> ]
-"625" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>426</SUB>> ]
-"655" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>431</SUB>> ]
-"662" [label = <(Runtime::Current,Runtime::Current())<SUB>432</SUB>> ]
-"666" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>432</SUB>> ]
-"670" [label = <(&lt;operator&gt;.indirectIndexAccess,sig[0])<SUB>433</SUB>> ]
-"676" [label = <(&lt;operator&gt;.equals,field == nullptr)<SUB>434</SUB>> ]
-"731" [label = <(&lt;operator&gt;.logicalOr,sig[0] == '\0' || soa.Self()-&gt;IsExceptionPending())<SUB>443</SUB>> ]
-"745" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>444</SUB>> ]
-"748" [label = <(hs2,hs2(soa.Self()))<SUB>444</SUB>> ]
-"754" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Throwable)<SUB>445</SUB>> ]
-"759" [label = <(cause,cause(hs2.NewHandle(soa.Self()-&gt;GetException())))<SUB>445</SUB>> ]
-"772" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>446</SUB>> ]
-"780" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowNewExceptionF)<SUB>448</SUB>> ]
-"790" [label = <(GetDescriptor,c-&gt;GetDescriptor(&amp;temp))<SUB>451</SUB>> ]
-"797" [label = <(&lt;operator&gt;.notEquals,cause != nullptr)<SUB>452</SUB>> ]
-"823" [label = <(mirror::Class::FindStaticField,mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp)))<SUB>459</SUB>> ]
-"846" [label = <(&lt;operator&gt;.assignment,field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp)))<SUB>462</SUB>> ]
-"866" [label = <(Self,soa.Self())<SUB>464</SUB>> ]
-"880" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowNewExceptionF)<SUB>468</SUB>> ]
-"890" [label = <(GetDescriptor,c-&gt;GetDescriptor(&amp;temp))<SUB>470</SUB>> ]
-"613" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>424</SUB>> ]
-"624" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>426</SUB>> ]
-"626" [label = <(Self,soa.Self())<SUB>426</SUB>> ]
-"630" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(jni_class))<SUB>426</SUB>> ]
-"663" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>432</SUB>> ]
-"682" [label = <(&lt;operator&gt;.notEquals,sig[1] != '\0')<SUB>435</SUB>> ]
-"732" [label = <(&lt;operator&gt;.equals,sig[0] == '\0')<SUB>443</SUB>> ]
-"737" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>443</SUB>> ]
-"749" [label = <(Self,soa.Self())<SUB>444</SUB>> ]
-"756" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>445</SUB>> ]
-"760" [label = <(NewHandle,hs2.NewHandle(soa.Self()-&gt;GetException()))<SUB>445</SUB>> ]
-"773" [label = <(Self,soa.Self())<SUB>446</SUB>> ]
-"777" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>446</SUB>> ]
-"781" [label = <(Self,soa.Self())<SUB>448</SUB>> ]
-"785" [label = <(FIELD_IDENTIFIER,ThrowNewExceptionF,ThrowNewExceptionF)<SUB>448</SUB>> ]
-"791" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDescriptor)<SUB>451</SUB>> ]
-"794" [label = <(&lt;operator&gt;.addressOf,&amp;temp)<SUB>451</SUB>> ]
-"801" [label = <(SetCause,soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get()))<SUB>453</SUB>> ]
-"824" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::FindStaticField)<SUB>459</SUB>> ]
-"829" [label = <(Self,soa.Self())<SUB>460</SUB>> ]
-"833" [label = <(Get,c.Get())<SUB>460</SUB>> ]
-"838" [label = <(GetDescriptor,field_type-&gt;GetDescriptor(&amp;temp))<SUB>460</SUB>> ]
-"848" [label = <(FindInstanceField,c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp)))<SUB>462</SUB>> ]
-"867" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>464</SUB>> ]
-"881" [label = <(Self,soa.Self())<SUB>468</SUB>> ]
-"885" [label = <(FIELD_IDENTIFIER,ThrowNewExceptionF,ThrowNewExceptionF)<SUB>468</SUB>> ]
-"891" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDescriptor)<SUB>470</SUB>> ]
-"894" [label = <(&lt;operator&gt;.addressOf,&amp;temp)<SUB>470</SUB>> ]
-"627" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>426</SUB>> ]
-"631" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>426</SUB>> ]
-"665" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>432</SUB>> ]
-"683" [label = <(&lt;operator&gt;.indirectIndexAccess,sig[1])<SUB>435</SUB>> ]
-"688" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader())))<SUB>436</SUB>> ]
-"703" [label = <(&lt;operator&gt;.assignment,field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader))<SUB>437</SUB>> ]
-"733" [label = <(&lt;operator&gt;.indirectIndexAccess,sig[0])<SUB>443</SUB>> ]
-"738" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>443</SUB>> ]
-"750" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>444</SUB>> ]
-"758" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>445</SUB>> ]
-"761" [label = <(&lt;operator&gt;.fieldAccess,hs2.NewHandle)<SUB>445</SUB>> ]
-"764" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>445</SUB>> ]
-"774" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>446</SUB>> ]
-"782" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>448</SUB>> ]
-"793" [label = <(FIELD_IDENTIFIER,GetDescriptor,GetDescriptor)<SUB>451</SUB>> ]
-"802" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException()-&gt;SetCause)<SUB>453</SUB>> ]
-"811" [label = <(Get,cause.Get())<SUB>453</SUB>> ]
-"825" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>459</SUB>> ]
-"828" [label = <(FIELD_IDENTIFIER,FindStaticField,FindStaticField)<SUB>459</SUB>> ]
-"830" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>460</SUB>> ]
-"834" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>460</SUB>> ]
-"839" [label = <(&lt;operator&gt;.indirectFieldAccess,field_type-&gt;GetDescriptor)<SUB>460</SUB>> ]
-"842" [label = <(&lt;operator&gt;.addressOf,&amp;temp)<SUB>460</SUB>> ]
-"849" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;FindInstanceField)<SUB>462</SUB>> ]
-"853" [label = <(GetDescriptor,field_type-&gt;GetDescriptor(&amp;temp))<SUB>462</SUB>> ]
-"869" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>464</SUB>> ]
-"882" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>468</SUB>> ]
-"893" [label = <(FIELD_IDENTIFIER,GetDescriptor,GetDescriptor)<SUB>470</SUB>> ]
-"629" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>426</SUB>> ]
-"632" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>426</SUB>> ]
-"635" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>426</SUB>> ]
-"689" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::ClassLoader)<SUB>436</SUB>> ]
-"694" [label = <(class_loader,class_loader(hs.NewHandle(c-&gt;GetClassLoader())))<SUB>436</SUB>> ]
-"705" [label = <(FindClass,class_linker-&gt;FindClass(soa.Self(), sig, class_loader))<SUB>437</SUB>> ]
-"717" [label = <(&lt;operator&gt;.assignment,field_type = class_linker-&gt;FindPrimitiveClass(*sig))<SUB>439</SUB>> ]
-"739" [label = <(Self,soa.Self())<SUB>443</SUB>> ]
-"743" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>443</SUB>> ]
-"752" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>444</SUB>> ]
-"763" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>445</SUB>> ]
-"765" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>445</SUB>> ]
-"776" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>446</SUB>> ]
-"784" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>448</SUB>> ]
-"803" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>453</SUB>> ]
-"810" [label = <(FIELD_IDENTIFIER,SetCause,SetCause)<SUB>453</SUB>> ]
-"812" [label = <(&lt;operator&gt;.fieldAccess,cause.Get)<SUB>453</SUB>> ]
-"832" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>460</SUB>> ]
-"836" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>460</SUB>> ]
-"841" [label = <(FIELD_IDENTIFIER,GetDescriptor,GetDescriptor)<SUB>460</SUB>> ]
-"851" [label = <(FIELD_IDENTIFIER,FindInstanceField,FindInstanceField)<SUB>462</SUB>> ]
-"854" [label = <(&lt;operator&gt;.indirectFieldAccess,field_type-&gt;GetDescriptor)<SUB>462</SUB>> ]
-"857" [label = <(&lt;operator&gt;.addressOf,&amp;temp)<SUB>462</SUB>> ]
-"884" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>468</SUB>> ]
-"634" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>426</SUB>> ]
-"637" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>426</SUB>> ]
-"691" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>436</SUB>> ]
-"695" [label = <(NewHandle,hs.NewHandle(c-&gt;GetClassLoader()))<SUB>436</SUB>> ]
-"706" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindClass)<SUB>437</SUB>> ]
-"709" [label = <(Self,soa.Self())<SUB>437</SUB>> ]
-"719" [label = <(FindPrimitiveClass,class_linker-&gt;FindPrimitiveClass(*sig))<SUB>439</SUB>> ]
-"740" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>443</SUB>> ]
-"766" [label = <(Self,soa.Self())<SUB>445</SUB>> ]
-"770" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>445</SUB>> ]
-"804" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>453</SUB>> ]
-"814" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>453</SUB>> ]
-"856" [label = <(FIELD_IDENTIFIER,GetDescriptor,GetDescriptor)<SUB>462</SUB>> ]
-"693" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>436</SUB>> ]
-"696" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>436</SUB>> ]
-"699" [label = <(GetClassLoader,c-&gt;GetClassLoader())<SUB>436</SUB>> ]
-"708" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>437</SUB>> ]
-"710" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>437</SUB>> ]
-"720" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindPrimitiveClass)<SUB>439</SUB>> ]
-"723" [label = <(&lt;operator&gt;.indirection,*sig)<SUB>439</SUB>> ]
-"742" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>443</SUB>> ]
-"767" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>445</SUB>> ]
-"805" [label = <(Self,soa.Self())<SUB>453</SUB>> ]
-"809" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>453</SUB>> ]
-"698" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>436</SUB>> ]
-"700" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetClassLoader)<SUB>436</SUB>> ]
-"712" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>437</SUB>> ]
-"722" [label = <(FIELD_IDENTIFIER,FindPrimitiveClass,FindPrimitiveClass)<SUB>439</SUB>> ]
-"769" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>445</SUB>> ]
-"806" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>453</SUB>> ]
-"702" [label = <(FIELD_IDENTIFIER,GetClassLoader,GetClassLoader)<SUB>436</SUB>> ]
-"808" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>453</SUB>> ]
-"598" [label = <(METHOD,FindFieldJNI)<SUB>419</SUB>> ]
-"900" [label = <(METHOD_RETURN,ArtField)<SUB>419</SUB>> ]
+"605" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;2&gt; hs(soa.Self()))<SUB>423</SUB>> ]
+"614" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Class&gt; c(\012      hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))))<SUB>424</SUB>> ]
+"647" [label = <(&lt;operator&gt;.assignment,* field = nullptr)<SUB>429</SUB>> ]
+"650" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; field_type)<SUB>430</SUB>> ]
+"658" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>431</SUB>> ]
+"898" [label = <(RETURN,return field;,return field;)<SUB>472</SUB>> ]
+"606" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;2)<SUB>423</SUB>> ]
+"609" [label = <(hs,hs(soa.Self()))<SUB>423</SUB>> ]
+"615" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Class)<SUB>424</SUB>> ]
+"620" [label = <(c,c(\012      hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))))<SUB>424</SUB>> ]
+"640" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>426</SUB>> ]
+"651" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>430</SUB>> ]
+"660" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>431</SUB>> ]
+"668" [label = <(UNLIKELY,UNLIKELY(sig[0] == '\0'))<SUB>432</SUB>> ]
+"726" [label = <(&lt;operator&gt;.equals,field_type == nullptr)<SUB>440</SUB>> ]
+"860" [label = <(&lt;operator&gt;.logicalAnd,field != nullptr &amp;&amp; ShouldDenyAccessToMember(field, soa.Self()))<SUB>463</SUB>> ]
+"875" [label = <(&lt;operator&gt;.equals,field == nullptr)<SUB>466</SUB>> ]
+"610" [label = <(Self,soa.Self())<SUB>423</SUB>> ]
+"617" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>424</SUB>> ]
+"621" [label = <(NewHandle,hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class))))<SUB>425</SUB>> ]
+"644" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>427</SUB>> ]
+"653" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>430</SUB>> ]
+"661" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>431</SUB>> ]
+"669" [label = <(&lt;operator&gt;.equals,sig[0] == '\0')<SUB>432</SUB>> ]
+"675" [label = <(DCHECK,DCHECK(field == nullptr))<SUB>433</SUB>> ]
+"730" [label = <(DCHECK,DCHECK(sig[0] == '\0' || soa.Self()-&gt;IsExceptionPending()))<SUB>442</SUB>> ]
+"744" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs2(soa.Self()))<SUB>443</SUB>> ]
+"753" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException())))<SUB>444</SUB>> ]
+"771" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>445</SUB>> ]
+"779" [label = <(ThrowNewExceptionF,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp)))<SUB>447</SUB>> ]
+"815" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>454</SUB>> ]
+"821" [label = <(&lt;operator&gt;.assignment,field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp)))<SUB>458</SUB>> ]
+"861" [label = <(&lt;operator&gt;.notEquals,field != nullptr)<SUB>463</SUB>> ]
+"864" [label = <(ShouldDenyAccessToMember,ShouldDenyAccessToMember(field, soa.Self()))<SUB>463</SUB>> ]
+"871" [label = <(&lt;operator&gt;.assignment,field = nullptr)<SUB>464</SUB>> ]
+"879" [label = <(ThrowNewExceptionF,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp)))<SUB>467</SUB>> ]
+"896" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>470</SUB>> ]
+"611" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>423</SUB>> ]
+"619" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>424</SUB>> ]
+"622" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>425</SUB>> ]
+"625" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>425</SUB>> ]
+"655" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>430</SUB>> ]
+"662" [label = <(Runtime::Current,Runtime::Current())<SUB>431</SUB>> ]
+"666" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>431</SUB>> ]
+"670" [label = <(&lt;operator&gt;.indirectIndexAccess,sig[0])<SUB>432</SUB>> ]
+"676" [label = <(&lt;operator&gt;.equals,field == nullptr)<SUB>433</SUB>> ]
+"731" [label = <(&lt;operator&gt;.logicalOr,sig[0] == '\0' || soa.Self()-&gt;IsExceptionPending())<SUB>442</SUB>> ]
+"745" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>443</SUB>> ]
+"748" [label = <(hs2,hs2(soa.Self()))<SUB>443</SUB>> ]
+"754" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Throwable)<SUB>444</SUB>> ]
+"759" [label = <(cause,cause(hs2.NewHandle(soa.Self()-&gt;GetException())))<SUB>444</SUB>> ]
+"772" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>445</SUB>> ]
+"780" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowNewExceptionF)<SUB>447</SUB>> ]
+"790" [label = <(GetDescriptor,c-&gt;GetDescriptor(&amp;temp))<SUB>450</SUB>> ]
+"797" [label = <(&lt;operator&gt;.notEquals,cause != nullptr)<SUB>451</SUB>> ]
+"823" [label = <(mirror::Class::FindStaticField,mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp)))<SUB>458</SUB>> ]
+"846" [label = <(&lt;operator&gt;.assignment,field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp)))<SUB>461</SUB>> ]
+"866" [label = <(Self,soa.Self())<SUB>463</SUB>> ]
+"880" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowNewExceptionF)<SUB>467</SUB>> ]
+"890" [label = <(GetDescriptor,c-&gt;GetDescriptor(&amp;temp))<SUB>469</SUB>> ]
+"613" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>423</SUB>> ]
+"624" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>425</SUB>> ]
+"626" [label = <(Self,soa.Self())<SUB>425</SUB>> ]
+"630" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(jni_class))<SUB>425</SUB>> ]
+"663" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>431</SUB>> ]
+"682" [label = <(&lt;operator&gt;.notEquals,sig[1] != '\0')<SUB>434</SUB>> ]
+"732" [label = <(&lt;operator&gt;.equals,sig[0] == '\0')<SUB>442</SUB>> ]
+"737" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>442</SUB>> ]
+"749" [label = <(Self,soa.Self())<SUB>443</SUB>> ]
+"756" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>444</SUB>> ]
+"760" [label = <(NewHandle,hs2.NewHandle(soa.Self()-&gt;GetException()))<SUB>444</SUB>> ]
+"773" [label = <(Self,soa.Self())<SUB>445</SUB>> ]
+"777" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>445</SUB>> ]
+"781" [label = <(Self,soa.Self())<SUB>447</SUB>> ]
+"785" [label = <(FIELD_IDENTIFIER,ThrowNewExceptionF,ThrowNewExceptionF)<SUB>447</SUB>> ]
+"791" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDescriptor)<SUB>450</SUB>> ]
+"794" [label = <(&lt;operator&gt;.addressOf,&amp;temp)<SUB>450</SUB>> ]
+"801" [label = <(SetCause,soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get()))<SUB>452</SUB>> ]
+"824" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::FindStaticField)<SUB>458</SUB>> ]
+"829" [label = <(Self,soa.Self())<SUB>459</SUB>> ]
+"833" [label = <(Get,c.Get())<SUB>459</SUB>> ]
+"838" [label = <(GetDescriptor,field_type-&gt;GetDescriptor(&amp;temp))<SUB>459</SUB>> ]
+"848" [label = <(FindInstanceField,c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp)))<SUB>461</SUB>> ]
+"867" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>463</SUB>> ]
+"881" [label = <(Self,soa.Self())<SUB>467</SUB>> ]
+"885" [label = <(FIELD_IDENTIFIER,ThrowNewExceptionF,ThrowNewExceptionF)<SUB>467</SUB>> ]
+"891" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDescriptor)<SUB>469</SUB>> ]
+"894" [label = <(&lt;operator&gt;.addressOf,&amp;temp)<SUB>469</SUB>> ]
+"627" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>425</SUB>> ]
+"631" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>425</SUB>> ]
+"665" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>431</SUB>> ]
+"683" [label = <(&lt;operator&gt;.indirectIndexAccess,sig[1])<SUB>434</SUB>> ]
+"688" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader())))<SUB>435</SUB>> ]
+"703" [label = <(&lt;operator&gt;.assignment,field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader))<SUB>436</SUB>> ]
+"733" [label = <(&lt;operator&gt;.indirectIndexAccess,sig[0])<SUB>442</SUB>> ]
+"738" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>442</SUB>> ]
+"750" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>443</SUB>> ]
+"758" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>444</SUB>> ]
+"761" [label = <(&lt;operator&gt;.fieldAccess,hs2.NewHandle)<SUB>444</SUB>> ]
+"764" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>444</SUB>> ]
+"774" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>445</SUB>> ]
+"782" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>447</SUB>> ]
+"793" [label = <(FIELD_IDENTIFIER,GetDescriptor,GetDescriptor)<SUB>450</SUB>> ]
+"802" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException()-&gt;SetCause)<SUB>452</SUB>> ]
+"811" [label = <(Get,cause.Get())<SUB>452</SUB>> ]
+"825" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>458</SUB>> ]
+"828" [label = <(FIELD_IDENTIFIER,FindStaticField,FindStaticField)<SUB>458</SUB>> ]
+"830" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>459</SUB>> ]
+"834" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>459</SUB>> ]
+"839" [label = <(&lt;operator&gt;.indirectFieldAccess,field_type-&gt;GetDescriptor)<SUB>459</SUB>> ]
+"842" [label = <(&lt;operator&gt;.addressOf,&amp;temp)<SUB>459</SUB>> ]
+"849" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;FindInstanceField)<SUB>461</SUB>> ]
+"853" [label = <(GetDescriptor,field_type-&gt;GetDescriptor(&amp;temp))<SUB>461</SUB>> ]
+"869" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>463</SUB>> ]
+"882" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>467</SUB>> ]
+"893" [label = <(FIELD_IDENTIFIER,GetDescriptor,GetDescriptor)<SUB>469</SUB>> ]
+"629" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>425</SUB>> ]
+"632" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>425</SUB>> ]
+"635" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>425</SUB>> ]
+"689" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::ClassLoader)<SUB>435</SUB>> ]
+"694" [label = <(class_loader,class_loader(hs.NewHandle(c-&gt;GetClassLoader())))<SUB>435</SUB>> ]
+"705" [label = <(FindClass,class_linker-&gt;FindClass(soa.Self(), sig, class_loader))<SUB>436</SUB>> ]
+"717" [label = <(&lt;operator&gt;.assignment,field_type = class_linker-&gt;FindPrimitiveClass(*sig))<SUB>438</SUB>> ]
+"739" [label = <(Self,soa.Self())<SUB>442</SUB>> ]
+"743" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>442</SUB>> ]
+"752" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>443</SUB>> ]
+"763" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>444</SUB>> ]
+"765" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>444</SUB>> ]
+"776" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>445</SUB>> ]
+"784" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>447</SUB>> ]
+"803" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>452</SUB>> ]
+"810" [label = <(FIELD_IDENTIFIER,SetCause,SetCause)<SUB>452</SUB>> ]
+"812" [label = <(&lt;operator&gt;.fieldAccess,cause.Get)<SUB>452</SUB>> ]
+"832" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>459</SUB>> ]
+"836" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>459</SUB>> ]
+"841" [label = <(FIELD_IDENTIFIER,GetDescriptor,GetDescriptor)<SUB>459</SUB>> ]
+"851" [label = <(FIELD_IDENTIFIER,FindInstanceField,FindInstanceField)<SUB>461</SUB>> ]
+"854" [label = <(&lt;operator&gt;.indirectFieldAccess,field_type-&gt;GetDescriptor)<SUB>461</SUB>> ]
+"857" [label = <(&lt;operator&gt;.addressOf,&amp;temp)<SUB>461</SUB>> ]
+"884" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>467</SUB>> ]
+"634" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>425</SUB>> ]
+"637" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>425</SUB>> ]
+"691" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>435</SUB>> ]
+"695" [label = <(NewHandle,hs.NewHandle(c-&gt;GetClassLoader()))<SUB>435</SUB>> ]
+"706" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindClass)<SUB>436</SUB>> ]
+"709" [label = <(Self,soa.Self())<SUB>436</SUB>> ]
+"719" [label = <(FindPrimitiveClass,class_linker-&gt;FindPrimitiveClass(*sig))<SUB>438</SUB>> ]
+"740" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>442</SUB>> ]
+"766" [label = <(Self,soa.Self())<SUB>444</SUB>> ]
+"770" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>444</SUB>> ]
+"804" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>452</SUB>> ]
+"814" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>452</SUB>> ]
+"856" [label = <(FIELD_IDENTIFIER,GetDescriptor,GetDescriptor)<SUB>461</SUB>> ]
+"693" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>435</SUB>> ]
+"696" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>435</SUB>> ]
+"699" [label = <(GetClassLoader,c-&gt;GetClassLoader())<SUB>435</SUB>> ]
+"708" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>436</SUB>> ]
+"710" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>436</SUB>> ]
+"720" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindPrimitiveClass)<SUB>438</SUB>> ]
+"723" [label = <(&lt;operator&gt;.indirection,*sig)<SUB>438</SUB>> ]
+"742" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>442</SUB>> ]
+"767" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>444</SUB>> ]
+"805" [label = <(Self,soa.Self())<SUB>452</SUB>> ]
+"809" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>452</SUB>> ]
+"698" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>435</SUB>> ]
+"700" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetClassLoader)<SUB>435</SUB>> ]
+"712" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>436</SUB>> ]
+"722" [label = <(FIELD_IDENTIFIER,FindPrimitiveClass,FindPrimitiveClass)<SUB>438</SUB>> ]
+"769" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>444</SUB>> ]
+"806" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>452</SUB>> ]
+"702" [label = <(FIELD_IDENTIFIER,GetClassLoader,GetClassLoader)<SUB>435</SUB>> ]
+"808" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>452</SUB>> ]
+"598" [label = <(METHOD,FindFieldJNI)<SUB>418</SUB>> ]
+"900" [label = <(METHOD_RETURN,ArtField)<SUB>418</SUB>> ]
   "605" -> "619" 
   "614" -> "640" 
   "647" -> "655" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/230-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/230-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/230-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/230-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseShortArrayElements" {  
-"12775" [label = <(ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,ReleasePrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, elements, mode))<SUB>2340</SUB>> ]
-"12769" [label = <(METHOD,ReleaseShortArrayElements)<SUB>2338</SUB>> ]
-"12780" [label = <(METHOD_RETURN,void)<SUB>2338</SUB>> ]
-  "12775" -> "12780" 
-  "12769" -> "12775" 
+"12772" [label = <(ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,ReleasePrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, elements, mode))<SUB>2338</SUB>> ]
+"12766" [label = <(METHOD,ReleaseShortArrayElements)<SUB>2336</SUB>> ]
+"12777" [label = <(METHOD_RETURN,void)<SUB>2336</SUB>> ]
+  "12772" -> "12777" 
+  "12766" -> "12772" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/231-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/231-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/231-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/231-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "GetBooleanArrayRegion" {  
-"12789" [label = <(GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2345</SUB>> ]
-"12782" [label = <(METHOD,GetBooleanArrayRegion)<SUB>2343</SUB>> ]
-"12795" [label = <(METHOD_RETURN,void)<SUB>2343</SUB>> ]
-  "12789" -> "12795" 
-  "12782" -> "12789" 
+"12786" [label = <(GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2343</SUB>> ]
+"12779" [label = <(METHOD,GetBooleanArrayRegion)<SUB>2341</SUB>> ]
+"12792" [label = <(METHOD_RETURN,void)<SUB>2341</SUB>> ]
+  "12786" -> "12792" 
+  "12779" -> "12786" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/232-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/232-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/232-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/232-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "GetByteArrayRegion" {  
-"12804" [label = <(GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2351</SUB>> ]
-"12797" [label = <(METHOD,GetByteArrayRegion)<SUB>2349</SUB>> ]
-"12810" [label = <(METHOD_RETURN,void)<SUB>2349</SUB>> ]
-  "12804" -> "12810" 
-  "12797" -> "12804" 
+"12801" [label = <(GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2349</SUB>> ]
+"12794" [label = <(METHOD,GetByteArrayRegion)<SUB>2347</SUB>> ]
+"12807" [label = <(METHOD_RETURN,void)<SUB>2347</SUB>> ]
+  "12801" -> "12807" 
+  "12794" -> "12801" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/233-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/233-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/233-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/233-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "GetCharArrayRegion" {  
-"12819" [label = <(GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2356</SUB>> ]
-"12812" [label = <(METHOD,GetCharArrayRegion)<SUB>2354</SUB>> ]
-"12825" [label = <(METHOD_RETURN,void)<SUB>2354</SUB>> ]
-  "12819" -> "12825" 
-  "12812" -> "12819" 
+"12816" [label = <(GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2354</SUB>> ]
+"12809" [label = <(METHOD,GetCharArrayRegion)<SUB>2352</SUB>> ]
+"12822" [label = <(METHOD_RETURN,void)<SUB>2352</SUB>> ]
+  "12816" -> "12822" 
+  "12809" -> "12816" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/234-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/234-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/234-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/234-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "GetDoubleArrayRegion" {  
-"12834" [label = <(GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2361</SUB>> ]
-"12827" [label = <(METHOD,GetDoubleArrayRegion)<SUB>2359</SUB>> ]
-"12840" [label = <(METHOD_RETURN,void)<SUB>2359</SUB>> ]
-  "12834" -> "12840" 
-  "12827" -> "12834" 
+"12831" [label = <(GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2359</SUB>> ]
+"12824" [label = <(METHOD,GetDoubleArrayRegion)<SUB>2357</SUB>> ]
+"12837" [label = <(METHOD_RETURN,void)<SUB>2357</SUB>> ]
+  "12831" -> "12837" 
+  "12824" -> "12831" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/235-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/235-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/235-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/235-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "GetFloatArrayRegion" {  
-"12849" [label = <(GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2367</SUB>> ]
-"12842" [label = <(METHOD,GetFloatArrayRegion)<SUB>2365</SUB>> ]
-"12855" [label = <(METHOD_RETURN,void)<SUB>2365</SUB>> ]
-  "12849" -> "12855" 
-  "12842" -> "12849" 
+"12846" [label = <(GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2365</SUB>> ]
+"12839" [label = <(METHOD,GetFloatArrayRegion)<SUB>2363</SUB>> ]
+"12852" [label = <(METHOD_RETURN,void)<SUB>2363</SUB>> ]
+  "12846" -> "12852" 
+  "12839" -> "12846" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/236-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/236-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/236-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/236-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "GetIntArrayRegion" {  
-"12864" [label = <(GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2373</SUB>> ]
-"12857" [label = <(METHOD,GetIntArrayRegion)<SUB>2371</SUB>> ]
-"12870" [label = <(METHOD_RETURN,void)<SUB>2371</SUB>> ]
-  "12864" -> "12870" 
-  "12857" -> "12864" 
+"12861" [label = <(GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2371</SUB>> ]
+"12854" [label = <(METHOD,GetIntArrayRegion)<SUB>2369</SUB>> ]
+"12867" [label = <(METHOD_RETURN,void)<SUB>2369</SUB>> ]
+  "12861" -> "12867" 
+  "12854" -> "12861" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/237-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/237-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/237-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/237-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "GetLongArrayRegion" {  
-"12879" [label = <(GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2378</SUB>> ]
-"12872" [label = <(METHOD,GetLongArrayRegion)<SUB>2376</SUB>> ]
-"12885" [label = <(METHOD_RETURN,void)<SUB>2376</SUB>> ]
-  "12879" -> "12885" 
-  "12872" -> "12879" 
+"12876" [label = <(GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2376</SUB>> ]
+"12869" [label = <(METHOD,GetLongArrayRegion)<SUB>2374</SUB>> ]
+"12882" [label = <(METHOD_RETURN,void)<SUB>2374</SUB>> ]
+  "12876" -> "12882" 
+  "12869" -> "12876" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/238-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/238-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/238-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/238-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "GetShortArrayRegion" {  
-"12894" [label = <(GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2383</SUB>> ]
-"12887" [label = <(METHOD,GetShortArrayRegion)<SUB>2381</SUB>> ]
-"12900" [label = <(METHOD_RETURN,void)<SUB>2381</SUB>> ]
-  "12894" -> "12900" 
-  "12887" -> "12894" 
+"12891" [label = <(GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2381</SUB>> ]
+"12884" [label = <(METHOD,GetShortArrayRegion)<SUB>2379</SUB>> ]
+"12897" [label = <(METHOD_RETURN,void)<SUB>2379</SUB>> ]
+  "12891" -> "12897" 
+  "12884" -> "12891" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/239-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/239-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/239-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/239-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "SetBooleanArrayRegion" {  
-"12909" [label = <(SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,SetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2389</SUB>> ]
-"12902" [label = <(METHOD,SetBooleanArrayRegion)<SUB>2387</SUB>> ]
-"12915" [label = <(METHOD_RETURN,void)<SUB>2387</SUB>> ]
-  "12909" -> "12915" 
-  "12902" -> "12909" 
+"12906" [label = <(SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,SetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2387</SUB>> ]
+"12899" [label = <(METHOD,SetBooleanArrayRegion)<SUB>2385</SUB>> ]
+"12912" [label = <(METHOD_RETURN,void)<SUB>2385</SUB>> ]
+  "12906" -> "12912" 
+  "12899" -> "12906" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/24-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/24-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/24-cfg.dot	2023-06-07 19:35:41.367383233 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/24-cfg.dot	2023-06-07 19:35:47.807382803 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowNewException" {  
-"902" [label = <(METHOD,ThrowNewException)<SUB>476</SUB>> ]
-"908" [label = <(METHOD_RETURN,int)<SUB>476</SUB>> ]
+"902" [label = <(METHOD,ThrowNewException)<SUB>475</SUB>> ]
+"908" [label = <(METHOD_RETURN,int)<SUB>475</SUB>> ]
   "902" -> "908" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/240-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/240-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/240-cfg.dot	2023-06-07 19:35:41.537383222 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/240-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "SetByteArrayRegion" {  
-"12924" [label = <(SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,SetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2395</SUB>> ]
-"12917" [label = <(METHOD,SetByteArrayRegion)<SUB>2393</SUB>> ]
-"12930" [label = <(METHOD_RETURN,void)<SUB>2393</SUB>> ]
-  "12924" -> "12930" 
-  "12917" -> "12924" 
+"12921" [label = <(SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,SetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2393</SUB>> ]
+"12914" [label = <(METHOD,SetByteArrayRegion)<SUB>2391</SUB>> ]
+"12927" [label = <(METHOD_RETURN,void)<SUB>2391</SUB>> ]
+  "12921" -> "12927" 
+  "12914" -> "12921" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/241-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/241-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/241-cfg.dot	2023-06-07 19:35:41.547383219 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/241-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "SetCharArrayRegion" {  
-"12939" [label = <(SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,SetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2400</SUB>> ]
-"12932" [label = <(METHOD,SetCharArrayRegion)<SUB>2398</SUB>> ]
-"12945" [label = <(METHOD_RETURN,void)<SUB>2398</SUB>> ]
-  "12939" -> "12945" 
-  "12932" -> "12939" 
+"12936" [label = <(SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,SetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2398</SUB>> ]
+"12929" [label = <(METHOD,SetCharArrayRegion)<SUB>2396</SUB>> ]
+"12942" [label = <(METHOD_RETURN,void)<SUB>2396</SUB>> ]
+  "12936" -> "12942" 
+  "12929" -> "12936" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/242-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/242-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/242-cfg.dot	2023-06-07 19:35:41.547383219 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/242-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "SetDoubleArrayRegion" {  
-"12954" [label = <(SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,SetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2405</SUB>> ]
-"12947" [label = <(METHOD,SetDoubleArrayRegion)<SUB>2403</SUB>> ]
-"12960" [label = <(METHOD_RETURN,void)<SUB>2403</SUB>> ]
-  "12954" -> "12960" 
-  "12947" -> "12954" 
+"12951" [label = <(SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,SetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2403</SUB>> ]
+"12944" [label = <(METHOD,SetDoubleArrayRegion)<SUB>2401</SUB>> ]
+"12957" [label = <(METHOD_RETURN,void)<SUB>2401</SUB>> ]
+  "12951" -> "12957" 
+  "12944" -> "12951" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/243-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/243-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/243-cfg.dot	2023-06-07 19:35:41.547383219 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/243-cfg.dot	2023-06-07 19:35:48.057382783 +0330
@@ -1,7 +1,7 @@
 digraph "SetFloatArrayRegion" {  
-"12969" [label = <(SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,SetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2411</SUB>> ]
-"12962" [label = <(METHOD,SetFloatArrayRegion)<SUB>2409</SUB>> ]
-"12975" [label = <(METHOD_RETURN,void)<SUB>2409</SUB>> ]
-  "12969" -> "12975" 
-  "12962" -> "12969" 
+"12966" [label = <(SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,SetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2409</SUB>> ]
+"12959" [label = <(METHOD,SetFloatArrayRegion)<SUB>2407</SUB>> ]
+"12972" [label = <(METHOD_RETURN,void)<SUB>2407</SUB>> ]
+  "12966" -> "12972" 
+  "12959" -> "12966" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/244-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/244-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/244-cfg.dot	2023-06-07 19:35:41.547383219 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/244-cfg.dot	2023-06-07 19:35:48.067382782 +0330
@@ -1,7 +1,7 @@
 digraph "SetIntArrayRegion" {  
-"12984" [label = <(SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,SetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2417</SUB>> ]
-"12977" [label = <(METHOD,SetIntArrayRegion)<SUB>2415</SUB>> ]
-"12990" [label = <(METHOD_RETURN,void)<SUB>2415</SUB>> ]
-  "12984" -> "12990" 
-  "12977" -> "12984" 
+"12981" [label = <(SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,SetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2415</SUB>> ]
+"12974" [label = <(METHOD,SetIntArrayRegion)<SUB>2413</SUB>> ]
+"12987" [label = <(METHOD_RETURN,void)<SUB>2413</SUB>> ]
+  "12981" -> "12987" 
+  "12974" -> "12981" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/245-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/245-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/245-cfg.dot	2023-06-07 19:35:41.547383219 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/245-cfg.dot	2023-06-07 19:35:48.067382782 +0330
@@ -1,7 +1,7 @@
 digraph "SetLongArrayRegion" {  
-"12999" [label = <(SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,SetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2422</SUB>> ]
-"12992" [label = <(METHOD,SetLongArrayRegion)<SUB>2420</SUB>> ]
-"13005" [label = <(METHOD_RETURN,void)<SUB>2420</SUB>> ]
-  "12999" -> "13005" 
-  "12992" -> "12999" 
+"12996" [label = <(SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,SetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2420</SUB>> ]
+"12989" [label = <(METHOD,SetLongArrayRegion)<SUB>2418</SUB>> ]
+"13002" [label = <(METHOD_RETURN,void)<SUB>2418</SUB>> ]
+  "12996" -> "13002" 
+  "12989" -> "12996" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/246-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/246-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/246-cfg.dot	2023-06-07 19:35:41.547383219 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/246-cfg.dot	2023-06-07 19:35:48.067382782 +0330
@@ -1,7 +1,7 @@
 digraph "SetShortArrayRegion" {  
-"13014" [label = <(SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,SetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2427</SUB>> ]
-"13007" [label = <(METHOD,SetShortArrayRegion)<SUB>2425</SUB>> ]
-"13020" [label = <(METHOD_RETURN,void)<SUB>2425</SUB>> ]
-  "13014" -> "13020" 
-  "13007" -> "13014" 
+"13011" [label = <(SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,SetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2425</SUB>> ]
+"13004" [label = <(METHOD,SetShortArrayRegion)<SUB>2423</SUB>> ]
+"13017" [label = <(METHOD_RETURN,void)<SUB>2423</SUB>> ]
+  "13011" -> "13017" 
+  "13004" -> "13011" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/247-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/247-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/247-cfg.dot	2023-06-07 19:35:41.547383219 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/247-cfg.dot	2023-06-07 19:35:48.077382779 +0330
@@ -1,437 +1,437 @@
 digraph "RegisterNatives" {  
-"13044" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2440</SUB>> ]
-"13065" [label = <(soa,soa(env))<SUB>2441</SUB>> ]
-"13067" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2442</SUB>> ]
-"13076" [label = <(&lt;operator&gt;.assignment,Handle&lt;mirror::Class&gt; c = hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2443</SUB>> ]
-"13114" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2449</SUB>> ]
-"13455" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2560</SUB>> ]
-"13029" [label = <(UNLIKELY,UNLIKELY(method_count &lt; 0))<SUB>2435</SUB>> ]
-"13068" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2442</SUB>> ]
-"13071" [label = <(hs,hs(soa.Self()))<SUB>2442</SUB>> ]
-"13077" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Class&gt; c)<SUB>2443</SUB>> ]
-"13084" [label = <(NewHandle,hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2443</SUB>> ]
-"13098" [label = <(UNLIKELY,UNLIKELY(method_count == 0))<SUB>2444</SUB>> ]
-"13140" [label = <(&lt;operator&gt;.lessThan,i &lt; method_count)<SUB>2450</SUB>> ]
-"13143" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2450</SUB>> ]
-"13030" [label = <(&lt;operator&gt;.lessThan,method_count &lt; 0)<SUB>2435</SUB>> ]
-"13034" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;negative method count: %d&quot;,\012                                       method_count))<SUB>2436</SUB>> ]
-"13042" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2438</SUB>> ]
-"13072" [label = <(Self,soa.Self())<SUB>2442</SUB>> ]
-"13078" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Class)<SUB>2443</SUB>> ]
-"13085" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>2443</SUB>> ]
-"13088" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2443</SUB>> ]
-"13099" [label = <(&lt;operator&gt;.equals,method_count == 0)<SUB>2444</SUB>> ]
-"13103" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2445</SUB>> ]
-"13112" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2447</SUB>> ]
-"13137" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2450</SUB>> ]
-"13147" [label = <(&lt;operator&gt;.assignment,* name = methods[i].name)<SUB>2451</SUB>> ]
-"13155" [label = <(&lt;operator&gt;.assignment,* sig = methods[i].signature)<SUB>2452</SUB>> ]
-"13163" [label = <(&lt;operator&gt;.assignment,* fnPtr = methods[i].fnPtr)<SUB>2453</SUB>> ]
-"13223" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2464</SUB>> ]
-"13238" [label = <(&lt;operator&gt;.assignment,* m = nullptr)<SUB>2502</SUB>> ]
-"13242" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2503</SUB>> ]
-"13418" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod() &lt;&lt; &quot;]&quot;)<SUB>2543</SUB>> ]
-"13446" [label = <(&lt;operator&gt;.assignment,* final_function_ptr = m-&gt;RegisterNative(fnPtr))<SUB>2557</SUB>> ]
-"13453" [label = <(UNUSED,UNUSED(final_function_ptr))<SUB>2558</SUB>> ]
-"13035" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2436</SUB>> ]
-"13050" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2440</SUB>> ]
-"13073" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2442</SUB>> ]
-"13080" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2443</SUB>> ]
-"13087" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>2443</SUB>> ]
-"13089" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2443</SUB>> ]
-"13104" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;)<SUB>2445</SUB>> ]
-"13108" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2446</SUB>> ]
-"13120" [label = <(UNLIKELY,UNLIKELY((methods) == nullptr))<SUB>2449</SUB>> ]
-"13149" [label = <(&lt;operator&gt;.fieldAccess,methods[i].name)<SUB>2451</SUB>> ]
-"13157" [label = <(&lt;operator&gt;.fieldAccess,methods[i].signature)<SUB>2452</SUB>> ]
-"13165" [label = <(&lt;operator&gt;.fieldAccess,methods[i].fnPtr)<SUB>2453</SUB>> ]
-"13171" [label = <(UNLIKELY,UNLIKELY(name == nullptr))<SUB>2454</SUB>> ]
-"13227" [label = <(&lt;operator&gt;.equals,*sig == '!')<SUB>2494</SUB>> ]
-"13244" [label = <(IsCheckJniEnabled,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2503</SUB>> ]
-"13266" [label = <(&lt;operator&gt;.notEquals,current_class != nullptr)<SUB>2505</SUB>> ]
-"13269" [label = <(&lt;operator&gt;.assignment,current_class = current_class-&gt;GetSuperClass())<SUB>2506</SUB>> ]
-"13327" [label = <(&lt;operator&gt;.equals,m == nullptr)<SUB>2526</SUB>> ]
-"13419" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2543</SUB>> ]
-"13430" [label = <(UNLIKELY,UNLIKELY(is_fast))<SUB>2545</SUB>> ]
-"13448" [label = <(RegisterNative,m-&gt;RegisterNative(fnPtr))<SUB>2557</SUB>> ]
-"13036" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2436</SUB>> ]
-"13038" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2436</SUB>> ]
-"13051" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2440</SUB>> ]
-"13055" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;java_class == null&quot;))<SUB>2440</SUB>> ]
-"13062" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2440</SUB>> ]
-"13075" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2442</SUB>> ]
-"13082" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2443</SUB>> ]
-"13090" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2443</SUB>> ]
-"13093" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2443</SUB>> ]
-"13105" [label = <(LOG,LOG(WARNING))<SUB>2445</SUB>> ]
-"13109" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2446</SUB>> ]
-"13121" [label = <(&lt;operator&gt;.equals,(methods) == nullptr)<SUB>2449</SUB>> ]
-"13125" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;methods == null&quot;))<SUB>2449</SUB>> ]
-"13132" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2449</SUB>> ]
-"13150" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2451</SUB>> ]
-"13153" [label = <(FIELD_IDENTIFIER,name,name)<SUB>2451</SUB>> ]
-"13158" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2452</SUB>> ]
-"13161" [label = <(FIELD_IDENTIFIER,signature,signature)<SUB>2452</SUB>> ]
-"13166" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2453</SUB>> ]
-"13169" [label = <(FIELD_IDENTIFIER,fnPtr,fnPtr)<SUB>2453</SUB>> ]
-"13172" [label = <(&lt;operator&gt;.equals,name == nullptr)<SUB>2454</SUB>> ]
-"13176" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method name&quot;, i))<SUB>2455</SUB>> ]
-"13184" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2456</SUB>> ]
-"13228" [label = <(&lt;operator&gt;.indirection,*sig)<SUB>2494</SUB>> ]
-"13232" [label = <(&lt;operator&gt;.assignment,is_fast = true)<SUB>2495</SUB>> ]
-"13235" [label = <(&lt;operator&gt;.preIncrement,++sig)<SUB>2496</SUB>> ]
-"13245" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled)<SUB>2503</SUB>> ]
-"13254" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; current_class = c.Get())<SUB>2504</SUB>> ]
-"13271" [label = <(GetSuperClass,current_class-&gt;GetSuperClass())<SUB>2506</SUB>> ]
-"13276" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;true&gt;(current_class, name, sig))<SUB>2508</SUB>> ]
-"13293" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;false&gt;(current_class, name, sig))<SUB>2514</SUB>> ]
-"13331" [label = <(DumpClass,c-&gt;DumpClass(LOG_STREAM(ERROR), mirror::Class::kDumpClassFullDetail))<SUB>2527</SUB>> ]
-"13342" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;\012 &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2528</SUB>> ]
-"13370" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;static or non-static&quot;))<SUB>2532</SUB>> ]
-"13379" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2533</SUB>> ]
-"13420" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot;)<SUB>2543</SUB>> ]
-"13424" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2543</SUB>> ]
-"13433" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2552</SUB>> ]
-"13442" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2553</SUB>> ]
-"13449" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;RegisterNative)<SUB>2557</SUB>> ]
-"13056" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2440</SUB>> ]
-"13092" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2443</SUB>> ]
-"13095" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2443</SUB>> ]
-"13111" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2446</SUB>> ]
-"13126" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2449</SUB>> ]
-"13178" [label = <(Get,c.Get())<SUB>2455</SUB>> ]
-"13246" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>2503</SUB>> ]
-"13251" [label = <(FIELD_IDENTIFIER,IsCheckJniEnabled,IsCheckJniEnabled)<SUB>2503</SUB>> ]
-"13255" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; current_class)<SUB>2504</SUB>> ]
-"13262" [label = <(Get,c.Get())<SUB>2504</SUB>> ]
-"13272" [label = <(&lt;operator&gt;.indirectFieldAccess,current_class-&gt;GetSuperClass)<SUB>2506</SUB>> ]
-"13278" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;true&gt;(current_class, name, sig))<SUB>2508</SUB>> ]
-"13288" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2509</SUB>> ]
-"13295" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;false&gt;(current_class, name, sig))<SUB>2514</SUB>> ]
-"13305" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2515</SUB>> ]
-"13332" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;DumpClass)<SUB>2527</SUB>> ]
-"13335" [label = <(LOG_STREAM,LOG_STREAM(ERROR))<SUB>2527</SUB>> ]
-"13337" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::kDumpClassFullDetail)<SUB>2527</SUB>> ]
-"13343" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;)<SUB>2528</SUB>> ]
-"13360" [label = <(ToModifiedUtf8,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2531</SUB>> ]
-"13372" [label = <(Get,c.Get())<SUB>2532</SUB>> ]
-"13421" [label = <(VLOG,VLOG(jni))<SUB>2543</SUB>> ]
-"13425" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2543</SUB>> ]
-"13434" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot;)<SUB>2552</SUB>> ]
-"13438" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2552</SUB>> ]
-"13451" [label = <(FIELD_IDENTIFIER,RegisterNative,RegisterNative)<SUB>2557</SUB>> ]
-"13057" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2440</SUB>> ]
-"13059" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2440</SUB>> ]
-"13127" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2449</SUB>> ]
-"13129" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2449</SUB>> ]
-"13179" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2455</SUB>> ]
-"13189" [label = <(UNLIKELY,UNLIKELY(sig == nullptr))<SUB>2457</SUB>> ]
-"13247" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>2503</SUB>> ]
-"13256" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2504</SUB>> ]
-"13263" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2504</SUB>> ]
-"13274" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>2506</SUB>> ]
-"13279" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;true)<SUB>2508</SUB>> ]
-"13282" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class, name, sig))<SUB>2508</SUB>> ]
-"13296" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;false)<SUB>2514</SUB>> ]
-"13299" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class, name, sig))<SUB>2514</SUB>> ]
-"13313" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;\012 &lt;&lt; &quot;This is slow, consider changing your RegisterNatives calls.&quot;)<SUB>2520</SUB>> ]
-"13323" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = false)<SUB>2522</SUB>> ]
-"13334" [label = <(FIELD_IDENTIFIER,DumpClass,DumpClass)<SUB>2527</SUB>> ]
-"13338" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2527</SUB>> ]
-"13341" [label = <(FIELD_IDENTIFIER,kDumpClassFullDetail,kDumpClassFullDetail)<SUB>2527</SUB>> ]
-"13344" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2528</SUB>> ]
-"13361" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8)<SUB>2531</SUB>> ]
-"13373" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2532</SUB>> ]
-"13384" [label = <(&lt;operator&gt;.logicalNot,!m-&gt;IsNative())<SUB>2534</SUB>> ]
-"13427" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2543</SUB>> ]
-"13435" [label = <(LOG,LOG(WARNING))<SUB>2552</SUB>> ]
-"13439" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2552</SUB>> ]
-"13181" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2455</SUB>> ]
-"13190" [label = <(&lt;operator&gt;.equals,sig == nullptr)<SUB>2457</SUB>> ]
-"13194" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method signature&quot;, i))<SUB>2458</SUB>> ]
-"13202" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2459</SUB>> ]
-"13248" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>2503</SUB>> ]
-"13250" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>2503</SUB>> ]
-"13258" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2504</SUB>> ]
-"13265" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2504</SUB>> ]
-"13283" [label = <(&lt;operator&gt;.expressionList,current_class, name, sig)<SUB>2508</SUB>> ]
-"13300" [label = <(&lt;operator&gt;.expressionList,current_class, name, sig)<SUB>2514</SUB>> ]
-"13314" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;)<SUB>2520</SUB>> ]
-"13345" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2528</SUB>> ]
-"13362" [label = <(GetLocation,c-&gt;GetDexCache()-&gt;GetLocation())<SUB>2531</SUB>> ]
-"13369" [label = <(FIELD_IDENTIFIER,ToModifiedUtf8,ToModifiedUtf8)<SUB>2531</SUB>> ]
-"13375" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2532</SUB>> ]
-"13385" [label = <(IsNative,m-&gt;IsNative())<SUB>2534</SUB>> ]
-"13390" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig\012 &lt;&lt; &quot; as native&quot;)<SUB>2535</SUB>> ]
-"13407" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;native&quot;))<SUB>2539</SUB>> ]
-"13416" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2540</SUB>> ]
-"13441" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2552</SUB>> ]
-"13196" [label = <(Get,c.Get())<SUB>2458</SUB>> ]
-"13260" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2504</SUB>> ]
-"13315" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name)<SUB>2520</SUB>> ]
-"13346" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2528</SUB>> ]
-"13363" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation)<SUB>2531</SUB>> ]
-"13386" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsNative)<SUB>2534</SUB>> ]
-"13391" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2535</SUB>> ]
-"13409" [label = <(Get,c.Get())<SUB>2539</SUB>> ]
-"13197" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2458</SUB>> ]
-"13207" [label = <(UNLIKELY,UNLIKELY(fnPtr == nullptr))<SUB>2460</SUB>> ]
-"13316" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot;)<SUB>2520</SUB>> ]
-"13347" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2528</SUB>> ]
-"13364" [label = <(GetDexCache,c-&gt;GetDexCache())<SUB>2531</SUB>> ]
-"13368" [label = <(FIELD_IDENTIFIER,GetLocation,GetLocation)<SUB>2531</SUB>> ]
-"13388" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2534</SUB>> ]
-"13392" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2535</SUB>> ]
-"13410" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2539</SUB>> ]
-"13199" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2458</SUB>> ]
-"13208" [label = <(&lt;operator&gt;.equals,fnPtr == nullptr)<SUB>2460</SUB>> ]
-"13212" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;native function&quot;, i))<SUB>2461</SUB>> ]
-"13220" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2462</SUB>> ]
-"13317" [label = <(LOG,LOG(WARNING))<SUB>2520</SUB>> ]
-"13348" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;)<SUB>2528</SUB>> ]
-"13352" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2530</SUB>> ]
-"13365" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache)<SUB>2531</SUB>> ]
-"13393" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2535</SUB>> ]
-"13412" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2539</SUB>> ]
-"13214" [label = <(Get,c.Get())<SUB>2461</SUB>> ]
-"13349" [label = <(LOG,LOG(ERROR))<SUB>2528</SUB>> ]
-"13353" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2530</SUB>> ]
-"13367" [label = <(FIELD_IDENTIFIER,GetDexCache,GetDexCache)<SUB>2531</SUB>> ]
-"13394" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2535</SUB>> ]
-"13215" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2461</SUB>> ]
-"13355" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2530</SUB>> ]
-"13395" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;)<SUB>2535</SUB>> ]
-"13399" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2537</SUB>> ]
-"13217" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2461</SUB>> ]
-"13396" [label = <(LOG,LOG(ERROR))<SUB>2535</SUB>> ]
-"13400" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2537</SUB>> ]
-"13402" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2537</SUB>> ]
-"13022" [label = <(METHOD,RegisterNatives)<SUB>2431</SUB>> ]
-"13457" [label = <(METHOD_RETURN,jint)<SUB>2431</SUB>> ]
-  "13044" -> "13051" 
-  "13044" -> "13065" 
-  "13065" -> "13068" 
-  "13067" -> "13082" 
-  "13076" -> "13099" 
-  "13114" -> "13121" 
-  "13114" -> "13137" 
-  "13455" -> "13457" 
-  "13029" -> "13036" 
-  "13029" -> "13044" 
-  "13068" -> "13075" 
-  "13071" -> "13067" 
-  "13077" -> "13087" 
-  "13084" -> "13076" 
-  "13098" -> "13105" 
-  "13098" -> "13114" 
-  "13140" -> "13150" 
-  "13140" -> "13455" 
-  "13143" -> "13140" 
-  "13030" -> "13029" 
-  "13034" -> "13042" 
-  "13042" -> "13457" 
-  "13072" -> "13071" 
-  "13078" -> "13077" 
-  "13085" -> "13092" 
-  "13088" -> "13084" 
-  "13099" -> "13098" 
-  "13103" -> "13112" 
-  "13112" -> "13457" 
-  "13137" -> "13140" 
-  "13147" -> "13158" 
-  "13155" -> "13166" 
-  "13163" -> "13172" 
-  "13223" -> "13228" 
-  "13238" -> "13248" 
-  "13242" -> "13260" 
-  "13418" -> "13430" 
-  "13446" -> "13453" 
-  "13453" -> "13143" 
-  "13035" -> "13034" 
-  "13050" -> "13057" 
-  "13050" -> "13065" 
-  "13073" -> "13072" 
-  "13080" -> "13078" 
-  "13087" -> "13085" 
-  "13089" -> "13088" 
-  "13104" -> "13111" 
-  "13108" -> "13103" 
-  "13120" -> "13127" 
-  "13120" -> "13137" 
-  "13149" -> "13147" 
-  "13157" -> "13155" 
-  "13165" -> "13163" 
-  "13171" -> "13181" 
-  "13171" -> "13190" 
-  "13227" -> "13232" 
-  "13227" -> "13238" 
-  "13244" -> "13242" 
-  "13266" -> "13279" 
-  "13266" -> "13327" 
-  "13269" -> "13266" 
-  "13327" -> "13334" 
-  "13327" -> "13388" 
-  "13419" -> "13418" 
-  "13430" -> "13435" 
-  "13430" -> "13451" 
-  "13448" -> "13446" 
-  "13036" -> "13038" 
-  "13038" -> "13035" 
-  "13051" -> "13050" 
-  "13055" -> "13062" 
-  "13062" -> "13457" 
-  "13075" -> "13073" 
-  "13082" -> "13080" 
-  "13090" -> "13095" 
-  "13093" -> "13089" 
-  "13105" -> "13104" 
-  "13109" -> "13108" 
-  "13121" -> "13120" 
-  "13125" -> "13132" 
-  "13132" -> "13457" 
-  "13150" -> "13153" 
-  "13153" -> "13149" 
-  "13158" -> "13161" 
-  "13161" -> "13157" 
-  "13166" -> "13169" 
-  "13169" -> "13165" 
-  "13172" -> "13171" 
-  "13176" -> "13184" 
-  "13184" -> "13457" 
-  "13228" -> "13227" 
+"13041" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2438</SUB>> ]
+"13062" [label = <(soa,soa(env))<SUB>2439</SUB>> ]
+"13064" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2440</SUB>> ]
+"13073" [label = <(&lt;operator&gt;.assignment,Handle&lt;mirror::Class&gt; c = hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2441</SUB>> ]
+"13111" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2447</SUB>> ]
+"13452" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2558</SUB>> ]
+"13026" [label = <(UNLIKELY,UNLIKELY(method_count &lt; 0))<SUB>2433</SUB>> ]
+"13065" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2440</SUB>> ]
+"13068" [label = <(hs,hs(soa.Self()))<SUB>2440</SUB>> ]
+"13074" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Class&gt; c)<SUB>2441</SUB>> ]
+"13081" [label = <(NewHandle,hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2441</SUB>> ]
+"13095" [label = <(UNLIKELY,UNLIKELY(method_count == 0))<SUB>2442</SUB>> ]
+"13137" [label = <(&lt;operator&gt;.lessThan,i &lt; method_count)<SUB>2448</SUB>> ]
+"13140" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2448</SUB>> ]
+"13027" [label = <(&lt;operator&gt;.lessThan,method_count &lt; 0)<SUB>2433</SUB>> ]
+"13031" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;negative method count: %d&quot;,\012                                       method_count))<SUB>2434</SUB>> ]
+"13039" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2436</SUB>> ]
+"13069" [label = <(Self,soa.Self())<SUB>2440</SUB>> ]
+"13075" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Class)<SUB>2441</SUB>> ]
+"13082" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>2441</SUB>> ]
+"13085" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2441</SUB>> ]
+"13096" [label = <(&lt;operator&gt;.equals,method_count == 0)<SUB>2442</SUB>> ]
+"13100" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2443</SUB>> ]
+"13109" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2445</SUB>> ]
+"13134" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2448</SUB>> ]
+"13144" [label = <(&lt;operator&gt;.assignment,* name = methods[i].name)<SUB>2449</SUB>> ]
+"13152" [label = <(&lt;operator&gt;.assignment,* sig = methods[i].signature)<SUB>2450</SUB>> ]
+"13160" [label = <(&lt;operator&gt;.assignment,* fnPtr = methods[i].fnPtr)<SUB>2451</SUB>> ]
+"13220" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2462</SUB>> ]
+"13235" [label = <(&lt;operator&gt;.assignment,* m = nullptr)<SUB>2500</SUB>> ]
+"13239" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2501</SUB>> ]
+"13415" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod() &lt;&lt; &quot;]&quot;)<SUB>2541</SUB>> ]
+"13443" [label = <(&lt;operator&gt;.assignment,* final_function_ptr = m-&gt;RegisterNative(fnPtr))<SUB>2555</SUB>> ]
+"13450" [label = <(UNUSED,UNUSED(final_function_ptr))<SUB>2556</SUB>> ]
+"13032" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2434</SUB>> ]
+"13047" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2438</SUB>> ]
+"13070" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2440</SUB>> ]
+"13077" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2441</SUB>> ]
+"13084" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>2441</SUB>> ]
+"13086" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2441</SUB>> ]
+"13101" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;)<SUB>2443</SUB>> ]
+"13105" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2444</SUB>> ]
+"13117" [label = <(UNLIKELY,UNLIKELY((methods) == nullptr))<SUB>2447</SUB>> ]
+"13146" [label = <(&lt;operator&gt;.fieldAccess,methods[i].name)<SUB>2449</SUB>> ]
+"13154" [label = <(&lt;operator&gt;.fieldAccess,methods[i].signature)<SUB>2450</SUB>> ]
+"13162" [label = <(&lt;operator&gt;.fieldAccess,methods[i].fnPtr)<SUB>2451</SUB>> ]
+"13168" [label = <(UNLIKELY,UNLIKELY(name == nullptr))<SUB>2452</SUB>> ]
+"13224" [label = <(&lt;operator&gt;.equals,*sig == '!')<SUB>2492</SUB>> ]
+"13241" [label = <(IsCheckJniEnabled,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2501</SUB>> ]
+"13263" [label = <(&lt;operator&gt;.notEquals,current_class != nullptr)<SUB>2503</SUB>> ]
+"13266" [label = <(&lt;operator&gt;.assignment,current_class = current_class-&gt;GetSuperClass())<SUB>2504</SUB>> ]
+"13324" [label = <(&lt;operator&gt;.equals,m == nullptr)<SUB>2524</SUB>> ]
+"13416" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2541</SUB>> ]
+"13427" [label = <(UNLIKELY,UNLIKELY(is_fast))<SUB>2543</SUB>> ]
+"13445" [label = <(RegisterNative,m-&gt;RegisterNative(fnPtr))<SUB>2555</SUB>> ]
+"13033" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2434</SUB>> ]
+"13035" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2434</SUB>> ]
+"13048" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2438</SUB>> ]
+"13052" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;java_class == null&quot;))<SUB>2438</SUB>> ]
+"13059" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2438</SUB>> ]
+"13072" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2440</SUB>> ]
+"13079" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2441</SUB>> ]
+"13087" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2441</SUB>> ]
+"13090" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2441</SUB>> ]
+"13102" [label = <(LOG,LOG(WARNING))<SUB>2443</SUB>> ]
+"13106" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2444</SUB>> ]
+"13118" [label = <(&lt;operator&gt;.equals,(methods) == nullptr)<SUB>2447</SUB>> ]
+"13122" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;methods == null&quot;))<SUB>2447</SUB>> ]
+"13129" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2447</SUB>> ]
+"13147" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2449</SUB>> ]
+"13150" [label = <(FIELD_IDENTIFIER,name,name)<SUB>2449</SUB>> ]
+"13155" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2450</SUB>> ]
+"13158" [label = <(FIELD_IDENTIFIER,signature,signature)<SUB>2450</SUB>> ]
+"13163" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2451</SUB>> ]
+"13166" [label = <(FIELD_IDENTIFIER,fnPtr,fnPtr)<SUB>2451</SUB>> ]
+"13169" [label = <(&lt;operator&gt;.equals,name == nullptr)<SUB>2452</SUB>> ]
+"13173" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method name&quot;, i))<SUB>2453</SUB>> ]
+"13181" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2454</SUB>> ]
+"13225" [label = <(&lt;operator&gt;.indirection,*sig)<SUB>2492</SUB>> ]
+"13229" [label = <(&lt;operator&gt;.assignment,is_fast = true)<SUB>2493</SUB>> ]
+"13232" [label = <(&lt;operator&gt;.preIncrement,++sig)<SUB>2494</SUB>> ]
+"13242" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled)<SUB>2501</SUB>> ]
+"13251" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; current_class = c.Get())<SUB>2502</SUB>> ]
+"13268" [label = <(GetSuperClass,current_class-&gt;GetSuperClass())<SUB>2504</SUB>> ]
+"13273" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;true&gt;(current_class, name, sig))<SUB>2506</SUB>> ]
+"13290" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;false&gt;(current_class, name, sig))<SUB>2512</SUB>> ]
+"13328" [label = <(DumpClass,c-&gt;DumpClass(LOG_STREAM(ERROR), mirror::Class::kDumpClassFullDetail))<SUB>2525</SUB>> ]
+"13339" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;\012 &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2526</SUB>> ]
+"13367" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;static or non-static&quot;))<SUB>2530</SUB>> ]
+"13376" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2531</SUB>> ]
+"13417" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot;)<SUB>2541</SUB>> ]
+"13421" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2541</SUB>> ]
+"13430" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2550</SUB>> ]
+"13439" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2551</SUB>> ]
+"13446" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;RegisterNative)<SUB>2555</SUB>> ]
+"13053" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2438</SUB>> ]
+"13089" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2441</SUB>> ]
+"13092" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2441</SUB>> ]
+"13108" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2444</SUB>> ]
+"13123" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2447</SUB>> ]
+"13175" [label = <(Get,c.Get())<SUB>2453</SUB>> ]
+"13243" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>2501</SUB>> ]
+"13248" [label = <(FIELD_IDENTIFIER,IsCheckJniEnabled,IsCheckJniEnabled)<SUB>2501</SUB>> ]
+"13252" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; current_class)<SUB>2502</SUB>> ]
+"13259" [label = <(Get,c.Get())<SUB>2502</SUB>> ]
+"13269" [label = <(&lt;operator&gt;.indirectFieldAccess,current_class-&gt;GetSuperClass)<SUB>2504</SUB>> ]
+"13275" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;true&gt;(current_class, name, sig))<SUB>2506</SUB>> ]
+"13285" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2507</SUB>> ]
+"13292" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;false&gt;(current_class, name, sig))<SUB>2512</SUB>> ]
+"13302" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2513</SUB>> ]
+"13329" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;DumpClass)<SUB>2525</SUB>> ]
+"13332" [label = <(LOG_STREAM,LOG_STREAM(ERROR))<SUB>2525</SUB>> ]
+"13334" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::kDumpClassFullDetail)<SUB>2525</SUB>> ]
+"13340" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;)<SUB>2526</SUB>> ]
+"13357" [label = <(ToModifiedUtf8,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2529</SUB>> ]
+"13369" [label = <(Get,c.Get())<SUB>2530</SUB>> ]
+"13418" [label = <(VLOG,VLOG(jni))<SUB>2541</SUB>> ]
+"13422" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2541</SUB>> ]
+"13431" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot;)<SUB>2550</SUB>> ]
+"13435" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2550</SUB>> ]
+"13448" [label = <(FIELD_IDENTIFIER,RegisterNative,RegisterNative)<SUB>2555</SUB>> ]
+"13054" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2438</SUB>> ]
+"13056" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2438</SUB>> ]
+"13124" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2447</SUB>> ]
+"13126" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2447</SUB>> ]
+"13176" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2453</SUB>> ]
+"13186" [label = <(UNLIKELY,UNLIKELY(sig == nullptr))<SUB>2455</SUB>> ]
+"13244" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>2501</SUB>> ]
+"13253" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2502</SUB>> ]
+"13260" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2502</SUB>> ]
+"13271" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>2504</SUB>> ]
+"13276" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;true)<SUB>2506</SUB>> ]
+"13279" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class, name, sig))<SUB>2506</SUB>> ]
+"13293" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;false)<SUB>2512</SUB>> ]
+"13296" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class, name, sig))<SUB>2512</SUB>> ]
+"13310" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;\012 &lt;&lt; &quot;This is slow, consider changing your RegisterNatives calls.&quot;)<SUB>2518</SUB>> ]
+"13320" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = false)<SUB>2520</SUB>> ]
+"13331" [label = <(FIELD_IDENTIFIER,DumpClass,DumpClass)<SUB>2525</SUB>> ]
+"13335" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2525</SUB>> ]
+"13338" [label = <(FIELD_IDENTIFIER,kDumpClassFullDetail,kDumpClassFullDetail)<SUB>2525</SUB>> ]
+"13341" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2526</SUB>> ]
+"13358" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8)<SUB>2529</SUB>> ]
+"13370" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2530</SUB>> ]
+"13381" [label = <(&lt;operator&gt;.logicalNot,!m-&gt;IsNative())<SUB>2532</SUB>> ]
+"13424" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2541</SUB>> ]
+"13432" [label = <(LOG,LOG(WARNING))<SUB>2550</SUB>> ]
+"13436" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2550</SUB>> ]
+"13178" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2453</SUB>> ]
+"13187" [label = <(&lt;operator&gt;.equals,sig == nullptr)<SUB>2455</SUB>> ]
+"13191" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method signature&quot;, i))<SUB>2456</SUB>> ]
+"13199" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2457</SUB>> ]
+"13245" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>2501</SUB>> ]
+"13247" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>2501</SUB>> ]
+"13255" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2502</SUB>> ]
+"13262" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2502</SUB>> ]
+"13280" [label = <(&lt;operator&gt;.expressionList,current_class, name, sig)<SUB>2506</SUB>> ]
+"13297" [label = <(&lt;operator&gt;.expressionList,current_class, name, sig)<SUB>2512</SUB>> ]
+"13311" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;)<SUB>2518</SUB>> ]
+"13342" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2526</SUB>> ]
+"13359" [label = <(GetLocation,c-&gt;GetDexCache()-&gt;GetLocation())<SUB>2529</SUB>> ]
+"13366" [label = <(FIELD_IDENTIFIER,ToModifiedUtf8,ToModifiedUtf8)<SUB>2529</SUB>> ]
+"13372" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2530</SUB>> ]
+"13382" [label = <(IsNative,m-&gt;IsNative())<SUB>2532</SUB>> ]
+"13387" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig\012 &lt;&lt; &quot; as native&quot;)<SUB>2533</SUB>> ]
+"13404" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;native&quot;))<SUB>2537</SUB>> ]
+"13413" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2538</SUB>> ]
+"13438" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2550</SUB>> ]
+"13193" [label = <(Get,c.Get())<SUB>2456</SUB>> ]
+"13257" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2502</SUB>> ]
+"13312" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name)<SUB>2518</SUB>> ]
+"13343" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2526</SUB>> ]
+"13360" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation)<SUB>2529</SUB>> ]
+"13383" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsNative)<SUB>2532</SUB>> ]
+"13388" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2533</SUB>> ]
+"13406" [label = <(Get,c.Get())<SUB>2537</SUB>> ]
+"13194" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2456</SUB>> ]
+"13204" [label = <(UNLIKELY,UNLIKELY(fnPtr == nullptr))<SUB>2458</SUB>> ]
+"13313" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot;)<SUB>2518</SUB>> ]
+"13344" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2526</SUB>> ]
+"13361" [label = <(GetDexCache,c-&gt;GetDexCache())<SUB>2529</SUB>> ]
+"13365" [label = <(FIELD_IDENTIFIER,GetLocation,GetLocation)<SUB>2529</SUB>> ]
+"13385" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2532</SUB>> ]
+"13389" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2533</SUB>> ]
+"13407" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2537</SUB>> ]
+"13196" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2456</SUB>> ]
+"13205" [label = <(&lt;operator&gt;.equals,fnPtr == nullptr)<SUB>2458</SUB>> ]
+"13209" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;native function&quot;, i))<SUB>2459</SUB>> ]
+"13217" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2460</SUB>> ]
+"13314" [label = <(LOG,LOG(WARNING))<SUB>2518</SUB>> ]
+"13345" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;)<SUB>2526</SUB>> ]
+"13349" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2528</SUB>> ]
+"13362" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache)<SUB>2529</SUB>> ]
+"13390" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2533</SUB>> ]
+"13409" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2537</SUB>> ]
+"13211" [label = <(Get,c.Get())<SUB>2459</SUB>> ]
+"13346" [label = <(LOG,LOG(ERROR))<SUB>2526</SUB>> ]
+"13350" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2528</SUB>> ]
+"13364" [label = <(FIELD_IDENTIFIER,GetDexCache,GetDexCache)<SUB>2529</SUB>> ]
+"13391" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2533</SUB>> ]
+"13212" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2459</SUB>> ]
+"13352" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2528</SUB>> ]
+"13392" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;)<SUB>2533</SUB>> ]
+"13396" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2535</SUB>> ]
+"13214" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2459</SUB>> ]
+"13393" [label = <(LOG,LOG(ERROR))<SUB>2533</SUB>> ]
+"13397" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2535</SUB>> ]
+"13399" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2535</SUB>> ]
+"13019" [label = <(METHOD,RegisterNatives)<SUB>2429</SUB>> ]
+"13454" [label = <(METHOD_RETURN,jint)<SUB>2429</SUB>> ]
+  "13041" -> "13048" 
+  "13041" -> "13062" 
+  "13062" -> "13065" 
+  "13064" -> "13079" 
+  "13073" -> "13096" 
+  "13111" -> "13118" 
+  "13111" -> "13134" 
+  "13452" -> "13454" 
+  "13026" -> "13033" 
+  "13026" -> "13041" 
+  "13065" -> "13072" 
+  "13068" -> "13064" 
+  "13074" -> "13084" 
+  "13081" -> "13073" 
+  "13095" -> "13102" 
+  "13095" -> "13111" 
+  "13137" -> "13147" 
+  "13137" -> "13452" 
+  "13140" -> "13137" 
+  "13027" -> "13026" 
+  "13031" -> "13039" 
+  "13039" -> "13454" 
+  "13069" -> "13068" 
+  "13075" -> "13074" 
+  "13082" -> "13089" 
+  "13085" -> "13081" 
+  "13096" -> "13095" 
+  "13100" -> "13109" 
+  "13109" -> "13454" 
+  "13134" -> "13137" 
+  "13144" -> "13155" 
+  "13152" -> "13163" 
+  "13160" -> "13169" 
+  "13220" -> "13225" 
+  "13235" -> "13245" 
+  "13239" -> "13257" 
+  "13415" -> "13427" 
+  "13443" -> "13450" 
+  "13450" -> "13140" 
+  "13032" -> "13031" 
+  "13047" -> "13054" 
+  "13047" -> "13062" 
+  "13070" -> "13069" 
+  "13077" -> "13075" 
+  "13084" -> "13082" 
+  "13086" -> "13085" 
+  "13101" -> "13108" 
+  "13105" -> "13100" 
+  "13117" -> "13124" 
+  "13117" -> "13134" 
+  "13146" -> "13144" 
+  "13154" -> "13152" 
+  "13162" -> "13160" 
+  "13168" -> "13178" 
+  "13168" -> "13187" 
+  "13224" -> "13229" 
+  "13224" -> "13235" 
+  "13241" -> "13239" 
+  "13263" -> "13276" 
+  "13263" -> "13324" 
+  "13266" -> "13263" 
+  "13324" -> "13331" 
+  "13324" -> "13385" 
+  "13416" -> "13415" 
+  "13427" -> "13432" 
+  "13427" -> "13448" 
+  "13445" -> "13443" 
+  "13033" -> "13035" 
+  "13035" -> "13032" 
+  "13048" -> "13047" 
+  "13052" -> "13059" 
+  "13059" -> "13454" 
+  "13072" -> "13070" 
+  "13079" -> "13077" 
+  "13087" -> "13092" 
+  "13090" -> "13086" 
+  "13102" -> "13101" 
+  "13106" -> "13105" 
+  "13118" -> "13117" 
+  "13122" -> "13129" 
+  "13129" -> "13454" 
+  "13147" -> "13150" 
+  "13150" -> "13146" 
+  "13155" -> "13158" 
+  "13158" -> "13154" 
+  "13163" -> "13166" 
+  "13166" -> "13162" 
+  "13169" -> "13168" 
+  "13173" -> "13181" 
+  "13181" -> "13454" 
+  "13225" -> "13224" 
+  "13229" -> "13232" 
   "13232" -> "13235" 
-  "13235" -> "13238" 
-  "13245" -> "13244" 
-  "13254" -> "13266" 
-  "13271" -> "13269" 
-  "13276" -> "13288" 
-  "13293" -> "13305" 
-  "13331" -> "13349" 
-  "13342" -> "13375" 
-  "13370" -> "13379" 
-  "13379" -> "13457" 
-  "13420" -> "13427" 
-  "13424" -> "13419" 
-  "13433" -> "13442" 
-  "13442" -> "13451" 
-  "13449" -> "13448" 
-  "13056" -> "13055" 
+  "13242" -> "13241" 
+  "13251" -> "13263" 
+  "13268" -> "13266" 
+  "13273" -> "13285" 
+  "13290" -> "13302" 
+  "13328" -> "13346" 
+  "13339" -> "13372" 
+  "13367" -> "13376" 
+  "13376" -> "13454" 
+  "13417" -> "13424" 
+  "13421" -> "13416" 
+  "13430" -> "13439" 
+  "13439" -> "13448" 
+  "13446" -> "13445" 
+  "13053" -> "13052" 
+  "13089" -> "13087" 
   "13092" -> "13090" 
-  "13095" -> "13093" 
-  "13111" -> "13109" 
-  "13126" -> "13125" 
-  "13178" -> "13176" 
-  "13246" -> "13251" 
-  "13251" -> "13245" 
-  "13255" -> "13265" 
-  "13262" -> "13254" 
-  "13272" -> "13271" 
-  "13278" -> "13276" 
-  "13288" -> "13327" 
-  "13288" -> "13296" 
-  "13295" -> "13293" 
-  "13305" -> "13327" 
-  "13305" -> "13317" 
-  "13305" -> "13274" 
+  "13108" -> "13106" 
+  "13123" -> "13122" 
+  "13175" -> "13173" 
+  "13243" -> "13248" 
+  "13248" -> "13242" 
+  "13252" -> "13262" 
+  "13259" -> "13251" 
+  "13269" -> "13268" 
+  "13275" -> "13273" 
+  "13285" -> "13324" 
+  "13285" -> "13293" 
+  "13292" -> "13290" 
+  "13302" -> "13324" 
+  "13302" -> "13314" 
+  "13302" -> "13271" 
+  "13329" -> "13332" 
   "13332" -> "13335" 
+  "13334" -> "13328" 
+  "13340" -> "13364" 
+  "13357" -> "13339" 
+  "13369" -> "13367" 
+  "13418" -> "13417" 
+  "13422" -> "13421" 
+  "13431" -> "13438" 
+  "13435" -> "13430" 
+  "13448" -> "13446" 
+  "13054" -> "13056" 
+  "13056" -> "13053" 
+  "13124" -> "13126" 
+  "13126" -> "13123" 
+  "13176" -> "13175" 
+  "13186" -> "13196" 
+  "13186" -> "13205" 
+  "13244" -> "13243" 
+  "13253" -> "13252" 
+  "13260" -> "13259" 
+  "13271" -> "13269" 
+  "13276" -> "13280" 
+  "13279" -> "13275" 
+  "13293" -> "13297" 
+  "13296" -> "13292" 
+  "13310" -> "13320" 
+  "13320" -> "13271" 
+  "13331" -> "13329" 
   "13335" -> "13338" 
-  "13337" -> "13331" 
-  "13343" -> "13367" 
-  "13360" -> "13342" 
+  "13338" -> "13334" 
+  "13341" -> "13340" 
+  "13358" -> "13357" 
+  "13370" -> "13369" 
+  "13381" -> "13393" 
+  "13381" -> "13418" 
+  "13424" -> "13422" 
+  "13432" -> "13431" 
+  "13436" -> "13435" 
+  "13178" -> "13176" 
+  "13187" -> "13186" 
+  "13191" -> "13199" 
+  "13199" -> "13454" 
+  "13245" -> "13247" 
+  "13247" -> "13244" 
+  "13255" -> "13253" 
+  "13262" -> "13260" 
+  "13280" -> "13279" 
+  "13297" -> "13296" 
+  "13311" -> "13310" 
+  "13342" -> "13341" 
+  "13359" -> "13366" 
+  "13366" -> "13358" 
   "13372" -> "13370" 
-  "13421" -> "13420" 
-  "13425" -> "13424" 
-  "13434" -> "13441" 
-  "13438" -> "13433" 
-  "13451" -> "13449" 
-  "13057" -> "13059" 
-  "13059" -> "13056" 
-  "13127" -> "13129" 
-  "13129" -> "13126" 
-  "13179" -> "13178" 
-  "13189" -> "13199" 
-  "13189" -> "13208" 
-  "13247" -> "13246" 
-  "13256" -> "13255" 
-  "13263" -> "13262" 
-  "13274" -> "13272" 
-  "13279" -> "13283" 
-  "13282" -> "13278" 
-  "13296" -> "13300" 
-  "13299" -> "13295" 
-  "13313" -> "13323" 
-  "13323" -> "13274" 
-  "13334" -> "13332" 
-  "13338" -> "13341" 
-  "13341" -> "13337" 
+  "13382" -> "13381" 
+  "13387" -> "13409" 
+  "13404" -> "13413" 
+  "13413" -> "13454" 
+  "13438" -> "13436" 
+  "13193" -> "13191" 
+  "13257" -> "13255" 
+  "13312" -> "13311" 
+  "13343" -> "13342" 
+  "13360" -> "13359" 
+  "13383" -> "13382" 
+  "13388" -> "13387" 
+  "13406" -> "13404" 
+  "13194" -> "13193" 
+  "13204" -> "13214" 
+  "13204" -> "13220" 
+  "13313" -> "13312" 
   "13344" -> "13343" 
-  "13361" -> "13360" 
-  "13373" -> "13372" 
-  "13384" -> "13396" 
-  "13384" -> "13421" 
-  "13427" -> "13425" 
-  "13435" -> "13434" 
-  "13439" -> "13438" 
-  "13181" -> "13179" 
-  "13190" -> "13189" 
-  "13194" -> "13202" 
-  "13202" -> "13457" 
-  "13248" -> "13250" 
-  "13250" -> "13247" 
-  "13258" -> "13256" 
-  "13265" -> "13263" 
-  "13283" -> "13282" 
-  "13300" -> "13299" 
-  "13314" -> "13313" 
-  "13345" -> "13344" 
-  "13362" -> "13369" 
-  "13369" -> "13361" 
-  "13375" -> "13373" 
-  "13385" -> "13384" 
-  "13390" -> "13412" 
-  "13407" -> "13416" 
-  "13416" -> "13457" 
-  "13441" -> "13439" 
+  "13361" -> "13365" 
+  "13365" -> "13360" 
+  "13385" -> "13383" 
+  "13389" -> "13388" 
+  "13407" -> "13406" 
   "13196" -> "13194" 
-  "13260" -> "13258" 
-  "13315" -> "13314" 
+  "13205" -> "13204" 
+  "13209" -> "13217" 
+  "13217" -> "13454" 
+  "13314" -> "13313" 
+  "13345" -> "13352" 
+  "13349" -> "13344" 
+  "13362" -> "13361" 
+  "13390" -> "13389" 
+  "13409" -> "13407" 
+  "13211" -> "13209" 
   "13346" -> "13345" 
-  "13363" -> "13362" 
-  "13386" -> "13385" 
+  "13350" -> "13349" 
+  "13364" -> "13362" 
   "13391" -> "13390" 
-  "13409" -> "13407" 
-  "13197" -> "13196" 
-  "13207" -> "13217" 
-  "13207" -> "13223" 
-  "13316" -> "13315" 
-  "13347" -> "13346" 
-  "13364" -> "13368" 
-  "13368" -> "13363" 
-  "13388" -> "13386" 
-  "13392" -> "13391" 
-  "13410" -> "13409" 
-  "13199" -> "13197" 
-  "13208" -> "13207" 
-  "13212" -> "13220" 
-  "13220" -> "13457" 
-  "13317" -> "13316" 
-  "13348" -> "13355" 
-  "13352" -> "13347" 
-  "13365" -> "13364" 
-  "13393" -> "13392" 
-  "13412" -> "13410" 
+  "13212" -> "13211" 
+  "13352" -> "13350" 
+  "13392" -> "13399" 
+  "13396" -> "13391" 
   "13214" -> "13212" 
-  "13349" -> "13348" 
-  "13353" -> "13352" 
-  "13367" -> "13365" 
-  "13394" -> "13393" 
-  "13215" -> "13214" 
-  "13355" -> "13353" 
-  "13395" -> "13402" 
-  "13399" -> "13394" 
-  "13217" -> "13215" 
-  "13396" -> "13395" 
-  "13400" -> "13399" 
-  "13402" -> "13400" 
-  "13022" -> "13030" 
+  "13393" -> "13392" 
+  "13397" -> "13396" 
+  "13399" -> "13397" 
+  "13019" -> "13027" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/248-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/248-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/248-cfg.dot	2023-06-07 19:35:41.547383219 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/248-cfg.dot	2023-06-07 19:35:48.077382779 +0330
@@ -1,123 +1,123 @@
 digraph "UnregisterNatives" {  
-"13463" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2564</SUB>> ]
-"13483" [label = <(soa,soa(env))<SUB>2565</SUB>> ]
-"13485" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2566</SUB>> ]
-"13502" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c) &lt;&lt; &quot;]&quot;)<SUB>2568</SUB>> ]
-"13517" [label = <(&lt;operator&gt;.assignment,unregistered_count = 0)<SUB>2570</SUB>> ]
-"13521" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2571</SUB>> ]
-"13572" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2583</SUB>> ]
-"13486" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>2566</SUB>> ]
-"13493" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2566</SUB>> ]
-"13503" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c))<SUB>2568</SUB>> ]
-"13523" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2571</SUB>> ]
-"13554" [label = <(&lt;operator&gt;.equals,unregistered_count == 0)<SUB>2579</SUB>> ]
-"13487" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2566</SUB>> ]
-"13494" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2566</SUB>> ]
-"13504" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot;)<SUB>2568</SUB>> ]
-"13508" [label = <(mirror::Class::PrettyClass,mirror::Class::PrettyClass(c))<SUB>2568</SUB>> ]
-"13524" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>2571</SUB>> ]
-"13558" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c) &lt;&lt; &quot;' that contains no native methods&quot;)<SUB>2580</SUB>> ]
-"13468" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2564</SUB>> ]
-"13489" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2566</SUB>> ]
-"13495" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2566</SUB>> ]
-"13498" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2566</SUB>> ]
-"13505" [label = <(VLOG,VLOG(jni))<SUB>2568</SUB>> ]
-"13509" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyClass)<SUB>2568</SUB>> ]
-"13525" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2571</SUB>> ]
-"13532" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>2571</SUB>> ]
-"13542" [label = <(IsNative,m.IsNative())<SUB>2573</SUB>> ]
-"13559" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c))<SUB>2580</SUB>> ]
-"13469" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2564</SUB>> ]
-"13473" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>2564</SUB>> ]
-"13480" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2564</SUB>> ]
-"13491" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2566</SUB>> ]
-"13497" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2566</SUB>> ]
-"13500" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2566</SUB>> ]
-"13510" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2568</SUB>> ]
-"13513" [label = <(FIELD_IDENTIFIER,PrettyClass,PrettyClass)<SUB>2568</SUB>> ]
-"13526" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2571</SUB>> ]
-"13543" [label = <(&lt;operator&gt;.fieldAccess,m.IsNative)<SUB>2573</SUB>> ]
-"13547" [label = <(UnregisterNative,m.UnregisterNative())<SUB>2574</SUB>> ]
-"13551" [label = <(&lt;operator&gt;.postIncrement,unregistered_count++)<SUB>2575</SUB>> ]
-"13560" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;)<SUB>2580</SUB>> ]
-"13564" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(c))<SUB>2581</SUB>> ]
-"13474" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2564</SUB>> ]
-"13527" [label = <(Runtime::Current,Runtime::Current())<SUB>2571</SUB>> ]
-"13531" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2571</SUB>> ]
-"13545" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2573</SUB>> ]
-"13548" [label = <(&lt;operator&gt;.fieldAccess,m.UnregisterNative)<SUB>2574</SUB>> ]
-"13561" [label = <(LOG,LOG(WARNING))<SUB>2580</SUB>> ]
-"13565" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2581</SUB>> ]
-"13475" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2564</SUB>> ]
-"13477" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2564</SUB>> ]
-"13528" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2571</SUB>> ]
-"13550" [label = <(FIELD_IDENTIFIER,UnregisterNative,UnregisterNative)<SUB>2574</SUB>> ]
-"13566" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2581</SUB>> ]
-"13569" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2581</SUB>> ]
-"13530" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2571</SUB>> ]
-"13459" [label = <(METHOD,UnregisterNatives)<SUB>2563</SUB>> ]
-"13574" [label = <(METHOD_RETURN,jint)<SUB>2563</SUB>> ]
-  "13463" -> "13469" 
-  "13463" -> "13483" 
-  "13483" -> "13491" 
-  "13485" -> "13505" 
-  "13502" -> "13517" 
-  "13517" -> "13530" 
-  "13521" -> "13545" 
-  "13572" -> "13574" 
-  "13486" -> "13497" 
-  "13493" -> "13485" 
-  "13503" -> "13502" 
-  "13523" -> "13521" 
-  "13554" -> "13561" 
-  "13554" -> "13572" 
-  "13487" -> "13486" 
-  "13494" -> "13493" 
-  "13504" -> "13510" 
-  "13508" -> "13503" 
-  "13524" -> "13523" 
-  "13558" -> "13572" 
-  "13468" -> "13475" 
-  "13468" -> "13483" 
-  "13489" -> "13487" 
-  "13495" -> "13500" 
-  "13498" -> "13494" 
-  "13505" -> "13504" 
-  "13509" -> "13508" 
-  "13525" -> "13532" 
-  "13532" -> "13524" 
-  "13542" -> "13545" 
-  "13542" -> "13550" 
-  "13542" -> "13554" 
-  "13559" -> "13558" 
-  "13469" -> "13468" 
-  "13473" -> "13480" 
-  "13480" -> "13574" 
-  "13491" -> "13489" 
+"13460" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2562</SUB>> ]
+"13480" [label = <(soa,soa(env))<SUB>2563</SUB>> ]
+"13482" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2564</SUB>> ]
+"13499" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c) &lt;&lt; &quot;]&quot;)<SUB>2566</SUB>> ]
+"13514" [label = <(&lt;operator&gt;.assignment,unregistered_count = 0)<SUB>2568</SUB>> ]
+"13518" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2569</SUB>> ]
+"13569" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2581</SUB>> ]
+"13483" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>2564</SUB>> ]
+"13490" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2564</SUB>> ]
+"13500" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c))<SUB>2566</SUB>> ]
+"13520" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2569</SUB>> ]
+"13551" [label = <(&lt;operator&gt;.equals,unregistered_count == 0)<SUB>2577</SUB>> ]
+"13484" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2564</SUB>> ]
+"13491" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2564</SUB>> ]
+"13501" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot;)<SUB>2566</SUB>> ]
+"13505" [label = <(mirror::Class::PrettyClass,mirror::Class::PrettyClass(c))<SUB>2566</SUB>> ]
+"13521" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>2569</SUB>> ]
+"13555" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c) &lt;&lt; &quot;' that contains no native methods&quot;)<SUB>2578</SUB>> ]
+"13465" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2562</SUB>> ]
+"13486" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2564</SUB>> ]
+"13492" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2564</SUB>> ]
+"13495" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2564</SUB>> ]
+"13502" [label = <(VLOG,VLOG(jni))<SUB>2566</SUB>> ]
+"13506" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyClass)<SUB>2566</SUB>> ]
+"13522" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2569</SUB>> ]
+"13529" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>2569</SUB>> ]
+"13539" [label = <(IsNative,m.IsNative())<SUB>2571</SUB>> ]
+"13556" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c))<SUB>2578</SUB>> ]
+"13466" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2562</SUB>> ]
+"13470" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>2562</SUB>> ]
+"13477" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2562</SUB>> ]
+"13488" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2564</SUB>> ]
+"13494" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2564</SUB>> ]
+"13497" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2564</SUB>> ]
+"13507" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2566</SUB>> ]
+"13510" [label = <(FIELD_IDENTIFIER,PrettyClass,PrettyClass)<SUB>2566</SUB>> ]
+"13523" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2569</SUB>> ]
+"13540" [label = <(&lt;operator&gt;.fieldAccess,m.IsNative)<SUB>2571</SUB>> ]
+"13544" [label = <(UnregisterNative,m.UnregisterNative())<SUB>2572</SUB>> ]
+"13548" [label = <(&lt;operator&gt;.postIncrement,unregistered_count++)<SUB>2573</SUB>> ]
+"13557" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;)<SUB>2578</SUB>> ]
+"13561" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(c))<SUB>2579</SUB>> ]
+"13471" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2562</SUB>> ]
+"13524" [label = <(Runtime::Current,Runtime::Current())<SUB>2569</SUB>> ]
+"13528" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2569</SUB>> ]
+"13542" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2571</SUB>> ]
+"13545" [label = <(&lt;operator&gt;.fieldAccess,m.UnregisterNative)<SUB>2572</SUB>> ]
+"13558" [label = <(LOG,LOG(WARNING))<SUB>2578</SUB>> ]
+"13562" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2579</SUB>> ]
+"13472" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2562</SUB>> ]
+"13474" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2562</SUB>> ]
+"13525" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2569</SUB>> ]
+"13547" [label = <(FIELD_IDENTIFIER,UnregisterNative,UnregisterNative)<SUB>2572</SUB>> ]
+"13563" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2579</SUB>> ]
+"13566" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2579</SUB>> ]
+"13527" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2569</SUB>> ]
+"13456" [label = <(METHOD,UnregisterNatives)<SUB>2561</SUB>> ]
+"13571" [label = <(METHOD_RETURN,jint)<SUB>2561</SUB>> ]
+  "13460" -> "13466" 
+  "13460" -> "13480" 
+  "13480" -> "13488" 
+  "13482" -> "13502" 
+  "13499" -> "13514" 
+  "13514" -> "13527" 
+  "13518" -> "13542" 
+  "13569" -> "13571" 
+  "13483" -> "13494" 
+  "13490" -> "13482" 
+  "13500" -> "13499" 
+  "13520" -> "13518" 
+  "13551" -> "13558" 
+  "13551" -> "13569" 
+  "13484" -> "13483" 
+  "13491" -> "13490" 
+  "13501" -> "13507" 
+  "13505" -> "13500" 
+  "13521" -> "13520" 
+  "13555" -> "13569" 
+  "13465" -> "13472" 
+  "13465" -> "13480" 
+  "13486" -> "13484" 
+  "13492" -> "13497" 
+  "13495" -> "13491" 
+  "13502" -> "13501" 
+  "13506" -> "13505" 
+  "13522" -> "13529" 
+  "13529" -> "13521" 
+  "13539" -> "13542" 
+  "13539" -> "13547" 
+  "13539" -> "13551" 
+  "13556" -> "13555" 
+  "13466" -> "13465" 
+  "13470" -> "13477" 
+  "13477" -> "13571" 
+  "13488" -> "13486" 
+  "13494" -> "13492" 
   "13497" -> "13495" 
-  "13500" -> "13498" 
-  "13510" -> "13513" 
-  "13513" -> "13509" 
-  "13526" -> "13525" 
-  "13543" -> "13542" 
-  "13547" -> "13551" 
-  "13551" -> "13545" 
-  "13551" -> "13554" 
-  "13560" -> "13566" 
-  "13564" -> "13559" 
-  "13474" -> "13473" 
-  "13527" -> "13531" 
-  "13531" -> "13526" 
-  "13545" -> "13543" 
-  "13548" -> "13547" 
-  "13561" -> "13560" 
-  "13565" -> "13564" 
-  "13475" -> "13477" 
-  "13477" -> "13474" 
-  "13528" -> "13527" 
-  "13550" -> "13548" 
-  "13566" -> "13569" 
-  "13569" -> "13565" 
-  "13530" -> "13528" 
-  "13459" -> "13463" 
+  "13507" -> "13510" 
+  "13510" -> "13506" 
+  "13523" -> "13522" 
+  "13540" -> "13539" 
+  "13544" -> "13548" 
+  "13548" -> "13542" 
+  "13548" -> "13551" 
+  "13557" -> "13563" 
+  "13561" -> "13556" 
+  "13471" -> "13470" 
+  "13524" -> "13528" 
+  "13528" -> "13523" 
+  "13542" -> "13540" 
+  "13545" -> "13544" 
+  "13558" -> "13557" 
+  "13562" -> "13561" 
+  "13472" -> "13474" 
+  "13474" -> "13471" 
+  "13525" -> "13524" 
+  "13547" -> "13545" 
+  "13563" -> "13566" 
+  "13566" -> "13562" 
+  "13527" -> "13525" 
+  "13456" -> "13460" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/249-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/249-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/249-cfg.dot	2023-06-07 19:35:41.547383219 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/249-cfg.dot	2023-06-07 19:35:48.077382779 +0330
@@ -1,5 +1,5 @@
 digraph "MonitorEnter" {  
-"13576" [label = <(METHOD,MonitorEnter)<SUB>2586</SUB>> ]
-"13580" [label = <(METHOD_RETURN,jint)<SUB>2586</SUB>> ]
-  "13576" -> "13580" 
+"13573" [label = <(METHOD,MonitorEnter)<SUB>2584</SUB>> ]
+"13577" [label = <(METHOD_RETURN,jint)<SUB>2584</SUB>> ]
+  "13573" -> "13577" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/25-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/25-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/25-cfg.dot	2023-06-07 19:35:41.367383233 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/25-cfg.dot	2023-06-07 19:35:47.807382803 +0330
@@ -1,12 +1,12 @@
 digraph "JavaVmExtFromEnv" {  
-"915" [label = <(RETURN,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();)<SUB>519</SUB>> ]
-"916" [label = <(GetVm,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>519</SUB>> ]
-"917" [label = <(&lt;operator&gt;.indirectFieldAccess,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>519</SUB>> ]
-"918" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNIEnvExt*&gt;(env))<SUB>519</SUB>> ]
-"921" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>519</SUB>> ]
-"919" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>519</SUB>> ]
-"912" [label = <(METHOD,JavaVmExtFromEnv)<SUB>518</SUB>> ]
-"922" [label = <(METHOD_RETURN,JavaVMExt)<SUB>518</SUB>> ]
+"915" [label = <(RETURN,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();)<SUB>518</SUB>> ]
+"916" [label = <(GetVm,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>518</SUB>> ]
+"917" [label = <(&lt;operator&gt;.indirectFieldAccess,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>518</SUB>> ]
+"918" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNIEnvExt*&gt;(env))<SUB>518</SUB>> ]
+"921" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>518</SUB>> ]
+"919" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>518</SUB>> ]
+"912" [label = <(METHOD,JavaVmExtFromEnv)<SUB>517</SUB>> ]
+"922" [label = <(METHOD_RETURN,JavaVMExt)<SUB>517</SUB>> ]
   "915" -> "922" 
   "916" -> "915" 
   "917" -> "916" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/250-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/250-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/250-cfg.dot	2023-06-07 19:35:41.547383219 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/250-cfg.dot	2023-06-07 19:35:48.077382779 +0330
@@ -1,5 +1,5 @@
 digraph "MonitorExit" {  
-"13584" [label = <(METHOD,MonitorExit)<SUB>2600</SUB>> ]
-"13588" [label = <(METHOD_RETURN,jint)<SUB>2600</SUB>> ]
-  "13584" -> "13588" 
+"13581" [label = <(METHOD,MonitorExit)<SUB>2598</SUB>> ]
+"13585" [label = <(METHOD_RETURN,jint)<SUB>2598</SUB>> ]
+  "13581" -> "13585" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/251-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/251-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/251-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/251-cfg.dot	2023-06-07 19:35:48.077382779 +0330
@@ -1,56 +1,56 @@
 digraph "GetJavaVM" {  
-"13596" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2616</SUB>> ]
-"13616" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>2617</SUB>> ]
-"13640" [label = <(RETURN,return (*vm != nullptr) ? JNI_OK : JNI_ERR;,return (*vm != nullptr) ? JNI_OK : JNI_ERR;)<SUB>2623</SUB>> ]
-"13618" [label = <(Runtime::Current,Runtime::Current())<SUB>2617</SUB>> ]
-"13623" [label = <(&lt;operator&gt;.notEquals,runtime != nullptr)<SUB>2618</SUB>> ]
-"13641" [label = <(&lt;operator&gt;.conditional,(*vm != nullptr) ? JNI_OK : JNI_ERR)<SUB>2623</SUB>> ]
-"13619" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2617</SUB>> ]
-"13627" [label = <(&lt;operator&gt;.assignment,*vm = runtime-&gt;GetJavaVM())<SUB>2619</SUB>> ]
-"13642" [label = <(&lt;operator&gt;.notEquals,*vm != nullptr)<SUB>2623</SUB>> ]
-"13601" [label = <(UNLIKELY,UNLIKELY((vm) == nullptr))<SUB>2616</SUB>> ]
-"13621" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2617</SUB>> ]
-"13628" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2619</SUB>> ]
-"13630" [label = <(GetJavaVM,runtime-&gt;GetJavaVM())<SUB>2619</SUB>> ]
-"13636" [label = <(&lt;operator&gt;.assignment,*vm = nullptr)<SUB>2621</SUB>> ]
-"13643" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2623</SUB>> ]
-"13602" [label = <(&lt;operator&gt;.equals,(vm) == nullptr)<SUB>2616</SUB>> ]
-"13606" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;vm == null&quot;))<SUB>2616</SUB>> ]
-"13613" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2616</SUB>> ]
-"13631" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetJavaVM)<SUB>2619</SUB>> ]
-"13637" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2621</SUB>> ]
-"13607" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2616</SUB>> ]
-"13633" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>2619</SUB>> ]
-"13608" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2616</SUB>> ]
-"13610" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2616</SUB>> ]
-"13592" [label = <(METHOD,GetJavaVM)<SUB>2615</SUB>> ]
-"13648" [label = <(METHOD_RETURN,jint)<SUB>2615</SUB>> ]
-  "13596" -> "13602" 
-  "13596" -> "13621" 
-  "13616" -> "13623" 
-  "13640" -> "13648" 
+"13593" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2614</SUB>> ]
+"13613" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>2615</SUB>> ]
+"13637" [label = <(RETURN,return (*vm != nullptr) ? JNI_OK : JNI_ERR;,return (*vm != nullptr) ? JNI_OK : JNI_ERR;)<SUB>2621</SUB>> ]
+"13615" [label = <(Runtime::Current,Runtime::Current())<SUB>2615</SUB>> ]
+"13620" [label = <(&lt;operator&gt;.notEquals,runtime != nullptr)<SUB>2616</SUB>> ]
+"13638" [label = <(&lt;operator&gt;.conditional,(*vm != nullptr) ? JNI_OK : JNI_ERR)<SUB>2621</SUB>> ]
+"13616" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2615</SUB>> ]
+"13624" [label = <(&lt;operator&gt;.assignment,*vm = runtime-&gt;GetJavaVM())<SUB>2617</SUB>> ]
+"13639" [label = <(&lt;operator&gt;.notEquals,*vm != nullptr)<SUB>2621</SUB>> ]
+"13598" [label = <(UNLIKELY,UNLIKELY((vm) == nullptr))<SUB>2614</SUB>> ]
+"13618" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2615</SUB>> ]
+"13625" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2617</SUB>> ]
+"13627" [label = <(GetJavaVM,runtime-&gt;GetJavaVM())<SUB>2617</SUB>> ]
+"13633" [label = <(&lt;operator&gt;.assignment,*vm = nullptr)<SUB>2619</SUB>> ]
+"13640" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2621</SUB>> ]
+"13599" [label = <(&lt;operator&gt;.equals,(vm) == nullptr)<SUB>2614</SUB>> ]
+"13603" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;vm == null&quot;))<SUB>2614</SUB>> ]
+"13610" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2614</SUB>> ]
+"13628" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetJavaVM)<SUB>2617</SUB>> ]
+"13634" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2619</SUB>> ]
+"13604" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2614</SUB>> ]
+"13630" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>2617</SUB>> ]
+"13605" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2614</SUB>> ]
+"13607" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2614</SUB>> ]
+"13589" [label = <(METHOD,GetJavaVM)<SUB>2613</SUB>> ]
+"13645" [label = <(METHOD_RETURN,jint)<SUB>2613</SUB>> ]
+  "13593" -> "13599" 
+  "13593" -> "13618" 
+  "13613" -> "13620" 
+  "13637" -> "13645" 
+  "13615" -> "13613" 
+  "13620" -> "13625" 
+  "13620" -> "13634" 
+  "13638" -> "13637" 
+  "13616" -> "13615" 
+  "13624" -> "13640" 
+  "13639" -> "13638" 
+  "13598" -> "13605" 
+  "13598" -> "13618" 
   "13618" -> "13616" 
-  "13623" -> "13628" 
-  "13623" -> "13637" 
-  "13641" -> "13640" 
-  "13619" -> "13618" 
-  "13627" -> "13643" 
-  "13642" -> "13641" 
-  "13601" -> "13608" 
-  "13601" -> "13621" 
-  "13621" -> "13619" 
-  "13628" -> "13633" 
-  "13630" -> "13627" 
-  "13636" -> "13643" 
-  "13643" -> "13642" 
-  "13602" -> "13601" 
-  "13606" -> "13613" 
-  "13613" -> "13648" 
-  "13631" -> "13630" 
-  "13637" -> "13636" 
-  "13607" -> "13606" 
-  "13633" -> "13631" 
-  "13608" -> "13610" 
-  "13610" -> "13607" 
-  "13592" -> "13596" 
+  "13625" -> "13630" 
+  "13627" -> "13624" 
+  "13633" -> "13640" 
+  "13640" -> "13639" 
+  "13599" -> "13598" 
+  "13603" -> "13610" 
+  "13610" -> "13645" 
+  "13628" -> "13627" 
+  "13634" -> "13633" 
+  "13604" -> "13603" 
+  "13630" -> "13628" 
+  "13605" -> "13607" 
+  "13607" -> "13604" 
+  "13589" -> "13593" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/252-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/252-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/252-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/252-cfg.dot	2023-06-07 19:35:48.087382780 +0330
@@ -1,83 +1,83 @@
 digraph "NewDirectByteBuffer" {  
-"13690" [label = <(&lt;operator&gt;.assignment,address_arg = reinterpret_cast&lt;jlong&gt;(address))<SUB>2645</SUB>> ]
-"13696" [label = <(&lt;operator&gt;.assignment,capacity_arg = static_cast&lt;jint&gt;(capacity))<SUB>2646</SUB>> ]
-"13702" [label = <(&lt;operator&gt;.assignment,result = env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2648</SUB>> ]
-"13716" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;)<SUB>2651</SUB>> ]
-"13656" [label = <(&lt;operator&gt;.lessThan,capacity &lt; 0)<SUB>2627</SUB>> ]
-"13666" [label = <(&lt;operator&gt;.logicalAnd,address == nullptr &amp;&amp; capacity != 0)<SUB>2632</SUB>> ]
-"13680" [label = <(&lt;operator&gt;.greaterThan,capacity &gt; INT_MAX)<SUB>2639</SUB>> ]
-"13692" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;jlong&gt;(address))<SUB>2645</SUB>> ]
-"13698" [label = <(&lt;operator&gt;.cast,static_cast&lt;jint&gt;(capacity))<SUB>2646</SUB>> ]
-"13704" [label = <(NewObject,env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2648</SUB>> ]
-"13717" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result)<SUB>2651</SUB>> ]
-"13661" [label = <(UNKNOWN,),))<SUB>2628</SUB>> ]
-"13662" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);)<SUB>2628</SUB>> ]
-"13663" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2630</SUB>> ]
-"13667" [label = <(&lt;operator&gt;.equals,address == nullptr)<SUB>2632</SUB>> ]
-"13670" [label = <(&lt;operator&gt;.notEquals,capacity != 0)<SUB>2632</SUB>> ]
-"13675" [label = <(UNKNOWN,),))<SUB>2633</SUB>> ]
-"13676" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);)<SUB>2633</SUB>> ]
-"13677" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2635</SUB>> ]
-"13685" [label = <(UNKNOWN,),))<SUB>2640</SUB>> ]
-"13686" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);)<SUB>2640</SUB>> ]
-"13687" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2643</SUB>> ]
-"13693" [label = <(UNKNOWN,jlong,jlong)<SUB>2645</SUB>> ]
-"13699" [label = <(UNKNOWN,jint,jint)<SUB>2646</SUB>> ]
-"13705" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;NewObject)<SUB>2648</SUB>> ]
-"13708" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer)<SUB>2648</SUB>> ]
-"13711" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_init)<SUB>2649</SUB>> ]
-"13718" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>2651</SUB>> ]
-"13707" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2648</SUB>> ]
-"13710" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer,java_nio_DirectByteBuffer)<SUB>2648</SUB>> ]
-"13713" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_init,java_nio_DirectByteBuffer_init)<SUB>2649</SUB>> ]
-"13719" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>2651</SUB>> ]
-"13720" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>2651</SUB>> ]
-"13725" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>2651</SUB>> ]
-"13721" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>2651</SUB>> ]
-"13724" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>2651</SUB>> ]
-"13722" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>2651</SUB>> ]
-"13650" [label = <(METHOD,NewDirectByteBuffer)<SUB>2626</SUB>> ]
-"13728" [label = <(METHOD_RETURN,jobject)<SUB>2626</SUB>> ]
-  "13690" -> "13699" 
-  "13696" -> "13707" 
-  "13702" -> "13722" 
-  "13716" -> "13728" 
-  "13656" -> "13661" 
-  "13656" -> "13667" 
-  "13666" -> "13675" 
-  "13666" -> "13680" 
-  "13680" -> "13685" 
-  "13680" -> "13693" 
-  "13692" -> "13690" 
-  "13698" -> "13696" 
-  "13704" -> "13702" 
-  "13717" -> "13716" 
-  "13661" -> "13662" 
-  "13662" -> "13663" 
-  "13663" -> "13728" 
-  "13667" -> "13666" 
-  "13667" -> "13670" 
-  "13670" -> "13666" 
-  "13675" -> "13676" 
-  "13676" -> "13677" 
-  "13677" -> "13728" 
-  "13685" -> "13686" 
-  "13686" -> "13687" 
-  "13687" -> "13728" 
-  "13693" -> "13692" 
-  "13699" -> "13698" 
+"13687" [label = <(&lt;operator&gt;.assignment,address_arg = reinterpret_cast&lt;jlong&gt;(address))<SUB>2643</SUB>> ]
+"13693" [label = <(&lt;operator&gt;.assignment,capacity_arg = static_cast&lt;jint&gt;(capacity))<SUB>2644</SUB>> ]
+"13699" [label = <(&lt;operator&gt;.assignment,result = env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2646</SUB>> ]
+"13713" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;)<SUB>2649</SUB>> ]
+"13653" [label = <(&lt;operator&gt;.lessThan,capacity &lt; 0)<SUB>2625</SUB>> ]
+"13663" [label = <(&lt;operator&gt;.logicalAnd,address == nullptr &amp;&amp; capacity != 0)<SUB>2630</SUB>> ]
+"13677" [label = <(&lt;operator&gt;.greaterThan,capacity &gt; INT_MAX)<SUB>2637</SUB>> ]
+"13689" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;jlong&gt;(address))<SUB>2643</SUB>> ]
+"13695" [label = <(&lt;operator&gt;.cast,static_cast&lt;jint&gt;(capacity))<SUB>2644</SUB>> ]
+"13701" [label = <(NewObject,env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2646</SUB>> ]
+"13714" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result)<SUB>2649</SUB>> ]
+"13658" [label = <(UNKNOWN,),))<SUB>2626</SUB>> ]
+"13659" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);)<SUB>2626</SUB>> ]
+"13660" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2628</SUB>> ]
+"13664" [label = <(&lt;operator&gt;.equals,address == nullptr)<SUB>2630</SUB>> ]
+"13667" [label = <(&lt;operator&gt;.notEquals,capacity != 0)<SUB>2630</SUB>> ]
+"13672" [label = <(UNKNOWN,),))<SUB>2631</SUB>> ]
+"13673" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);)<SUB>2631</SUB>> ]
+"13674" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2633</SUB>> ]
+"13682" [label = <(UNKNOWN,),))<SUB>2638</SUB>> ]
+"13683" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);)<SUB>2638</SUB>> ]
+"13684" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2641</SUB>> ]
+"13690" [label = <(UNKNOWN,jlong,jlong)<SUB>2643</SUB>> ]
+"13696" [label = <(UNKNOWN,jint,jint)<SUB>2644</SUB>> ]
+"13702" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;NewObject)<SUB>2646</SUB>> ]
+"13705" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer)<SUB>2646</SUB>> ]
+"13708" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_init)<SUB>2647</SUB>> ]
+"13715" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>2649</SUB>> ]
+"13704" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2646</SUB>> ]
+"13707" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer,java_nio_DirectByteBuffer)<SUB>2646</SUB>> ]
+"13710" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_init,java_nio_DirectByteBuffer_init)<SUB>2647</SUB>> ]
+"13716" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>2649</SUB>> ]
+"13717" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>2649</SUB>> ]
+"13722" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>2649</SUB>> ]
+"13718" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>2649</SUB>> ]
+"13721" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>2649</SUB>> ]
+"13719" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>2649</SUB>> ]
+"13647" [label = <(METHOD,NewDirectByteBuffer)<SUB>2624</SUB>> ]
+"13725" [label = <(METHOD_RETURN,jobject)<SUB>2624</SUB>> ]
+  "13687" -> "13696" 
+  "13693" -> "13704" 
+  "13699" -> "13719" 
+  "13713" -> "13725" 
+  "13653" -> "13658" 
+  "13653" -> "13664" 
+  "13663" -> "13672" 
+  "13663" -> "13677" 
+  "13677" -> "13682" 
+  "13677" -> "13690" 
+  "13689" -> "13687" 
+  "13695" -> "13693" 
+  "13701" -> "13699" 
+  "13714" -> "13713" 
+  "13658" -> "13659" 
+  "13659" -> "13660" 
+  "13660" -> "13725" 
+  "13664" -> "13663" 
+  "13664" -> "13667" 
+  "13667" -> "13663" 
+  "13672" -> "13673" 
+  "13673" -> "13674" 
+  "13674" -> "13725" 
+  "13682" -> "13683" 
+  "13683" -> "13684" 
+  "13684" -> "13725" 
+  "13690" -> "13689" 
+  "13696" -> "13695" 
+  "13702" -> "13707" 
   "13705" -> "13710" 
-  "13708" -> "13713" 
-  "13711" -> "13704" 
-  "13718" -> "13717" 
+  "13708" -> "13701" 
+  "13715" -> "13714" 
+  "13704" -> "13702" 
   "13707" -> "13705" 
   "13710" -> "13708" 
-  "13713" -> "13711" 
+  "13716" -> "13715" 
+  "13717" -> "13722" 
+  "13722" -> "13716" 
+  "13718" -> "13721" 
+  "13721" -> "13717" 
   "13719" -> "13718" 
-  "13720" -> "13725" 
-  "13725" -> "13719" 
-  "13721" -> "13724" 
-  "13724" -> "13720" 
-  "13722" -> "13721" 
-  "13650" -> "13656" 
+  "13647" -> "13653" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/253-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/253-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/253-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/253-cfg.dot	2023-06-07 19:35:48.087382780 +0330
@@ -1,21 +1,21 @@
 digraph "GetDirectBufferAddress" {  
-"13734" [label = <(RETURN,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));)<SUB>2655</SUB>> ]
-"13735" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)))<SUB>2655</SUB>> ]
-"13736" [label = <(UNKNOWN,void*,void*)<SUB>2655</SUB>> ]
-"13737" [label = <(GetLongField,env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress))<SUB>2655</SUB>> ]
-"13738" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetLongField)<SUB>2655</SUB>> ]
-"13742" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2656</SUB>> ]
-"13740" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2655</SUB>> ]
-"13744" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_effectiveDirectAddress,java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2656</SUB>> ]
-"13730" [label = <(METHOD,GetDirectBufferAddress)<SUB>2654</SUB>> ]
-"13745" [label = <(METHOD_RETURN,void*)<SUB>2654</SUB>> ]
-  "13734" -> "13745" 
-  "13735" -> "13734" 
-  "13736" -> "13740" 
+"13731" [label = <(RETURN,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));)<SUB>2653</SUB>> ]
+"13732" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)))<SUB>2653</SUB>> ]
+"13733" [label = <(UNKNOWN,void*,void*)<SUB>2653</SUB>> ]
+"13734" [label = <(GetLongField,env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress))<SUB>2653</SUB>> ]
+"13735" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetLongField)<SUB>2653</SUB>> ]
+"13739" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2654</SUB>> ]
+"13737" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2653</SUB>> ]
+"13741" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_effectiveDirectAddress,java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2654</SUB>> ]
+"13727" [label = <(METHOD,GetDirectBufferAddress)<SUB>2652</SUB>> ]
+"13742" [label = <(METHOD_RETURN,void*)<SUB>2652</SUB>> ]
+  "13731" -> "13742" 
+  "13732" -> "13731" 
+  "13733" -> "13737" 
+  "13734" -> "13732" 
+  "13735" -> "13741" 
+  "13739" -> "13734" 
   "13737" -> "13735" 
-  "13738" -> "13744" 
-  "13742" -> "13737" 
-  "13740" -> "13738" 
-  "13744" -> "13742" 
-  "13730" -> "13736" 
+  "13741" -> "13739" 
+  "13727" -> "13733" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/254-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/254-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/254-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/254-cfg.dot	2023-06-07 19:35:48.087382780 +0330
@@ -1,21 +1,21 @@
 digraph "GetDirectBufferCapacity" {  
-"13751" [label = <(RETURN,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));)<SUB>2660</SUB>> ]
-"13752" [label = <(&lt;operator&gt;.cast,static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity)))<SUB>2660</SUB>> ]
-"13753" [label = <(UNKNOWN,jlong,jlong)<SUB>2660</SUB>> ]
-"13754" [label = <(GetIntField,env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity))<SUB>2660</SUB>> ]
-"13755" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetIntField)<SUB>2660</SUB>> ]
-"13759" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_capacity)<SUB>2661</SUB>> ]
-"13757" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2660</SUB>> ]
-"13761" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_capacity,java_nio_DirectByteBuffer_capacity)<SUB>2661</SUB>> ]
-"13747" [label = <(METHOD,GetDirectBufferCapacity)<SUB>2659</SUB>> ]
-"13762" [label = <(METHOD_RETURN,jlong)<SUB>2659</SUB>> ]
-  "13751" -> "13762" 
-  "13752" -> "13751" 
-  "13753" -> "13757" 
+"13748" [label = <(RETURN,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));)<SUB>2658</SUB>> ]
+"13749" [label = <(&lt;operator&gt;.cast,static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity)))<SUB>2658</SUB>> ]
+"13750" [label = <(UNKNOWN,jlong,jlong)<SUB>2658</SUB>> ]
+"13751" [label = <(GetIntField,env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity))<SUB>2658</SUB>> ]
+"13752" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetIntField)<SUB>2658</SUB>> ]
+"13756" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_capacity)<SUB>2659</SUB>> ]
+"13754" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2658</SUB>> ]
+"13758" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_capacity,java_nio_DirectByteBuffer_capacity)<SUB>2659</SUB>> ]
+"13744" [label = <(METHOD,GetDirectBufferCapacity)<SUB>2657</SUB>> ]
+"13759" [label = <(METHOD_RETURN,jlong)<SUB>2657</SUB>> ]
+  "13748" -> "13759" 
+  "13749" -> "13748" 
+  "13750" -> "13754" 
+  "13751" -> "13749" 
+  "13752" -> "13758" 
+  "13756" -> "13751" 
   "13754" -> "13752" 
-  "13755" -> "13761" 
-  "13759" -> "13754" 
-  "13757" -> "13755" 
-  "13761" -> "13759" 
-  "13747" -> "13753" 
+  "13758" -> "13756" 
+  "13744" -> "13750" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/255-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/255-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/255-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/255-cfg.dot	2023-06-07 19:35:48.087382780 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureLocalCapacityInternal" {  
-"13765" [label = <(METHOD,EnsureLocalCapacityInternal)<SUB>2688</SUB>> ]
-"13770" [label = <(METHOD_RETURN,jint)<SUB>2688</SUB>> ]
-  "13765" -> "13770" 
+"13762" [label = <(METHOD,EnsureLocalCapacityInternal)<SUB>2686</SUB>> ]
+"13767" [label = <(METHOD_RETURN,jint)<SUB>2686</SUB>> ]
+  "13762" -> "13767" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/256-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/256-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/256-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/256-cfg.dot	2023-06-07 19:35:48.087382780 +0330
@@ -1,50 +1,50 @@
 digraph "NewPrimitiveArray" {  
-"13783" [label = <(soa,soa(env))<SUB>2707</SUB>> ]
-"13804" [label = <(&lt;operator&gt;.assignment,result = ArtT::Alloc(soa.Self(), length))<SUB>2712</SUB>> ]
-"13815" [label = <(RETURN,return soa.AddLocalReference&lt;JniT&gt;(result);,return soa.AddLocalReference&lt;JniT&gt;(result);)<SUB>2713</SUB>> ]
-"13786" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2708</SUB>> ]
-"13806" [label = <(ArtT::Alloc,ArtT::Alloc(soa.Self(), length))<SUB>2712</SUB>> ]
-"13816" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;JniT&gt;(result))<SUB>2713</SUB>> ]
-"13787" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2708</SUB>> ]
-"13791" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewPrimitiveArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2709</SUB>> ]
-"13801" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2710</SUB>> ]
-"13807" [label = <(&lt;operator&gt;.fieldAccess,ArtT::Alloc)<SUB>2712</SUB>> ]
-"13810" [label = <(Self,soa.Self())<SUB>2712</SUB>> ]
-"13817" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;JniT)<SUB>2713</SUB>> ]
-"13792" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2709</SUB>> ]
-"13809" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2712</SUB>> ]
-"13811" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2712</SUB>> ]
-"13818" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2713</SUB>> ]
-"13793" [label = <(Vm,soa.Vm())<SUB>2709</SUB>> ]
-"13797" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2709</SUB>> ]
-"13813" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2712</SUB>> ]
-"13820" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2713</SUB>> ]
-"13794" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2709</SUB>> ]
-"13796" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2709</SUB>> ]
-"13778" [label = <(METHOD,NewPrimitiveArray)<SUB>2706</SUB>> ]
-"13823" [label = <(METHOD_RETURN,JniT)<SUB>2706</SUB>> ]
-  "13783" -> "13787" 
-  "13804" -> "13820" 
-  "13815" -> "13823" 
-  "13786" -> "13796" 
-  "13786" -> "13809" 
+"13780" [label = <(soa,soa(env))<SUB>2705</SUB>> ]
+"13801" [label = <(&lt;operator&gt;.assignment,result = ArtT::Alloc(soa.Self(), length))<SUB>2710</SUB>> ]
+"13812" [label = <(RETURN,return soa.AddLocalReference&lt;JniT&gt;(result);,return soa.AddLocalReference&lt;JniT&gt;(result);)<SUB>2711</SUB>> ]
+"13783" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2706</SUB>> ]
+"13803" [label = <(ArtT::Alloc,ArtT::Alloc(soa.Self(), length))<SUB>2710</SUB>> ]
+"13813" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;JniT&gt;(result))<SUB>2711</SUB>> ]
+"13784" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2706</SUB>> ]
+"13788" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewPrimitiveArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2707</SUB>> ]
+"13798" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2708</SUB>> ]
+"13804" [label = <(&lt;operator&gt;.fieldAccess,ArtT::Alloc)<SUB>2710</SUB>> ]
+"13807" [label = <(Self,soa.Self())<SUB>2710</SUB>> ]
+"13814" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;JniT)<SUB>2711</SUB>> ]
+"13789" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2707</SUB>> ]
+"13806" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2710</SUB>> ]
+"13808" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2710</SUB>> ]
+"13815" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2711</SUB>> ]
+"13790" [label = <(Vm,soa.Vm())<SUB>2707</SUB>> ]
+"13794" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2707</SUB>> ]
+"13810" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2710</SUB>> ]
+"13817" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2711</SUB>> ]
+"13791" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2707</SUB>> ]
+"13793" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2707</SUB>> ]
+"13775" [label = <(METHOD,NewPrimitiveArray)<SUB>2704</SUB>> ]
+"13820" [label = <(METHOD_RETURN,JniT)<SUB>2704</SUB>> ]
+  "13780" -> "13784" 
+  "13801" -> "13817" 
+  "13812" -> "13820" 
+  "13783" -> "13793" 
+  "13783" -> "13806" 
+  "13803" -> "13801" 
+  "13813" -> "13812" 
+  "13784" -> "13783" 
+  "13788" -> "13798" 
+  "13798" -> "13820" 
+  "13804" -> "13810" 
+  "13807" -> "13803" 
+  "13814" -> "13813" 
+  "13789" -> "13788" 
   "13806" -> "13804" 
-  "13816" -> "13815" 
-  "13787" -> "13786" 
-  "13791" -> "13801" 
-  "13801" -> "13823" 
-  "13807" -> "13813" 
-  "13810" -> "13806" 
-  "13817" -> "13816" 
-  "13792" -> "13791" 
-  "13809" -> "13807" 
-  "13811" -> "13810" 
-  "13818" -> "13817" 
-  "13793" -> "13797" 
-  "13797" -> "13792" 
-  "13813" -> "13811" 
-  "13820" -> "13818" 
-  "13794" -> "13793" 
-  "13796" -> "13794" 
-  "13778" -> "13783" 
+  "13808" -> "13807" 
+  "13815" -> "13814" 
+  "13790" -> "13794" 
+  "13794" -> "13789" 
+  "13810" -> "13808" 
+  "13817" -> "13815" 
+  "13791" -> "13790" 
+  "13793" -> "13791" 
+  "13775" -> "13780" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/257-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/257-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/257-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/257-cfg.dot	2023-06-07 19:35:48.087382780 +0330
@@ -1,5 +1,5 @@
 digraph "DecodeAndCheckArrayType" {  
-"13825" [label = <(METHOD,DecodeAndCheckArrayType)<SUB>2717</SUB>> ]
-"13831" [label = <(METHOD_RETURN,ObjPtr&lt;ArtArrayT&gt;)<SUB>2717</SUB>> ]
-  "13825" -> "13831" 
+"13822" [label = <(METHOD,DecodeAndCheckArrayType)<SUB>2715</SUB>> ]
+"13828" [label = <(METHOD_RETURN,ObjPtr&lt;ArtArrayT&gt;)<SUB>2715</SUB>> ]
+  "13822" -> "13828" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/258-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/258-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/258-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/258-cfg.dot	2023-06-07 19:35:48.087382780 +0330
@@ -1,113 +1,113 @@
 digraph "GetPrimitiveArray" {  
-"13848" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2739</SUB>> ]
-"13867" [label = <(soa,soa(env))<SUB>2740</SUB>> ]
-"13870" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetArrayElements&quot;, &quot;get&quot;))<SUB>2741</SUB>> ]
-"13872" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetArrayElements&quot;, &quot;get&quot;))<SUB>2741</SUB>> ]
-"13878" [label = <(UNLIKELY,UNLIKELY(array == nullptr))<SUB>2743</SUB>> ]
-"13886" [label = <(IsMovableObject,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject(array))<SUB>2747</SUB>> ]
-"13879" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2743</SUB>> ]
-"13883" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2744</SUB>> ]
-"13887" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject)<SUB>2747</SUB>> ]
-"13908" [label = <(&lt;operator&gt;.assignment,component_size = sizeof(ElementT))<SUB>2751</SUB>> ]
-"13913" [label = <(&lt;operator&gt;.assignment,size = array-&gt;GetLength() * component_size)<SUB>2752</SUB>> ]
-"13922" [label = <(&lt;operator&gt;.assignment,* data = new uint64_t[RoundUp(size, 8) / 8])<SUB>2753</SUB>> ]
-"13926" [label = <(memcpy,memcpy(data, array-&gt;GetData(), size))<SUB>2754</SUB>> ]
-"13933" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(data);,return reinterpret_cast&lt;ElementT*&gt;(data);)<SUB>2755</SUB>> ]
-"13852" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2739</SUB>> ]
-"13888" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2747</SUB>> ]
-"13895" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2747</SUB>> ]
-"13899" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2748</SUB>> ]
-"13910" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2751</SUB>> ]
-"13915" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2752</SUB>> ]
-"13924" [label = <(&lt;operator&gt;.new,new uint64_t[RoundUp(size, 8) / 8])<SUB>2753</SUB>> ]
-"13928" [label = <(GetData,array-&gt;GetData())<SUB>2754</SUB>> ]
-"13934" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(data))<SUB>2755</SUB>> ]
-"13948" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());)<SUB>2760</SUB>> ]
-"13853" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2739</SUB>> ]
-"13857" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2739</SUB>> ]
-"13864" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2739</SUB>> ]
-"13889" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2747</SUB>> ]
-"13903" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2749</SUB>> ]
-"13916" [label = <(GetLength,array-&gt;GetLength())<SUB>2752</SUB>> ]
-"13929" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2754</SUB>> ]
-"13935" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2755</SUB>> ]
-"13940" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2757</SUB>> ]
-"13949" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData()))<SUB>2760</SUB>> ]
-"13858" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2739</SUB>> ]
-"13890" [label = <(Runtime::Current,Runtime::Current())<SUB>2747</SUB>> ]
-"13894" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2747</SUB>> ]
-"13904" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2749</SUB>> ]
-"13917" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2752</SUB>> ]
-"13931" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2754</SUB>> ]
-"13944" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2758</SUB>> ]
-"13950" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2760</SUB>> ]
-"13951" [label = <(GetData,array-&gt;GetData())<SUB>2760</SUB>> ]
-"13859" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2739</SUB>> ]
-"13861" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2739</SUB>> ]
-"13891" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2747</SUB>> ]
-"13919" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2752</SUB>> ]
-"13945" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2758</SUB>> ]
-"13952" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2760</SUB>> ]
-"13893" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2747</SUB>> ]
-"13954" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2760</SUB>> ]
-"13843" [label = <(METHOD,GetPrimitiveArray)<SUB>2738</SUB>> ]
-"13955" [label = <(METHOD_RETURN,ElementT)<SUB>2738</SUB>> ]
-  "13848" -> "13853" 
-  "13848" -> "13867" 
-  "13867" -> "13872" 
-  "13870" -> "13879" 
-  "13872" -> "13870" 
-  "13878" -> "13883" 
-  "13878" -> "13893" 
-  "13886" -> "13899" 
-  "13886" -> "13940" 
-  "13879" -> "13878" 
-  "13883" -> "13955" 
-  "13887" -> "13886" 
-  "13908" -> "13919" 
-  "13913" -> "13924" 
-  "13922" -> "13931" 
-  "13926" -> "13935" 
-  "13933" -> "13955" 
-  "13852" -> "13859" 
-  "13852" -> "13867" 
-  "13888" -> "13895" 
-  "13895" -> "13887" 
-  "13899" -> "13904" 
-  "13899" -> "13910" 
-  "13910" -> "13908" 
-  "13915" -> "13913" 
-  "13924" -> "13922" 
+"13845" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2737</SUB>> ]
+"13864" [label = <(soa,soa(env))<SUB>2738</SUB>> ]
+"13867" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetArrayElements&quot;, &quot;get&quot;))<SUB>2739</SUB>> ]
+"13869" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetArrayElements&quot;, &quot;get&quot;))<SUB>2739</SUB>> ]
+"13875" [label = <(UNLIKELY,UNLIKELY(array == nullptr))<SUB>2741</SUB>> ]
+"13883" [label = <(IsMovableObject,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject(array))<SUB>2745</SUB>> ]
+"13876" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2741</SUB>> ]
+"13880" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2742</SUB>> ]
+"13884" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject)<SUB>2745</SUB>> ]
+"13905" [label = <(&lt;operator&gt;.assignment,component_size = sizeof(ElementT))<SUB>2749</SUB>> ]
+"13910" [label = <(&lt;operator&gt;.assignment,size = array-&gt;GetLength() * component_size)<SUB>2750</SUB>> ]
+"13919" [label = <(&lt;operator&gt;.assignment,* data = new uint64_t[RoundUp(size, 8) / 8])<SUB>2751</SUB>> ]
+"13923" [label = <(memcpy,memcpy(data, array-&gt;GetData(), size))<SUB>2752</SUB>> ]
+"13930" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(data);,return reinterpret_cast&lt;ElementT*&gt;(data);)<SUB>2753</SUB>> ]
+"13849" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2737</SUB>> ]
+"13885" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2745</SUB>> ]
+"13892" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2745</SUB>> ]
+"13896" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2746</SUB>> ]
+"13907" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2749</SUB>> ]
+"13912" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2750</SUB>> ]
+"13921" [label = <(&lt;operator&gt;.new,new uint64_t[RoundUp(size, 8) / 8])<SUB>2751</SUB>> ]
+"13925" [label = <(GetData,array-&gt;GetData())<SUB>2752</SUB>> ]
+"13931" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(data))<SUB>2753</SUB>> ]
+"13945" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());)<SUB>2758</SUB>> ]
+"13850" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2737</SUB>> ]
+"13854" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2737</SUB>> ]
+"13861" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2737</SUB>> ]
+"13886" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2745</SUB>> ]
+"13900" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2747</SUB>> ]
+"13913" [label = <(GetLength,array-&gt;GetLength())<SUB>2750</SUB>> ]
+"13926" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2752</SUB>> ]
+"13932" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2753</SUB>> ]
+"13937" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2755</SUB>> ]
+"13946" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData()))<SUB>2758</SUB>> ]
+"13855" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2737</SUB>> ]
+"13887" [label = <(Runtime::Current,Runtime::Current())<SUB>2745</SUB>> ]
+"13891" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2745</SUB>> ]
+"13901" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2747</SUB>> ]
+"13914" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2750</SUB>> ]
+"13928" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2752</SUB>> ]
+"13941" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2756</SUB>> ]
+"13947" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2758</SUB>> ]
+"13948" [label = <(GetData,array-&gt;GetData())<SUB>2758</SUB>> ]
+"13856" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2737</SUB>> ]
+"13858" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2737</SUB>> ]
+"13888" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2745</SUB>> ]
+"13916" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2750</SUB>> ]
+"13942" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2756</SUB>> ]
+"13949" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2758</SUB>> ]
+"13890" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2745</SUB>> ]
+"13951" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2758</SUB>> ]
+"13840" [label = <(METHOD,GetPrimitiveArray)<SUB>2736</SUB>> ]
+"13952" [label = <(METHOD_RETURN,ElementT)<SUB>2736</SUB>> ]
+  "13845" -> "13850" 
+  "13845" -> "13864" 
+  "13864" -> "13869" 
+  "13867" -> "13876" 
+  "13869" -> "13867" 
+  "13875" -> "13880" 
+  "13875" -> "13890" 
+  "13883" -> "13896" 
+  "13883" -> "13937" 
+  "13876" -> "13875" 
+  "13880" -> "13952" 
+  "13884" -> "13883" 
+  "13905" -> "13916" 
+  "13910" -> "13921" 
+  "13919" -> "13928" 
+  "13923" -> "13932" 
+  "13930" -> "13952" 
+  "13849" -> "13856" 
+  "13849" -> "13864" 
+  "13885" -> "13892" 
+  "13892" -> "13884" 
+  "13896" -> "13901" 
+  "13896" -> "13907" 
+  "13907" -> "13905" 
+  "13912" -> "13910" 
+  "13921" -> "13919" 
+  "13925" -> "13923" 
+  "13931" -> "13930" 
+  "13945" -> "13952" 
+  "13850" -> "13849" 
+  "13854" -> "13861" 
+  "13861" -> "13952" 
+  "13886" -> "13885" 
+  "13900" -> "13907" 
+  "13913" -> "13912" 
+  "13926" -> "13925" 
+  "13932" -> "13931" 
+  "13937" -> "13947" 
+  "13937" -> "13942" 
+  "13946" -> "13945" 
+  "13855" -> "13854" 
+  "13887" -> "13891" 
+  "13891" -> "13886" 
+  "13901" -> "13900" 
+  "13914" -> "13913" 
   "13928" -> "13926" 
-  "13934" -> "13933" 
-  "13948" -> "13955" 
-  "13853" -> "13852" 
-  "13857" -> "13864" 
-  "13864" -> "13955" 
-  "13889" -> "13888" 
-  "13903" -> "13910" 
-  "13916" -> "13915" 
-  "13929" -> "13928" 
-  "13935" -> "13934" 
-  "13940" -> "13950" 
-  "13940" -> "13945" 
+  "13941" -> "13947" 
+  "13947" -> "13951" 
+  "13948" -> "13946" 
+  "13856" -> "13858" 
+  "13858" -> "13855" 
+  "13888" -> "13887" 
+  "13916" -> "13914" 
+  "13942" -> "13941" 
   "13949" -> "13948" 
-  "13858" -> "13857" 
-  "13890" -> "13894" 
-  "13894" -> "13889" 
-  "13904" -> "13903" 
-  "13917" -> "13916" 
-  "13931" -> "13929" 
-  "13944" -> "13950" 
-  "13950" -> "13954" 
+  "13890" -> "13888" 
   "13951" -> "13949" 
-  "13859" -> "13861" 
-  "13861" -> "13858" 
-  "13891" -> "13890" 
-  "13919" -> "13917" 
-  "13945" -> "13944" 
-  "13952" -> "13951" 
-  "13893" -> "13891" 
-  "13954" -> "13952" 
-  "13843" -> "13848" 
+  "13840" -> "13845" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/259-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/259-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/259-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/259-cfg.dot	2023-06-07 19:35:48.087382780 +0330
@@ -1,38 +1,38 @@
 digraph "ReleasePrimitiveArray" {  
-"13963" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2766</SUB>> ]
-"13981" [label = <(soa,soa(env))<SUB>2767</SUB>> ]
-"13984" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;ReleaseArrayElements&quot;, &quot;release&quot;))<SUB>2768</SUB>> ]
-"13997" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, sizeof(ElementT), elements, mode))<SUB>2773</SUB>> ]
-"13986" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;ReleaseArrayElements&quot;, &quot;release&quot;))<SUB>2768</SUB>> ]
-"13992" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2770</SUB>> ]
-"14000" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2773</SUB>> ]
-"13996" [label = <(RETURN,return;,return;)<SUB>2771</SUB>> ]
-"13967" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2766</SUB>> ]
-"13968" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2766</SUB>> ]
-"13972" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2766</SUB>> ]
-"13979" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2766</SUB>> ]
-"13973" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2766</SUB>> ]
-"13974" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2766</SUB>> ]
-"13976" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2766</SUB>> ]
-"13957" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2765</SUB>> ]
-"14004" [label = <(METHOD_RETURN,void)<SUB>2765</SUB>> ]
-  "13963" -> "13968" 
-  "13963" -> "13981" 
-  "13981" -> "13986" 
-  "13984" -> "13992" 
-  "13997" -> "14004" 
-  "13986" -> "13984" 
-  "13992" -> "13996" 
-  "13992" -> "14000" 
-  "14000" -> "13997" 
-  "13996" -> "14004" 
-  "13967" -> "13974" 
-  "13967" -> "13981" 
-  "13968" -> "13967" 
-  "13972" -> "13979" 
-  "13979" -> "14004" 
-  "13973" -> "13972" 
-  "13974" -> "13976" 
-  "13976" -> "13973" 
-  "13957" -> "13963" 
+"13960" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2764</SUB>> ]
+"13978" [label = <(soa,soa(env))<SUB>2765</SUB>> ]
+"13981" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;ReleaseArrayElements&quot;, &quot;release&quot;))<SUB>2766</SUB>> ]
+"13994" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, sizeof(ElementT), elements, mode))<SUB>2771</SUB>> ]
+"13983" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;ReleaseArrayElements&quot;, &quot;release&quot;))<SUB>2766</SUB>> ]
+"13989" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2768</SUB>> ]
+"13997" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2771</SUB>> ]
+"13993" [label = <(RETURN,return;,return;)<SUB>2769</SUB>> ]
+"13964" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2764</SUB>> ]
+"13965" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2764</SUB>> ]
+"13969" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2764</SUB>> ]
+"13976" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2764</SUB>> ]
+"13970" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2764</SUB>> ]
+"13971" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2764</SUB>> ]
+"13973" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2764</SUB>> ]
+"13954" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2763</SUB>> ]
+"14001" [label = <(METHOD_RETURN,void)<SUB>2763</SUB>> ]
+  "13960" -> "13965" 
+  "13960" -> "13978" 
+  "13978" -> "13983" 
+  "13981" -> "13989" 
+  "13994" -> "14001" 
+  "13983" -> "13981" 
+  "13989" -> "13993" 
+  "13989" -> "13997" 
+  "13997" -> "13994" 
+  "13993" -> "14001" 
+  "13964" -> "13971" 
+  "13964" -> "13978" 
+  "13965" -> "13964" 
+  "13969" -> "13976" 
+  "13976" -> "14001" 
+  "13970" -> "13969" 
+  "13971" -> "13973" 
+  "13973" -> "13970" 
+  "13954" -> "13960" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/26-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/26-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/26-cfg.dot	2023-06-07 19:35:41.367383233 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/26-cfg.dot	2023-06-07 19:35:47.807382803 +0330
@@ -1,5 +1,5 @@
 digraph "FindMethod" {  
-"924" [label = <(METHOD,FindMethod)<SUB>547</SUB>> ]
-"929" [label = <(METHOD_RETURN,ArtMethod*)<SUB>547</SUB>> ]
+"924" [label = <(METHOD,FindMethod)<SUB>546</SUB>> ]
+"929" [label = <(METHOD_RETURN,ArtMethod*)<SUB>546</SUB>> ]
   "924" -> "929" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/260-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/260-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/260-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/260-cfg.dot	2023-06-07 19:35:48.087382780 +0330
@@ -1,5 +1,5 @@
 digraph "ReleasePrimitiveArray" {  
-"14006" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2776</SUB>> ]
-"14013" [label = <(METHOD_RETURN,void)<SUB>2776</SUB>> ]
-  "14006" -> "14013" 
+"14003" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2774</SUB>> ]
+"14010" [label = <(METHOD_RETURN,void)<SUB>2774</SUB>> ]
+  "14003" -> "14010" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/261-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/261-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/261-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/261-cfg.dot	2023-06-07 19:35:48.087382780 +0330
@@ -1,94 +1,94 @@
 digraph "GetPrimitiveArrayRegion" {  
-"14052" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2821</SUB>> ]
-"14070" [label = <(soa,soa(env))<SUB>2822</SUB>> ]
-"14073" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetPrimitiveArrayRegion&quot;, &quot;get region of&quot;))<SUB>2823</SUB>> ]
-"14075" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetPrimitiveArrayRegion&quot;, &quot;get region of&quot;))<SUB>2823</SUB>> ]
-"14081" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2825</SUB>> ]
-"14056" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2821</SUB>> ]
-"14086" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2826</SUB>> ]
-"14057" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2821</SUB>> ]
-"14061" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2821</SUB>> ]
-"14068" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2821</SUB>> ]
-"14087" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2826</SUB>> ]
-"14094" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2826</SUB>> ]
-"14103" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;src&quot;))<SUB>2827</SUB>> ]
-"14062" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2821</SUB>> ]
-"14088" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2826</SUB>> ]
-"14091" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2826</SUB>> ]
-"14096" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2826</SUB>> ]
-"14111" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2829</SUB>> ]
-"14134" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2830</SUB>> ]
-"14140" [label = <(memcpy,memcpy(buf, data + start, length * sizeof(ElementT)))<SUB>2831</SUB>> ]
-"14063" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2821</SUB>> ]
-"14065" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2821</SUB>> ]
-"14097" [label = <(GetLength,array-&gt;GetLength())<SUB>2826</SUB>> ]
-"14136" [label = <(GetData,array-&gt;GetData())<SUB>2830</SUB>> ]
-"14142" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2831</SUB>> ]
-"14145" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2831</SUB>> ]
-"14098" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2826</SUB>> ]
-"14137" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2830</SUB>> ]
-"14147" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2831</SUB>> ]
-"14100" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2826</SUB>> ]
-"14116" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2829</SUB>> ]
-"14139" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2830</SUB>> ]
-"14117" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2829</SUB>> ]
-"14125" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2829</SUB>> ]
-"14132" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2829</SUB>> ]
-"14118" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2829</SUB>> ]
-"14121" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2829</SUB>> ]
-"14126" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2829</SUB>> ]
-"14127" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2829</SUB>> ]
-"14129" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2829</SUB>> ]
-"14045" [label = <(METHOD,GetPrimitiveArrayRegion)<SUB>2819</SUB>> ]
-"14149" [label = <(METHOD_RETURN,void)<SUB>2819</SUB>> ]
-  "14052" -> "14057" 
-  "14052" -> "14070" 
-  "14070" -> "14075" 
-  "14073" -> "14081" 
-  "14075" -> "14073" 
-  "14081" -> "14149" 
-  "14081" -> "14088" 
-  "14056" -> "14063" 
-  "14056" -> "14070" 
-  "14086" -> "14103" 
-  "14086" -> "14111" 
-  "14057" -> "14056" 
-  "14061" -> "14068" 
-  "14068" -> "14149" 
-  "14087" -> "14086" 
-  "14087" -> "14100" 
-  "14094" -> "14086" 
-  "14103" -> "14149" 
-  "14062" -> "14061" 
-  "14088" -> "14087" 
-  "14088" -> "14091" 
-  "14091" -> "14087" 
-  "14096" -> "14094" 
-  "14111" -> "14118" 
-  "14111" -> "14139" 
-  "14134" -> "14142" 
-  "14140" -> "14149" 
-  "14063" -> "14065" 
-  "14065" -> "14062" 
-  "14097" -> "14096" 
+"14049" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2819</SUB>> ]
+"14067" [label = <(soa,soa(env))<SUB>2820</SUB>> ]
+"14070" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetPrimitiveArrayRegion&quot;, &quot;get region of&quot;))<SUB>2821</SUB>> ]
+"14072" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetPrimitiveArrayRegion&quot;, &quot;get region of&quot;))<SUB>2821</SUB>> ]
+"14078" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2823</SUB>> ]
+"14053" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2819</SUB>> ]
+"14083" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2824</SUB>> ]
+"14054" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2819</SUB>> ]
+"14058" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2819</SUB>> ]
+"14065" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2819</SUB>> ]
+"14084" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2824</SUB>> ]
+"14091" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2824</SUB>> ]
+"14100" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;src&quot;))<SUB>2825</SUB>> ]
+"14059" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2819</SUB>> ]
+"14085" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2824</SUB>> ]
+"14088" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2824</SUB>> ]
+"14093" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2824</SUB>> ]
+"14108" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2827</SUB>> ]
+"14131" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2828</SUB>> ]
+"14137" [label = <(memcpy,memcpy(buf, data + start, length * sizeof(ElementT)))<SUB>2829</SUB>> ]
+"14060" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2819</SUB>> ]
+"14062" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2819</SUB>> ]
+"14094" [label = <(GetLength,array-&gt;GetLength())<SUB>2824</SUB>> ]
+"14133" [label = <(GetData,array-&gt;GetData())<SUB>2828</SUB>> ]
+"14139" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2829</SUB>> ]
+"14142" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2829</SUB>> ]
+"14095" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2824</SUB>> ]
+"14134" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2828</SUB>> ]
+"14144" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2829</SUB>> ]
+"14097" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2824</SUB>> ]
+"14113" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2827</SUB>> ]
+"14136" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2828</SUB>> ]
+"14114" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2827</SUB>> ]
+"14122" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2827</SUB>> ]
+"14129" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2827</SUB>> ]
+"14115" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2827</SUB>> ]
+"14118" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2827</SUB>> ]
+"14123" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2827</SUB>> ]
+"14124" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2827</SUB>> ]
+"14126" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2827</SUB>> ]
+"14042" [label = <(METHOD,GetPrimitiveArrayRegion)<SUB>2817</SUB>> ]
+"14146" [label = <(METHOD_RETURN,void)<SUB>2817</SUB>> ]
+  "14049" -> "14054" 
+  "14049" -> "14067" 
+  "14067" -> "14072" 
+  "14070" -> "14078" 
+  "14072" -> "14070" 
+  "14078" -> "14146" 
+  "14078" -> "14085" 
+  "14053" -> "14060" 
+  "14053" -> "14067" 
+  "14083" -> "14100" 
+  "14083" -> "14108" 
+  "14054" -> "14053" 
+  "14058" -> "14065" 
+  "14065" -> "14146" 
+  "14084" -> "14083" 
+  "14084" -> "14097" 
+  "14091" -> "14083" 
+  "14100" -> "14146" 
+  "14059" -> "14058" 
+  "14085" -> "14084" 
+  "14085" -> "14088" 
+  "14088" -> "14084" 
+  "14093" -> "14091" 
+  "14108" -> "14115" 
+  "14108" -> "14136" 
+  "14131" -> "14139" 
+  "14137" -> "14146" 
+  "14060" -> "14062" 
+  "14062" -> "14059" 
+  "14094" -> "14093" 
+  "14133" -> "14131" 
+  "14139" -> "14144" 
+  "14142" -> "14137" 
+  "14095" -> "14094" 
+  "14134" -> "14133" 
+  "14144" -> "14142" 
+  "14097" -> "14095" 
+  "14113" -> "14124" 
+  "14113" -> "14136" 
   "14136" -> "14134" 
-  "14142" -> "14147" 
-  "14145" -> "14140" 
-  "14098" -> "14097" 
-  "14137" -> "14136" 
-  "14147" -> "14145" 
-  "14100" -> "14098" 
-  "14116" -> "14127" 
-  "14116" -> "14139" 
-  "14139" -> "14137" 
-  "14117" -> "14116" 
-  "14125" -> "14132" 
-  "14132" -> "14149" 
-  "14118" -> "14117" 
-  "14118" -> "14121" 
-  "14121" -> "14117" 
-  "14126" -> "14125" 
-  "14127" -> "14129" 
-  "14129" -> "14126" 
-  "14045" -> "14052" 
+  "14114" -> "14113" 
+  "14122" -> "14129" 
+  "14129" -> "14146" 
+  "14115" -> "14114" 
+  "14115" -> "14118" 
+  "14118" -> "14114" 
+  "14123" -> "14122" 
+  "14124" -> "14126" 
+  "14126" -> "14123" 
+  "14042" -> "14049" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/262-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/262-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/262-cfg.dot	2023-06-07 19:35:41.557383220 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/262-cfg.dot	2023-06-07 19:35:48.097382779 +0330
@@ -1,94 +1,94 @@
 digraph "SetPrimitiveArrayRegion" {  
-"14158" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2839</SUB>> ]
-"14176" [label = <(soa,soa(env))<SUB>2840</SUB>> ]
-"14179" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;SetPrimitiveArrayRegion&quot;, &quot;set region of&quot;))<SUB>2841</SUB>> ]
-"14181" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;SetPrimitiveArrayRegion&quot;, &quot;set region of&quot;))<SUB>2841</SUB>> ]
-"14187" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2843</SUB>> ]
-"14162" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2839</SUB>> ]
-"14192" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2844</SUB>> ]
-"14163" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2839</SUB>> ]
-"14167" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2839</SUB>> ]
-"14174" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2839</SUB>> ]
-"14193" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2844</SUB>> ]
-"14200" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2844</SUB>> ]
-"14209" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;dst&quot;))<SUB>2845</SUB>> ]
-"14168" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2839</SUB>> ]
-"14194" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2844</SUB>> ]
-"14197" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2844</SUB>> ]
-"14202" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2844</SUB>> ]
-"14217" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2847</SUB>> ]
-"14240" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2848</SUB>> ]
-"14246" [label = <(memcpy,memcpy(data + start, buf, length * sizeof(ElementT)))<SUB>2849</SUB>> ]
-"14169" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2839</SUB>> ]
-"14171" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2839</SUB>> ]
-"14203" [label = <(GetLength,array-&gt;GetLength())<SUB>2844</SUB>> ]
-"14242" [label = <(GetData,array-&gt;GetData())<SUB>2848</SUB>> ]
-"14247" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2849</SUB>> ]
-"14251" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2849</SUB>> ]
-"14204" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2844</SUB>> ]
-"14243" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2848</SUB>> ]
-"14253" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2849</SUB>> ]
-"14206" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2844</SUB>> ]
-"14222" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2847</SUB>> ]
-"14245" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2848</SUB>> ]
-"14223" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2847</SUB>> ]
-"14231" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2847</SUB>> ]
-"14238" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2847</SUB>> ]
-"14224" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2847</SUB>> ]
-"14227" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2847</SUB>> ]
-"14232" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2847</SUB>> ]
-"14233" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2847</SUB>> ]
-"14235" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2847</SUB>> ]
-"14151" [label = <(METHOD,SetPrimitiveArrayRegion)<SUB>2837</SUB>> ]
-"14255" [label = <(METHOD_RETURN,void)<SUB>2837</SUB>> ]
-  "14158" -> "14163" 
-  "14158" -> "14176" 
-  "14176" -> "14181" 
-  "14179" -> "14187" 
-  "14181" -> "14179" 
-  "14187" -> "14255" 
-  "14187" -> "14194" 
-  "14162" -> "14169" 
-  "14162" -> "14176" 
-  "14192" -> "14209" 
-  "14192" -> "14217" 
-  "14163" -> "14162" 
-  "14167" -> "14174" 
-  "14174" -> "14255" 
-  "14193" -> "14192" 
-  "14193" -> "14206" 
-  "14200" -> "14192" 
-  "14209" -> "14255" 
-  "14168" -> "14167" 
-  "14194" -> "14193" 
-  "14194" -> "14197" 
-  "14197" -> "14193" 
-  "14202" -> "14200" 
-  "14217" -> "14224" 
-  "14217" -> "14245" 
-  "14240" -> "14247" 
-  "14246" -> "14255" 
-  "14169" -> "14171" 
-  "14171" -> "14168" 
-  "14203" -> "14202" 
+"14155" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2837</SUB>> ]
+"14173" [label = <(soa,soa(env))<SUB>2838</SUB>> ]
+"14176" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;SetPrimitiveArrayRegion&quot;, &quot;set region of&quot;))<SUB>2839</SUB>> ]
+"14178" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;SetPrimitiveArrayRegion&quot;, &quot;set region of&quot;))<SUB>2839</SUB>> ]
+"14184" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2841</SUB>> ]
+"14159" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2837</SUB>> ]
+"14189" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2842</SUB>> ]
+"14160" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2837</SUB>> ]
+"14164" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2837</SUB>> ]
+"14171" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2837</SUB>> ]
+"14190" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2842</SUB>> ]
+"14197" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2842</SUB>> ]
+"14206" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;dst&quot;))<SUB>2843</SUB>> ]
+"14165" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2837</SUB>> ]
+"14191" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2842</SUB>> ]
+"14194" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2842</SUB>> ]
+"14199" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2842</SUB>> ]
+"14214" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2845</SUB>> ]
+"14237" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2846</SUB>> ]
+"14243" [label = <(memcpy,memcpy(data + start, buf, length * sizeof(ElementT)))<SUB>2847</SUB>> ]
+"14166" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2837</SUB>> ]
+"14168" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2837</SUB>> ]
+"14200" [label = <(GetLength,array-&gt;GetLength())<SUB>2842</SUB>> ]
+"14239" [label = <(GetData,array-&gt;GetData())<SUB>2846</SUB>> ]
+"14244" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2847</SUB>> ]
+"14248" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2847</SUB>> ]
+"14201" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2842</SUB>> ]
+"14240" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2846</SUB>> ]
+"14250" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2847</SUB>> ]
+"14203" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2842</SUB>> ]
+"14219" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2845</SUB>> ]
+"14242" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2846</SUB>> ]
+"14220" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2845</SUB>> ]
+"14228" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2845</SUB>> ]
+"14235" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2845</SUB>> ]
+"14221" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2845</SUB>> ]
+"14224" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2845</SUB>> ]
+"14229" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2845</SUB>> ]
+"14230" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2845</SUB>> ]
+"14232" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2845</SUB>> ]
+"14148" [label = <(METHOD,SetPrimitiveArrayRegion)<SUB>2835</SUB>> ]
+"14252" [label = <(METHOD_RETURN,void)<SUB>2835</SUB>> ]
+  "14155" -> "14160" 
+  "14155" -> "14173" 
+  "14173" -> "14178" 
+  "14176" -> "14184" 
+  "14178" -> "14176" 
+  "14184" -> "14252" 
+  "14184" -> "14191" 
+  "14159" -> "14166" 
+  "14159" -> "14173" 
+  "14189" -> "14206" 
+  "14189" -> "14214" 
+  "14160" -> "14159" 
+  "14164" -> "14171" 
+  "14171" -> "14252" 
+  "14190" -> "14189" 
+  "14190" -> "14203" 
+  "14197" -> "14189" 
+  "14206" -> "14252" 
+  "14165" -> "14164" 
+  "14191" -> "14190" 
+  "14191" -> "14194" 
+  "14194" -> "14190" 
+  "14199" -> "14197" 
+  "14214" -> "14221" 
+  "14214" -> "14242" 
+  "14237" -> "14244" 
+  "14243" -> "14252" 
+  "14166" -> "14168" 
+  "14168" -> "14165" 
+  "14200" -> "14199" 
+  "14239" -> "14237" 
+  "14244" -> "14250" 
+  "14248" -> "14243" 
+  "14201" -> "14200" 
+  "14240" -> "14239" 
+  "14250" -> "14248" 
+  "14203" -> "14201" 
+  "14219" -> "14230" 
+  "14219" -> "14242" 
   "14242" -> "14240" 
-  "14247" -> "14253" 
-  "14251" -> "14246" 
-  "14204" -> "14203" 
-  "14243" -> "14242" 
-  "14253" -> "14251" 
-  "14206" -> "14204" 
-  "14222" -> "14233" 
-  "14222" -> "14245" 
-  "14245" -> "14243" 
-  "14223" -> "14222" 
-  "14231" -> "14238" 
-  "14238" -> "14255" 
-  "14224" -> "14223" 
-  "14224" -> "14227" 
-  "14227" -> "14223" 
-  "14232" -> "14231" 
-  "14233" -> "14235" 
-  "14235" -> "14232" 
-  "14151" -> "14158" 
+  "14220" -> "14219" 
+  "14228" -> "14235" 
+  "14235" -> "14252" 
+  "14221" -> "14220" 
+  "14221" -> "14224" 
+  "14224" -> "14220" 
+  "14229" -> "14228" 
+  "14230" -> "14232" 
+  "14232" -> "14229" 
+  "14148" -> "14155" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/263-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/263-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/263-cfg.dot	2023-06-07 19:35:41.617383217 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/263-cfg.dot	2023-06-07 19:35:48.177382771 +0330
@@ -1,468 +1,469 @@
 digraph "&lt;clinit&gt;" {  
-"14263" [label = <(&lt;operator&gt;.assignment,gJniNativeInterface = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 JNIImpl::GetVersion,\012 JNIImpl::DefineClass,\012 JNIImpl::FindClass,\012 JNIImpl::FromReflectedMethod,\012 JNIImpl::FromReflectedField,\012 JNIImpl::ToReflectedMethod,\012 JNIImpl::GetSuperclass,\012 JNIImpl::IsAssignableFrom,\012 JNIImpl::ToReflectedField,\012 JNIImpl::Throw,\012 JNIImpl::ThrowNew,\012 JNIImpl::ExceptionOccurred,\012 JNIImpl::ExceptionDescribe,\012 JNIImpl::ExceptionClear,\012 JNIImpl::FatalError,\012 JNIImpl::PushLocalFrame,\012 JNIImpl::PopLocalFrame,\012 JNIImpl::NewGlobalRef,\012 JNIImpl::DeleteGlobalRef,\012 JNIImpl::DeleteLocalRef,\012 JNIImpl::IsSameObject,\012 JNIImpl::NewLocalRef,\012 JNIImpl::EnsureLocalCapacity,\012 JNIImpl::AllocObject,\012 JNIImpl::NewObject,\012 JNIImpl::NewObjectV,\012 JNIImpl::NewObjectA,\012 JNIImpl::GetObjectClass,\012 JNIImpl::IsInstanceOf,\012 JNIImpl::GetMethodID,\012 JNIImpl::CallObjectMethod,\012 JNIImpl::CallObjectMethodV,\012 JNIImpl::CallObjectMethodA,\012 JNIImpl::CallBooleanMethod,\012 JNIImpl::CallBooleanMethodV,\012 JNIImpl::CallBooleanMethodA,\012 JNIImpl::CallByteMethod,\012 JNIImpl::CallByteMethodV,\012 JNIImpl::CallByteMethodA,\012 JNIImpl::CallCharMethod,\012 JNIImpl::CallCharMethodV,\012 JNIImpl::CallCharMethodA,\012 JNIImpl::CallShortMethod,\012 JNIImpl::CallShortMethodV,\012 JNIImpl::CallShortMethodA,\012 JNIImpl::CallIntMethod,\012 JNIImpl::CallIntMethodV,\012 JNIImpl::CallIntMethodA,\012 JNIImpl::CallLongMethod,\012 JNIImpl::CallLongMethodV,\012 JNIImpl::CallLongMethodA,\012 JNIImpl::CallFloatMethod,\012 JNIImpl::CallFloatMethodV,\012 JNIImpl::CallFloatMethodA,\012 JNIImpl::CallDoubleMethod,\012 JNIImpl::CallDoubleMethodV,\012 JNIImpl::CallDoubleMethodA,\012 JNIImpl::CallVoidMethod,\012 JNIImpl::CallVoidMethodV,\012 JNIImpl::CallVoidMethodA,\012 JNIImpl::CallNonvirtualObjectMethod,\012 JNIImpl::CallNonvirtualObjectMethodV,\012 JNIImpl::CallNonvirtualObjectMethodA,\012 JNIImpl::CallNonvirtualBooleanMethod,\012 JNIImpl::CallNonvirtualBooleanMethodV,\012 JNIImpl::CallNonvirtualBooleanMethodA,\012 JNIImpl::CallNonvirtualByteMethod,\012 JNIImpl::CallNonvirtualByteMethodV,\012 JNIImpl::CallNonvirtualByteMethodA,\012 JNIImpl::CallNonvirtualCharMethod,\012 JNIImpl::CallNonvirtualCharMethodV,\012 JNIImpl::CallNonvirtualCharMethodA,\012 JNIImpl::CallNonvirtualShortMethod,\012 JNIImpl::CallNonvirtualShortMethodV,\012 JNIImpl::CallNonvirtualShortMethodA,\012 JNIImpl::CallNonvirtualIntMethod,\012 JNIImpl::CallNonvirtualIntMethodV,\012 JNIImpl::CallNonvirtualIntMethodA,\012 JNIImpl::CallNonvirtualLongMethod,\012 JNIImpl::CallNonvirtualLongMethodV,\012 JNIImpl::CallNonvirtualLongMethodA,\012 JNIImpl::CallNonvirtualFloatMethod,\012 JNIImpl::CallNonvirtualFloatMethodV,\012 JNIImpl::CallNonvirtualFloatMethodA,\012 JNIImpl::CallNonvirtualDoubleMethod,\012 JNIImpl::CallNonvirtualDoubleMethodV,\012 JNIImpl::CallNonvirtualDoubleMethodA,\012 JNIImpl::CallNonvirtualVoidMethod,\012 JNIImpl::CallNonvirtualVoidMethodV,\012 JNIImpl::CallNonvirtualVoidMethodA,\012 JNIImpl::GetFieldID,\012 JNIImpl::GetObjectField,\012 JNIImpl::GetBooleanField,\012 JNIImpl::GetByteField,\012 JNIImpl::GetCharField,\012 JNIImpl::GetShortField,\012 JNIImpl::GetIntField,\012 JNIImpl::GetLongField,\012 JNIImpl::GetFloatField,\012 JNIImpl::GetDoubleField,\012 JNIImpl::SetObjectField,\012 JNIImpl::SetBooleanField,\012 JNIImpl::SetByteField,\012 JNIImpl::SetCharField,\012 JNIImpl::SetShortField,\012 JNIImpl::SetIntField,\012 JNIImpl::SetLongField,\012 JNIImpl::SetFloatField,\012 JNIImpl::SetDoubleField,\012 JNIImpl::GetStaticMethodID,\012 JNIImpl::CallStaticObjectMethod,\012 JNIImpl::CallStaticObjectMethodV,\012 JNIImpl::CallStaticObjectMethodA,\012 JNIImpl::CallStaticBooleanMethod,\012 JNIImpl::CallStaticBooleanMethodV,\012 JNIImpl::CallStaticBooleanMethodA,\012 JNIImpl::CallStaticByteMethod,\012 JNIImpl::CallStaticByteMethodV,\012 JNIImpl::CallStaticByteMethodA,\012 JNIImpl::CallStaticCharMethod,\012 JNIImpl::CallStaticCharMethodV,\012 JNIImpl::CallStaticCharMethodA,\012 JNIImpl::CallStaticShortMethod,\012 JNIImpl::CallStaticShortMethodV,\012 JNIImpl::CallStaticShortMethodA,\012 JNIImpl::CallStaticIntMethod,\012 JNIImpl::CallStaticIntMethodV,\012 JNIImpl::CallStaticIntMethodA,\012 JNIImpl::CallStaticLongMethod,\012 JNIImpl::CallStaticLongMethodV,\012 JNIImpl::CallStaticLongMethodA,\012 JNIImpl::CallStaticFloatMethod,\012 JNIImpl::CallStaticFloatMethodV,\012 JNIImpl::CallStaticFloatMethodA,\012 JNIImpl::CallStaticDoubleMethod,\012 JNIImpl::CallStaticDoubleMethodV,\012 JNIImpl::CallStaticDoubleMethodA,\012 JNIImpl::CallStaticVoidMethod,\012 JNIImpl::CallStaticVoidMethodV,\012 JNIImpl::CallStaticVoidMethodA,\012 JNIImpl::GetStaticFieldID,\012 JNIImpl::GetStaticObjectField,\012 JNIImpl::GetStaticBooleanField,\012 JNIImpl::GetStaticByteField,\012 JNIImpl::GetStaticCharField,\012 JNIImpl::GetStaticShortField,\012 JNIImpl::GetStaticIntField,\012 JNIImpl::GetStaticLongField,\012 JNIImpl::GetStaticFloatField,\012 JNIImpl::GetStaticDoubleField,\012 JNIImpl::SetStaticObjectField,\012 JNIImpl::SetStaticBooleanField,\012 JNIImpl::SetStaticByteField,\012 JNIImpl::SetStaticCharField,\012 JNIImpl::SetStaticShortField,\012 JNIImpl::SetStaticIntField,\012 JNIImpl::SetStaticLongField,\012 JNIImpl::SetStaticFloatField,\012 JNIImpl::SetStaticDoubleField,\012 JNIImpl::NewString,\012 JNIImpl::GetStringLength,\012 JNIImpl::GetStringChars,\012 JNIImpl::ReleaseStringChars,\012 JNIImpl::NewStringUTF,\012 JNIImpl::GetStringUTFLength,\012 JNIImpl::GetStringUTFChars,\012 JNIImpl::ReleaseStringUTFChars,\012 JNIImpl::GetArrayLength,\012 JNIImpl::NewObjectArray,\012 JNIImpl::GetObjectArrayElement,\012 JNIImpl::SetObjectArrayElement,\012 JNIImpl::NewBooleanArray,\012 JNIImpl::NewByteArray,\012 JNIImpl::NewCharArray,\012 JNIImpl::NewShortArray,\012 JNIImpl::NewIntArray,\012 JNIImpl::NewLongArray,\012 JNIImpl::NewFloatArray,\012 JNIImpl::NewDoubleArray,\012 JNIImpl::GetBooleanArrayElements,\012 JNIImpl::GetByteArrayElements,\012 JNIImpl::GetCharArrayElements,\012 JNIImpl::GetShortArrayElements,\012 JNIImpl::GetIntArrayElements,\012 JNIImpl::GetLongArrayElements,\012 JNIImpl::GetFloatArrayElements,\012 JNIImpl::GetDoubleArrayElements,\012 JNIImpl::ReleaseBooleanArrayElements,\012 JNIImpl::ReleaseByteArrayElements,\012 JNIImpl::ReleaseCharArrayElements,\012 JNIImpl::ReleaseShortArrayElements,\012 JNIImpl::ReleaseIntArrayElements,\012 JNIImpl::ReleaseLongArrayElements,\012 JNIImpl::ReleaseFloatArrayElements,\012 JNIImpl::ReleaseDoubleArrayElements,\012 JNIImpl::GetBooleanArrayRegion,\012 JNIImpl::GetByteArrayRegion,\012 JNIImpl::GetCharArrayRegion,\012 JNIImpl::GetShortArrayRegion,\012 JNIImpl::GetIntArrayRegion,\012 JNIImpl::GetLongArrayRegion,\012 JNIImpl::GetFloatArrayRegion,\012 JNIImpl::GetDoubleArrayRegion,\012 JNIImpl::SetBooleanArrayRegion,\012 JNIImpl::SetByteArrayRegion,\012 JNIImpl::SetCharArrayRegion,\012 JNIImpl::SetShortArrayRegion,\012 JNIImpl::SetIntArrayRegion,\012 JNIImpl::SetLongArrayRegion,\012 JNIImpl::SetFloatArrayRegion,\012 JNIImpl::SetDoubleArrayRegion,\012 JNIImpl::RegisterNatives,\012 JNIImpl::UnregisterNatives,\012 JNIImpl::MonitorEnter,\012 JNIImpl::MonitorExit,\012 JNIImpl::GetJavaVM,\012 JNIImpl::GetStringRegion,\012 JNIImpl::GetStringUTFRegion,\012 JNIImpl::GetPrimitiveArrayCritical,\012 JNIImpl::ReleasePrimitiveArrayCritical,\012 JNIImpl::GetStringCritical,\012 JNIImpl::ReleaseStringCritical,\012 JNIImpl::NewWeakGlobalRef,\012 JNIImpl::DeleteWeakGlobalRef,\012 JNIImpl::ExceptionCheck,\012 JNIImpl::NewDirectByteBuffer,\012 JNIImpl::GetDirectBufferAddress,\012 JNIImpl::GetDirectBufferCapacity,\012 JNIImpl::GetObjectRefType,\012 })<SUB>2858</SUB>> ]
-"14265" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 JNIImpl::GetVersion,\012 JNIImpl::DefineClass,\012 JNIImpl::FindClass,\012 JNIImpl::FromReflectedMethod,\012 JNIImpl::FromReflectedField,\012 JNIImpl::ToReflectedMethod,\012 JNIImpl::GetSuperclass,\012 JNIImpl::IsAssignableFrom,\012 JNIImpl::ToReflectedField,\012 JNIImpl::Throw,\012 JNIImpl::ThrowNew,\012 JNIImpl::ExceptionOccurred,\012 JNIImpl::ExceptionDescribe,\012 JNIImpl::ExceptionClear,\012 JNIImpl::FatalError,\012 JNIImpl::PushLocalFrame,\012 JNIImpl::PopLocalFrame,\012 JNIImpl::NewGlobalRef,\012 JNIImpl::DeleteGlobalRef,\012 JNIImpl::DeleteLocalRef,\012 JNIImpl::IsSameObject,\012 JNIImpl::NewLocalRef,\012 JNIImpl::EnsureLocalCapacity,\012 JNIImpl::AllocObject,\012 JNIImpl::NewObject,\012 JNIImpl::NewObjectV,\012 JNIImpl::NewObjectA,\012 JNIImpl::GetObjectClass,\012 JNIImpl::IsInstanceOf,\012 JNIImpl::GetMethodID,\012 JNIImpl::CallObjectMethod,\012 JNIImpl::CallObjectMethodV,\012 JNIImpl::CallObjectMethodA,\012 JNIImpl::CallBooleanMethod,\012 JNIImpl::CallBooleanMethodV,\012 JNIImpl::CallBooleanMethodA,\012 JNIImpl::CallByteMethod,\012 JNIImpl::CallByteMethodV,\012 JNIImpl::CallByteMethodA,\012 JNIImpl::CallCharMethod,\012 JNIImpl::CallCharMethodV,\012 JNIImpl::CallCharMethodA,\012 JNIImpl::CallShortMethod,\012 JNIImpl::CallShortMethodV,\012 JNIImpl::CallShortMethodA,\012 JNIImpl::CallIntMethod,\012 JNIImpl::CallIntMethodV,\012 JNIImpl::CallIntMethodA,\012 JNIImpl::CallLongMethod,\012 JNIImpl::CallLongMethodV,\012 JNIImpl::CallLongMethodA,\012 JNIImpl::CallFloatMethod,\012 JNIImpl::CallFloatMethodV,\012 JNIImpl::CallFloatMethodA,\012 JNIImpl::CallDoubleMethod,\012 JNIImpl::CallDoubleMethodV,\012 JNIImpl::CallDoubleMethodA,\012 JNIImpl::CallVoidMethod,\012 JNIImpl::CallVoidMethodV,\012 JNIImpl::CallVoidMethodA,\012 JNIImpl::CallNonvirtualObjectMethod,\012 JNIImpl::CallNonvirtualObjectMethodV,\012 JNIImpl::CallNonvirtualObjectMethodA,\012 JNIImpl::CallNonvirtualBooleanMethod,\012 JNIImpl::CallNonvirtualBooleanMethodV,\012 JNIImpl::CallNonvirtualBooleanMethodA,\012 JNIImpl::CallNonvirtualByteMethod,\012 JNIImpl::CallNonvirtualByteMethodV,\012 JNIImpl::CallNonvirtualByteMethodA,\012 JNIImpl::CallNonvirtualCharMethod,\012 JNIImpl::CallNonvirtualCharMethodV,\012 JNIImpl::CallNonvirtualCharMethodA,\012 JNIImpl::CallNonvirtualShortMethod,\012 JNIImpl::CallNonvirtualShortMethodV,\012 JNIImpl::CallNonvirtualShortMethodA,\012 JNIImpl::CallNonvirtualIntMethod,\012 JNIImpl::CallNonvirtualIntMethodV,\012 JNIImpl::CallNonvirtualIntMethodA,\012 JNIImpl::CallNonvirtualLongMethod,\012 JNIImpl::CallNonvirtualLongMethodV,\012 JNIImpl::CallNonvirtualLongMethodA,\012 JNIImpl::CallNonvirtualFloatMethod,\012 JNIImpl::CallNonvirtualFloatMethodV,\012 JNIImpl::CallNonvirtualFloatMethodA,\012 JNIImpl::CallNonvirtualDoubleMethod,\012 JNIImpl::CallNonvirtualDoubleMethodV,\012 JNIImpl::CallNonvirtualDoubleMethodA,\012 JNIImpl::CallNonvirtualVoidMethod,\012 JNIImpl::CallNonvirtualVoidMethodV,\012 JNIImpl::CallNonvirtualVoidMethodA,\012 JNIImpl::GetFieldID,\012 JNIImpl::GetObjectField,\012 JNIImpl::GetBooleanField,\012 JNIImpl::GetByteField,\012 JNIImpl::GetCharField,\012 JNIImpl::GetShortField,\012 JNIImpl::GetIntField,\012 JNIImpl::GetLongField,\012 JNIImpl::GetFloatField,\012 JNIImpl::GetDoubleField,\012 JNIImpl::SetObjectField,\012 JNIImpl::SetBooleanField,\012 JNIImpl::SetByteField,\012 JNIImpl::SetCharField,\012 JNIImpl::SetShortField,\012 JNIImpl::SetIntField,\012 JNIImpl::SetLongField,\012 JNIImpl::SetFloatField,\012 JNIImpl::SetDoubleField,\012 JNIImpl::GetStaticMethodID,\012 JNIImpl::CallStaticObjectMethod,\012 JNIImpl::CallStaticObjectMethodV,\012 JNIImpl::CallStaticObjectMethodA,\012 JNIImpl::CallStaticBooleanMethod,\012 JNIImpl::CallStaticBooleanMethodV,\012 JNIImpl::CallStaticBooleanMethodA,\012 JNIImpl::CallStaticByteMethod,\012 JNIImpl::CallStaticByteMethodV,\012 JNIImpl::CallStaticByteMethodA,\012 JNIImpl::CallStaticCharMethod,\012 JNIImpl::CallStaticCharMethodV,\012 JNIImpl::CallStaticCharMethodA,\012 JNIImpl::CallStaticShortMethod,\012 JNIImpl::CallStaticShortMethodV,\012 JNIImpl::CallStaticShortMethodA,\012 JNIImpl::CallStaticIntMethod,\012 JNIImpl::CallStaticIntMethodV,\012 JNIImpl::CallStaticIntMethodA,\012 JNIImpl::CallStaticLongMethod,\012 JNIImpl::CallStaticLongMethodV,\012 JNIImpl::CallStaticLongMethodA,\012 JNIImpl::CallStaticFloatMethod,\012 JNIImpl::CallStaticFloatMethodV,\012 JNIImpl::CallStaticFloatMethodA,\012 JNIImpl::CallStaticDoubleMethod,\012 JNIImpl::CallStaticDoubleMethodV,\012 JNIImpl::CallStaticDoubleMethodA,\012 JNIImpl::CallStaticVoidMethod,\012 JNIImpl::CallStaticVoidMethodV,\012 JNIImpl::CallStaticVoidMethodA,\012 JNIImpl::GetStaticFieldID,\012 JNIImpl::GetStaticObjectField,\012 JNIImpl::GetStaticBooleanField,\012 JNIImpl::GetStaticByteField,\012 JNIImpl::GetStaticCharField,\012 JNIImpl::GetStaticShortField,\012 JNIImpl::GetStaticIntField,\012 JNIImpl::GetStaticLongField,\012 JNIImpl::GetStaticFloatField,\012 JNIImpl::GetStaticDoubleField,\012 JNIImpl::SetStaticObjectField,\012 JNIImpl::SetStaticBooleanField,\012 JNIImpl::SetStaticByteField,\012 JNIImpl::SetStaticCharField,\012 JNIImpl::SetStaticShortField,\012 JNIImpl::SetStaticIntField,\012 JNIImpl::SetStaticLongField,\012 JNIImpl::SetStaticFloatField,\012 JNIImpl::SetStaticDoubleField,\012 JNIImpl::NewString,\012 JNIImpl::GetStringLength,\012 JNIImpl::GetStringChars,\012 JNIImpl::ReleaseStringChars,\012 JNIImpl::NewStringUTF,\012 JNIImpl::GetStringUTFLength,\012 JNIImpl::GetStringUTFChars,\012 JNIImpl::ReleaseStringUTFChars,\012 JNIImpl::GetArrayLength,\012 JNIImpl::NewObjectArray,\012 JNIImpl::GetObjectArrayElement,\012 JNIImpl::SetObjectArrayElement,\012 JNIImpl::NewBooleanArray,\012 JNIImpl::NewByteArray,\012 JNIImpl::NewCharArray,\012 JNIImpl::NewShortArray,\012 JNIImpl::NewIntArray,\012 JNIImpl::NewLongArray,\012 JNIImpl::NewFloatArray,\012 JNIImpl::NewDoubleArray,\012 JNIImpl::GetBooleanArrayElements,\012 JNIImpl::GetByteArrayElements,\012 JNIImpl::GetCharArrayElements,\012 JNIImpl::GetShortArrayElements,\012 JNIImpl::GetIntArrayElements,\012 JNIImpl::GetLongArrayElements,\012 JNIImpl::GetFloatArrayElements,\012 JNIImpl::GetDoubleArrayElements,\012 JNIImpl::ReleaseBooleanArrayElements,\012 JNIImpl::ReleaseByteArrayElements,\012 JNIImpl::ReleaseCharArrayElements,\012 JNIImpl::ReleaseShortArrayElements,\012 JNIImpl::ReleaseIntArrayElements,\012 JNIImpl::ReleaseLongArrayElements,\012 JNIImpl::ReleaseFloatArrayElements,\012 JNIImpl::ReleaseDoubleArrayElements,\012 JNIImpl::GetBooleanArrayRegion,\012 JNIImpl::GetByteArrayRegion,\012 JNIImpl::GetCharArrayRegion,\012 JNIImpl::GetShortArrayRegion,\012 JNIImpl::GetIntArrayRegion,\012 JNIImpl::GetLongArrayRegion,\012 JNIImpl::GetFloatArrayRegion,\012 JNIImpl::GetDoubleArrayRegion,\012 JNIImpl::SetBooleanArrayRegion,\012 JNIImpl::SetByteArrayRegion,\012 JNIImpl::SetCharArrayRegion,\012 JNIImpl::SetShortArrayRegion,\012 JNIImpl::SetIntArrayRegion,\012 JNIImpl::SetLongArrayRegion,\012 JNIImpl::SetFloatArrayRegion,\012 JNIImpl::SetDoubleArrayRegion,\012 JNIImpl::RegisterNatives,\012 JNIImpl::UnregisterNatives,\012 JNIImpl::MonitorEnter,\012 JNIImpl::MonitorExit,\012 JNIImpl::GetJavaVM,\012 JNIImpl::GetStringRegion,\012 JNIImpl::GetStringUTFRegion,\012 JNIImpl::GetPrimitiveArrayCritical,\012 JNIImpl::ReleasePrimitiveArrayCritical,\012 JNIImpl::GetStringCritical,\012 JNIImpl::ReleaseStringCritical,\012 JNIImpl::NewWeakGlobalRef,\012 JNIImpl::DeleteWeakGlobalRef,\012 JNIImpl::ExceptionCheck,\012 JNIImpl::NewDirectByteBuffer,\012 JNIImpl::GetDirectBufferAddress,\012 JNIImpl::GetDirectBufferCapacity,\012 JNIImpl::GetObjectRefType,\012 })<SUB>2858</SUB>> ]
-"14270" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetVersion)<SUB>2863</SUB>> ]
-"14273" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::DefineClass)<SUB>2864</SUB>> ]
-"14276" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::FindClass)<SUB>2865</SUB>> ]
-"14279" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::FromReflectedMethod)<SUB>2866</SUB>> ]
-"14282" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::FromReflectedField)<SUB>2867</SUB>> ]
-"14285" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ToReflectedMethod)<SUB>2868</SUB>> ]
-"14288" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetSuperclass)<SUB>2869</SUB>> ]
-"14291" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::IsAssignableFrom)<SUB>2870</SUB>> ]
-"14294" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ToReflectedField)<SUB>2871</SUB>> ]
-"14297" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::Throw)<SUB>2872</SUB>> ]
-"14300" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ThrowNew)<SUB>2873</SUB>> ]
-"14303" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ExceptionOccurred)<SUB>2874</SUB>> ]
-"14306" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ExceptionDescribe)<SUB>2875</SUB>> ]
-"14309" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ExceptionClear)<SUB>2876</SUB>> ]
-"14312" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::FatalError)<SUB>2877</SUB>> ]
-"14315" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::PushLocalFrame)<SUB>2878</SUB>> ]
-"14318" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::PopLocalFrame)<SUB>2879</SUB>> ]
-"14321" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewGlobalRef)<SUB>2880</SUB>> ]
-"14324" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::DeleteGlobalRef)<SUB>2881</SUB>> ]
-"14327" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::DeleteLocalRef)<SUB>2882</SUB>> ]
-"14330" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::IsSameObject)<SUB>2883</SUB>> ]
-"14333" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewLocalRef)<SUB>2884</SUB>> ]
-"14336" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::EnsureLocalCapacity)<SUB>2885</SUB>> ]
-"14339" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::AllocObject)<SUB>2886</SUB>> ]
-"14342" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewObject)<SUB>2887</SUB>> ]
-"14345" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewObjectV)<SUB>2888</SUB>> ]
-"14348" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewObjectA)<SUB>2889</SUB>> ]
-"14351" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetObjectClass)<SUB>2890</SUB>> ]
-"14354" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::IsInstanceOf)<SUB>2891</SUB>> ]
-"14357" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetMethodID)<SUB>2892</SUB>> ]
-"14360" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallObjectMethod)<SUB>2893</SUB>> ]
-"14363" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallObjectMethodV)<SUB>2894</SUB>> ]
-"14366" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallObjectMethodA)<SUB>2895</SUB>> ]
-"14369" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallBooleanMethod)<SUB>2896</SUB>> ]
-"14372" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallBooleanMethodV)<SUB>2897</SUB>> ]
-"14375" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallBooleanMethodA)<SUB>2898</SUB>> ]
-"14378" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallByteMethod)<SUB>2899</SUB>> ]
-"14381" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallByteMethodV)<SUB>2900</SUB>> ]
-"14384" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallByteMethodA)<SUB>2901</SUB>> ]
-"14387" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallCharMethod)<SUB>2902</SUB>> ]
-"14390" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallCharMethodV)<SUB>2903</SUB>> ]
-"14393" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallCharMethodA)<SUB>2904</SUB>> ]
-"14396" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallShortMethod)<SUB>2905</SUB>> ]
-"14399" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallShortMethodV)<SUB>2906</SUB>> ]
-"14402" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallShortMethodA)<SUB>2907</SUB>> ]
-"14405" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallIntMethod)<SUB>2908</SUB>> ]
-"14408" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallIntMethodV)<SUB>2909</SUB>> ]
-"14411" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallIntMethodA)<SUB>2910</SUB>> ]
-"14414" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallLongMethod)<SUB>2911</SUB>> ]
-"14417" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallLongMethodV)<SUB>2912</SUB>> ]
-"14420" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallLongMethodA)<SUB>2913</SUB>> ]
-"14423" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallFloatMethod)<SUB>2914</SUB>> ]
-"14426" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallFloatMethodV)<SUB>2915</SUB>> ]
-"14429" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallFloatMethodA)<SUB>2916</SUB>> ]
-"14432" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallDoubleMethod)<SUB>2917</SUB>> ]
-"14435" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallDoubleMethodV)<SUB>2918</SUB>> ]
-"14438" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallDoubleMethodA)<SUB>2919</SUB>> ]
-"14441" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallVoidMethod)<SUB>2920</SUB>> ]
-"14444" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallVoidMethodV)<SUB>2921</SUB>> ]
-"14447" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallVoidMethodA)<SUB>2922</SUB>> ]
-"14450" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualObjectMethod)<SUB>2923</SUB>> ]
-"14453" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualObjectMethodV)<SUB>2924</SUB>> ]
-"14456" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualObjectMethodA)<SUB>2925</SUB>> ]
-"14459" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualBooleanMethod)<SUB>2926</SUB>> ]
-"14462" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualBooleanMethodV)<SUB>2927</SUB>> ]
-"14465" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualBooleanMethodA)<SUB>2928</SUB>> ]
-"14468" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualByteMethod)<SUB>2929</SUB>> ]
-"14471" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualByteMethodV)<SUB>2930</SUB>> ]
-"14474" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualByteMethodA)<SUB>2931</SUB>> ]
-"14477" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualCharMethod)<SUB>2932</SUB>> ]
-"14480" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualCharMethodV)<SUB>2933</SUB>> ]
-"14483" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualCharMethodA)<SUB>2934</SUB>> ]
-"14486" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualShortMethod)<SUB>2935</SUB>> ]
-"14489" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualShortMethodV)<SUB>2936</SUB>> ]
-"14492" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualShortMethodA)<SUB>2937</SUB>> ]
-"14495" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualIntMethod)<SUB>2938</SUB>> ]
-"14498" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualIntMethodV)<SUB>2939</SUB>> ]
-"14501" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualIntMethodA)<SUB>2940</SUB>> ]
-"14504" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualLongMethod)<SUB>2941</SUB>> ]
-"14507" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualLongMethodV)<SUB>2942</SUB>> ]
-"14510" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualLongMethodA)<SUB>2943</SUB>> ]
-"14513" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualFloatMethod)<SUB>2944</SUB>> ]
-"14516" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualFloatMethodV)<SUB>2945</SUB>> ]
-"14519" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualFloatMethodA)<SUB>2946</SUB>> ]
-"14522" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualDoubleMethod)<SUB>2947</SUB>> ]
-"14525" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualDoubleMethodV)<SUB>2948</SUB>> ]
-"14528" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualDoubleMethodA)<SUB>2949</SUB>> ]
-"14531" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualVoidMethod)<SUB>2950</SUB>> ]
-"14534" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualVoidMethodV)<SUB>2951</SUB>> ]
-"14537" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualVoidMethodA)<SUB>2952</SUB>> ]
-"14540" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetFieldID)<SUB>2953</SUB>> ]
-"14543" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetObjectField)<SUB>2954</SUB>> ]
-"14546" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetBooleanField)<SUB>2955</SUB>> ]
-"14549" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetByteField)<SUB>2956</SUB>> ]
-"14552" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetCharField)<SUB>2957</SUB>> ]
-"14555" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetShortField)<SUB>2958</SUB>> ]
-"14558" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetIntField)<SUB>2959</SUB>> ]
-"14561" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetLongField)<SUB>2960</SUB>> ]
-"14564" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetFloatField)<SUB>2961</SUB>> ]
-"14567" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetDoubleField)<SUB>2962</SUB>> ]
-"14570" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetObjectField)<SUB>2963</SUB>> ]
-"14573" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetBooleanField)<SUB>2964</SUB>> ]
-"14576" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetByteField)<SUB>2965</SUB>> ]
-"14579" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetCharField)<SUB>2966</SUB>> ]
-"14582" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetShortField)<SUB>2967</SUB>> ]
-"14585" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetIntField)<SUB>2968</SUB>> ]
-"14588" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetLongField)<SUB>2969</SUB>> ]
-"14591" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetFloatField)<SUB>2970</SUB>> ]
-"14594" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetDoubleField)<SUB>2971</SUB>> ]
-"14597" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticMethodID)<SUB>2972</SUB>> ]
-"14600" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticObjectMethod)<SUB>2973</SUB>> ]
-"14603" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticObjectMethodV)<SUB>2974</SUB>> ]
-"14606" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticObjectMethodA)<SUB>2975</SUB>> ]
-"14609" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticBooleanMethod)<SUB>2976</SUB>> ]
-"14612" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticBooleanMethodV)<SUB>2977</SUB>> ]
-"14615" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticBooleanMethodA)<SUB>2978</SUB>> ]
-"14618" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticByteMethod)<SUB>2979</SUB>> ]
-"14621" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticByteMethodV)<SUB>2980</SUB>> ]
-"14624" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticByteMethodA)<SUB>2981</SUB>> ]
-"14627" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticCharMethod)<SUB>2982</SUB>> ]
-"14630" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticCharMethodV)<SUB>2983</SUB>> ]
-"14633" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticCharMethodA)<SUB>2984</SUB>> ]
-"14636" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticShortMethod)<SUB>2985</SUB>> ]
-"14639" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticShortMethodV)<SUB>2986</SUB>> ]
-"14642" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticShortMethodA)<SUB>2987</SUB>> ]
-"14645" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticIntMethod)<SUB>2988</SUB>> ]
-"14648" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticIntMethodV)<SUB>2989</SUB>> ]
-"14651" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticIntMethodA)<SUB>2990</SUB>> ]
-"14654" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticLongMethod)<SUB>2991</SUB>> ]
-"14657" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticLongMethodV)<SUB>2992</SUB>> ]
-"14660" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticLongMethodA)<SUB>2993</SUB>> ]
-"14663" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticFloatMethod)<SUB>2994</SUB>> ]
-"14666" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticFloatMethodV)<SUB>2995</SUB>> ]
-"14669" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticFloatMethodA)<SUB>2996</SUB>> ]
-"14672" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticDoubleMethod)<SUB>2997</SUB>> ]
-"14675" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticDoubleMethodV)<SUB>2998</SUB>> ]
-"14678" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticDoubleMethodA)<SUB>2999</SUB>> ]
-"14681" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticVoidMethod)<SUB>3000</SUB>> ]
-"14684" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticVoidMethodV)<SUB>3001</SUB>> ]
-"14687" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticVoidMethodA)<SUB>3002</SUB>> ]
-"14690" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticFieldID)<SUB>3003</SUB>> ]
-"14693" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticObjectField)<SUB>3004</SUB>> ]
-"14696" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticBooleanField)<SUB>3005</SUB>> ]
-"14699" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticByteField)<SUB>3006</SUB>> ]
-"14702" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticCharField)<SUB>3007</SUB>> ]
-"14705" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticShortField)<SUB>3008</SUB>> ]
-"14708" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticIntField)<SUB>3009</SUB>> ]
-"14711" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticLongField)<SUB>3010</SUB>> ]
-"14714" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticFloatField)<SUB>3011</SUB>> ]
-"14717" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticDoubleField)<SUB>3012</SUB>> ]
-"14720" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticObjectField)<SUB>3013</SUB>> ]
-"14723" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticBooleanField)<SUB>3014</SUB>> ]
-"14726" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticByteField)<SUB>3015</SUB>> ]
-"14729" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticCharField)<SUB>3016</SUB>> ]
-"14732" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticShortField)<SUB>3017</SUB>> ]
-"14735" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticIntField)<SUB>3018</SUB>> ]
-"14738" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticLongField)<SUB>3019</SUB>> ]
-"14741" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticFloatField)<SUB>3020</SUB>> ]
-"14744" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticDoubleField)<SUB>3021</SUB>> ]
-"14747" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewString)<SUB>3022</SUB>> ]
-"14750" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringLength)<SUB>3023</SUB>> ]
-"14753" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringChars)<SUB>3024</SUB>> ]
-"14756" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseStringChars)<SUB>3025</SUB>> ]
-"14759" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewStringUTF)<SUB>3026</SUB>> ]
-"14762" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringUTFLength)<SUB>3027</SUB>> ]
-"14765" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringUTFChars)<SUB>3028</SUB>> ]
-"14768" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseStringUTFChars)<SUB>3029</SUB>> ]
-"14771" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetArrayLength)<SUB>3030</SUB>> ]
-"14774" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewObjectArray)<SUB>3031</SUB>> ]
-"14777" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetObjectArrayElement)<SUB>3032</SUB>> ]
-"14780" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetObjectArrayElement)<SUB>3033</SUB>> ]
-"14783" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewBooleanArray)<SUB>3034</SUB>> ]
-"14786" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewByteArray)<SUB>3035</SUB>> ]
-"14789" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewCharArray)<SUB>3036</SUB>> ]
-"14792" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewShortArray)<SUB>3037</SUB>> ]
-"14795" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewIntArray)<SUB>3038</SUB>> ]
-"14798" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewLongArray)<SUB>3039</SUB>> ]
-"14801" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewFloatArray)<SUB>3040</SUB>> ]
-"14804" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewDoubleArray)<SUB>3041</SUB>> ]
-"14807" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetBooleanArrayElements)<SUB>3042</SUB>> ]
-"14810" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetByteArrayElements)<SUB>3043</SUB>> ]
-"14813" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetCharArrayElements)<SUB>3044</SUB>> ]
-"14816" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetShortArrayElements)<SUB>3045</SUB>> ]
-"14819" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetIntArrayElements)<SUB>3046</SUB>> ]
-"14822" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetLongArrayElements)<SUB>3047</SUB>> ]
-"14825" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetFloatArrayElements)<SUB>3048</SUB>> ]
-"14828" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetDoubleArrayElements)<SUB>3049</SUB>> ]
-"14831" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseBooleanArrayElements)<SUB>3050</SUB>> ]
-"14834" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseByteArrayElements)<SUB>3051</SUB>> ]
-"14837" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseCharArrayElements)<SUB>3052</SUB>> ]
-"14840" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseShortArrayElements)<SUB>3053</SUB>> ]
-"14843" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseIntArrayElements)<SUB>3054</SUB>> ]
-"14846" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseLongArrayElements)<SUB>3055</SUB>> ]
-"14849" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseFloatArrayElements)<SUB>3056</SUB>> ]
-"14852" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseDoubleArrayElements)<SUB>3057</SUB>> ]
-"14855" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetBooleanArrayRegion)<SUB>3058</SUB>> ]
-"14858" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetByteArrayRegion)<SUB>3059</SUB>> ]
-"14861" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetCharArrayRegion)<SUB>3060</SUB>> ]
-"14864" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetShortArrayRegion)<SUB>3061</SUB>> ]
-"14867" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetIntArrayRegion)<SUB>3062</SUB>> ]
-"14870" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetLongArrayRegion)<SUB>3063</SUB>> ]
-"14873" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetFloatArrayRegion)<SUB>3064</SUB>> ]
-"14876" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetDoubleArrayRegion)<SUB>3065</SUB>> ]
-"14879" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetBooleanArrayRegion)<SUB>3066</SUB>> ]
-"14882" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetByteArrayRegion)<SUB>3067</SUB>> ]
-"14885" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetCharArrayRegion)<SUB>3068</SUB>> ]
-"14888" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetShortArrayRegion)<SUB>3069</SUB>> ]
-"14891" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetIntArrayRegion)<SUB>3070</SUB>> ]
-"14894" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetLongArrayRegion)<SUB>3071</SUB>> ]
-"14897" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetFloatArrayRegion)<SUB>3072</SUB>> ]
-"14900" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetDoubleArrayRegion)<SUB>3073</SUB>> ]
-"14903" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::RegisterNatives)<SUB>3074</SUB>> ]
-"14906" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::UnregisterNatives)<SUB>3075</SUB>> ]
-"14909" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::MonitorEnter)<SUB>3076</SUB>> ]
-"14912" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::MonitorExit)<SUB>3077</SUB>> ]
-"14915" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetJavaVM)<SUB>3078</SUB>> ]
-"14918" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringRegion)<SUB>3079</SUB>> ]
-"14921" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringUTFRegion)<SUB>3080</SUB>> ]
-"14924" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetPrimitiveArrayCritical)<SUB>3081</SUB>> ]
-"14927" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleasePrimitiveArrayCritical)<SUB>3082</SUB>> ]
-"14930" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringCritical)<SUB>3083</SUB>> ]
-"14933" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseStringCritical)<SUB>3084</SUB>> ]
-"14936" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewWeakGlobalRef)<SUB>3085</SUB>> ]
-"14939" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::DeleteWeakGlobalRef)<SUB>3086</SUB>> ]
-"14942" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ExceptionCheck)<SUB>3087</SUB>> ]
-"14945" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewDirectByteBuffer)<SUB>3088</SUB>> ]
-"14948" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetDirectBufferAddress)<SUB>3089</SUB>> ]
-"14951" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetDirectBufferCapacity)<SUB>3090</SUB>> ]
-"14954" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetObjectRefType)<SUB>3091</SUB>> ]
-"14272" [label = <(FIELD_IDENTIFIER,GetVersion,GetVersion)<SUB>2863</SUB>> ]
-"14275" [label = <(FIELD_IDENTIFIER,DefineClass,DefineClass)<SUB>2864</SUB>> ]
-"14278" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>2865</SUB>> ]
-"14281" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>2866</SUB>> ]
-"14284" [label = <(FIELD_IDENTIFIER,FromReflectedField,FromReflectedField)<SUB>2867</SUB>> ]
-"14287" [label = <(FIELD_IDENTIFIER,ToReflectedMethod,ToReflectedMethod)<SUB>2868</SUB>> ]
-"14290" [label = <(FIELD_IDENTIFIER,GetSuperclass,GetSuperclass)<SUB>2869</SUB>> ]
-"14293" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2870</SUB>> ]
-"14296" [label = <(FIELD_IDENTIFIER,ToReflectedField,ToReflectedField)<SUB>2871</SUB>> ]
-"14299" [label = <(FIELD_IDENTIFIER,Throw,Throw)<SUB>2872</SUB>> ]
-"14302" [label = <(FIELD_IDENTIFIER,ThrowNew,ThrowNew)<SUB>2873</SUB>> ]
-"14305" [label = <(FIELD_IDENTIFIER,ExceptionOccurred,ExceptionOccurred)<SUB>2874</SUB>> ]
-"14308" [label = <(FIELD_IDENTIFIER,ExceptionDescribe,ExceptionDescribe)<SUB>2875</SUB>> ]
-"14311" [label = <(FIELD_IDENTIFIER,ExceptionClear,ExceptionClear)<SUB>2876</SUB>> ]
-"14314" [label = <(FIELD_IDENTIFIER,FatalError,FatalError)<SUB>2877</SUB>> ]
-"14317" [label = <(FIELD_IDENTIFIER,PushLocalFrame,PushLocalFrame)<SUB>2878</SUB>> ]
-"14320" [label = <(FIELD_IDENTIFIER,PopLocalFrame,PopLocalFrame)<SUB>2879</SUB>> ]
-"14323" [label = <(FIELD_IDENTIFIER,NewGlobalRef,NewGlobalRef)<SUB>2880</SUB>> ]
-"14326" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>2881</SUB>> ]
-"14329" [label = <(FIELD_IDENTIFIER,DeleteLocalRef,DeleteLocalRef)<SUB>2882</SUB>> ]
-"14332" [label = <(FIELD_IDENTIFIER,IsSameObject,IsSameObject)<SUB>2883</SUB>> ]
-"14335" [label = <(FIELD_IDENTIFIER,NewLocalRef,NewLocalRef)<SUB>2884</SUB>> ]
-"14338" [label = <(FIELD_IDENTIFIER,EnsureLocalCapacity,EnsureLocalCapacity)<SUB>2885</SUB>> ]
-"14341" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>2886</SUB>> ]
-"14344" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2887</SUB>> ]
-"14347" [label = <(FIELD_IDENTIFIER,NewObjectV,NewObjectV)<SUB>2888</SUB>> ]
-"14350" [label = <(FIELD_IDENTIFIER,NewObjectA,NewObjectA)<SUB>2889</SUB>> ]
-"14353" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>2890</SUB>> ]
-"14356" [label = <(FIELD_IDENTIFIER,IsInstanceOf,IsInstanceOf)<SUB>2891</SUB>> ]
-"14359" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>2892</SUB>> ]
-"14362" [label = <(FIELD_IDENTIFIER,CallObjectMethod,CallObjectMethod)<SUB>2893</SUB>> ]
-"14365" [label = <(FIELD_IDENTIFIER,CallObjectMethodV,CallObjectMethodV)<SUB>2894</SUB>> ]
-"14368" [label = <(FIELD_IDENTIFIER,CallObjectMethodA,CallObjectMethodA)<SUB>2895</SUB>> ]
-"14371" [label = <(FIELD_IDENTIFIER,CallBooleanMethod,CallBooleanMethod)<SUB>2896</SUB>> ]
-"14374" [label = <(FIELD_IDENTIFIER,CallBooleanMethodV,CallBooleanMethodV)<SUB>2897</SUB>> ]
-"14377" [label = <(FIELD_IDENTIFIER,CallBooleanMethodA,CallBooleanMethodA)<SUB>2898</SUB>> ]
-"14380" [label = <(FIELD_IDENTIFIER,CallByteMethod,CallByteMethod)<SUB>2899</SUB>> ]
-"14383" [label = <(FIELD_IDENTIFIER,CallByteMethodV,CallByteMethodV)<SUB>2900</SUB>> ]
-"14386" [label = <(FIELD_IDENTIFIER,CallByteMethodA,CallByteMethodA)<SUB>2901</SUB>> ]
-"14389" [label = <(FIELD_IDENTIFIER,CallCharMethod,CallCharMethod)<SUB>2902</SUB>> ]
-"14392" [label = <(FIELD_IDENTIFIER,CallCharMethodV,CallCharMethodV)<SUB>2903</SUB>> ]
-"14395" [label = <(FIELD_IDENTIFIER,CallCharMethodA,CallCharMethodA)<SUB>2904</SUB>> ]
-"14398" [label = <(FIELD_IDENTIFIER,CallShortMethod,CallShortMethod)<SUB>2905</SUB>> ]
-"14401" [label = <(FIELD_IDENTIFIER,CallShortMethodV,CallShortMethodV)<SUB>2906</SUB>> ]
-"14404" [label = <(FIELD_IDENTIFIER,CallShortMethodA,CallShortMethodA)<SUB>2907</SUB>> ]
-"14407" [label = <(FIELD_IDENTIFIER,CallIntMethod,CallIntMethod)<SUB>2908</SUB>> ]
-"14410" [label = <(FIELD_IDENTIFIER,CallIntMethodV,CallIntMethodV)<SUB>2909</SUB>> ]
-"14413" [label = <(FIELD_IDENTIFIER,CallIntMethodA,CallIntMethodA)<SUB>2910</SUB>> ]
-"14416" [label = <(FIELD_IDENTIFIER,CallLongMethod,CallLongMethod)<SUB>2911</SUB>> ]
-"14419" [label = <(FIELD_IDENTIFIER,CallLongMethodV,CallLongMethodV)<SUB>2912</SUB>> ]
-"14422" [label = <(FIELD_IDENTIFIER,CallLongMethodA,CallLongMethodA)<SUB>2913</SUB>> ]
-"14425" [label = <(FIELD_IDENTIFIER,CallFloatMethod,CallFloatMethod)<SUB>2914</SUB>> ]
-"14428" [label = <(FIELD_IDENTIFIER,CallFloatMethodV,CallFloatMethodV)<SUB>2915</SUB>> ]
-"14431" [label = <(FIELD_IDENTIFIER,CallFloatMethodA,CallFloatMethodA)<SUB>2916</SUB>> ]
-"14434" [label = <(FIELD_IDENTIFIER,CallDoubleMethod,CallDoubleMethod)<SUB>2917</SUB>> ]
-"14437" [label = <(FIELD_IDENTIFIER,CallDoubleMethodV,CallDoubleMethodV)<SUB>2918</SUB>> ]
-"14440" [label = <(FIELD_IDENTIFIER,CallDoubleMethodA,CallDoubleMethodA)<SUB>2919</SUB>> ]
-"14443" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>2920</SUB>> ]
-"14446" [label = <(FIELD_IDENTIFIER,CallVoidMethodV,CallVoidMethodV)<SUB>2921</SUB>> ]
-"14449" [label = <(FIELD_IDENTIFIER,CallVoidMethodA,CallVoidMethodA)<SUB>2922</SUB>> ]
-"14452" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethod,CallNonvirtualObjectMethod)<SUB>2923</SUB>> ]
-"14455" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodV,CallNonvirtualObjectMethodV)<SUB>2924</SUB>> ]
-"14458" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodA,CallNonvirtualObjectMethodA)<SUB>2925</SUB>> ]
-"14461" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethod,CallNonvirtualBooleanMethod)<SUB>2926</SUB>> ]
-"14464" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodV,CallNonvirtualBooleanMethodV)<SUB>2927</SUB>> ]
-"14467" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodA,CallNonvirtualBooleanMethodA)<SUB>2928</SUB>> ]
-"14470" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethod,CallNonvirtualByteMethod)<SUB>2929</SUB>> ]
-"14473" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodV,CallNonvirtualByteMethodV)<SUB>2930</SUB>> ]
-"14476" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodA,CallNonvirtualByteMethodA)<SUB>2931</SUB>> ]
-"14479" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethod,CallNonvirtualCharMethod)<SUB>2932</SUB>> ]
-"14482" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodV,CallNonvirtualCharMethodV)<SUB>2933</SUB>> ]
-"14485" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodA,CallNonvirtualCharMethodA)<SUB>2934</SUB>> ]
-"14488" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethod,CallNonvirtualShortMethod)<SUB>2935</SUB>> ]
-"14491" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodV,CallNonvirtualShortMethodV)<SUB>2936</SUB>> ]
-"14494" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodA,CallNonvirtualShortMethodA)<SUB>2937</SUB>> ]
-"14497" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethod,CallNonvirtualIntMethod)<SUB>2938</SUB>> ]
-"14500" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodV,CallNonvirtualIntMethodV)<SUB>2939</SUB>> ]
-"14503" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodA,CallNonvirtualIntMethodA)<SUB>2940</SUB>> ]
-"14506" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethod,CallNonvirtualLongMethod)<SUB>2941</SUB>> ]
-"14509" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodV,CallNonvirtualLongMethodV)<SUB>2942</SUB>> ]
-"14512" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodA,CallNonvirtualLongMethodA)<SUB>2943</SUB>> ]
-"14515" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethod,CallNonvirtualFloatMethod)<SUB>2944</SUB>> ]
-"14518" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodV,CallNonvirtualFloatMethodV)<SUB>2945</SUB>> ]
-"14521" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodA,CallNonvirtualFloatMethodA)<SUB>2946</SUB>> ]
-"14524" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethod,CallNonvirtualDoubleMethod)<SUB>2947</SUB>> ]
-"14527" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodV,CallNonvirtualDoubleMethodV)<SUB>2948</SUB>> ]
-"14530" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodA,CallNonvirtualDoubleMethodA)<SUB>2949</SUB>> ]
-"14533" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethod,CallNonvirtualVoidMethod)<SUB>2950</SUB>> ]
-"14536" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV)<SUB>2951</SUB>> ]
-"14539" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA)<SUB>2952</SUB>> ]
-"14542" [label = <(FIELD_IDENTIFIER,GetFieldID,GetFieldID)<SUB>2953</SUB>> ]
-"14545" [label = <(FIELD_IDENTIFIER,GetObjectField,GetObjectField)<SUB>2954</SUB>> ]
-"14548" [label = <(FIELD_IDENTIFIER,GetBooleanField,GetBooleanField)<SUB>2955</SUB>> ]
-"14551" [label = <(FIELD_IDENTIFIER,GetByteField,GetByteField)<SUB>2956</SUB>> ]
-"14554" [label = <(FIELD_IDENTIFIER,GetCharField,GetCharField)<SUB>2957</SUB>> ]
-"14557" [label = <(FIELD_IDENTIFIER,GetShortField,GetShortField)<SUB>2958</SUB>> ]
-"14560" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2959</SUB>> ]
-"14563" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2960</SUB>> ]
-"14566" [label = <(FIELD_IDENTIFIER,GetFloatField,GetFloatField)<SUB>2961</SUB>> ]
-"14569" [label = <(FIELD_IDENTIFIER,GetDoubleField,GetDoubleField)<SUB>2962</SUB>> ]
-"14572" [label = <(FIELD_IDENTIFIER,SetObjectField,SetObjectField)<SUB>2963</SUB>> ]
-"14575" [label = <(FIELD_IDENTIFIER,SetBooleanField,SetBooleanField)<SUB>2964</SUB>> ]
-"14578" [label = <(FIELD_IDENTIFIER,SetByteField,SetByteField)<SUB>2965</SUB>> ]
-"14581" [label = <(FIELD_IDENTIFIER,SetCharField,SetCharField)<SUB>2966</SUB>> ]
-"14584" [label = <(FIELD_IDENTIFIER,SetShortField,SetShortField)<SUB>2967</SUB>> ]
-"14587" [label = <(FIELD_IDENTIFIER,SetIntField,SetIntField)<SUB>2968</SUB>> ]
-"14590" [label = <(FIELD_IDENTIFIER,SetLongField,SetLongField)<SUB>2969</SUB>> ]
-"14593" [label = <(FIELD_IDENTIFIER,SetFloatField,SetFloatField)<SUB>2970</SUB>> ]
-"14596" [label = <(FIELD_IDENTIFIER,SetDoubleField,SetDoubleField)<SUB>2971</SUB>> ]
-"14599" [label = <(FIELD_IDENTIFIER,GetStaticMethodID,GetStaticMethodID)<SUB>2972</SUB>> ]
-"14602" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethod,CallStaticObjectMethod)<SUB>2973</SUB>> ]
-"14605" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodV,CallStaticObjectMethodV)<SUB>2974</SUB>> ]
-"14608" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodA,CallStaticObjectMethodA)<SUB>2975</SUB>> ]
-"14611" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethod,CallStaticBooleanMethod)<SUB>2976</SUB>> ]
-"14614" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodV,CallStaticBooleanMethodV)<SUB>2977</SUB>> ]
-"14617" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodA,CallStaticBooleanMethodA)<SUB>2978</SUB>> ]
-"14620" [label = <(FIELD_IDENTIFIER,CallStaticByteMethod,CallStaticByteMethod)<SUB>2979</SUB>> ]
-"14623" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodV,CallStaticByteMethodV)<SUB>2980</SUB>> ]
-"14626" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodA,CallStaticByteMethodA)<SUB>2981</SUB>> ]
-"14629" [label = <(FIELD_IDENTIFIER,CallStaticCharMethod,CallStaticCharMethod)<SUB>2982</SUB>> ]
-"14632" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodV,CallStaticCharMethodV)<SUB>2983</SUB>> ]
-"14635" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodA,CallStaticCharMethodA)<SUB>2984</SUB>> ]
-"14638" [label = <(FIELD_IDENTIFIER,CallStaticShortMethod,CallStaticShortMethod)<SUB>2985</SUB>> ]
-"14641" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodV,CallStaticShortMethodV)<SUB>2986</SUB>> ]
-"14644" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodA,CallStaticShortMethodA)<SUB>2987</SUB>> ]
-"14647" [label = <(FIELD_IDENTIFIER,CallStaticIntMethod,CallStaticIntMethod)<SUB>2988</SUB>> ]
-"14650" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodV,CallStaticIntMethodV)<SUB>2989</SUB>> ]
-"14653" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodA,CallStaticIntMethodA)<SUB>2990</SUB>> ]
-"14656" [label = <(FIELD_IDENTIFIER,CallStaticLongMethod,CallStaticLongMethod)<SUB>2991</SUB>> ]
-"14659" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodV,CallStaticLongMethodV)<SUB>2992</SUB>> ]
-"14662" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodA,CallStaticLongMethodA)<SUB>2993</SUB>> ]
-"14665" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethod,CallStaticFloatMethod)<SUB>2994</SUB>> ]
-"14668" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodV,CallStaticFloatMethodV)<SUB>2995</SUB>> ]
-"14671" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodA,CallStaticFloatMethodA)<SUB>2996</SUB>> ]
-"14674" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethod,CallStaticDoubleMethod)<SUB>2997</SUB>> ]
-"14677" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodV,CallStaticDoubleMethodV)<SUB>2998</SUB>> ]
-"14680" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodA,CallStaticDoubleMethodA)<SUB>2999</SUB>> ]
-"14683" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethod,CallStaticVoidMethod)<SUB>3000</SUB>> ]
-"14686" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodV,CallStaticVoidMethodV)<SUB>3001</SUB>> ]
-"14689" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodA,CallStaticVoidMethodA)<SUB>3002</SUB>> ]
-"14692" [label = <(FIELD_IDENTIFIER,GetStaticFieldID,GetStaticFieldID)<SUB>3003</SUB>> ]
-"14695" [label = <(FIELD_IDENTIFIER,GetStaticObjectField,GetStaticObjectField)<SUB>3004</SUB>> ]
-"14698" [label = <(FIELD_IDENTIFIER,GetStaticBooleanField,GetStaticBooleanField)<SUB>3005</SUB>> ]
-"14701" [label = <(FIELD_IDENTIFIER,GetStaticByteField,GetStaticByteField)<SUB>3006</SUB>> ]
-"14704" [label = <(FIELD_IDENTIFIER,GetStaticCharField,GetStaticCharField)<SUB>3007</SUB>> ]
-"14707" [label = <(FIELD_IDENTIFIER,GetStaticShortField,GetStaticShortField)<SUB>3008</SUB>> ]
-"14710" [label = <(FIELD_IDENTIFIER,GetStaticIntField,GetStaticIntField)<SUB>3009</SUB>> ]
-"14713" [label = <(FIELD_IDENTIFIER,GetStaticLongField,GetStaticLongField)<SUB>3010</SUB>> ]
-"14716" [label = <(FIELD_IDENTIFIER,GetStaticFloatField,GetStaticFloatField)<SUB>3011</SUB>> ]
-"14719" [label = <(FIELD_IDENTIFIER,GetStaticDoubleField,GetStaticDoubleField)<SUB>3012</SUB>> ]
-"14722" [label = <(FIELD_IDENTIFIER,SetStaticObjectField,SetStaticObjectField)<SUB>3013</SUB>> ]
-"14725" [label = <(FIELD_IDENTIFIER,SetStaticBooleanField,SetStaticBooleanField)<SUB>3014</SUB>> ]
-"14728" [label = <(FIELD_IDENTIFIER,SetStaticByteField,SetStaticByteField)<SUB>3015</SUB>> ]
-"14731" [label = <(FIELD_IDENTIFIER,SetStaticCharField,SetStaticCharField)<SUB>3016</SUB>> ]
-"14734" [label = <(FIELD_IDENTIFIER,SetStaticShortField,SetStaticShortField)<SUB>3017</SUB>> ]
-"14737" [label = <(FIELD_IDENTIFIER,SetStaticIntField,SetStaticIntField)<SUB>3018</SUB>> ]
-"14740" [label = <(FIELD_IDENTIFIER,SetStaticLongField,SetStaticLongField)<SUB>3019</SUB>> ]
-"14743" [label = <(FIELD_IDENTIFIER,SetStaticFloatField,SetStaticFloatField)<SUB>3020</SUB>> ]
-"14746" [label = <(FIELD_IDENTIFIER,SetStaticDoubleField,SetStaticDoubleField)<SUB>3021</SUB>> ]
-"14749" [label = <(FIELD_IDENTIFIER,NewString,NewString)<SUB>3022</SUB>> ]
-"14752" [label = <(FIELD_IDENTIFIER,GetStringLength,GetStringLength)<SUB>3023</SUB>> ]
-"14755" [label = <(FIELD_IDENTIFIER,GetStringChars,GetStringChars)<SUB>3024</SUB>> ]
-"14758" [label = <(FIELD_IDENTIFIER,ReleaseStringChars,ReleaseStringChars)<SUB>3025</SUB>> ]
-"14761" [label = <(FIELD_IDENTIFIER,NewStringUTF,NewStringUTF)<SUB>3026</SUB>> ]
-"14764" [label = <(FIELD_IDENTIFIER,GetStringUTFLength,GetStringUTFLength)<SUB>3027</SUB>> ]
-"14767" [label = <(FIELD_IDENTIFIER,GetStringUTFChars,GetStringUTFChars)<SUB>3028</SUB>> ]
-"14770" [label = <(FIELD_IDENTIFIER,ReleaseStringUTFChars,ReleaseStringUTFChars)<SUB>3029</SUB>> ]
-"14773" [label = <(FIELD_IDENTIFIER,GetArrayLength,GetArrayLength)<SUB>3030</SUB>> ]
-"14776" [label = <(FIELD_IDENTIFIER,NewObjectArray,NewObjectArray)<SUB>3031</SUB>> ]
-"14779" [label = <(FIELD_IDENTIFIER,GetObjectArrayElement,GetObjectArrayElement)<SUB>3032</SUB>> ]
-"14782" [label = <(FIELD_IDENTIFIER,SetObjectArrayElement,SetObjectArrayElement)<SUB>3033</SUB>> ]
-"14785" [label = <(FIELD_IDENTIFIER,NewBooleanArray,NewBooleanArray)<SUB>3034</SUB>> ]
-"14788" [label = <(FIELD_IDENTIFIER,NewByteArray,NewByteArray)<SUB>3035</SUB>> ]
-"14791" [label = <(FIELD_IDENTIFIER,NewCharArray,NewCharArray)<SUB>3036</SUB>> ]
-"14794" [label = <(FIELD_IDENTIFIER,NewShortArray,NewShortArray)<SUB>3037</SUB>> ]
-"14797" [label = <(FIELD_IDENTIFIER,NewIntArray,NewIntArray)<SUB>3038</SUB>> ]
-"14800" [label = <(FIELD_IDENTIFIER,NewLongArray,NewLongArray)<SUB>3039</SUB>> ]
-"14803" [label = <(FIELD_IDENTIFIER,NewFloatArray,NewFloatArray)<SUB>3040</SUB>> ]
-"14806" [label = <(FIELD_IDENTIFIER,NewDoubleArray,NewDoubleArray)<SUB>3041</SUB>> ]
-"14809" [label = <(FIELD_IDENTIFIER,GetBooleanArrayElements,GetBooleanArrayElements)<SUB>3042</SUB>> ]
-"14812" [label = <(FIELD_IDENTIFIER,GetByteArrayElements,GetByteArrayElements)<SUB>3043</SUB>> ]
-"14815" [label = <(FIELD_IDENTIFIER,GetCharArrayElements,GetCharArrayElements)<SUB>3044</SUB>> ]
-"14818" [label = <(FIELD_IDENTIFIER,GetShortArrayElements,GetShortArrayElements)<SUB>3045</SUB>> ]
-"14821" [label = <(FIELD_IDENTIFIER,GetIntArrayElements,GetIntArrayElements)<SUB>3046</SUB>> ]
-"14824" [label = <(FIELD_IDENTIFIER,GetLongArrayElements,GetLongArrayElements)<SUB>3047</SUB>> ]
-"14827" [label = <(FIELD_IDENTIFIER,GetFloatArrayElements,GetFloatArrayElements)<SUB>3048</SUB>> ]
-"14830" [label = <(FIELD_IDENTIFIER,GetDoubleArrayElements,GetDoubleArrayElements)<SUB>3049</SUB>> ]
-"14833" [label = <(FIELD_IDENTIFIER,ReleaseBooleanArrayElements,ReleaseBooleanArrayElements)<SUB>3050</SUB>> ]
-"14836" [label = <(FIELD_IDENTIFIER,ReleaseByteArrayElements,ReleaseByteArrayElements)<SUB>3051</SUB>> ]
-"14839" [label = <(FIELD_IDENTIFIER,ReleaseCharArrayElements,ReleaseCharArrayElements)<SUB>3052</SUB>> ]
-"14842" [label = <(FIELD_IDENTIFIER,ReleaseShortArrayElements,ReleaseShortArrayElements)<SUB>3053</SUB>> ]
-"14845" [label = <(FIELD_IDENTIFIER,ReleaseIntArrayElements,ReleaseIntArrayElements)<SUB>3054</SUB>> ]
-"14848" [label = <(FIELD_IDENTIFIER,ReleaseLongArrayElements,ReleaseLongArrayElements)<SUB>3055</SUB>> ]
-"14851" [label = <(FIELD_IDENTIFIER,ReleaseFloatArrayElements,ReleaseFloatArrayElements)<SUB>3056</SUB>> ]
-"14854" [label = <(FIELD_IDENTIFIER,ReleaseDoubleArrayElements,ReleaseDoubleArrayElements)<SUB>3057</SUB>> ]
-"14857" [label = <(FIELD_IDENTIFIER,GetBooleanArrayRegion,GetBooleanArrayRegion)<SUB>3058</SUB>> ]
-"14860" [label = <(FIELD_IDENTIFIER,GetByteArrayRegion,GetByteArrayRegion)<SUB>3059</SUB>> ]
-"14863" [label = <(FIELD_IDENTIFIER,GetCharArrayRegion,GetCharArrayRegion)<SUB>3060</SUB>> ]
-"14866" [label = <(FIELD_IDENTIFIER,GetShortArrayRegion,GetShortArrayRegion)<SUB>3061</SUB>> ]
-"14869" [label = <(FIELD_IDENTIFIER,GetIntArrayRegion,GetIntArrayRegion)<SUB>3062</SUB>> ]
-"14872" [label = <(FIELD_IDENTIFIER,GetLongArrayRegion,GetLongArrayRegion)<SUB>3063</SUB>> ]
-"14875" [label = <(FIELD_IDENTIFIER,GetFloatArrayRegion,GetFloatArrayRegion)<SUB>3064</SUB>> ]
-"14878" [label = <(FIELD_IDENTIFIER,GetDoubleArrayRegion,GetDoubleArrayRegion)<SUB>3065</SUB>> ]
-"14881" [label = <(FIELD_IDENTIFIER,SetBooleanArrayRegion,SetBooleanArrayRegion)<SUB>3066</SUB>> ]
-"14884" [label = <(FIELD_IDENTIFIER,SetByteArrayRegion,SetByteArrayRegion)<SUB>3067</SUB>> ]
-"14887" [label = <(FIELD_IDENTIFIER,SetCharArrayRegion,SetCharArrayRegion)<SUB>3068</SUB>> ]
-"14890" [label = <(FIELD_IDENTIFIER,SetShortArrayRegion,SetShortArrayRegion)<SUB>3069</SUB>> ]
-"14893" [label = <(FIELD_IDENTIFIER,SetIntArrayRegion,SetIntArrayRegion)<SUB>3070</SUB>> ]
-"14896" [label = <(FIELD_IDENTIFIER,SetLongArrayRegion,SetLongArrayRegion)<SUB>3071</SUB>> ]
-"14899" [label = <(FIELD_IDENTIFIER,SetFloatArrayRegion,SetFloatArrayRegion)<SUB>3072</SUB>> ]
-"14902" [label = <(FIELD_IDENTIFIER,SetDoubleArrayRegion,SetDoubleArrayRegion)<SUB>3073</SUB>> ]
-"14905" [label = <(FIELD_IDENTIFIER,RegisterNatives,RegisterNatives)<SUB>3074</SUB>> ]
-"14908" [label = <(FIELD_IDENTIFIER,UnregisterNatives,UnregisterNatives)<SUB>3075</SUB>> ]
-"14911" [label = <(FIELD_IDENTIFIER,MonitorEnter,MonitorEnter)<SUB>3076</SUB>> ]
-"14914" [label = <(FIELD_IDENTIFIER,MonitorExit,MonitorExit)<SUB>3077</SUB>> ]
-"14917" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>3078</SUB>> ]
-"14920" [label = <(FIELD_IDENTIFIER,GetStringRegion,GetStringRegion)<SUB>3079</SUB>> ]
-"14923" [label = <(FIELD_IDENTIFIER,GetStringUTFRegion,GetStringUTFRegion)<SUB>3080</SUB>> ]
-"14926" [label = <(FIELD_IDENTIFIER,GetPrimitiveArrayCritical,GetPrimitiveArrayCritical)<SUB>3081</SUB>> ]
-"14929" [label = <(FIELD_IDENTIFIER,ReleasePrimitiveArrayCritical,ReleasePrimitiveArrayCritical)<SUB>3082</SUB>> ]
-"14932" [label = <(FIELD_IDENTIFIER,GetStringCritical,GetStringCritical)<SUB>3083</SUB>> ]
-"14935" [label = <(FIELD_IDENTIFIER,ReleaseStringCritical,ReleaseStringCritical)<SUB>3084</SUB>> ]
-"14938" [label = <(FIELD_IDENTIFIER,NewWeakGlobalRef,NewWeakGlobalRef)<SUB>3085</SUB>> ]
-"14941" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>3086</SUB>> ]
-"14944" [label = <(FIELD_IDENTIFIER,ExceptionCheck,ExceptionCheck)<SUB>3087</SUB>> ]
-"14947" [label = <(FIELD_IDENTIFIER,NewDirectByteBuffer,NewDirectByteBuffer)<SUB>3088</SUB>> ]
-"14950" [label = <(FIELD_IDENTIFIER,GetDirectBufferAddress,GetDirectBufferAddress)<SUB>3089</SUB>> ]
-"14953" [label = <(FIELD_IDENTIFIER,GetDirectBufferCapacity,GetDirectBufferCapacity)<SUB>3090</SUB>> ]
-"14956" [label = <(FIELD_IDENTIFIER,GetObjectRefType,GetObjectRefType)<SUB>3091</SUB>> ]
-"14261" [label = <(METHOD,&lt;clinit&gt;)> ]
-"14958" [label = <(METHOD_RETURN,ANY)> ]
-  "14263" -> "14958" 
-  "14265" -> "14263" 
+"14260" [label = <(&lt;operator&gt;.assignment,gJniNativeInterface = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 JNIImpl::GetVersion,\012 JNIImpl::DefineClass,\012 JNIImpl::FindClass,\012 JNIImpl::FromReflectedMethod,\012 JNIImpl::FromReflectedField,\012 JNIImpl::ToReflectedMethod,\012 JNIImpl::GetSuperclass,\012 JNIImpl::IsAssignableFrom,\012 JNIImpl::ToReflectedField,\012 JNIImpl::Throw,\012 JNIImpl::ThrowNew,\012 JNIImpl::ExceptionOccurred,\012 JNIImpl::ExceptionDescribe,\012 JNIImpl::ExceptionClear,\012 JNIImpl::FatalError,\012 JNIImpl::PushLocalFrame,\012 JNIImpl::PopLocalFrame,\012 JNIImpl::NewGlobalRef,\012 JNIImpl::DeleteGlobalRef,\012 JNIImpl::DeleteLocalRef,\012 JNIImpl::IsSameObject,\012 JNIImpl::NewLocalRef,\012 JNIImpl::EnsureLocalCapacity,\012 JNIImpl::AllocObject,\012 JNIImpl::NewObject,\012 JNIImpl::NewObjectV,\012 JNIImpl::NewObjectA,\012 JNIImpl::GetObjectClass,\012 JNIImpl::IsInstanceOf,\012 JNIImpl::GetMethodID,\012 JNIImpl::CallObjectMethod,\012 JNIImpl::CallObjectMethodV,\012 JNIImpl::CallObjectMethodA,\012 JNIImpl::CallBooleanMethod,\012 JNIImpl::CallBooleanMethodV,\012 JNIImpl::CallBooleanMethodA,\012 JNIImpl::CallByteMethod,\012 JNIImpl::CallByteMethodV,\012 JNIImpl::CallByteMethodA,\012 JNIImpl::CallCharMethod,\012 JNIImpl::CallCharMethodV,\012 JNIImpl::CallCharMethodA,\012 JNIImpl::CallShortMethod,\012 JNIImpl::CallShortMethodV,\012 JNIImpl::CallShortMethodA,\012 JNIImpl::CallIntMethod,\012 JNIImpl::CallIntMethodV,\012 JNIImpl::CallIntMethodA,\012 JNIImpl::CallLongMethod,\012 JNIImpl::CallLongMethodV,\012 JNIImpl::CallLongMethodA,\012 JNIImpl::CallFloatMethod,\012 JNIImpl::CallFloatMethodV,\012 JNIImpl::CallFloatMethodA,\012 JNIImpl::CallDoubleMethod,\012 JNIImpl::CallDoubleMethodV,\012 JNIImpl::CallDoubleMethodA,\012 JNIImpl::CallVoidMethod,\012 JNIImpl::CallVoidMethodV,\012 JNIImpl::CallVoidMethodA,\012 JNIImpl::CallNonvirtualObjectMethod,\012 JNIImpl::CallNonvirtualObjectMethodV,\012 JNIImpl::CallNonvirtualObjectMethodA,\012 JNIImpl::CallNonvirtualBooleanMethod,\012 JNIImpl::CallNonvirtualBooleanMethodV,\012 JNIImpl::CallNonvirtualBooleanMethodA,\012 JNIImpl::CallNonvirtualByteMethod,\012 JNIImpl::CallNonvirtualByteMethodV,\012 JNIImpl::CallNonvirtualByteMethodA,\012 JNIImpl::CallNonvirtualCharMethod,\012 JNIImpl::CallNonvirtualCharMethodV,\012 JNIImpl::CallNonvirtualCharMethodA,\012 JNIImpl::CallNonvirtualShortMethod,\012 JNIImpl::CallNonvirtualShortMethodV,\012 JNIImpl::CallNonvirtualShortMethodA,\012 JNIImpl::CallNonvirtualIntMethod,\012 JNIImpl::CallNonvirtualIntMethodV,\012 JNIImpl::CallNonvirtualIntMethodA,\012 JNIImpl::CallNonvirtualLongMethod,\012 JNIImpl::CallNonvirtualLongMethodV,\012 JNIImpl::CallNonvirtualLongMethodA,\012 JNIImpl::CallNonvirtualFloatMethod,\012 JNIImpl::CallNonvirtualFloatMethodV,\012 JNIImpl::CallNonvirtualFloatMethodA,\012 JNIImpl::CallNonvirtualDoubleMethod,\012 JNIImpl::CallNonvirtualDoubleMethodV,\012 JNIImpl::CallNonvirtualDoubleMethodA,\012 JNIImpl::CallNonvirtualVoidMethod,\012 JNIImpl::CallNonvirtualVoidMethodV,\012 JNIImpl::CallNonvirtualVoidMethodA,\012 JNIImpl::GetFieldID,\012 JNIImpl::GetObjectField,\012 JNIImpl::GetBooleanField,\012 JNIImpl::GetByteField,\012 JNIImpl::GetCharField,\012 JNIImpl::GetShortField,\012 JNIImpl::GetIntField,\012 JNIImpl::GetLongField,\012 JNIImpl::GetFloatField,\012 JNIImpl::GetDoubleField,\012 JNIImpl::SetObjectField,\012 JNIImpl::SetBooleanField,\012 JNIImpl::SetByteField,\012 JNIImpl::SetCharField,\012 JNIImpl::SetShortField,\012 JNIImpl::SetIntField,\012 JNIImpl::SetLongField,\012 JNIImpl::SetFloatField,\012 JNIImpl::SetDoubleField,\012 JNIImpl::GetStaticMethodID,\012 JNIImpl::CallStaticObjectMethod,\012 JNIImpl::CallStaticObjectMethodV,\012 JNIImpl::CallStaticObjectMethodA,\012 JNIImpl::CallStaticBooleanMethod,\012 JNIImpl::CallStaticBooleanMethodV,\012 JNIImpl::CallStaticBooleanMethodA,\012 JNIImpl::CallStaticByteMethod,\012 JNIImpl::CallStaticByteMethodV,\012 JNIImpl::CallStaticByteMethodA,\012 JNIImpl::CallStaticCharMethod,\012 JNIImpl::CallStaticCharMethodV,\012 JNIImpl::CallStaticCharMethodA,\012 JNIImpl::CallStaticShortMethod,\012 JNIImpl::CallStaticShortMethodV,\012 JNIImpl::CallStaticShortMethodA,\012 JNIImpl::CallStaticIntMethod,\012 JNIImpl::CallStaticIntMethodV,\012 JNIImpl::CallStaticIntMethodA,\012 JNIImpl::CallStaticLongMethod,\012 JNIImpl::CallStaticLongMethodV,\012 JNIImpl::CallStaticLongMethodA,\012 JNIImpl::CallStaticFloatMethod,\012 JNIImpl::CallStaticFloatMethodV,\012 JNIImpl::CallStaticFloatMethodA,\012 JNIImpl::CallStaticDoubleMethod,\012 JNIImpl::CallStaticDoubleMethodV,\012 JNIImpl::CallStaticDoubleMethodA,\012 JNIImpl::CallStaticVoidMethod,\012 JNIImpl::CallStaticVoidMethodV,\012 JNIImpl::CallStaticVoidMethodA,\012 JNIImpl::GetStaticFieldID,\012 JNIImpl::GetStaticObjectField,\012 JNIImpl::GetStaticBooleanField,\012 JNIImpl::GetStaticByteField,\012 JNIImpl::GetStaticCharField,\012 JNIImpl::GetStaticShortField,\012 JNIImpl::GetStaticIntField,\012 JNIImpl::GetStaticLongField,\012 JNIImpl::GetStaticFloatField,\012 JNIImpl::GetStaticDoubleField,\012 JNIImpl::SetStaticObjectField,\012 JNIImpl::SetStaticBooleanField,\012 JNIImpl::SetStaticByteField,\012 JNIImpl::SetStaticCharField,\012 JNIImpl::SetStaticShortField,\012 JNIImpl::SetStaticIntField,\012 JNIImpl::SetStaticLongField,\012 JNIImpl::SetStaticFloatField,\012 JNIImpl::SetStaticDoubleField,\012 JNIImpl::NewString,\012 JNIImpl::GetStringLength,\012 JNIImpl::GetStringChars,\012 JNIImpl::ReleaseStringChars,\012 JNIImpl::NewStringUTF,\012 JNIImpl::GetStringUTFLength,\012 JNIImpl::GetStringUTFChars,\012 JNIImpl::ReleaseStringUTFChars,\012 JNIImpl::GetArrayLength,\012 JNIImpl::NewObjectArray,\012 JNIImpl::GetObjectArrayElement,\012 JNIImpl::SetObjectArrayElement,\012 JNIImpl::NewBooleanArray,\012 JNIImpl::NewByteArray,\012 JNIImpl::NewCharArray,\012 JNIImpl::NewShortArray,\012 JNIImpl::NewIntArray,\012 JNIImpl::NewLongArray,\012 JNIImpl::NewFloatArray,\012 JNIImpl::NewDoubleArray,\012 JNIImpl::GetBooleanArrayElements,\012 JNIImpl::GetByteArrayElements,\012 JNIImpl::GetCharArrayElements,\012 JNIImpl::GetShortArrayElements,\012 JNIImpl::GetIntArrayElements,\012 JNIImpl::GetLongArrayElements,\012 JNIImpl::GetFloatArrayElements,\012 JNIImpl::GetDoubleArrayElements,\012 JNIImpl::ReleaseBooleanArrayElements,\012 JNIImpl::ReleaseByteArrayElements,\012 JNIImpl::ReleaseCharArrayElements,\012 JNIImpl::ReleaseShortArrayElements,\012 JNIImpl::ReleaseIntArrayElements,\012 JNIImpl::ReleaseLongArrayElements,\012 JNIImpl::ReleaseFloatArrayElements,\012 JNIImpl::ReleaseDoubleArrayElements,\012 JNIImpl::GetBooleanArrayRegion,\012 JNIImpl::GetByteArrayRegion,\012 JNIImpl::GetCharArrayRegion,\012 JNIImpl::GetShortArrayRegion,\012 JNIImpl::GetIntArrayRegion,\012 JNIImpl::GetLongArrayRegion,\012 JNIImpl::GetFloatArrayRegion,\012 JNIImpl::GetDoubleArrayRegion,\012 JNIImpl::SetBooleanArrayRegion,\012 JNIImpl::SetByteArrayRegion,\012 JNIImpl::SetCharArrayRegion,\012 JNIImpl::SetShortArrayRegion,\012 JNIImpl::SetIntArrayRegion,\012 JNIImpl::SetLongArrayRegion,\012 JNIImpl::SetFloatArrayRegion,\012 JNIImpl::SetDoubleArrayRegion,\012 JNIImpl::RegisterNatives,\012 JNIImpl::UnregisterNatives,\012 JNIImpl::MonitorEnter,\012 JNIImpl::MonitorExit,\012 JNIImpl::GetJavaVM,\012 JNIImpl::GetStringRegion,\012 JNIImpl::GetStringUTFRegion,\012 JNIImpl::GetPrimitiveArrayCritical,\012 JNIImpl::ReleasePrimitiveArrayCritical,\012 JNIImpl::GetStringCritical,\012 JNIImpl::ReleaseStringCritical,\012 JNIImpl::NewWeakGlobalRef,\012 JNIImpl::DeleteWeakGlobalRef,\012 JNIImpl::ExceptionCheck,\012 JNIImpl::NewDirectByteBuffer,\012 JNIImpl::GetDirectBufferAddress,\012 JNIImpl::GetDirectBufferCapacity,\012 JNIImpl::GetObjectRefType,\012 })<SUB>2856</SUB>> ]
+"14262" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 JNIImpl::GetVersion,\012 JNIImpl::DefineClass,\012 JNIImpl::FindClass,\012 JNIImpl::FromReflectedMethod,\012 JNIImpl::FromReflectedField,\012 JNIImpl::ToReflectedMethod,\012 JNIImpl::GetSuperclass,\012 JNIImpl::IsAssignableFrom,\012 JNIImpl::ToReflectedField,\012 JNIImpl::Throw,\012 JNIImpl::ThrowNew,\012 JNIImpl::ExceptionOccurred,\012 JNIImpl::ExceptionDescribe,\012 JNIImpl::ExceptionClear,\012 JNIImpl::FatalError,\012 JNIImpl::PushLocalFrame,\012 JNIImpl::PopLocalFrame,\012 JNIImpl::NewGlobalRef,\012 JNIImpl::DeleteGlobalRef,\012 JNIImpl::DeleteLocalRef,\012 JNIImpl::IsSameObject,\012 JNIImpl::NewLocalRef,\012 JNIImpl::EnsureLocalCapacity,\012 JNIImpl::AllocObject,\012 JNIImpl::NewObject,\012 JNIImpl::NewObjectV,\012 JNIImpl::NewObjectA,\012 JNIImpl::GetObjectClass,\012 JNIImpl::IsInstanceOf,\012 JNIImpl::GetMethodID,\012 JNIImpl::CallObjectMethod,\012 JNIImpl::CallObjectMethodV,\012 JNIImpl::CallObjectMethodA,\012 JNIImpl::CallBooleanMethod,\012 JNIImpl::CallBooleanMethodV,\012 JNIImpl::CallBooleanMethodA,\012 JNIImpl::CallByteMethod,\012 JNIImpl::CallByteMethodV,\012 JNIImpl::CallByteMethodA,\012 JNIImpl::CallCharMethod,\012 JNIImpl::CallCharMethodV,\012 JNIImpl::CallCharMethodA,\012 JNIImpl::CallShortMethod,\012 JNIImpl::CallShortMethodV,\012 JNIImpl::CallShortMethodA,\012 JNIImpl::CallIntMethod,\012 JNIImpl::CallIntMethodV,\012 JNIImpl::CallIntMethodA,\012 JNIImpl::CallLongMethod,\012 JNIImpl::CallLongMethodV,\012 JNIImpl::CallLongMethodA,\012 JNIImpl::CallFloatMethod,\012 JNIImpl::CallFloatMethodV,\012 JNIImpl::CallFloatMethodA,\012 JNIImpl::CallDoubleMethod,\012 JNIImpl::CallDoubleMethodV,\012 JNIImpl::CallDoubleMethodA,\012 JNIImpl::CallVoidMethod,\012 JNIImpl::CallVoidMethodV,\012 JNIImpl::CallVoidMethodA,\012 JNIImpl::CallNonvirtualObjectMethod,\012 JNIImpl::CallNonvirtualObjectMethodV,\012 JNIImpl::CallNonvirtualObjectMethodA,\012 JNIImpl::CallNonvirtualBooleanMethod,\012 JNIImpl::CallNonvirtualBooleanMethodV,\012 JNIImpl::CallNonvirtualBooleanMethodA,\012 JNIImpl::CallNonvirtualByteMethod,\012 JNIImpl::CallNonvirtualByteMethodV,\012 JNIImpl::CallNonvirtualByteMethodA,\012 JNIImpl::CallNonvirtualCharMethod,\012 JNIImpl::CallNonvirtualCharMethodV,\012 JNIImpl::CallNonvirtualCharMethodA,\012 JNIImpl::CallNonvirtualShortMethod,\012 JNIImpl::CallNonvirtualShortMethodV,\012 JNIImpl::CallNonvirtualShortMethodA,\012 JNIImpl::CallNonvirtualIntMethod,\012 JNIImpl::CallNonvirtualIntMethodV,\012 JNIImpl::CallNonvirtualIntMethodA,\012 JNIImpl::CallNonvirtualLongMethod,\012 JNIImpl::CallNonvirtualLongMethodV,\012 JNIImpl::CallNonvirtualLongMethodA,\012 JNIImpl::CallNonvirtualFloatMethod,\012 JNIImpl::CallNonvirtualFloatMethodV,\012 JNIImpl::CallNonvirtualFloatMethodA,\012 JNIImpl::CallNonvirtualDoubleMethod,\012 JNIImpl::CallNonvirtualDoubleMethodV,\012 JNIImpl::CallNonvirtualDoubleMethodA,\012 JNIImpl::CallNonvirtualVoidMethod,\012 JNIImpl::CallNonvirtualVoidMethodV,\012 JNIImpl::CallNonvirtualVoidMethodA,\012 JNIImpl::GetFieldID,\012 JNIImpl::GetObjectField,\012 JNIImpl::GetBooleanField,\012 JNIImpl::GetByteField,\012 JNIImpl::GetCharField,\012 JNIImpl::GetShortField,\012 JNIImpl::GetIntField,\012 JNIImpl::GetLongField,\012 JNIImpl::GetFloatField,\012 JNIImpl::GetDoubleField,\012 JNIImpl::SetObjectField,\012 JNIImpl::SetBooleanField,\012 JNIImpl::SetByteField,\012 JNIImpl::SetCharField,\012 JNIImpl::SetShortField,\012 JNIImpl::SetIntField,\012 JNIImpl::SetLongField,\012 JNIImpl::SetFloatField,\012 JNIImpl::SetDoubleField,\012 JNIImpl::GetStaticMethodID,\012 JNIImpl::CallStaticObjectMethod,\012 JNIImpl::CallStaticObjectMethodV,\012 JNIImpl::CallStaticObjectMethodA,\012 JNIImpl::CallStaticBooleanMethod,\012 JNIImpl::CallStaticBooleanMethodV,\012 JNIImpl::CallStaticBooleanMethodA,\012 JNIImpl::CallStaticByteMethod,\012 JNIImpl::CallStaticByteMethodV,\012 JNIImpl::CallStaticByteMethodA,\012 JNIImpl::CallStaticCharMethod,\012 JNIImpl::CallStaticCharMethodV,\012 JNIImpl::CallStaticCharMethodA,\012 JNIImpl::CallStaticShortMethod,\012 JNIImpl::CallStaticShortMethodV,\012 JNIImpl::CallStaticShortMethodA,\012 JNIImpl::CallStaticIntMethod,\012 JNIImpl::CallStaticIntMethodV,\012 JNIImpl::CallStaticIntMethodA,\012 JNIImpl::CallStaticLongMethod,\012 JNIImpl::CallStaticLongMethodV,\012 JNIImpl::CallStaticLongMethodA,\012 JNIImpl::CallStaticFloatMethod,\012 JNIImpl::CallStaticFloatMethodV,\012 JNIImpl::CallStaticFloatMethodA,\012 JNIImpl::CallStaticDoubleMethod,\012 JNIImpl::CallStaticDoubleMethodV,\012 JNIImpl::CallStaticDoubleMethodA,\012 JNIImpl::CallStaticVoidMethod,\012 JNIImpl::CallStaticVoidMethodV,\012 JNIImpl::CallStaticVoidMethodA,\012 JNIImpl::GetStaticFieldID,\012 JNIImpl::GetStaticObjectField,\012 JNIImpl::GetStaticBooleanField,\012 JNIImpl::GetStaticByteField,\012 JNIImpl::GetStaticCharField,\012 JNIImpl::GetStaticShortField,\012 JNIImpl::GetStaticIntField,\012 JNIImpl::GetStaticLongField,\012 JNIImpl::GetStaticFloatField,\012 JNIImpl::GetStaticDoubleField,\012 JNIImpl::SetStaticObjectField,\012 JNIImpl::SetStaticBooleanField,\012 JNIImpl::SetStaticByteField,\012 JNIImpl::SetStaticCharField,\012 JNIImpl::SetStaticShortField,\012 JNIImpl::SetStaticIntField,\012 JNIImpl::SetStaticLongField,\012 JNIImpl::SetStaticFloatField,\012 JNIImpl::SetStaticDoubleField,\012 JNIImpl::NewString,\012 JNIImpl::GetStringLength,\012 JNIImpl::GetStringChars,\012 JNIImpl::ReleaseStringChars,\012 JNIImpl::NewStringUTF,\012 JNIImpl::GetStringUTFLength,\012 JNIImpl::GetStringUTFChars,\012 JNIImpl::ReleaseStringUTFChars,\012 JNIImpl::GetArrayLength,\012 JNIImpl::NewObjectArray,\012 JNIImpl::GetObjectArrayElement,\012 JNIImpl::SetObjectArrayElement,\012 JNIImpl::NewBooleanArray,\012 JNIImpl::NewByteArray,\012 JNIImpl::NewCharArray,\012 JNIImpl::NewShortArray,\012 JNIImpl::NewIntArray,\012 JNIImpl::NewLongArray,\012 JNIImpl::NewFloatArray,\012 JNIImpl::NewDoubleArray,\012 JNIImpl::GetBooleanArrayElements,\012 JNIImpl::GetByteArrayElements,\012 JNIImpl::GetCharArrayElements,\012 JNIImpl::GetShortArrayElements,\012 JNIImpl::GetIntArrayElements,\012 JNIImpl::GetLongArrayElements,\012 JNIImpl::GetFloatArrayElements,\012 JNIImpl::GetDoubleArrayElements,\012 JNIImpl::ReleaseBooleanArrayElements,\012 JNIImpl::ReleaseByteArrayElements,\012 JNIImpl::ReleaseCharArrayElements,\012 JNIImpl::ReleaseShortArrayElements,\012 JNIImpl::ReleaseIntArrayElements,\012 JNIImpl::ReleaseLongArrayElements,\012 JNIImpl::ReleaseFloatArrayElements,\012 JNIImpl::ReleaseDoubleArrayElements,\012 JNIImpl::GetBooleanArrayRegion,\012 JNIImpl::GetByteArrayRegion,\012 JNIImpl::GetCharArrayRegion,\012 JNIImpl::GetShortArrayRegion,\012 JNIImpl::GetIntArrayRegion,\012 JNIImpl::GetLongArrayRegion,\012 JNIImpl::GetFloatArrayRegion,\012 JNIImpl::GetDoubleArrayRegion,\012 JNIImpl::SetBooleanArrayRegion,\012 JNIImpl::SetByteArrayRegion,\012 JNIImpl::SetCharArrayRegion,\012 JNIImpl::SetShortArrayRegion,\012 JNIImpl::SetIntArrayRegion,\012 JNIImpl::SetLongArrayRegion,\012 JNIImpl::SetFloatArrayRegion,\012 JNIImpl::SetDoubleArrayRegion,\012 JNIImpl::RegisterNatives,\012 JNIImpl::UnregisterNatives,\012 JNIImpl::MonitorEnter,\012 JNIImpl::MonitorExit,\012 JNIImpl::GetJavaVM,\012 JNIImpl::GetStringRegion,\012 JNIImpl::GetStringUTFRegion,\012 JNIImpl::GetPrimitiveArrayCritical,\012 JNIImpl::ReleasePrimitiveArrayCritical,\012 JNIImpl::GetStringCritical,\012 JNIImpl::ReleaseStringCritical,\012 JNIImpl::NewWeakGlobalRef,\012 JNIImpl::DeleteWeakGlobalRef,\012 JNIImpl::ExceptionCheck,\012 JNIImpl::NewDirectByteBuffer,\012 JNIImpl::GetDirectBufferAddress,\012 JNIImpl::GetDirectBufferCapacity,\012 JNIImpl::GetObjectRefType,\012 })<SUB>2856</SUB>> ]
+"14267" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetVersion)<SUB>2861</SUB>> ]
+"14270" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::DefineClass)<SUB>2862</SUB>> ]
+"14273" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::FindClass)<SUB>2863</SUB>> ]
+"14276" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::FromReflectedMethod)<SUB>2864</SUB>> ]
+"14279" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::FromReflectedField)<SUB>2865</SUB>> ]
+"14282" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ToReflectedMethod)<SUB>2866</SUB>> ]
+"14285" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetSuperclass)<SUB>2867</SUB>> ]
+"14288" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::IsAssignableFrom)<SUB>2868</SUB>> ]
+"14291" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ToReflectedField)<SUB>2869</SUB>> ]
+"14294" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::Throw)<SUB>2870</SUB>> ]
+"14297" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ThrowNew)<SUB>2871</SUB>> ]
+"14300" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ExceptionOccurred)<SUB>2872</SUB>> ]
+"14303" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ExceptionDescribe)<SUB>2873</SUB>> ]
+"14306" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ExceptionClear)<SUB>2874</SUB>> ]
+"14309" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::FatalError)<SUB>2875</SUB>> ]
+"14312" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::PushLocalFrame)<SUB>2876</SUB>> ]
+"14315" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::PopLocalFrame)<SUB>2877</SUB>> ]
+"14318" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewGlobalRef)<SUB>2878</SUB>> ]
+"14321" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::DeleteGlobalRef)<SUB>2879</SUB>> ]
+"14324" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::DeleteLocalRef)<SUB>2880</SUB>> ]
+"14327" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::IsSameObject)<SUB>2881</SUB>> ]
+"14330" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewLocalRef)<SUB>2882</SUB>> ]
+"14333" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::EnsureLocalCapacity)<SUB>2883</SUB>> ]
+"14336" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::AllocObject)<SUB>2884</SUB>> ]
+"14339" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewObject)<SUB>2885</SUB>> ]
+"14342" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewObjectV)<SUB>2886</SUB>> ]
+"14345" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewObjectA)<SUB>2887</SUB>> ]
+"14348" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetObjectClass)<SUB>2888</SUB>> ]
+"14351" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::IsInstanceOf)<SUB>2889</SUB>> ]
+"14354" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetMethodID)<SUB>2890</SUB>> ]
+"14357" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallObjectMethod)<SUB>2891</SUB>> ]
+"14360" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallObjectMethodV)<SUB>2892</SUB>> ]
+"14363" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallObjectMethodA)<SUB>2893</SUB>> ]
+"14366" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallBooleanMethod)<SUB>2894</SUB>> ]
+"14369" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallBooleanMethodV)<SUB>2895</SUB>> ]
+"14372" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallBooleanMethodA)<SUB>2896</SUB>> ]
+"14375" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallByteMethod)<SUB>2897</SUB>> ]
+"14378" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallByteMethodV)<SUB>2898</SUB>> ]
+"14381" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallByteMethodA)<SUB>2899</SUB>> ]
+"14384" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallCharMethod)<SUB>2900</SUB>> ]
+"14387" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallCharMethodV)<SUB>2901</SUB>> ]
+"14390" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallCharMethodA)<SUB>2902</SUB>> ]
+"14393" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallShortMethod)<SUB>2903</SUB>> ]
+"14396" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallShortMethodV)<SUB>2904</SUB>> ]
+"14399" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallShortMethodA)<SUB>2905</SUB>> ]
+"14402" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallIntMethod)<SUB>2906</SUB>> ]
+"14405" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallIntMethodV)<SUB>2907</SUB>> ]
+"14408" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallIntMethodA)<SUB>2908</SUB>> ]
+"14411" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallLongMethod)<SUB>2909</SUB>> ]
+"14414" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallLongMethodV)<SUB>2910</SUB>> ]
+"14417" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallLongMethodA)<SUB>2911</SUB>> ]
+"14420" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallFloatMethod)<SUB>2912</SUB>> ]
+"14423" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallFloatMethodV)<SUB>2913</SUB>> ]
+"14426" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallFloatMethodA)<SUB>2914</SUB>> ]
+"14429" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallDoubleMethod)<SUB>2915</SUB>> ]
+"14432" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallDoubleMethodV)<SUB>2916</SUB>> ]
+"14435" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallDoubleMethodA)<SUB>2917</SUB>> ]
+"14438" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallVoidMethod)<SUB>2918</SUB>> ]
+"14441" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallVoidMethodV)<SUB>2919</SUB>> ]
+"14444" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallVoidMethodA)<SUB>2920</SUB>> ]
+"14447" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualObjectMethod)<SUB>2921</SUB>> ]
+"14450" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualObjectMethodV)<SUB>2922</SUB>> ]
+"14453" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualObjectMethodA)<SUB>2923</SUB>> ]
+"14456" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualBooleanMethod)<SUB>2924</SUB>> ]
+"14459" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualBooleanMethodV)<SUB>2925</SUB>> ]
+"14462" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualBooleanMethodA)<SUB>2926</SUB>> ]
+"14465" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualByteMethod)<SUB>2927</SUB>> ]
+"14468" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualByteMethodV)<SUB>2928</SUB>> ]
+"14471" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualByteMethodA)<SUB>2929</SUB>> ]
+"14474" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualCharMethod)<SUB>2930</SUB>> ]
+"14477" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualCharMethodV)<SUB>2931</SUB>> ]
+"14480" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualCharMethodA)<SUB>2932</SUB>> ]
+"14483" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualShortMethod)<SUB>2933</SUB>> ]
+"14486" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualShortMethodV)<SUB>2934</SUB>> ]
+"14489" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualShortMethodA)<SUB>2935</SUB>> ]
+"14492" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualIntMethod)<SUB>2936</SUB>> ]
+"14495" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualIntMethodV)<SUB>2937</SUB>> ]
+"14498" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualIntMethodA)<SUB>2938</SUB>> ]
+"14501" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualLongMethod)<SUB>2939</SUB>> ]
+"14504" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualLongMethodV)<SUB>2940</SUB>> ]
+"14507" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualLongMethodA)<SUB>2941</SUB>> ]
+"14510" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualFloatMethod)<SUB>2942</SUB>> ]
+"14513" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualFloatMethodV)<SUB>2943</SUB>> ]
+"14516" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualFloatMethodA)<SUB>2944</SUB>> ]
+"14519" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualDoubleMethod)<SUB>2945</SUB>> ]
+"14522" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualDoubleMethodV)<SUB>2946</SUB>> ]
+"14525" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualDoubleMethodA)<SUB>2947</SUB>> ]
+"14528" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualVoidMethod)<SUB>2948</SUB>> ]
+"14531" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualVoidMethodV)<SUB>2949</SUB>> ]
+"14534" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallNonvirtualVoidMethodA)<SUB>2950</SUB>> ]
+"14537" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetFieldID)<SUB>2951</SUB>> ]
+"14540" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetObjectField)<SUB>2952</SUB>> ]
+"14543" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetBooleanField)<SUB>2953</SUB>> ]
+"14546" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetByteField)<SUB>2954</SUB>> ]
+"14549" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetCharField)<SUB>2955</SUB>> ]
+"14552" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetShortField)<SUB>2956</SUB>> ]
+"14555" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetIntField)<SUB>2957</SUB>> ]
+"14558" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetLongField)<SUB>2958</SUB>> ]
+"14561" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetFloatField)<SUB>2959</SUB>> ]
+"14564" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetDoubleField)<SUB>2960</SUB>> ]
+"14567" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetObjectField)<SUB>2961</SUB>> ]
+"14570" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetBooleanField)<SUB>2962</SUB>> ]
+"14573" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetByteField)<SUB>2963</SUB>> ]
+"14576" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetCharField)<SUB>2964</SUB>> ]
+"14579" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetShortField)<SUB>2965</SUB>> ]
+"14582" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetIntField)<SUB>2966</SUB>> ]
+"14585" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetLongField)<SUB>2967</SUB>> ]
+"14588" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetFloatField)<SUB>2968</SUB>> ]
+"14591" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetDoubleField)<SUB>2969</SUB>> ]
+"14594" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticMethodID)<SUB>2970</SUB>> ]
+"14597" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticObjectMethod)<SUB>2971</SUB>> ]
+"14600" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticObjectMethodV)<SUB>2972</SUB>> ]
+"14603" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticObjectMethodA)<SUB>2973</SUB>> ]
+"14606" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticBooleanMethod)<SUB>2974</SUB>> ]
+"14609" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticBooleanMethodV)<SUB>2975</SUB>> ]
+"14612" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticBooleanMethodA)<SUB>2976</SUB>> ]
+"14615" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticByteMethod)<SUB>2977</SUB>> ]
+"14618" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticByteMethodV)<SUB>2978</SUB>> ]
+"14621" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticByteMethodA)<SUB>2979</SUB>> ]
+"14624" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticCharMethod)<SUB>2980</SUB>> ]
+"14627" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticCharMethodV)<SUB>2981</SUB>> ]
+"14630" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticCharMethodA)<SUB>2982</SUB>> ]
+"14633" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticShortMethod)<SUB>2983</SUB>> ]
+"14636" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticShortMethodV)<SUB>2984</SUB>> ]
+"14639" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticShortMethodA)<SUB>2985</SUB>> ]
+"14642" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticIntMethod)<SUB>2986</SUB>> ]
+"14645" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticIntMethodV)<SUB>2987</SUB>> ]
+"14648" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticIntMethodA)<SUB>2988</SUB>> ]
+"14651" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticLongMethod)<SUB>2989</SUB>> ]
+"14654" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticLongMethodV)<SUB>2990</SUB>> ]
+"14657" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticLongMethodA)<SUB>2991</SUB>> ]
+"14660" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticFloatMethod)<SUB>2992</SUB>> ]
+"14663" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticFloatMethodV)<SUB>2993</SUB>> ]
+"14666" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticFloatMethodA)<SUB>2994</SUB>> ]
+"14669" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticDoubleMethod)<SUB>2995</SUB>> ]
+"14672" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticDoubleMethodV)<SUB>2996</SUB>> ]
+"14675" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticDoubleMethodA)<SUB>2997</SUB>> ]
+"14678" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticVoidMethod)<SUB>2998</SUB>> ]
+"14681" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticVoidMethodV)<SUB>2999</SUB>> ]
+"14684" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::CallStaticVoidMethodA)<SUB>3000</SUB>> ]
+"14687" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticFieldID)<SUB>3001</SUB>> ]
+"14690" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticObjectField)<SUB>3002</SUB>> ]
+"14693" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticBooleanField)<SUB>3003</SUB>> ]
+"14696" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticByteField)<SUB>3004</SUB>> ]
+"14699" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticCharField)<SUB>3005</SUB>> ]
+"14702" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticShortField)<SUB>3006</SUB>> ]
+"14705" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticIntField)<SUB>3007</SUB>> ]
+"14708" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticLongField)<SUB>3008</SUB>> ]
+"14711" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticFloatField)<SUB>3009</SUB>> ]
+"14714" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStaticDoubleField)<SUB>3010</SUB>> ]
+"14717" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticObjectField)<SUB>3011</SUB>> ]
+"14720" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticBooleanField)<SUB>3012</SUB>> ]
+"14723" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticByteField)<SUB>3013</SUB>> ]
+"14726" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticCharField)<SUB>3014</SUB>> ]
+"14729" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticShortField)<SUB>3015</SUB>> ]
+"14732" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticIntField)<SUB>3016</SUB>> ]
+"14735" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticLongField)<SUB>3017</SUB>> ]
+"14738" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticFloatField)<SUB>3018</SUB>> ]
+"14741" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetStaticDoubleField)<SUB>3019</SUB>> ]
+"14744" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewString)<SUB>3020</SUB>> ]
+"14747" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringLength)<SUB>3021</SUB>> ]
+"14750" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringChars)<SUB>3022</SUB>> ]
+"14753" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseStringChars)<SUB>3023</SUB>> ]
+"14756" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewStringUTF)<SUB>3024</SUB>> ]
+"14759" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringUTFLength)<SUB>3025</SUB>> ]
+"14762" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringUTFChars)<SUB>3026</SUB>> ]
+"14765" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseStringUTFChars)<SUB>3027</SUB>> ]
+"14768" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetArrayLength)<SUB>3028</SUB>> ]
+"14771" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewObjectArray)<SUB>3029</SUB>> ]
+"14774" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetObjectArrayElement)<SUB>3030</SUB>> ]
+"14777" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetObjectArrayElement)<SUB>3031</SUB>> ]
+"14780" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewBooleanArray)<SUB>3032</SUB>> ]
+"14783" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewByteArray)<SUB>3033</SUB>> ]
+"14786" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewCharArray)<SUB>3034</SUB>> ]
+"14789" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewShortArray)<SUB>3035</SUB>> ]
+"14792" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewIntArray)<SUB>3036</SUB>> ]
+"14795" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewLongArray)<SUB>3037</SUB>> ]
+"14798" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewFloatArray)<SUB>3038</SUB>> ]
+"14801" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewDoubleArray)<SUB>3039</SUB>> ]
+"14804" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetBooleanArrayElements)<SUB>3040</SUB>> ]
+"14807" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetByteArrayElements)<SUB>3041</SUB>> ]
+"14810" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetCharArrayElements)<SUB>3042</SUB>> ]
+"14813" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetShortArrayElements)<SUB>3043</SUB>> ]
+"14816" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetIntArrayElements)<SUB>3044</SUB>> ]
+"14819" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetLongArrayElements)<SUB>3045</SUB>> ]
+"14822" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetFloatArrayElements)<SUB>3046</SUB>> ]
+"14825" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetDoubleArrayElements)<SUB>3047</SUB>> ]
+"14828" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseBooleanArrayElements)<SUB>3048</SUB>> ]
+"14831" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseByteArrayElements)<SUB>3049</SUB>> ]
+"14834" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseCharArrayElements)<SUB>3050</SUB>> ]
+"14837" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseShortArrayElements)<SUB>3051</SUB>> ]
+"14840" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseIntArrayElements)<SUB>3052</SUB>> ]
+"14843" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseLongArrayElements)<SUB>3053</SUB>> ]
+"14846" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseFloatArrayElements)<SUB>3054</SUB>> ]
+"14849" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseDoubleArrayElements)<SUB>3055</SUB>> ]
+"14852" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetBooleanArrayRegion)<SUB>3056</SUB>> ]
+"14855" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetByteArrayRegion)<SUB>3057</SUB>> ]
+"14858" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetCharArrayRegion)<SUB>3058</SUB>> ]
+"14861" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetShortArrayRegion)<SUB>3059</SUB>> ]
+"14864" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetIntArrayRegion)<SUB>3060</SUB>> ]
+"14867" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetLongArrayRegion)<SUB>3061</SUB>> ]
+"14870" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetFloatArrayRegion)<SUB>3062</SUB>> ]
+"14873" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetDoubleArrayRegion)<SUB>3063</SUB>> ]
+"14876" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetBooleanArrayRegion)<SUB>3064</SUB>> ]
+"14879" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetByteArrayRegion)<SUB>3065</SUB>> ]
+"14882" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetCharArrayRegion)<SUB>3066</SUB>> ]
+"14885" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetShortArrayRegion)<SUB>3067</SUB>> ]
+"14888" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetIntArrayRegion)<SUB>3068</SUB>> ]
+"14891" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetLongArrayRegion)<SUB>3069</SUB>> ]
+"14894" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetFloatArrayRegion)<SUB>3070</SUB>> ]
+"14897" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::SetDoubleArrayRegion)<SUB>3071</SUB>> ]
+"14900" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::RegisterNatives)<SUB>3072</SUB>> ]
+"14903" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::UnregisterNatives)<SUB>3073</SUB>> ]
+"14906" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::MonitorEnter)<SUB>3074</SUB>> ]
+"14909" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::MonitorExit)<SUB>3075</SUB>> ]
+"14912" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetJavaVM)<SUB>3076</SUB>> ]
+"14915" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringRegion)<SUB>3077</SUB>> ]
+"14918" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringUTFRegion)<SUB>3078</SUB>> ]
+"14921" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetPrimitiveArrayCritical)<SUB>3079</SUB>> ]
+"14924" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleasePrimitiveArrayCritical)<SUB>3080</SUB>> ]
+"14927" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetStringCritical)<SUB>3081</SUB>> ]
+"14930" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ReleaseStringCritical)<SUB>3082</SUB>> ]
+"14933" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewWeakGlobalRef)<SUB>3083</SUB>> ]
+"14936" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::DeleteWeakGlobalRef)<SUB>3084</SUB>> ]
+"14939" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::ExceptionCheck)<SUB>3085</SUB>> ]
+"14942" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::NewDirectByteBuffer)<SUB>3086</SUB>> ]
+"14945" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetDirectBufferAddress)<SUB>3087</SUB>> ]
+"14948" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetDirectBufferCapacity)<SUB>3088</SUB>> ]
+"14951" [label = <(&lt;operator&gt;.fieldAccess,JNIImpl::GetObjectRefType)<SUB>3089</SUB>> ]
+"14269" [label = <(FIELD_IDENTIFIER,GetVersion,GetVersion)<SUB>2861</SUB>> ]
+"14272" [label = <(FIELD_IDENTIFIER,DefineClass,DefineClass)<SUB>2862</SUB>> ]
+"14275" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>2863</SUB>> ]
+"14278" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>2864</SUB>> ]
+"14281" [label = <(FIELD_IDENTIFIER,FromReflectedField,FromReflectedField)<SUB>2865</SUB>> ]
+"14284" [label = <(FIELD_IDENTIFIER,ToReflectedMethod,ToReflectedMethod)<SUB>2866</SUB>> ]
+"14287" [label = <(FIELD_IDENTIFIER,GetSuperclass,GetSuperclass)<SUB>2867</SUB>> ]
+"14290" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2868</SUB>> ]
+"14293" [label = <(FIELD_IDENTIFIER,ToReflectedField,ToReflectedField)<SUB>2869</SUB>> ]
+"14296" [label = <(FIELD_IDENTIFIER,Throw,Throw)<SUB>2870</SUB>> ]
+"14299" [label = <(FIELD_IDENTIFIER,ThrowNew,ThrowNew)<SUB>2871</SUB>> ]
+"14302" [label = <(FIELD_IDENTIFIER,ExceptionOccurred,ExceptionOccurred)<SUB>2872</SUB>> ]
+"14305" [label = <(FIELD_IDENTIFIER,ExceptionDescribe,ExceptionDescribe)<SUB>2873</SUB>> ]
+"14308" [label = <(FIELD_IDENTIFIER,ExceptionClear,ExceptionClear)<SUB>2874</SUB>> ]
+"14311" [label = <(FIELD_IDENTIFIER,FatalError,FatalError)<SUB>2875</SUB>> ]
+"14314" [label = <(FIELD_IDENTIFIER,PushLocalFrame,PushLocalFrame)<SUB>2876</SUB>> ]
+"14317" [label = <(FIELD_IDENTIFIER,PopLocalFrame,PopLocalFrame)<SUB>2877</SUB>> ]
+"14320" [label = <(FIELD_IDENTIFIER,NewGlobalRef,NewGlobalRef)<SUB>2878</SUB>> ]
+"14323" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>2879</SUB>> ]
+"14326" [label = <(FIELD_IDENTIFIER,DeleteLocalRef,DeleteLocalRef)<SUB>2880</SUB>> ]
+"14329" [label = <(FIELD_IDENTIFIER,IsSameObject,IsSameObject)<SUB>2881</SUB>> ]
+"14332" [label = <(FIELD_IDENTIFIER,NewLocalRef,NewLocalRef)<SUB>2882</SUB>> ]
+"14335" [label = <(FIELD_IDENTIFIER,EnsureLocalCapacity,EnsureLocalCapacity)<SUB>2883</SUB>> ]
+"14338" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>2884</SUB>> ]
+"14341" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2885</SUB>> ]
+"14344" [label = <(FIELD_IDENTIFIER,NewObjectV,NewObjectV)<SUB>2886</SUB>> ]
+"14347" [label = <(FIELD_IDENTIFIER,NewObjectA,NewObjectA)<SUB>2887</SUB>> ]
+"14350" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>2888</SUB>> ]
+"14353" [label = <(FIELD_IDENTIFIER,IsInstanceOf,IsInstanceOf)<SUB>2889</SUB>> ]
+"14356" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>2890</SUB>> ]
+"14359" [label = <(FIELD_IDENTIFIER,CallObjectMethod,CallObjectMethod)<SUB>2891</SUB>> ]
+"14362" [label = <(FIELD_IDENTIFIER,CallObjectMethodV,CallObjectMethodV)<SUB>2892</SUB>> ]
+"14365" [label = <(FIELD_IDENTIFIER,CallObjectMethodA,CallObjectMethodA)<SUB>2893</SUB>> ]
+"14368" [label = <(FIELD_IDENTIFIER,CallBooleanMethod,CallBooleanMethod)<SUB>2894</SUB>> ]
+"14371" [label = <(FIELD_IDENTIFIER,CallBooleanMethodV,CallBooleanMethodV)<SUB>2895</SUB>> ]
+"14374" [label = <(FIELD_IDENTIFIER,CallBooleanMethodA,CallBooleanMethodA)<SUB>2896</SUB>> ]
+"14377" [label = <(FIELD_IDENTIFIER,CallByteMethod,CallByteMethod)<SUB>2897</SUB>> ]
+"14380" [label = <(FIELD_IDENTIFIER,CallByteMethodV,CallByteMethodV)<SUB>2898</SUB>> ]
+"14383" [label = <(FIELD_IDENTIFIER,CallByteMethodA,CallByteMethodA)<SUB>2899</SUB>> ]
+"14386" [label = <(FIELD_IDENTIFIER,CallCharMethod,CallCharMethod)<SUB>2900</SUB>> ]
+"14389" [label = <(FIELD_IDENTIFIER,CallCharMethodV,CallCharMethodV)<SUB>2901</SUB>> ]
+"14392" [label = <(FIELD_IDENTIFIER,CallCharMethodA,CallCharMethodA)<SUB>2902</SUB>> ]
+"14395" [label = <(FIELD_IDENTIFIER,CallShortMethod,CallShortMethod)<SUB>2903</SUB>> ]
+"14398" [label = <(FIELD_IDENTIFIER,CallShortMethodV,CallShortMethodV)<SUB>2904</SUB>> ]
+"14401" [label = <(FIELD_IDENTIFIER,CallShortMethodA,CallShortMethodA)<SUB>2905</SUB>> ]
+"14404" [label = <(FIELD_IDENTIFIER,CallIntMethod,CallIntMethod)<SUB>2906</SUB>> ]
+"14407" [label = <(FIELD_IDENTIFIER,CallIntMethodV,CallIntMethodV)<SUB>2907</SUB>> ]
+"14410" [label = <(FIELD_IDENTIFIER,CallIntMethodA,CallIntMethodA)<SUB>2908</SUB>> ]
+"14413" [label = <(FIELD_IDENTIFIER,CallLongMethod,CallLongMethod)<SUB>2909</SUB>> ]
+"14416" [label = <(FIELD_IDENTIFIER,CallLongMethodV,CallLongMethodV)<SUB>2910</SUB>> ]
+"14419" [label = <(FIELD_IDENTIFIER,CallLongMethodA,CallLongMethodA)<SUB>2911</SUB>> ]
+"14422" [label = <(FIELD_IDENTIFIER,CallFloatMethod,CallFloatMethod)<SUB>2912</SUB>> ]
+"14425" [label = <(FIELD_IDENTIFIER,CallFloatMethodV,CallFloatMethodV)<SUB>2913</SUB>> ]
+"14428" [label = <(FIELD_IDENTIFIER,CallFloatMethodA,CallFloatMethodA)<SUB>2914</SUB>> ]
+"14431" [label = <(FIELD_IDENTIFIER,CallDoubleMethod,CallDoubleMethod)<SUB>2915</SUB>> ]
+"14434" [label = <(FIELD_IDENTIFIER,CallDoubleMethodV,CallDoubleMethodV)<SUB>2916</SUB>> ]
+"14437" [label = <(FIELD_IDENTIFIER,CallDoubleMethodA,CallDoubleMethodA)<SUB>2917</SUB>> ]
+"14440" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>2918</SUB>> ]
+"14443" [label = <(FIELD_IDENTIFIER,CallVoidMethodV,CallVoidMethodV)<SUB>2919</SUB>> ]
+"14446" [label = <(FIELD_IDENTIFIER,CallVoidMethodA,CallVoidMethodA)<SUB>2920</SUB>> ]
+"14449" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethod,CallNonvirtualObjectMethod)<SUB>2921</SUB>> ]
+"14452" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodV,CallNonvirtualObjectMethodV)<SUB>2922</SUB>> ]
+"14455" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodA,CallNonvirtualObjectMethodA)<SUB>2923</SUB>> ]
+"14458" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethod,CallNonvirtualBooleanMethod)<SUB>2924</SUB>> ]
+"14461" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodV,CallNonvirtualBooleanMethodV)<SUB>2925</SUB>> ]
+"14464" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodA,CallNonvirtualBooleanMethodA)<SUB>2926</SUB>> ]
+"14467" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethod,CallNonvirtualByteMethod)<SUB>2927</SUB>> ]
+"14470" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodV,CallNonvirtualByteMethodV)<SUB>2928</SUB>> ]
+"14473" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodA,CallNonvirtualByteMethodA)<SUB>2929</SUB>> ]
+"14476" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethod,CallNonvirtualCharMethod)<SUB>2930</SUB>> ]
+"14479" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodV,CallNonvirtualCharMethodV)<SUB>2931</SUB>> ]
+"14482" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodA,CallNonvirtualCharMethodA)<SUB>2932</SUB>> ]
+"14485" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethod,CallNonvirtualShortMethod)<SUB>2933</SUB>> ]
+"14488" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodV,CallNonvirtualShortMethodV)<SUB>2934</SUB>> ]
+"14491" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodA,CallNonvirtualShortMethodA)<SUB>2935</SUB>> ]
+"14494" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethod,CallNonvirtualIntMethod)<SUB>2936</SUB>> ]
+"14497" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodV,CallNonvirtualIntMethodV)<SUB>2937</SUB>> ]
+"14500" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodA,CallNonvirtualIntMethodA)<SUB>2938</SUB>> ]
+"14503" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethod,CallNonvirtualLongMethod)<SUB>2939</SUB>> ]
+"14506" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodV,CallNonvirtualLongMethodV)<SUB>2940</SUB>> ]
+"14509" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodA,CallNonvirtualLongMethodA)<SUB>2941</SUB>> ]
+"14512" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethod,CallNonvirtualFloatMethod)<SUB>2942</SUB>> ]
+"14515" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodV,CallNonvirtualFloatMethodV)<SUB>2943</SUB>> ]
+"14518" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodA,CallNonvirtualFloatMethodA)<SUB>2944</SUB>> ]
+"14521" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethod,CallNonvirtualDoubleMethod)<SUB>2945</SUB>> ]
+"14524" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodV,CallNonvirtualDoubleMethodV)<SUB>2946</SUB>> ]
+"14527" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodA,CallNonvirtualDoubleMethodA)<SUB>2947</SUB>> ]
+"14530" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethod,CallNonvirtualVoidMethod)<SUB>2948</SUB>> ]
+"14533" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV)<SUB>2949</SUB>> ]
+"14536" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA)<SUB>2950</SUB>> ]
+"14539" [label = <(FIELD_IDENTIFIER,GetFieldID,GetFieldID)<SUB>2951</SUB>> ]
+"14542" [label = <(FIELD_IDENTIFIER,GetObjectField,GetObjectField)<SUB>2952</SUB>> ]
+"14545" [label = <(FIELD_IDENTIFIER,GetBooleanField,GetBooleanField)<SUB>2953</SUB>> ]
+"14548" [label = <(FIELD_IDENTIFIER,GetByteField,GetByteField)<SUB>2954</SUB>> ]
+"14551" [label = <(FIELD_IDENTIFIER,GetCharField,GetCharField)<SUB>2955</SUB>> ]
+"14554" [label = <(FIELD_IDENTIFIER,GetShortField,GetShortField)<SUB>2956</SUB>> ]
+"14557" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2957</SUB>> ]
+"14560" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2958</SUB>> ]
+"14563" [label = <(FIELD_IDENTIFIER,GetFloatField,GetFloatField)<SUB>2959</SUB>> ]
+"14566" [label = <(FIELD_IDENTIFIER,GetDoubleField,GetDoubleField)<SUB>2960</SUB>> ]
+"14569" [label = <(FIELD_IDENTIFIER,SetObjectField,SetObjectField)<SUB>2961</SUB>> ]
+"14572" [label = <(FIELD_IDENTIFIER,SetBooleanField,SetBooleanField)<SUB>2962</SUB>> ]
+"14575" [label = <(FIELD_IDENTIFIER,SetByteField,SetByteField)<SUB>2963</SUB>> ]
+"14578" [label = <(FIELD_IDENTIFIER,SetCharField,SetCharField)<SUB>2964</SUB>> ]
+"14581" [label = <(FIELD_IDENTIFIER,SetShortField,SetShortField)<SUB>2965</SUB>> ]
+"14584" [label = <(FIELD_IDENTIFIER,SetIntField,SetIntField)<SUB>2966</SUB>> ]
+"14587" [label = <(FIELD_IDENTIFIER,SetLongField,SetLongField)<SUB>2967</SUB>> ]
+"14590" [label = <(FIELD_IDENTIFIER,SetFloatField,SetFloatField)<SUB>2968</SUB>> ]
+"14593" [label = <(FIELD_IDENTIFIER,SetDoubleField,SetDoubleField)<SUB>2969</SUB>> ]
+"14596" [label = <(FIELD_IDENTIFIER,GetStaticMethodID,GetStaticMethodID)<SUB>2970</SUB>> ]
+"14599" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethod,CallStaticObjectMethod)<SUB>2971</SUB>> ]
+"14602" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodV,CallStaticObjectMethodV)<SUB>2972</SUB>> ]
+"14605" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodA,CallStaticObjectMethodA)<SUB>2973</SUB>> ]
+"14608" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethod,CallStaticBooleanMethod)<SUB>2974</SUB>> ]
+"14611" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodV,CallStaticBooleanMethodV)<SUB>2975</SUB>> ]
+"14614" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodA,CallStaticBooleanMethodA)<SUB>2976</SUB>> ]
+"14617" [label = <(FIELD_IDENTIFIER,CallStaticByteMethod,CallStaticByteMethod)<SUB>2977</SUB>> ]
+"14620" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodV,CallStaticByteMethodV)<SUB>2978</SUB>> ]
+"14623" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodA,CallStaticByteMethodA)<SUB>2979</SUB>> ]
+"14626" [label = <(FIELD_IDENTIFIER,CallStaticCharMethod,CallStaticCharMethod)<SUB>2980</SUB>> ]
+"14629" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodV,CallStaticCharMethodV)<SUB>2981</SUB>> ]
+"14632" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodA,CallStaticCharMethodA)<SUB>2982</SUB>> ]
+"14635" [label = <(FIELD_IDENTIFIER,CallStaticShortMethod,CallStaticShortMethod)<SUB>2983</SUB>> ]
+"14638" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodV,CallStaticShortMethodV)<SUB>2984</SUB>> ]
+"14641" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodA,CallStaticShortMethodA)<SUB>2985</SUB>> ]
+"14644" [label = <(FIELD_IDENTIFIER,CallStaticIntMethod,CallStaticIntMethod)<SUB>2986</SUB>> ]
+"14647" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodV,CallStaticIntMethodV)<SUB>2987</SUB>> ]
+"14650" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodA,CallStaticIntMethodA)<SUB>2988</SUB>> ]
+"14653" [label = <(FIELD_IDENTIFIER,CallStaticLongMethod,CallStaticLongMethod)<SUB>2989</SUB>> ]
+"14656" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodV,CallStaticLongMethodV)<SUB>2990</SUB>> ]
+"14659" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodA,CallStaticLongMethodA)<SUB>2991</SUB>> ]
+"14662" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethod,CallStaticFloatMethod)<SUB>2992</SUB>> ]
+"14665" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodV,CallStaticFloatMethodV)<SUB>2993</SUB>> ]
+"14668" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodA,CallStaticFloatMethodA)<SUB>2994</SUB>> ]
+"14671" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethod,CallStaticDoubleMethod)<SUB>2995</SUB>> ]
+"14674" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodV,CallStaticDoubleMethodV)<SUB>2996</SUB>> ]
+"14677" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodA,CallStaticDoubleMethodA)<SUB>2997</SUB>> ]
+"14680" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethod,CallStaticVoidMethod)<SUB>2998</SUB>> ]
+"14683" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodV,CallStaticVoidMethodV)<SUB>2999</SUB>> ]
+"14686" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodA,CallStaticVoidMethodA)<SUB>3000</SUB>> ]
+"14689" [label = <(FIELD_IDENTIFIER,GetStaticFieldID,GetStaticFieldID)<SUB>3001</SUB>> ]
+"14692" [label = <(FIELD_IDENTIFIER,GetStaticObjectField,GetStaticObjectField)<SUB>3002</SUB>> ]
+"14695" [label = <(FIELD_IDENTIFIER,GetStaticBooleanField,GetStaticBooleanField)<SUB>3003</SUB>> ]
+"14698" [label = <(FIELD_IDENTIFIER,GetStaticByteField,GetStaticByteField)<SUB>3004</SUB>> ]
+"14701" [label = <(FIELD_IDENTIFIER,GetStaticCharField,GetStaticCharField)<SUB>3005</SUB>> ]
+"14704" [label = <(FIELD_IDENTIFIER,GetStaticShortField,GetStaticShortField)<SUB>3006</SUB>> ]
+"14707" [label = <(FIELD_IDENTIFIER,GetStaticIntField,GetStaticIntField)<SUB>3007</SUB>> ]
+"14710" [label = <(FIELD_IDENTIFIER,GetStaticLongField,GetStaticLongField)<SUB>3008</SUB>> ]
+"14713" [label = <(FIELD_IDENTIFIER,GetStaticFloatField,GetStaticFloatField)<SUB>3009</SUB>> ]
+"14716" [label = <(FIELD_IDENTIFIER,GetStaticDoubleField,GetStaticDoubleField)<SUB>3010</SUB>> ]
+"14719" [label = <(FIELD_IDENTIFIER,SetStaticObjectField,SetStaticObjectField)<SUB>3011</SUB>> ]
+"14722" [label = <(FIELD_IDENTIFIER,SetStaticBooleanField,SetStaticBooleanField)<SUB>3012</SUB>> ]
+"14725" [label = <(FIELD_IDENTIFIER,SetStaticByteField,SetStaticByteField)<SUB>3013</SUB>> ]
+"14728" [label = <(FIELD_IDENTIFIER,SetStaticCharField,SetStaticCharField)<SUB>3014</SUB>> ]
+"14731" [label = <(FIELD_IDENTIFIER,SetStaticShortField,SetStaticShortField)<SUB>3015</SUB>> ]
+"14734" [label = <(FIELD_IDENTIFIER,SetStaticIntField,SetStaticIntField)<SUB>3016</SUB>> ]
+"14737" [label = <(FIELD_IDENTIFIER,SetStaticLongField,SetStaticLongField)<SUB>3017</SUB>> ]
+"14740" [label = <(FIELD_IDENTIFIER,SetStaticFloatField,SetStaticFloatField)<SUB>3018</SUB>> ]
+"14743" [label = <(FIELD_IDENTIFIER,SetStaticDoubleField,SetStaticDoubleField)<SUB>3019</SUB>> ]
+"14746" [label = <(FIELD_IDENTIFIER,NewString,NewString)<SUB>3020</SUB>> ]
+"14749" [label = <(FIELD_IDENTIFIER,GetStringLength,GetStringLength)<SUB>3021</SUB>> ]
+"14752" [label = <(FIELD_IDENTIFIER,GetStringChars,GetStringChars)<SUB>3022</SUB>> ]
+"14755" [label = <(FIELD_IDENTIFIER,ReleaseStringChars,ReleaseStringChars)<SUB>3023</SUB>> ]
+"14758" [label = <(FIELD_IDENTIFIER,NewStringUTF,NewStringUTF)<SUB>3024</SUB>> ]
+"14761" [label = <(FIELD_IDENTIFIER,GetStringUTFLength,GetStringUTFLength)<SUB>3025</SUB>> ]
+"14764" [label = <(FIELD_IDENTIFIER,GetStringUTFChars,GetStringUTFChars)<SUB>3026</SUB>> ]
+"14767" [label = <(FIELD_IDENTIFIER,ReleaseStringUTFChars,ReleaseStringUTFChars)<SUB>3027</SUB>> ]
+"14770" [label = <(FIELD_IDENTIFIER,GetArrayLength,GetArrayLength)<SUB>3028</SUB>> ]
+"14773" [label = <(FIELD_IDENTIFIER,NewObjectArray,NewObjectArray)<SUB>3029</SUB>> ]
+"14776" [label = <(FIELD_IDENTIFIER,GetObjectArrayElement,GetObjectArrayElement)<SUB>3030</SUB>> ]
+"14779" [label = <(FIELD_IDENTIFIER,SetObjectArrayElement,SetObjectArrayElement)<SUB>3031</SUB>> ]
+"14782" [label = <(FIELD_IDENTIFIER,NewBooleanArray,NewBooleanArray)<SUB>3032</SUB>> ]
+"14785" [label = <(FIELD_IDENTIFIER,NewByteArray,NewByteArray)<SUB>3033</SUB>> ]
+"14788" [label = <(FIELD_IDENTIFIER,NewCharArray,NewCharArray)<SUB>3034</SUB>> ]
+"14791" [label = <(FIELD_IDENTIFIER,NewShortArray,NewShortArray)<SUB>3035</SUB>> ]
+"14794" [label = <(FIELD_IDENTIFIER,NewIntArray,NewIntArray)<SUB>3036</SUB>> ]
+"14797" [label = <(FIELD_IDENTIFIER,NewLongArray,NewLongArray)<SUB>3037</SUB>> ]
+"14800" [label = <(FIELD_IDENTIFIER,NewFloatArray,NewFloatArray)<SUB>3038</SUB>> ]
+"14803" [label = <(FIELD_IDENTIFIER,NewDoubleArray,NewDoubleArray)<SUB>3039</SUB>> ]
+"14806" [label = <(FIELD_IDENTIFIER,GetBooleanArrayElements,GetBooleanArrayElements)<SUB>3040</SUB>> ]
+"14809" [label = <(FIELD_IDENTIFIER,GetByteArrayElements,GetByteArrayElements)<SUB>3041</SUB>> ]
+"14812" [label = <(FIELD_IDENTIFIER,GetCharArrayElements,GetCharArrayElements)<SUB>3042</SUB>> ]
+"14815" [label = <(FIELD_IDENTIFIER,GetShortArrayElements,GetShortArrayElements)<SUB>3043</SUB>> ]
+"14818" [label = <(FIELD_IDENTIFIER,GetIntArrayElements,GetIntArrayElements)<SUB>3044</SUB>> ]
+"14821" [label = <(FIELD_IDENTIFIER,GetLongArrayElements,GetLongArrayElements)<SUB>3045</SUB>> ]
+"14824" [label = <(FIELD_IDENTIFIER,GetFloatArrayElements,GetFloatArrayElements)<SUB>3046</SUB>> ]
+"14827" [label = <(FIELD_IDENTIFIER,GetDoubleArrayElements,GetDoubleArrayElements)<SUB>3047</SUB>> ]
+"14830" [label = <(FIELD_IDENTIFIER,ReleaseBooleanArrayElements,ReleaseBooleanArrayElements)<SUB>3048</SUB>> ]
+"14833" [label = <(FIELD_IDENTIFIER,ReleaseByteArrayElements,ReleaseByteArrayElements)<SUB>3049</SUB>> ]
+"14836" [label = <(FIELD_IDENTIFIER,ReleaseCharArrayElements,ReleaseCharArrayElements)<SUB>3050</SUB>> ]
+"14839" [label = <(FIELD_IDENTIFIER,ReleaseShortArrayElements,ReleaseShortArrayElements)<SUB>3051</SUB>> ]
+"14842" [label = <(FIELD_IDENTIFIER,ReleaseIntArrayElements,ReleaseIntArrayElements)<SUB>3052</SUB>> ]
+"14845" [label = <(FIELD_IDENTIFIER,ReleaseLongArrayElements,ReleaseLongArrayElements)<SUB>3053</SUB>> ]
+"14848" [label = <(FIELD_IDENTIFIER,ReleaseFloatArrayElements,ReleaseFloatArrayElements)<SUB>3054</SUB>> ]
+"14851" [label = <(FIELD_IDENTIFIER,ReleaseDoubleArrayElements,ReleaseDoubleArrayElements)<SUB>3055</SUB>> ]
+"14854" [label = <(FIELD_IDENTIFIER,GetBooleanArrayRegion,GetBooleanArrayRegion)<SUB>3056</SUB>> ]
+"14857" [label = <(FIELD_IDENTIFIER,GetByteArrayRegion,GetByteArrayRegion)<SUB>3057</SUB>> ]
+"14860" [label = <(FIELD_IDENTIFIER,GetCharArrayRegion,GetCharArrayRegion)<SUB>3058</SUB>> ]
+"14863" [label = <(FIELD_IDENTIFIER,GetShortArrayRegion,GetShortArrayRegion)<SUB>3059</SUB>> ]
+"14866" [label = <(FIELD_IDENTIFIER,GetIntArrayRegion,GetIntArrayRegion)<SUB>3060</SUB>> ]
+"14869" [label = <(FIELD_IDENTIFIER,GetLongArrayRegion,GetLongArrayRegion)<SUB>3061</SUB>> ]
+"14872" [label = <(FIELD_IDENTIFIER,GetFloatArrayRegion,GetFloatArrayRegion)<SUB>3062</SUB>> ]
+"14875" [label = <(FIELD_IDENTIFIER,GetDoubleArrayRegion,GetDoubleArrayRegion)<SUB>3063</SUB>> ]
+"14878" [label = <(FIELD_IDENTIFIER,SetBooleanArrayRegion,SetBooleanArrayRegion)<SUB>3064</SUB>> ]
+"14881" [label = <(FIELD_IDENTIFIER,SetByteArrayRegion,SetByteArrayRegion)<SUB>3065</SUB>> ]
+"14884" [label = <(FIELD_IDENTIFIER,SetCharArrayRegion,SetCharArrayRegion)<SUB>3066</SUB>> ]
+"14887" [label = <(FIELD_IDENTIFIER,SetShortArrayRegion,SetShortArrayRegion)<SUB>3067</SUB>> ]
+"14890" [label = <(FIELD_IDENTIFIER,SetIntArrayRegion,SetIntArrayRegion)<SUB>3068</SUB>> ]
+"14893" [label = <(FIELD_IDENTIFIER,SetLongArrayRegion,SetLongArrayRegion)<SUB>3069</SUB>> ]
+"14896" [label = <(FIELD_IDENTIFIER,SetFloatArrayRegion,SetFloatArrayRegion)<SUB>3070</SUB>> ]
+"14899" [label = <(FIELD_IDENTIFIER,SetDoubleArrayRegion,SetDoubleArrayRegion)<SUB>3071</SUB>> ]
+"14902" [label = <(FIELD_IDENTIFIER,RegisterNatives,RegisterNatives)<SUB>3072</SUB>> ]
+"14905" [label = <(FIELD_IDENTIFIER,UnregisterNatives,UnregisterNatives)<SUB>3073</SUB>> ]
+"14908" [label = <(FIELD_IDENTIFIER,MonitorEnter,MonitorEnter)<SUB>3074</SUB>> ]
+"14911" [label = <(FIELD_IDENTIFIER,MonitorExit,MonitorExit)<SUB>3075</SUB>> ]
+"14914" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>3076</SUB>> ]
+"14917" [label = <(FIELD_IDENTIFIER,GetStringRegion,GetStringRegion)<SUB>3077</SUB>> ]
+"14920" [label = <(FIELD_IDENTIFIER,GetStringUTFRegion,GetStringUTFRegion)<SUB>3078</SUB>> ]
+"14923" [label = <(FIELD_IDENTIFIER,GetPrimitiveArrayCritical,GetPrimitiveArrayCritical)<SUB>3079</SUB>> ]
+"14926" [label = <(FIELD_IDENTIFIER,ReleasePrimitiveArrayCritical,ReleasePrimitiveArrayCritical)<SUB>3080</SUB>> ]
+"14929" [label = <(FIELD_IDENTIFIER,GetStringCritical,GetStringCritical)<SUB>3081</SUB>> ]
+"14932" [label = <(FIELD_IDENTIFIER,ReleaseStringCritical,ReleaseStringCritical)<SUB>3082</SUB>> ]
+"14935" [label = <(FIELD_IDENTIFIER,NewWeakGlobalRef,NewWeakGlobalRef)<SUB>3083</SUB>> ]
+"14938" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>3084</SUB>> ]
+"14941" [label = <(FIELD_IDENTIFIER,ExceptionCheck,ExceptionCheck)<SUB>3085</SUB>> ]
+"14944" [label = <(FIELD_IDENTIFIER,NewDirectByteBuffer,NewDirectByteBuffer)<SUB>3086</SUB>> ]
+"14947" [label = <(FIELD_IDENTIFIER,GetDirectBufferAddress,GetDirectBufferAddress)<SUB>3087</SUB>> ]
+"14950" [label = <(FIELD_IDENTIFIER,GetDirectBufferCapacity,GetDirectBufferCapacity)<SUB>3088</SUB>> ]
+"14953" [label = <(FIELD_IDENTIFIER,GetObjectRefType,GetObjectRefType)<SUB>3089</SUB>> ]
+"14258" [label = <(METHOD,&lt;clinit&gt;)> ]
+"14955" [label = <(METHOD_RETURN,ANY)> ]
+  "14260" -> "14955" 
+  "14262" -> "14260" 
+  "14267" -> "14272" 
   "14270" -> "14275" 
   "14273" -> "14278" 
   "14276" -> "14281" 
@@ -690,8 +691,8 @@
   "14942" -> "14947" 
   "14945" -> "14950" 
   "14948" -> "14953" 
-  "14951" -> "14956" 
-  "14954" -> "14265" 
+  "14951" -> "14262" 
+  "14269" -> "14267" 
   "14272" -> "14270" 
   "14275" -> "14273" 
   "14278" -> "14276" 
@@ -920,6 +921,5 @@
   "14947" -> "14945" 
   "14950" -> "14948" 
   "14953" -> "14951" 
-  "14956" -> "14954" 
-  "14261" -> "14272" 
+  "14258" -> "14269" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/264-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/264-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/264-cfg.dot	2023-06-07 19:35:41.617383217 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/264-cfg.dot	2023-06-07 19:35:48.177382771 +0330
@@ -1,40 +1,40 @@
 digraph "GetJniNativeInterface" {  
-"14961" [label = <(RETURN,return Runtime::Current()-&gt;GetJniIdType() == JniIdType::kPointer\012 ? &amp;JniNativeInterfaceFunctions&lt;false&gt;::gJniNativeInterface\012 : &amp;JniNativeInterfaceFunctions&lt;true&gt;::gJniNativeInterface;,return Runtime::Current()-&gt;GetJniIdType() == JniIdType::kPointer\012 ? &amp;JniNativeInterfaceFunctions&lt;false&gt;::gJniNativeInterface\012 : &amp;JniNativeInterfaceFunctions&lt;true&gt;::gJniNativeInterface;)<SUB>3099</SUB>> ]
-"14962" [label = <(&lt;operator&gt;.conditional,Runtime::Current()-&gt;GetJniIdType() == JniIdType::kPointer\012 ? &amp;JniNativeInterfaceFunctions&lt;false&gt;::gJniNativeInterface\012 : &amp;JniNativeInterfaceFunctions&lt;true&gt;::gJniNativeInterface)<SUB>3099</SUB>> ]
-"14963" [label = <(&lt;operator&gt;.equals,Runtime::Current()-&gt;GetJniIdType() == JniIdType::kPointer)<SUB>3099</SUB>> ]
-"14974" [label = <(&lt;operator&gt;.addressOf,&amp;JniNativeInterfaceFunctions&lt;false&gt;::gJniNativeInterface)<SUB>3100</SUB>> ]
-"14978" [label = <(&lt;operator&gt;.addressOf,&amp;JniNativeInterfaceFunctions&lt;true&gt;::gJniNativeInterface)<SUB>3101</SUB>> ]
-"14964" [label = <(GetJniIdType,Runtime::Current()-&gt;GetJniIdType())<SUB>3099</SUB>> ]
-"14971" [label = <(&lt;operator&gt;.fieldAccess,JniIdType::kPointer)<SUB>3099</SUB>> ]
-"14975" [label = <(&lt;operator&gt;.fieldAccess,JniNativeInterfaceFunctions&lt;false&gt;::gJniNativeInterface)<SUB>3100</SUB>> ]
-"14979" [label = <(&lt;operator&gt;.fieldAccess,JniNativeInterfaceFunctions&lt;true&gt;::gJniNativeInterface)<SUB>3101</SUB>> ]
-"14965" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetJniIdType)<SUB>3099</SUB>> ]
-"14973" [label = <(FIELD_IDENTIFIER,kPointer,kPointer)<SUB>3099</SUB>> ]
-"14977" [label = <(FIELD_IDENTIFIER,gJniNativeInterface,gJniNativeInterface)<SUB>3100</SUB>> ]
-"14981" [label = <(FIELD_IDENTIFIER,gJniNativeInterface,gJniNativeInterface)<SUB>3101</SUB>> ]
-"14966" [label = <(Runtime::Current,Runtime::Current())<SUB>3099</SUB>> ]
-"14970" [label = <(FIELD_IDENTIFIER,GetJniIdType,GetJniIdType)<SUB>3099</SUB>> ]
-"14967" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>3099</SUB>> ]
-"14969" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>3099</SUB>> ]
-"14959" [label = <(METHOD,GetJniNativeInterface)<SUB>3095</SUB>> ]
-"14982" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3095</SUB>> ]
-  "14961" -> "14982" 
+"14958" [label = <(RETURN,return Runtime::Current()-&gt;GetJniIdType() == JniIdType::kPointer\012 ? &amp;JniNativeInterfaceFunctions&lt;false&gt;::gJniNativeInterface\012 : &amp;JniNativeInterfaceFunctions&lt;true&gt;::gJniNativeInterface;,return Runtime::Current()-&gt;GetJniIdType() == JniIdType::kPointer\012 ? &amp;JniNativeInterfaceFunctions&lt;false&gt;::gJniNativeInterface\012 : &amp;JniNativeInterfaceFunctions&lt;true&gt;::gJniNativeInterface;)<SUB>3097</SUB>> ]
+"14959" [label = <(&lt;operator&gt;.conditional,Runtime::Current()-&gt;GetJniIdType() == JniIdType::kPointer\012 ? &amp;JniNativeInterfaceFunctions&lt;false&gt;::gJniNativeInterface\012 : &amp;JniNativeInterfaceFunctions&lt;true&gt;::gJniNativeInterface)<SUB>3097</SUB>> ]
+"14960" [label = <(&lt;operator&gt;.equals,Runtime::Current()-&gt;GetJniIdType() == JniIdType::kPointer)<SUB>3097</SUB>> ]
+"14971" [label = <(&lt;operator&gt;.addressOf,&amp;JniNativeInterfaceFunctions&lt;false&gt;::gJniNativeInterface)<SUB>3098</SUB>> ]
+"14975" [label = <(&lt;operator&gt;.addressOf,&amp;JniNativeInterfaceFunctions&lt;true&gt;::gJniNativeInterface)<SUB>3099</SUB>> ]
+"14961" [label = <(GetJniIdType,Runtime::Current()-&gt;GetJniIdType())<SUB>3097</SUB>> ]
+"14968" [label = <(&lt;operator&gt;.fieldAccess,JniIdType::kPointer)<SUB>3097</SUB>> ]
+"14972" [label = <(&lt;operator&gt;.fieldAccess,JniNativeInterfaceFunctions&lt;false&gt;::gJniNativeInterface)<SUB>3098</SUB>> ]
+"14976" [label = <(&lt;operator&gt;.fieldAccess,JniNativeInterfaceFunctions&lt;true&gt;::gJniNativeInterface)<SUB>3099</SUB>> ]
+"14962" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetJniIdType)<SUB>3097</SUB>> ]
+"14970" [label = <(FIELD_IDENTIFIER,kPointer,kPointer)<SUB>3097</SUB>> ]
+"14974" [label = <(FIELD_IDENTIFIER,gJniNativeInterface,gJniNativeInterface)<SUB>3098</SUB>> ]
+"14978" [label = <(FIELD_IDENTIFIER,gJniNativeInterface,gJniNativeInterface)<SUB>3099</SUB>> ]
+"14963" [label = <(Runtime::Current,Runtime::Current())<SUB>3097</SUB>> ]
+"14967" [label = <(FIELD_IDENTIFIER,GetJniIdType,GetJniIdType)<SUB>3097</SUB>> ]
+"14964" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>3097</SUB>> ]
+"14966" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>3097</SUB>> ]
+"14956" [label = <(METHOD,GetJniNativeInterface)<SUB>3093</SUB>> ]
+"14979" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3093</SUB>> ]
+  "14958" -> "14979" 
+  "14959" -> "14958" 
+  "14960" -> "14974" 
+  "14960" -> "14978" 
+  "14971" -> "14959" 
+  "14975" -> "14959" 
+  "14961" -> "14970" 
+  "14968" -> "14960" 
+  "14972" -> "14971" 
+  "14976" -> "14975" 
   "14962" -> "14961" 
-  "14963" -> "14977" 
-  "14963" -> "14981" 
-  "14974" -> "14962" 
-  "14978" -> "14962" 
-  "14964" -> "14973" 
-  "14971" -> "14963" 
-  "14975" -> "14974" 
-  "14979" -> "14978" 
-  "14965" -> "14964" 
-  "14973" -> "14971" 
-  "14977" -> "14975" 
-  "14981" -> "14979" 
-  "14966" -> "14970" 
-  "14970" -> "14965" 
-  "14967" -> "14966" 
-  "14969" -> "14967" 
-  "14959" -> "14969" 
+  "14970" -> "14968" 
+  "14974" -> "14972" 
+  "14978" -> "14976" 
+  "14963" -> "14967" 
+  "14967" -> "14962" 
+  "14964" -> "14963" 
+  "14966" -> "14964" 
+  "14956" -> "14966" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/265-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/265-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/265-cfg.dot	2023-06-07 19:35:41.617383217 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/265-cfg.dot	2023-06-07 19:35:48.177382771 +0330
@@ -1,5 +1,5 @@
 digraph "gJniSleepForeverStub" {  
-"14984" [label = <(METHOD,gJniSleepForeverStub)<SUB>3104</SUB>> ]
-"14986" [label = <(METHOD_RETURN,void)<SUB>3104</SUB>> ]
-  "14984" -> "14986" 
+"14981" [label = <(METHOD,gJniSleepForeverStub)<SUB>3102</SUB>> ]
+"14983" [label = <(METHOD_RETURN,void)<SUB>3102</SUB>> ]
+  "14981" -> "14983" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/266-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/266-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/266-cfg.dot	2023-06-07 19:35:41.617383217 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/266-cfg.dot	2023-06-07 19:35:48.177382771 +0330
@@ -1,13 +1,13 @@
 digraph "GetRuntimeShutdownNativeInterface" {  
-"15226" [label = <(RETURN,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);)<SUB>3341</SUB>> ]
-"15227" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub))<SUB>3341</SUB>> ]
-"15228" [label = <(UNKNOWN,JNINativeInterface*,JNINativeInterface*)<SUB>3341</SUB>> ]
-"15229" [label = <(&lt;operator&gt;.addressOf,&amp;gJniSleepForeverStub)<SUB>3341</SUB>> ]
-"15224" [label = <(METHOD,GetRuntimeShutdownNativeInterface)<SUB>3340</SUB>> ]
-"15231" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3340</SUB>> ]
-  "15226" -> "15231" 
-  "15227" -> "15226" 
-  "15228" -> "15229" 
-  "15229" -> "15227" 
-  "15224" -> "15228" 
+"15223" [label = <(RETURN,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);)<SUB>3339</SUB>> ]
+"15224" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub))<SUB>3339</SUB>> ]
+"15225" [label = <(UNKNOWN,JNINativeInterface*,JNINativeInterface*)<SUB>3339</SUB>> ]
+"15226" [label = <(&lt;operator&gt;.addressOf,&amp;gJniSleepForeverStub)<SUB>3339</SUB>> ]
+"15221" [label = <(METHOD,GetRuntimeShutdownNativeInterface)<SUB>3338</SUB>> ]
+"15228" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3338</SUB>> ]
+  "15223" -> "15228" 
+  "15224" -> "15223" 
+  "15225" -> "15226" 
+  "15226" -> "15224" 
+  "15221" -> "15225" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/267-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/267-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/267-cfg.dot	2023-06-07 19:35:41.617383217 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/267-cfg.dot	2023-06-07 19:35:48.177382771 +0330
@@ -1,39 +1,39 @@
 digraph "operator &lt;&lt;" {  
-"15243" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIInvalidRefType&quot;)<SUB>3349</SUB>> ]
-"15246" [label = <(RETURN,return os;,return os;)<SUB>3350</SUB>> ]
-"15250" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNILocalRefType&quot;)<SUB>3352</SUB>> ]
-"15253" [label = <(RETURN,return os;,return os;)<SUB>3353</SUB>> ]
-"15257" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIGlobalRefType&quot;)<SUB>3355</SUB>> ]
-"15260" [label = <(RETURN,return os;,return os;)<SUB>3356</SUB>> ]
-"15264" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIWeakGlobalRefType&quot;)<SUB>3358</SUB>> ]
-"15267" [label = <(RETURN,return os;,return os;)<SUB>3359</SUB>> ]
-"15270" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs) &lt;&lt; &quot;]&quot;)<SUB>3361</SUB>> ]
-"15280" [label = <(UNREACHABLE,UNREACHABLE())<SUB>3362</SUB>> ]
-"15271" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs))<SUB>3361</SUB>> ]
-"15272" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot;)<SUB>3361</SUB>> ]
-"15276" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(rhs))<SUB>3361</SUB>> ]
-"15273" [label = <(LOG,LOG(FATAL))<SUB>3361</SUB>> ]
-"15277" [label = <(UNKNOWN,int,int)<SUB>3361</SUB>> ]
-"15234" [label = <(METHOD,operator &lt;&lt;)<SUB>3346</SUB>> ]
-"15281" [label = <(METHOD_RETURN,ostream)<SUB>3346</SUB>> ]
-  "15243" -> "15246" 
-  "15246" -> "15281" 
-  "15250" -> "15253" 
-  "15253" -> "15281" 
-  "15257" -> "15260" 
-  "15260" -> "15281" 
-  "15264" -> "15267" 
-  "15267" -> "15281" 
-  "15270" -> "15280" 
-  "15280" -> "15281" 
-  "15271" -> "15270" 
-  "15272" -> "15277" 
-  "15276" -> "15271" 
-  "15273" -> "15272" 
-  "15277" -> "15276" 
-  "15234" -> "15243" 
-  "15234" -> "15250" 
-  "15234" -> "15257" 
-  "15234" -> "15264" 
-  "15234" -> "15273" 
+"15240" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIInvalidRefType&quot;)<SUB>3347</SUB>> ]
+"15243" [label = <(RETURN,return os;,return os;)<SUB>3348</SUB>> ]
+"15247" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNILocalRefType&quot;)<SUB>3350</SUB>> ]
+"15250" [label = <(RETURN,return os;,return os;)<SUB>3351</SUB>> ]
+"15254" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIGlobalRefType&quot;)<SUB>3353</SUB>> ]
+"15257" [label = <(RETURN,return os;,return os;)<SUB>3354</SUB>> ]
+"15261" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIWeakGlobalRefType&quot;)<SUB>3356</SUB>> ]
+"15264" [label = <(RETURN,return os;,return os;)<SUB>3357</SUB>> ]
+"15267" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs) &lt;&lt; &quot;]&quot;)<SUB>3359</SUB>> ]
+"15277" [label = <(UNREACHABLE,UNREACHABLE())<SUB>3360</SUB>> ]
+"15268" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs))<SUB>3359</SUB>> ]
+"15269" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot;)<SUB>3359</SUB>> ]
+"15273" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(rhs))<SUB>3359</SUB>> ]
+"15270" [label = <(LOG,LOG(FATAL))<SUB>3359</SUB>> ]
+"15274" [label = <(UNKNOWN,int,int)<SUB>3359</SUB>> ]
+"15231" [label = <(METHOD,operator &lt;&lt;)<SUB>3344</SUB>> ]
+"15278" [label = <(METHOD_RETURN,ostream)<SUB>3344</SUB>> ]
+  "15240" -> "15243" 
+  "15243" -> "15278" 
+  "15247" -> "15250" 
+  "15250" -> "15278" 
+  "15254" -> "15257" 
+  "15257" -> "15278" 
+  "15261" -> "15264" 
+  "15264" -> "15278" 
+  "15267" -> "15277" 
+  "15277" -> "15278" 
+  "15268" -> "15267" 
+  "15269" -> "15274" 
+  "15273" -> "15268" 
+  "15270" -> "15269" 
+  "15274" -> "15273" 
+  "15231" -> "15240" 
+  "15231" -> "15247" 
+  "15231" -> "15254" 
+  "15231" -> "15261" 
+  "15231" -> "15270" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/268-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/268-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/268-cfg.dot	2023-06-07 19:35:41.617383217 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/268-cfg.dot	2023-06-07 19:35:48.177382771 +0330
@@ -1,5 +1,5 @@
 digraph "va_end" {  
-"15537" [label = <(METHOD,va_end)> ]
-"15540" [label = <(METHOD_RETURN,ANY)> ]
-  "15537" -> "15540" 
+"15534" [label = <(METHOD,va_end)> ]
+"15537" [label = <(METHOD_RETURN,ANY)> ]
+  "15534" -> "15537" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/269-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/269-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/269-cfg.dot	2023-06-07 19:35:41.617383217 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/269-cfg.dot	2023-06-07 19:35:48.177382771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirection" {  
-"15541" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
-"15544" [label = <(METHOD_RETURN,ANY)> ]
-  "15541" -> "15544" 
+"15538" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
+"15541" [label = <(METHOD_RETURN,ANY)> ]
+  "15538" -> "15541" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/27-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/27-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/27-cfg.dot	2023-06-07 19:35:41.367383233 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/27-cfg.dot	2023-06-07 19:35:47.807382803 +0330
@@ -1,7 +1,7 @@
 digraph "GetVersion" {  
-"939" [label = <(RETURN,return JNI_VERSION_1_6;,return JNI_VERSION_1_6;)<SUB>564</SUB>> ]
-"936" [label = <(METHOD,GetVersion)<SUB>563</SUB>> ]
-"941" [label = <(METHOD_RETURN,jint)<SUB>563</SUB>> ]
+"939" [label = <(RETURN,return JNI_VERSION_1_6;,return JNI_VERSION_1_6;)<SUB>563</SUB>> ]
+"936" [label = <(METHOD,GetVersion)<SUB>562</SUB>> ]
+"941" [label = <(METHOD_RETURN,jint)<SUB>562</SUB>> ]
   "939" -> "941" 
   "936" -> "939" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/270-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/270-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/270-cfg.dot	2023-06-07 19:35:41.617383217 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/270-cfg.dot	2023-06-07 19:35:48.177382771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignment" {  
-"15545" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
-"15549" [label = <(METHOD_RETURN,ANY)> ]
-  "15545" -> "15549" 
+"15542" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
+"15546" [label = <(METHOD_RETURN,ANY)> ]
+  "15542" -> "15546" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/271-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/271-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/271-cfg.dot	2023-06-07 19:35:41.617383217 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/271-cfg.dot	2023-06-07 19:35:48.177382771 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK_LE" {  
-"15550" [label = <(METHOD,DCHECK_LE)> ]
-"15554" [label = <(METHOD_RETURN,ANY)> ]
-  "15550" -> "15554" 
+"15547" [label = <(METHOD,DCHECK_LE)> ]
+"15551" [label = <(METHOD_RETURN,ANY)> ]
+  "15547" -> "15551" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/272-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/272-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/272-cfg.dot	2023-06-07 19:35:41.617383217 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/272-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "strlen" {  
-"15555" [label = <(METHOD,strlen)> ]
-"15558" [label = <(METHOD_RETURN,ANY)> ]
-  "15555" -> "15558" 
+"15552" [label = <(METHOD,strlen)> ]
+"15555" [label = <(METHOD_RETURN,ANY)> ]
+  "15552" -> "15555" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/273-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/273-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/273-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/273-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addition" {  
-"15559" [label = <(METHOD,&lt;operator&gt;.addition)> ]
-"15563" [label = <(METHOD_RETURN,ANY)> ]
-  "15559" -> "15563" 
+"15556" [label = <(METHOD,&lt;operator&gt;.addition)> ]
+"15560" [label = <(METHOD_RETURN,ANY)> ]
+  "15556" -> "15560" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/274-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/274-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/274-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/274-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.notEquals" {  
-"15564" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
-"15568" [label = <(METHOD_RETURN,ANY)> ]
-  "15564" -> "15568" 
+"15561" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
+"15565" [label = <(METHOD_RETURN,ANY)> ]
+  "15561" -> "15565" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/275-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/275-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/275-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/275-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "LIKELY" {  
-"15569" [label = <(METHOD,LIKELY)> ]
-"15572" [label = <(METHOD_RETURN,ANY)> ]
-  "15569" -> "15572" 
+"15566" [label = <(METHOD,LIKELY)> ]
+"15569" [label = <(METHOD_RETURN,ANY)> ]
+  "15566" -> "15569" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/276-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/276-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/276-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/276-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.equals" {  
-"15573" [label = <(METHOD,&lt;operator&gt;.equals)> ]
-"15577" [label = <(METHOD_RETURN,ANY)> ]
-  "15573" -> "15577" 
+"15570" [label = <(METHOD,&lt;operator&gt;.equals)> ]
+"15574" [label = <(METHOD_RETURN,ANY)> ]
+  "15570" -> "15574" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/277-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/277-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/277-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/277-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.and" {  
-"15578" [label = <(METHOD,&lt;operator&gt;.and)> ]
-"15582" [label = <(METHOD_RETURN,ANY)> ]
-  "15578" -> "15582" 
+"15575" [label = <(METHOD,&lt;operator&gt;.and)> ]
+"15579" [label = <(METHOD_RETURN,ANY)> ]
+  "15575" -> "15579" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/278-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/278-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/278-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/278-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "good" {  
-"15583" [label = <(METHOD,good)> ]
-"15587" [label = <(METHOD_RETURN,ANY)> ]
-  "15583" -> "15587" 
+"15580" [label = <(METHOD,good)> ]
+"15584" [label = <(METHOD_RETURN,ANY)> ]
+  "15580" -> "15584" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/279-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/279-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/279-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/279-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentPlus" {  
-"15588" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
-"15592" [label = <(METHOD_RETURN,ANY)> ]
-  "15588" -> "15592" 
+"15585" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
+"15589" [label = <(METHOD_RETURN,ANY)> ]
+  "15585" -> "15589" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/28-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/28-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/28-cfg.dot	2023-06-07 19:35:41.367383233 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/28-cfg.dot	2023-06-07 19:35:47.807382803 +0330
@@ -1,9 +1,9 @@
 digraph "DefineClass" {  
-"950" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI DefineClass is not supported&quot;)<SUB>568</SUB>> ]
-"954" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>569</SUB>> ]
-"951" [label = <(LOG,LOG(WARNING))<SUB>568</SUB>> ]
-"943" [label = <(METHOD,DefineClass)<SUB>567</SUB>> ]
-"956" [label = <(METHOD_RETURN,jclass)<SUB>567</SUB>> ]
+"950" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI DefineClass is not supported&quot;)<SUB>567</SUB>> ]
+"954" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>568</SUB>> ]
+"951" [label = <(LOG,LOG(WARNING))<SUB>567</SUB>> ]
+"943" [label = <(METHOD,DefineClass)<SUB>566</SUB>> ]
+"956" [label = <(METHOD_RETURN,jclass)<SUB>566</SUB>> ]
   "950" -> "954" 
   "954" -> "956" 
   "951" -> "950" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/280-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/280-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/280-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/280-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessThan" {  
-"15593" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
-"15597" [label = <(METHOD_RETURN,ANY)> ]
-  "15593" -> "15597" 
+"15590" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
+"15594" [label = <(METHOD_RETURN,ANY)> ]
+  "15590" -> "15594" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/281-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/281-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/281-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/281-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.cast" {  
-"15598" [label = <(METHOD,&lt;operator&gt;.cast)> ]
-"15602" [label = <(METHOD_RETURN,ANY)> ]
-  "15598" -> "15602" 
+"15595" [label = <(METHOD,&lt;operator&gt;.cast)> ]
+"15599" [label = <(METHOD_RETURN,ANY)> ]
+  "15595" -> "15599" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/282-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/282-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/282-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/282-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.subtraction" {  
-"15603" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
-"15607" [label = <(METHOD_RETURN,ANY)> ]
-  "15603" -> "15607" 
+"15600" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
+"15604" [label = <(METHOD_RETURN,ANY)> ]
+  "15600" -> "15604" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/283-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/283-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/283-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/283-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.conditional" {  
-"15608" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
-"15613" [label = <(METHOD_RETURN,ANY)> ]
-  "15608" -> "15613" 
+"15605" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
+"15610" [label = <(METHOD_RETURN,ANY)> ]
+  "15605" -> "15610" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/284-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/284-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/284-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/284-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "bad" {  
-"15614" [label = <(METHOD,bad)> ]
-"15616" [label = <(METHOD_RETURN,ANY)> ]
-  "15614" -> "15616" 
+"15611" [label = <(METHOD,bad)> ]
+"15613" [label = <(METHOD_RETURN,ANY)> ]
+  "15611" -> "15613" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/285-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/285-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/285-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/285-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalAnd" {  
-"15617" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
-"15621" [label = <(METHOD_RETURN,ANY)> ]
-  "15617" -> "15621" 
+"15614" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
+"15618" [label = <(METHOD_RETURN,ANY)> ]
+  "15614" -> "15618" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/286-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/286-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/286-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/286-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.fieldAccess" {  
-"15622" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
-"15626" [label = <(METHOD_RETURN,ANY)> ]
-  "15622" -> "15626" 
+"15619" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
+"15623" [label = <(METHOD_RETURN,ANY)> ]
+  "15619" -> "15623" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/287-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/287-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/287-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/287-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "is_ascii" {  
-"15627" [label = <(METHOD,is_ascii)> ]
-"15629" [label = <(METHOD_RETURN,ANY)> ]
-  "15627" -> "15629" 
+"15624" [label = <(METHOD,is_ascii)> ]
+"15626" [label = <(METHOD_RETURN,ANY)> ]
+  "15624" -> "15626" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/288-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/288-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/288-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/288-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "GetInstrumentation" {  
-"15630" [label = <(METHOD,GetInstrumentation)> ]
-"15633" [label = <(METHOD_RETURN,ANY)> ]
-  "15630" -> "15633" 
+"15627" [label = <(METHOD,GetInstrumentation)> ]
+"15630" [label = <(METHOD_RETURN,ANY)> ]
+  "15627" -> "15630" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/289-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/289-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/289-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/289-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectFieldAccess" {  
-"15634" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
-"15638" [label = <(METHOD_RETURN,ANY)> ]
-  "15634" -> "15638" 
+"15631" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
+"15635" [label = <(METHOD_RETURN,ANY)> ]
+  "15631" -> "15635" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/29-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/29-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/29-cfg.dot	2023-06-07 19:35:41.367383233 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/29-cfg.dot	2023-06-07 19:35:47.807382803 +0330
@@ -1,74 +1,74 @@
 digraph "FindClass" {  
-"962" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>573</SUB>> ]
-"981" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>574</SUB>> ]
-"988" [label = <(&lt;operator&gt;.assignment,* class_linker = runtime-&gt;GetClassLinker())<SUB>575</SUB>> ]
-"995" [label = <(descriptor,descriptor(NormalizeJniClassDescriptor(name)))<SUB>576</SUB>> ]
-"999" [label = <(soa,soa(env))<SUB>577</SUB>> ]
-"1001" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = nullptr)<SUB>578</SUB>> ]
-"1072" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c);,return soa.AddLocalReference&lt;jclass&gt;(c);)<SUB>586</SUB>> ]
-"983" [label = <(Runtime::Current,Runtime::Current())<SUB>574</SUB>> ]
-"990" [label = <(GetClassLinker,runtime-&gt;GetClassLinker())<SUB>575</SUB>> ]
-"996" [label = <(NormalizeJniClassDescriptor,NormalizeJniClassDescriptor(name))<SUB>576</SUB>> ]
-"1002" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>578</SUB>> ]
-"1011" [label = <(IsStarted,runtime-&gt;IsStarted())<SUB>579</SUB>> ]
-"1073" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c))<SUB>586</SUB>> ]
-"984" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>574</SUB>> ]
-"991" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetClassLinker)<SUB>575</SUB>> ]
-"1003" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>578</SUB>> ]
-"1012" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;IsStarted)<SUB>579</SUB>> ]
-"1016" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>580</SUB>> ]
-"1025" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(GetClassLoader&lt;kEnableIndexIds&gt;(soa))))<SUB>581</SUB>> ]
-"1041" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>582</SUB>> ]
-"1074" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>586</SUB>> ]
-"966" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>573</SUB>> ]
-"986" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>574</SUB>> ]
-"993" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>575</SUB>> ]
-"1005" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>578</SUB>> ]
-"1014" [label = <(FIELD_IDENTIFIER,IsStarted,IsStarted)<SUB>579</SUB>> ]
-"1017" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>580</SUB>> ]
-"1020" [label = <(hs,hs(soa.Self()))<SUB>580</SUB>> ]
-"1026" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::ClassLoader)<SUB>581</SUB>> ]
-"1031" [label = <(class_loader,class_loader(hs.NewHandle(GetClassLoader&lt;kEnableIndexIds&gt;(soa))))<SUB>581</SUB>> ]
-"1043" [label = <(FindClass,class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>582</SUB>> ]
-"1058" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>584</SUB>> ]
-"1075" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>586</SUB>> ]
-"967" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>573</SUB>> ]
-"971" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>573</SUB>> ]
-"978" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>573</SUB>> ]
-"1007" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>578</SUB>> ]
-"1021" [label = <(Self,soa.Self())<SUB>580</SUB>> ]
-"1028" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>581</SUB>> ]
-"1032" [label = <(NewHandle,hs.NewHandle(GetClassLoader&lt;kEnableIndexIds&gt;(soa)))<SUB>581</SUB>> ]
-"1044" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindClass)<SUB>582</SUB>> ]
-"1047" [label = <(Self,soa.Self())<SUB>582</SUB>> ]
-"1051" [label = <(c_str,descriptor.c_str())<SUB>582</SUB>> ]
-"1060" [label = <(FindSystemClass,class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>584</SUB>> ]
-"1077" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>586</SUB>> ]
-"972" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>573</SUB>> ]
-"1022" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>580</SUB>> ]
-"1030" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>581</SUB>> ]
-"1033" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>581</SUB>> ]
-"1036" [label = <(&lt;operator&gt;.greaterThan,GetClassLoader&lt;kEnableIndexIds&gt;(soa))<SUB>581</SUB>> ]
-"1046" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>582</SUB>> ]
-"1048" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>582</SUB>> ]
-"1052" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>582</SUB>> ]
-"1061" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindSystemClass)<SUB>584</SUB>> ]
-"1064" [label = <(Self,soa.Self())<SUB>584</SUB>> ]
-"1068" [label = <(c_str,descriptor.c_str())<SUB>584</SUB>> ]
-"973" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>573</SUB>> ]
-"975" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>573</SUB>> ]
-"1024" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>580</SUB>> ]
-"1035" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>581</SUB>> ]
-"1037" [label = <(&lt;operator&gt;.lessThan,GetClassLoader&lt;kEnableIndexIds)<SUB>581</SUB>> ]
-"1050" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>582</SUB>> ]
-"1054" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>582</SUB>> ]
-"1063" [label = <(FIELD_IDENTIFIER,FindSystemClass,FindSystemClass)<SUB>584</SUB>> ]
-"1065" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>584</SUB>> ]
-"1069" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>584</SUB>> ]
-"1067" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>584</SUB>> ]
-"1071" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>584</SUB>> ]
-"958" [label = <(METHOD,FindClass)<SUB>572</SUB>> ]
-"1080" [label = <(METHOD_RETURN,jclass)<SUB>572</SUB>> ]
+"962" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>572</SUB>> ]
+"981" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>573</SUB>> ]
+"988" [label = <(&lt;operator&gt;.assignment,* class_linker = runtime-&gt;GetClassLinker())<SUB>574</SUB>> ]
+"995" [label = <(descriptor,descriptor(NormalizeJniClassDescriptor(name)))<SUB>575</SUB>> ]
+"999" [label = <(soa,soa(env))<SUB>576</SUB>> ]
+"1001" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = nullptr)<SUB>577</SUB>> ]
+"1072" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c);,return soa.AddLocalReference&lt;jclass&gt;(c);)<SUB>585</SUB>> ]
+"983" [label = <(Runtime::Current,Runtime::Current())<SUB>573</SUB>> ]
+"990" [label = <(GetClassLinker,runtime-&gt;GetClassLinker())<SUB>574</SUB>> ]
+"996" [label = <(NormalizeJniClassDescriptor,NormalizeJniClassDescriptor(name))<SUB>575</SUB>> ]
+"1002" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>577</SUB>> ]
+"1011" [label = <(IsStarted,runtime-&gt;IsStarted())<SUB>578</SUB>> ]
+"1073" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c))<SUB>585</SUB>> ]
+"984" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>573</SUB>> ]
+"991" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetClassLinker)<SUB>574</SUB>> ]
+"1003" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>577</SUB>> ]
+"1012" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;IsStarted)<SUB>578</SUB>> ]
+"1016" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>579</SUB>> ]
+"1025" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(GetClassLoader&lt;kEnableIndexIds&gt;(soa))))<SUB>580</SUB>> ]
+"1041" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>581</SUB>> ]
+"1074" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>585</SUB>> ]
+"966" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>572</SUB>> ]
+"986" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>573</SUB>> ]
+"993" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>574</SUB>> ]
+"1005" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>577</SUB>> ]
+"1014" [label = <(FIELD_IDENTIFIER,IsStarted,IsStarted)<SUB>578</SUB>> ]
+"1017" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>579</SUB>> ]
+"1020" [label = <(hs,hs(soa.Self()))<SUB>579</SUB>> ]
+"1026" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::ClassLoader)<SUB>580</SUB>> ]
+"1031" [label = <(class_loader,class_loader(hs.NewHandle(GetClassLoader&lt;kEnableIndexIds&gt;(soa))))<SUB>580</SUB>> ]
+"1043" [label = <(FindClass,class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>581</SUB>> ]
+"1058" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>583</SUB>> ]
+"1075" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>585</SUB>> ]
+"967" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>572</SUB>> ]
+"971" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>572</SUB>> ]
+"978" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>572</SUB>> ]
+"1007" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>577</SUB>> ]
+"1021" [label = <(Self,soa.Self())<SUB>579</SUB>> ]
+"1028" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>580</SUB>> ]
+"1032" [label = <(NewHandle,hs.NewHandle(GetClassLoader&lt;kEnableIndexIds&gt;(soa)))<SUB>580</SUB>> ]
+"1044" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindClass)<SUB>581</SUB>> ]
+"1047" [label = <(Self,soa.Self())<SUB>581</SUB>> ]
+"1051" [label = <(c_str,descriptor.c_str())<SUB>581</SUB>> ]
+"1060" [label = <(FindSystemClass,class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>583</SUB>> ]
+"1077" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>585</SUB>> ]
+"972" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>572</SUB>> ]
+"1022" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>579</SUB>> ]
+"1030" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>580</SUB>> ]
+"1033" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>580</SUB>> ]
+"1036" [label = <(&lt;operator&gt;.greaterThan,GetClassLoader&lt;kEnableIndexIds&gt;(soa))<SUB>580</SUB>> ]
+"1046" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>581</SUB>> ]
+"1048" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>581</SUB>> ]
+"1052" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>581</SUB>> ]
+"1061" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindSystemClass)<SUB>583</SUB>> ]
+"1064" [label = <(Self,soa.Self())<SUB>583</SUB>> ]
+"1068" [label = <(c_str,descriptor.c_str())<SUB>583</SUB>> ]
+"973" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>572</SUB>> ]
+"975" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>572</SUB>> ]
+"1024" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>579</SUB>> ]
+"1035" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>580</SUB>> ]
+"1037" [label = <(&lt;operator&gt;.lessThan,GetClassLoader&lt;kEnableIndexIds)<SUB>580</SUB>> ]
+"1050" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>581</SUB>> ]
+"1054" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>581</SUB>> ]
+"1063" [label = <(FIELD_IDENTIFIER,FindSystemClass,FindSystemClass)<SUB>583</SUB>> ]
+"1065" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>583</SUB>> ]
+"1069" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>583</SUB>> ]
+"1067" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>583</SUB>> ]
+"1071" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>583</SUB>> ]
+"958" [label = <(METHOD,FindClass)<SUB>571</SUB>> ]
+"1080" [label = <(METHOD_RETURN,jclass)<SUB>571</SUB>> ]
   "962" -> "967" 
   "962" -> "986" 
   "981" -> "993" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/290-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/290-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/290-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/290-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "Runtime::Current" {  
-"15639" [label = <(METHOD,Runtime::Current)> ]
-"15642" [label = <(METHOD_RETURN,ANY)> ]
-  "15639" -> "15642" 
+"15636" [label = <(METHOD,Runtime::Current)> ]
+"15639" [label = <(METHOD_RETURN,ANY)> ]
+  "15636" -> "15639" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/291-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/291-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/291-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/291-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectIndexAccess" {  
-"15643" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
-"15647" [label = <(METHOD_RETURN,ANY)> ]
-  "15643" -> "15647" 
+"15640" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
+"15644" [label = <(METHOD_RETURN,ANY)> ]
+  "15640" -> "15644" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/292-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/292-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/292-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/292-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "find" {  
-"15648" [label = <(METHOD,find)> ]
-"15652" [label = <(METHOD_RETURN,ANY)> ]
-  "15648" -> "15652" 
+"15645" [label = <(METHOD,find)> ]
+"15649" [label = <(METHOD_RETURN,ANY)> ]
+  "15645" -> "15649" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/293-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/293-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/293-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/293-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.shiftLeft" {  
-"15653" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
-"15657" [label = <(METHOD_RETURN,ANY)> ]
-  "15653" -> "15657" 
+"15650" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
+"15654" [label = <(METHOD_RETURN,ANY)> ]
+  "15650" -> "15654" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/294-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/294-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/294-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/294-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "LOG" {  
-"15658" [label = <(METHOD,LOG)> ]
-"15661" [label = <(METHOD_RETURN,ANY)> ]
-  "15658" -> "15661" 
+"15655" [label = <(METHOD,LOG)> ]
+"15658" [label = <(METHOD_RETURN,ANY)> ]
+  "15655" -> "15658" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/295-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/295-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/295-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/295-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "std::replace" {  
-"15662" [label = <(METHOD,std::replace)> ]
-"15669" [label = <(METHOD_RETURN,ANY)> ]
-  "15662" -> "15669" 
+"15659" [label = <(METHOD,std::replace)> ]
+"15666" [label = <(METHOD_RETURN,ANY)> ]
+  "15659" -> "15666" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/296-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/296-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/296-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/296-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "begin" {  
-"15670" [label = <(METHOD,begin)> ]
-"15673" [label = <(METHOD_RETURN,ANY)> ]
-  "15670" -> "15673" 
+"15667" [label = <(METHOD,begin)> ]
+"15670" [label = <(METHOD_RETURN,ANY)> ]
+  "15667" -> "15670" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/297-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/297-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/297-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/297-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "end" {  
-"15674" [label = <(METHOD,end)> ]
-"15677" [label = <(METHOD_RETURN,ANY)> ]
-  "15674" -> "15677" 
+"15671" [label = <(METHOD,end)> ]
+"15674" [label = <(METHOD_RETURN,ANY)> ]
+  "15671" -> "15674" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/298-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/298-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/298-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/298-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterThan" {  
-"15678" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
-"15682" [label = <(METHOD_RETURN,ANY)> ]
-  "15678" -> "15682" 
+"15675" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
+"15679" [label = <(METHOD_RETURN,ANY)> ]
+  "15675" -> "15679" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/299-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/299-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/299-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/299-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "GetSystemClassLoader" {  
-"15683" [label = <(METHOD,GetSystemClassLoader)> ]
-"15686" [label = <(METHOD_RETURN,ANY)> ]
-  "15683" -> "15686" 
+"15680" [label = <(METHOD,GetSystemClassLoader)> ]
+"15683" [label = <(METHOD_RETURN,ANY)> ]
+  "15680" -> "15683" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/3-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/3-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/3-cfg.dot	2023-06-07 19:35:41.337383234 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/3-cfg.dot	2023-06-07 19:35:47.777382805 +0330
@@ -1,125 +1,125 @@
 digraph "&lt;global&gt;" {  
-"259" [label = <(UNKNOWN,),))<SUB>212</SUB>> ]
-"260" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>213</SUB>> ]
-"262" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>215</SUB>> ]
-"271" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>216</SUB>> ]
-"272" [label = <(UNKNOWN,},})<SUB>235</SUB>> ]
-"279" [label = <(UNKNOWN,),))<SUB>237</SUB>> ]
-"280" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();)<SUB>238</SUB>> ]
-"281" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 })<SUB>240</SUB>> ]
-"282" [label = <(UNKNOWN,},})<SUB>258</SUB>> ]
-"357" [label = <(UNKNOWN,),))<SUB>287</SUB>> ]
-"358" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;)<SUB>288</SUB>> ]
-"359" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);)<SUB>293</SUB>> ]
-"360" [label = <(UNKNOWN,},})<SUB>297</SUB>> ]
-"370" [label = <(UNKNOWN,),))<SUB>301</SUB>> ]
-"371" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 return jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(FindMethodJNI(soa, jni_class, name, sig, is_static));,REQUIRES_SHARED(Locks::mutator_lock_) {\012 return jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(FindMethodJNI(soa, jni_class, name, sig, is_static));)<SUB>302</SUB>> ]
-"372" [label = <(UNKNOWN,},})<SUB>304</SUB>> ]
-"378" [label = <(UNKNOWN,),))<SUB>307</SUB>> ]
-"379" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);)<SUB>308</SUB>> ]
-"380" [label = <(UNKNOWN,if (method ==\012      jni::DecodeArtMethod&lt;kEnableIndexIds&gt;(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 },if (method ==\012      jni::DecodeArtMethod&lt;kEnableIndexIds&gt;(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 })<SUB>311</SUB>> ]
-"381" [label = <(UNKNOWN,if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 },if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 })<SUB>316</SUB>> ]
-"383" [label = <(&lt;operator&gt;.assignment,class_loader =\012      soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>320</SUB>> ]
-"400" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 return class_loader;\012 },if (class_loader != nullptr) {\012 return class_loader;\012 })<SUB>322</SUB>> ]
-"401" [label = <(UNKNOWN,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());)<SUB>326</SUB>> ]
-"402" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 },if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 })<SUB>327</SUB>> ]
-"403" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>335</SUB>> ]
-"404" [label = <(UNKNOWN,},})<SUB>336</SUB>> ]
-"414" [label = <(UNKNOWN,),))<SUB>340</SUB>> ]
-"415" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 return jni::EncodeArtField&lt;kEnableIndexIds&gt;(FindFieldJNI(soa, jni_class, name, sig, is_static));,REQUIRES_SHARED(Locks::mutator_lock_) {\012 return jni::EncodeArtField&lt;kEnableIndexIds&gt;(FindFieldJNI(soa, jni_class, name, sig, is_static));)<SUB>341</SUB>> ]
-"416" [label = <(UNKNOWN,},})<SUB>343</SUB>> ]
-"426" [label = <(UNKNOWN,),))<SUB>349</SUB>> ]
-"427" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());)<SUB>350</SUB>> ]
-"428" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());)<SUB>352</SUB>> ]
-"429" [label = <(UNKNOWN,},})<SUB>355</SUB>> ]
-"438" [label = <(UNKNOWN,),))<SUB>358</SUB>> ]
-"439" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);)<SUB>359</SUB>> ]
-"440" [label = <(UNKNOWN,},})<SUB>363</SUB>> ]
-"450" [label = <(UNKNOWN,),))<SUB>369</SUB>> ]
-"451" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;)<SUB>370</SUB>> ]
-"452" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);)<SUB>372</SUB>> ]
-"453" [label = <(UNKNOWN,},})<SUB>378</SUB>> ]
-"460" [label = <(UNKNOWN,),))<SUB>380</SUB>> ]
-"461" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 },REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 })<SUB>381</SUB>> ]
-"468" [label = <(h_klass,h_klass(hs.NewHandle(klass)))<SUB>386</SUB>> ]
-"474" [label = <(UNKNOWN,if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 },if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 })<SUB>387</SUB>> ]
-"475" [label = <(UNKNOWN,return h_klass.Get();,return h_klass.Get();)<SUB>390</SUB>> ]
-"476" [label = <(UNKNOWN,},})<SUB>391</SUB>> ]
-"910" [label = <(UNKNOWN,),))<SUB>476</SUB>> ]
-"911" [label = <(UNKNOWN,REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012},REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012})<SUB>477</SUB>> ]
-"931" [label = <(UNKNOWN,),))<SUB>549</SUB>> ]
-"932" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();)<SUB>550</SUB>> ]
-"933" [label = <(UNKNOWN,for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 },for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 })<SUB>552</SUB>> ]
-"934" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>557</SUB>> ]
-"935" [label = <(UNKNOWN,},})<SUB>558</SUB>> ]
-"13777" [label = <(UNKNOWN,},})<SUB>2703</SUB>> ]
-"13833" [label = <(UNKNOWN,),))<SUB>2720</SUB>> ]
-"13834" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);)<SUB>2721</SUB>> ]
-"13836" [label = <(&lt;operator&gt;.assignment,expected_array_class = GetClassRoot&lt;ArtArrayT&gt;())<SUB>2723</SUB>> ]
-"13839" [label = <(UNKNOWN,if (UNLIKELY(expected_array_class != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012                              expected_array_class-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 },if (UNLIKELY(expected_array_class != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012                              expected_array_class-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 })<SUB>2724</SUB>> ]
-"13840" [label = <(UNKNOWN,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());)<SUB>2733</SUB>> ]
-"13841" [label = <(UNKNOWN,return array;,return array;)<SUB>2734</SUB>> ]
-"13842" [label = <(UNKNOWN,},})<SUB>2735</SUB>> ]
-"14015" [label = <(UNKNOWN,),))<SUB>2780</SUB>> ]
-"14016" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);)<SUB>2781</SUB>> ]
-"14018" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2783</SUB>> ]
-"14028" [label = <(&lt;operator&gt;.assignment,is_copy = array_data != elements)<SUB>2784</SUB>> ]
-"14034" [label = <(&lt;operator&gt;.assignment,bytes = array-&gt;GetLength() * component_size)<SUB>2785</SUB>> ]
-"14042" [label = <(UNKNOWN,if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 },if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 })<SUB>2786</SUB>> ]
-"14043" [label = <(UNKNOWN,if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 },if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 })<SUB>2804</SUB>> ]
-"14044" [label = <(UNKNOWN,},})<SUB>2816</SUB>> ]
-"14257" [label = <(UNKNOWN,};,};)<SUB>2853</SUB>> ]
-"14988" [label = <(&lt;operator&gt;.assignment,(*gJniSleepForeverStub[])() = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3104</SUB>> ]
-"15233" [label = <(UNKNOWN,},})<SUB>3344</SUB>> ]
-"228" [label = <(&lt;operator&gt;.assignment,kWarnJniAbort = false)<SUB>164</SUB>> ]
-"231" [label = <(UNKNOWN,template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldDenyAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012 return hiddenapi::ShouldDenyAccessToMember(\012      member,\012 [&amp;]() REQUIRES_SHARED(Locks::mutator_lock_) {\012 // Construct AccessContext from the first calling class on stack.\012 // If the calling class cannot be determined, e.g. unattached threads,\012 // we conservatively assume the caller is trusted.\012 ObjPtr&lt;mirror::Class&gt; caller = GetCallingClass(self, /* num_frames */ 1);\012 return caller.IsNull() ? hiddenapi::AccessContext(/* is_trusted= */ true)\012 : hiddenapi::AccessContext(caller);\012 },\012      hiddenapi::AccessMethod::kJNI);\012},template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldDenyAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012 return hiddenapi::ShouldDenyAccessToMember(\012      member,\012 [&amp;]() REQUIRES_SHARED(Locks::mutator_lock_) {\012 // Construct AccessContext from the first calling class on stack.\012 // If the calling class cannot be determined, e.g. unattached threads,\012 // we conservatively assume the caller is trusted.\012 ObjPtr&lt;mirror::Class&gt; caller = GetCallingClass(self, /* num_frames */ 1);\012 return caller.IsNull() ? hiddenapi::AccessContext(/* is_trusted= */ true)\012 : hiddenapi::AccessContext(caller);\012 },\012      hiddenapi::AccessMethod::kJNI);\012})<SUB>166</SUB>> ]
-"239" [label = <(UNKNOWN,),))<SUB>185</SUB>> ]
-"240" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>186</SUB>> ]
-"242" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>188</SUB>> ]
-"251" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>189</SUB>> ]
-"264" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>215</SUB>> ]
-"385" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>321</SUB>> ]
-"469" [label = <(NewHandle,hs.NewHandle(klass))<SUB>386</SUB>> ]
-"13838" [label = <(GetClassRoot&lt;ArtArrayT&gt;,GetClassRoot&lt;ArtArrayT&gt;())<SUB>2723</SUB>> ]
-"14020" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2783</SUB>> ]
-"14030" [label = <(&lt;operator&gt;.notEquals,array_data != elements)<SUB>2784</SUB>> ]
-"14036" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2785</SUB>> ]
-"14990" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3104</SUB>> ]
-"49" [label = <(&lt;operator&gt;.assignment,kBadUtf8ReplacementChar[] = &quot;?&quot;)<SUB>84</SUB>> ]
-"244" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>188</SUB>> ]
-"265" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>215</SUB>> ]
-"386" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ClassLoader)<SUB>321</SUB>> ]
-"393" [label = <(GetSystemClassLoader,Runtime::Current()-&gt;GetSystemClassLoader())<SUB>321</SUB>> ]
-"470" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>386</SUB>> ]
-"14021" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2783</SUB>> ]
-"14037" [label = <(GetLength,array-&gt;GetLength())<SUB>2785</SUB>> ]
-"245" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>188</SUB>> ]
-"266" [label = <(Runtime::Current,Runtime::Current())<SUB>215</SUB>> ]
-"270" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>215</SUB>> ]
-"387" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>321</SUB>> ]
-"390" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>321</SUB>> ]
-"394" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetSystemClassLoader)<SUB>321</SUB>> ]
-"472" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>386</SUB>> ]
-"14022" [label = <(Runtime::Current,Runtime::Current())<SUB>2783</SUB>> ]
-"14026" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2783</SUB>> ]
-"14038" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2785</SUB>> ]
-"246" [label = <(Runtime::Current,Runtime::Current())<SUB>188</SUB>> ]
-"250" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>188</SUB>> ]
-"267" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>215</SUB>> ]
-"389" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>321</SUB>> ]
-"392" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>321</SUB>> ]
-"395" [label = <(Runtime::Current,Runtime::Current())<SUB>321</SUB>> ]
-"399" [label = <(FIELD_IDENTIFIER,GetSystemClassLoader,GetSystemClassLoader)<SUB>321</SUB>> ]
-"14023" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2783</SUB>> ]
-"14040" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2785</SUB>> ]
-"247" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>188</SUB>> ]
-"269" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>215</SUB>> ]
-"396" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>321</SUB>> ]
-"14025" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2783</SUB>> ]
-"249" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>188</SUB>> ]
-"398" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>321</SUB>> ]
+"259" [label = <(UNKNOWN,),))<SUB>211</SUB>> ]
+"260" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>212</SUB>> ]
+"262" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>214</SUB>> ]
+"271" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>215</SUB>> ]
+"272" [label = <(UNKNOWN,},})<SUB>234</SUB>> ]
+"279" [label = <(UNKNOWN,),))<SUB>236</SUB>> ]
+"280" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();)<SUB>237</SUB>> ]
+"281" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 })<SUB>239</SUB>> ]
+"282" [label = <(UNKNOWN,},})<SUB>257</SUB>> ]
+"357" [label = <(UNKNOWN,),))<SUB>286</SUB>> ]
+"358" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;)<SUB>287</SUB>> ]
+"359" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);)<SUB>292</SUB>> ]
+"360" [label = <(UNKNOWN,},})<SUB>296</SUB>> ]
+"370" [label = <(UNKNOWN,),))<SUB>300</SUB>> ]
+"371" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 return jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(FindMethodJNI(soa, jni_class, name, sig, is_static));,REQUIRES_SHARED(Locks::mutator_lock_) {\012 return jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(FindMethodJNI(soa, jni_class, name, sig, is_static));)<SUB>301</SUB>> ]
+"372" [label = <(UNKNOWN,},})<SUB>303</SUB>> ]
+"378" [label = <(UNKNOWN,),))<SUB>306</SUB>> ]
+"379" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);)<SUB>307</SUB>> ]
+"380" [label = <(UNKNOWN,if (method ==\012      jni::DecodeArtMethod&lt;kEnableIndexIds&gt;(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 },if (method ==\012      jni::DecodeArtMethod&lt;kEnableIndexIds&gt;(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 })<SUB>310</SUB>> ]
+"381" [label = <(UNKNOWN,if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 },if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 })<SUB>315</SUB>> ]
+"383" [label = <(&lt;operator&gt;.assignment,class_loader =\012      soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>319</SUB>> ]
+"400" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 return class_loader;\012 },if (class_loader != nullptr) {\012 return class_loader;\012 })<SUB>321</SUB>> ]
+"401" [label = <(UNKNOWN,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());)<SUB>325</SUB>> ]
+"402" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 },if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 })<SUB>326</SUB>> ]
+"403" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>334</SUB>> ]
+"404" [label = <(UNKNOWN,},})<SUB>335</SUB>> ]
+"414" [label = <(UNKNOWN,),))<SUB>339</SUB>> ]
+"415" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 return jni::EncodeArtField&lt;kEnableIndexIds&gt;(FindFieldJNI(soa, jni_class, name, sig, is_static));,REQUIRES_SHARED(Locks::mutator_lock_) {\012 return jni::EncodeArtField&lt;kEnableIndexIds&gt;(FindFieldJNI(soa, jni_class, name, sig, is_static));)<SUB>340</SUB>> ]
+"416" [label = <(UNKNOWN,},})<SUB>342</SUB>> ]
+"426" [label = <(UNKNOWN,),))<SUB>348</SUB>> ]
+"427" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());)<SUB>349</SUB>> ]
+"428" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());)<SUB>351</SUB>> ]
+"429" [label = <(UNKNOWN,},})<SUB>354</SUB>> ]
+"438" [label = <(UNKNOWN,),))<SUB>357</SUB>> ]
+"439" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);)<SUB>358</SUB>> ]
+"440" [label = <(UNKNOWN,},})<SUB>362</SUB>> ]
+"450" [label = <(UNKNOWN,),))<SUB>368</SUB>> ]
+"451" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;)<SUB>369</SUB>> ]
+"452" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);)<SUB>371</SUB>> ]
+"453" [label = <(UNKNOWN,},})<SUB>377</SUB>> ]
+"460" [label = <(UNKNOWN,),))<SUB>379</SUB>> ]
+"461" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 },REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 })<SUB>380</SUB>> ]
+"468" [label = <(h_klass,h_klass(hs.NewHandle(klass)))<SUB>385</SUB>> ]
+"474" [label = <(UNKNOWN,if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 },if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 })<SUB>386</SUB>> ]
+"475" [label = <(UNKNOWN,return h_klass.Get();,return h_klass.Get();)<SUB>389</SUB>> ]
+"476" [label = <(UNKNOWN,},})<SUB>390</SUB>> ]
+"910" [label = <(UNKNOWN,),))<SUB>475</SUB>> ]
+"911" [label = <(UNKNOWN,REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012},REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012})<SUB>476</SUB>> ]
+"931" [label = <(UNKNOWN,),))<SUB>548</SUB>> ]
+"932" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();)<SUB>549</SUB>> ]
+"933" [label = <(UNKNOWN,for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 },for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 })<SUB>551</SUB>> ]
+"934" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>556</SUB>> ]
+"935" [label = <(UNKNOWN,},})<SUB>557</SUB>> ]
+"13774" [label = <(UNKNOWN,},})<SUB>2701</SUB>> ]
+"13830" [label = <(UNKNOWN,),))<SUB>2718</SUB>> ]
+"13831" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);)<SUB>2719</SUB>> ]
+"13833" [label = <(&lt;operator&gt;.assignment,expected_array_class = GetClassRoot&lt;ArtArrayT&gt;())<SUB>2721</SUB>> ]
+"13836" [label = <(UNKNOWN,if (UNLIKELY(expected_array_class != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012                              expected_array_class-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 },if (UNLIKELY(expected_array_class != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012                              expected_array_class-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 })<SUB>2722</SUB>> ]
+"13837" [label = <(UNKNOWN,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());)<SUB>2731</SUB>> ]
+"13838" [label = <(UNKNOWN,return array;,return array;)<SUB>2732</SUB>> ]
+"13839" [label = <(UNKNOWN,},})<SUB>2733</SUB>> ]
+"14012" [label = <(UNKNOWN,),))<SUB>2778</SUB>> ]
+"14013" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);)<SUB>2779</SUB>> ]
+"14015" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2781</SUB>> ]
+"14025" [label = <(&lt;operator&gt;.assignment,is_copy = array_data != elements)<SUB>2782</SUB>> ]
+"14031" [label = <(&lt;operator&gt;.assignment,bytes = array-&gt;GetLength() * component_size)<SUB>2783</SUB>> ]
+"14039" [label = <(UNKNOWN,if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 },if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 })<SUB>2784</SUB>> ]
+"14040" [label = <(UNKNOWN,if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 },if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 })<SUB>2802</SUB>> ]
+"14041" [label = <(UNKNOWN,},})<SUB>2814</SUB>> ]
+"14254" [label = <(UNKNOWN,};,};)<SUB>2851</SUB>> ]
+"14985" [label = <(&lt;operator&gt;.assignment,(*gJniSleepForeverStub[])() = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3102</SUB>> ]
+"15230" [label = <(UNKNOWN,},})<SUB>3342</SUB>> ]
+"228" [label = <(&lt;operator&gt;.assignment,kWarnJniAbort = false)<SUB>163</SUB>> ]
+"231" [label = <(UNKNOWN,template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldDenyAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012 return hiddenapi::ShouldDenyAccessToMember(\012      member,\012 [&amp;]() REQUIRES_SHARED(Locks::mutator_lock_) {\012 // Construct AccessContext from the first calling class on stack.\012 // If the calling class cannot be determined, e.g. unattached threads,\012 // we conservatively assume the caller is trusted.\012 ObjPtr&lt;mirror::Class&gt; caller = GetCallingClass(self, /* num_frames */ 1);\012 return caller.IsNull() ? hiddenapi::AccessContext(/* is_trusted= */ true)\012 : hiddenapi::AccessContext(caller);\012 },\012      hiddenapi::AccessMethod::kJNI);\012},template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldDenyAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012 return hiddenapi::ShouldDenyAccessToMember(\012      member,\012 [&amp;]() REQUIRES_SHARED(Locks::mutator_lock_) {\012 // Construct AccessContext from the first calling class on stack.\012 // If the calling class cannot be determined, e.g. unattached threads,\012 // we conservatively assume the caller is trusted.\012 ObjPtr&lt;mirror::Class&gt; caller = GetCallingClass(self, /* num_frames */ 1);\012 return caller.IsNull() ? hiddenapi::AccessContext(/* is_trusted= */ true)\012 : hiddenapi::AccessContext(caller);\012 },\012      hiddenapi::AccessMethod::kJNI);\012})<SUB>165</SUB>> ]
+"239" [label = <(UNKNOWN,),))<SUB>184</SUB>> ]
+"240" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>185</SUB>> ]
+"242" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>187</SUB>> ]
+"251" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>188</SUB>> ]
+"264" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>214</SUB>> ]
+"385" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>320</SUB>> ]
+"469" [label = <(NewHandle,hs.NewHandle(klass))<SUB>385</SUB>> ]
+"13835" [label = <(GetClassRoot&lt;ArtArrayT&gt;,GetClassRoot&lt;ArtArrayT&gt;())<SUB>2721</SUB>> ]
+"14017" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2781</SUB>> ]
+"14027" [label = <(&lt;operator&gt;.notEquals,array_data != elements)<SUB>2782</SUB>> ]
+"14033" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2783</SUB>> ]
+"14987" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3102</SUB>> ]
+"49" [label = <(&lt;operator&gt;.assignment,kBadUtf8ReplacementChar[] = &quot;?&quot;)<SUB>83</SUB>> ]
+"244" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>187</SUB>> ]
+"265" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>214</SUB>> ]
+"386" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ClassLoader)<SUB>320</SUB>> ]
+"393" [label = <(GetSystemClassLoader,Runtime::Current()-&gt;GetSystemClassLoader())<SUB>320</SUB>> ]
+"470" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>385</SUB>> ]
+"14018" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2781</SUB>> ]
+"14034" [label = <(GetLength,array-&gt;GetLength())<SUB>2783</SUB>> ]
+"245" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>187</SUB>> ]
+"266" [label = <(Runtime::Current,Runtime::Current())<SUB>214</SUB>> ]
+"270" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>214</SUB>> ]
+"387" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>320</SUB>> ]
+"390" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>320</SUB>> ]
+"394" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetSystemClassLoader)<SUB>320</SUB>> ]
+"472" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>385</SUB>> ]
+"14019" [label = <(Runtime::Current,Runtime::Current())<SUB>2781</SUB>> ]
+"14023" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2781</SUB>> ]
+"14035" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2783</SUB>> ]
+"246" [label = <(Runtime::Current,Runtime::Current())<SUB>187</SUB>> ]
+"250" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>187</SUB>> ]
+"267" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>214</SUB>> ]
+"389" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>320</SUB>> ]
+"392" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>320</SUB>> ]
+"395" [label = <(Runtime::Current,Runtime::Current())<SUB>320</SUB>> ]
+"399" [label = <(FIELD_IDENTIFIER,GetSystemClassLoader,GetSystemClassLoader)<SUB>320</SUB>> ]
+"14020" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2781</SUB>> ]
+"14037" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2783</SUB>> ]
+"247" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>187</SUB>> ]
+"269" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>214</SUB>> ]
+"396" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>320</SUB>> ]
+"14022" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2781</SUB>> ]
+"249" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>187</SUB>> ]
+"398" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>320</SUB>> ]
 "20" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"15283" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+"15280" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
   "259" -> "260" 
   "260" -> "269" 
   "262" -> "271" 
@@ -172,26 +172,26 @@
   "932" -> "933" 
   "933" -> "934" 
   "934" -> "935" 
-  "935" -> "13777" 
-  "13777" -> "13833" 
-  "13833" -> "13834" 
-  "13834" -> "13838" 
-  "13836" -> "13839" 
-  "13839" -> "13840" 
-  "13840" -> "13841" 
-  "13841" -> "13842" 
-  "13842" -> "14015" 
-  "14015" -> "14016" 
-  "14016" -> "14025" 
-  "14018" -> "14030" 
-  "14028" -> "14040" 
-  "14034" -> "14042" 
-  "14042" -> "14043" 
-  "14043" -> "14044" 
-  "14044" -> "14257" 
-  "14257" -> "14990" 
-  "14988" -> "15233" 
-  "15233" -> "15283" 
+  "935" -> "13774" 
+  "13774" -> "13830" 
+  "13830" -> "13831" 
+  "13831" -> "13835" 
+  "13833" -> "13836" 
+  "13836" -> "13837" 
+  "13837" -> "13838" 
+  "13838" -> "13839" 
+  "13839" -> "14012" 
+  "14012" -> "14013" 
+  "14013" -> "14022" 
+  "14015" -> "14027" 
+  "14025" -> "14037" 
+  "14031" -> "14039" 
+  "14039" -> "14040" 
+  "14040" -> "14041" 
+  "14041" -> "14254" 
+  "14254" -> "14987" 
+  "14985" -> "15230" 
+  "15230" -> "15280" 
   "228" -> "231" 
   "231" -> "239" 
   "239" -> "240" 
@@ -201,19 +201,19 @@
   "264" -> "262" 
   "385" -> "383" 
   "469" -> "468" 
-  "13838" -> "13836" 
-  "14020" -> "14018" 
-  "14030" -> "14028" 
-  "14036" -> "14034" 
-  "14990" -> "14988" 
+  "13835" -> "13833" 
+  "14017" -> "14015" 
+  "14027" -> "14025" 
+  "14033" -> "14031" 
+  "14987" -> "14985" 
   "49" -> "228" 
   "244" -> "242" 
   "265" -> "264" 
   "386" -> "398" 
   "393" -> "385" 
   "470" -> "469" 
-  "14021" -> "14020" 
-  "14037" -> "14036" 
+  "14018" -> "14017" 
+  "14034" -> "14033" 
   "245" -> "244" 
   "266" -> "270" 
   "270" -> "265" 
@@ -221,9 +221,9 @@
   "390" -> "386" 
   "394" -> "393" 
   "472" -> "470" 
-  "14022" -> "14026" 
-  "14026" -> "14021" 
-  "14038" -> "14037" 
+  "14019" -> "14023" 
+  "14023" -> "14018" 
+  "14035" -> "14034" 
   "246" -> "250" 
   "250" -> "245" 
   "267" -> "266" 
@@ -231,12 +231,12 @@
   "392" -> "390" 
   "395" -> "399" 
   "399" -> "394" 
-  "14023" -> "14022" 
-  "14040" -> "14038" 
+  "14020" -> "14019" 
+  "14037" -> "14035" 
   "247" -> "246" 
   "269" -> "267" 
   "396" -> "395" 
-  "14025" -> "14023" 
+  "14022" -> "14020" 
   "249" -> "247" 
   "398" -> "396" 
   "20" -> "49" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/30-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/30-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/30-cfg.dot	2023-06-07 19:35:41.377383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/30-cfg.dot	2023-06-07 19:35:47.807382803 +0330
@@ -1,23 +1,23 @@
 digraph "FromReflectedMethod" {  
-"1086" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>590</SUB>> ]
-"1105" [label = <(soa,soa(env))<SUB>591</SUB>> ]
-"1107" [label = <(RETURN,return jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(ArtMethod::FromReflectedMethod(soa, jlr_method));,return jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(ArtMethod::FromReflectedMethod(soa, jlr_method));)<SUB>592</SUB>> ]
-"1108" [label = <(&lt;operator&gt;.greaterThan,jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(ArtMethod::FromReflectedMethod(soa, jlr_method)))<SUB>592</SUB>> ]
-"1109" [label = <(&lt;operator&gt;.lessThan,jni::EncodeArtMethod&lt;kEnableIndexIds)<SUB>592</SUB>> ]
-"1114" [label = <(ArtMethod::FromReflectedMethod,ArtMethod::FromReflectedMethod(soa, jlr_method))<SUB>592</SUB>> ]
-"1090" [label = <(UNLIKELY,UNLIKELY((jlr_method) == nullptr))<SUB>590</SUB>> ]
-"1110" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>592</SUB>> ]
-"1115" [label = <(&lt;operator&gt;.fieldAccess,ArtMethod::FromReflectedMethod)<SUB>592</SUB>> ]
-"1091" [label = <(&lt;operator&gt;.equals,(jlr_method) == nullptr)<SUB>590</SUB>> ]
-"1095" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_method),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_method == null&quot;))<SUB>590</SUB>> ]
-"1102" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_method),CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>590</SUB>> ]
-"1112" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>592</SUB>> ]
-"1117" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>592</SUB>> ]
-"1096" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>590</SUB>> ]
-"1097" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>590</SUB>> ]
-"1099" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>590</SUB>> ]
-"1082" [label = <(METHOD,FromReflectedMethod)<SUB>589</SUB>> ]
-"1120" [label = <(METHOD_RETURN,jmethodID)<SUB>589</SUB>> ]
+"1086" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>589</SUB>> ]
+"1105" [label = <(soa,soa(env))<SUB>590</SUB>> ]
+"1107" [label = <(RETURN,return jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(ArtMethod::FromReflectedMethod(soa, jlr_method));,return jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(ArtMethod::FromReflectedMethod(soa, jlr_method));)<SUB>591</SUB>> ]
+"1108" [label = <(&lt;operator&gt;.greaterThan,jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(ArtMethod::FromReflectedMethod(soa, jlr_method)))<SUB>591</SUB>> ]
+"1109" [label = <(&lt;operator&gt;.lessThan,jni::EncodeArtMethod&lt;kEnableIndexIds)<SUB>591</SUB>> ]
+"1114" [label = <(ArtMethod::FromReflectedMethod,ArtMethod::FromReflectedMethod(soa, jlr_method))<SUB>591</SUB>> ]
+"1090" [label = <(UNLIKELY,UNLIKELY((jlr_method) == nullptr))<SUB>589</SUB>> ]
+"1110" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>591</SUB>> ]
+"1115" [label = <(&lt;operator&gt;.fieldAccess,ArtMethod::FromReflectedMethod)<SUB>591</SUB>> ]
+"1091" [label = <(&lt;operator&gt;.equals,(jlr_method) == nullptr)<SUB>589</SUB>> ]
+"1095" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_method),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_method == null&quot;))<SUB>589</SUB>> ]
+"1102" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_method),CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>589</SUB>> ]
+"1112" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>591</SUB>> ]
+"1117" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>591</SUB>> ]
+"1096" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>589</SUB>> ]
+"1097" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>589</SUB>> ]
+"1099" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>589</SUB>> ]
+"1082" [label = <(METHOD,FromReflectedMethod)<SUB>588</SUB>> ]
+"1120" [label = <(METHOD_RETURN,jmethodID)<SUB>588</SUB>> ]
   "1086" -> "1091" 
   "1086" -> "1105" 
   "1105" -> "1112" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/300-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/300-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/300-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/300-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "h_klass" {  
-"15687" [label = <(METHOD,h_klass)> ]
-"15690" [label = <(METHOD_RETURN,ANY)> ]
-  "15687" -> "15690" 
+"15684" [label = <(METHOD,h_klass)> ]
+"15687" [label = <(METHOD_RETURN,ANY)> ]
+  "15684" -> "15687" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/301-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/301-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/301-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/301-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "NewHandle" {  
-"15691" [label = <(METHOD,NewHandle)> ]
-"15695" [label = <(METHOD_RETURN,ANY)> ]
-  "15691" -> "15695" 
+"15688" [label = <(METHOD,NewHandle)> ]
+"15692" [label = <(METHOD_RETURN,ANY)> ]
+  "15688" -> "15692" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/302-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/302-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/302-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/302-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "Self" {  
-"15696" [label = <(METHOD,Self)> ]
-"15699" [label = <(METHOD_RETURN,ANY)> ]
-  "15696" -> "15699" 
+"15693" [label = <(METHOD,Self)> ]
+"15696" [label = <(METHOD_RETURN,ANY)> ]
+  "15693" -> "15696" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/303-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/303-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/303-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/303-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "GetImagePointerSize" {  
-"15700" [label = <(METHOD,GetImagePointerSize)> ]
-"15703" [label = <(METHOD_RETURN,ANY)> ]
-  "15700" -> "15703" 
+"15697" [label = <(METHOD,GetImagePointerSize)> ]
+"15700" [label = <(METHOD_RETURN,ANY)> ]
+  "15697" -> "15700" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/304-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/304-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/304-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/304-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "GetClassLinker" {  
-"15704" [label = <(METHOD,GetClassLinker)> ]
-"15707" [label = <(METHOD_RETURN,ANY)> ]
-  "15704" -> "15707" 
+"15701" [label = <(METHOD,GetClassLinker)> ]
+"15704" [label = <(METHOD_RETURN,ANY)> ]
+  "15701" -> "15704" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/305-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/305-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/305-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/305-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "IsInterface" {  
-"15708" [label = <(METHOD,IsInterface)> ]
-"15711" [label = <(METHOD_RETURN,ANY)> ]
-  "15708" -> "15711" 
+"15705" [label = <(METHOD,IsInterface)> ]
+"15708" [label = <(METHOD_RETURN,ANY)> ]
+  "15705" -> "15708" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/306-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/306-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/306-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/306-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "FindInterfaceMethod" {  
-"15712" [label = <(METHOD,FindInterfaceMethod)> ]
-"15718" [label = <(METHOD_RETURN,ANY)> ]
-  "15712" -> "15718" 
+"15709" [label = <(METHOD,FindInterfaceMethod)> ]
+"15715" [label = <(METHOD_RETURN,ANY)> ]
+  "15709" -> "15715" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/307-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/307-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/307-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/307-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "FindClassMethod" {  
-"15719" [label = <(METHOD,FindClassMethod)> ]
-"15725" [label = <(METHOD_RETURN,ANY)> ]
-  "15719" -> "15725" 
+"15716" [label = <(METHOD,FindClassMethod)> ]
+"15722" [label = <(METHOD_RETURN,ANY)> ]
+  "15716" -> "15722" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/308-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/308-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/308-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/308-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "ShouldDenyAccessToMember" {  
-"15726" [label = <(METHOD,ShouldDenyAccessToMember)> ]
-"15730" [label = <(METHOD_RETURN,ANY)> ]
-  "15726" -> "15730" 
+"15723" [label = <(METHOD,ShouldDenyAccessToMember)> ]
+"15727" [label = <(METHOD_RETURN,ANY)> ]
+  "15723" -> "15727" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/309-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/309-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/309-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/309-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalOr" {  
-"15731" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
-"15735" [label = <(METHOD_RETURN,ANY)> ]
-  "15731" -> "15735" 
+"15728" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
+"15732" [label = <(METHOD_RETURN,ANY)> ]
+  "15728" -> "15732" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/31-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/31-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/31-cfg.dot	2023-06-07 19:35:41.377383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/31-cfg.dot	2023-06-07 19:35:47.817382800 +0330
@@ -1,52 +1,52 @@
 digraph "FromReflectedField" {  
-"1126" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>596</SUB>> ]
-"1145" [label = <(soa,soa(env))<SUB>597</SUB>> ]
-"1147" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj_field = soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>598</SUB>> ]
-"1174" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Field&gt; field = ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>603</SUB>> ]
-"1193" [label = <(RETURN,return jni::EncodeArtField&lt;kEnableIndexIds&gt;(field-&gt;GetArtField());,return jni::EncodeArtField&lt;kEnableIndexIds&gt;(field-&gt;GetArtField());)<SUB>604</SUB>> ]
-"1148" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj_field)<SUB>598</SUB>> ]
-"1155" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>598</SUB>> ]
-"1165" [label = <(&lt;operator&gt;.notEquals,obj_field-&gt;GetClass() != GetClassRoot&lt;mirror::Field&gt;())<SUB>599</SUB>> ]
-"1175" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt; field)<SUB>603</SUB>> ]
-"1182" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>603</SUB>> ]
-"1194" [label = <(&lt;operator&gt;.greaterThan,jni::EncodeArtField&lt;kEnableIndexIds&gt;(field-&gt;GetArtField()))<SUB>604</SUB>> ]
-"1149" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>598</SUB>> ]
-"1156" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>598</SUB>> ]
-"1166" [label = <(GetClass,obj_field-&gt;GetClass())<SUB>599</SUB>> ]
-"1170" [label = <(GetClassRoot&lt;mirror::Field&gt;,GetClassRoot&lt;mirror::Field&gt;())<SUB>599</SUB>> ]
-"1172" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>601</SUB>> ]
-"1176" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>603</SUB>> ]
-"1183" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>603</SUB>> ]
-"1188" [label = <(::DownCast,::DownCast(obj_field))<SUB>603</SUB>> ]
-"1195" [label = <(&lt;operator&gt;.lessThan,jni::EncodeArtField&lt;kEnableIndexIds)<SUB>604</SUB>> ]
-"1200" [label = <(GetArtField,field-&gt;GetArtField())<SUB>604</SUB>> ]
-"1130" [label = <(UNLIKELY,UNLIKELY((jlr_field) == nullptr))<SUB>596</SUB>> ]
-"1151" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>598</SUB>> ]
-"1157" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>598</SUB>> ]
-"1160" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>598</SUB>> ]
-"1167" [label = <(&lt;operator&gt;.indirectFieldAccess,obj_field-&gt;GetClass)<SUB>599</SUB>> ]
-"1178" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>603</SUB>> ]
-"1185" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>603</SUB>> ]
-"1189" [label = <(&lt;operator&gt;.fieldAccess,::DownCast)<SUB>603</SUB>> ]
-"1196" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtField)<SUB>604</SUB>> ]
-"1201" [label = <(&lt;operator&gt;.indirectFieldAccess,field-&gt;GetArtField)<SUB>604</SUB>> ]
-"1131" [label = <(&lt;operator&gt;.equals,(jlr_field) == nullptr)<SUB>596</SUB>> ]
-"1135" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_field),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_field == null&quot;))<SUB>596</SUB>> ]
-"1142" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_field),CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>596</SUB>> ]
-"1153" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>598</SUB>> ]
-"1159" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>598</SUB>> ]
-"1162" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>598</SUB>> ]
-"1169" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>599</SUB>> ]
-"1180" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>603</SUB>> ]
-"1187" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>603</SUB>> ]
-"1191" [label = <(FIELD_IDENTIFIER,DownCast,DownCast)<SUB>603</SUB>> ]
-"1198" [label = <(FIELD_IDENTIFIER,EncodeArtField,EncodeArtField)<SUB>604</SUB>> ]
-"1203" [label = <(FIELD_IDENTIFIER,GetArtField,GetArtField)<SUB>604</SUB>> ]
-"1136" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>596</SUB>> ]
-"1137" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>596</SUB>> ]
-"1139" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>596</SUB>> ]
-"1122" [label = <(METHOD,FromReflectedField)<SUB>595</SUB>> ]
-"1204" [label = <(METHOD_RETURN,jfieldID)<SUB>595</SUB>> ]
+"1126" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>595</SUB>> ]
+"1145" [label = <(soa,soa(env))<SUB>596</SUB>> ]
+"1147" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj_field = soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>597</SUB>> ]
+"1174" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Field&gt; field = ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>602</SUB>> ]
+"1193" [label = <(RETURN,return jni::EncodeArtField&lt;kEnableIndexIds&gt;(field-&gt;GetArtField());,return jni::EncodeArtField&lt;kEnableIndexIds&gt;(field-&gt;GetArtField());)<SUB>603</SUB>> ]
+"1148" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj_field)<SUB>597</SUB>> ]
+"1155" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>597</SUB>> ]
+"1165" [label = <(&lt;operator&gt;.notEquals,obj_field-&gt;GetClass() != GetClassRoot&lt;mirror::Field&gt;())<SUB>598</SUB>> ]
+"1175" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt; field)<SUB>602</SUB>> ]
+"1182" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>602</SUB>> ]
+"1194" [label = <(&lt;operator&gt;.greaterThan,jni::EncodeArtField&lt;kEnableIndexIds&gt;(field-&gt;GetArtField()))<SUB>603</SUB>> ]
+"1149" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>597</SUB>> ]
+"1156" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>597</SUB>> ]
+"1166" [label = <(GetClass,obj_field-&gt;GetClass())<SUB>598</SUB>> ]
+"1170" [label = <(GetClassRoot&lt;mirror::Field&gt;,GetClassRoot&lt;mirror::Field&gt;())<SUB>598</SUB>> ]
+"1172" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>600</SUB>> ]
+"1176" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>602</SUB>> ]
+"1183" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>602</SUB>> ]
+"1188" [label = <(::DownCast,::DownCast(obj_field))<SUB>602</SUB>> ]
+"1195" [label = <(&lt;operator&gt;.lessThan,jni::EncodeArtField&lt;kEnableIndexIds)<SUB>603</SUB>> ]
+"1200" [label = <(GetArtField,field-&gt;GetArtField())<SUB>603</SUB>> ]
+"1130" [label = <(UNLIKELY,UNLIKELY((jlr_field) == nullptr))<SUB>595</SUB>> ]
+"1151" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>597</SUB>> ]
+"1157" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>597</SUB>> ]
+"1160" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>597</SUB>> ]
+"1167" [label = <(&lt;operator&gt;.indirectFieldAccess,obj_field-&gt;GetClass)<SUB>598</SUB>> ]
+"1178" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>602</SUB>> ]
+"1185" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>602</SUB>> ]
+"1189" [label = <(&lt;operator&gt;.fieldAccess,::DownCast)<SUB>602</SUB>> ]
+"1196" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtField)<SUB>603</SUB>> ]
+"1201" [label = <(&lt;operator&gt;.indirectFieldAccess,field-&gt;GetArtField)<SUB>603</SUB>> ]
+"1131" [label = <(&lt;operator&gt;.equals,(jlr_field) == nullptr)<SUB>595</SUB>> ]
+"1135" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_field),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_field == null&quot;))<SUB>595</SUB>> ]
+"1142" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_field),CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>595</SUB>> ]
+"1153" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>597</SUB>> ]
+"1159" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>597</SUB>> ]
+"1162" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>597</SUB>> ]
+"1169" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>598</SUB>> ]
+"1180" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>602</SUB>> ]
+"1187" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>602</SUB>> ]
+"1191" [label = <(FIELD_IDENTIFIER,DownCast,DownCast)<SUB>602</SUB>> ]
+"1198" [label = <(FIELD_IDENTIFIER,EncodeArtField,EncodeArtField)<SUB>603</SUB>> ]
+"1203" [label = <(FIELD_IDENTIFIER,GetArtField,GetArtField)<SUB>603</SUB>> ]
+"1136" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>595</SUB>> ]
+"1137" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>595</SUB>> ]
+"1139" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>595</SUB>> ]
+"1122" [label = <(METHOD,FromReflectedField)<SUB>594</SUB>> ]
+"1204" [label = <(METHOD_RETURN,jfieldID)<SUB>594</SUB>> ]
   "1126" -> "1131" 
   "1126" -> "1145" 
   "1145" -> "1153" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/310-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/310-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/310-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/310-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "IsStatic" {  
-"15736" [label = <(METHOD,IsStatic)> ]
-"15739" [label = <(METHOD_RETURN,ANY)> ]
-  "15736" -> "15739" 
+"15733" [label = <(METHOD,IsStatic)> ]
+"15736" [label = <(METHOD_RETURN,ANY)> ]
+  "15733" -> "15736" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/311-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/311-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/311-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/311-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "c" {  
-"15740" [label = <(METHOD,c)> ]
-"15743" [label = <(METHOD_RETURN,ANY)> ]
-  "15740" -> "15743" 
+"15737" [label = <(METHOD,c)> ]
+"15740" [label = <(METHOD_RETURN,ANY)> ]
+  "15737" -> "15740" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/312-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/312-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/312-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/312-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "UNLIKELY" {  
-"15744" [label = <(METHOD,UNLIKELY)> ]
-"15747" [label = <(METHOD_RETURN,ANY)> ]
-  "15744" -> "15747" 
+"15741" [label = <(METHOD,UNLIKELY)> ]
+"15744" [label = <(METHOD_RETURN,ANY)> ]
+  "15741" -> "15744" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/313-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/313-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/313-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/313-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK" {  
-"15748" [label = <(METHOD,DCHECK)> ]
-"15751" [label = <(METHOD_RETURN,ANY)> ]
-  "15748" -> "15751" 
+"15745" [label = <(METHOD,DCHECK)> ]
+"15748" [label = <(METHOD_RETURN,ANY)> ]
+  "15745" -> "15748" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/314-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/314-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/314-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/314-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "class_loader" {  
-"15752" [label = <(METHOD,class_loader)> ]
-"15755" [label = <(METHOD_RETURN,ANY)> ]
-  "15752" -> "15755" 
+"15749" [label = <(METHOD,class_loader)> ]
+"15752" [label = <(METHOD_RETURN,ANY)> ]
+  "15749" -> "15752" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/315-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/315-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/315-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/315-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "FindClass" {  
-"15756" [label = <(METHOD,FindClass)> ]
-"15762" [label = <(METHOD_RETURN,ANY)> ]
-  "15756" -> "15762" 
+"15753" [label = <(METHOD,FindClass)> ]
+"15759" [label = <(METHOD_RETURN,ANY)> ]
+  "15753" -> "15759" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/316-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/316-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/316-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/316-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "FindPrimitiveClass" {  
-"15763" [label = <(METHOD,FindPrimitiveClass)> ]
-"15767" [label = <(METHOD_RETURN,ANY)> ]
-  "15763" -> "15767" 
+"15760" [label = <(METHOD,FindPrimitiveClass)> ]
+"15764" [label = <(METHOD_RETURN,ANY)> ]
+  "15760" -> "15764" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/317-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/317-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/317-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/317-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "IsExceptionPending" {  
-"15768" [label = <(METHOD,IsExceptionPending)> ]
-"15771" [label = <(METHOD_RETURN,ANY)> ]
-  "15768" -> "15771" 
+"15765" [label = <(METHOD,IsExceptionPending)> ]
+"15768" [label = <(METHOD_RETURN,ANY)> ]
+  "15765" -> "15768" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/318-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/318-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/318-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/318-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "hs2" {  
-"15772" [label = <(METHOD,hs2)> ]
-"15775" [label = <(METHOD_RETURN,ANY)> ]
-  "15772" -> "15775" 
+"15769" [label = <(METHOD,hs2)> ]
+"15772" [label = <(METHOD_RETURN,ANY)> ]
+  "15769" -> "15772" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/319-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/319-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/319-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/319-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "cause" {  
-"15776" [label = <(METHOD,cause)> ]
-"15779" [label = <(METHOD_RETURN,ANY)> ]
-  "15776" -> "15779" 
+"15773" [label = <(METHOD,cause)> ]
+"15776" [label = <(METHOD_RETURN,ANY)> ]
+  "15773" -> "15776" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/32-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/32-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/32-cfg.dot	2023-06-07 19:35:41.377383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/32-cfg.dot	2023-06-07 19:35:47.817382800 +0330
@@ -1,65 +1,65 @@
 digraph "ToReflectedMethod" {  
-"1212" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>608</SUB>> ]
-"1231" [label = <(soa,soa(env))<SUB>609</SUB>> ]
-"1234" [label = <(&lt;operator&gt;.assignment,* m = jni::DecodeArtMethod(mid))<SUB>610</SUB>> ]
-"1241" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Executable&gt; method)<SUB>611</SUB>> ]
-"1248" [label = <(DCHECK_EQ,DCHECK_EQ(Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize(), kRuntimePointerSize))<SUB>612</SUB>> ]
-"1260" [label = <(DCHECK,DCHECK(!Runtime::Current()-&gt;IsActiveTransaction()))<SUB>613</SUB>> ]
-"1303" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(method);,return soa.AddLocalReference&lt;jobject&gt;(method);)<SUB>619</SUB>> ]
-"1236" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>610</SUB>> ]
-"1242" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Executable)<SUB>611</SUB>> ]
-"1249" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>612</SUB>> ]
-"1261" [label = <(&lt;operator&gt;.logicalNot,!Runtime::Current()-&gt;IsActiveTransaction())<SUB>613</SUB>> ]
-"1270" [label = <(IsConstructor,m-&gt;IsConstructor())<SUB>614</SUB>> ]
-"1304" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(method))<SUB>619</SUB>> ]
-"1237" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>610</SUB>> ]
-"1244" [label = <(&lt;operator&gt;.fieldAccess,mirror::Executable)<SUB>611</SUB>> ]
-"1250" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>612</SUB>> ]
-"1262" [label = <(IsActiveTransaction,Runtime::Current()-&gt;IsActiveTransaction())<SUB>613</SUB>> ]
-"1271" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsConstructor)<SUB>614</SUB>> ]
-"1275" [label = <(&lt;operator&gt;.assignment,method = mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>615</SUB>> ]
-"1305" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>619</SUB>> ]
-"1216" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>608</SUB>> ]
-"1239" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>610</SUB>> ]
-"1246" [label = <(FIELD_IDENTIFIER,Executable,Executable)<SUB>611</SUB>> ]
-"1251" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>612</SUB>> ]
-"1258" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>612</SUB>> ]
-"1263" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;IsActiveTransaction)<SUB>613</SUB>> ]
-"1273" [label = <(FIELD_IDENTIFIER,IsConstructor,IsConstructor)<SUB>614</SUB>> ]
-"1277" [label = <(mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>615</SUB>> ]
-"1290" [label = <(&lt;operator&gt;.assignment,method = mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>617</SUB>> ]
-"1306" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>619</SUB>> ]
-"1217" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>608</SUB>> ]
-"1221" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>608</SUB>> ]
-"1228" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>608</SUB>> ]
-"1252" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>612</SUB>> ]
-"1264" [label = <(Runtime::Current,Runtime::Current())<SUB>613</SUB>> ]
-"1268" [label = <(FIELD_IDENTIFIER,IsActiveTransaction,IsActiveTransaction)<SUB>613</SUB>> ]
-"1278" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>615</SUB>> ]
-"1283" [label = <(Self,soa.Self())<SUB>615</SUB>> ]
-"1292" [label = <(mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>617</SUB>> ]
-"1308" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>619</SUB>> ]
-"1222" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>608</SUB>> ]
-"1253" [label = <(Runtime::Current,Runtime::Current())<SUB>612</SUB>> ]
-"1257" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>612</SUB>> ]
-"1265" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>613</SUB>> ]
-"1279" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor)<SUB>615</SUB>> ]
-"1282" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>615</SUB>> ]
-"1284" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>615</SUB>> ]
-"1293" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>617</SUB>> ]
-"1298" [label = <(Self,soa.Self())<SUB>617</SUB>> ]
-"1223" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>608</SUB>> ]
-"1225" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>608</SUB>> ]
-"1254" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>612</SUB>> ]
-"1267" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>613</SUB>> ]
-"1286" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>615</SUB>> ]
-"1294" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method)<SUB>617</SUB>> ]
-"1297" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>617</SUB>> ]
-"1299" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>617</SUB>> ]
-"1256" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>612</SUB>> ]
-"1301" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>617</SUB>> ]
-"1206" [label = <(METHOD,ToReflectedMethod)<SUB>607</SUB>> ]
-"1311" [label = <(METHOD_RETURN,jobject)<SUB>607</SUB>> ]
+"1212" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>607</SUB>> ]
+"1231" [label = <(soa,soa(env))<SUB>608</SUB>> ]
+"1234" [label = <(&lt;operator&gt;.assignment,* m = jni::DecodeArtMethod(mid))<SUB>609</SUB>> ]
+"1241" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Executable&gt; method)<SUB>610</SUB>> ]
+"1248" [label = <(DCHECK_EQ,DCHECK_EQ(Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize(), kRuntimePointerSize))<SUB>611</SUB>> ]
+"1260" [label = <(DCHECK,DCHECK(!Runtime::Current()-&gt;IsActiveTransaction()))<SUB>612</SUB>> ]
+"1303" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(method);,return soa.AddLocalReference&lt;jobject&gt;(method);)<SUB>618</SUB>> ]
+"1236" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>609</SUB>> ]
+"1242" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Executable)<SUB>610</SUB>> ]
+"1249" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>611</SUB>> ]
+"1261" [label = <(&lt;operator&gt;.logicalNot,!Runtime::Current()-&gt;IsActiveTransaction())<SUB>612</SUB>> ]
+"1270" [label = <(IsConstructor,m-&gt;IsConstructor())<SUB>613</SUB>> ]
+"1304" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(method))<SUB>618</SUB>> ]
+"1237" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>609</SUB>> ]
+"1244" [label = <(&lt;operator&gt;.fieldAccess,mirror::Executable)<SUB>610</SUB>> ]
+"1250" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>611</SUB>> ]
+"1262" [label = <(IsActiveTransaction,Runtime::Current()-&gt;IsActiveTransaction())<SUB>612</SUB>> ]
+"1271" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsConstructor)<SUB>613</SUB>> ]
+"1275" [label = <(&lt;operator&gt;.assignment,method = mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>614</SUB>> ]
+"1305" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>618</SUB>> ]
+"1216" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>607</SUB>> ]
+"1239" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>609</SUB>> ]
+"1246" [label = <(FIELD_IDENTIFIER,Executable,Executable)<SUB>610</SUB>> ]
+"1251" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>611</SUB>> ]
+"1258" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>611</SUB>> ]
+"1263" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;IsActiveTransaction)<SUB>612</SUB>> ]
+"1273" [label = <(FIELD_IDENTIFIER,IsConstructor,IsConstructor)<SUB>613</SUB>> ]
+"1277" [label = <(mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>614</SUB>> ]
+"1290" [label = <(&lt;operator&gt;.assignment,method = mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>616</SUB>> ]
+"1306" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>618</SUB>> ]
+"1217" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>607</SUB>> ]
+"1221" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>607</SUB>> ]
+"1228" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>607</SUB>> ]
+"1252" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>611</SUB>> ]
+"1264" [label = <(Runtime::Current,Runtime::Current())<SUB>612</SUB>> ]
+"1268" [label = <(FIELD_IDENTIFIER,IsActiveTransaction,IsActiveTransaction)<SUB>612</SUB>> ]
+"1278" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>614</SUB>> ]
+"1283" [label = <(Self,soa.Self())<SUB>614</SUB>> ]
+"1292" [label = <(mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>616</SUB>> ]
+"1308" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>618</SUB>> ]
+"1222" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>607</SUB>> ]
+"1253" [label = <(Runtime::Current,Runtime::Current())<SUB>611</SUB>> ]
+"1257" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>611</SUB>> ]
+"1265" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>612</SUB>> ]
+"1279" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor)<SUB>614</SUB>> ]
+"1282" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>614</SUB>> ]
+"1284" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>614</SUB>> ]
+"1293" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>616</SUB>> ]
+"1298" [label = <(Self,soa.Self())<SUB>616</SUB>> ]
+"1223" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>607</SUB>> ]
+"1225" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>607</SUB>> ]
+"1254" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>611</SUB>> ]
+"1267" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>612</SUB>> ]
+"1286" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>614</SUB>> ]
+"1294" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method)<SUB>616</SUB>> ]
+"1297" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>616</SUB>> ]
+"1299" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>616</SUB>> ]
+"1256" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>611</SUB>> ]
+"1301" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>616</SUB>> ]
+"1206" [label = <(METHOD,ToReflectedMethod)<SUB>606</SUB>> ]
+"1311" [label = <(METHOD_RETURN,jobject)<SUB>606</SUB>> ]
   "1212" -> "1217" 
   "1212" -> "1231" 
   "1231" -> "1239" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/320-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/320-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/320-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/320-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "GetException" {  
-"15780" [label = <(METHOD,GetException)> ]
-"15783" [label = <(METHOD_RETURN,ANY)> ]
-  "15780" -> "15783" 
+"15777" [label = <(METHOD,GetException)> ]
+"15780" [label = <(METHOD_RETURN,ANY)> ]
+  "15777" -> "15780" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/321-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/321-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/321-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/321-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "ClearException" {  
-"15784" [label = <(METHOD,ClearException)> ]
-"15787" [label = <(METHOD_RETURN,ANY)> ]
-  "15784" -> "15787" 
+"15781" [label = <(METHOD,ClearException)> ]
+"15784" [label = <(METHOD_RETURN,ANY)> ]
+  "15781" -> "15784" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/322-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/322-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/322-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/322-cfg.dot	2023-06-07 19:35:48.187382773 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowNewExceptionF" {  
-"15788" [label = <(METHOD,ThrowNewExceptionF)> ]
-"15796" [label = <(METHOD_RETURN,ANY)> ]
-  "15788" -> "15796" 
+"15785" [label = <(METHOD,ThrowNewExceptionF)> ]
+"15793" [label = <(METHOD_RETURN,ANY)> ]
+  "15785" -> "15793" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/323-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/323-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/323-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/323-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "GetDescriptor" {  
-"15797" [label = <(METHOD,GetDescriptor)> ]
-"15801" [label = <(METHOD_RETURN,ANY)> ]
-  "15797" -> "15801" 
+"15794" [label = <(METHOD,GetDescriptor)> ]
+"15798" [label = <(METHOD_RETURN,ANY)> ]
+  "15794" -> "15798" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/324-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/324-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/324-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/324-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addressOf" {  
-"15802" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
-"15805" [label = <(METHOD_RETURN,ANY)> ]
-  "15802" -> "15805" 
+"15799" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
+"15802" [label = <(METHOD_RETURN,ANY)> ]
+  "15799" -> "15802" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/325-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/325-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/325-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/325-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "SetCause" {  
-"15806" [label = <(METHOD,SetCause)> ]
-"15810" [label = <(METHOD_RETURN,ANY)> ]
-  "15806" -> "15810" 
+"15803" [label = <(METHOD,SetCause)> ]
+"15807" [label = <(METHOD_RETURN,ANY)> ]
+  "15803" -> "15807" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/326-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/326-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/326-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/326-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "Get" {  
-"15811" [label = <(METHOD,Get)> ]
-"15814" [label = <(METHOD_RETURN,ANY)> ]
-  "15811" -> "15814" 
+"15808" [label = <(METHOD,Get)> ]
+"15811" [label = <(METHOD_RETURN,ANY)> ]
+  "15808" -> "15811" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/327-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/327-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/327-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/327-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Class::FindStaticField" {  
-"15815" [label = <(METHOD,mirror::Class::FindStaticField)> ]
-"15822" [label = <(METHOD_RETURN,ANY)> ]
-  "15815" -> "15822" 
+"15812" [label = <(METHOD,mirror::Class::FindStaticField)> ]
+"15819" [label = <(METHOD_RETURN,ANY)> ]
+  "15812" -> "15819" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/328-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/328-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/328-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/328-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "FindInstanceField" {  
-"15823" [label = <(METHOD,FindInstanceField)> ]
-"15828" [label = <(METHOD_RETURN,ANY)> ]
-  "15823" -> "15828" 
+"15820" [label = <(METHOD,FindInstanceField)> ]
+"15825" [label = <(METHOD_RETURN,ANY)> ]
+  "15820" -> "15825" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/329-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/329-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/329-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/329-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "GetVm" {  
-"15829" [label = <(METHOD,GetVm)> ]
-"15832" [label = <(METHOD_RETURN,ANY)> ]
-  "15829" -> "15832" 
+"15826" [label = <(METHOD,GetVm)> ]
+"15829" [label = <(METHOD_RETURN,ANY)> ]
+  "15826" -> "15829" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/33-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/33-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/33-cfg.dot	2023-06-07 19:35:41.377383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/33-cfg.dot	2023-06-07 19:35:47.817382800 +0330
@@ -1,34 +1,34 @@
 digraph "ToReflectedField" {  
-"1319" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>623</SUB>> ]
-"1338" [label = <(soa,soa(env))<SUB>624</SUB>> ]
-"1341" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>625</SUB>> ]
-"1348" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));)<SUB>626</SUB>> ]
-"1343" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>625</SUB>> ]
-"1349" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true)))<SUB>626</SUB>> ]
-"1344" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>625</SUB>> ]
-"1350" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>626</SUB>> ]
-"1355" [label = <(&lt;operator&gt;.greaterThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true))<SUB>627</SUB>> ]
-"1323" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>623</SUB>> ]
-"1346" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>625</SUB>> ]
-"1351" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>626</SUB>> ]
-"1356" [label = <(&lt;operator&gt;.lessThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize)<SUB>627</SUB>> ]
-"1363" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(), f, true))<SUB>627</SUB>> ]
-"1324" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>623</SUB>> ]
-"1328" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>623</SUB>> ]
-"1335" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>623</SUB>> ]
-"1353" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>626</SUB>> ]
-"1357" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::CreateFromArtField)<SUB>627</SUB>> ]
-"1364" [label = <(&lt;operator&gt;.expressionList,soa.Self(), f, true)<SUB>627</SUB>> ]
-"1329" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>623</SUB>> ]
-"1358" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>627</SUB>> ]
-"1361" [label = <(FIELD_IDENTIFIER,CreateFromArtField,CreateFromArtField)<SUB>627</SUB>> ]
-"1365" [label = <(Self,soa.Self())<SUB>627</SUB>> ]
-"1330" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>623</SUB>> ]
-"1332" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>623</SUB>> ]
-"1366" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>627</SUB>> ]
-"1368" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>627</SUB>> ]
-"1313" [label = <(METHOD,ToReflectedField)<SUB>622</SUB>> ]
-"1371" [label = <(METHOD_RETURN,jobject)<SUB>622</SUB>> ]
+"1319" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>622</SUB>> ]
+"1338" [label = <(soa,soa(env))<SUB>623</SUB>> ]
+"1341" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>624</SUB>> ]
+"1348" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));)<SUB>625</SUB>> ]
+"1343" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>624</SUB>> ]
+"1349" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true)))<SUB>625</SUB>> ]
+"1344" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>624</SUB>> ]
+"1350" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>625</SUB>> ]
+"1355" [label = <(&lt;operator&gt;.greaterThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true))<SUB>626</SUB>> ]
+"1323" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>622</SUB>> ]
+"1346" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>624</SUB>> ]
+"1351" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>625</SUB>> ]
+"1356" [label = <(&lt;operator&gt;.lessThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize)<SUB>626</SUB>> ]
+"1363" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(), f, true))<SUB>626</SUB>> ]
+"1324" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>622</SUB>> ]
+"1328" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>622</SUB>> ]
+"1335" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>622</SUB>> ]
+"1353" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>625</SUB>> ]
+"1357" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::CreateFromArtField)<SUB>626</SUB>> ]
+"1364" [label = <(&lt;operator&gt;.expressionList,soa.Self(), f, true)<SUB>626</SUB>> ]
+"1329" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>622</SUB>> ]
+"1358" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>626</SUB>> ]
+"1361" [label = <(FIELD_IDENTIFIER,CreateFromArtField,CreateFromArtField)<SUB>626</SUB>> ]
+"1365" [label = <(Self,soa.Self())<SUB>626</SUB>> ]
+"1330" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>622</SUB>> ]
+"1332" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>622</SUB>> ]
+"1366" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>626</SUB>> ]
+"1368" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>626</SUB>> ]
+"1313" [label = <(METHOD,ToReflectedField)<SUB>621</SUB>> ]
+"1371" [label = <(METHOD_RETURN,jobject)<SUB>621</SUB>> ]
   "1319" -> "1324" 
   "1319" -> "1338" 
   "1338" -> "1346" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/330-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/330-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/330-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/330-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT" {  
-"15833" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT)<SUB>522</SUB>> ]
-"15836" [label = <(METHOD_RETURN,ANY)> ]
-  "15833" -> "15836" 
+"15830" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT)<SUB>521</SUB>> ]
+"15833" [label = <(METHOD_RETURN,ANY)> ]
+  "15830" -> "15833" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/331-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/331-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/331-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/331-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(name)" {  
-"15837" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(name))> ]
-"15842" [label = <(METHOD_RETURN,ANY)> ]
-  "15837" -> "15842" 
+"15834" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(name))> ]
+"15839" [label = <(METHOD_RETURN,ANY)> ]
+  "15834" -> "15839" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/332-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/332-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/332-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/332-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "descriptor" {  
-"15843" [label = <(METHOD,descriptor)> ]
-"15846" [label = <(METHOD_RETURN,ANY)> ]
-  "15843" -> "15846" 
+"15840" [label = <(METHOD,descriptor)> ]
+"15843" [label = <(METHOD_RETURN,ANY)> ]
+  "15840" -> "15843" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/333-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/333-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/333-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/333-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "soa" {  
-"15847" [label = <(METHOD,soa)> ]
-"15850" [label = <(METHOD_RETURN,ANY)> ]
-  "15847" -> "15850" 
+"15844" [label = <(METHOD,soa)> ]
+"15847" [label = <(METHOD_RETURN,ANY)> ]
+  "15844" -> "15847" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/334-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/334-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/334-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/334-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "IsStarted" {  
-"15851" [label = <(METHOD,IsStarted)> ]
-"15854" [label = <(METHOD_RETURN,ANY)> ]
-  "15851" -> "15854" 
+"15848" [label = <(METHOD,IsStarted)> ]
+"15851" [label = <(METHOD_RETURN,ANY)> ]
+  "15848" -> "15851" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/335-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/335-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/335-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/335-cfg.dot	2023-06-07 19:35:48.197382771 +0330
@@ -1,5 +1,5 @@
 digraph "c_str" {  
-"15855" [label = <(METHOD,c_str)> ]
-"15858" [label = <(METHOD_RETURN,ANY)> ]
-  "15855" -> "15858" 
+"15852" [label = <(METHOD,c_str)> ]
+"15855" [label = <(METHOD_RETURN,ANY)> ]
+  "15852" -> "15855" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/336-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/336-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/336-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/336-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "FindSystemClass" {  
-"15859" [label = <(METHOD,FindSystemClass)> ]
-"15864" [label = <(METHOD_RETURN,ANY)> ]
-  "15859" -> "15864" 
+"15856" [label = <(METHOD,FindSystemClass)> ]
+"15861" [label = <(METHOD_RETURN,ANY)> ]
+  "15856" -> "15861" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/337-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/337-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/337-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/337-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(jlr_method)" {  
-"15865" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_method))> ]
-"15870" [label = <(METHOD_RETURN,ANY)> ]
-  "15865" -> "15870" 
+"15862" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_method))> ]
+"15867" [label = <(METHOD_RETURN,ANY)> ]
+  "15862" -> "15867" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/338-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/338-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/338-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/338-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "ArtMethod::FromReflectedMethod" {  
-"15871" [label = <(METHOD,ArtMethod::FromReflectedMethod)> ]
-"15876" [label = <(METHOD_RETURN,ANY)> ]
-  "15871" -> "15876" 
+"15868" [label = <(METHOD,ArtMethod::FromReflectedMethod)> ]
+"15873" [label = <(METHOD_RETURN,ANY)> ]
+  "15868" -> "15873" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/339-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/339-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/339-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/339-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(jlr_field)" {  
-"15877" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_field))> ]
-"15882" [label = <(METHOD_RETURN,ANY)> ]
-  "15877" -> "15882" 
+"15874" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_field))> ]
+"15879" [label = <(METHOD_RETURN,ANY)> ]
+  "15874" -> "15879" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/34-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/34-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/34-cfg.dot	2023-06-07 19:35:41.377383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/34-cfg.dot	2023-06-07 19:35:47.817382800 +0330
@@ -1,34 +1,34 @@
 digraph "GetObjectClass" {  
-"1377" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_object))<SUB>631</SUB>> ]
-"1396" [label = <(soa,soa(env))<SUB>632</SUB>> ]
-"1398" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>633</SUB>> ]
-"1415" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());)<SUB>634</SUB>> ]
-"1399" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>633</SUB>> ]
-"1406" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>633</SUB>> ]
-"1416" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass()))<SUB>634</SUB>> ]
-"1400" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>633</SUB>> ]
-"1407" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>633</SUB>> ]
-"1417" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>634</SUB>> ]
-"1422" [label = <(GetClass,o-&gt;GetClass())<SUB>634</SUB>> ]
-"1381" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>631</SUB>> ]
-"1402" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>633</SUB>> ]
-"1408" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>633</SUB>> ]
-"1411" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>633</SUB>> ]
-"1418" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>634</SUB>> ]
-"1423" [label = <(&lt;operator&gt;.indirectFieldAccess,o-&gt;GetClass)<SUB>634</SUB>> ]
-"1382" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>631</SUB>> ]
-"1386" [label = <(CHECK_NON_NULL_ARGUMENT(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>631</SUB>> ]
-"1393" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_object),CHECK_NON_NULL_ARGUMENT(java_object))<SUB>631</SUB>> ]
-"1404" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>633</SUB>> ]
-"1410" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>633</SUB>> ]
-"1413" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>633</SUB>> ]
-"1420" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>634</SUB>> ]
-"1425" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>634</SUB>> ]
-"1387" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>631</SUB>> ]
-"1388" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>631</SUB>> ]
-"1390" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>631</SUB>> ]
-"1373" [label = <(METHOD,GetObjectClass)<SUB>630</SUB>> ]
-"1426" [label = <(METHOD_RETURN,jclass)<SUB>630</SUB>> ]
+"1377" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_object))<SUB>630</SUB>> ]
+"1396" [label = <(soa,soa(env))<SUB>631</SUB>> ]
+"1398" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>632</SUB>> ]
+"1415" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());)<SUB>633</SUB>> ]
+"1399" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>632</SUB>> ]
+"1406" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>632</SUB>> ]
+"1416" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass()))<SUB>633</SUB>> ]
+"1400" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>632</SUB>> ]
+"1407" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>632</SUB>> ]
+"1417" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>633</SUB>> ]
+"1422" [label = <(GetClass,o-&gt;GetClass())<SUB>633</SUB>> ]
+"1381" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>630</SUB>> ]
+"1402" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>632</SUB>> ]
+"1408" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>632</SUB>> ]
+"1411" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>632</SUB>> ]
+"1418" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>633</SUB>> ]
+"1423" [label = <(&lt;operator&gt;.indirectFieldAccess,o-&gt;GetClass)<SUB>633</SUB>> ]
+"1382" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>630</SUB>> ]
+"1386" [label = <(CHECK_NON_NULL_ARGUMENT(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>630</SUB>> ]
+"1393" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_object),CHECK_NON_NULL_ARGUMENT(java_object))<SUB>630</SUB>> ]
+"1404" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>632</SUB>> ]
+"1410" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>632</SUB>> ]
+"1413" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>632</SUB>> ]
+"1420" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>633</SUB>> ]
+"1425" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>633</SUB>> ]
+"1387" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>630</SUB>> ]
+"1388" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>630</SUB>> ]
+"1390" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>630</SUB>> ]
+"1373" [label = <(METHOD,GetObjectClass)<SUB>629</SUB>> ]
+"1426" [label = <(METHOD_RETURN,jclass)<SUB>629</SUB>> ]
   "1377" -> "1382" 
   "1377" -> "1396" 
   "1396" -> "1404" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/340-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/340-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/340-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/340-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "GetClass" {  
-"15883" [label = <(METHOD,GetClass)> ]
-"15886" [label = <(METHOD_RETURN,ANY)> ]
-  "15883" -> "15886" 
+"15880" [label = <(METHOD,GetClass)> ]
+"15883" [label = <(METHOD_RETURN,ANY)> ]
+  "15880" -> "15883" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/341-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/341-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/341-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/341-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "GetClassRoot&lt;mirror::Field&gt;" {  
-"15887" [label = <(METHOD,GetClassRoot&lt;mirror::Field&gt;)> ]
-"15889" [label = <(METHOD_RETURN,ANY)> ]
-  "15887" -> "15889" 
+"15884" [label = <(METHOD,GetClassRoot&lt;mirror::Field&gt;)> ]
+"15886" [label = <(METHOD_RETURN,ANY)> ]
+  "15884" -> "15886" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/342-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/342-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/342-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/342-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "::DownCast" {  
-"15890" [label = <(METHOD,::DownCast)> ]
-"15894" [label = <(METHOD_RETURN,ANY)> ]
-  "15890" -> "15894" 
+"15887" [label = <(METHOD,::DownCast)> ]
+"15891" [label = <(METHOD_RETURN,ANY)> ]
+  "15887" -> "15891" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/343-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/343-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/343-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/343-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "GetArtField" {  
-"15895" [label = <(METHOD,GetArtField)> ]
-"15898" [label = <(METHOD_RETURN,ANY)> ]
-  "15895" -> "15898" 
+"15892" [label = <(METHOD,GetArtField)> ]
+"15895" [label = <(METHOD_RETURN,ANY)> ]
+  "15892" -> "15895" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/344-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/344-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/344-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/344-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(mid)" {  
-"15899" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(mid))> ]
-"15904" [label = <(METHOD_RETURN,ANY)> ]
-  "15899" -> "15904" 
+"15896" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(mid))> ]
+"15901" [label = <(METHOD_RETURN,ANY)> ]
+  "15896" -> "15901" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/345-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/345-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/345-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/345-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "jni::DecodeArtMethod" {  
-"15905" [label = <(METHOD,jni::DecodeArtMethod)> ]
-"15909" [label = <(METHOD_RETURN,ANY)> ]
-  "15905" -> "15909" 
+"15902" [label = <(METHOD,jni::DecodeArtMethod)> ]
+"15906" [label = <(METHOD_RETURN,ANY)> ]
+  "15902" -> "15906" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/346-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/346-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/346-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/346-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK_EQ" {  
-"15910" [label = <(METHOD,DCHECK_EQ)> ]
-"15914" [label = <(METHOD_RETURN,ANY)> ]
-  "15910" -> "15914" 
+"15907" [label = <(METHOD,DCHECK_EQ)> ]
+"15911" [label = <(METHOD_RETURN,ANY)> ]
+  "15907" -> "15911" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/347-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/347-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/347-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/347-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalNot" {  
-"15915" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
-"15918" [label = <(METHOD_RETURN,ANY)> ]
-  "15915" -> "15918" 
+"15912" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
+"15915" [label = <(METHOD_RETURN,ANY)> ]
+  "15912" -> "15915" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/348-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/348-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/348-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/348-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "IsActiveTransaction" {  
-"15919" [label = <(METHOD,IsActiveTransaction)> ]
-"15922" [label = <(METHOD_RETURN,ANY)> ]
-  "15919" -> "15922" 
+"15916" [label = <(METHOD,IsActiveTransaction)> ]
+"15919" [label = <(METHOD_RETURN,ANY)> ]
+  "15916" -> "15919" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/349-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/349-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/349-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/349-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "IsConstructor" {  
-"15923" [label = <(METHOD,IsConstructor)> ]
-"15926" [label = <(METHOD_RETURN,ANY)> ]
-  "15923" -> "15926" 
+"15920" [label = <(METHOD,IsConstructor)> ]
+"15923" [label = <(METHOD_RETURN,ANY)> ]
+  "15920" -> "15923" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/35-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/35-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/35-cfg.dot	2023-06-07 19:35:41.377383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/35-cfg.dot	2023-06-07 19:35:47.817382800 +0330
@@ -1,38 +1,38 @@
 digraph "GetSuperclass" {  
-"1432" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>638</SUB>> ]
-"1451" [label = <(soa,soa(env))<SUB>639</SUB>> ]
-"1453" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>640</SUB>> ]
-"1470" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());)<SUB>641</SUB>> ]
-"1454" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>640</SUB>> ]
-"1461" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>640</SUB>> ]
-"1471" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass()))<SUB>641</SUB>> ]
-"1455" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>640</SUB>> ]
-"1462" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>640</SUB>> ]
-"1472" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>641</SUB>> ]
-"1477" [label = <(&lt;operator&gt;.conditional,c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass())<SUB>641</SUB>> ]
-"1436" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>638</SUB>> ]
-"1457" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>640</SUB>> ]
-"1463" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>640</SUB>> ]
-"1466" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>640</SUB>> ]
-"1473" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>641</SUB>> ]
-"1478" [label = <(IsInterface,c-&gt;IsInterface())<SUB>641</SUB>> ]
-"1483" [label = <(GetSuperClass,c-&gt;GetSuperClass())<SUB>641</SUB>> ]
-"1437" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>638</SUB>> ]
-"1441" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>638</SUB>> ]
-"1448" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>638</SUB>> ]
-"1459" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>640</SUB>> ]
-"1465" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>640</SUB>> ]
-"1468" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>640</SUB>> ]
-"1475" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>641</SUB>> ]
-"1479" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsInterface)<SUB>641</SUB>> ]
-"1484" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetSuperClass)<SUB>641</SUB>> ]
-"1442" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>638</SUB>> ]
-"1481" [label = <(FIELD_IDENTIFIER,IsInterface,IsInterface)<SUB>641</SUB>> ]
-"1486" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>641</SUB>> ]
-"1443" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>638</SUB>> ]
-"1445" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>638</SUB>> ]
-"1428" [label = <(METHOD,GetSuperclass)<SUB>637</SUB>> ]
-"1487" [label = <(METHOD_RETURN,jclass)<SUB>637</SUB>> ]
+"1432" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>637</SUB>> ]
+"1451" [label = <(soa,soa(env))<SUB>638</SUB>> ]
+"1453" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>639</SUB>> ]
+"1470" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());)<SUB>640</SUB>> ]
+"1454" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>639</SUB>> ]
+"1461" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>639</SUB>> ]
+"1471" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass()))<SUB>640</SUB>> ]
+"1455" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>639</SUB>> ]
+"1462" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>639</SUB>> ]
+"1472" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>640</SUB>> ]
+"1477" [label = <(&lt;operator&gt;.conditional,c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass())<SUB>640</SUB>> ]
+"1436" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>637</SUB>> ]
+"1457" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>639</SUB>> ]
+"1463" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>639</SUB>> ]
+"1466" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>639</SUB>> ]
+"1473" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>640</SUB>> ]
+"1478" [label = <(IsInterface,c-&gt;IsInterface())<SUB>640</SUB>> ]
+"1483" [label = <(GetSuperClass,c-&gt;GetSuperClass())<SUB>640</SUB>> ]
+"1437" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>637</SUB>> ]
+"1441" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>637</SUB>> ]
+"1448" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>637</SUB>> ]
+"1459" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>639</SUB>> ]
+"1465" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>639</SUB>> ]
+"1468" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>639</SUB>> ]
+"1475" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>640</SUB>> ]
+"1479" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsInterface)<SUB>640</SUB>> ]
+"1484" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetSuperClass)<SUB>640</SUB>> ]
+"1442" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>637</SUB>> ]
+"1481" [label = <(FIELD_IDENTIFIER,IsInterface,IsInterface)<SUB>640</SUB>> ]
+"1486" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>640</SUB>> ]
+"1443" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>637</SUB>> ]
+"1445" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>637</SUB>> ]
+"1428" [label = <(METHOD,GetSuperclass)<SUB>636</SUB>> ]
+"1487" [label = <(METHOD_RETURN,jclass)<SUB>636</SUB>> ]
   "1432" -> "1437" 
   "1432" -> "1451" 
   "1451" -> "1459" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/350-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/350-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/350-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/350-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;" {  
-"15927" [label = <(METHOD,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
-"15932" [label = <(METHOD_RETURN,ANY)> ]
-  "15927" -> "15932" 
+"15924" [label = <(METHOD,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
+"15929" [label = <(METHOD_RETURN,ANY)> ]
+  "15924" -> "15929" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/351-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/351-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/351-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/351-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;" {  
-"15933" [label = <(METHOD,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
-"15938" [label = <(METHOD_RETURN,ANY)> ]
-  "15933" -> "15938" 
+"15930" [label = <(METHOD,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
+"15935" [label = <(METHOD_RETURN,ANY)> ]
+  "15930" -> "15935" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/352-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/352-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/352-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/352-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(fid)" {  
-"15939" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(fid))> ]
-"15944" [label = <(METHOD_RETURN,ANY)> ]
-  "15939" -> "15944" 
+"15936" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(fid))> ]
+"15941" [label = <(METHOD_RETURN,ANY)> ]
+  "15936" -> "15941" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/353-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/353-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/353-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/353-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "jni::DecodeArtField" {  
-"15945" [label = <(METHOD,jni::DecodeArtField)> ]
-"15949" [label = <(METHOD_RETURN,ANY)> ]
-  "15945" -> "15949" 
+"15942" [label = <(METHOD,jni::DecodeArtField)> ]
+"15946" [label = <(METHOD_RETURN,ANY)> ]
+  "15942" -> "15946" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/354-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/354-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/354-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/354-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.bracketedPrimary" {  
-"15950" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
-"15953" [label = <(METHOD_RETURN,ANY)> ]
-  "15950" -> "15953" 
+"15947" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
+"15950" [label = <(METHOD_RETURN,ANY)> ]
+  "15947" -> "15950" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/355-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/355-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/355-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/355-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.expressionList" {  
-"15954" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
-"15959" [label = <(METHOD_RETURN,ANY)> ]
-  "15954" -> "15959" 
+"15951" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
+"15956" [label = <(METHOD_RETURN,ANY)> ]
+  "15951" -> "15956" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/356-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/356-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/356-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/356-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(java_object)" {  
-"15960" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_object))> ]
-"15965" [label = <(METHOD_RETURN,ANY)> ]
-  "15960" -> "15965" 
+"15957" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_object))> ]
+"15962" [label = <(METHOD_RETURN,ANY)> ]
+  "15957" -> "15962" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/357-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/357-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/357-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/357-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(java_class)" {  
-"15966" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_class))> ]
-"15971" [label = <(METHOD_RETURN,ANY)> ]
-  "15966" -> "15971" 
+"15963" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_class))> ]
+"15968" [label = <(METHOD_RETURN,ANY)> ]
+  "15963" -> "15968" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/358-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/358-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/358-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/358-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "GetSuperClass" {  
-"15972" [label = <(METHOD,GetSuperClass)> ]
-"15975" [label = <(METHOD_RETURN,ANY)> ]
-  "15972" -> "15975" 
+"15969" [label = <(METHOD,GetSuperClass)> ]
+"15972" [label = <(METHOD_RETURN,ANY)> ]
+  "15969" -> "15972" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/359-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/359-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/359-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/359-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN" {  
-"15976" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN)<SUB>531</SUB>> ]
-"15980" [label = <(METHOD_RETURN,ANY)> ]
-  "15976" -> "15980" 
+"15973" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN)<SUB>530</SUB>> ]
+"15977" [label = <(METHOD_RETURN,ANY)> ]
+  "15973" -> "15977" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/36-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/36-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/36-cfg.dot	2023-06-07 19:35:41.377383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/36-cfg.dot	2023-06-07 19:35:47.817382800 +0330
@@ -1,50 +1,50 @@
 digraph "IsAssignableFrom" {  
-"1494" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>647</SUB>> ]
-"1513" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>648</SUB>> ]
-"1533" [label = <(soa,soa(env))<SUB>649</SUB>> ]
-"1535" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c1 = soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>650</SUB>> ]
-"1552" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c2 = soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>651</SUB>> ]
-"1569" [label = <(RETURN,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;)<SUB>652</SUB>> ]
-"1536" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c1)<SUB>650</SUB>> ]
-"1543" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>650</SUB>> ]
-"1553" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c2)<SUB>651</SUB>> ]
-"1560" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>651</SUB>> ]
-"1570" [label = <(&lt;operator&gt;.conditional,c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE)<SUB>652</SUB>> ]
-"1537" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>650</SUB>> ]
-"1544" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>650</SUB>> ]
-"1554" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>651</SUB>> ]
-"1561" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>651</SUB>> ]
-"1571" [label = <(IsAssignableFrom,c2-&gt;IsAssignableFrom(c1))<SUB>652</SUB>> ]
-"1499" [label = <(UNLIKELY,UNLIKELY((java_class1) == nullptr))<SUB>647</SUB>> ]
-"1518" [label = <(UNLIKELY,UNLIKELY((java_class2) == nullptr))<SUB>648</SUB>> ]
-"1539" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>650</SUB>> ]
-"1545" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>650</SUB>> ]
-"1548" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>650</SUB>> ]
-"1556" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>651</SUB>> ]
-"1562" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>651</SUB>> ]
-"1565" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>651</SUB>> ]
-"1572" [label = <(&lt;operator&gt;.indirectFieldAccess,c2-&gt;IsAssignableFrom)<SUB>652</SUB>> ]
-"1500" [label = <(&lt;operator&gt;.equals,(java_class1) == nullptr)<SUB>647</SUB>> ]
-"1504" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class1 == null&quot;))<SUB>647</SUB>> ]
-"1511" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>647</SUB>> ]
-"1519" [label = <(&lt;operator&gt;.equals,(java_class2) == nullptr)<SUB>648</SUB>> ]
-"1523" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class2 == null&quot;))<SUB>648</SUB>> ]
-"1530" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>648</SUB>> ]
-"1541" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>650</SUB>> ]
-"1547" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>650</SUB>> ]
-"1550" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>650</SUB>> ]
-"1558" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>651</SUB>> ]
-"1564" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>651</SUB>> ]
-"1567" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>651</SUB>> ]
-"1574" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>652</SUB>> ]
-"1505" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>647</SUB>> ]
-"1524" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>648</SUB>> ]
-"1506" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>647</SUB>> ]
-"1508" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>647</SUB>> ]
-"1525" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>648</SUB>> ]
-"1527" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>648</SUB>> ]
-"1489" [label = <(METHOD,IsAssignableFrom)<SUB>646</SUB>> ]
-"1578" [label = <(METHOD_RETURN,jboolean)<SUB>646</SUB>> ]
+"1494" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>646</SUB>> ]
+"1513" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>647</SUB>> ]
+"1533" [label = <(soa,soa(env))<SUB>648</SUB>> ]
+"1535" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c1 = soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>649</SUB>> ]
+"1552" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c2 = soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>650</SUB>> ]
+"1569" [label = <(RETURN,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;)<SUB>651</SUB>> ]
+"1536" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c1)<SUB>649</SUB>> ]
+"1543" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>649</SUB>> ]
+"1553" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c2)<SUB>650</SUB>> ]
+"1560" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>650</SUB>> ]
+"1570" [label = <(&lt;operator&gt;.conditional,c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE)<SUB>651</SUB>> ]
+"1537" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>649</SUB>> ]
+"1544" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>649</SUB>> ]
+"1554" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>650</SUB>> ]
+"1561" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>650</SUB>> ]
+"1571" [label = <(IsAssignableFrom,c2-&gt;IsAssignableFrom(c1))<SUB>651</SUB>> ]
+"1499" [label = <(UNLIKELY,UNLIKELY((java_class1) == nullptr))<SUB>646</SUB>> ]
+"1518" [label = <(UNLIKELY,UNLIKELY((java_class2) == nullptr))<SUB>647</SUB>> ]
+"1539" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>649</SUB>> ]
+"1545" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>649</SUB>> ]
+"1548" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>649</SUB>> ]
+"1556" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>650</SUB>> ]
+"1562" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>650</SUB>> ]
+"1565" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>650</SUB>> ]
+"1572" [label = <(&lt;operator&gt;.indirectFieldAccess,c2-&gt;IsAssignableFrom)<SUB>651</SUB>> ]
+"1500" [label = <(&lt;operator&gt;.equals,(java_class1) == nullptr)<SUB>646</SUB>> ]
+"1504" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class1 == null&quot;))<SUB>646</SUB>> ]
+"1511" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>646</SUB>> ]
+"1519" [label = <(&lt;operator&gt;.equals,(java_class2) == nullptr)<SUB>647</SUB>> ]
+"1523" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class2 == null&quot;))<SUB>647</SUB>> ]
+"1530" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>647</SUB>> ]
+"1541" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>649</SUB>> ]
+"1547" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>649</SUB>> ]
+"1550" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>649</SUB>> ]
+"1558" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>650</SUB>> ]
+"1564" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>650</SUB>> ]
+"1567" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>650</SUB>> ]
+"1574" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>651</SUB>> ]
+"1505" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>646</SUB>> ]
+"1524" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>647</SUB>> ]
+"1506" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>646</SUB>> ]
+"1508" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>646</SUB>> ]
+"1525" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>647</SUB>> ]
+"1527" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>647</SUB>> ]
+"1489" [label = <(METHOD,IsAssignableFrom)<SUB>645</SUB>> ]
+"1578" [label = <(METHOD_RETURN,jboolean)<SUB>645</SUB>> ]
   "1494" -> "1500" 
   "1494" -> "1513" 
   "1513" -> "1519" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/360-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/360-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/360-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/360-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE)" {  
-"15981" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))> ]
-"15986" [label = <(METHOD_RETURN,ANY)> ]
-  "15981" -> "15986" 
+"15978" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))> ]
+"15983" [label = <(METHOD_RETURN,ANY)> ]
+  "15978" -> "15983" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/361-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/361-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/361-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/361-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE)" {  
-"15987" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))> ]
-"15992" [label = <(METHOD_RETURN,ANY)> ]
-  "15987" -> "15992" 
+"15984" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))> ]
+"15989" [label = <(METHOD_RETURN,ANY)> ]
+  "15984" -> "15989" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/362-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/362-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/362-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/362-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "IsAssignableFrom" {  
-"15993" [label = <(METHOD,IsAssignableFrom)> ]
-"15997" [label = <(METHOD_RETURN,ANY)> ]
-  "15993" -> "15997" 
+"15990" [label = <(METHOD,IsAssignableFrom)> ]
+"15994" [label = <(METHOD_RETURN,ANY)> ]
+  "15990" -> "15994" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/363-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/363-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/363-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/363-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE)" {  
-"15998" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))> ]
-"16003" [label = <(METHOD_RETURN,ANY)> ]
-  "15998" -> "16003" 
+"15995" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))> ]
+"16000" [label = <(METHOD_RETURN,ANY)> ]
+  "15995" -> "16000" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/364-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/364-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/364-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/364-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "InstanceOf" {  
-"16004" [label = <(METHOD,InstanceOf)> ]
-"16008" [label = <(METHOD_RETURN,ANY)> ]
-  "16004" -> "16008" 
+"16001" [label = <(METHOD,InstanceOf)> ]
+"16005" [label = <(METHOD_RETURN,ANY)> ]
+  "16001" -> "16005" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/365-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/365-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/365-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/365-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "SetException" {  
-"16009" [label = <(METHOD,SetException)> ]
-"16013" [label = <(METHOD_RETURN,ANY)> ]
-  "16009" -> "16013" 
+"16006" [label = <(METHOD,SetException)> ]
+"16010" [label = <(METHOD_RETURN,ANY)> ]
+  "16006" -> "16010" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/366-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/366-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/366-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/366-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR)" {  
-"16014" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))> ]
-"16019" [label = <(METHOD_RETURN,ANY)> ]
-  "16014" -> "16019" 
+"16011" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))> ]
+"16016" [label = <(METHOD_RETURN,ANY)> ]
+  "16011" -> "16016" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/367-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/367-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/367-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/367-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "old_exception" {  
-"16020" [label = <(METHOD,old_exception)> ]
-"16023" [label = <(METHOD_RETURN,ANY)> ]
-  "16020" -> "16023" 
+"16017" [label = <(METHOD,old_exception)> ]
+"16020" [label = <(METHOD_RETURN,ANY)> ]
+  "16017" -> "16020" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/368-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/368-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/368-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/368-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "exception" {  
-"16024" [label = <(METHOD,exception)> ]
-"16028" [label = <(METHOD_RETURN,ANY)> ]
-  "16024" -> "16028" 
+"16021" [label = <(METHOD,exception)> ]
+"16025" [label = <(METHOD_RETURN,ANY)> ]
+  "16021" -> "16025" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/369-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/369-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/369-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/369-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "exception_class" {  
-"16029" [label = <(METHOD,exception_class)> ]
-"16033" [label = <(METHOD_RETURN,ANY)> ]
-  "16029" -> "16033" 
+"16026" [label = <(METHOD,exception_class)> ]
+"16030" [label = <(METHOD_RETURN,ANY)> ]
+  "16026" -> "16030" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/37-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/37-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/37-cfg.dot	2023-06-07 19:35:41.377383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/37-cfg.dot	2023-06-07 19:35:47.817382800 +0330
@@ -1,44 +1,44 @@
 digraph "IsInstanceOf" {  
-"1585" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>656</SUB>> ]
-"1605" [label = <(&lt;operator&gt;.equals,jobj == nullptr)<SUB>657</SUB>> ]
-"1609" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>659</SUB>> ]
-"1590" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>656</SUB>> ]
-"1614" [label = <(soa,soa(env))<SUB>661</SUB>> ]
-"1616" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>662</SUB>> ]
-"1633" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>663</SUB>> ]
-"1650" [label = <(RETURN,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;)<SUB>664</SUB>> ]
-"1591" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>656</SUB>> ]
-"1595" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>656</SUB>> ]
-"1602" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>656</SUB>> ]
-"1617" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>662</SUB>> ]
-"1624" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>662</SUB>> ]
-"1634" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>663</SUB>> ]
-"1641" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>663</SUB>> ]
-"1651" [label = <(&lt;operator&gt;.conditional,obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE)<SUB>664</SUB>> ]
-"1596" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>656</SUB>> ]
-"1618" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>662</SUB>> ]
-"1625" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>662</SUB>> ]
-"1635" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>663</SUB>> ]
-"1642" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>663</SUB>> ]
-"1652" [label = <(InstanceOf,obj-&gt;InstanceOf(c))<SUB>664</SUB>> ]
-"1597" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>656</SUB>> ]
-"1599" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>656</SUB>> ]
-"1620" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>662</SUB>> ]
-"1626" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>662</SUB>> ]
-"1629" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>662</SUB>> ]
-"1637" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>663</SUB>> ]
-"1643" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>663</SUB>> ]
-"1646" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>663</SUB>> ]
-"1653" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;InstanceOf)<SUB>664</SUB>> ]
-"1622" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>662</SUB>> ]
-"1628" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>662</SUB>> ]
-"1631" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>662</SUB>> ]
-"1639" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>663</SUB>> ]
-"1645" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>663</SUB>> ]
-"1648" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>663</SUB>> ]
-"1655" [label = <(FIELD_IDENTIFIER,InstanceOf,InstanceOf)<SUB>664</SUB>> ]
-"1580" [label = <(METHOD,IsInstanceOf)<SUB>655</SUB>> ]
-"1659" [label = <(METHOD_RETURN,jboolean)<SUB>655</SUB>> ]
+"1585" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>655</SUB>> ]
+"1605" [label = <(&lt;operator&gt;.equals,jobj == nullptr)<SUB>656</SUB>> ]
+"1609" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>658</SUB>> ]
+"1590" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>655</SUB>> ]
+"1614" [label = <(soa,soa(env))<SUB>660</SUB>> ]
+"1616" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>661</SUB>> ]
+"1633" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>662</SUB>> ]
+"1650" [label = <(RETURN,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;)<SUB>663</SUB>> ]
+"1591" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>655</SUB>> ]
+"1595" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>655</SUB>> ]
+"1602" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>655</SUB>> ]
+"1617" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>661</SUB>> ]
+"1624" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>661</SUB>> ]
+"1634" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>662</SUB>> ]
+"1641" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>662</SUB>> ]
+"1651" [label = <(&lt;operator&gt;.conditional,obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE)<SUB>663</SUB>> ]
+"1596" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>655</SUB>> ]
+"1618" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>661</SUB>> ]
+"1625" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>661</SUB>> ]
+"1635" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>662</SUB>> ]
+"1642" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>662</SUB>> ]
+"1652" [label = <(InstanceOf,obj-&gt;InstanceOf(c))<SUB>663</SUB>> ]
+"1597" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>655</SUB>> ]
+"1599" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>655</SUB>> ]
+"1620" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>661</SUB>> ]
+"1626" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>661</SUB>> ]
+"1629" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>661</SUB>> ]
+"1637" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>662</SUB>> ]
+"1643" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>662</SUB>> ]
+"1646" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>662</SUB>> ]
+"1653" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;InstanceOf)<SUB>663</SUB>> ]
+"1622" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>661</SUB>> ]
+"1628" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>661</SUB>> ]
+"1631" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>661</SUB>> ]
+"1639" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>662</SUB>> ]
+"1645" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>662</SUB>> ]
+"1648" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>662</SUB>> ]
+"1655" [label = <(FIELD_IDENTIFIER,InstanceOf,InstanceOf)<SUB>663</SUB>> ]
+"1580" [label = <(METHOD,IsInstanceOf)<SUB>654</SUB>> ]
+"1659" [label = <(METHOD_RETURN,jboolean)<SUB>654</SUB>> ]
   "1585" -> "1591" 
   "1585" -> "1605" 
   "1605" -> "1609" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/370-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/370-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/370-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/370-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "GetObjectClass" {  
-"16034" [label = <(METHOD,GetObjectClass)> ]
-"16038" [label = <(METHOD_RETURN,ANY)> ]
-  "16034" -> "16038" 
+"16031" [label = <(METHOD,GetObjectClass)> ]
+"16035" [label = <(METHOD_RETURN,ANY)> ]
+  "16031" -> "16035" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/371-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/371-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/371-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/371-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "get" {  
-"16039" [label = <(METHOD,get)> ]
-"16042" [label = <(METHOD_RETURN,ANY)> ]
-  "16039" -> "16042" 
+"16036" [label = <(METHOD,get)> ]
+"16039" [label = <(METHOD_RETURN,ANY)> ]
+  "16036" -> "16039" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/372-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/372-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/372-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/372-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "GetMethodID" {  
-"16043" [label = <(METHOD,GetMethodID)> ]
-"16049" [label = <(METHOD_RETURN,ANY)> ]
-  "16043" -> "16049" 
+"16040" [label = <(METHOD,GetMethodID)> ]
+"16046" [label = <(METHOD_RETURN,ANY)> ]
+  "16040" -> "16046" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/373-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/373-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/373-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/373-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Object::PrettyTypeOf" {  
-"16050" [label = <(METHOD,mirror::Object::PrettyTypeOf)> ]
-"16054" [label = <(METHOD_RETURN,ANY)> ]
-  "16050" -> "16054" 
+"16047" [label = <(METHOD,mirror::Object::PrettyTypeOf)> ]
+"16051" [label = <(METHOD_RETURN,ANY)> ]
+  "16047" -> "16051" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/374-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/374-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/374-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/374-cfg.dot	2023-06-07 19:35:48.207382769 +0330
@@ -1,5 +1,5 @@
 digraph "CallVoidMethod" {  
-"16055" [label = <(METHOD,CallVoidMethod)> ]
-"16060" [label = <(METHOD_RETURN,ANY)> ]
-  "16055" -> "16060" 
+"16052" [label = <(METHOD,CallVoidMethod)> ]
+"16057" [label = <(METHOD_RETURN,ANY)> ]
+  "16052" -> "16057" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/375-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/375-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/375-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/375-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureLocalCapacityInternal" {  
-"16061" [label = <(METHOD,EnsureLocalCapacityInternal)> ]
-"16066" [label = <(METHOD_RETURN,ANY)> ]
-  "16061" -> "16066" 
+"16058" [label = <(METHOD,EnsureLocalCapacityInternal)> ]
+"16063" [label = <(METHOD_RETURN,ANY)> ]
+  "16058" -> "16063" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/376-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/376-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/376-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/376-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "PushFrame" {  
-"16067" [label = <(METHOD,PushFrame)> ]
-"16071" [label = <(METHOD_RETURN,ANY)> ]
-  "16067" -> "16071" 
+"16064" [label = <(METHOD,PushFrame)> ]
+"16068" [label = <(METHOD_RETURN,ANY)> ]
+  "16064" -> "16068" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/377-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/377-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/377-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/377-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "down_cast&lt;JNIEnvExt*&gt;" {  
-"16072" [label = <(METHOD,down_cast&lt;JNIEnvExt*&gt;)> ]
-"16075" [label = <(METHOD_RETURN,ANY)> ]
-  "16072" -> "16075" 
+"16069" [label = <(METHOD,down_cast&lt;JNIEnvExt*&gt;)> ]
+"16072" [label = <(METHOD_RETURN,ANY)> ]
+  "16069" -> "16072" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/378-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/378-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/378-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/378-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "PopFrame" {  
-"16076" [label = <(METHOD,PopFrame)> ]
-"16079" [label = <(METHOD_RETURN,ANY)> ]
-  "16076" -> "16079" 
+"16073" [label = <(METHOD,PopFrame)> ]
+"16076" [label = <(METHOD_RETURN,ANY)> ]
+  "16073" -> "16076" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/379-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/379-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/379-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/379-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "Env" {  
-"16080" [label = <(METHOD,Env)> ]
-"16083" [label = <(METHOD_RETURN,ANY)> ]
-  "16080" -> "16083" 
+"16077" [label = <(METHOD,Env)> ]
+"16080" [label = <(METHOD_RETURN,ANY)> ]
+  "16077" -> "16080" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/38-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/38-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/38-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/38-cfg.dot	2023-06-07 19:35:47.817382800 +0330
@@ -1,27 +1,27 @@
 digraph "Throw" {  
-"1666" [label = <(soa,soa(env))<SUB>669</SUB>> ]
-"1668" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Throwable&gt; exception = soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>670</SUB>> ]
-"1692" [label = <(SetException,soa.Self()-&gt;SetException(exception))<SUB>674</SUB>> ]
-"1700" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>675</SUB>> ]
-"1669" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Throwable&gt; exception)<SUB>670</SUB>> ]
-"1676" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>670</SUB>> ]
-"1686" [label = <(&lt;operator&gt;.equals,exception == nullptr)<SUB>671</SUB>> ]
-"1693" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>674</SUB>> ]
-"1670" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Throwable)<SUB>670</SUB>> ]
-"1677" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Throwable)<SUB>670</SUB>> ]
-"1690" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>672</SUB>> ]
-"1694" [label = <(Self,soa.Self())<SUB>674</SUB>> ]
-"1698" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>674</SUB>> ]
-"1672" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>670</SUB>> ]
-"1678" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>670</SUB>> ]
-"1681" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>670</SUB>> ]
-"1695" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>674</SUB>> ]
-"1674" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>670</SUB>> ]
-"1680" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>670</SUB>> ]
-"1683" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>670</SUB>> ]
-"1697" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>674</SUB>> ]
-"1661" [label = <(METHOD,Throw)<SUB>668</SUB>> ]
-"1702" [label = <(METHOD_RETURN,jint)<SUB>668</SUB>> ]
+"1666" [label = <(soa,soa(env))<SUB>668</SUB>> ]
+"1668" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Throwable&gt; exception = soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>669</SUB>> ]
+"1692" [label = <(SetException,soa.Self()-&gt;SetException(exception))<SUB>673</SUB>> ]
+"1700" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>674</SUB>> ]
+"1669" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Throwable&gt; exception)<SUB>669</SUB>> ]
+"1676" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>669</SUB>> ]
+"1686" [label = <(&lt;operator&gt;.equals,exception == nullptr)<SUB>670</SUB>> ]
+"1693" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>673</SUB>> ]
+"1670" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Throwable)<SUB>669</SUB>> ]
+"1677" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Throwable)<SUB>669</SUB>> ]
+"1690" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>671</SUB>> ]
+"1694" [label = <(Self,soa.Self())<SUB>673</SUB>> ]
+"1698" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>673</SUB>> ]
+"1672" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>669</SUB>> ]
+"1678" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>669</SUB>> ]
+"1681" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>669</SUB>> ]
+"1695" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>673</SUB>> ]
+"1674" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>669</SUB>> ]
+"1680" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>669</SUB>> ]
+"1683" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>669</SUB>> ]
+"1697" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>673</SUB>> ]
+"1661" [label = <(METHOD,Throw)<SUB>667</SUB>> ]
+"1702" [label = <(METHOD_RETURN,jint)<SUB>667</SUB>> ]
   "1666" -> "1674" 
   "1668" -> "1686" 
   "1692" -> "1700" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/380-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/380-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/380-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/380-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "AddGlobalRef" {  
-"16084" [label = <(METHOD,AddGlobalRef)> ]
-"16089" [label = <(METHOD_RETURN,ANY)> ]
-  "16084" -> "16089" 
+"16081" [label = <(METHOD,AddGlobalRef)> ]
+"16086" [label = <(METHOD_RETURN,ANY)> ]
+  "16081" -> "16086" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/381-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/381-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/381-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/381-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "Vm" {  
-"16090" [label = <(METHOD,Vm)> ]
-"16093" [label = <(METHOD_RETURN,ANY)> ]
-  "16090" -> "16093" 
+"16087" [label = <(METHOD,Vm)> ]
+"16090" [label = <(METHOD_RETURN,ANY)> ]
+  "16087" -> "16090" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/382-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/382-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/382-cfg.dot	2023-06-07 19:35:41.627383214 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/382-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteGlobalRef" {  
-"16094" [label = <(METHOD,DeleteGlobalRef)> ]
-"16099" [label = <(METHOD_RETURN,ANY)> ]
-  "16094" -> "16099" 
+"16091" [label = <(METHOD,DeleteGlobalRef)> ]
+"16096" [label = <(METHOD_RETURN,ANY)> ]
+  "16091" -> "16096" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/383-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/383-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/383-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/383-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "AddWeakGlobalRef" {  
-"16100" [label = <(METHOD,AddWeakGlobalRef)> ]
-"16105" [label = <(METHOD_RETURN,ANY)> ]
-  "16100" -> "16105" 
+"16097" [label = <(METHOD,AddWeakGlobalRef)> ]
+"16102" [label = <(METHOD_RETURN,ANY)> ]
+  "16097" -> "16102" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/384-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/384-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/384-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/384-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteWeakGlobalRef" {  
-"16106" [label = <(METHOD,DeleteWeakGlobalRef)> ]
-"16111" [label = <(METHOD_RETURN,ANY)> ]
-  "16106" -> "16111" 
+"16103" [label = <(METHOD,DeleteWeakGlobalRef)> ]
+"16108" [label = <(METHOD_RETURN,ANY)> ]
+  "16103" -> "16108" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/385-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/385-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/385-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/385-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "Remove" {  
-"16112" [label = <(METHOD,Remove)> ]
-"16117" [label = <(METHOD_RETURN,ANY)> ]
-  "16112" -> "16117" 
+"16109" [label = <(METHOD,Remove)> ]
+"16114" [label = <(METHOD_RETURN,ANY)> ]
+  "16109" -> "16114" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/386-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/386-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/386-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/386-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "IsStringClass" {  
-"16118" [label = <(METHOD,IsStringClass)> ]
-"16121" [label = <(METHOD_RETURN,ANY)> ]
-  "16118" -> "16121" 
+"16115" [label = <(METHOD,IsStringClass)> ]
+"16118" [label = <(METHOD_RETURN,ANY)> ]
+  "16115" -> "16118" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/387-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/387-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/387-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/387-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetCurrentAllocator" {  
-"16122" [label = <(METHOD,GetCurrentAllocator)> ]
-"16125" [label = <(METHOD_RETURN,ANY)> ]
-  "16122" -> "16125" 
+"16119" [label = <(METHOD,GetCurrentAllocator)> ]
+"16122" [label = <(METHOD_RETURN,ANY)> ]
+  "16119" -> "16122" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/388-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/388-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/388-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/388-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetHeap" {  
-"16126" [label = <(METHOD,GetHeap)> ]
-"16129" [label = <(METHOD_RETURN,ANY)> ]
-  "16126" -> "16129" 
+"16123" [label = <(METHOD,GetHeap)> ]
+"16126" [label = <(METHOD_RETURN,ANY)> ]
+  "16123" -> "16126" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/389-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/389-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/389-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/389-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::String::AllocEmptyString" {  
-"16130" [label = <(METHOD,mirror::String::AllocEmptyString)> ]
-"16135" [label = <(METHOD_RETURN,ANY)> ]
-  "16130" -> "16135" 
+"16127" [label = <(METHOD,mirror::String::AllocEmptyString)> ]
+"16132" [label = <(METHOD_RETURN,ANY)> ]
+  "16127" -> "16132" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/39-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/39-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/39-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/39-cfg.dot	2023-06-07 19:35:47.817382800 +0330
@@ -1,16 +1,16 @@
 digraph "ThrowNew" {  
-"1709" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>679</SUB>> ]
-"1728" [label = <(RETURN,return ThrowNewException(env, c, msg, nullptr);,return ThrowNewException(env, c, msg, nullptr);)<SUB>680</SUB>> ]
-"1729" [label = <(ThrowNewException,ThrowNewException(env, c, msg, nullptr))<SUB>680</SUB>> ]
-"1714" [label = <(UNLIKELY,UNLIKELY((c) == nullptr))<SUB>679</SUB>> ]
-"1715" [label = <(&lt;operator&gt;.equals,(c) == nullptr)<SUB>679</SUB>> ]
-"1719" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;c == null&quot;))<SUB>679</SUB>> ]
-"1726" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>679</SUB>> ]
-"1720" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>679</SUB>> ]
-"1721" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>679</SUB>> ]
-"1723" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>679</SUB>> ]
-"1704" [label = <(METHOD,ThrowNew)<SUB>678</SUB>> ]
-"1734" [label = <(METHOD_RETURN,jint)<SUB>678</SUB>> ]
+"1709" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>678</SUB>> ]
+"1728" [label = <(RETURN,return ThrowNewException(env, c, msg, nullptr);,return ThrowNewException(env, c, msg, nullptr);)<SUB>679</SUB>> ]
+"1729" [label = <(ThrowNewException,ThrowNewException(env, c, msg, nullptr))<SUB>679</SUB>> ]
+"1714" [label = <(UNLIKELY,UNLIKELY((c) == nullptr))<SUB>678</SUB>> ]
+"1715" [label = <(&lt;operator&gt;.equals,(c) == nullptr)<SUB>678</SUB>> ]
+"1719" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;c == null&quot;))<SUB>678</SUB>> ]
+"1726" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>678</SUB>> ]
+"1720" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>678</SUB>> ]
+"1721" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>678</SUB>> ]
+"1723" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>678</SUB>> ]
+"1704" [label = <(METHOD,ThrowNew)<SUB>677</SUB>> ]
+"1734" [label = <(METHOD_RETURN,jint)<SUB>677</SUB>> ]
   "1709" -> "1715" 
   "1709" -> "1729" 
   "1728" -> "1734" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/390-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/390-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/390-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/390-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "AllocObject" {  
-"16136" [label = <(METHOD,AllocObject)> ]
-"16140" [label = <(METHOD_RETURN,ANY)> ]
-  "16136" -> "16140" 
+"16133" [label = <(METHOD,AllocObject)> ]
+"16137" [label = <(METHOD_RETURN,ANY)> ]
+  "16133" -> "16137" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/391-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/391-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/391-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/391-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "va_start" {  
-"16141" [label = <(METHOD,va_start)> ]
-"16145" [label = <(METHOD_RETURN,ANY)> ]
-  "16141" -> "16145" 
+"16138" [label = <(METHOD,va_start)> ]
+"16142" [label = <(METHOD_RETURN,ANY)> ]
+  "16138" -> "16142" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/392-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/392-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/392-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/392-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "free_args_later" {  
-"16146" [label = <(METHOD,free_args_later)> ]
-"16149" [label = <(METHOD_RETURN,ANY)> ]
-  "16146" -> "16149" 
+"16143" [label = <(METHOD,free_args_later)> ]
+"16146" [label = <(METHOD_RETURN,ANY)> ]
+  "16143" -> "16146" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/393-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/393-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/393-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/393-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "NewObjectV" {  
-"16150" [label = <(METHOD,NewObjectV)> ]
-"16156" [label = <(METHOD_RETURN,ANY)> ]
-  "16150" -> "16156" 
+"16147" [label = <(METHOD,NewObjectV)> ]
+"16153" [label = <(METHOD_RETURN,ANY)> ]
+  "16147" -> "16153" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/394-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/394-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/394-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/394-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "WellKnownClasses::StringInitToStringFactory" {  
-"16157" [label = <(METHOD,WellKnownClasses::StringInitToStringFactory)> ]
-"16161" [label = <(METHOD_RETURN,ANY)> ]
-  "16157" -> "16161" 
+"16154" [label = <(METHOD,WellKnownClasses::StringInitToStringFactory)> ]
+"16158" [label = <(METHOD_RETURN,ANY)> ]
+  "16154" -> "16158" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/395-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/395-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/395-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/395-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CallStaticObjectMethodV" {  
-"16162" [label = <(METHOD,CallStaticObjectMethodV)> ]
-"16168" [label = <(METHOD_RETURN,ANY)> ]
-  "16162" -> "16168" 
+"16159" [label = <(METHOD,CallStaticObjectMethodV)> ]
+"16165" [label = <(METHOD_RETURN,ANY)> ]
+  "16159" -> "16165" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/396-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/396-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/396-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/396-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CallNonvirtualVoidMethodV" {  
-"16169" [label = <(METHOD,CallNonvirtualVoidMethodV)> ]
-"16176" [label = <(METHOD_RETURN,ANY)> ]
-  "16169" -> "16176" 
+"16166" [label = <(METHOD,CallNonvirtualVoidMethodV)> ]
+"16173" [label = <(METHOD_RETURN,ANY)> ]
+  "16166" -> "16173" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/397-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/397-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/397-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/397-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CallStaticObjectMethodA" {  
-"16177" [label = <(METHOD,CallStaticObjectMethodA)> ]
-"16183" [label = <(METHOD_RETURN,ANY)> ]
-  "16177" -> "16183" 
+"16174" [label = <(METHOD,CallStaticObjectMethodA)> ]
+"16180" [label = <(METHOD_RETURN,ANY)> ]
+  "16174" -> "16180" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/398-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/398-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/398-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/398-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CallNonvirtualVoidMethodA" {  
-"16184" [label = <(METHOD,CallNonvirtualVoidMethodA)> ]
-"16191" [label = <(METHOD_RETURN,ANY)> ]
-  "16184" -> "16191" 
+"16181" [label = <(METHOD,CallNonvirtualVoidMethodA)> ]
+"16188" [label = <(METHOD_RETURN,ANY)> ]
+  "16181" -> "16188" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/399-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/399-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/399-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/399-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(sig)" {  
-"16192" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(sig))> ]
-"16197" [label = <(METHOD_RETURN,ANY)> ]
-  "16192" -> "16197" 
+"16189" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(sig))> ]
+"16194" [label = <(METHOD_RETURN,ANY)> ]
+  "16189" -> "16194" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/4-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/4-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/4-cfg.dot	2023-06-07 19:35:41.337383234 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/4-cfg.dot	2023-06-07 19:35:47.777382805 +0330
@@ -1,5 +1,5 @@
 digraph "ScopedVAArgs" {  
-"25" [label = <(METHOD,ScopedVAArgs)<SUB>75</SUB>> ]
-"28" [label = <(METHOD_RETURN,ANY)<SUB>75</SUB>> ]
+"25" [label = <(METHOD,ScopedVAArgs)<SUB>74</SUB>> ]
+"28" [label = <(METHOD_RETURN,ANY)<SUB>74</SUB>> ]
   "25" -> "28" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/40-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/40-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/40-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/40-cfg.dot	2023-06-07 19:35:47.817382800 +0330
@@ -1,15 +1,15 @@
 digraph "ExceptionCheck" {  
-"1739" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;)<SUB>684</SUB>> ]
-"1740" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE)<SUB>684</SUB>> ]
-"1741" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>684</SUB>> ]
-"1742" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>684</SUB>> ]
-"1743" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>684</SUB>> ]
-"1748" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>684</SUB>> ]
-"1744" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>684</SUB>> ]
-"1747" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>684</SUB>> ]
-"1745" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>684</SUB>> ]
-"1736" [label = <(METHOD,ExceptionCheck)<SUB>683</SUB>> ]
-"1751" [label = <(METHOD_RETURN,jboolean)<SUB>683</SUB>> ]
+"1739" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;)<SUB>683</SUB>> ]
+"1740" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE)<SUB>683</SUB>> ]
+"1741" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>683</SUB>> ]
+"1742" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>683</SUB>> ]
+"1743" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>683</SUB>> ]
+"1748" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>683</SUB>> ]
+"1744" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>683</SUB>> ]
+"1747" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>683</SUB>> ]
+"1745" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>683</SUB>> ]
+"1736" [label = <(METHOD,ExceptionCheck)<SUB>682</SUB>> ]
+"1751" [label = <(METHOD_RETURN,jboolean)<SUB>682</SUB>> ]
   "1739" -> "1751" 
   "1740" -> "1739" 
   "1741" -> "1740" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/400-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/400-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/400-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/400-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(obj)" {  
-"16198" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(obj))> ]
-"16203" [label = <(METHOD_RETURN,ANY)> ]
-  "16198" -> "16203" 
+"16195" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(obj))> ]
+"16200" [label = <(METHOD_RETURN,ANY)> ]
+  "16195" -> "16200" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/401-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/401-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/401-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/401-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "result" {  
-"16204" [label = <(METHOD,result)> ]
-"16207" [label = <(METHOD_RETURN,ANY)> ]
-  "16204" -> "16207" 
+"16201" [label = <(METHOD,result)> ]
+"16204" [label = <(METHOD_RETURN,ANY)> ]
+  "16201" -> "16204" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/402-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/402-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/402-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/402-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeVirtualOrInterfaceWithVarArgs" {  
-"16208" [label = <(METHOD,InvokeVirtualOrInterfaceWithVarArgs)> ]
-"16214" [label = <(METHOD_RETURN,ANY)> ]
-  "16208" -> "16214" 
+"16205" [label = <(METHOD,InvokeVirtualOrInterfaceWithVarArgs)> ]
+"16211" [label = <(METHOD_RETURN,ANY)> ]
+  "16205" -> "16211" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/403-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/403-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/403-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/403-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetL" {  
-"16215" [label = <(METHOD,GetL)> ]
-"16218" [label = <(METHOD_RETURN,ANY)> ]
-  "16215" -> "16218" 
+"16212" [label = <(METHOD,GetL)> ]
+"16215" [label = <(METHOD_RETURN,ANY)> ]
+  "16212" -> "16215" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/404-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/404-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/404-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/404-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeVirtualOrInterfaceWithJValues" {  
-"16219" [label = <(METHOD,InvokeVirtualOrInterfaceWithJValues)> ]
-"16225" [label = <(METHOD_RETURN,ANY)> ]
-  "16219" -> "16225" 
+"16216" [label = <(METHOD,InvokeVirtualOrInterfaceWithJValues)> ]
+"16222" [label = <(METHOD_RETURN,ANY)> ]
+  "16216" -> "16222" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/405-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/405-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/405-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/405-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO" {  
-"16226" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO)<SUB>528</SUB>> ]
-"16229" [label = <(METHOD_RETURN,ANY)> ]
-  "16226" -> "16229" 
+"16223" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO)<SUB>527</SUB>> ]
+"16226" [label = <(METHOD_RETURN,ANY)> ]
+  "16223" -> "16226" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/406-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/406-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/406-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/406-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj)" {  
-"16230" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))> ]
-"16235" [label = <(METHOD_RETURN,ANY)> ]
-  "16230" -> "16235" 
+"16227" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))> ]
+"16232" [label = <(METHOD_RETURN,ANY)> ]
+  "16227" -> "16232" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/407-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/407-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/407-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/407-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid)" {  
-"16236" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))> ]
-"16241" [label = <(METHOD_RETURN,ANY)> ]
-  "16236" -> "16241" 
+"16233" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))> ]
+"16238" [label = <(METHOD_RETURN,ANY)> ]
+  "16233" -> "16238" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/408-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/408-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/408-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/408-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetZ" {  
-"16242" [label = <(METHOD,GetZ)> ]
-"16245" [label = <(METHOD_RETURN,ANY)> ]
-  "16242" -> "16245" 
+"16239" [label = <(METHOD,GetZ)> ]
+"16242" [label = <(METHOD_RETURN,ANY)> ]
+  "16239" -> "16242" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/409-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/409-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/409-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/409-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetB" {  
-"16246" [label = <(METHOD,GetB)> ]
-"16249" [label = <(METHOD_RETURN,ANY)> ]
-  "16246" -> "16249" 
+"16243" [label = <(METHOD,GetB)> ]
+"16246" [label = <(METHOD_RETURN,ANY)> ]
+  "16243" -> "16246" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/41-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/41-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/41-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/41-cfg.dot	2023-06-07 19:35:47.817382800 +0330
@@ -1,13 +1,13 @@
 digraph "ExceptionClear" {  
-"1757" [label = <(soa,soa(env))<SUB>688</SUB>> ]
-"1759" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>689</SUB>> ]
-"1760" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>689</SUB>> ]
-"1761" [label = <(Self,soa.Self())<SUB>689</SUB>> ]
-"1765" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>689</SUB>> ]
-"1762" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>689</SUB>> ]
-"1764" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>689</SUB>> ]
-"1753" [label = <(METHOD,ExceptionClear)<SUB>687</SUB>> ]
-"1766" [label = <(METHOD_RETURN,void)<SUB>687</SUB>> ]
+"1757" [label = <(soa,soa(env))<SUB>687</SUB>> ]
+"1759" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>688</SUB>> ]
+"1760" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>688</SUB>> ]
+"1761" [label = <(Self,soa.Self())<SUB>688</SUB>> ]
+"1765" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>688</SUB>> ]
+"1762" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>688</SUB>> ]
+"1764" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>688</SUB>> ]
+"1753" [label = <(METHOD,ExceptionClear)<SUB>686</SUB>> ]
+"1766" [label = <(METHOD_RETURN,void)<SUB>686</SUB>> ]
   "1757" -> "1764" 
   "1759" -> "1766" 
   "1760" -> "1759" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/410-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/410-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/410-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/410-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetC" {  
-"16250" [label = <(METHOD,GetC)> ]
-"16253" [label = <(METHOD_RETURN,ANY)> ]
-  "16250" -> "16253" 
+"16247" [label = <(METHOD,GetC)> ]
+"16250" [label = <(METHOD_RETURN,ANY)> ]
+  "16247" -> "16250" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/411-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/411-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/411-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/411-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetD" {  
-"16254" [label = <(METHOD,GetD)> ]
-"16257" [label = <(METHOD_RETURN,ANY)> ]
-  "16254" -> "16257" 
+"16251" [label = <(METHOD,GetD)> ]
+"16254" [label = <(METHOD_RETURN,ANY)> ]
+  "16251" -> "16254" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/412-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/412-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/412-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/412-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetF" {  
-"16258" [label = <(METHOD,GetF)> ]
-"16261" [label = <(METHOD_RETURN,ANY)> ]
-  "16258" -> "16261" 
+"16255" [label = <(METHOD,GetF)> ]
+"16258" [label = <(METHOD_RETURN,ANY)> ]
+  "16255" -> "16258" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/413-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/413-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/413-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/413-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetI" {  
-"16262" [label = <(METHOD,GetI)> ]
-"16265" [label = <(METHOD_RETURN,ANY)> ]
-  "16262" -> "16265" 
+"16259" [label = <(METHOD,GetI)> ]
+"16262" [label = <(METHOD_RETURN,ANY)> ]
+  "16259" -> "16262" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/414-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/414-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/414-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/414-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetJ" {  
-"16266" [label = <(METHOD,GetJ)> ]
-"16269" [label = <(METHOD_RETURN,ANY)> ]
-  "16266" -> "16269" 
+"16263" [label = <(METHOD,GetJ)> ]
+"16266" [label = <(METHOD_RETURN,ANY)> ]
+  "16263" -> "16266" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/415-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/415-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/415-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/415-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetS" {  
-"16270" [label = <(METHOD,GetS)> ]
-"16273" [label = <(METHOD_RETURN,ANY)> ]
-  "16270" -> "16273" 
+"16267" [label = <(METHOD,GetS)> ]
+"16270" [label = <(METHOD_RETURN,ANY)> ]
+  "16267" -> "16270" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/416-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/416-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/416-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/416-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID" {  
-"16274" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID)<SUB>525</SUB>> ]
-"16277" [label = <(METHOD_RETURN,ANY)> ]
-  "16274" -> "16277" 
+"16271" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID)<SUB>524</SUB>> ]
+"16274" [label = <(METHOD_RETURN,ANY)> ]
+  "16271" -> "16274" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/417-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/417-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/417-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/417-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj)" {  
-"16278" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))> ]
-"16283" [label = <(METHOD_RETURN,ANY)> ]
-  "16278" -> "16283" 
+"16275" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))> ]
+"16280" [label = <(METHOD_RETURN,ANY)> ]
+  "16275" -> "16280" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/418-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/418-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/418-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/418-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid)" {  
-"16284" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))> ]
-"16289" [label = <(METHOD_RETURN,ANY)> ]
-  "16284" -> "16289" 
+"16281" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))> ]
+"16286" [label = <(METHOD_RETURN,ANY)> ]
+  "16281" -> "16286" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/419-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/419-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/419-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/419-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeWithVarArgs" {  
-"16290" [label = <(METHOD,InvokeWithVarArgs)> ]
-"16296" [label = <(METHOD_RETURN,ANY)> ]
-  "16290" -> "16296" 
+"16287" [label = <(METHOD,InvokeWithVarArgs)> ]
+"16293" [label = <(METHOD_RETURN,ANY)> ]
+  "16287" -> "16293" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/42-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/42-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/42-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/42-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,122 +1,122 @@
 digraph "ExceptionDescribe" {  
-"1772" [label = <(soa,soa(env))<SUB>693</SUB>> ]
-"1785" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>700</SUB>> ]
-"1794" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Throwable&gt; old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>701</SUB>> ]
-"1816" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>703</SUB>> ]
-"1823" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jthrowable&gt; exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>704</SUB>> ]
-"1839" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jclass&gt; exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>706</SUB>> ]
-"1854" [label = <(&lt;operator&gt;.assignment,mid = env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>707</SUB>> ]
-"1933" [label = <(SetException,soa.Self()-&gt;SetException(old_exception.Get()))<SUB>719</SUB>> ]
-"1775" [label = <(&lt;operator&gt;.logicalNot,!soa.Self()-&gt;GetException())<SUB>696</SUB>> ]
-"1786" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>700</SUB>> ]
-"1789" [label = <(hs,hs(soa.Self()))<SUB>700</SUB>> ]
-"1795" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Throwable)<SUB>701</SUB>> ]
-"1800" [label = <(old_exception,old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>701</SUB>> ]
-"1817" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>703</SUB>> ]
-"1824" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jthrowable)<SUB>704</SUB>> ]
-"1827" [label = <(exception,exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>704</SUB>> ]
-"1840" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jclass)<SUB>706</SUB>> ]
-"1843" [label = <(exception_class,exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>706</SUB>> ]
-"1856" [label = <(GetMethodID,env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>707</SUB>> ]
-"1867" [label = <(&lt;operator&gt;.equals,mid == nullptr)<SUB>708</SUB>> ]
-"1934" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>719</SUB>> ]
-"1940" [label = <(Get,old_exception.Get())<SUB>719</SUB>> ]
-"1776" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>696</SUB>> ]
-"1784" [label = <(RETURN,return;,return;)<SUB>697</SUB>> ]
-"1790" [label = <(Self,soa.Self())<SUB>700</SUB>> ]
-"1797" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>701</SUB>> ]
-"1801" [label = <(&lt;operator&gt;.greaterThan,hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException()))<SUB>702</SUB>> ]
-"1818" [label = <(Self,soa.Self())<SUB>703</SUB>> ]
-"1822" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>703</SUB>> ]
-"1829" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get()))<SUB>705</SUB>> ]
-"1845" [label = <(GetObjectClass,env-&gt;GetObjectClass(exception.get()))<SUB>706</SUB>> ]
-"1857" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetMethodID)<SUB>707</SUB>> ]
-"1860" [label = <(get,exception_class.get())<SUB>707</SUB>> ]
-"1871" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;\012 &lt;&lt; mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>709</SUB>> ]
-"1935" [label = <(Self,soa.Self())<SUB>719</SUB>> ]
-"1939" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>719</SUB>> ]
-"1941" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>719</SUB>> ]
-"1777" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>696</SUB>> ]
-"1791" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>700</SUB>> ]
-"1799" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>701</SUB>> ]
-"1802" [label = <(&lt;operator&gt;.lessThan,hs.NewHandle&lt;mirror::Throwable)<SUB>702</SUB>> ]
-"1809" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>702</SUB>> ]
-"1819" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>703</SUB>> ]
-"1830" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>705</SUB>> ]
-"1835" [label = <(Get,old_exception.Get())<SUB>705</SUB>> ]
-"1846" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetObjectClass)<SUB>706</SUB>> ]
-"1849" [label = <(get,exception.get())<SUB>706</SUB>> ]
-"1859" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>707</SUB>> ]
-"1861" [label = <(&lt;operator&gt;.fieldAccess,exception_class.get)<SUB>707</SUB>> ]
-"1872" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;)<SUB>709</SUB>> ]
-"1876" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>710</SUB>> ]
-"1888" [label = <(CallVoidMethod,env-&gt;CallVoidMethod(exception.get(), mid))<SUB>712</SUB>> ]
-"1936" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>719</SUB>> ]
-"1943" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>719</SUB>> ]
-"1778" [label = <(Self,soa.Self())<SUB>696</SUB>> ]
-"1782" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>696</SUB>> ]
-"1793" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>700</SUB>> ]
-"1803" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>702</SUB>> ]
-"1806" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>702</SUB>> ]
-"1810" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>702</SUB>> ]
-"1821" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>703</SUB>> ]
-"1831" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>705</SUB>> ]
-"1836" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>705</SUB>> ]
-"1848" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>706</SUB>> ]
-"1850" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>706</SUB>> ]
-"1863" [label = <(FIELD_IDENTIFIER,get,get)<SUB>707</SUB>> ]
-"1873" [label = <(LOG,LOG(WARNING))<SUB>709</SUB>> ]
-"1877" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>710</SUB>> ]
-"1882" [label = <(Get,old_exception.Get())<SUB>710</SUB>> ]
-"1889" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;CallVoidMethod)<SUB>712</SUB>> ]
-"1892" [label = <(get,exception.get())<SUB>712</SUB>> ]
-"1898" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>713</SUB>> ]
-"1938" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>719</SUB>> ]
-"1779" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>696</SUB>> ]
-"1805" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>702</SUB>> ]
-"1808" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>702</SUB>> ]
-"1811" [label = <(Self,soa.Self())<SUB>702</SUB>> ]
-"1815" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>702</SUB>> ]
-"1833" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>705</SUB>> ]
-"1838" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>705</SUB>> ]
-"1852" [label = <(FIELD_IDENTIFIER,get,get)<SUB>706</SUB>> ]
-"1878" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>710</SUB>> ]
-"1881" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>710</SUB>> ]
-"1883" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>710</SUB>> ]
-"1891" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>712</SUB>> ]
-"1893" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>712</SUB>> ]
-"1899" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>713</SUB>> ]
-"1906" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException())\012 &lt;&lt; &quot; thrown while calling printStackTrace&quot;)<SUB>714</SUB>> ]
-"1926" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>716</SUB>> ]
-"1781" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>696</SUB>> ]
-"1812" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>702</SUB>> ]
-"1885" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>710</SUB>> ]
-"1895" [label = <(FIELD_IDENTIFIER,get,get)<SUB>712</SUB>> ]
-"1900" [label = <(Self,soa.Self())<SUB>713</SUB>> ]
-"1904" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>713</SUB>> ]
-"1907" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>714</SUB>> ]
-"1927" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>716</SUB>> ]
-"1814" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>702</SUB>> ]
-"1901" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>713</SUB>> ]
-"1908" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot;)<SUB>714</SUB>> ]
-"1912" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>714</SUB>> ]
-"1928" [label = <(Self,soa.Self())<SUB>716</SUB>> ]
-"1932" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>716</SUB>> ]
-"1903" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>713</SUB>> ]
-"1909" [label = <(LOG,LOG(WARNING))<SUB>714</SUB>> ]
-"1913" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>714</SUB>> ]
-"1918" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>714</SUB>> ]
-"1929" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>716</SUB>> ]
-"1914" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>714</SUB>> ]
-"1917" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>714</SUB>> ]
-"1919" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>714</SUB>> ]
-"1931" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>716</SUB>> ]
-"1920" [label = <(Self,soa.Self())<SUB>714</SUB>> ]
-"1924" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>714</SUB>> ]
-"1921" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>714</SUB>> ]
-"1923" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>714</SUB>> ]
-"1768" [label = <(METHOD,ExceptionDescribe)<SUB>692</SUB>> ]
-"1944" [label = <(METHOD_RETURN,void)<SUB>692</SUB>> ]
+"1772" [label = <(soa,soa(env))<SUB>692</SUB>> ]
+"1785" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>699</SUB>> ]
+"1794" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Throwable&gt; old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>700</SUB>> ]
+"1816" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>702</SUB>> ]
+"1823" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jthrowable&gt; exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>703</SUB>> ]
+"1839" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jclass&gt; exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>705</SUB>> ]
+"1854" [label = <(&lt;operator&gt;.assignment,mid = env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>706</SUB>> ]
+"1933" [label = <(SetException,soa.Self()-&gt;SetException(old_exception.Get()))<SUB>718</SUB>> ]
+"1775" [label = <(&lt;operator&gt;.logicalNot,!soa.Self()-&gt;GetException())<SUB>695</SUB>> ]
+"1786" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>699</SUB>> ]
+"1789" [label = <(hs,hs(soa.Self()))<SUB>699</SUB>> ]
+"1795" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Throwable)<SUB>700</SUB>> ]
+"1800" [label = <(old_exception,old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>700</SUB>> ]
+"1817" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>702</SUB>> ]
+"1824" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jthrowable)<SUB>703</SUB>> ]
+"1827" [label = <(exception,exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>703</SUB>> ]
+"1840" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jclass)<SUB>705</SUB>> ]
+"1843" [label = <(exception_class,exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>705</SUB>> ]
+"1856" [label = <(GetMethodID,env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>706</SUB>> ]
+"1867" [label = <(&lt;operator&gt;.equals,mid == nullptr)<SUB>707</SUB>> ]
+"1934" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>718</SUB>> ]
+"1940" [label = <(Get,old_exception.Get())<SUB>718</SUB>> ]
+"1776" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>695</SUB>> ]
+"1784" [label = <(RETURN,return;,return;)<SUB>696</SUB>> ]
+"1790" [label = <(Self,soa.Self())<SUB>699</SUB>> ]
+"1797" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>700</SUB>> ]
+"1801" [label = <(&lt;operator&gt;.greaterThan,hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException()))<SUB>701</SUB>> ]
+"1818" [label = <(Self,soa.Self())<SUB>702</SUB>> ]
+"1822" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>702</SUB>> ]
+"1829" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get()))<SUB>704</SUB>> ]
+"1845" [label = <(GetObjectClass,env-&gt;GetObjectClass(exception.get()))<SUB>705</SUB>> ]
+"1857" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetMethodID)<SUB>706</SUB>> ]
+"1860" [label = <(get,exception_class.get())<SUB>706</SUB>> ]
+"1871" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;\012 &lt;&lt; mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>708</SUB>> ]
+"1935" [label = <(Self,soa.Self())<SUB>718</SUB>> ]
+"1939" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>718</SUB>> ]
+"1941" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>718</SUB>> ]
+"1777" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>695</SUB>> ]
+"1791" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>699</SUB>> ]
+"1799" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>700</SUB>> ]
+"1802" [label = <(&lt;operator&gt;.lessThan,hs.NewHandle&lt;mirror::Throwable)<SUB>701</SUB>> ]
+"1809" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>701</SUB>> ]
+"1819" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>702</SUB>> ]
+"1830" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>704</SUB>> ]
+"1835" [label = <(Get,old_exception.Get())<SUB>704</SUB>> ]
+"1846" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetObjectClass)<SUB>705</SUB>> ]
+"1849" [label = <(get,exception.get())<SUB>705</SUB>> ]
+"1859" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>706</SUB>> ]
+"1861" [label = <(&lt;operator&gt;.fieldAccess,exception_class.get)<SUB>706</SUB>> ]
+"1872" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;)<SUB>708</SUB>> ]
+"1876" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>709</SUB>> ]
+"1888" [label = <(CallVoidMethod,env-&gt;CallVoidMethod(exception.get(), mid))<SUB>711</SUB>> ]
+"1936" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>718</SUB>> ]
+"1943" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>718</SUB>> ]
+"1778" [label = <(Self,soa.Self())<SUB>695</SUB>> ]
+"1782" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>695</SUB>> ]
+"1793" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>699</SUB>> ]
+"1803" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>701</SUB>> ]
+"1806" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>701</SUB>> ]
+"1810" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>701</SUB>> ]
+"1821" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>702</SUB>> ]
+"1831" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>704</SUB>> ]
+"1836" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>704</SUB>> ]
+"1848" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>705</SUB>> ]
+"1850" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>705</SUB>> ]
+"1863" [label = <(FIELD_IDENTIFIER,get,get)<SUB>706</SUB>> ]
+"1873" [label = <(LOG,LOG(WARNING))<SUB>708</SUB>> ]
+"1877" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>709</SUB>> ]
+"1882" [label = <(Get,old_exception.Get())<SUB>709</SUB>> ]
+"1889" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;CallVoidMethod)<SUB>711</SUB>> ]
+"1892" [label = <(get,exception.get())<SUB>711</SUB>> ]
+"1898" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>712</SUB>> ]
+"1938" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>718</SUB>> ]
+"1779" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>695</SUB>> ]
+"1805" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>701</SUB>> ]
+"1808" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>701</SUB>> ]
+"1811" [label = <(Self,soa.Self())<SUB>701</SUB>> ]
+"1815" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>701</SUB>> ]
+"1833" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>704</SUB>> ]
+"1838" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>704</SUB>> ]
+"1852" [label = <(FIELD_IDENTIFIER,get,get)<SUB>705</SUB>> ]
+"1878" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>709</SUB>> ]
+"1881" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>709</SUB>> ]
+"1883" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>709</SUB>> ]
+"1891" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>711</SUB>> ]
+"1893" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>711</SUB>> ]
+"1899" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>712</SUB>> ]
+"1906" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException())\012 &lt;&lt; &quot; thrown while calling printStackTrace&quot;)<SUB>713</SUB>> ]
+"1926" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>715</SUB>> ]
+"1781" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>695</SUB>> ]
+"1812" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>701</SUB>> ]
+"1885" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>709</SUB>> ]
+"1895" [label = <(FIELD_IDENTIFIER,get,get)<SUB>711</SUB>> ]
+"1900" [label = <(Self,soa.Self())<SUB>712</SUB>> ]
+"1904" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>712</SUB>> ]
+"1907" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>713</SUB>> ]
+"1927" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>715</SUB>> ]
+"1814" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>701</SUB>> ]
+"1901" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>712</SUB>> ]
+"1908" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot;)<SUB>713</SUB>> ]
+"1912" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>713</SUB>> ]
+"1928" [label = <(Self,soa.Self())<SUB>715</SUB>> ]
+"1932" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>715</SUB>> ]
+"1903" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>712</SUB>> ]
+"1909" [label = <(LOG,LOG(WARNING))<SUB>713</SUB>> ]
+"1913" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>713</SUB>> ]
+"1918" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>713</SUB>> ]
+"1929" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>715</SUB>> ]
+"1914" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>713</SUB>> ]
+"1917" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>713</SUB>> ]
+"1919" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>713</SUB>> ]
+"1931" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>715</SUB>> ]
+"1920" [label = <(Self,soa.Self())<SUB>713</SUB>> ]
+"1924" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>713</SUB>> ]
+"1921" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>713</SUB>> ]
+"1923" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>713</SUB>> ]
+"1768" [label = <(METHOD,ExceptionDescribe)<SUB>691</SUB>> ]
+"1944" [label = <(METHOD_RETURN,void)<SUB>691</SUB>> ]
   "1772" -> "1781" 
   "1785" -> "1799" 
   "1794" -> "1821" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/420-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/420-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/420-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/420-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeWithJValues" {  
-"16297" [label = <(METHOD,InvokeWithJValues)> ]
-"16303" [label = <(METHOD_RETURN,ANY)> ]
-  "16297" -> "16303" 
+"16294" [label = <(METHOD,InvokeWithJValues)> ]
+"16300" [label = <(METHOD_RETURN,ANY)> ]
+  "16294" -> "16300" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/421-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/421-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/421-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/421-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetObject" {  
-"16304" [label = <(METHOD,GetObject)> ]
-"16308" [label = <(METHOD_RETURN,ANY)> ]
-  "16304" -> "16308" 
+"16301" [label = <(METHOD,GetObject)> ]
+"16305" [label = <(METHOD_RETURN,ANY)> ]
+  "16301" -> "16305" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/422-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/422-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/422-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/422-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GetDeclaringClass" {  
-"16309" [label = <(METHOD,GetDeclaringClass)> ]
-"16312" [label = <(METHOD_RETURN,ANY)> ]
-  "16309" -> "16312" 
+"16306" [label = <(METHOD,GetDeclaringClass)> ]
+"16309" [label = <(METHOD_RETURN,ANY)> ]
+  "16306" -> "16309" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/423-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/423-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/423-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/423-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object)" {  
-"16313" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))> ]
-"16318" [label = <(METHOD_RETURN,ANY)> ]
-  "16313" -> "16318" 
+"16310" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))> ]
+"16315" [label = <(METHOD_RETURN,ANY)> ]
+  "16310" -> "16315" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/424-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/424-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/424-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/424-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid)" {  
-"16319" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))> ]
-"16324" [label = <(METHOD_RETURN,ANY)> ]
-  "16319" -> "16324" 
+"16316" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))> ]
+"16321" [label = <(METHOD_RETURN,ANY)> ]
+  "16316" -> "16321" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/425-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/425-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/425-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/425-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "NotifySetObjectField" {  
-"16325" [label = <(METHOD,NotifySetObjectField)> ]
-"16330" [label = <(METHOD_RETURN,ANY)> ]
-  "16325" -> "16330" 
+"16322" [label = <(METHOD,NotifySetObjectField)> ]
+"16327" [label = <(METHOD_RETURN,ANY)> ]
+  "16322" -> "16327" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/426-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/426-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/426-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/426-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD" {  
-"16331" [label = <(METHOD,GET_PRIMITIVE_FIELD)<SUB>1494</SUB>> ]
-"16334" [label = <(METHOD_RETURN,ANY)> ]
-  "16331" -> "16334" 
+"16328" [label = <(METHOD,GET_PRIMITIVE_FIELD)<SUB>1493</SUB>> ]
+"16331" [label = <(METHOD_RETURN,ANY)> ]
+  "16328" -> "16331" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/427-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/427-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/427-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/427-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Boolean, obj)" {  
-"16335" [label = <(METHOD,GET_PRIMITIVE_FIELD(Boolean, obj))> ]
-"16339" [label = <(METHOD_RETURN,ANY)> ]
-  "16335" -> "16339" 
+"16332" [label = <(METHOD,GET_PRIMITIVE_FIELD(Boolean, obj))> ]
+"16336" [label = <(METHOD_RETURN,ANY)> ]
+  "16332" -> "16336" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/428-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/428-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/428-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/428-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Byte, obj)" {  
-"16340" [label = <(METHOD,GET_PRIMITIVE_FIELD(Byte, obj))> ]
-"16344" [label = <(METHOD_RETURN,ANY)> ]
-  "16340" -> "16344" 
+"16337" [label = <(METHOD,GET_PRIMITIVE_FIELD(Byte, obj))> ]
+"16341" [label = <(METHOD_RETURN,ANY)> ]
+  "16337" -> "16341" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/429-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/429-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/429-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/429-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Char, obj)" {  
-"16345" [label = <(METHOD,GET_PRIMITIVE_FIELD(Char, obj))> ]
-"16349" [label = <(METHOD_RETURN,ANY)> ]
-  "16345" -> "16349" 
+"16342" [label = <(METHOD,GET_PRIMITIVE_FIELD(Char, obj))> ]
+"16346" [label = <(METHOD_RETURN,ANY)> ]
+  "16342" -> "16346" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/43-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/43-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/43-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/43-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,23 +1,23 @@
 digraph "ExceptionOccurred" {  
-"1950" [label = <(soa,soa(env))<SUB>723</SUB>> ]
-"1952" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; exception = soa.Self()-&gt;GetException())<SUB>724</SUB>> ]
-"1967" [label = <(RETURN,return soa.AddLocalReference&lt;jthrowable&gt;(exception);,return soa.AddLocalReference&lt;jthrowable&gt;(exception);)<SUB>725</SUB>> ]
-"1953" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; exception)<SUB>724</SUB>> ]
-"1960" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>724</SUB>> ]
-"1968" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(exception))<SUB>725</SUB>> ]
-"1954" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>724</SUB>> ]
-"1961" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>724</SUB>> ]
-"1969" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>725</SUB>> ]
-"1956" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>724</SUB>> ]
-"1962" [label = <(Self,soa.Self())<SUB>724</SUB>> ]
-"1966" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>724</SUB>> ]
-"1970" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>725</SUB>> ]
-"1958" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>724</SUB>> ]
-"1963" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>724</SUB>> ]
-"1972" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>725</SUB>> ]
-"1965" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>724</SUB>> ]
-"1946" [label = <(METHOD,ExceptionOccurred)<SUB>722</SUB>> ]
-"1975" [label = <(METHOD_RETURN,jthrowable)<SUB>722</SUB>> ]
+"1950" [label = <(soa,soa(env))<SUB>722</SUB>> ]
+"1952" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; exception = soa.Self()-&gt;GetException())<SUB>723</SUB>> ]
+"1967" [label = <(RETURN,return soa.AddLocalReference&lt;jthrowable&gt;(exception);,return soa.AddLocalReference&lt;jthrowable&gt;(exception);)<SUB>724</SUB>> ]
+"1953" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; exception)<SUB>723</SUB>> ]
+"1960" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>723</SUB>> ]
+"1968" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(exception))<SUB>724</SUB>> ]
+"1954" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>723</SUB>> ]
+"1961" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>723</SUB>> ]
+"1969" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>724</SUB>> ]
+"1956" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>723</SUB>> ]
+"1962" [label = <(Self,soa.Self())<SUB>723</SUB>> ]
+"1966" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>723</SUB>> ]
+"1970" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>724</SUB>> ]
+"1958" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>723</SUB>> ]
+"1963" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>723</SUB>> ]
+"1972" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>724</SUB>> ]
+"1965" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>723</SUB>> ]
+"1946" [label = <(METHOD,ExceptionOccurred)<SUB>721</SUB>> ]
+"1975" [label = <(METHOD_RETURN,jthrowable)<SUB>721</SUB>> ]
   "1950" -> "1958" 
   "1952" -> "1972" 
   "1967" -> "1975" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/430-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/430-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/430-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/430-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Short, obj)" {  
-"16350" [label = <(METHOD,GET_PRIMITIVE_FIELD(Short, obj))> ]
-"16354" [label = <(METHOD_RETURN,ANY)> ]
-  "16350" -> "16354" 
+"16347" [label = <(METHOD,GET_PRIMITIVE_FIELD(Short, obj))> ]
+"16351" [label = <(METHOD_RETURN,ANY)> ]
+  "16347" -> "16351" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/431-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/431-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/431-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/431-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Int, obj)" {  
-"16355" [label = <(METHOD,GET_PRIMITIVE_FIELD(Int, obj))> ]
-"16359" [label = <(METHOD_RETURN,ANY)> ]
-  "16355" -> "16359" 
+"16352" [label = <(METHOD,GET_PRIMITIVE_FIELD(Int, obj))> ]
+"16356" [label = <(METHOD_RETURN,ANY)> ]
+  "16352" -> "16356" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/432-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/432-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/432-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/432-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Long, obj)" {  
-"16360" [label = <(METHOD,GET_PRIMITIVE_FIELD(Long, obj))> ]
-"16364" [label = <(METHOD_RETURN,ANY)> ]
-  "16360" -> "16364" 
+"16357" [label = <(METHOD,GET_PRIMITIVE_FIELD(Long, obj))> ]
+"16361" [label = <(METHOD_RETURN,ANY)> ]
+  "16357" -> "16361" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/433-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/433-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/433-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/433-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Float, obj)" {  
-"16365" [label = <(METHOD,GET_PRIMITIVE_FIELD(Float, obj))> ]
-"16369" [label = <(METHOD_RETURN,ANY)> ]
-  "16365" -> "16369" 
+"16362" [label = <(METHOD,GET_PRIMITIVE_FIELD(Float, obj))> ]
+"16366" [label = <(METHOD_RETURN,ANY)> ]
+  "16362" -> "16366" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/434-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/434-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/434-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/434-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Double, obj)" {  
-"16370" [label = <(METHOD,GET_PRIMITIVE_FIELD(Double, obj))> ]
-"16374" [label = <(METHOD_RETURN,ANY)> ]
-  "16370" -> "16374" 
+"16367" [label = <(METHOD,GET_PRIMITIVE_FIELD(Double, obj))> ]
+"16371" [label = <(METHOD_RETURN,ANY)> ]
+  "16367" -> "16371" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/435-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/435-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/435-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/435-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD" {  
-"16375" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD)<SUB>1503</SUB>> ]
-"16377" [label = <(METHOD_RETURN,ANY)> ]
-  "16375" -> "16377" 
+"16372" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD)<SUB>1502</SUB>> ]
+"16374" [label = <(METHOD_RETURN,ANY)> ]
+  "16372" -> "16374" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/436-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/436-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/436-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/436-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Boolean)" {  
-"16378" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Boolean))> ]
-"16381" [label = <(METHOD_RETURN,ANY)> ]
-  "16378" -> "16381" 
+"16375" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Boolean))> ]
+"16378" [label = <(METHOD_RETURN,ANY)> ]
+  "16375" -> "16378" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/437-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/437-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/437-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/437-cfg.dot	2023-06-07 19:35:48.217382770 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Byte)" {  
-"16382" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Byte))> ]
-"16385" [label = <(METHOD_RETURN,ANY)> ]
-  "16382" -> "16385" 
+"16379" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Byte))> ]
+"16382" [label = <(METHOD_RETURN,ANY)> ]
+  "16379" -> "16382" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/438-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/438-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/438-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/438-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Char)" {  
-"16386" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Char))> ]
-"16389" [label = <(METHOD_RETURN,ANY)> ]
-  "16386" -> "16389" 
+"16383" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Char))> ]
+"16386" [label = <(METHOD_RETURN,ANY)> ]
+  "16383" -> "16386" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/439-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/439-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/439-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/439-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Short)" {  
-"16390" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Short))> ]
-"16393" [label = <(METHOD_RETURN,ANY)> ]
-  "16390" -> "16393" 
+"16387" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Short))> ]
+"16390" [label = <(METHOD_RETURN,ANY)> ]
+  "16387" -> "16390" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/44-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/44-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/44-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/44-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,9 +1,9 @@
 digraph "FatalError" {  
-"1981" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot; &lt;&lt; msg)<SUB>729</SUB>> ]
-"1982" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot;)<SUB>729</SUB>> ]
-"1983" [label = <(LOG,LOG(FATAL))<SUB>729</SUB>> ]
-"1977" [label = <(METHOD,FatalError)<SUB>728</SUB>> ]
-"1987" [label = <(METHOD_RETURN,void)<SUB>728</SUB>> ]
+"1981" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot; &lt;&lt; msg)<SUB>728</SUB>> ]
+"1982" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot;)<SUB>728</SUB>> ]
+"1983" [label = <(LOG,LOG(FATAL))<SUB>728</SUB>> ]
+"1977" [label = <(METHOD,FatalError)<SUB>727</SUB>> ]
+"1987" [label = <(METHOD_RETURN,void)<SUB>727</SUB>> ]
   "1981" -> "1987" 
   "1982" -> "1981" 
   "1983" -> "1982" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/440-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/440-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/440-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/440-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Int)" {  
-"16394" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Int))> ]
-"16397" [label = <(METHOD_RETURN,ANY)> ]
-  "16394" -> "16397" 
+"16391" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Int))> ]
+"16394" [label = <(METHOD_RETURN,ANY)> ]
+  "16391" -> "16394" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/441-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/441-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/441-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/441-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Long)" {  
-"16398" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Long))> ]
-"16401" [label = <(METHOD_RETURN,ANY)> ]
-  "16398" -> "16401" 
+"16395" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Long))> ]
+"16398" [label = <(METHOD_RETURN,ANY)> ]
+  "16395" -> "16398" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/442-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/442-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/442-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/442-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Float)" {  
-"16402" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Float))> ]
-"16405" [label = <(METHOD_RETURN,ANY)> ]
-  "16402" -> "16405" 
+"16399" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Float))> ]
+"16402" [label = <(METHOD_RETURN,ANY)> ]
+  "16399" -> "16402" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/443-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/443-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/443-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/443-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Double)" {  
-"16406" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Double))> ]
-"16409" [label = <(METHOD_RETURN,ANY)> ]
-  "16406" -> "16409" 
+"16403" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Double))> ]
+"16406" [label = <(METHOD_RETURN,ANY)> ]
+  "16403" -> "16406" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/444-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/444-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/444-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/444-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD" {  
-"16410" [label = <(METHOD,SET_PRIMITIVE_FIELD)<SUB>1510</SUB>> ]
-"16413" [label = <(METHOD_RETURN,ANY)> ]
-  "16410" -> "16413" 
+"16407" [label = <(METHOD,SET_PRIMITIVE_FIELD)<SUB>1509</SUB>> ]
+"16410" [label = <(METHOD_RETURN,ANY)> ]
+  "16407" -> "16410" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/445-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/445-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/445-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/445-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Boolean, obj, v)" {  
-"16414" [label = <(METHOD,SET_PRIMITIVE_FIELD(Boolean, obj, v))> ]
-"16418" [label = <(METHOD_RETURN,ANY)> ]
-  "16414" -> "16418" 
+"16411" [label = <(METHOD,SET_PRIMITIVE_FIELD(Boolean, obj, v))> ]
+"16415" [label = <(METHOD_RETURN,ANY)> ]
+  "16411" -> "16415" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/446-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/446-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/446-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/446-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Byte, obj, v)" {  
-"16419" [label = <(METHOD,SET_PRIMITIVE_FIELD(Byte, obj, v))> ]
-"16423" [label = <(METHOD_RETURN,ANY)> ]
-  "16419" -> "16423" 
+"16416" [label = <(METHOD,SET_PRIMITIVE_FIELD(Byte, obj, v))> ]
+"16420" [label = <(METHOD_RETURN,ANY)> ]
+  "16416" -> "16420" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/447-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/447-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/447-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/447-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Char, obj, v)" {  
-"16424" [label = <(METHOD,SET_PRIMITIVE_FIELD(Char, obj, v))> ]
-"16428" [label = <(METHOD_RETURN,ANY)> ]
-  "16424" -> "16428" 
+"16421" [label = <(METHOD,SET_PRIMITIVE_FIELD(Char, obj, v))> ]
+"16425" [label = <(METHOD_RETURN,ANY)> ]
+  "16421" -> "16425" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/448-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/448-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/448-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/448-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Float, obj, v)" {  
-"16429" [label = <(METHOD,SET_PRIMITIVE_FIELD(Float, obj, v))> ]
-"16433" [label = <(METHOD_RETURN,ANY)> ]
-  "16429" -> "16433" 
+"16426" [label = <(METHOD,SET_PRIMITIVE_FIELD(Float, obj, v))> ]
+"16430" [label = <(METHOD_RETURN,ANY)> ]
+  "16426" -> "16430" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/449-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/449-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/449-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/449-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Double, obj, v)" {  
-"16434" [label = <(METHOD,SET_PRIMITIVE_FIELD(Double, obj, v))> ]
-"16438" [label = <(METHOD_RETURN,ANY)> ]
-  "16434" -> "16438" 
+"16431" [label = <(METHOD,SET_PRIMITIVE_FIELD(Double, obj, v))> ]
+"16435" [label = <(METHOD_RETURN,ANY)> ]
+  "16431" -> "16435" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/45-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/45-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/45-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/45-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,15 +1,15 @@
 digraph "PushLocalFrame" {  
-"1994" [label = <(soa,soa(env))<SUB>734</SUB>> ]
-"2006" [label = <(PushFrame,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame(capacity))<SUB>738</SUB>> ]
-"2012" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>739</SUB>> ]
-"1997" [label = <(&lt;operator&gt;.notEquals,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;) != JNI_OK)<SUB>735</SUB>> ]
-"2007" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame)<SUB>738</SUB>> ]
-"1998" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;))<SUB>735</SUB>> ]
-"2004" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>736</SUB>> ]
-"2008" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>738</SUB>> ]
-"2010" [label = <(FIELD_IDENTIFIER,PushFrame,PushFrame)<SUB>738</SUB>> ]
-"1989" [label = <(METHOD,PushLocalFrame)<SUB>732</SUB>> ]
-"2014" [label = <(METHOD_RETURN,jint)<SUB>732</SUB>> ]
+"1994" [label = <(soa,soa(env))<SUB>733</SUB>> ]
+"2006" [label = <(PushFrame,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame(capacity))<SUB>737</SUB>> ]
+"2012" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>738</SUB>> ]
+"1997" [label = <(&lt;operator&gt;.notEquals,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;) != JNI_OK)<SUB>734</SUB>> ]
+"2007" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame)<SUB>737</SUB>> ]
+"1998" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;))<SUB>734</SUB>> ]
+"2004" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>735</SUB>> ]
+"2008" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>737</SUB>> ]
+"2010" [label = <(FIELD_IDENTIFIER,PushFrame,PushFrame)<SUB>737</SUB>> ]
+"1989" [label = <(METHOD,PushLocalFrame)<SUB>731</SUB>> ]
+"2014" [label = <(METHOD_RETURN,jint)<SUB>731</SUB>> ]
   "1994" -> "1998" 
   "2006" -> "2012" 
   "2012" -> "2014" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/450-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/450-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/450-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/450-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Int, obj, v)" {  
-"16439" [label = <(METHOD,SET_PRIMITIVE_FIELD(Int, obj, v))> ]
-"16443" [label = <(METHOD_RETURN,ANY)> ]
-  "16439" -> "16443" 
+"16436" [label = <(METHOD,SET_PRIMITIVE_FIELD(Int, obj, v))> ]
+"16440" [label = <(METHOD_RETURN,ANY)> ]
+  "16436" -> "16440" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/451-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/451-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/451-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/451-cfg.dot	2023-06-07 19:35:48.227382768 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Long, obj, v)" {  
-"16444" [label = <(METHOD,SET_PRIMITIVE_FIELD(Long, obj, v))> ]
-"16448" [label = <(METHOD_RETURN,ANY)> ]
-  "16444" -> "16448" 
+"16441" [label = <(METHOD,SET_PRIMITIVE_FIELD(Long, obj, v))> ]
+"16445" [label = <(METHOD_RETURN,ANY)> ]
+  "16441" -> "16445" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/452-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/452-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/452-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/452-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Short, obj, v)" {  
-"16449" [label = <(METHOD,SET_PRIMITIVE_FIELD(Short, obj, v))> ]
-"16453" [label = <(METHOD_RETURN,ANY)> ]
-  "16449" -> "16453" 
+"16446" [label = <(METHOD,SET_PRIMITIVE_FIELD(Short, obj, v))> ]
+"16450" [label = <(METHOD_RETURN,ANY)> ]
+  "16446" -> "16450" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/453-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/453-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/453-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/453-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD" {  
-"16454" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD)<SUB>1519</SUB>> ]
-"16456" [label = <(METHOD_RETURN,ANY)> ]
-  "16454" -> "16456" 
+"16451" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD)<SUB>1518</SUB>> ]
+"16453" [label = <(METHOD_RETURN,ANY)> ]
+  "16451" -> "16453" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/454-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/454-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/454-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/454-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Boolean, v)" {  
-"16457" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))> ]
-"16460" [label = <(METHOD_RETURN,ANY)> ]
-  "16457" -> "16460" 
+"16454" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))> ]
+"16457" [label = <(METHOD_RETURN,ANY)> ]
+  "16454" -> "16457" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/455-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/455-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/455-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/455-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Byte, v)" {  
-"16461" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))> ]
-"16464" [label = <(METHOD_RETURN,ANY)> ]
-  "16461" -> "16464" 
+"16458" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))> ]
+"16461" [label = <(METHOD_RETURN,ANY)> ]
+  "16458" -> "16461" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/456-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/456-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/456-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/456-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Char, v)" {  
-"16465" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Char, v))> ]
-"16468" [label = <(METHOD_RETURN,ANY)> ]
-  "16465" -> "16468" 
+"16462" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Char, v))> ]
+"16465" [label = <(METHOD_RETURN,ANY)> ]
+  "16462" -> "16465" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/457-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/457-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/457-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/457-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Float, v)" {  
-"16469" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Float, v))> ]
-"16472" [label = <(METHOD_RETURN,ANY)> ]
-  "16469" -> "16472" 
+"16466" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Float, v))> ]
+"16469" [label = <(METHOD_RETURN,ANY)> ]
+  "16466" -> "16469" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/458-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/458-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/458-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/458-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Double, v)" {  
-"16473" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Double, v))> ]
-"16476" [label = <(METHOD_RETURN,ANY)> ]
-  "16473" -> "16476" 
+"16470" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Double, v))> ]
+"16473" [label = <(METHOD_RETURN,ANY)> ]
+  "16470" -> "16473" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/459-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/459-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/459-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/459-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Int, v)" {  
-"16477" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Int, v))> ]
-"16480" [label = <(METHOD_RETURN,ANY)> ]
-  "16477" -> "16480" 
+"16474" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Int, v))> ]
+"16477" [label = <(METHOD_RETURN,ANY)> ]
+  "16474" -> "16477" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/46-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/46-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/46-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/46-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,29 +1,29 @@
 digraph "PopLocalFrame" {  
-"2021" [label = <(soa,soa(env))<SUB>743</SUB>> ]
-"2023" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; survivor = soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>744</SUB>> ]
-"2040" [label = <(PopFrame,soa.Env()-&gt;PopFrame())<SUB>745</SUB>> ]
-"2047" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(survivor);,return soa.AddLocalReference&lt;jobject&gt;(survivor);)<SUB>746</SUB>> ]
-"2024" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; survivor)<SUB>744</SUB>> ]
-"2031" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>744</SUB>> ]
-"2041" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Env()-&gt;PopFrame)<SUB>745</SUB>> ]
-"2048" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(survivor))<SUB>746</SUB>> ]
-"2025" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>744</SUB>> ]
-"2032" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>744</SUB>> ]
-"2042" [label = <(Env,soa.Env())<SUB>745</SUB>> ]
-"2046" [label = <(FIELD_IDENTIFIER,PopFrame,PopFrame)<SUB>745</SUB>> ]
-"2049" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>746</SUB>> ]
-"2027" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>744</SUB>> ]
-"2033" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>744</SUB>> ]
-"2036" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>744</SUB>> ]
-"2043" [label = <(&lt;operator&gt;.fieldAccess,soa.Env)<SUB>745</SUB>> ]
-"2050" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>746</SUB>> ]
-"2029" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>744</SUB>> ]
-"2035" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>744</SUB>> ]
-"2038" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>744</SUB>> ]
-"2045" [label = <(FIELD_IDENTIFIER,Env,Env)<SUB>745</SUB>> ]
-"2052" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>746</SUB>> ]
-"2016" [label = <(METHOD,PopLocalFrame)<SUB>742</SUB>> ]
-"2055" [label = <(METHOD_RETURN,jobject)<SUB>742</SUB>> ]
+"2021" [label = <(soa,soa(env))<SUB>742</SUB>> ]
+"2023" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; survivor = soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>743</SUB>> ]
+"2040" [label = <(PopFrame,soa.Env()-&gt;PopFrame())<SUB>744</SUB>> ]
+"2047" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(survivor);,return soa.AddLocalReference&lt;jobject&gt;(survivor);)<SUB>745</SUB>> ]
+"2024" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; survivor)<SUB>743</SUB>> ]
+"2031" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>743</SUB>> ]
+"2041" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Env()-&gt;PopFrame)<SUB>744</SUB>> ]
+"2048" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(survivor))<SUB>745</SUB>> ]
+"2025" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>743</SUB>> ]
+"2032" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>743</SUB>> ]
+"2042" [label = <(Env,soa.Env())<SUB>744</SUB>> ]
+"2046" [label = <(FIELD_IDENTIFIER,PopFrame,PopFrame)<SUB>744</SUB>> ]
+"2049" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>745</SUB>> ]
+"2027" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>743</SUB>> ]
+"2033" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>743</SUB>> ]
+"2036" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>743</SUB>> ]
+"2043" [label = <(&lt;operator&gt;.fieldAccess,soa.Env)<SUB>744</SUB>> ]
+"2050" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>745</SUB>> ]
+"2029" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>743</SUB>> ]
+"2035" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>743</SUB>> ]
+"2038" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>743</SUB>> ]
+"2045" [label = <(FIELD_IDENTIFIER,Env,Env)<SUB>744</SUB>> ]
+"2052" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>745</SUB>> ]
+"2016" [label = <(METHOD,PopLocalFrame)<SUB>741</SUB>> ]
+"2055" [label = <(METHOD_RETURN,jobject)<SUB>741</SUB>> ]
   "2021" -> "2029" 
   "2023" -> "2045" 
   "2040" -> "2052" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/460-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/460-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/460-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/460-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Long, v)" {  
-"16481" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Long, v))> ]
-"16484" [label = <(METHOD_RETURN,ANY)> ]
-  "16481" -> "16484" 
+"16478" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Long, v))> ]
+"16481" [label = <(METHOD_RETURN,ANY)> ]
+  "16478" -> "16481" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/461-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/461-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/461-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/461-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Short, v)" {  
-"16485" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Short, v))> ]
-"16488" [label = <(METHOD_RETURN,ANY)> ]
-  "16485" -> "16488" 
+"16482" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Short, v))> ]
+"16485" [label = <(METHOD_RETURN,ANY)> ]
+  "16482" -> "16485" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/462-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/462-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/462-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/462-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "JniAbortF" {  
-"16489" [label = <(METHOD,JniAbortF)> ]
-"16495" [label = <(METHOD_RETURN,ANY)> ]
-  "16489" -> "16495" 
+"16486" [label = <(METHOD,JniAbortF)> ]
+"16492" [label = <(METHOD_RETURN,ANY)> ]
+  "16486" -> "16492" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/463-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/463-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/463-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/463-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::String::AllocFromUtf16" {  
-"16496" [label = <(METHOD,mirror::String::AllocFromUtf16)> ]
-"16502" [label = <(METHOD_RETURN,ANY)> ]
-  "16496" -> "16502" 
+"16493" [label = <(METHOD,mirror::String::AllocFromUtf16)> ]
+"16499" [label = <(METHOD_RETURN,ANY)> ]
+  "16493" -> "16499" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/464-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/464-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/464-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/464-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "::max" {  
-"16503" [label = <(METHOD,::max)> ]
-"16506" [label = <(METHOD_RETURN,ANY)> ]
-  "16503" -> "16506" 
+"16500" [label = <(METHOD,::max)> ]
+"16503" [label = <(METHOD_RETURN,ANY)> ]
+  "16500" -> "16503" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/465-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/465-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/465-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/465-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "android::base::StringPrintf" {  
-"16507" [label = <(METHOD,android::base::StringPrintf)> ]
-"16512" [label = <(METHOD_RETURN,ANY)> ]
-  "16507" -> "16512" 
+"16504" [label = <(METHOD,android::base::StringPrintf)> ]
+"16509" [label = <(METHOD_RETURN,ANY)> ]
+  "16504" -> "16509" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/466-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/466-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/466-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/466-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowOutOfMemoryError" {  
-"16513" [label = <(METHOD,ThrowOutOfMemoryError)> ]
-"16517" [label = <(METHOD_RETURN,ANY)> ]
-  "16513" -> "16517" 
+"16510" [label = <(METHOD,ThrowOutOfMemoryError)> ]
+"16514" [label = <(METHOD_RETURN,ANY)> ]
+  "16510" -> "16514" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/467-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/467-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/467-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/467-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "android_errorWriteLog" {  
-"16518" [label = <(METHOD,android_errorWriteLog)> ]
-"16522" [label = <(METHOD_RETURN,ANY)> ]
-  "16518" -> "16522" 
+digraph "UINT64_C" {  
+"16515" [label = <(METHOD,UINT64_C)> ]
+"16518" [label = <(METHOD_RETURN,ANY)> ]
+  "16515" -> "16518" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/468-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/468-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/468-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/468-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "UINT64_C" {  
-"16523" [label = <(METHOD,UINT64_C)> ]
-"16526" [label = <(METHOD_RETURN,ANY)> ]
-  "16523" -> "16526" 
+digraph "prev_bad_input_time" {  
+"16519" [label = <(METHOD,prev_bad_input_time)> ]
+"16522" [label = <(METHOD_RETURN,ANY)> ]
+  "16519" -> "16522" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/469-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/469-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/469-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/469-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "prev_bad_input_time" {  
-"16527" [label = <(METHOD,prev_bad_input_time)> ]
-"16530" [label = <(METHOD_RETURN,ANY)> ]
-  "16527" -> "16530" 
+digraph "load" {  
+"16523" [label = <(METHOD,load)> ]
+"16527" [label = <(METHOD_RETURN,ANY)> ]
+  "16523" -> "16527" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/47-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/47-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/47-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/47-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,9 +1,9 @@
 digraph "EnsureLocalCapacity" {  
-"2062" [label = <(soa,soa(env))<SUB>751</SUB>> ]
-"2064" [label = <(RETURN,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);)<SUB>752</SUB>> ]
-"2065" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;))<SUB>752</SUB>> ]
-"2057" [label = <(METHOD,EnsureLocalCapacity)<SUB>749</SUB>> ]
-"2069" [label = <(METHOD_RETURN,jint)<SUB>749</SUB>> ]
+"2062" [label = <(soa,soa(env))<SUB>750</SUB>> ]
+"2064" [label = <(RETURN,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);)<SUB>751</SUB>> ]
+"2065" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;))<SUB>751</SUB>> ]
+"2057" [label = <(METHOD,EnsureLocalCapacity)<SUB>748</SUB>> ]
+"2069" [label = <(METHOD_RETURN,jint)<SUB>748</SUB>> ]
   "2062" -> "2065" 
   "2064" -> "2069" 
   "2065" -> "2064" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/470-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/470-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/470-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/470-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "load" {  
-"16531" [label = <(METHOD,load)> ]
-"16535" [label = <(METHOD_RETURN,ANY)> ]
-  "16531" -> "16535" 
+digraph "NanoTime" {  
+"16528" [label = <(METHOD,NanoTime)> ]
+"16530" [label = <(METHOD_RETURN,ANY)> ]
+  "16528" -> "16530" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/471-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/471-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/471-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/471-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "NanoTime" {  
-"16536" [label = <(METHOD,NanoTime)> ]
-"16538" [label = <(METHOD_RETURN,ANY)> ]
-  "16536" -> "16538" 
+digraph "&lt;operator&gt;.greaterEqualsThan" {  
+"16531" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
+"16535" [label = <(METHOD_RETURN,ANY)> ]
+  "16531" -> "16535" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/472-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/472-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/472-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/472-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.greaterEqualsThan" {  
-"16539" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
-"16543" [label = <(METHOD_RETURN,ANY)> ]
-  "16539" -> "16543" 
+digraph "compare_exchange_strong" {  
+"16536" [label = <(METHOD,compare_exchange_strong)> ]
+"16542" [label = <(METHOD_RETURN,ANY)> ]
+  "16536" -> "16542" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/473-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/473-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/473-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/473-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "compare_exchange_strong" {  
-"16544" [label = <(METHOD,compare_exchange_strong)> ]
-"16550" [label = <(METHOD_RETURN,ANY)> ]
-  "16544" -> "16550" 
+digraph "emplace" {  
+"16543" [label = <(METHOD,emplace)> ]
+"16546" [label = <(METHOD_RETURN,ANY)> ]
+  "16543" -> "16546" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/474-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/474-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/474-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/474-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "emplace" {  
-"16551" [label = <(METHOD,emplace)> ]
-"16554" [label = <(METHOD_RETURN,ANY)> ]
-  "16551" -> "16554" 
+digraph "reserve" {  
+"16547" [label = <(METHOD,reserve)> ]
+"16551" [label = <(METHOD_RETURN,ANY)> ]
+  "16547" -> "16551" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/475-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/475-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/475-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/475-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "reserve" {  
-"16555" [label = <(METHOD,reserve)> ]
-"16559" [label = <(METHOD_RETURN,ANY)> ]
-  "16555" -> "16559" 
+digraph "VisitModifiedUtf8Chars" {  
+"16552" [label = <(METHOD,VisitModifiedUtf8Chars)> ]
+"16558" [label = <(METHOD_RETURN,ANY)> ]
+  "16552" -> "16558" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/476-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/476-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/476-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/476-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "VisitModifiedUtf8Chars" {  
-"16560" [label = <(METHOD,VisitModifiedUtf8Chars)> ]
-"16566" [label = <(METHOD_RETURN,ANY)> ]
-  "16560" -> "16566" 
+digraph "length" {  
+"16559" [label = <(METHOD,length)> ]
+"16562" [label = <(METHOD_RETURN,ANY)> ]
+  "16559" -> "16562" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/477-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/477-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/477-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/477-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "length" {  
-"16567" [label = <(METHOD,length)> ]
+digraph "mirror::String::AllocFromModifiedUtf8" {  
+"16563" [label = <(METHOD,mirror::String::AllocFromModifiedUtf8)> ]
 "16570" [label = <(METHOD_RETURN,ANY)> ]
-  "16567" -> "16570" 
+  "16563" -> "16570" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/478-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/478-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/478-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/478-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::String::AllocFromModifiedUtf8" {  
-"16571" [label = <(METHOD,mirror::String::AllocFromModifiedUtf8)> ]
-"16578" [label = <(METHOD_RETURN,ANY)> ]
-  "16571" -> "16578" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string)" {  
+"16571" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))> ]
+"16576" [label = <(METHOD_RETURN,ANY)> ]
+  "16571" -> "16576" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/479-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/479-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/479-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/479-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string)" {  
-"16579" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))> ]
-"16584" [label = <(METHOD_RETURN,ANY)> ]
-  "16579" -> "16584" 
+digraph "GetLength" {  
+"16577" [label = <(METHOD,GetLength)> ]
+"16580" [label = <(METHOD_RETURN,ANY)> ]
+  "16577" -> "16580" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/48-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/48-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/48-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/48-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,28 +1,28 @@
 digraph "NewGlobalRef" {  
-"2076" [label = <(soa,soa(env))<SUB>756</SUB>> ]
-"2078" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>757</SUB>> ]
-"2095" [label = <(RETURN,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);)<SUB>758</SUB>> ]
-"2079" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>757</SUB>> ]
-"2086" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>757</SUB>> ]
-"2096" [label = <(AddGlobalRef,soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj))<SUB>758</SUB>> ]
-"2080" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>757</SUB>> ]
-"2087" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>757</SUB>> ]
-"2097" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddGlobalRef)<SUB>758</SUB>> ]
-"2103" [label = <(Self,soa.Self())<SUB>758</SUB>> ]
-"2082" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>757</SUB>> ]
-"2088" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>757</SUB>> ]
-"2091" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>757</SUB>> ]
-"2098" [label = <(Vm,soa.Vm())<SUB>758</SUB>> ]
-"2102" [label = <(FIELD_IDENTIFIER,AddGlobalRef,AddGlobalRef)<SUB>758</SUB>> ]
-"2104" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>758</SUB>> ]
-"2084" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>757</SUB>> ]
-"2090" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>757</SUB>> ]
-"2093" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>757</SUB>> ]
-"2099" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>758</SUB>> ]
-"2106" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>758</SUB>> ]
-"2101" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>758</SUB>> ]
-"2071" [label = <(METHOD,NewGlobalRef)<SUB>755</SUB>> ]
-"2108" [label = <(METHOD_RETURN,jobject)<SUB>755</SUB>> ]
+"2076" [label = <(soa,soa(env))<SUB>755</SUB>> ]
+"2078" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>756</SUB>> ]
+"2095" [label = <(RETURN,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);)<SUB>757</SUB>> ]
+"2079" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>756</SUB>> ]
+"2086" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>756</SUB>> ]
+"2096" [label = <(AddGlobalRef,soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj))<SUB>757</SUB>> ]
+"2080" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>756</SUB>> ]
+"2087" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>756</SUB>> ]
+"2097" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddGlobalRef)<SUB>757</SUB>> ]
+"2103" [label = <(Self,soa.Self())<SUB>757</SUB>> ]
+"2082" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>756</SUB>> ]
+"2088" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>756</SUB>> ]
+"2091" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>756</SUB>> ]
+"2098" [label = <(Vm,soa.Vm())<SUB>757</SUB>> ]
+"2102" [label = <(FIELD_IDENTIFIER,AddGlobalRef,AddGlobalRef)<SUB>757</SUB>> ]
+"2104" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>757</SUB>> ]
+"2084" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>756</SUB>> ]
+"2090" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>756</SUB>> ]
+"2093" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>756</SUB>> ]
+"2099" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>757</SUB>> ]
+"2106" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>757</SUB>> ]
+"2101" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>757</SUB>> ]
+"2071" [label = <(METHOD,NewGlobalRef)<SUB>754</SUB>> ]
+"2108" [label = <(METHOD_RETURN,jobject)<SUB>754</SUB>> ]
   "2076" -> "2084" 
   "2078" -> "2101" 
   "2095" -> "2108" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/480-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/480-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/480-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/480-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetLength" {  
-"16585" [label = <(METHOD,GetLength)> ]
-"16588" [label = <(METHOD_RETURN,ANY)> ]
-  "16585" -> "16588" 
+digraph "GetUtfLength" {  
+"16581" [label = <(METHOD,GetUtfLength)> ]
+"16584" [label = <(METHOD_RETURN,ANY)> ]
+  "16581" -> "16584" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/481-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/481-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/481-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/481-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetUtfLength" {  
-"16589" [label = <(METHOD,GetUtfLength)> ]
-"16592" [label = <(METHOD_RETURN,ANY)> ]
-  "16589" -> "16592" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string)" {  
+"16585" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))> ]
+"16590" [label = <(METHOD_RETURN,ANY)> ]
+  "16585" -> "16590" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/482-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/482-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/482-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/482-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string)" {  
-"16593" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))> ]
-"16598" [label = <(METHOD_RETURN,ANY)> ]
-  "16593" -> "16598" 
+digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT" {  
+"16591" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT)<SUB>539</SUB>> ]
+"16595" [label = <(METHOD_RETURN,ANY)> ]
+  "16591" -> "16595" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/483-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/483-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/483-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/483-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT" {  
-"16599" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT)<SUB>540</SUB>> ]
-"16603" [label = <(METHOD_RETURN,ANY)> ]
-  "16599" -> "16603" 
+digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf)" {  
+"16596" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))> ]
+"16601" [label = <(METHOD_RETURN,ANY)> ]
+  "16596" -> "16601" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/484-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/484-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/484-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/484-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf)" {  
-"16604" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))> ]
-"16609" [label = <(METHOD_RETURN,ANY)> ]
-  "16604" -> "16609" 
+digraph "IsCompressed" {  
+"16602" [label = <(METHOD,IsCompressed)> ]
+"16605" [label = <(METHOD_RETURN,ANY)> ]
+  "16602" -> "16605" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/485-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/485-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/485-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/485-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "IsCompressed" {  
-"16610" [label = <(METHOD,IsCompressed)> ]
-"16613" [label = <(METHOD_RETURN,ANY)> ]
-  "16610" -> "16613" 
+digraph "&lt;operator&gt;.preIncrement" {  
+"16606" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
+"16609" [label = <(METHOD_RETURN,ANY)> ]
+  "16606" -> "16609" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/486-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/486-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/486-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/486-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.preIncrement" {  
-"16614" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
-"16617" [label = <(METHOD_RETURN,ANY)> ]
-  "16614" -> "16617" 
+digraph "CharAt" {  
+"16610" [label = <(METHOD,CharAt)> ]
+"16614" [label = <(METHOD_RETURN,ANY)> ]
+  "16610" -> "16614" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/487-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/487-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/487-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/487-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CharAt" {  
-"16618" [label = <(METHOD,CharAt)> ]
-"16622" [label = <(METHOD_RETURN,ANY)> ]
-  "16618" -> "16622" 
+digraph "GetValue" {  
+"16615" [label = <(METHOD,GetValue)> ]
+"16618" [label = <(METHOD_RETURN,ANY)> ]
+  "16615" -> "16618" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/488-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/488-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/488-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/488-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetValue" {  
-"16623" [label = <(METHOD,GetValue)> ]
-"16626" [label = <(METHOD_RETURN,ANY)> ]
-  "16623" -> "16626" 
+digraph "memcpy" {  
+"16619" [label = <(METHOD,memcpy)> ]
+"16624" [label = <(METHOD_RETURN,ANY)> ]
+  "16619" -> "16624" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/489-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/489-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/489-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/489-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "memcpy" {  
-"16627" [label = <(METHOD,memcpy)> ]
-"16632" [label = <(METHOD_RETURN,ANY)> ]
-  "16627" -> "16632" 
+digraph "&lt;operator&gt;.multiplication" {  
+"16625" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
+"16629" [label = <(METHOD_RETURN,ANY)> ]
+  "16625" -> "16629" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/49-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/49-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/49-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/49-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,18 +1,18 @@
 digraph "DeleteGlobalRef" {  
-"2115" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>762</SUB>> ]
-"2123" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>763</SUB>> ]
-"2129" [label = <(DeleteGlobalRef,vm-&gt;DeleteGlobalRef(self, obj))<SUB>764</SUB>> ]
-"2117" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>762</SUB>> ]
-"2125" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>763</SUB>> ]
-"2130" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteGlobalRef)<SUB>764</SUB>> ]
-"2118" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>762</SUB>> ]
-"2126" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>763</SUB>> ]
-"2128" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>763</SUB>> ]
-"2132" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>764</SUB>> ]
-"2119" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>762</SUB>> ]
-"2121" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>762</SUB>> ]
-"2110" [label = <(METHOD,DeleteGlobalRef)<SUB>761</SUB>> ]
-"2135" [label = <(METHOD_RETURN,void)<SUB>761</SUB>> ]
+"2115" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>761</SUB>> ]
+"2123" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>762</SUB>> ]
+"2129" [label = <(DeleteGlobalRef,vm-&gt;DeleteGlobalRef(self, obj))<SUB>763</SUB>> ]
+"2117" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>761</SUB>> ]
+"2125" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>762</SUB>> ]
+"2130" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteGlobalRef)<SUB>763</SUB>> ]
+"2118" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>761</SUB>> ]
+"2126" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>762</SUB>> ]
+"2128" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>762</SUB>> ]
+"2132" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>763</SUB>> ]
+"2119" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>761</SUB>> ]
+"2121" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>761</SUB>> ]
+"2110" [label = <(METHOD,DeleteGlobalRef)<SUB>760</SUB>> ]
+"2135" [label = <(METHOD_RETURN,void)<SUB>760</SUB>> ]
   "2115" -> "2126" 
   "2123" -> "2132" 
   "2129" -> "2135" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/490-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/490-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/490-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/490-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.multiplication" {  
-"16633" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
-"16637" [label = <(METHOD_RETURN,ANY)> ]
-  "16633" -> "16637" 
+digraph "&lt;operator&gt;.sizeOf" {  
+"16630" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
+"16633" [label = <(METHOD_RETURN,ANY)> ]
+  "16630" -> "16633" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/491-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/491-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/491-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/491-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.sizeOf" {  
-"16638" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
-"16641" [label = <(METHOD_RETURN,ANY)> ]
-  "16638" -> "16641" 
+digraph "CountUtf8Bytes" {  
+"16634" [label = <(METHOD,CountUtf8Bytes)> ]
+"16638" [label = <(METHOD_RETURN,ANY)> ]
+  "16634" -> "16638" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/492-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/492-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/492-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/492-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CountUtf8Bytes" {  
-"16642" [label = <(METHOD,CountUtf8Bytes)> ]
-"16646" [label = <(METHOD_RETURN,ANY)> ]
-  "16642" -> "16646" 
+digraph "ConvertUtf16ToModifiedUtf8" {  
+"16639" [label = <(METHOD,ConvertUtf16ToModifiedUtf8)> ]
+"16645" [label = <(METHOD_RETURN,ANY)> ]
+  "16639" -> "16645" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/493-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/493-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/493-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/493-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "ConvertUtf16ToModifiedUtf8" {  
-"16647" [label = <(METHOD,ConvertUtf16ToModifiedUtf8)> ]
-"16653" [label = <(METHOD_RETURN,ANY)> ]
-  "16647" -> "16653" 
+digraph "CHECK_NON_NULL_ARGUMENT(java_string)" {  
+"16646" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_string))> ]
+"16651" [label = <(METHOD_RETURN,ANY)> ]
+  "16646" -> "16651" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/494-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/494-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/494-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/494-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(java_string)" {  
-"16654" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_string))> ]
-"16659" [label = <(METHOD_RETURN,ANY)> ]
-  "16654" -> "16659" 
+digraph "IsMovableObject" {  
+"16652" [label = <(METHOD,IsMovableObject)> ]
+"16656" [label = <(METHOD_RETURN,ANY)> ]
+  "16652" -> "16656" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/495-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/495-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/495-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/495-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "IsMovableObject" {  
-"16660" [label = <(METHOD,IsMovableObject)> ]
-"16664" [label = <(METHOD_RETURN,ANY)> ]
-  "16660" -> "16664" 
+digraph "&lt;operator&gt;.new" {  
+"16657" [label = <(METHOD,&lt;operator&gt;.new)> ]
+"16660" [label = <(METHOD_RETURN,ANY)> ]
+  "16657" -> "16660" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/496-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/496-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/496-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/496-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.new" {  
-"16665" [label = <(METHOD,&lt;operator&gt;.new)> ]
-"16668" [label = <(METHOD_RETURN,ANY)> ]
-  "16665" -> "16668" 
+digraph "&lt;operator&gt;.delete" {  
+"16661" [label = <(METHOD,&lt;operator&gt;.delete)> ]
+"16664" [label = <(METHOD_RETURN,ANY)> ]
+  "16661" -> "16664" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/497-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/497-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/497-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/497-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.delete" {  
-"16669" [label = <(METHOD,&lt;operator&gt;.delete)> ]
-"16672" [label = <(METHOD_RETURN,ANY)> ]
-  "16669" -> "16672" 
+digraph "h" {  
+"16665" [label = <(METHOD,h)> ]
+"16668" [label = <(METHOD_RETURN,ANY)> ]
+  "16665" -> "16668" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/498-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/498-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/498-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/498-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "h" {  
-"16673" [label = <(METHOD,h)> ]
-"16676" [label = <(METHOD_RETURN,ANY)> ]
-  "16673" -> "16676" 
+digraph "NewHandleWrapper" {  
+"16669" [label = <(METHOD,NewHandleWrapper)> ]
+"16673" [label = <(METHOD_RETURN,ANY)> ]
+  "16669" -> "16673" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/499-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/499-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/499-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/499-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "NewHandleWrapper" {  
-"16677" [label = <(METHOD,NewHandleWrapper)> ]
-"16681" [label = <(METHOD_RETURN,ANY)> ]
-  "16677" -> "16681" 
+digraph "IncrementDisableMovingGC" {  
+"16674" [label = <(METHOD,IncrementDisableMovingGC)> ]
+"16678" [label = <(METHOD_RETURN,ANY)> ]
+  "16674" -> "16678" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/5-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/5-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/5-cfg.dot	2023-06-07 19:35:41.337383234 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/5-cfg.dot	2023-06-07 19:35:47.777382805 +0330
@@ -1,5 +1,5 @@
 digraph "ScopedVAArgs" {  
-"30" [label = <(METHOD,ScopedVAArgs)<SUB>76</SUB>> ]
-"33" [label = <(METHOD_RETURN,ANY)<SUB>76</SUB>> ]
+"30" [label = <(METHOD,ScopedVAArgs)<SUB>75</SUB>> ]
+"33" [label = <(METHOD_RETURN,ANY)<SUB>75</SUB>> ]
   "30" -> "33" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/50-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/50-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/50-cfg.dot	2023-06-07 19:35:41.387383232 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/50-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,28 +1,28 @@
 digraph "NewWeakGlobalRef" {  
-"2142" [label = <(soa,soa(env))<SUB>768</SUB>> ]
-"2144" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>769</SUB>> ]
-"2161" [label = <(RETURN,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);)<SUB>770</SUB>> ]
-"2145" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>769</SUB>> ]
-"2152" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>769</SUB>> ]
-"2162" [label = <(AddWeakGlobalRef,soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj))<SUB>770</SUB>> ]
-"2146" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>769</SUB>> ]
-"2153" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>769</SUB>> ]
-"2163" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddWeakGlobalRef)<SUB>770</SUB>> ]
-"2169" [label = <(Self,soa.Self())<SUB>770</SUB>> ]
-"2148" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>769</SUB>> ]
-"2154" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>769</SUB>> ]
-"2157" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>769</SUB>> ]
-"2164" [label = <(Vm,soa.Vm())<SUB>770</SUB>> ]
-"2168" [label = <(FIELD_IDENTIFIER,AddWeakGlobalRef,AddWeakGlobalRef)<SUB>770</SUB>> ]
-"2170" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>770</SUB>> ]
-"2150" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>769</SUB>> ]
-"2156" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>769</SUB>> ]
-"2159" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>769</SUB>> ]
-"2165" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>770</SUB>> ]
-"2172" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>770</SUB>> ]
-"2167" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>770</SUB>> ]
-"2137" [label = <(METHOD,NewWeakGlobalRef)<SUB>767</SUB>> ]
-"2174" [label = <(METHOD_RETURN,jweak)<SUB>767</SUB>> ]
+"2142" [label = <(soa,soa(env))<SUB>767</SUB>> ]
+"2144" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>768</SUB>> ]
+"2161" [label = <(RETURN,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);)<SUB>769</SUB>> ]
+"2145" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>768</SUB>> ]
+"2152" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>768</SUB>> ]
+"2162" [label = <(AddWeakGlobalRef,soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj))<SUB>769</SUB>> ]
+"2146" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>768</SUB>> ]
+"2153" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>768</SUB>> ]
+"2163" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddWeakGlobalRef)<SUB>769</SUB>> ]
+"2169" [label = <(Self,soa.Self())<SUB>769</SUB>> ]
+"2148" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>768</SUB>> ]
+"2154" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>768</SUB>> ]
+"2157" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>768</SUB>> ]
+"2164" [label = <(Vm,soa.Vm())<SUB>769</SUB>> ]
+"2168" [label = <(FIELD_IDENTIFIER,AddWeakGlobalRef,AddWeakGlobalRef)<SUB>769</SUB>> ]
+"2170" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>769</SUB>> ]
+"2150" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>768</SUB>> ]
+"2156" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>768</SUB>> ]
+"2159" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>768</SUB>> ]
+"2165" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>769</SUB>> ]
+"2172" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>769</SUB>> ]
+"2167" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>769</SUB>> ]
+"2137" [label = <(METHOD,NewWeakGlobalRef)<SUB>766</SUB>> ]
+"2174" [label = <(METHOD_RETURN,jweak)<SUB>766</SUB>> ]
   "2142" -> "2150" 
   "2144" -> "2167" 
   "2161" -> "2174" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/500-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/500-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/500-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/500-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "IncrementDisableMovingGC" {  
-"16682" [label = <(METHOD,IncrementDisableMovingGC)> ]
-"16686" [label = <(METHOD_RETURN,ANY)> ]
-  "16682" -> "16686" 
+digraph "IncrementDisableThreadFlip" {  
+"16679" [label = <(METHOD,IncrementDisableThreadFlip)> ]
+"16683" [label = <(METHOD_RETURN,ANY)> ]
+  "16679" -> "16683" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/501-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/501-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/501-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/501-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "IncrementDisableThreadFlip" {  
-"16687" [label = <(METHOD,IncrementDisableThreadFlip)> ]
-"16691" [label = <(METHOD_RETURN,ANY)> ]
-  "16687" -> "16691" 
+digraph "DecrementDisableMovingGC" {  
+"16684" [label = <(METHOD,DecrementDisableMovingGC)> ]
+"16688" [label = <(METHOD_RETURN,ANY)> ]
+  "16684" -> "16688" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/502-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/502-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/502-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/502-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "DecrementDisableMovingGC" {  
-"16692" [label = <(METHOD,DecrementDisableMovingGC)> ]
-"16696" [label = <(METHOD_RETURN,ANY)> ]
-  "16692" -> "16696" 
+digraph "DecrementDisableThreadFlip" {  
+"16689" [label = <(METHOD,DecrementDisableThreadFlip)> ]
+"16693" [label = <(METHOD_RETURN,ANY)> ]
+  "16689" -> "16693" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/503-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/503-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/503-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/503-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "DecrementDisableThreadFlip" {  
-"16697" [label = <(METHOD,DecrementDisableThreadFlip)> ]
-"16701" [label = <(METHOD_RETURN,ANY)> ]
-  "16697" -> "16701" 
+digraph "CHECK" {  
+"16694" [label = <(METHOD,CHECK)> ]
+"16697" [label = <(METHOD_RETURN,ANY)> ]
+  "16694" -> "16697" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/504-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/504-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/504-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/504-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK" {  
-"16702" [label = <(METHOD,CHECK)> ]
-"16705" [label = <(METHOD_RETURN,ANY)> ]
-  "16702" -> "16705" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array)" {  
+"16698" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))> ]
+"16703" [label = <(METHOD_RETURN,ANY)> ]
+  "16698" -> "16703" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/505-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/505-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/505-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/505-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array)" {  
-"16706" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))> ]
-"16711" [label = <(METHOD_RETURN,ANY)> ]
-  "16706" -> "16711" 
+digraph "IsArrayInstance" {  
+"16704" [label = <(METHOD,IsArrayInstance)> ]
+"16707" [label = <(METHOD_RETURN,ANY)> ]
+  "16704" -> "16707" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/506-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/506-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/506-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/506-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "IsArrayInstance" {  
-"16712" [label = <(METHOD,IsArrayInstance)> ]
-"16715" [label = <(METHOD_RETURN,ANY)> ]
-  "16712" -> "16715" 
+digraph "PrettyTypeOf" {  
+"16708" [label = <(METHOD,PrettyTypeOf)> ]
+"16711" [label = <(METHOD_RETURN,ANY)> ]
+  "16708" -> "16711" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/507-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/507-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/507-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/507-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyTypeOf" {  
-"16716" [label = <(METHOD,PrettyTypeOf)> ]
-"16719" [label = <(METHOD_RETURN,ANY)> ]
-  "16716" -> "16719" 
+digraph "AsArray" {  
+"16712" [label = <(METHOD,AsArray)> ]
+"16715" [label = <(METHOD_RETURN,ANY)> ]
+  "16712" -> "16715" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/508-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/508-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/508-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/508-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "AsArray" {  
-"16720" [label = <(METHOD,AsArray)> ]
-"16723" [label = <(METHOD_RETURN,ANY)> ]
-  "16720" -> "16723" 
+digraph "CHECK_NON_NULL_ARGUMENT(java_array)" {  
+"16716" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_array))> ]
+"16721" [label = <(METHOD_RETURN,ANY)> ]
+  "16716" -> "16721" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/509-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/509-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/509-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/509-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(java_array)" {  
-"16724" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_array))> ]
-"16729" [label = <(METHOD_RETURN,ANY)> ]
-  "16724" -> "16729" 
+digraph "&lt;operator&gt;.arithmeticShiftRight" {  
+"16722" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
+"16726" [label = <(METHOD_RETURN,ANY)> ]
+  "16722" -> "16726" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/51-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/51-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/51-cfg.dot	2023-06-07 19:35:41.397383230 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/51-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,18 +1,18 @@
 digraph "DeleteWeakGlobalRef" {  
-"2181" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>774</SUB>> ]
-"2189" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>775</SUB>> ]
-"2195" [label = <(DeleteWeakGlobalRef,vm-&gt;DeleteWeakGlobalRef(self, obj))<SUB>776</SUB>> ]
-"2183" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>774</SUB>> ]
-"2191" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>775</SUB>> ]
-"2196" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteWeakGlobalRef)<SUB>776</SUB>> ]
-"2184" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>774</SUB>> ]
-"2192" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>775</SUB>> ]
-"2194" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>775</SUB>> ]
-"2198" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>776</SUB>> ]
-"2185" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>774</SUB>> ]
-"2187" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>774</SUB>> ]
-"2176" [label = <(METHOD,DeleteWeakGlobalRef)<SUB>773</SUB>> ]
-"2201" [label = <(METHOD_RETURN,void)<SUB>773</SUB>> ]
+"2181" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>773</SUB>> ]
+"2189" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>774</SUB>> ]
+"2195" [label = <(DeleteWeakGlobalRef,vm-&gt;DeleteWeakGlobalRef(self, obj))<SUB>775</SUB>> ]
+"2183" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>773</SUB>> ]
+"2191" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>774</SUB>> ]
+"2196" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteWeakGlobalRef)<SUB>775</SUB>> ]
+"2184" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>773</SUB>> ]
+"2192" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>774</SUB>> ]
+"2194" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>774</SUB>> ]
+"2198" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>775</SUB>> ]
+"2185" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>773</SUB>> ]
+"2187" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>773</SUB>> ]
+"2176" [label = <(METHOD,DeleteWeakGlobalRef)<SUB>772</SUB>> ]
+"2201" [label = <(METHOD_RETURN,void)<SUB>772</SUB>> ]
   "2181" -> "2192" 
   "2189" -> "2198" 
   "2195" -> "2201" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/510-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/510-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/510-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/510-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.arithmeticShiftRight" {  
-"16730" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
-"16734" [label = <(METHOD_RETURN,ANY)> ]
-  "16730" -> "16734" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array)" {  
+"16727" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))> ]
+"16732" [label = <(METHOD_RETURN,ANY)> ]
+  "16727" -> "16732" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/511-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/511-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/511-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/511-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array)" {  
-"16735" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))> ]
-"16740" [label = <(METHOD_RETURN,ANY)> ]
-  "16735" -> "16740" 
+digraph "NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;" {  
+"16733" [label = <(METHOD,NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;)> ]
+"16737" [label = <(METHOD_RETURN,ANY)> ]
+  "16733" -> "16737" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/512-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/512-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/512-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/512-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;" {  
-"16741" [label = <(METHOD,NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;)> ]
-"16745" [label = <(METHOD_RETURN,ANY)> ]
-  "16741" -> "16745" 
+digraph "NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;" {  
+"16738" [label = <(METHOD,NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;)> ]
+"16742" [label = <(METHOD_RETURN,ANY)> ]
+  "16738" -> "16742" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/513-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/513-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/513-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/513-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;" {  
-"16746" [label = <(METHOD,NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;)> ]
-"16750" [label = <(METHOD_RETURN,ANY)> ]
-  "16746" -> "16750" 
+digraph "NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;" {  
+"16743" [label = <(METHOD,NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;)> ]
+"16747" [label = <(METHOD_RETURN,ANY)> ]
+  "16743" -> "16747" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/514-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/514-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/514-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/514-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;" {  
-"16751" [label = <(METHOD,NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;)> ]
-"16755" [label = <(METHOD_RETURN,ANY)> ]
-  "16751" -> "16755" 
+digraph "NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;" {  
+"16748" [label = <(METHOD,NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;)> ]
+"16752" [label = <(METHOD_RETURN,ANY)> ]
+  "16748" -> "16752" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/515-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/515-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/515-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/515-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;" {  
-"16756" [label = <(METHOD,NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;)> ]
-"16760" [label = <(METHOD_RETURN,ANY)> ]
-  "16756" -> "16760" 
+digraph "NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;" {  
+"16753" [label = <(METHOD,NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;)> ]
+"16757" [label = <(METHOD_RETURN,ANY)> ]
+  "16753" -> "16757" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/516-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/516-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/516-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/516-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;" {  
-"16761" [label = <(METHOD,NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;)> ]
-"16765" [label = <(METHOD_RETURN,ANY)> ]
-  "16761" -> "16765" 
+digraph "NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;" {  
+"16758" [label = <(METHOD,NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;)> ]
+"16762" [label = <(METHOD_RETURN,ANY)> ]
+  "16758" -> "16762" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/517-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/517-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/517-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/517-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;" {  
-"16766" [label = <(METHOD,NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;)> ]
-"16770" [label = <(METHOD_RETURN,ANY)> ]
-  "16766" -> "16770" 
+digraph "NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;" {  
+"16763" [label = <(METHOD,NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;)> ]
+"16767" [label = <(METHOD_RETURN,ANY)> ]
+  "16763" -> "16767" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/518-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/518-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/518-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/518-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;" {  
-"16771" [label = <(METHOD,NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;)> ]
-"16775" [label = <(METHOD_RETURN,ANY)> ]
-  "16771" -> "16775" 
+digraph "CHECK_NON_NULL_ARGUMENT(element_jclass)" {  
+"16768" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(element_jclass))> ]
+"16773" [label = <(METHOD_RETURN,ANY)> ]
+  "16768" -> "16773" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/519-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/519-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/519-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/519-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(element_jclass)" {  
-"16776" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(element_jclass))> ]
-"16781" [label = <(METHOD_RETURN,ANY)> ]
-  "16776" -> "16781" 
+digraph "IsPrimitive" {  
+"16774" [label = <(METHOD,IsPrimitive)> ]
+"16777" [label = <(METHOD_RETURN,ANY)> ]
+  "16774" -> "16777" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/52-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/52-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/52-cfg.dot	2023-06-07 19:35:41.397383230 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/52-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,25 +1,25 @@
 digraph "NewLocalRef" {  
-"2208" [label = <(soa,soa(env))<SUB>780</SUB>> ]
-"2210" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>781</SUB>> ]
-"2234" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);)<SUB>786</SUB>> ]
-"2211" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>781</SUB>> ]
-"2218" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>781</SUB>> ]
-"2228" [label = <(&lt;operator&gt;.equals,decoded_obj == nullptr)<SUB>783</SUB>> ]
-"2235" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(decoded_obj))<SUB>786</SUB>> ]
-"2212" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>781</SUB>> ]
-"2219" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>781</SUB>> ]
-"2232" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>784</SUB>> ]
-"2236" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>786</SUB>> ]
-"2214" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>781</SUB>> ]
-"2220" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>781</SUB>> ]
-"2223" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>781</SUB>> ]
-"2237" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>786</SUB>> ]
-"2216" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>781</SUB>> ]
-"2222" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>781</SUB>> ]
-"2225" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>781</SUB>> ]
-"2239" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>786</SUB>> ]
-"2203" [label = <(METHOD,NewLocalRef)<SUB>779</SUB>> ]
-"2242" [label = <(METHOD_RETURN,jobject)<SUB>779</SUB>> ]
+"2208" [label = <(soa,soa(env))<SUB>779</SUB>> ]
+"2210" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>780</SUB>> ]
+"2234" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);)<SUB>785</SUB>> ]
+"2211" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>780</SUB>> ]
+"2218" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>780</SUB>> ]
+"2228" [label = <(&lt;operator&gt;.equals,decoded_obj == nullptr)<SUB>782</SUB>> ]
+"2235" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(decoded_obj))<SUB>785</SUB>> ]
+"2212" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>780</SUB>> ]
+"2219" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>780</SUB>> ]
+"2232" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>783</SUB>> ]
+"2236" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>785</SUB>> ]
+"2214" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>780</SUB>> ]
+"2220" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>780</SUB>> ]
+"2223" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>780</SUB>> ]
+"2237" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>785</SUB>> ]
+"2216" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>780</SUB>> ]
+"2222" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>780</SUB>> ]
+"2225" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>780</SUB>> ]
+"2239" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>785</SUB>> ]
+"2203" [label = <(METHOD,NewLocalRef)<SUB>778</SUB>> ]
+"2242" [label = <(METHOD_RETURN,jobject)<SUB>778</SUB>> ]
   "2208" -> "2216" 
   "2210" -> "2228" 
   "2234" -> "2242" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/520-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/520-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/520-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/520-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "IsPrimitive" {  
-"16782" [label = <(METHOD,IsPrimitive)> ]
-"16785" [label = <(METHOD_RETURN,ANY)> ]
-  "16782" -> "16785" 
+digraph "PrettyDescriptor" {  
+"16778" [label = <(METHOD,PrettyDescriptor)> ]
+"16781" [label = <(METHOD_RETURN,ANY)> ]
+  "16778" -> "16781" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/521-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/521-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/521-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/521-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyDescriptor" {  
-"16786" [label = <(METHOD,PrettyDescriptor)> ]
-"16789" [label = <(METHOD_RETURN,ANY)> ]
-  "16786" -> "16789" 
+digraph "FindArrayClass" {  
+"16782" [label = <(METHOD,FindArrayClass)> ]
+"16787" [label = <(METHOD_RETURN,ANY)> ]
+  "16782" -> "16787" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/522-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/522-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/522-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/522-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "FindArrayClass" {  
-"16790" [label = <(METHOD,FindArrayClass)> ]
-"16795" [label = <(METHOD_RETURN,ANY)> ]
-  "16790" -> "16795" 
+digraph "::Alloc" {  
+"16788" [label = <(METHOD,::Alloc)> ]
+"16794" [label = <(METHOD_RETURN,ANY)> ]
+  "16788" -> "16794" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/523-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/523-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/523-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/523-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "::Alloc" {  
-"16796" [label = <(METHOD,::Alloc)> ]
-"16802" [label = <(METHOD_RETURN,ANY)> ]
-  "16796" -> "16802" 
+digraph "GetComponentType" {  
+"16795" [label = <(METHOD,GetComponentType)> ]
+"16798" [label = <(METHOD_RETURN,ANY)> ]
+  "16795" -> "16798" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/524-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/524-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/524-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/524-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetComponentType" {  
-"16803" [label = <(METHOD,GetComponentType)> ]
-"16806" [label = <(METHOD_RETURN,ANY)> ]
-  "16803" -> "16806" 
+digraph "mirror::Class::PrettyDescriptor" {  
+"16799" [label = <(METHOD,mirror::Class::PrettyDescriptor)> ]
+"16803" [label = <(METHOD_RETURN,ANY)> ]
+  "16799" -> "16803" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/525-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/525-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/525-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/525-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::Class::PrettyDescriptor" {  
-"16807" [label = <(METHOD,mirror::Class::PrettyDescriptor)> ]
-"16811" [label = <(METHOD_RETURN,ANY)> ]
-  "16807" -> "16811" 
+digraph "NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;" {  
+"16804" [label = <(METHOD,NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;)> ]
+"16808" [label = <(METHOD_RETURN,ANY)> ]
+  "16804" -> "16808" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/526-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/526-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/526-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/526-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;" {  
-"16812" [label = <(METHOD,NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;)> ]
-"16816" [label = <(METHOD_RETURN,ANY)> ]
-  "16812" -> "16816" 
+digraph "IsPrimitiveArray" {  
+"16809" [label = <(METHOD,IsPrimitiveArray)> ]
+"16812" [label = <(METHOD_RETURN,ANY)> ]
+  "16809" -> "16812" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/527-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/527-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/527-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/527-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "IsPrimitiveArray" {  
-"16817" [label = <(METHOD,IsPrimitiveArray)> ]
-"16820" [label = <(METHOD_RETURN,ANY)> ]
-  "16817" -> "16820" 
+digraph "GetRawData" {  
+"16813" [label = <(METHOD,GetRawData)> ]
+"16818" [label = <(METHOD_RETURN,ANY)> ]
+  "16813" -> "16818" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/528-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/528-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/528-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/528-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetRawData" {  
-"16821" [label = <(METHOD,GetRawData)> ]
-"16826" [label = <(METHOD_RETURN,ANY)> ]
-  "16821" -> "16826" 
+digraph "GetComponentSize" {  
+"16819" [label = <(METHOD,GetComponentSize)> ]
+"16822" [label = <(METHOD_RETURN,ANY)> ]
+  "16819" -> "16822" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/529-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/529-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/529-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/529-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetComponentSize" {  
-"16827" [label = <(METHOD,GetComponentSize)> ]
-"16830" [label = <(METHOD_RETURN,ANY)> ]
-  "16827" -> "16830" 
+digraph "GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16823" [label = <(METHOD,GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+"16828" [label = <(METHOD_RETURN,ANY)> ]
+  "16823" -> "16828" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/53-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/53-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/53-cfg.dot	2023-06-07 19:35:41.397383230 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/53-cfg.dot	2023-06-07 19:35:47.827382801 +0330
@@ -1,24 +1,24 @@
 digraph "DeleteLocalRef" {  
-"2255" [label = <(soa,soa(env))<SUB>796</SUB>> ]
-"2258" [label = <(&lt;operator&gt;.assignment,* ext_env = down_cast&lt;JNIEnvExt*&gt;(env))<SUB>797</SUB>> ]
-"2249" [label = <(&lt;operator&gt;.equals,obj == nullptr)<SUB>790</SUB>> ]
-"2260" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>797</SUB>> ]
-"2263" [label = <(&lt;operator&gt;.logicalNot,!ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>798</SUB>> ]
-"2253" [label = <(RETURN,return;,return;)<SUB>791</SUB>> ]
-"2264" [label = <(Remove,ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>798</SUB>> ]
-"2275" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;\012 &lt;&lt; &quot;failed to find entry&quot;)<SUB>804</SUB>> ]
-"2265" [label = <(&lt;operator&gt;.fieldAccess,ext_env-&gt;locals_.Remove)<SUB>798</SUB>> ]
-"2270" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;local_ref_cookie_)<SUB>798</SUB>> ]
-"2276" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;)<SUB>804</SUB>> ]
-"2266" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;locals_)<SUB>798</SUB>> ]
-"2269" [label = <(FIELD_IDENTIFIER,Remove,Remove)<SUB>798</SUB>> ]
-"2272" [label = <(FIELD_IDENTIFIER,local_ref_cookie_,local_ref_cookie_)<SUB>798</SUB>> ]
-"2277" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj)<SUB>804</SUB>> ]
-"2268" [label = <(FIELD_IDENTIFIER,locals_,locals_)<SUB>798</SUB>> ]
-"2278" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot;)<SUB>804</SUB>> ]
-"2279" [label = <(LOG,LOG(WARNING))<SUB>804</SUB>> ]
-"2244" [label = <(METHOD,DeleteLocalRef)<SUB>789</SUB>> ]
-"2285" [label = <(METHOD_RETURN,void)<SUB>789</SUB>> ]
+"2255" [label = <(soa,soa(env))<SUB>795</SUB>> ]
+"2258" [label = <(&lt;operator&gt;.assignment,* ext_env = down_cast&lt;JNIEnvExt*&gt;(env))<SUB>796</SUB>> ]
+"2249" [label = <(&lt;operator&gt;.equals,obj == nullptr)<SUB>789</SUB>> ]
+"2260" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>796</SUB>> ]
+"2263" [label = <(&lt;operator&gt;.logicalNot,!ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>797</SUB>> ]
+"2253" [label = <(RETURN,return;,return;)<SUB>790</SUB>> ]
+"2264" [label = <(Remove,ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>797</SUB>> ]
+"2275" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;\012 &lt;&lt; &quot;failed to find entry&quot;)<SUB>803</SUB>> ]
+"2265" [label = <(&lt;operator&gt;.fieldAccess,ext_env-&gt;locals_.Remove)<SUB>797</SUB>> ]
+"2270" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;local_ref_cookie_)<SUB>797</SUB>> ]
+"2276" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;)<SUB>803</SUB>> ]
+"2266" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;locals_)<SUB>797</SUB>> ]
+"2269" [label = <(FIELD_IDENTIFIER,Remove,Remove)<SUB>797</SUB>> ]
+"2272" [label = <(FIELD_IDENTIFIER,local_ref_cookie_,local_ref_cookie_)<SUB>797</SUB>> ]
+"2277" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj)<SUB>803</SUB>> ]
+"2268" [label = <(FIELD_IDENTIFIER,locals_,locals_)<SUB>797</SUB>> ]
+"2278" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot;)<SUB>803</SUB>> ]
+"2279" [label = <(LOG,LOG(WARNING))<SUB>803</SUB>> ]
+"2244" [label = <(METHOD,DeleteLocalRef)<SUB>788</SUB>> ]
+"2285" [label = <(METHOD_RETURN,void)<SUB>788</SUB>> ]
   "2255" -> "2260" 
   "2258" -> "2268" 
   "2249" -> "2253" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/530-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/530-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/530-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/530-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16831" [label = <(METHOD,GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
-"16836" [label = <(METHOD_RETURN,ANY)> ]
-  "16831" -> "16836" 
+digraph "GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16829" [label = <(METHOD,GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+"16834" [label = <(METHOD_RETURN,ANY)> ]
+  "16829" -> "16834" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/531-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/531-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/531-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/531-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16837" [label = <(METHOD,GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
-"16842" [label = <(METHOD_RETURN,ANY)> ]
-  "16837" -> "16842" 
+digraph "GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16835" [label = <(METHOD,GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+"16840" [label = <(METHOD_RETURN,ANY)> ]
+  "16835" -> "16840" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/532-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/532-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/532-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/532-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16843" [label = <(METHOD,GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
-"16848" [label = <(METHOD_RETURN,ANY)> ]
-  "16843" -> "16848" 
+digraph "GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16841" [label = <(METHOD,GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+"16846" [label = <(METHOD_RETURN,ANY)> ]
+  "16841" -> "16846" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/533-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/533-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/533-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/533-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16849" [label = <(METHOD,GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
-"16854" [label = <(METHOD_RETURN,ANY)> ]
-  "16849" -> "16854" 
+digraph "GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16847" [label = <(METHOD,GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+"16852" [label = <(METHOD_RETURN,ANY)> ]
+  "16847" -> "16852" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/534-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/534-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/534-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/534-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16855" [label = <(METHOD,GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
-"16860" [label = <(METHOD_RETURN,ANY)> ]
-  "16855" -> "16860" 
+digraph "GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16853" [label = <(METHOD,GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+"16858" [label = <(METHOD_RETURN,ANY)> ]
+  "16853" -> "16858" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/535-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/535-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/535-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/535-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16861" [label = <(METHOD,GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
-"16866" [label = <(METHOD_RETURN,ANY)> ]
-  "16861" -> "16866" 
+digraph "GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16859" [label = <(METHOD,GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+"16864" [label = <(METHOD_RETURN,ANY)> ]
+  "16859" -> "16864" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/536-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/536-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/536-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/536-cfg.dot	2023-06-07 19:35:48.237382766 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16867" [label = <(METHOD,GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
-"16872" [label = <(METHOD_RETURN,ANY)> ]
-  "16867" -> "16872" 
+digraph "GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16865" [label = <(METHOD,GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+"16870" [label = <(METHOD_RETURN,ANY)> ]
+  "16865" -> "16870" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/537-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/537-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/537-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/537-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16873" [label = <(METHOD,GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
-"16878" [label = <(METHOD_RETURN,ANY)> ]
-  "16873" -> "16878" 
+digraph "ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16871" [label = <(METHOD,ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+"16877" [label = <(METHOD_RETURN,ANY)> ]
+  "16871" -> "16877" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/538-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/538-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/538-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/538-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16879" [label = <(METHOD,ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
-"16885" [label = <(METHOD_RETURN,ANY)> ]
-  "16879" -> "16885" 
+digraph "ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16878" [label = <(METHOD,ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+"16884" [label = <(METHOD_RETURN,ANY)> ]
+  "16878" -> "16884" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/539-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/539-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/539-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/539-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16886" [label = <(METHOD,ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
-"16892" [label = <(METHOD_RETURN,ANY)> ]
-  "16886" -> "16892" 
+digraph "ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16885" [label = <(METHOD,ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+"16891" [label = <(METHOD_RETURN,ANY)> ]
+  "16885" -> "16891" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/54-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/54-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/54-cfg.dot	2023-06-07 19:35:41.397383230 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/54-cfg.dot	2023-06-07 19:35:47.837382799 +0330
@@ -1,24 +1,24 @@
 digraph "IsSameObject" {  
-"2293" [label = <(&lt;operator&gt;.equals,obj1 == obj2)<SUB>810</SUB>> ]
-"2297" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>811</SUB>> ]
-"2302" [label = <(soa,soa(env))<SUB>813</SUB>> ]
-"2304" [label = <(RETURN,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;)<SUB>814</SUB>> ]
-"2305" [label = <(&lt;operator&gt;.conditional,(soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE)<SUB>814</SUB>> ]
-"2306" [label = <(&lt;operator&gt;.equals,soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>814</SUB>> ]
-"2307" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj1))<SUB>814</SUB>> ]
-"2316" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>814</SUB>> ]
-"2308" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>814</SUB>> ]
-"2317" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>814</SUB>> ]
-"2309" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>814</SUB>> ]
-"2312" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>814</SUB>> ]
-"2318" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>814</SUB>> ]
-"2321" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>814</SUB>> ]
-"2311" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>814</SUB>> ]
-"2314" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>814</SUB>> ]
-"2320" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>814</SUB>> ]
-"2323" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>814</SUB>> ]
-"2287" [label = <(METHOD,IsSameObject)<SUB>809</SUB>> ]
-"2327" [label = <(METHOD_RETURN,jboolean)<SUB>809</SUB>> ]
+"2293" [label = <(&lt;operator&gt;.equals,obj1 == obj2)<SUB>809</SUB>> ]
+"2297" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>810</SUB>> ]
+"2302" [label = <(soa,soa(env))<SUB>812</SUB>> ]
+"2304" [label = <(RETURN,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;)<SUB>813</SUB>> ]
+"2305" [label = <(&lt;operator&gt;.conditional,(soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE)<SUB>813</SUB>> ]
+"2306" [label = <(&lt;operator&gt;.equals,soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>813</SUB>> ]
+"2307" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj1))<SUB>813</SUB>> ]
+"2316" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>813</SUB>> ]
+"2308" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>813</SUB>> ]
+"2317" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>813</SUB>> ]
+"2309" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>813</SUB>> ]
+"2312" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>813</SUB>> ]
+"2318" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>813</SUB>> ]
+"2321" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>813</SUB>> ]
+"2311" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>813</SUB>> ]
+"2314" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>813</SUB>> ]
+"2320" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>813</SUB>> ]
+"2323" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>813</SUB>> ]
+"2287" [label = <(METHOD,IsSameObject)<SUB>808</SUB>> ]
+"2327" [label = <(METHOD_RETURN,jboolean)<SUB>808</SUB>> ]
   "2293" -> "2297" 
   "2293" -> "2302" 
   "2297" -> "2327" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/540-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/540-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/540-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/540-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16893" [label = <(METHOD,ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
-"16899" [label = <(METHOD_RETURN,ANY)> ]
-  "16893" -> "16899" 
+digraph "ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16892" [label = <(METHOD,ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+"16898" [label = <(METHOD_RETURN,ANY)> ]
+  "16892" -> "16898" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/541-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/541-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/541-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/541-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16900" [label = <(METHOD,ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
-"16906" [label = <(METHOD_RETURN,ANY)> ]
-  "16900" -> "16906" 
+digraph "ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16899" [label = <(METHOD,ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+"16905" [label = <(METHOD_RETURN,ANY)> ]
+  "16899" -> "16905" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/542-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/542-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/542-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/542-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16907" [label = <(METHOD,ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
-"16913" [label = <(METHOD_RETURN,ANY)> ]
-  "16907" -> "16913" 
+digraph "ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16906" [label = <(METHOD,ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+"16912" [label = <(METHOD_RETURN,ANY)> ]
+  "16906" -> "16912" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/543-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/543-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/543-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/543-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16914" [label = <(METHOD,ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
-"16920" [label = <(METHOD_RETURN,ANY)> ]
-  "16914" -> "16920" 
+digraph "ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16913" [label = <(METHOD,ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+"16919" [label = <(METHOD_RETURN,ANY)> ]
+  "16913" -> "16919" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/544-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/544-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/544-cfg.dot	2023-06-07 19:35:41.637383215 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/544-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16921" [label = <(METHOD,ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
-"16927" [label = <(METHOD_RETURN,ANY)> ]
-  "16921" -> "16927" 
+digraph "ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16920" [label = <(METHOD,ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+"16926" [label = <(METHOD_RETURN,ANY)> ]
+  "16920" -> "16926" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/545-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/545-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/545-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/545-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16928" [label = <(METHOD,ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16927" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
 "16934" [label = <(METHOD_RETURN,ANY)> ]
-  "16928" -> "16934" 
+  "16927" -> "16934" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/546-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/546-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/546-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/546-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16935" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16935" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
 "16942" [label = <(METHOD_RETURN,ANY)> ]
   "16935" -> "16942" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/547-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/547-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/547-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/547-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16943" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16943" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
 "16950" [label = <(METHOD_RETURN,ANY)> ]
   "16943" -> "16950" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/548-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/548-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/548-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/548-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16951" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16951" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
 "16958" [label = <(METHOD_RETURN,ANY)> ]
   "16951" -> "16958" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/549-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/549-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/549-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/549-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16959" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16959" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
 "16966" [label = <(METHOD_RETURN,ANY)> ]
   "16959" -> "16966" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/55-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/55-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/55-cfg.dot	2023-06-07 19:35:41.397383230 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/55-cfg.dot	2023-06-07 19:35:47.837382799 +0330
@@ -1,68 +1,68 @@
 digraph "AllocObject" {  
-"2333" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>820</SUB>> ]
-"2352" [label = <(soa,soa(env))<SUB>821</SUB>> ]
-"2354" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>822</SUB>> ]
-"2420" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));)<SUB>831</SUB>> ]
-"2355" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>822</SUB>> ]
-"2362" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>822</SUB>> ]
-"2377" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>823</SUB>> ]
-"2384" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>826</SUB>> ]
-"2421" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self())))<SUB>831</SUB>> ]
-"2356" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>822</SUB>> ]
-"2363" [label = <(Self,soa.Self())<SUB>822</SUB>> ]
-"2367" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>822</SUB>> ]
-"2381" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>824</SUB>> ]
-"2385" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>826</SUB>> ]
-"2390" [label = <(&lt;operator&gt;.assignment,allocator_type = Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>827</SUB>> ]
-"2402" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(\012          mirror::String::AllocEmptyString(soa.Self(), allocator_type));,return soa.AddLocalReference&lt;jobject&gt;(\012          mirror::String::AllocEmptyString(soa.Self(), allocator_type));)<SUB>828</SUB>> ]
-"2422" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>831</SUB>> ]
-"2427" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>831</SUB>> ]
-"2337" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>820</SUB>> ]
-"2358" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>822</SUB>> ]
-"2364" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>822</SUB>> ]
-"2368" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>822</SUB>> ]
-"2387" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>826</SUB>> ]
-"2392" [label = <(GetCurrentAllocator,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>827</SUB>> ]
-"2403" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(\012          mirror::String::AllocEmptyString(soa.Self(), allocator_type)))<SUB>828</SUB>> ]
-"2423" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>831</SUB>> ]
-"2428" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>831</SUB>> ]
-"2431" [label = <(Self,soa.Self())<SUB>831</SUB>> ]
-"2338" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>820</SUB>> ]
-"2342" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>820</SUB>> ]
-"2349" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>820</SUB>> ]
-"2360" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>822</SUB>> ]
-"2366" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>822</SUB>> ]
-"2369" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>822</SUB>> ]
-"2372" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>822</SUB>> ]
-"2393" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator)<SUB>827</SUB>> ]
-"2404" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>828</SUB>> ]
-"2409" [label = <(mirror::String::AllocEmptyString,mirror::String::AllocEmptyString(soa.Self(), allocator_type))<SUB>829</SUB>> ]
-"2425" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>831</SUB>> ]
-"2430" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>831</SUB>> ]
-"2432" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>831</SUB>> ]
-"2343" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>820</SUB>> ]
-"2371" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>822</SUB>> ]
-"2374" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>822</SUB>> ]
-"2394" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>827</SUB>> ]
-"2401" [label = <(FIELD_IDENTIFIER,GetCurrentAllocator,GetCurrentAllocator)<SUB>827</SUB>> ]
-"2405" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>828</SUB>> ]
-"2410" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocEmptyString)<SUB>829</SUB>> ]
-"2415" [label = <(Self,soa.Self())<SUB>829</SUB>> ]
-"2434" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>831</SUB>> ]
-"2344" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>820</SUB>> ]
-"2346" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>820</SUB>> ]
-"2395" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>827</SUB>> ]
-"2407" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>828</SUB>> ]
-"2411" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>829</SUB>> ]
-"2414" [label = <(FIELD_IDENTIFIER,AllocEmptyString,AllocEmptyString)<SUB>829</SUB>> ]
-"2416" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>829</SUB>> ]
-"2396" [label = <(Runtime::Current,Runtime::Current())<SUB>827</SUB>> ]
-"2400" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>827</SUB>> ]
-"2418" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>829</SUB>> ]
-"2397" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>827</SUB>> ]
-"2399" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>827</SUB>> ]
-"2329" [label = <(METHOD,AllocObject)<SUB>819</SUB>> ]
-"2435" [label = <(METHOD_RETURN,jobject)<SUB>819</SUB>> ]
+"2333" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>819</SUB>> ]
+"2352" [label = <(soa,soa(env))<SUB>820</SUB>> ]
+"2354" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>821</SUB>> ]
+"2420" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));)<SUB>830</SUB>> ]
+"2355" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>821</SUB>> ]
+"2362" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>821</SUB>> ]
+"2377" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>822</SUB>> ]
+"2384" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>825</SUB>> ]
+"2421" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self())))<SUB>830</SUB>> ]
+"2356" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>821</SUB>> ]
+"2363" [label = <(Self,soa.Self())<SUB>821</SUB>> ]
+"2367" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>821</SUB>> ]
+"2381" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>823</SUB>> ]
+"2385" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>825</SUB>> ]
+"2390" [label = <(&lt;operator&gt;.assignment,allocator_type = Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>826</SUB>> ]
+"2402" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(\012          mirror::String::AllocEmptyString(soa.Self(), allocator_type));,return soa.AddLocalReference&lt;jobject&gt;(\012          mirror::String::AllocEmptyString(soa.Self(), allocator_type));)<SUB>827</SUB>> ]
+"2422" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>830</SUB>> ]
+"2427" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>830</SUB>> ]
+"2337" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>819</SUB>> ]
+"2358" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>821</SUB>> ]
+"2364" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>821</SUB>> ]
+"2368" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>821</SUB>> ]
+"2387" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>825</SUB>> ]
+"2392" [label = <(GetCurrentAllocator,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>826</SUB>> ]
+"2403" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(\012          mirror::String::AllocEmptyString(soa.Self(), allocator_type)))<SUB>827</SUB>> ]
+"2423" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>830</SUB>> ]
+"2428" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>830</SUB>> ]
+"2431" [label = <(Self,soa.Self())<SUB>830</SUB>> ]
+"2338" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>819</SUB>> ]
+"2342" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>819</SUB>> ]
+"2349" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>819</SUB>> ]
+"2360" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>821</SUB>> ]
+"2366" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>821</SUB>> ]
+"2369" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>821</SUB>> ]
+"2372" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>821</SUB>> ]
+"2393" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator)<SUB>826</SUB>> ]
+"2404" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>827</SUB>> ]
+"2409" [label = <(mirror::String::AllocEmptyString,mirror::String::AllocEmptyString(soa.Self(), allocator_type))<SUB>828</SUB>> ]
+"2425" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>830</SUB>> ]
+"2430" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>830</SUB>> ]
+"2432" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>830</SUB>> ]
+"2343" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>819</SUB>> ]
+"2371" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>821</SUB>> ]
+"2374" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>821</SUB>> ]
+"2394" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>826</SUB>> ]
+"2401" [label = <(FIELD_IDENTIFIER,GetCurrentAllocator,GetCurrentAllocator)<SUB>826</SUB>> ]
+"2405" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>827</SUB>> ]
+"2410" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocEmptyString)<SUB>828</SUB>> ]
+"2415" [label = <(Self,soa.Self())<SUB>828</SUB>> ]
+"2434" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>830</SUB>> ]
+"2344" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>819</SUB>> ]
+"2346" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>819</SUB>> ]
+"2395" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>826</SUB>> ]
+"2407" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>827</SUB>> ]
+"2411" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>828</SUB>> ]
+"2414" [label = <(FIELD_IDENTIFIER,AllocEmptyString,AllocEmptyString)<SUB>828</SUB>> ]
+"2416" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>828</SUB>> ]
+"2396" [label = <(Runtime::Current,Runtime::Current())<SUB>826</SUB>> ]
+"2400" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>826</SUB>> ]
+"2418" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>828</SUB>> ]
+"2397" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>826</SUB>> ]
+"2399" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>826</SUB>> ]
+"2329" [label = <(METHOD,AllocObject)<SUB>818</SUB>> ]
+"2435" [label = <(METHOD_RETURN,jobject)<SUB>818</SUB>> ]
   "2333" -> "2338" 
   "2333" -> "2352" 
   "2352" -> "2360" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/550-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/550-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/550-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/550-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16967" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16967" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
 "16974" [label = <(METHOD_RETURN,ANY)> ]
   "16967" -> "16974" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/551-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/551-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/551-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/551-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16975" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16975" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
 "16982" [label = <(METHOD_RETURN,ANY)> ]
   "16975" -> "16982" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/552-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/552-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/552-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/552-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16983" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16983" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
 "16990" [label = <(METHOD_RETURN,ANY)> ]
   "16983" -> "16990" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/553-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/553-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/553-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/553-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16991" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16991" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
 "16998" [label = <(METHOD_RETURN,ANY)> ]
   "16991" -> "16998" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/554-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/554-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/554-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/554-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16999" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16999" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
 "17006" [label = <(METHOD_RETURN,ANY)> ]
   "16999" -> "17006" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/555-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/555-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/555-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/555-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"17007" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"17007" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
 "17014" [label = <(METHOD_RETURN,ANY)> ]
   "17007" -> "17014" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/556-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/556-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/556-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/556-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"17015" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"17015" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
 "17022" [label = <(METHOD_RETURN,ANY)> ]
   "17015" -> "17022" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/557-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/557-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/557-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/557-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"17023" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"17023" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
 "17030" [label = <(METHOD_RETURN,ANY)> ]
   "17023" -> "17030" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/558-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/558-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/558-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/558-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"17031" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"17031" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
 "17038" [label = <(METHOD_RETURN,ANY)> ]
   "17031" -> "17038" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/559-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/559-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/559-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/559-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"17039" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"17039" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
 "17046" [label = <(METHOD_RETURN,ANY)> ]
   "17039" -> "17046" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/56-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/56-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/56-cfg.dot	2023-06-07 19:35:41.397383230 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/56-cfg.dot	2023-06-07 19:35:47.837382799 +0330
@@ -1,28 +1,28 @@
 digraph "NewObject" {  
-"2443" [label = <(va_start,va_start(args, mid))<SUB>836</SUB>> ]
-"2447" [label = <(free_args_later,free_args_later(&amp;args))<SUB>837</SUB>> ]
-"2450" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>838</SUB>> ]
-"2468" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>839</SUB>> ]
-"2487" [label = <(&lt;operator&gt;.assignment,result = NewObjectV(env, java_class, mid, args))<SUB>840</SUB>> ]
-"2494" [label = <(RETURN,return result;,return result;)<SUB>841</SUB>> ]
-"2448" [label = <(&lt;operator&gt;.addressOf,&amp;args)<SUB>837</SUB>> ]
-"2489" [label = <(NewObjectV,NewObjectV(env, java_class, mid, args))<SUB>840</SUB>> ]
-"2454" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>838</SUB>> ]
-"2472" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>839</SUB>> ]
-"2455" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>838</SUB>> ]
-"2459" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>838</SUB>> ]
-"2466" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>838</SUB>> ]
-"2473" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>839</SUB>> ]
-"2477" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>839</SUB>> ]
-"2484" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>839</SUB>> ]
-"2460" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>838</SUB>> ]
-"2478" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>839</SUB>> ]
-"2461" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>838</SUB>> ]
-"2463" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>838</SUB>> ]
-"2479" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>839</SUB>> ]
-"2481" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>839</SUB>> ]
-"2437" [label = <(METHOD,NewObject)<SUB>834</SUB>> ]
-"2496" [label = <(METHOD_RETURN,jobject)<SUB>834</SUB>> ]
+"2443" [label = <(va_start,va_start(args, mid))<SUB>835</SUB>> ]
+"2447" [label = <(free_args_later,free_args_later(&amp;args))<SUB>836</SUB>> ]
+"2450" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>837</SUB>> ]
+"2468" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>838</SUB>> ]
+"2487" [label = <(&lt;operator&gt;.assignment,result = NewObjectV(env, java_class, mid, args))<SUB>839</SUB>> ]
+"2494" [label = <(RETURN,return result;,return result;)<SUB>840</SUB>> ]
+"2448" [label = <(&lt;operator&gt;.addressOf,&amp;args)<SUB>836</SUB>> ]
+"2489" [label = <(NewObjectV,NewObjectV(env, java_class, mid, args))<SUB>839</SUB>> ]
+"2454" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>837</SUB>> ]
+"2472" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>838</SUB>> ]
+"2455" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>837</SUB>> ]
+"2459" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>837</SUB>> ]
+"2466" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>837</SUB>> ]
+"2473" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>838</SUB>> ]
+"2477" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>838</SUB>> ]
+"2484" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>838</SUB>> ]
+"2460" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>837</SUB>> ]
+"2478" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>838</SUB>> ]
+"2461" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>837</SUB>> ]
+"2463" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>837</SUB>> ]
+"2479" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>838</SUB>> ]
+"2481" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>838</SUB>> ]
+"2437" [label = <(METHOD,NewObject)<SUB>833</SUB>> ]
+"2496" [label = <(METHOD_RETURN,jobject)<SUB>833</SUB>> ]
   "2443" -> "2448" 
   "2447" -> "2450" 
   "2450" -> "2455" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/560-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/560-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/560-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/560-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"17047" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"17047" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
 "17054" [label = <(METHOD_RETURN,ANY)> ]
   "17047" -> "17054" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/561-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/561-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/561-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/561-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"17055" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
-"17062" [label = <(METHOD_RETURN,ANY)> ]
-  "17055" -> "17062" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME" {  
+"17055" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME)<SUB>533</SUB>> ]
+"17060" [label = <(METHOD_RETURN,ANY)> ]
+  "17055" -> "17060" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/562-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/562-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/562-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/562-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME" {  
-"17063" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME)<SUB>534</SUB>> ]
-"17068" [label = <(METHOD_RETURN,ANY)> ]
-  "17063" -> "17068" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR)" {  
+"17061" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))> ]
+"17066" [label = <(METHOD_RETURN,ANY)> ]
+  "17061" -> "17066" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/563-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/563-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/563-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/563-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR)" {  
-"17069" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))> ]
-"17074" [label = <(METHOD_RETURN,ANY)> ]
-  "17069" -> "17074" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR)" {  
+"17067" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))> ]
+"17072" [label = <(METHOD_RETURN,ANY)> ]
+  "17067" -> "17072" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/564-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/564-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/564-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/564-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR)" {  
-"17075" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))> ]
-"17080" [label = <(METHOD_RETURN,ANY)> ]
-  "17075" -> "17080" 
+digraph "IsCheckJniEnabled" {  
+"17073" [label = <(METHOD,IsCheckJniEnabled)> ]
+"17076" [label = <(METHOD_RETURN,ANY)> ]
+  "17073" -> "17076" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/565-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/565-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/565-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/565-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "IsCheckJniEnabled" {  
-"17081" [label = <(METHOD,IsCheckJniEnabled)> ]
-"17084" [label = <(METHOD_RETURN,ANY)> ]
-  "17081" -> "17084" 
+digraph "DumpClass" {  
+"17077" [label = <(METHOD,DumpClass)> ]
+"17082" [label = <(METHOD_RETURN,ANY)> ]
+  "17077" -> "17082" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/566-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/566-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/566-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/566-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "DumpClass" {  
-"17085" [label = <(METHOD,DumpClass)> ]
-"17090" [label = <(METHOD_RETURN,ANY)> ]
-  "17085" -> "17090" 
+digraph "LOG_STREAM" {  
+"17083" [label = <(METHOD,LOG_STREAM)> ]
+"17086" [label = <(METHOD_RETURN,ANY)> ]
+  "17083" -> "17086" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/567-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/567-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/567-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/567-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "LOG_STREAM" {  
-"17091" [label = <(METHOD,LOG_STREAM)> ]
-"17094" [label = <(METHOD_RETURN,ANY)> ]
-  "17091" -> "17094" 
+digraph "ToModifiedUtf8" {  
+"17087" [label = <(METHOD,ToModifiedUtf8)> ]
+"17090" [label = <(METHOD_RETURN,ANY)> ]
+  "17087" -> "17090" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/568-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/568-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/568-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/568-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "ToModifiedUtf8" {  
-"17095" [label = <(METHOD,ToModifiedUtf8)> ]
-"17098" [label = <(METHOD_RETURN,ANY)> ]
-  "17095" -> "17098" 
+digraph "GetLocation" {  
+"17091" [label = <(METHOD,GetLocation)> ]
+"17094" [label = <(METHOD_RETURN,ANY)> ]
+  "17091" -> "17094" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/569-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/569-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/569-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/569-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetLocation" {  
-"17099" [label = <(METHOD,GetLocation)> ]
-"17102" [label = <(METHOD_RETURN,ANY)> ]
-  "17099" -> "17102" 
+digraph "GetDexCache" {  
+"17095" [label = <(METHOD,GetDexCache)> ]
+"17098" [label = <(METHOD_RETURN,ANY)> ]
+  "17095" -> "17098" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/57-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/57-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/57-cfg.dot	2023-06-07 19:35:41.397383230 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/57-cfg.dot	2023-06-07 19:35:47.837382799 +0330
@@ -1,85 +1,85 @@
 digraph "NewObjectV" {  
-"2504" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>845</SUB>> ]
-"2522" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>846</SUB>> ]
-"2541" [label = <(soa,soa(env))<SUB>847</SUB>> ]
-"2543" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>848</SUB>> ]
-"2604" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>859</SUB>> ]
-"2628" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result))<SUB>863</SUB>> ]
-"2637" [label = <(CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV(env, local_result, java_class, mid, args))<SUB>864</SUB>> ]
-"2654" [label = <(RETURN,return local_result;,return local_result;)<SUB>868</SUB>> ]
-"2544" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>848</SUB>> ]
-"2551" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>848</SUB>> ]
-"2566" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>850</SUB>> ]
-"2573" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>853</SUB>> ]
-"2605" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>859</SUB>> ]
-"2612" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>859</SUB>> ]
-"2621" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>860</SUB>> ]
-"2630" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result))<SUB>863</SUB>> ]
-"2644" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>865</SUB>> ]
-"2545" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>848</SUB>> ]
-"2552" [label = <(Self,soa.Self())<SUB>848</SUB>> ]
-"2556" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>849</SUB>> ]
-"2570" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>851</SUB>> ]
-"2574" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>853</SUB>> ]
-"2579" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>855</SUB>> ]
-"2596" [label = <(RETURN,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>857</SUB>> ]
-"2606" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>859</SUB>> ]
-"2613" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>859</SUB>> ]
-"2616" [label = <(Self,soa.Self())<SUB>859</SUB>> ]
-"2625" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>861</SUB>> ]
-"2631" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>863</SUB>> ]
-"2645" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>865</SUB>> ]
-"2652" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>866</SUB>> ]
-"2508" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>845</SUB>> ]
-"2526" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>846</SUB>> ]
-"2547" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>848</SUB>> ]
-"2553" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>848</SUB>> ]
-"2557" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>849</SUB>> ]
-"2576" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>853</SUB>> ]
-"2581" [label = <(&lt;operator&gt;.greaterThan,jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>855</SUB>> ]
-"2597" [label = <(CallStaticObjectMethodV,CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>857</SUB>> ]
-"2608" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>859</SUB>> ]
-"2615" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>859</SUB>> ]
-"2617" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>859</SUB>> ]
-"2632" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>863</SUB>> ]
-"2646" [label = <(Self,soa.Self())<SUB>865</SUB>> ]
-"2650" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>865</SUB>> ]
-"2509" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>845</SUB>> ]
-"2513" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>845</SUB>> ]
-"2520" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>845</SUB>> ]
-"2527" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>846</SUB>> ]
-"2531" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>846</SUB>> ]
-"2538" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>846</SUB>> ]
-"2549" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>848</SUB>> ]
-"2555" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>848</SUB>> ]
-"2558" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>849</SUB>> ]
-"2561" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>849</SUB>> ]
-"2582" [label = <(&lt;operator&gt;.lessThan,jni::EncodeArtMethod&lt;kEnableIndexIds)<SUB>855</SUB>> ]
-"2587" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>856</SUB>> ]
-"2599" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>857</SUB>> ]
-"2610" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>859</SUB>> ]
-"2619" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>859</SUB>> ]
-"2634" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>863</SUB>> ]
-"2647" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>865</SUB>> ]
-"2514" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>845</SUB>> ]
-"2532" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>846</SUB>> ]
-"2560" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>849</SUB>> ]
-"2563" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>849</SUB>> ]
-"2583" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>855</SUB>> ]
-"2588" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>856</SUB>> ]
-"2591" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>856</SUB>> ]
-"2601" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>857</SUB>> ]
-"2649" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>865</SUB>> ]
-"2515" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>845</SUB>> ]
-"2517" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>845</SUB>> ]
-"2533" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>846</SUB>> ]
-"2535" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>846</SUB>> ]
-"2585" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>855</SUB>> ]
-"2590" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>856</SUB>> ]
-"2592" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>856</SUB>> ]
-"2594" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>856</SUB>> ]
-"2498" [label = <(METHOD,NewObjectV)<SUB>844</SUB>> ]
-"2656" [label = <(METHOD_RETURN,jobject)<SUB>844</SUB>> ]
+"2504" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>844</SUB>> ]
+"2522" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>845</SUB>> ]
+"2541" [label = <(soa,soa(env))<SUB>846</SUB>> ]
+"2543" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>847</SUB>> ]
+"2604" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>858</SUB>> ]
+"2628" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result))<SUB>862</SUB>> ]
+"2637" [label = <(CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV(env, local_result, java_class, mid, args))<SUB>863</SUB>> ]
+"2654" [label = <(RETURN,return local_result;,return local_result;)<SUB>867</SUB>> ]
+"2544" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>847</SUB>> ]
+"2551" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>847</SUB>> ]
+"2566" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>849</SUB>> ]
+"2573" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>852</SUB>> ]
+"2605" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>858</SUB>> ]
+"2612" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>858</SUB>> ]
+"2621" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>859</SUB>> ]
+"2630" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result))<SUB>862</SUB>> ]
+"2644" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>864</SUB>> ]
+"2545" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>847</SUB>> ]
+"2552" [label = <(Self,soa.Self())<SUB>847</SUB>> ]
+"2556" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>848</SUB>> ]
+"2570" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>850</SUB>> ]
+"2574" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>852</SUB>> ]
+"2579" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>854</SUB>> ]
+"2596" [label = <(RETURN,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>856</SUB>> ]
+"2606" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>858</SUB>> ]
+"2613" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>858</SUB>> ]
+"2616" [label = <(Self,soa.Self())<SUB>858</SUB>> ]
+"2625" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>860</SUB>> ]
+"2631" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>862</SUB>> ]
+"2645" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>864</SUB>> ]
+"2652" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>865</SUB>> ]
+"2508" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>844</SUB>> ]
+"2526" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>845</SUB>> ]
+"2547" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>847</SUB>> ]
+"2553" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>847</SUB>> ]
+"2557" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>848</SUB>> ]
+"2576" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>852</SUB>> ]
+"2581" [label = <(&lt;operator&gt;.greaterThan,jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>854</SUB>> ]
+"2597" [label = <(CallStaticObjectMethodV,CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>856</SUB>> ]
+"2608" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>858</SUB>> ]
+"2615" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>858</SUB>> ]
+"2617" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>858</SUB>> ]
+"2632" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>862</SUB>> ]
+"2646" [label = <(Self,soa.Self())<SUB>864</SUB>> ]
+"2650" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>864</SUB>> ]
+"2509" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>844</SUB>> ]
+"2513" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>844</SUB>> ]
+"2520" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>844</SUB>> ]
+"2527" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>845</SUB>> ]
+"2531" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>845</SUB>> ]
+"2538" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>845</SUB>> ]
+"2549" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>847</SUB>> ]
+"2555" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>847</SUB>> ]
+"2558" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>848</SUB>> ]
+"2561" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>848</SUB>> ]
+"2582" [label = <(&lt;operator&gt;.lessThan,jni::EncodeArtMethod&lt;kEnableIndexIds)<SUB>854</SUB>> ]
+"2587" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>855</SUB>> ]
+"2599" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>856</SUB>> ]
+"2610" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>858</SUB>> ]
+"2619" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>858</SUB>> ]
+"2634" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>862</SUB>> ]
+"2647" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>864</SUB>> ]
+"2514" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>844</SUB>> ]
+"2532" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>845</SUB>> ]
+"2560" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>848</SUB>> ]
+"2563" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>848</SUB>> ]
+"2583" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>854</SUB>> ]
+"2588" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>855</SUB>> ]
+"2591" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>855</SUB>> ]
+"2601" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>856</SUB>> ]
+"2649" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>864</SUB>> ]
+"2515" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>844</SUB>> ]
+"2517" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>844</SUB>> ]
+"2533" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>845</SUB>> ]
+"2535" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>845</SUB>> ]
+"2585" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>854</SUB>> ]
+"2590" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>855</SUB>> ]
+"2592" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>855</SUB>> ]
+"2594" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>855</SUB>> ]
+"2498" [label = <(METHOD,NewObjectV)<SUB>843</SUB>> ]
+"2656" [label = <(METHOD_RETURN,jobject)<SUB>843</SUB>> ]
   "2504" -> "2509" 
   "2504" -> "2522" 
   "2522" -> "2527" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/570-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/570-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/570-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/570-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetDexCache" {  
-"17103" [label = <(METHOD,GetDexCache)> ]
-"17106" [label = <(METHOD_RETURN,ANY)> ]
-  "17103" -> "17106" 
+digraph "IsNative" {  
+"17099" [label = <(METHOD,IsNative)> ]
+"17102" [label = <(METHOD_RETURN,ANY)> ]
+  "17099" -> "17102" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/571-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/571-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/571-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/571-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "IsNative" {  
-"17107" [label = <(METHOD,IsNative)> ]
-"17110" [label = <(METHOD_RETURN,ANY)> ]
-  "17107" -> "17110" 
+digraph "VLOG" {  
+"17103" [label = <(METHOD,VLOG)> ]
+"17106" [label = <(METHOD_RETURN,ANY)> ]
+  "17103" -> "17106" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/572-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/572-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/572-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/572-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "VLOG" {  
-"17111" [label = <(METHOD,VLOG)> ]
-"17114" [label = <(METHOD_RETURN,ANY)> ]
-  "17111" -> "17114" 
+digraph "PrettyMethod" {  
+"17107" [label = <(METHOD,PrettyMethod)> ]
+"17110" [label = <(METHOD_RETURN,ANY)> ]
+  "17107" -> "17110" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/573-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/573-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/573-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/573-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyMethod" {  
-"17115" [label = <(METHOD,PrettyMethod)> ]
-"17118" [label = <(METHOD_RETURN,ANY)> ]
-  "17115" -> "17118" 
+digraph "RegisterNative" {  
+"17111" [label = <(METHOD,RegisterNative)> ]
+"17115" [label = <(METHOD_RETURN,ANY)> ]
+  "17111" -> "17115" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/574-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/574-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/574-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/574-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "RegisterNative" {  
-"17119" [label = <(METHOD,RegisterNative)> ]
-"17123" [label = <(METHOD_RETURN,ANY)> ]
-  "17119" -> "17123" 
+digraph "UNUSED" {  
+"17116" [label = <(METHOD,UNUSED)> ]
+"17119" [label = <(METHOD_RETURN,ANY)> ]
+  "17116" -> "17119" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/575-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/575-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/575-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/575-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "UNUSED" {  
-"17124" [label = <(METHOD,UNUSED)> ]
-"17127" [label = <(METHOD_RETURN,ANY)> ]
-  "17124" -> "17127" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR)" {  
+"17120" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))> ]
+"17125" [label = <(METHOD_RETURN,ANY)> ]
+  "17120" -> "17125" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/576-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/576-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/576-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/576-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR)" {  
-"17128" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))> ]
-"17133" [label = <(METHOD_RETURN,ANY)> ]
-  "17128" -> "17133" 
+digraph "mirror::Class::PrettyClass" {  
+"17126" [label = <(METHOD,mirror::Class::PrettyClass)> ]
+"17130" [label = <(METHOD_RETURN,ANY)> ]
+  "17126" -> "17130" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/577-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/577-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/577-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/577-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::Class::PrettyClass" {  
-"17134" [label = <(METHOD,mirror::Class::PrettyClass)> ]
-"17138" [label = <(METHOD_RETURN,ANY)> ]
-  "17134" -> "17138" 
+digraph "GetMethods" {  
+"17131" [label = <(METHOD,GetMethods)> ]
+"17135" [label = <(METHOD_RETURN,ANY)> ]
+  "17131" -> "17135" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/578-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/578-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/578-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/578-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetMethods" {  
-"17139" [label = <(METHOD,GetMethods)> ]
-"17143" [label = <(METHOD_RETURN,ANY)> ]
-  "17139" -> "17143" 
+digraph "UnregisterNative" {  
+"17136" [label = <(METHOD,UnregisterNative)> ]
+"17139" [label = <(METHOD_RETURN,ANY)> ]
+  "17136" -> "17139" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/579-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/579-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/579-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/579-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "UnregisterNative" {  
-"17144" [label = <(METHOD,UnregisterNative)> ]
-"17147" [label = <(METHOD_RETURN,ANY)> ]
-  "17144" -> "17147" 
+digraph "&lt;operator&gt;.postIncrement" {  
+"17140" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
+"17143" [label = <(METHOD_RETURN,ANY)> ]
+  "17140" -> "17143" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/58-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/58-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/58-cfg.dot	2023-06-07 19:35:41.397383230 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/58-cfg.dot	2023-06-07 19:35:47.837382799 +0330
@@ -1,85 +1,85 @@
 digraph "NewObjectA" {  
-"2664" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>872</SUB>> ]
-"2682" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>873</SUB>> ]
-"2701" [label = <(soa,soa(env))<SUB>874</SUB>> ]
-"2703" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>875</SUB>> ]
-"2764" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>886</SUB>> ]
-"2788" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>890</SUB>> ]
-"2797" [label = <(CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA(env, local_result, java_class, mid, args))<SUB>891</SUB>> ]
-"2814" [label = <(RETURN,return local_result;,return local_result;)<SUB>895</SUB>> ]
-"2704" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>875</SUB>> ]
-"2711" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>875</SUB>> ]
-"2726" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>877</SUB>> ]
-"2733" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>880</SUB>> ]
-"2765" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>886</SUB>> ]
-"2772" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>886</SUB>> ]
-"2781" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>887</SUB>> ]
-"2790" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>890</SUB>> ]
-"2804" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>892</SUB>> ]
-"2705" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>875</SUB>> ]
-"2712" [label = <(Self,soa.Self())<SUB>875</SUB>> ]
-"2716" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>876</SUB>> ]
-"2730" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>878</SUB>> ]
-"2734" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>880</SUB>> ]
-"2739" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>882</SUB>> ]
-"2756" [label = <(RETURN,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>884</SUB>> ]
-"2766" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>886</SUB>> ]
-"2773" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>886</SUB>> ]
-"2776" [label = <(Self,soa.Self())<SUB>886</SUB>> ]
-"2785" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>888</SUB>> ]
-"2791" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>890</SUB>> ]
-"2805" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>892</SUB>> ]
-"2812" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>893</SUB>> ]
-"2668" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>872</SUB>> ]
-"2686" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>873</SUB>> ]
-"2707" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>875</SUB>> ]
-"2713" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>875</SUB>> ]
-"2717" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>876</SUB>> ]
-"2736" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>880</SUB>> ]
-"2741" [label = <(&lt;operator&gt;.greaterThan,jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>882</SUB>> ]
-"2757" [label = <(CallStaticObjectMethodA,CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>884</SUB>> ]
-"2768" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>886</SUB>> ]
-"2775" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>886</SUB>> ]
-"2777" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>886</SUB>> ]
-"2792" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>890</SUB>> ]
-"2806" [label = <(Self,soa.Self())<SUB>892</SUB>> ]
-"2810" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>892</SUB>> ]
-"2669" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>872</SUB>> ]
-"2673" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>872</SUB>> ]
-"2680" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>872</SUB>> ]
-"2687" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>873</SUB>> ]
-"2691" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>873</SUB>> ]
-"2698" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>873</SUB>> ]
-"2709" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>875</SUB>> ]
-"2715" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>875</SUB>> ]
-"2718" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>876</SUB>> ]
-"2721" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>876</SUB>> ]
-"2742" [label = <(&lt;operator&gt;.lessThan,jni::EncodeArtMethod&lt;kEnableIndexIds)<SUB>882</SUB>> ]
-"2747" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>883</SUB>> ]
-"2759" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>884</SUB>> ]
-"2770" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>886</SUB>> ]
-"2779" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>886</SUB>> ]
-"2794" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>890</SUB>> ]
-"2807" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>892</SUB>> ]
-"2674" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>872</SUB>> ]
-"2692" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>873</SUB>> ]
-"2720" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>876</SUB>> ]
-"2723" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>876</SUB>> ]
-"2743" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>882</SUB>> ]
-"2748" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>883</SUB>> ]
-"2751" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>883</SUB>> ]
-"2761" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>884</SUB>> ]
-"2809" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>892</SUB>> ]
-"2675" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>872</SUB>> ]
-"2677" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>872</SUB>> ]
-"2693" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>873</SUB>> ]
-"2695" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>873</SUB>> ]
-"2745" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>882</SUB>> ]
-"2750" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>883</SUB>> ]
-"2752" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>883</SUB>> ]
-"2754" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>883</SUB>> ]
-"2658" [label = <(METHOD,NewObjectA)<SUB>871</SUB>> ]
-"2816" [label = <(METHOD_RETURN,jobject)<SUB>871</SUB>> ]
+"2664" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>871</SUB>> ]
+"2682" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>872</SUB>> ]
+"2701" [label = <(soa,soa(env))<SUB>873</SUB>> ]
+"2703" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>874</SUB>> ]
+"2764" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>885</SUB>> ]
+"2788" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>889</SUB>> ]
+"2797" [label = <(CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA(env, local_result, java_class, mid, args))<SUB>890</SUB>> ]
+"2814" [label = <(RETURN,return local_result;,return local_result;)<SUB>894</SUB>> ]
+"2704" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>874</SUB>> ]
+"2711" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>874</SUB>> ]
+"2726" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>876</SUB>> ]
+"2733" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>879</SUB>> ]
+"2765" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>885</SUB>> ]
+"2772" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>885</SUB>> ]
+"2781" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>886</SUB>> ]
+"2790" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>889</SUB>> ]
+"2804" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>891</SUB>> ]
+"2705" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>874</SUB>> ]
+"2712" [label = <(Self,soa.Self())<SUB>874</SUB>> ]
+"2716" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>875</SUB>> ]
+"2730" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>877</SUB>> ]
+"2734" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>879</SUB>> ]
+"2739" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>881</SUB>> ]
+"2756" [label = <(RETURN,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>883</SUB>> ]
+"2766" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>885</SUB>> ]
+"2773" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>885</SUB>> ]
+"2776" [label = <(Self,soa.Self())<SUB>885</SUB>> ]
+"2785" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>887</SUB>> ]
+"2791" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>889</SUB>> ]
+"2805" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>891</SUB>> ]
+"2812" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>892</SUB>> ]
+"2668" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>871</SUB>> ]
+"2686" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>872</SUB>> ]
+"2707" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>874</SUB>> ]
+"2713" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>874</SUB>> ]
+"2717" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>875</SUB>> ]
+"2736" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>879</SUB>> ]
+"2741" [label = <(&lt;operator&gt;.greaterThan,jni::EncodeArtMethod&lt;kEnableIndexIds&gt;(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>881</SUB>> ]
+"2757" [label = <(CallStaticObjectMethodA,CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>883</SUB>> ]
+"2768" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>885</SUB>> ]
+"2775" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>885</SUB>> ]
+"2777" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>885</SUB>> ]
+"2792" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>889</SUB>> ]
+"2806" [label = <(Self,soa.Self())<SUB>891</SUB>> ]
+"2810" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>891</SUB>> ]
+"2669" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>871</SUB>> ]
+"2673" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>871</SUB>> ]
+"2680" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>871</SUB>> ]
+"2687" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>872</SUB>> ]
+"2691" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>872</SUB>> ]
+"2698" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>872</SUB>> ]
+"2709" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>874</SUB>> ]
+"2715" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>874</SUB>> ]
+"2718" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>875</SUB>> ]
+"2721" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>875</SUB>> ]
+"2742" [label = <(&lt;operator&gt;.lessThan,jni::EncodeArtMethod&lt;kEnableIndexIds)<SUB>881</SUB>> ]
+"2747" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>882</SUB>> ]
+"2759" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>883</SUB>> ]
+"2770" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>885</SUB>> ]
+"2779" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>885</SUB>> ]
+"2794" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>889</SUB>> ]
+"2807" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>891</SUB>> ]
+"2674" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>871</SUB>> ]
+"2692" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>872</SUB>> ]
+"2720" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>875</SUB>> ]
+"2723" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>875</SUB>> ]
+"2743" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>881</SUB>> ]
+"2748" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>882</SUB>> ]
+"2751" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>882</SUB>> ]
+"2761" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>883</SUB>> ]
+"2809" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>891</SUB>> ]
+"2675" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>871</SUB>> ]
+"2677" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>871</SUB>> ]
+"2693" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>872</SUB>> ]
+"2695" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>872</SUB>> ]
+"2745" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>881</SUB>> ]
+"2750" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>882</SUB>> ]
+"2752" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>882</SUB>> ]
+"2754" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>882</SUB>> ]
+"2658" [label = <(METHOD,NewObjectA)<SUB>870</SUB>> ]
+"2816" [label = <(METHOD_RETURN,jobject)<SUB>870</SUB>> ]
   "2664" -> "2669" 
   "2664" -> "2682" 
   "2682" -> "2687" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/580-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/580-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/580-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/580-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.postIncrement" {  
-"17148" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
-"17151" [label = <(METHOD_RETURN,ANY)> ]
-  "17148" -> "17151" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR)" {  
+"17144" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))> ]
+"17149" [label = <(METHOD_RETURN,ANY)> ]
+  "17144" -> "17149" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/581-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/581-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/581-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/581-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR)" {  
-"17152" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))> ]
-"17157" [label = <(METHOD_RETURN,ANY)> ]
-  "17152" -> "17157" 
+digraph "GetJavaVM" {  
+"17150" [label = <(METHOD,GetJavaVM)> ]
+"17153" [label = <(METHOD_RETURN,ANY)> ]
+  "17150" -> "17153" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/582-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/582-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/582-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/582-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetJavaVM" {  
-"17158" [label = <(METHOD,GetJavaVM)> ]
+digraph "NewObject" {  
+"17154" [label = <(METHOD,NewObject)> ]
 "17161" [label = <(METHOD_RETURN,ANY)> ]
-  "17158" -> "17161" 
+  "17154" -> "17161" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/583-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/583-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/583-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/583-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "NewObject" {  
-"17162" [label = <(METHOD,NewObject)> ]
-"17169" [label = <(METHOD_RETURN,ANY)> ]
-  "17162" -> "17169" 
+digraph "GetLongField" {  
+"17162" [label = <(METHOD,GetLongField)> ]
+"17167" [label = <(METHOD_RETURN,ANY)> ]
+  "17162" -> "17167" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/584-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/584-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/584-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/584-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetLongField" {  
-"17170" [label = <(METHOD,GetLongField)> ]
-"17175" [label = <(METHOD_RETURN,ANY)> ]
-  "17170" -> "17175" 
+digraph "GetIntField" {  
+"17168" [label = <(METHOD,GetIntField)> ]
+"17173" [label = <(METHOD_RETURN,ANY)> ]
+  "17168" -> "17173" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/585-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/585-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/585-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/585-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetIntField" {  
-"17176" [label = <(METHOD,GetIntField)> ]
-"17181" [label = <(METHOD_RETURN,ANY)> ]
-  "17176" -> "17181" 
+digraph "ArtT::Alloc" {  
+"17174" [label = <(METHOD,ArtT::Alloc)> ]
+"17179" [label = <(METHOD_RETURN,ANY)> ]
+  "17174" -> "17179" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/586-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/586-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/586-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/586-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "ArtT::Alloc" {  
-"17182" [label = <(METHOD,ArtT::Alloc)> ]
-"17187" [label = <(METHOD_RETURN,ANY)> ]
-  "17182" -> "17187" 
+digraph "GetClassRoot&lt;ArtArrayT&gt;" {  
+"17180" [label = <(METHOD,GetClassRoot&lt;ArtArrayT&gt;)> ]
+"17182" [label = <(METHOD_RETURN,ANY)> ]
+  "17180" -> "17182" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/587-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/587-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/587-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/587-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetClassRoot&lt;ArtArrayT&gt;" {  
-"17188" [label = <(METHOD,GetClassRoot&lt;ArtArrayT&gt;)> ]
-"17190" [label = <(METHOD_RETURN,ANY)> ]
-  "17188" -> "17190" 
+digraph "DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;" {  
+"17183" [label = <(METHOD,DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;)> ]
+"17189" [label = <(METHOD_RETURN,ANY)> ]
+  "17183" -> "17189" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/588-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/588-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/588-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/588-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;" {  
-"17191" [label = <(METHOD,DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;)> ]
-"17197" [label = <(METHOD_RETURN,ANY)> ]
-  "17191" -> "17197" 
+digraph "GetData" {  
+"17190" [label = <(METHOD,GetData)> ]
+"17193" [label = <(METHOD_RETURN,ANY)> ]
+  "17190" -> "17193" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/589-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/589-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/589-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/589-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetData" {  
-"17198" [label = <(METHOD,GetData)> ]
-"17201" [label = <(METHOD_RETURN,ANY)> ]
-  "17198" -> "17201" 
+digraph "DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;" {  
+"17194" [label = <(METHOD,DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;)> ]
+"17200" [label = <(METHOD_RETURN,ANY)> ]
+  "17194" -> "17200" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/59-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/59-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/59-cfg.dot	2023-06-07 19:35:41.407383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/59-cfg.dot	2023-06-07 19:35:47.837382799 +0330
@@ -1,36 +1,36 @@
 digraph "GetMethodID" {  
-"2824" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>899</SUB>> ]
-"2842" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>900</SUB>> ]
-"2860" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>901</SUB>> ]
-"2879" [label = <(soa,soa(env))<SUB>902</SUB>> ]
-"2881" [label = <(RETURN,return FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false);,return FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false);)<SUB>903</SUB>> ]
-"2882" [label = <(&lt;operator&gt;.greaterThan,FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false))<SUB>903</SUB>> ]
-"2883" [label = <(&lt;operator&gt;.lessThan,FindMethodID&lt;kEnableIndexIds)<SUB>903</SUB>> ]
-"2886" [label = <(&lt;operator&gt;.bracketedPrimary,(soa, java_class, name, sig, false))<SUB>903</SUB>> ]
-"2828" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>899</SUB>> ]
-"2846" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>900</SUB>> ]
-"2864" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>901</SUB>> ]
-"2887" [label = <(&lt;operator&gt;.expressionList,soa, java_class, name, sig, false)<SUB>903</SUB>> ]
-"2829" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>899</SUB>> ]
-"2833" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>899</SUB>> ]
-"2840" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>899</SUB>> ]
-"2847" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>900</SUB>> ]
-"2851" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>900</SUB>> ]
-"2858" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>900</SUB>> ]
-"2865" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>901</SUB>> ]
-"2869" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>901</SUB>> ]
-"2876" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>901</SUB>> ]
-"2834" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>899</SUB>> ]
-"2852" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>900</SUB>> ]
-"2870" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>901</SUB>> ]
-"2835" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>899</SUB>> ]
-"2837" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>899</SUB>> ]
-"2853" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>900</SUB>> ]
-"2855" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>900</SUB>> ]
-"2871" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>901</SUB>> ]
-"2873" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>901</SUB>> ]
-"2818" [label = <(METHOD,GetMethodID)<SUB>898</SUB>> ]
-"2893" [label = <(METHOD_RETURN,jmethodID)<SUB>898</SUB>> ]
+"2824" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>898</SUB>> ]
+"2842" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>899</SUB>> ]
+"2860" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>900</SUB>> ]
+"2879" [label = <(soa,soa(env))<SUB>901</SUB>> ]
+"2881" [label = <(RETURN,return FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false);,return FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false);)<SUB>902</SUB>> ]
+"2882" [label = <(&lt;operator&gt;.greaterThan,FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, false))<SUB>902</SUB>> ]
+"2883" [label = <(&lt;operator&gt;.lessThan,FindMethodID&lt;kEnableIndexIds)<SUB>902</SUB>> ]
+"2886" [label = <(&lt;operator&gt;.bracketedPrimary,(soa, java_class, name, sig, false))<SUB>902</SUB>> ]
+"2828" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>898</SUB>> ]
+"2846" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>899</SUB>> ]
+"2864" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>900</SUB>> ]
+"2887" [label = <(&lt;operator&gt;.expressionList,soa, java_class, name, sig, false)<SUB>902</SUB>> ]
+"2829" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>898</SUB>> ]
+"2833" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>898</SUB>> ]
+"2840" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>898</SUB>> ]
+"2847" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>899</SUB>> ]
+"2851" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>899</SUB>> ]
+"2858" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>899</SUB>> ]
+"2865" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>900</SUB>> ]
+"2869" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>900</SUB>> ]
+"2876" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>900</SUB>> ]
+"2834" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>898</SUB>> ]
+"2852" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>899</SUB>> ]
+"2870" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>900</SUB>> ]
+"2835" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>898</SUB>> ]
+"2837" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>898</SUB>> ]
+"2853" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>899</SUB>> ]
+"2855" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>899</SUB>> ]
+"2871" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>900</SUB>> ]
+"2873" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>900</SUB>> ]
+"2818" [label = <(METHOD,GetMethodID)<SUB>897</SUB>> ]
+"2893" [label = <(METHOD_RETURN,jmethodID)<SUB>897</SUB>> ]
   "2824" -> "2829" 
   "2824" -> "2842" 
   "2842" -> "2847" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/590-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/590-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/590-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/590-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;" {  
-"17202" [label = <(METHOD,DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;)> ]
-"17208" [label = <(METHOD_RETURN,ANY)> ]
-  "17202" -> "17208" 
+digraph "&lt;operator&gt;.arrayInitializer" {  
+"17201" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
+"17436" [label = <(METHOD_RETURN,ANY)> ]
+  "17201" -> "17436" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/591-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/591-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/591-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/591-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.arrayInitializer" {  
-"17209" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
-"17444" [label = <(METHOD_RETURN,ANY)> ]
-  "17209" -> "17444" 
+digraph "GetJniIdType" {  
+"17437" [label = <(METHOD,GetJniIdType)> ]
+"17440" [label = <(METHOD_RETURN,ANY)> ]
+  "17437" -> "17440" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/592-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/592-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/592-cfg.dot	2023-06-07 19:35:41.647383213 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/592-cfg.dot	2023-06-07 19:35:48.247382767 +0330
@@ -1,5 +1,5 @@
-digraph "GetJniIdType" {  
-"17445" [label = <(METHOD,GetJniIdType)> ]
-"17448" [label = <(METHOD_RETURN,ANY)> ]
-  "17445" -> "17448" 
+digraph "UNREACHABLE" {  
+"17441" [label = <(METHOD,UNREACHABLE)> ]
+"17443" [label = <(METHOD_RETURN,ANY)> ]
+  "17441" -> "17443" 
 }
Only in /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out: 593-cfg.dot
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/6-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/6-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/6-cfg.dot	2023-06-07 19:35:41.337383234 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/6-cfg.dot	2023-06-07 19:35:47.777382805 +0330
@@ -1,5 +1,5 @@
 digraph "ScopedVAArgs" {  
-"35" [label = <(METHOD,ScopedVAArgs)<SUB>77</SUB>> ]
-"38" [label = <(METHOD_RETURN,ANY)<SUB>77</SUB>> ]
+"35" [label = <(METHOD,ScopedVAArgs)<SUB>76</SUB>> ]
+"38" [label = <(METHOD_RETURN,ANY)<SUB>76</SUB>> ]
   "35" -> "38" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/60-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/60-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/60-cfg.dot	2023-06-07 19:35:41.407383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/60-cfg.dot	2023-06-07 19:35:47.847382800 +0330
@@ -1,36 +1,36 @@
 digraph "GetStaticMethodID" {  
-"2901" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>908</SUB>> ]
-"2919" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>909</SUB>> ]
-"2937" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>910</SUB>> ]
-"2956" [label = <(soa,soa(env))<SUB>911</SUB>> ]
-"2958" [label = <(RETURN,return FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true);,return FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true);)<SUB>912</SUB>> ]
-"2959" [label = <(&lt;operator&gt;.greaterThan,FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true))<SUB>912</SUB>> ]
-"2960" [label = <(&lt;operator&gt;.lessThan,FindMethodID&lt;kEnableIndexIds)<SUB>912</SUB>> ]
-"2963" [label = <(&lt;operator&gt;.bracketedPrimary,(soa, java_class, name, sig, true))<SUB>912</SUB>> ]
-"2905" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>908</SUB>> ]
-"2923" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>909</SUB>> ]
-"2941" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>910</SUB>> ]
-"2964" [label = <(&lt;operator&gt;.expressionList,soa, java_class, name, sig, true)<SUB>912</SUB>> ]
-"2906" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>908</SUB>> ]
-"2910" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>908</SUB>> ]
-"2917" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>908</SUB>> ]
-"2924" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>909</SUB>> ]
-"2928" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>909</SUB>> ]
-"2935" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>909</SUB>> ]
-"2942" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>910</SUB>> ]
-"2946" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>910</SUB>> ]
-"2953" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>910</SUB>> ]
-"2911" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>908</SUB>> ]
-"2929" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>909</SUB>> ]
-"2947" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>910</SUB>> ]
-"2912" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>908</SUB>> ]
-"2914" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>908</SUB>> ]
-"2930" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>909</SUB>> ]
-"2932" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>909</SUB>> ]
-"2948" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>910</SUB>> ]
-"2950" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>910</SUB>> ]
-"2895" [label = <(METHOD,GetStaticMethodID)<SUB>906</SUB>> ]
-"2970" [label = <(METHOD_RETURN,jmethodID)<SUB>906</SUB>> ]
+"2901" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>907</SUB>> ]
+"2919" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>908</SUB>> ]
+"2937" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>909</SUB>> ]
+"2956" [label = <(soa,soa(env))<SUB>910</SUB>> ]
+"2958" [label = <(RETURN,return FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true);,return FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true);)<SUB>911</SUB>> ]
+"2959" [label = <(&lt;operator&gt;.greaterThan,FindMethodID&lt;kEnableIndexIds&gt;(soa, java_class, name, sig, true))<SUB>911</SUB>> ]
+"2960" [label = <(&lt;operator&gt;.lessThan,FindMethodID&lt;kEnableIndexIds)<SUB>911</SUB>> ]
+"2963" [label = <(&lt;operator&gt;.bracketedPrimary,(soa, java_class, name, sig, true))<SUB>911</SUB>> ]
+"2905" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>907</SUB>> ]
+"2923" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>908</SUB>> ]
+"2941" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>909</SUB>> ]
+"2964" [label = <(&lt;operator&gt;.expressionList,soa, java_class, name, sig, true)<SUB>911</SUB>> ]
+"2906" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>907</SUB>> ]
+"2910" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>907</SUB>> ]
+"2917" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>907</SUB>> ]
+"2924" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>908</SUB>> ]
+"2928" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>908</SUB>> ]
+"2935" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>908</SUB>> ]
+"2942" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>909</SUB>> ]
+"2946" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>909</SUB>> ]
+"2953" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>909</SUB>> ]
+"2911" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>907</SUB>> ]
+"2929" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>908</SUB>> ]
+"2947" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>909</SUB>> ]
+"2912" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>907</SUB>> ]
+"2914" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>907</SUB>> ]
+"2930" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>908</SUB>> ]
+"2932" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>908</SUB>> ]
+"2948" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>909</SUB>> ]
+"2950" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>909</SUB>> ]
+"2895" [label = <(METHOD,GetStaticMethodID)<SUB>905</SUB>> ]
+"2970" [label = <(METHOD_RETURN,jmethodID)<SUB>905</SUB>> ]
   "2901" -> "2906" 
   "2901" -> "2919" 
   "2919" -> "2924" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/61-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/61-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/61-cfg.dot	2023-06-07 19:35:41.407383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/61-cfg.dot	2023-06-07 19:35:47.847382800 +0330
@@ -1,36 +1,36 @@
 digraph "CallObjectMethod" {  
-"2978" [label = <(va_start,va_start(ap, mid))<SUB>917</SUB>> ]
-"2982" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>918</SUB>> ]
-"2985" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>919</SUB>> ]
-"3003" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>920</SUB>> ]
-"3022" [label = <(soa,soa(env))<SUB>921</SUB>> ]
-"3025" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>922</SUB>> ]
-"3031" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>923</SUB>> ]
-"2983" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>918</SUB>> ]
-"3026" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>922</SUB>> ]
-"3032" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>923</SUB>> ]
-"3033" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>923</SUB>> ]
-"3038" [label = <(GetL,result.GetL())<SUB>923</SUB>> ]
-"2989" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>919</SUB>> ]
-"3007" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>920</SUB>> ]
-"3034" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>923</SUB>> ]
-"3039" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>923</SUB>> ]
-"2990" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>919</SUB>> ]
-"2994" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>919</SUB>> ]
-"3001" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>919</SUB>> ]
-"3008" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>920</SUB>> ]
-"3012" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>920</SUB>> ]
-"3019" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>920</SUB>> ]
-"3036" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>923</SUB>> ]
-"3041" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>923</SUB>> ]
-"2995" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>919</SUB>> ]
-"3013" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>920</SUB>> ]
-"2996" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>919</SUB>> ]
-"2998" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>919</SUB>> ]
-"3014" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>920</SUB>> ]
-"3016" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>920</SUB>> ]
-"2972" [label = <(METHOD,CallObjectMethod)<SUB>915</SUB>> ]
-"3042" [label = <(METHOD_RETURN,jobject)<SUB>915</SUB>> ]
+"2978" [label = <(va_start,va_start(ap, mid))<SUB>916</SUB>> ]
+"2982" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>917</SUB>> ]
+"2985" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>918</SUB>> ]
+"3003" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>919</SUB>> ]
+"3022" [label = <(soa,soa(env))<SUB>920</SUB>> ]
+"3025" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>921</SUB>> ]
+"3031" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>922</SUB>> ]
+"2983" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>917</SUB>> ]
+"3026" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>921</SUB>> ]
+"3032" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>922</SUB>> ]
+"3033" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>922</SUB>> ]
+"3038" [label = <(GetL,result.GetL())<SUB>922</SUB>> ]
+"2989" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>918</SUB>> ]
+"3007" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>919</SUB>> ]
+"3034" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>922</SUB>> ]
+"3039" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>922</SUB>> ]
+"2990" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>918</SUB>> ]
+"2994" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>918</SUB>> ]
+"3001" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>918</SUB>> ]
+"3008" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>919</SUB>> ]
+"3012" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>919</SUB>> ]
+"3019" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>919</SUB>> ]
+"3036" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>922</SUB>> ]
+"3041" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>922</SUB>> ]
+"2995" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>918</SUB>> ]
+"3013" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>919</SUB>> ]
+"2996" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>918</SUB>> ]
+"2998" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>918</SUB>> ]
+"3014" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>919</SUB>> ]
+"3016" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>919</SUB>> ]
+"2972" [label = <(METHOD,CallObjectMethod)<SUB>914</SUB>> ]
+"3042" [label = <(METHOD_RETURN,jobject)<SUB>914</SUB>> ]
   "2978" -> "2983" 
   "2982" -> "2985" 
   "2985" -> "2990" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/62-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/62-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/62-cfg.dot	2023-06-07 19:35:41.407383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/62-cfg.dot	2023-06-07 19:35:47.847382800 +0330
@@ -1,33 +1,33 @@
 digraph "CallObjectMethodV" {  
-"3050" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>927</SUB>> ]
-"3068" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>928</SUB>> ]
-"3087" [label = <(soa,soa(env))<SUB>929</SUB>> ]
-"3090" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args)))<SUB>930</SUB>> ]
-"3096" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>931</SUB>> ]
-"3091" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>930</SUB>> ]
-"3097" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>931</SUB>> ]
-"3098" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>931</SUB>> ]
-"3103" [label = <(GetL,result.GetL())<SUB>931</SUB>> ]
-"3054" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>927</SUB>> ]
-"3072" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>928</SUB>> ]
-"3099" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>931</SUB>> ]
-"3104" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>931</SUB>> ]
-"3055" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>927</SUB>> ]
-"3059" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>927</SUB>> ]
-"3066" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>927</SUB>> ]
-"3073" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>928</SUB>> ]
-"3077" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>928</SUB>> ]
-"3084" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>928</SUB>> ]
-"3101" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>931</SUB>> ]
-"3106" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>931</SUB>> ]
-"3060" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>927</SUB>> ]
-"3078" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>928</SUB>> ]
-"3061" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>927</SUB>> ]
-"3063" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>927</SUB>> ]
-"3079" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>928</SUB>> ]
-"3081" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>928</SUB>> ]
-"3044" [label = <(METHOD,CallObjectMethodV)<SUB>926</SUB>> ]
-"3107" [label = <(METHOD_RETURN,jobject)<SUB>926</SUB>> ]
+"3050" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>926</SUB>> ]
+"3068" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>927</SUB>> ]
+"3087" [label = <(soa,soa(env))<SUB>928</SUB>> ]
+"3090" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args)))<SUB>929</SUB>> ]
+"3096" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>930</SUB>> ]
+"3091" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>929</SUB>> ]
+"3097" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>930</SUB>> ]
+"3098" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>930</SUB>> ]
+"3103" [label = <(GetL,result.GetL())<SUB>930</SUB>> ]
+"3054" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>926</SUB>> ]
+"3072" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>927</SUB>> ]
+"3099" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>930</SUB>> ]
+"3104" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>930</SUB>> ]
+"3055" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>926</SUB>> ]
+"3059" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>926</SUB>> ]
+"3066" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>926</SUB>> ]
+"3073" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>927</SUB>> ]
+"3077" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>927</SUB>> ]
+"3084" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>927</SUB>> ]
+"3101" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>930</SUB>> ]
+"3106" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>930</SUB>> ]
+"3060" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>926</SUB>> ]
+"3078" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>927</SUB>> ]
+"3061" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>926</SUB>> ]
+"3063" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>926</SUB>> ]
+"3079" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>927</SUB>> ]
+"3081" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>927</SUB>> ]
+"3044" [label = <(METHOD,CallObjectMethodV)<SUB>925</SUB>> ]
+"3107" [label = <(METHOD_RETURN,jobject)<SUB>925</SUB>> ]
   "3050" -> "3055" 
   "3050" -> "3068" 
   "3068" -> "3073" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/63-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/63-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/63-cfg.dot	2023-06-07 19:35:41.407383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/63-cfg.dot	2023-06-07 19:35:47.847382800 +0330
@@ -1,33 +1,33 @@
 digraph "CallObjectMethodA" {  
-"3115" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>935</SUB>> ]
-"3133" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>936</SUB>> ]
-"3152" [label = <(soa,soa(env))<SUB>937</SUB>> ]
-"3155" [label = <(result,result(InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args)))<SUB>938</SUB>> ]
-"3161" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>939</SUB>> ]
-"3156" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>938</SUB>> ]
-"3162" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>939</SUB>> ]
-"3163" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>939</SUB>> ]
-"3168" [label = <(GetL,result.GetL())<SUB>939</SUB>> ]
-"3119" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>935</SUB>> ]
-"3137" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>936</SUB>> ]
-"3164" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>939</SUB>> ]
-"3169" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>939</SUB>> ]
-"3120" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>935</SUB>> ]
-"3124" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>935</SUB>> ]
-"3131" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>935</SUB>> ]
-"3138" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>936</SUB>> ]
-"3142" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>936</SUB>> ]
-"3149" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>936</SUB>> ]
-"3166" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>939</SUB>> ]
-"3171" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>939</SUB>> ]
-"3125" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>935</SUB>> ]
-"3143" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>936</SUB>> ]
-"3126" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>935</SUB>> ]
-"3128" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>935</SUB>> ]
-"3144" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>936</SUB>> ]
-"3146" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>936</SUB>> ]
-"3109" [label = <(METHOD,CallObjectMethodA)<SUB>934</SUB>> ]
-"3172" [label = <(METHOD_RETURN,jobject)<SUB>934</SUB>> ]
+"3115" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>934</SUB>> ]
+"3133" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>935</SUB>> ]
+"3152" [label = <(soa,soa(env))<SUB>936</SUB>> ]
+"3155" [label = <(result,result(InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args)))<SUB>937</SUB>> ]
+"3161" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>938</SUB>> ]
+"3156" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>937</SUB>> ]
+"3162" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>938</SUB>> ]
+"3163" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>938</SUB>> ]
+"3168" [label = <(GetL,result.GetL())<SUB>938</SUB>> ]
+"3119" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>934</SUB>> ]
+"3137" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>935</SUB>> ]
+"3164" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>938</SUB>> ]
+"3169" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>938</SUB>> ]
+"3120" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>934</SUB>> ]
+"3124" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>934</SUB>> ]
+"3131" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>934</SUB>> ]
+"3138" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>935</SUB>> ]
+"3142" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>935</SUB>> ]
+"3149" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>935</SUB>> ]
+"3166" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>938</SUB>> ]
+"3171" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>938</SUB>> ]
+"3125" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>934</SUB>> ]
+"3143" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>935</SUB>> ]
+"3126" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>934</SUB>> ]
+"3128" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>934</SUB>> ]
+"3144" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>935</SUB>> ]
+"3146" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>935</SUB>> ]
+"3109" [label = <(METHOD,CallObjectMethodA)<SUB>933</SUB>> ]
+"3172" [label = <(METHOD_RETURN,jobject)<SUB>933</SUB>> ]
   "3115" -> "3120" 
   "3115" -> "3133" 
   "3133" -> "3138" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/64-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/64-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/64-cfg.dot	2023-06-07 19:35:41.407383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/64-cfg.dot	2023-06-07 19:35:47.847382800 +0330
@@ -1,32 +1,32 @@
 digraph "CallBooleanMethod" {  
-"3180" [label = <(va_start,va_start(ap, mid))<SUB>944</SUB>> ]
-"3184" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>945</SUB>> ]
-"3187" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>946</SUB>> ]
-"3205" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>947</SUB>> ]
-"3224" [label = <(soa,soa(env))<SUB>948</SUB>> ]
-"3227" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>949</SUB>> ]
-"3233" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>950</SUB>> ]
-"3185" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>945</SUB>> ]
-"3228" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>949</SUB>> ]
-"3234" [label = <(GetZ,result.GetZ())<SUB>950</SUB>> ]
-"3235" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>950</SUB>> ]
-"3191" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>946</SUB>> ]
-"3209" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>947</SUB>> ]
-"3237" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>950</SUB>> ]
-"3192" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>946</SUB>> ]
-"3196" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>946</SUB>> ]
-"3203" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>946</SUB>> ]
-"3210" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>947</SUB>> ]
-"3214" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>947</SUB>> ]
-"3221" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>947</SUB>> ]
-"3197" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>946</SUB>> ]
-"3215" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>947</SUB>> ]
-"3198" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>946</SUB>> ]
-"3200" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>946</SUB>> ]
-"3216" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>947</SUB>> ]
-"3218" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>947</SUB>> ]
-"3174" [label = <(METHOD,CallBooleanMethod)<SUB>942</SUB>> ]
-"3238" [label = <(METHOD_RETURN,jboolean)<SUB>942</SUB>> ]
+"3180" [label = <(va_start,va_start(ap, mid))<SUB>943</SUB>> ]
+"3184" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>944</SUB>> ]
+"3187" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>945</SUB>> ]
+"3205" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>946</SUB>> ]
+"3224" [label = <(soa,soa(env))<SUB>947</SUB>> ]
+"3227" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>948</SUB>> ]
+"3233" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>949</SUB>> ]
+"3185" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>944</SUB>> ]
+"3228" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>948</SUB>> ]
+"3234" [label = <(GetZ,result.GetZ())<SUB>949</SUB>> ]
+"3235" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>949</SUB>> ]
+"3191" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>945</SUB>> ]
+"3209" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>946</SUB>> ]
+"3237" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>949</SUB>> ]
+"3192" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>945</SUB>> ]
+"3196" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>945</SUB>> ]
+"3203" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>945</SUB>> ]
+"3210" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>946</SUB>> ]
+"3214" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>946</SUB>> ]
+"3221" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>946</SUB>> ]
+"3197" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>945</SUB>> ]
+"3215" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>946</SUB>> ]
+"3198" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>945</SUB>> ]
+"3200" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>945</SUB>> ]
+"3216" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>946</SUB>> ]
+"3218" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>946</SUB>> ]
+"3174" [label = <(METHOD,CallBooleanMethod)<SUB>941</SUB>> ]
+"3238" [label = <(METHOD_RETURN,jboolean)<SUB>941</SUB>> ]
   "3180" -> "3185" 
   "3184" -> "3187" 
   "3187" -> "3192" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/65-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/65-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/65-cfg.dot	2023-06-07 19:35:41.407383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/65-cfg.dot	2023-06-07 19:35:47.847382800 +0330
@@ -1,28 +1,28 @@
 digraph "CallBooleanMethodV" {  
-"3246" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>954</SUB>> ]
-"3264" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>955</SUB>> ]
-"3283" [label = <(soa,soa(env))<SUB>956</SUB>> ]
-"3285" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>957</SUB>> ]
-"3286" [label = <(GetZ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ())<SUB>957</SUB>> ]
-"3287" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ)<SUB>957</SUB>> ]
-"3250" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>954</SUB>> ]
-"3268" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>955</SUB>> ]
-"3288" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>957</SUB>> ]
-"3293" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>957</SUB>> ]
-"3251" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>954</SUB>> ]
-"3255" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>954</SUB>> ]
-"3262" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>954</SUB>> ]
-"3269" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>955</SUB>> ]
-"3273" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>955</SUB>> ]
-"3280" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>955</SUB>> ]
-"3256" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>954</SUB>> ]
-"3274" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>955</SUB>> ]
-"3257" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>954</SUB>> ]
-"3259" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>954</SUB>> ]
-"3275" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>955</SUB>> ]
-"3277" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>955</SUB>> ]
-"3240" [label = <(METHOD,CallBooleanMethodV)<SUB>953</SUB>> ]
-"3294" [label = <(METHOD_RETURN,jboolean)<SUB>953</SUB>> ]
+"3246" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>953</SUB>> ]
+"3264" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>954</SUB>> ]
+"3283" [label = <(soa,soa(env))<SUB>955</SUB>> ]
+"3285" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>956</SUB>> ]
+"3286" [label = <(GetZ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ())<SUB>956</SUB>> ]
+"3287" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ)<SUB>956</SUB>> ]
+"3250" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>953</SUB>> ]
+"3268" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>954</SUB>> ]
+"3288" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>956</SUB>> ]
+"3293" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>956</SUB>> ]
+"3251" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>953</SUB>> ]
+"3255" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>953</SUB>> ]
+"3262" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>953</SUB>> ]
+"3269" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>954</SUB>> ]
+"3273" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>954</SUB>> ]
+"3280" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>954</SUB>> ]
+"3256" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>953</SUB>> ]
+"3274" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>954</SUB>> ]
+"3257" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>953</SUB>> ]
+"3259" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>953</SUB>> ]
+"3275" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>954</SUB>> ]
+"3277" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>954</SUB>> ]
+"3240" [label = <(METHOD,CallBooleanMethodV)<SUB>952</SUB>> ]
+"3294" [label = <(METHOD_RETURN,jboolean)<SUB>952</SUB>> ]
   "3246" -> "3251" 
   "3246" -> "3264" 
   "3264" -> "3269" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/66-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/66-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/66-cfg.dot	2023-06-07 19:35:41.407383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/66-cfg.dot	2023-06-07 19:35:47.847382800 +0330
@@ -1,28 +1,28 @@
 digraph "CallBooleanMethodA" {  
-"3302" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>961</SUB>> ]
-"3320" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>962</SUB>> ]
-"3339" [label = <(soa,soa(env))<SUB>963</SUB>> ]
-"3341" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();)<SUB>964</SUB>> ]
-"3342" [label = <(GetZ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ())<SUB>964</SUB>> ]
-"3343" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ)<SUB>964</SUB>> ]
-"3306" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>961</SUB>> ]
-"3324" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>962</SUB>> ]
-"3344" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>964</SUB>> ]
-"3349" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>964</SUB>> ]
-"3307" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>961</SUB>> ]
-"3311" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>961</SUB>> ]
-"3318" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>961</SUB>> ]
-"3325" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>962</SUB>> ]
-"3329" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>962</SUB>> ]
-"3336" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>962</SUB>> ]
-"3312" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>961</SUB>> ]
-"3330" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>962</SUB>> ]
-"3313" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>961</SUB>> ]
-"3315" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>961</SUB>> ]
-"3331" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>962</SUB>> ]
-"3333" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>962</SUB>> ]
-"3296" [label = <(METHOD,CallBooleanMethodA)<SUB>960</SUB>> ]
-"3350" [label = <(METHOD_RETURN,jboolean)<SUB>960</SUB>> ]
+"3302" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>960</SUB>> ]
+"3320" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>961</SUB>> ]
+"3339" [label = <(soa,soa(env))<SUB>962</SUB>> ]
+"3341" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();)<SUB>963</SUB>> ]
+"3342" [label = <(GetZ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ())<SUB>963</SUB>> ]
+"3343" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ)<SUB>963</SUB>> ]
+"3306" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>960</SUB>> ]
+"3324" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>961</SUB>> ]
+"3344" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>963</SUB>> ]
+"3349" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>963</SUB>> ]
+"3307" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>960</SUB>> ]
+"3311" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>960</SUB>> ]
+"3318" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>960</SUB>> ]
+"3325" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>961</SUB>> ]
+"3329" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>961</SUB>> ]
+"3336" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>961</SUB>> ]
+"3312" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>960</SUB>> ]
+"3330" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>961</SUB>> ]
+"3313" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>960</SUB>> ]
+"3315" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>960</SUB>> ]
+"3331" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>961</SUB>> ]
+"3333" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>961</SUB>> ]
+"3296" [label = <(METHOD,CallBooleanMethodA)<SUB>959</SUB>> ]
+"3350" [label = <(METHOD_RETURN,jboolean)<SUB>959</SUB>> ]
   "3302" -> "3307" 
   "3302" -> "3320" 
   "3320" -> "3325" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/67-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/67-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/67-cfg.dot	2023-06-07 19:35:41.407383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/67-cfg.dot	2023-06-07 19:35:47.847382800 +0330
@@ -1,32 +1,32 @@
 digraph "CallByteMethod" {  
-"3358" [label = <(va_start,va_start(ap, mid))<SUB>969</SUB>> ]
-"3362" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>970</SUB>> ]
-"3365" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>971</SUB>> ]
-"3383" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>972</SUB>> ]
-"3402" [label = <(soa,soa(env))<SUB>973</SUB>> ]
-"3405" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>974</SUB>> ]
-"3411" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>975</SUB>> ]
-"3363" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>970</SUB>> ]
-"3406" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>974</SUB>> ]
-"3412" [label = <(GetB,result.GetB())<SUB>975</SUB>> ]
-"3413" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>975</SUB>> ]
-"3369" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>971</SUB>> ]
-"3387" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>972</SUB>> ]
-"3415" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>975</SUB>> ]
-"3370" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>971</SUB>> ]
-"3374" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>971</SUB>> ]
-"3381" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>971</SUB>> ]
-"3388" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>972</SUB>> ]
-"3392" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>972</SUB>> ]
-"3399" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>972</SUB>> ]
-"3375" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>971</SUB>> ]
-"3393" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>972</SUB>> ]
-"3376" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>971</SUB>> ]
-"3378" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>971</SUB>> ]
-"3394" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>972</SUB>> ]
-"3396" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>972</SUB>> ]
-"3352" [label = <(METHOD,CallByteMethod)<SUB>967</SUB>> ]
-"3416" [label = <(METHOD_RETURN,jbyte)<SUB>967</SUB>> ]
+"3358" [label = <(va_start,va_start(ap, mid))<SUB>968</SUB>> ]
+"3362" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>969</SUB>> ]
+"3365" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>970</SUB>> ]
+"3383" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>971</SUB>> ]
+"3402" [label = <(soa,soa(env))<SUB>972</SUB>> ]
+"3405" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>973</SUB>> ]
+"3411" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>974</SUB>> ]
+"3363" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>969</SUB>> ]
+"3406" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>973</SUB>> ]
+"3412" [label = <(GetB,result.GetB())<SUB>974</SUB>> ]
+"3413" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>974</SUB>> ]
+"3369" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>970</SUB>> ]
+"3387" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>971</SUB>> ]
+"3415" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>974</SUB>> ]
+"3370" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>970</SUB>> ]
+"3374" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>970</SUB>> ]
+"3381" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>970</SUB>> ]
+"3388" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>971</SUB>> ]
+"3392" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>971</SUB>> ]
+"3399" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>971</SUB>> ]
+"3375" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>970</SUB>> ]
+"3393" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>971</SUB>> ]
+"3376" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>970</SUB>> ]
+"3378" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>970</SUB>> ]
+"3394" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>971</SUB>> ]
+"3396" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>971</SUB>> ]
+"3352" [label = <(METHOD,CallByteMethod)<SUB>966</SUB>> ]
+"3416" [label = <(METHOD_RETURN,jbyte)<SUB>966</SUB>> ]
   "3358" -> "3363" 
   "3362" -> "3365" 
   "3365" -> "3370" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/68-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/68-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/68-cfg.dot	2023-06-07 19:35:41.407383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/68-cfg.dot	2023-06-07 19:35:47.847382800 +0330
@@ -1,28 +1,28 @@
 digraph "CallByteMethodV" {  
-"3424" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>979</SUB>> ]
-"3442" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>980</SUB>> ]
-"3461" [label = <(soa,soa(env))<SUB>981</SUB>> ]
-"3463" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();)<SUB>982</SUB>> ]
-"3464" [label = <(GetB,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB())<SUB>982</SUB>> ]
-"3465" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB)<SUB>982</SUB>> ]
-"3428" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>979</SUB>> ]
-"3446" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>980</SUB>> ]
-"3466" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>982</SUB>> ]
-"3471" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>982</SUB>> ]
-"3429" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>979</SUB>> ]
-"3433" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>979</SUB>> ]
-"3440" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>979</SUB>> ]
-"3447" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>980</SUB>> ]
-"3451" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>980</SUB>> ]
-"3458" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>980</SUB>> ]
-"3434" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>979</SUB>> ]
-"3452" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>980</SUB>> ]
-"3435" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>979</SUB>> ]
-"3437" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>979</SUB>> ]
-"3453" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>980</SUB>> ]
-"3455" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>980</SUB>> ]
-"3418" [label = <(METHOD,CallByteMethodV)<SUB>978</SUB>> ]
-"3472" [label = <(METHOD_RETURN,jbyte)<SUB>978</SUB>> ]
+"3424" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>978</SUB>> ]
+"3442" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>979</SUB>> ]
+"3461" [label = <(soa,soa(env))<SUB>980</SUB>> ]
+"3463" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();)<SUB>981</SUB>> ]
+"3464" [label = <(GetB,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB())<SUB>981</SUB>> ]
+"3465" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB)<SUB>981</SUB>> ]
+"3428" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>978</SUB>> ]
+"3446" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>979</SUB>> ]
+"3466" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>981</SUB>> ]
+"3471" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>981</SUB>> ]
+"3429" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>978</SUB>> ]
+"3433" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>978</SUB>> ]
+"3440" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>978</SUB>> ]
+"3447" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>979</SUB>> ]
+"3451" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>979</SUB>> ]
+"3458" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>979</SUB>> ]
+"3434" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>978</SUB>> ]
+"3452" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>979</SUB>> ]
+"3435" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>978</SUB>> ]
+"3437" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>978</SUB>> ]
+"3453" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>979</SUB>> ]
+"3455" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>979</SUB>> ]
+"3418" [label = <(METHOD,CallByteMethodV)<SUB>977</SUB>> ]
+"3472" [label = <(METHOD_RETURN,jbyte)<SUB>977</SUB>> ]
   "3424" -> "3429" 
   "3424" -> "3442" 
   "3442" -> "3447" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/69-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/69-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/69-cfg.dot	2023-06-07 19:35:41.407383231 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/69-cfg.dot	2023-06-07 19:35:47.847382800 +0330
@@ -1,28 +1,28 @@
 digraph "CallByteMethodA" {  
-"3480" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>986</SUB>> ]
-"3498" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>987</SUB>> ]
-"3517" [label = <(soa,soa(env))<SUB>988</SUB>> ]
-"3519" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();)<SUB>989</SUB>> ]
-"3520" [label = <(GetB,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB())<SUB>989</SUB>> ]
-"3521" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB)<SUB>989</SUB>> ]
-"3484" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>986</SUB>> ]
-"3502" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>987</SUB>> ]
-"3522" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>989</SUB>> ]
-"3527" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>989</SUB>> ]
-"3485" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>986</SUB>> ]
-"3489" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>986</SUB>> ]
-"3496" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>986</SUB>> ]
-"3503" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>987</SUB>> ]
-"3507" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>987</SUB>> ]
-"3514" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>987</SUB>> ]
-"3490" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>986</SUB>> ]
-"3508" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>987</SUB>> ]
-"3491" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>986</SUB>> ]
-"3493" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>986</SUB>> ]
-"3509" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>987</SUB>> ]
-"3511" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>987</SUB>> ]
-"3474" [label = <(METHOD,CallByteMethodA)<SUB>985</SUB>> ]
-"3528" [label = <(METHOD_RETURN,jbyte)<SUB>985</SUB>> ]
+"3480" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>985</SUB>> ]
+"3498" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>986</SUB>> ]
+"3517" [label = <(soa,soa(env))<SUB>987</SUB>> ]
+"3519" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();)<SUB>988</SUB>> ]
+"3520" [label = <(GetB,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB())<SUB>988</SUB>> ]
+"3521" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB)<SUB>988</SUB>> ]
+"3484" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>985</SUB>> ]
+"3502" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>986</SUB>> ]
+"3522" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>988</SUB>> ]
+"3527" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>988</SUB>> ]
+"3485" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>985</SUB>> ]
+"3489" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>985</SUB>> ]
+"3496" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>985</SUB>> ]
+"3503" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>986</SUB>> ]
+"3507" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>986</SUB>> ]
+"3514" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>986</SUB>> ]
+"3490" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>985</SUB>> ]
+"3508" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>986</SUB>> ]
+"3491" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>985</SUB>> ]
+"3493" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>985</SUB>> ]
+"3509" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>986</SUB>> ]
+"3511" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>986</SUB>> ]
+"3474" [label = <(METHOD,CallByteMethodA)<SUB>984</SUB>> ]
+"3528" [label = <(METHOD_RETURN,jbyte)<SUB>984</SUB>> ]
   "3480" -> "3485" 
   "3480" -> "3498" 
   "3498" -> "3503" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/7-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/7-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/7-cfg.dot	2023-06-07 19:35:41.337383234 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/7-cfg.dot	2023-06-07 19:35:47.777382805 +0330
@@ -1,8 +1,8 @@
 digraph "~ScopedVAArgs" {  
-"42" [label = <(va_end,va_end(*args))<SUB>78</SUB>> ]
-"43" [label = <(&lt;operator&gt;.indirection,*args)<SUB>78</SUB>> ]
-"40" [label = <(METHOD,~ScopedVAArgs)<SUB>78</SUB>> ]
-"45" [label = <(METHOD_RETURN,ANY)<SUB>78</SUB>> ]
+"42" [label = <(va_end,va_end(*args))<SUB>77</SUB>> ]
+"43" [label = <(&lt;operator&gt;.indirection,*args)<SUB>77</SUB>> ]
+"40" [label = <(METHOD,~ScopedVAArgs)<SUB>77</SUB>> ]
+"45" [label = <(METHOD_RETURN,ANY)<SUB>77</SUB>> ]
   "42" -> "45" 
   "43" -> "42" 
   "40" -> "43" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/70-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/70-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/70-cfg.dot	2023-06-07 19:35:41.417383229 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/70-cfg.dot	2023-06-07 19:35:47.857382799 +0330
@@ -1,32 +1,32 @@
 digraph "CallCharMethod" {  
-"3536" [label = <(va_start,va_start(ap, mid))<SUB>994</SUB>> ]
-"3540" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>995</SUB>> ]
-"3543" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>996</SUB>> ]
-"3561" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>997</SUB>> ]
-"3580" [label = <(soa,soa(env))<SUB>998</SUB>> ]
-"3583" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>999</SUB>> ]
-"3589" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1000</SUB>> ]
-"3541" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>995</SUB>> ]
-"3584" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>999</SUB>> ]
-"3590" [label = <(GetC,result.GetC())<SUB>1000</SUB>> ]
-"3591" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1000</SUB>> ]
-"3547" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>996</SUB>> ]
-"3565" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>997</SUB>> ]
-"3593" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1000</SUB>> ]
-"3548" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>996</SUB>> ]
-"3552" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>996</SUB>> ]
-"3559" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>996</SUB>> ]
-"3566" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>997</SUB>> ]
-"3570" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>997</SUB>> ]
-"3577" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>997</SUB>> ]
-"3553" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>996</SUB>> ]
-"3571" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>997</SUB>> ]
-"3554" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>996</SUB>> ]
-"3556" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>996</SUB>> ]
-"3572" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>997</SUB>> ]
-"3574" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>997</SUB>> ]
-"3530" [label = <(METHOD,CallCharMethod)<SUB>992</SUB>> ]
-"3594" [label = <(METHOD_RETURN,jchar)<SUB>992</SUB>> ]
+"3536" [label = <(va_start,va_start(ap, mid))<SUB>993</SUB>> ]
+"3540" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>994</SUB>> ]
+"3543" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>995</SUB>> ]
+"3561" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>996</SUB>> ]
+"3580" [label = <(soa,soa(env))<SUB>997</SUB>> ]
+"3583" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>998</SUB>> ]
+"3589" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>999</SUB>> ]
+"3541" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>994</SUB>> ]
+"3584" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>998</SUB>> ]
+"3590" [label = <(GetC,result.GetC())<SUB>999</SUB>> ]
+"3591" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>999</SUB>> ]
+"3547" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>995</SUB>> ]
+"3565" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>996</SUB>> ]
+"3593" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>999</SUB>> ]
+"3548" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>995</SUB>> ]
+"3552" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>995</SUB>> ]
+"3559" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>995</SUB>> ]
+"3566" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>996</SUB>> ]
+"3570" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>996</SUB>> ]
+"3577" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>996</SUB>> ]
+"3553" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>995</SUB>> ]
+"3571" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>996</SUB>> ]
+"3554" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>995</SUB>> ]
+"3556" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>995</SUB>> ]
+"3572" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>996</SUB>> ]
+"3574" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>996</SUB>> ]
+"3530" [label = <(METHOD,CallCharMethod)<SUB>991</SUB>> ]
+"3594" [label = <(METHOD_RETURN,jchar)<SUB>991</SUB>> ]
   "3536" -> "3541" 
   "3540" -> "3543" 
   "3543" -> "3548" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/71-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/71-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/71-cfg.dot	2023-06-07 19:35:41.417383229 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/71-cfg.dot	2023-06-07 19:35:47.857382799 +0330
@@ -1,28 +1,28 @@
 digraph "CallCharMethodV" {  
-"3602" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1004</SUB>> ]
-"3620" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1005</SUB>> ]
-"3639" [label = <(soa,soa(env))<SUB>1006</SUB>> ]
-"3641" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1007</SUB>> ]
-"3642" [label = <(GetC,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC())<SUB>1007</SUB>> ]
-"3643" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC)<SUB>1007</SUB>> ]
-"3606" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1004</SUB>> ]
-"3624" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1005</SUB>> ]
-"3644" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1007</SUB>> ]
-"3649" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1007</SUB>> ]
-"3607" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1004</SUB>> ]
-"3611" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1004</SUB>> ]
-"3618" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1004</SUB>> ]
-"3625" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1005</SUB>> ]
-"3629" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1005</SUB>> ]
-"3636" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1005</SUB>> ]
-"3612" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1004</SUB>> ]
-"3630" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1005</SUB>> ]
-"3613" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1004</SUB>> ]
-"3615" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1004</SUB>> ]
-"3631" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1005</SUB>> ]
-"3633" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1005</SUB>> ]
-"3596" [label = <(METHOD,CallCharMethodV)<SUB>1003</SUB>> ]
-"3650" [label = <(METHOD_RETURN,jchar)<SUB>1003</SUB>> ]
+"3602" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1003</SUB>> ]
+"3620" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1004</SUB>> ]
+"3639" [label = <(soa,soa(env))<SUB>1005</SUB>> ]
+"3641" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1006</SUB>> ]
+"3642" [label = <(GetC,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC())<SUB>1006</SUB>> ]
+"3643" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC)<SUB>1006</SUB>> ]
+"3606" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1003</SUB>> ]
+"3624" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1004</SUB>> ]
+"3644" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1006</SUB>> ]
+"3649" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1006</SUB>> ]
+"3607" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1003</SUB>> ]
+"3611" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1003</SUB>> ]
+"3618" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1003</SUB>> ]
+"3625" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1004</SUB>> ]
+"3629" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1004</SUB>> ]
+"3636" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1004</SUB>> ]
+"3612" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1003</SUB>> ]
+"3630" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1004</SUB>> ]
+"3613" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1003</SUB>> ]
+"3615" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1003</SUB>> ]
+"3631" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1004</SUB>> ]
+"3633" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1004</SUB>> ]
+"3596" [label = <(METHOD,CallCharMethodV)<SUB>1002</SUB>> ]
+"3650" [label = <(METHOD_RETURN,jchar)<SUB>1002</SUB>> ]
   "3602" -> "3607" 
   "3602" -> "3620" 
   "3620" -> "3625" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/72-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/72-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/72-cfg.dot	2023-06-07 19:35:41.417383229 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/72-cfg.dot	2023-06-07 19:35:47.857382799 +0330
@@ -1,28 +1,28 @@
 digraph "CallCharMethodA" {  
-"3658" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1011</SUB>> ]
-"3676" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1012</SUB>> ]
-"3695" [label = <(soa,soa(env))<SUB>1013</SUB>> ]
-"3697" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();)<SUB>1014</SUB>> ]
-"3698" [label = <(GetC,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC())<SUB>1014</SUB>> ]
-"3699" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC)<SUB>1014</SUB>> ]
-"3662" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1011</SUB>> ]
-"3680" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1012</SUB>> ]
-"3700" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1014</SUB>> ]
-"3705" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1014</SUB>> ]
-"3663" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1011</SUB>> ]
-"3667" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1011</SUB>> ]
-"3674" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1011</SUB>> ]
-"3681" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1012</SUB>> ]
-"3685" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1012</SUB>> ]
-"3692" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1012</SUB>> ]
-"3668" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1011</SUB>> ]
-"3686" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1012</SUB>> ]
-"3669" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1011</SUB>> ]
-"3671" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1011</SUB>> ]
-"3687" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1012</SUB>> ]
-"3689" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1012</SUB>> ]
-"3652" [label = <(METHOD,CallCharMethodA)<SUB>1010</SUB>> ]
-"3706" [label = <(METHOD_RETURN,jchar)<SUB>1010</SUB>> ]
+"3658" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1010</SUB>> ]
+"3676" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1011</SUB>> ]
+"3695" [label = <(soa,soa(env))<SUB>1012</SUB>> ]
+"3697" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();)<SUB>1013</SUB>> ]
+"3698" [label = <(GetC,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC())<SUB>1013</SUB>> ]
+"3699" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC)<SUB>1013</SUB>> ]
+"3662" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1010</SUB>> ]
+"3680" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1011</SUB>> ]
+"3700" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1013</SUB>> ]
+"3705" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1013</SUB>> ]
+"3663" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1010</SUB>> ]
+"3667" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1010</SUB>> ]
+"3674" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1010</SUB>> ]
+"3681" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1011</SUB>> ]
+"3685" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1011</SUB>> ]
+"3692" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1011</SUB>> ]
+"3668" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1010</SUB>> ]
+"3686" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1011</SUB>> ]
+"3669" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1010</SUB>> ]
+"3671" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1010</SUB>> ]
+"3687" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1011</SUB>> ]
+"3689" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1011</SUB>> ]
+"3652" [label = <(METHOD,CallCharMethodA)<SUB>1009</SUB>> ]
+"3706" [label = <(METHOD_RETURN,jchar)<SUB>1009</SUB>> ]
   "3658" -> "3663" 
   "3658" -> "3676" 
   "3676" -> "3681" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/73-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/73-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/73-cfg.dot	2023-06-07 19:35:41.417383229 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/73-cfg.dot	2023-06-07 19:35:47.857382799 +0330
@@ -1,32 +1,32 @@
 digraph "CallDoubleMethod" {  
-"3714" [label = <(va_start,va_start(ap, mid))<SUB>1019</SUB>> ]
-"3718" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1020</SUB>> ]
-"3721" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1021</SUB>> ]
-"3739" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1022</SUB>> ]
-"3758" [label = <(soa,soa(env))<SUB>1023</SUB>> ]
-"3761" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1024</SUB>> ]
-"3767" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1025</SUB>> ]
-"3719" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1020</SUB>> ]
-"3762" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1024</SUB>> ]
-"3768" [label = <(GetD,result.GetD())<SUB>1025</SUB>> ]
-"3769" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1025</SUB>> ]
-"3725" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1021</SUB>> ]
-"3743" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1022</SUB>> ]
-"3771" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1025</SUB>> ]
-"3726" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1021</SUB>> ]
-"3730" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1021</SUB>> ]
-"3737" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1021</SUB>> ]
-"3744" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1022</SUB>> ]
-"3748" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1022</SUB>> ]
-"3755" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1022</SUB>> ]
-"3731" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1021</SUB>> ]
-"3749" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1022</SUB>> ]
-"3732" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1021</SUB>> ]
-"3734" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1021</SUB>> ]
-"3750" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1022</SUB>> ]
-"3752" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1022</SUB>> ]
-"3708" [label = <(METHOD,CallDoubleMethod)<SUB>1017</SUB>> ]
-"3772" [label = <(METHOD_RETURN,jdouble)<SUB>1017</SUB>> ]
+"3714" [label = <(va_start,va_start(ap, mid))<SUB>1018</SUB>> ]
+"3718" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1019</SUB>> ]
+"3721" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1020</SUB>> ]
+"3739" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1021</SUB>> ]
+"3758" [label = <(soa,soa(env))<SUB>1022</SUB>> ]
+"3761" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1023</SUB>> ]
+"3767" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1024</SUB>> ]
+"3719" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1019</SUB>> ]
+"3762" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1023</SUB>> ]
+"3768" [label = <(GetD,result.GetD())<SUB>1024</SUB>> ]
+"3769" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1024</SUB>> ]
+"3725" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1020</SUB>> ]
+"3743" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1021</SUB>> ]
+"3771" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1024</SUB>> ]
+"3726" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1020</SUB>> ]
+"3730" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1020</SUB>> ]
+"3737" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1020</SUB>> ]
+"3744" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1021</SUB>> ]
+"3748" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1021</SUB>> ]
+"3755" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1021</SUB>> ]
+"3731" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1020</SUB>> ]
+"3749" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1021</SUB>> ]
+"3732" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1020</SUB>> ]
+"3734" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1020</SUB>> ]
+"3750" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1021</SUB>> ]
+"3752" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1021</SUB>> ]
+"3708" [label = <(METHOD,CallDoubleMethod)<SUB>1016</SUB>> ]
+"3772" [label = <(METHOD_RETURN,jdouble)<SUB>1016</SUB>> ]
   "3714" -> "3719" 
   "3718" -> "3721" 
   "3721" -> "3726" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/74-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/74-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/74-cfg.dot	2023-06-07 19:35:41.417383229 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/74-cfg.dot	2023-06-07 19:35:47.857382799 +0330
@@ -1,28 +1,28 @@
 digraph "CallDoubleMethodV" {  
-"3780" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1029</SUB>> ]
-"3798" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1030</SUB>> ]
-"3817" [label = <(soa,soa(env))<SUB>1031</SUB>> ]
-"3819" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1032</SUB>> ]
-"3820" [label = <(GetD,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD())<SUB>1032</SUB>> ]
-"3821" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD)<SUB>1032</SUB>> ]
-"3784" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1029</SUB>> ]
-"3802" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1030</SUB>> ]
-"3822" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1032</SUB>> ]
-"3827" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1032</SUB>> ]
-"3785" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1029</SUB>> ]
-"3789" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1029</SUB>> ]
-"3796" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1029</SUB>> ]
-"3803" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1030</SUB>> ]
-"3807" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1030</SUB>> ]
-"3814" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1030</SUB>> ]
-"3790" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1029</SUB>> ]
-"3808" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1030</SUB>> ]
-"3791" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1029</SUB>> ]
-"3793" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1029</SUB>> ]
-"3809" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1030</SUB>> ]
-"3811" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1030</SUB>> ]
-"3774" [label = <(METHOD,CallDoubleMethodV)<SUB>1028</SUB>> ]
-"3828" [label = <(METHOD_RETURN,jdouble)<SUB>1028</SUB>> ]
+"3780" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1028</SUB>> ]
+"3798" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1029</SUB>> ]
+"3817" [label = <(soa,soa(env))<SUB>1030</SUB>> ]
+"3819" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1031</SUB>> ]
+"3820" [label = <(GetD,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD())<SUB>1031</SUB>> ]
+"3821" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD)<SUB>1031</SUB>> ]
+"3784" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1028</SUB>> ]
+"3802" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1029</SUB>> ]
+"3822" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1031</SUB>> ]
+"3827" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1031</SUB>> ]
+"3785" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1028</SUB>> ]
+"3789" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1028</SUB>> ]
+"3796" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1028</SUB>> ]
+"3803" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1029</SUB>> ]
+"3807" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1029</SUB>> ]
+"3814" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1029</SUB>> ]
+"3790" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1028</SUB>> ]
+"3808" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1029</SUB>> ]
+"3791" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1028</SUB>> ]
+"3793" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1028</SUB>> ]
+"3809" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1029</SUB>> ]
+"3811" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1029</SUB>> ]
+"3774" [label = <(METHOD,CallDoubleMethodV)<SUB>1027</SUB>> ]
+"3828" [label = <(METHOD_RETURN,jdouble)<SUB>1027</SUB>> ]
   "3780" -> "3785" 
   "3780" -> "3798" 
   "3798" -> "3803" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/75-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/75-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/75-cfg.dot	2023-06-07 19:35:41.417383229 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/75-cfg.dot	2023-06-07 19:35:47.857382799 +0330
@@ -1,28 +1,28 @@
 digraph "CallDoubleMethodA" {  
-"3836" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1036</SUB>> ]
-"3854" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1037</SUB>> ]
-"3873" [label = <(soa,soa(env))<SUB>1038</SUB>> ]
-"3875" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();)<SUB>1039</SUB>> ]
-"3876" [label = <(GetD,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD())<SUB>1039</SUB>> ]
-"3877" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD)<SUB>1039</SUB>> ]
-"3840" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1036</SUB>> ]
-"3858" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1037</SUB>> ]
-"3878" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1039</SUB>> ]
-"3883" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1039</SUB>> ]
-"3841" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1036</SUB>> ]
-"3845" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1036</SUB>> ]
-"3852" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1036</SUB>> ]
-"3859" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1037</SUB>> ]
-"3863" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1037</SUB>> ]
-"3870" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1037</SUB>> ]
-"3846" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1036</SUB>> ]
-"3864" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1037</SUB>> ]
-"3847" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1036</SUB>> ]
-"3849" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1036</SUB>> ]
-"3865" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1037</SUB>> ]
-"3867" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1037</SUB>> ]
-"3830" [label = <(METHOD,CallDoubleMethodA)<SUB>1035</SUB>> ]
-"3884" [label = <(METHOD_RETURN,jdouble)<SUB>1035</SUB>> ]
+"3836" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1035</SUB>> ]
+"3854" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1036</SUB>> ]
+"3873" [label = <(soa,soa(env))<SUB>1037</SUB>> ]
+"3875" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();)<SUB>1038</SUB>> ]
+"3876" [label = <(GetD,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD())<SUB>1038</SUB>> ]
+"3877" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD)<SUB>1038</SUB>> ]
+"3840" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1035</SUB>> ]
+"3858" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1036</SUB>> ]
+"3878" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1038</SUB>> ]
+"3883" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1038</SUB>> ]
+"3841" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1035</SUB>> ]
+"3845" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1035</SUB>> ]
+"3852" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1035</SUB>> ]
+"3859" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1036</SUB>> ]
+"3863" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1036</SUB>> ]
+"3870" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1036</SUB>> ]
+"3846" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1035</SUB>> ]
+"3864" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1036</SUB>> ]
+"3847" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1035</SUB>> ]
+"3849" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1035</SUB>> ]
+"3865" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1036</SUB>> ]
+"3867" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1036</SUB>> ]
+"3830" [label = <(METHOD,CallDoubleMethodA)<SUB>1034</SUB>> ]
+"3884" [label = <(METHOD_RETURN,jdouble)<SUB>1034</SUB>> ]
   "3836" -> "3841" 
   "3836" -> "3854" 
   "3854" -> "3859" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/76-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/76-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/76-cfg.dot	2023-06-07 19:35:41.417383229 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/76-cfg.dot	2023-06-07 19:35:47.857382799 +0330
@@ -1,32 +1,32 @@
 digraph "CallFloatMethod" {  
-"3892" [label = <(va_start,va_start(ap, mid))<SUB>1044</SUB>> ]
-"3896" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1045</SUB>> ]
-"3899" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1046</SUB>> ]
-"3917" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1047</SUB>> ]
-"3936" [label = <(soa,soa(env))<SUB>1048</SUB>> ]
-"3939" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1049</SUB>> ]
-"3945" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1050</SUB>> ]
-"3897" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1045</SUB>> ]
-"3940" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1049</SUB>> ]
-"3946" [label = <(GetF,result.GetF())<SUB>1050</SUB>> ]
-"3947" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1050</SUB>> ]
-"3903" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1046</SUB>> ]
-"3921" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1047</SUB>> ]
-"3949" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1050</SUB>> ]
-"3904" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1046</SUB>> ]
-"3908" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1046</SUB>> ]
-"3915" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1046</SUB>> ]
-"3922" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1047</SUB>> ]
-"3926" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1047</SUB>> ]
-"3933" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1047</SUB>> ]
-"3909" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1046</SUB>> ]
-"3927" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1047</SUB>> ]
-"3910" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1046</SUB>> ]
-"3912" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1046</SUB>> ]
-"3928" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1047</SUB>> ]
-"3930" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1047</SUB>> ]
-"3886" [label = <(METHOD,CallFloatMethod)<SUB>1042</SUB>> ]
-"3950" [label = <(METHOD_RETURN,jfloat)<SUB>1042</SUB>> ]
+"3892" [label = <(va_start,va_start(ap, mid))<SUB>1043</SUB>> ]
+"3896" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1044</SUB>> ]
+"3899" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1045</SUB>> ]
+"3917" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1046</SUB>> ]
+"3936" [label = <(soa,soa(env))<SUB>1047</SUB>> ]
+"3939" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1048</SUB>> ]
+"3945" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1049</SUB>> ]
+"3897" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1044</SUB>> ]
+"3940" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1048</SUB>> ]
+"3946" [label = <(GetF,result.GetF())<SUB>1049</SUB>> ]
+"3947" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1049</SUB>> ]
+"3903" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1045</SUB>> ]
+"3921" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1046</SUB>> ]
+"3949" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1049</SUB>> ]
+"3904" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1045</SUB>> ]
+"3908" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1045</SUB>> ]
+"3915" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1045</SUB>> ]
+"3922" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1046</SUB>> ]
+"3926" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1046</SUB>> ]
+"3933" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1046</SUB>> ]
+"3909" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1045</SUB>> ]
+"3927" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1046</SUB>> ]
+"3910" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1045</SUB>> ]
+"3912" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1045</SUB>> ]
+"3928" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1046</SUB>> ]
+"3930" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1046</SUB>> ]
+"3886" [label = <(METHOD,CallFloatMethod)<SUB>1041</SUB>> ]
+"3950" [label = <(METHOD_RETURN,jfloat)<SUB>1041</SUB>> ]
   "3892" -> "3897" 
   "3896" -> "3899" 
   "3899" -> "3904" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/77-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/77-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/77-cfg.dot	2023-06-07 19:35:41.417383229 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/77-cfg.dot	2023-06-07 19:35:47.867382796 +0330
@@ -1,28 +1,28 @@
 digraph "CallFloatMethodV" {  
-"3958" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1054</SUB>> ]
-"3976" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1055</SUB>> ]
-"3995" [label = <(soa,soa(env))<SUB>1056</SUB>> ]
-"3997" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1057</SUB>> ]
-"3998" [label = <(GetF,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF())<SUB>1057</SUB>> ]
-"3999" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF)<SUB>1057</SUB>> ]
-"3962" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1054</SUB>> ]
-"3980" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1055</SUB>> ]
-"4000" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1057</SUB>> ]
-"4005" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1057</SUB>> ]
-"3963" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1054</SUB>> ]
-"3967" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1054</SUB>> ]
-"3974" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1054</SUB>> ]
-"3981" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1055</SUB>> ]
-"3985" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1055</SUB>> ]
-"3992" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1055</SUB>> ]
-"3968" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1054</SUB>> ]
-"3986" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1055</SUB>> ]
-"3969" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1054</SUB>> ]
-"3971" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1054</SUB>> ]
-"3987" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1055</SUB>> ]
-"3989" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1055</SUB>> ]
-"3952" [label = <(METHOD,CallFloatMethodV)<SUB>1053</SUB>> ]
-"4006" [label = <(METHOD_RETURN,jfloat)<SUB>1053</SUB>> ]
+"3958" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1053</SUB>> ]
+"3976" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1054</SUB>> ]
+"3995" [label = <(soa,soa(env))<SUB>1055</SUB>> ]
+"3997" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1056</SUB>> ]
+"3998" [label = <(GetF,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF())<SUB>1056</SUB>> ]
+"3999" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF)<SUB>1056</SUB>> ]
+"3962" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1053</SUB>> ]
+"3980" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1054</SUB>> ]
+"4000" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1056</SUB>> ]
+"4005" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1056</SUB>> ]
+"3963" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1053</SUB>> ]
+"3967" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1053</SUB>> ]
+"3974" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1053</SUB>> ]
+"3981" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1054</SUB>> ]
+"3985" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1054</SUB>> ]
+"3992" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1054</SUB>> ]
+"3968" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1053</SUB>> ]
+"3986" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1054</SUB>> ]
+"3969" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1053</SUB>> ]
+"3971" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1053</SUB>> ]
+"3987" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1054</SUB>> ]
+"3989" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1054</SUB>> ]
+"3952" [label = <(METHOD,CallFloatMethodV)<SUB>1052</SUB>> ]
+"4006" [label = <(METHOD_RETURN,jfloat)<SUB>1052</SUB>> ]
   "3958" -> "3963" 
   "3958" -> "3976" 
   "3976" -> "3981" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/78-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/78-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/78-cfg.dot	2023-06-07 19:35:41.417383229 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/78-cfg.dot	2023-06-07 19:35:47.867382796 +0330
@@ -1,28 +1,28 @@
 digraph "CallFloatMethodA" {  
-"4014" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1061</SUB>> ]
-"4032" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1062</SUB>> ]
-"4051" [label = <(soa,soa(env))<SUB>1063</SUB>> ]
-"4053" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();)<SUB>1064</SUB>> ]
-"4054" [label = <(GetF,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF())<SUB>1064</SUB>> ]
-"4055" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF)<SUB>1064</SUB>> ]
-"4018" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1061</SUB>> ]
-"4036" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1062</SUB>> ]
-"4056" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1064</SUB>> ]
-"4061" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1064</SUB>> ]
-"4019" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1061</SUB>> ]
-"4023" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1061</SUB>> ]
-"4030" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1061</SUB>> ]
-"4037" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1062</SUB>> ]
-"4041" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1062</SUB>> ]
-"4048" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1062</SUB>> ]
-"4024" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1061</SUB>> ]
-"4042" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1062</SUB>> ]
-"4025" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1061</SUB>> ]
-"4027" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1061</SUB>> ]
-"4043" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1062</SUB>> ]
-"4045" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1062</SUB>> ]
-"4008" [label = <(METHOD,CallFloatMethodA)<SUB>1060</SUB>> ]
-"4062" [label = <(METHOD_RETURN,jfloat)<SUB>1060</SUB>> ]
+"4014" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1060</SUB>> ]
+"4032" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1061</SUB>> ]
+"4051" [label = <(soa,soa(env))<SUB>1062</SUB>> ]
+"4053" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();)<SUB>1063</SUB>> ]
+"4054" [label = <(GetF,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF())<SUB>1063</SUB>> ]
+"4055" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF)<SUB>1063</SUB>> ]
+"4018" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1060</SUB>> ]
+"4036" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1061</SUB>> ]
+"4056" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1063</SUB>> ]
+"4061" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1063</SUB>> ]
+"4019" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1060</SUB>> ]
+"4023" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1060</SUB>> ]
+"4030" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1060</SUB>> ]
+"4037" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1061</SUB>> ]
+"4041" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1061</SUB>> ]
+"4048" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1061</SUB>> ]
+"4024" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1060</SUB>> ]
+"4042" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1061</SUB>> ]
+"4025" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1060</SUB>> ]
+"4027" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1060</SUB>> ]
+"4043" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1061</SUB>> ]
+"4045" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1061</SUB>> ]
+"4008" [label = <(METHOD,CallFloatMethodA)<SUB>1059</SUB>> ]
+"4062" [label = <(METHOD_RETURN,jfloat)<SUB>1059</SUB>> ]
   "4014" -> "4019" 
   "4014" -> "4032" 
   "4032" -> "4037" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/79-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/79-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/79-cfg.dot	2023-06-07 19:35:41.417383229 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/79-cfg.dot	2023-06-07 19:35:47.867382796 +0330
@@ -1,32 +1,32 @@
 digraph "CallIntMethod" {  
-"4070" [label = <(va_start,va_start(ap, mid))<SUB>1069</SUB>> ]
-"4074" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1070</SUB>> ]
-"4077" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1071</SUB>> ]
-"4095" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1072</SUB>> ]
-"4114" [label = <(soa,soa(env))<SUB>1073</SUB>> ]
-"4117" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1074</SUB>> ]
-"4123" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1075</SUB>> ]
-"4075" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1070</SUB>> ]
-"4118" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1074</SUB>> ]
-"4124" [label = <(GetI,result.GetI())<SUB>1075</SUB>> ]
-"4125" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1075</SUB>> ]
-"4081" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1071</SUB>> ]
-"4099" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1072</SUB>> ]
-"4127" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1075</SUB>> ]
-"4082" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1071</SUB>> ]
-"4086" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1071</SUB>> ]
-"4093" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1071</SUB>> ]
-"4100" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1072</SUB>> ]
-"4104" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1072</SUB>> ]
-"4111" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1072</SUB>> ]
-"4087" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1071</SUB>> ]
-"4105" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1072</SUB>> ]
-"4088" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1071</SUB>> ]
-"4090" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1071</SUB>> ]
-"4106" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1072</SUB>> ]
-"4108" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1072</SUB>> ]
-"4064" [label = <(METHOD,CallIntMethod)<SUB>1067</SUB>> ]
-"4128" [label = <(METHOD_RETURN,jint)<SUB>1067</SUB>> ]
+"4070" [label = <(va_start,va_start(ap, mid))<SUB>1068</SUB>> ]
+"4074" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1069</SUB>> ]
+"4077" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1070</SUB>> ]
+"4095" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1071</SUB>> ]
+"4114" [label = <(soa,soa(env))<SUB>1072</SUB>> ]
+"4117" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1073</SUB>> ]
+"4123" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1074</SUB>> ]
+"4075" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1069</SUB>> ]
+"4118" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1073</SUB>> ]
+"4124" [label = <(GetI,result.GetI())<SUB>1074</SUB>> ]
+"4125" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1074</SUB>> ]
+"4081" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1070</SUB>> ]
+"4099" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1071</SUB>> ]
+"4127" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1074</SUB>> ]
+"4082" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1070</SUB>> ]
+"4086" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1070</SUB>> ]
+"4093" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1070</SUB>> ]
+"4100" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1071</SUB>> ]
+"4104" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1071</SUB>> ]
+"4111" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1071</SUB>> ]
+"4087" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1070</SUB>> ]
+"4105" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1071</SUB>> ]
+"4088" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1070</SUB>> ]
+"4090" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1070</SUB>> ]
+"4106" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1071</SUB>> ]
+"4108" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1071</SUB>> ]
+"4064" [label = <(METHOD,CallIntMethod)<SUB>1066</SUB>> ]
+"4128" [label = <(METHOD_RETURN,jint)<SUB>1066</SUB>> ]
   "4070" -> "4075" 
   "4074" -> "4077" 
   "4077" -> "4082" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/8-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/8-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/8-cfg.dot	2023-06-07 19:35:41.347383235 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/8-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,72 +1,72 @@
 digraph "VisitModifiedUtf8Chars" {  
-"58" [label = <(DCHECK_LE,DCHECK_LE(byte_count, strlen(utf8)))<SUB>97</SUB>> ]
-"63" [label = <(&lt;operator&gt;.assignment,len = 0)<SUB>98</SUB>> ]
-"67" [label = <(&lt;operator&gt;.assignment,* end = utf8 + byte_count)<SUB>99</SUB>> ]
-"223" [label = <(RETURN,return len;,return len;)<SUB>157</SUB>> ]
-"60" [label = <(strlen,strlen(utf8))<SUB>97</SUB>> ]
-"69" [label = <(&lt;operator&gt;.addition,utf8 + byte_count)<SUB>99</SUB>> ]
-"73" [label = <(&lt;operator&gt;.notEquals,utf8 != end)<SUB>100</SUB>> ]
-"78" [label = <(&lt;operator&gt;.assignment,ic = *utf8)<SUB>101</SUB>> ]
-"101" [label = <(&lt;operator&gt;.assignment,is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>109</SUB>> ]
-"214" [label = <(good,good(utf8, 4u))<SUB>153</SUB>> ]
-"217" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 4u)<SUB>154</SUB>> ]
-"220" [label = <(&lt;operator&gt;.assignmentPlus,len += 2u)<SUB>155</SUB>> ]
-"80" [label = <(&lt;operator&gt;.indirection,*utf8)<SUB>101</SUB>> ]
-"83" [label = <(LIKELY,LIKELY((ic &amp; 0x80) == 0))<SUB>102</SUB>> ]
-"103" [label = <(METHOD_REF,ANY anonymous_lambda_8 (),is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>109</SUB>> ]
-"105" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x20) == 0)<SUB>115</SUB>> ]
-"152" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x10) == 0)<SUB>131</SUB>> ]
-"199" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 4u)<SUB>150</SUB>> ]
-"84" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x80) == 0)<SUB>102</SUB>> ]
-"90" [label = <(good,good(utf8, 1u))<SUB>104</SUB>> ]
-"93" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 1u)<SUB>105</SUB>> ]
-"96" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>106</SUB>> ]
-"106" [label = <(&lt;operator&gt;.and,ic &amp; 0x20)<SUB>115</SUB>> ]
-"144" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 2u)<SUB>127</SUB>> ]
-"147" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>128</SUB>> ]
-"153" [label = <(&lt;operator&gt;.and,ic &amp; 0x10)<SUB>131</SUB>> ]
-"191" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 3u)<SUB>143</SUB>> ]
-"194" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>144</SUB>> ]
-"200" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>150</SUB>> ]
-"207" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>151</SUB>> ]
-"85" [label = <(&lt;operator&gt;.and,ic &amp; 0x80)<SUB>102</SUB>> ]
-"112" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 2u)<SUB>117</SUB>> ]
-"128" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>120</SUB>> ]
-"159" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 3u)<SUB>133</SUB>> ]
-"175" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>136</SUB>> ]
-"201" [label = <(UNKNOWN,size_t,size_t)<SUB>150</SUB>> ]
-"202" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>150</SUB>> ]
-"208" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>151</SUB>> ]
-"113" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>117</SUB>> ]
-"120" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>118</SUB>> ]
-"129" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>120</SUB>> ]
-"132" [label = <(is_ascii,is_ascii())<SUB>120</SUB>> ]
-"160" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>133</SUB>> ]
-"167" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>134</SUB>> ]
-"176" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>136</SUB>> ]
-"179" [label = <(is_ascii,is_ascii())<SUB>136</SUB>> ]
-"209" [label = <(bad,bad())<SUB>151</SUB>> ]
-"211" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>151</SUB>> ]
-"114" [label = <(UNKNOWN,size_t,size_t)<SUB>117</SUB>> ]
-"115" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>117</SUB>> ]
-"121" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>118</SUB>> ]
-"131" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>120</SUB>> ]
-"135" [label = <(bad,bad())<SUB>121</SUB>> ]
-"141" [label = <(good,good(utf8, 2u))<SUB>125</SUB>> ]
-"161" [label = <(UNKNOWN,size_t,size_t)<SUB>133</SUB>> ]
-"162" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>133</SUB>> ]
-"168" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>134</SUB>> ]
-"178" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>136</SUB>> ]
-"182" [label = <(bad,bad())<SUB>137</SUB>> ]
-"188" [label = <(good,good(utf8, 3u))<SUB>141</SUB>> ]
-"122" [label = <(bad,bad())<SUB>118</SUB>> ]
-"124" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>118</SUB>> ]
-"137" [label = <(RETURN,return 0u;,return 0u;)<SUB>122</SUB>> ]
-"169" [label = <(bad,bad())<SUB>134</SUB>> ]
-"171" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>134</SUB>> ]
-"184" [label = <(RETURN,return 0u;,return 0u;)<SUB>138</SUB>> ]
-"52" [label = <(METHOD,VisitModifiedUtf8Chars)<SUB>96</SUB>> ]
-"225" [label = <(METHOD_RETURN,size_t)<SUB>96</SUB>> ]
+"58" [label = <(DCHECK_LE,DCHECK_LE(byte_count, strlen(utf8)))<SUB>96</SUB>> ]
+"63" [label = <(&lt;operator&gt;.assignment,len = 0)<SUB>97</SUB>> ]
+"67" [label = <(&lt;operator&gt;.assignment,* end = utf8 + byte_count)<SUB>98</SUB>> ]
+"223" [label = <(RETURN,return len;,return len;)<SUB>156</SUB>> ]
+"60" [label = <(strlen,strlen(utf8))<SUB>96</SUB>> ]
+"69" [label = <(&lt;operator&gt;.addition,utf8 + byte_count)<SUB>98</SUB>> ]
+"73" [label = <(&lt;operator&gt;.notEquals,utf8 != end)<SUB>99</SUB>> ]
+"78" [label = <(&lt;operator&gt;.assignment,ic = *utf8)<SUB>100</SUB>> ]
+"101" [label = <(&lt;operator&gt;.assignment,is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>108</SUB>> ]
+"214" [label = <(good,good(utf8, 4u))<SUB>152</SUB>> ]
+"217" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 4u)<SUB>153</SUB>> ]
+"220" [label = <(&lt;operator&gt;.assignmentPlus,len += 2u)<SUB>154</SUB>> ]
+"80" [label = <(&lt;operator&gt;.indirection,*utf8)<SUB>100</SUB>> ]
+"83" [label = <(LIKELY,LIKELY((ic &amp; 0x80) == 0))<SUB>101</SUB>> ]
+"103" [label = <(METHOD_REF,ANY anonymous_lambda_8 (),is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>108</SUB>> ]
+"105" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x20) == 0)<SUB>114</SUB>> ]
+"152" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x10) == 0)<SUB>130</SUB>> ]
+"199" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 4u)<SUB>149</SUB>> ]
+"84" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x80) == 0)<SUB>101</SUB>> ]
+"90" [label = <(good,good(utf8, 1u))<SUB>103</SUB>> ]
+"93" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 1u)<SUB>104</SUB>> ]
+"96" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>105</SUB>> ]
+"106" [label = <(&lt;operator&gt;.and,ic &amp; 0x20)<SUB>114</SUB>> ]
+"144" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 2u)<SUB>126</SUB>> ]
+"147" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>127</SUB>> ]
+"153" [label = <(&lt;operator&gt;.and,ic &amp; 0x10)<SUB>130</SUB>> ]
+"191" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 3u)<SUB>142</SUB>> ]
+"194" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>143</SUB>> ]
+"200" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>149</SUB>> ]
+"207" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>150</SUB>> ]
+"85" [label = <(&lt;operator&gt;.and,ic &amp; 0x80)<SUB>101</SUB>> ]
+"112" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 2u)<SUB>116</SUB>> ]
+"128" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>119</SUB>> ]
+"159" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 3u)<SUB>132</SUB>> ]
+"175" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>135</SUB>> ]
+"201" [label = <(UNKNOWN,size_t,size_t)<SUB>149</SUB>> ]
+"202" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>149</SUB>> ]
+"208" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>150</SUB>> ]
+"113" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>116</SUB>> ]
+"120" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>117</SUB>> ]
+"129" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>119</SUB>> ]
+"132" [label = <(is_ascii,is_ascii())<SUB>119</SUB>> ]
+"160" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>132</SUB>> ]
+"167" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>133</SUB>> ]
+"176" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>135</SUB>> ]
+"179" [label = <(is_ascii,is_ascii())<SUB>135</SUB>> ]
+"209" [label = <(bad,bad())<SUB>150</SUB>> ]
+"211" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>150</SUB>> ]
+"114" [label = <(UNKNOWN,size_t,size_t)<SUB>116</SUB>> ]
+"115" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>116</SUB>> ]
+"121" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>117</SUB>> ]
+"131" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>119</SUB>> ]
+"135" [label = <(bad,bad())<SUB>120</SUB>> ]
+"141" [label = <(good,good(utf8, 2u))<SUB>124</SUB>> ]
+"161" [label = <(UNKNOWN,size_t,size_t)<SUB>132</SUB>> ]
+"162" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>132</SUB>> ]
+"168" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>133</SUB>> ]
+"178" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>135</SUB>> ]
+"182" [label = <(bad,bad())<SUB>136</SUB>> ]
+"188" [label = <(good,good(utf8, 3u))<SUB>140</SUB>> ]
+"122" [label = <(bad,bad())<SUB>117</SUB>> ]
+"124" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>117</SUB>> ]
+"137" [label = <(RETURN,return 0u;,return 0u;)<SUB>121</SUB>> ]
+"169" [label = <(bad,bad())<SUB>133</SUB>> ]
+"171" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>133</SUB>> ]
+"184" [label = <(RETURN,return 0u;,return 0u;)<SUB>137</SUB>> ]
+"52" [label = <(METHOD,VisitModifiedUtf8Chars)<SUB>95</SUB>> ]
+"225" [label = <(METHOD_RETURN,size_t)<SUB>95</SUB>> ]
   "58" -> "63" 
   "63" -> "69" 
   "67" -> "73" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/80-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/80-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/80-cfg.dot	2023-06-07 19:35:41.417383229 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/80-cfg.dot	2023-06-07 19:35:47.867382796 +0330
@@ -1,28 +1,28 @@
 digraph "CallIntMethodV" {  
-"4136" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1079</SUB>> ]
-"4154" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1080</SUB>> ]
-"4173" [label = <(soa,soa(env))<SUB>1081</SUB>> ]
-"4175" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1082</SUB>> ]
-"4176" [label = <(GetI,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI())<SUB>1082</SUB>> ]
-"4177" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI)<SUB>1082</SUB>> ]
-"4140" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1079</SUB>> ]
-"4158" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1080</SUB>> ]
-"4178" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1082</SUB>> ]
-"4183" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1082</SUB>> ]
-"4141" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1079</SUB>> ]
-"4145" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1079</SUB>> ]
-"4152" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1079</SUB>> ]
-"4159" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1080</SUB>> ]
-"4163" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1080</SUB>> ]
-"4170" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1080</SUB>> ]
-"4146" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1079</SUB>> ]
-"4164" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1080</SUB>> ]
-"4147" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1079</SUB>> ]
-"4149" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1079</SUB>> ]
-"4165" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1080</SUB>> ]
-"4167" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1080</SUB>> ]
-"4130" [label = <(METHOD,CallIntMethodV)<SUB>1078</SUB>> ]
-"4184" [label = <(METHOD_RETURN,jint)<SUB>1078</SUB>> ]
+"4136" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1078</SUB>> ]
+"4154" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1079</SUB>> ]
+"4173" [label = <(soa,soa(env))<SUB>1080</SUB>> ]
+"4175" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1081</SUB>> ]
+"4176" [label = <(GetI,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI())<SUB>1081</SUB>> ]
+"4177" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI)<SUB>1081</SUB>> ]
+"4140" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1078</SUB>> ]
+"4158" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1079</SUB>> ]
+"4178" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1081</SUB>> ]
+"4183" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1081</SUB>> ]
+"4141" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1078</SUB>> ]
+"4145" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1078</SUB>> ]
+"4152" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1078</SUB>> ]
+"4159" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1079</SUB>> ]
+"4163" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1079</SUB>> ]
+"4170" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1079</SUB>> ]
+"4146" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1078</SUB>> ]
+"4164" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1079</SUB>> ]
+"4147" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1078</SUB>> ]
+"4149" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1078</SUB>> ]
+"4165" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1079</SUB>> ]
+"4167" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1079</SUB>> ]
+"4130" [label = <(METHOD,CallIntMethodV)<SUB>1077</SUB>> ]
+"4184" [label = <(METHOD_RETURN,jint)<SUB>1077</SUB>> ]
   "4136" -> "4141" 
   "4136" -> "4154" 
   "4154" -> "4159" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/81-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/81-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/81-cfg.dot	2023-06-07 19:35:41.427383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/81-cfg.dot	2023-06-07 19:35:47.867382796 +0330
@@ -1,28 +1,28 @@
 digraph "CallIntMethodA" {  
-"4192" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1086</SUB>> ]
-"4210" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1087</SUB>> ]
-"4229" [label = <(soa,soa(env))<SUB>1088</SUB>> ]
-"4231" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();)<SUB>1089</SUB>> ]
-"4232" [label = <(GetI,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI())<SUB>1089</SUB>> ]
-"4233" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI)<SUB>1089</SUB>> ]
-"4196" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1086</SUB>> ]
-"4214" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1087</SUB>> ]
-"4234" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1089</SUB>> ]
-"4239" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1089</SUB>> ]
-"4197" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1086</SUB>> ]
-"4201" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1086</SUB>> ]
-"4208" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1086</SUB>> ]
-"4215" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1087</SUB>> ]
-"4219" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1087</SUB>> ]
-"4226" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1087</SUB>> ]
-"4202" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1086</SUB>> ]
-"4220" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1087</SUB>> ]
-"4203" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1086</SUB>> ]
-"4205" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1086</SUB>> ]
-"4221" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1087</SUB>> ]
-"4223" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1087</SUB>> ]
-"4186" [label = <(METHOD,CallIntMethodA)<SUB>1085</SUB>> ]
-"4240" [label = <(METHOD_RETURN,jint)<SUB>1085</SUB>> ]
+"4192" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1085</SUB>> ]
+"4210" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1086</SUB>> ]
+"4229" [label = <(soa,soa(env))<SUB>1087</SUB>> ]
+"4231" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();)<SUB>1088</SUB>> ]
+"4232" [label = <(GetI,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI())<SUB>1088</SUB>> ]
+"4233" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI)<SUB>1088</SUB>> ]
+"4196" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1085</SUB>> ]
+"4214" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1086</SUB>> ]
+"4234" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1088</SUB>> ]
+"4239" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1088</SUB>> ]
+"4197" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1085</SUB>> ]
+"4201" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1085</SUB>> ]
+"4208" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1085</SUB>> ]
+"4215" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1086</SUB>> ]
+"4219" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1086</SUB>> ]
+"4226" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1086</SUB>> ]
+"4202" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1085</SUB>> ]
+"4220" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1086</SUB>> ]
+"4203" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1085</SUB>> ]
+"4205" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1085</SUB>> ]
+"4221" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1086</SUB>> ]
+"4223" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1086</SUB>> ]
+"4186" [label = <(METHOD,CallIntMethodA)<SUB>1084</SUB>> ]
+"4240" [label = <(METHOD_RETURN,jint)<SUB>1084</SUB>> ]
   "4192" -> "4197" 
   "4192" -> "4210" 
   "4210" -> "4215" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/82-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/82-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/82-cfg.dot	2023-06-07 19:35:41.427383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/82-cfg.dot	2023-06-07 19:35:47.867382796 +0330
@@ -1,32 +1,32 @@
 digraph "CallLongMethod" {  
-"4248" [label = <(va_start,va_start(ap, mid))<SUB>1094</SUB>> ]
-"4252" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1095</SUB>> ]
-"4255" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1096</SUB>> ]
-"4273" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1097</SUB>> ]
-"4292" [label = <(soa,soa(env))<SUB>1098</SUB>> ]
-"4295" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1099</SUB>> ]
-"4301" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1100</SUB>> ]
-"4253" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1095</SUB>> ]
-"4296" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1099</SUB>> ]
-"4302" [label = <(GetJ,result.GetJ())<SUB>1100</SUB>> ]
-"4303" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1100</SUB>> ]
-"4259" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1096</SUB>> ]
-"4277" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1097</SUB>> ]
-"4305" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1100</SUB>> ]
-"4260" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1096</SUB>> ]
-"4264" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1096</SUB>> ]
-"4271" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1096</SUB>> ]
-"4278" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1097</SUB>> ]
-"4282" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1097</SUB>> ]
-"4289" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1097</SUB>> ]
-"4265" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1096</SUB>> ]
-"4283" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1097</SUB>> ]
-"4266" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1096</SUB>> ]
-"4268" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1096</SUB>> ]
-"4284" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1097</SUB>> ]
-"4286" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1097</SUB>> ]
-"4242" [label = <(METHOD,CallLongMethod)<SUB>1092</SUB>> ]
-"4306" [label = <(METHOD_RETURN,jlong)<SUB>1092</SUB>> ]
+"4248" [label = <(va_start,va_start(ap, mid))<SUB>1093</SUB>> ]
+"4252" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1094</SUB>> ]
+"4255" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1095</SUB>> ]
+"4273" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1096</SUB>> ]
+"4292" [label = <(soa,soa(env))<SUB>1097</SUB>> ]
+"4295" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1098</SUB>> ]
+"4301" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1099</SUB>> ]
+"4253" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1094</SUB>> ]
+"4296" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1098</SUB>> ]
+"4302" [label = <(GetJ,result.GetJ())<SUB>1099</SUB>> ]
+"4303" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1099</SUB>> ]
+"4259" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1095</SUB>> ]
+"4277" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1096</SUB>> ]
+"4305" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1099</SUB>> ]
+"4260" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1095</SUB>> ]
+"4264" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1095</SUB>> ]
+"4271" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1095</SUB>> ]
+"4278" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1096</SUB>> ]
+"4282" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1096</SUB>> ]
+"4289" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1096</SUB>> ]
+"4265" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1095</SUB>> ]
+"4283" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1096</SUB>> ]
+"4266" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1095</SUB>> ]
+"4268" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1095</SUB>> ]
+"4284" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1096</SUB>> ]
+"4286" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1096</SUB>> ]
+"4242" [label = <(METHOD,CallLongMethod)<SUB>1091</SUB>> ]
+"4306" [label = <(METHOD_RETURN,jlong)<SUB>1091</SUB>> ]
   "4248" -> "4253" 
   "4252" -> "4255" 
   "4255" -> "4260" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/83-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/83-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/83-cfg.dot	2023-06-07 19:35:41.427383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/83-cfg.dot	2023-06-07 19:35:47.867382796 +0330
@@ -1,28 +1,28 @@
 digraph "CallLongMethodV" {  
-"4314" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1104</SUB>> ]
-"4332" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1105</SUB>> ]
-"4351" [label = <(soa,soa(env))<SUB>1106</SUB>> ]
-"4353" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1107</SUB>> ]
-"4354" [label = <(GetJ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1107</SUB>> ]
-"4355" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1107</SUB>> ]
-"4318" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1104</SUB>> ]
-"4336" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1105</SUB>> ]
-"4356" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1107</SUB>> ]
-"4361" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1107</SUB>> ]
-"4319" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1104</SUB>> ]
-"4323" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1104</SUB>> ]
-"4330" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1104</SUB>> ]
-"4337" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1105</SUB>> ]
-"4341" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1105</SUB>> ]
-"4348" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1105</SUB>> ]
-"4324" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1104</SUB>> ]
-"4342" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1105</SUB>> ]
-"4325" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1104</SUB>> ]
-"4327" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1104</SUB>> ]
-"4343" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1105</SUB>> ]
-"4345" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1105</SUB>> ]
-"4308" [label = <(METHOD,CallLongMethodV)<SUB>1103</SUB>> ]
-"4362" [label = <(METHOD_RETURN,jlong)<SUB>1103</SUB>> ]
+"4314" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1103</SUB>> ]
+"4332" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1104</SUB>> ]
+"4351" [label = <(soa,soa(env))<SUB>1105</SUB>> ]
+"4353" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1106</SUB>> ]
+"4354" [label = <(GetJ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1106</SUB>> ]
+"4355" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1106</SUB>> ]
+"4318" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1103</SUB>> ]
+"4336" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1104</SUB>> ]
+"4356" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1106</SUB>> ]
+"4361" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1106</SUB>> ]
+"4319" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1103</SUB>> ]
+"4323" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1103</SUB>> ]
+"4330" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1103</SUB>> ]
+"4337" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1104</SUB>> ]
+"4341" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1104</SUB>> ]
+"4348" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1104</SUB>> ]
+"4324" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1103</SUB>> ]
+"4342" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1104</SUB>> ]
+"4325" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1103</SUB>> ]
+"4327" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1103</SUB>> ]
+"4343" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1104</SUB>> ]
+"4345" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1104</SUB>> ]
+"4308" [label = <(METHOD,CallLongMethodV)<SUB>1102</SUB>> ]
+"4362" [label = <(METHOD_RETURN,jlong)<SUB>1102</SUB>> ]
   "4314" -> "4319" 
   "4314" -> "4332" 
   "4332" -> "4337" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/84-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/84-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/84-cfg.dot	2023-06-07 19:35:41.427383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/84-cfg.dot	2023-06-07 19:35:47.867382796 +0330
@@ -1,28 +1,28 @@
 digraph "CallLongMethodA" {  
-"4370" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1111</SUB>> ]
-"4388" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1112</SUB>> ]
-"4407" [label = <(soa,soa(env))<SUB>1113</SUB>> ]
-"4409" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();)<SUB>1114</SUB>> ]
-"4410" [label = <(GetJ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ())<SUB>1114</SUB>> ]
-"4411" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ)<SUB>1114</SUB>> ]
-"4374" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1111</SUB>> ]
-"4392" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1112</SUB>> ]
-"4412" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1114</SUB>> ]
-"4417" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1114</SUB>> ]
-"4375" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1111</SUB>> ]
-"4379" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1111</SUB>> ]
-"4386" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1111</SUB>> ]
-"4393" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1112</SUB>> ]
-"4397" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1112</SUB>> ]
-"4404" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1112</SUB>> ]
-"4380" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1111</SUB>> ]
-"4398" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1112</SUB>> ]
-"4381" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1111</SUB>> ]
-"4383" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1111</SUB>> ]
-"4399" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1112</SUB>> ]
-"4401" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1112</SUB>> ]
-"4364" [label = <(METHOD,CallLongMethodA)<SUB>1110</SUB>> ]
-"4418" [label = <(METHOD_RETURN,jlong)<SUB>1110</SUB>> ]
+"4370" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1110</SUB>> ]
+"4388" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1111</SUB>> ]
+"4407" [label = <(soa,soa(env))<SUB>1112</SUB>> ]
+"4409" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();)<SUB>1113</SUB>> ]
+"4410" [label = <(GetJ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ())<SUB>1113</SUB>> ]
+"4411" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ)<SUB>1113</SUB>> ]
+"4374" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1110</SUB>> ]
+"4392" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1111</SUB>> ]
+"4412" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1113</SUB>> ]
+"4417" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1113</SUB>> ]
+"4375" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1110</SUB>> ]
+"4379" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1110</SUB>> ]
+"4386" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1110</SUB>> ]
+"4393" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1111</SUB>> ]
+"4397" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1111</SUB>> ]
+"4404" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1111</SUB>> ]
+"4380" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1110</SUB>> ]
+"4398" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1111</SUB>> ]
+"4381" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1110</SUB>> ]
+"4383" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1110</SUB>> ]
+"4399" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1111</SUB>> ]
+"4401" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1111</SUB>> ]
+"4364" [label = <(METHOD,CallLongMethodA)<SUB>1109</SUB>> ]
+"4418" [label = <(METHOD_RETURN,jlong)<SUB>1109</SUB>> ]
   "4370" -> "4375" 
   "4370" -> "4388" 
   "4388" -> "4393" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/85-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/85-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/85-cfg.dot	2023-06-07 19:35:41.427383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/85-cfg.dot	2023-06-07 19:35:47.867382796 +0330
@@ -1,32 +1,32 @@
 digraph "CallShortMethod" {  
-"4426" [label = <(va_start,va_start(ap, mid))<SUB>1119</SUB>> ]
-"4430" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1120</SUB>> ]
-"4433" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1121</SUB>> ]
-"4451" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1122</SUB>> ]
-"4470" [label = <(soa,soa(env))<SUB>1123</SUB>> ]
-"4473" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1124</SUB>> ]
-"4479" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1125</SUB>> ]
-"4431" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1120</SUB>> ]
-"4474" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1124</SUB>> ]
-"4480" [label = <(GetS,result.GetS())<SUB>1125</SUB>> ]
-"4481" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1125</SUB>> ]
-"4437" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1121</SUB>> ]
-"4455" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1122</SUB>> ]
-"4483" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1125</SUB>> ]
-"4438" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1121</SUB>> ]
-"4442" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1121</SUB>> ]
-"4449" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1121</SUB>> ]
-"4456" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1122</SUB>> ]
-"4460" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1122</SUB>> ]
-"4467" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1122</SUB>> ]
-"4443" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1121</SUB>> ]
-"4461" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1122</SUB>> ]
-"4444" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1121</SUB>> ]
-"4446" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1121</SUB>> ]
-"4462" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1122</SUB>> ]
-"4464" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1122</SUB>> ]
-"4420" [label = <(METHOD,CallShortMethod)<SUB>1117</SUB>> ]
-"4484" [label = <(METHOD_RETURN,jshort)<SUB>1117</SUB>> ]
+"4426" [label = <(va_start,va_start(ap, mid))<SUB>1118</SUB>> ]
+"4430" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1119</SUB>> ]
+"4433" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1120</SUB>> ]
+"4451" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1121</SUB>> ]
+"4470" [label = <(soa,soa(env))<SUB>1122</SUB>> ]
+"4473" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1123</SUB>> ]
+"4479" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1124</SUB>> ]
+"4431" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1119</SUB>> ]
+"4474" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1123</SUB>> ]
+"4480" [label = <(GetS,result.GetS())<SUB>1124</SUB>> ]
+"4481" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1124</SUB>> ]
+"4437" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1120</SUB>> ]
+"4455" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1121</SUB>> ]
+"4483" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1124</SUB>> ]
+"4438" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1120</SUB>> ]
+"4442" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1120</SUB>> ]
+"4449" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1120</SUB>> ]
+"4456" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1121</SUB>> ]
+"4460" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1121</SUB>> ]
+"4467" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1121</SUB>> ]
+"4443" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1120</SUB>> ]
+"4461" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1121</SUB>> ]
+"4444" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1120</SUB>> ]
+"4446" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1120</SUB>> ]
+"4462" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1121</SUB>> ]
+"4464" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1121</SUB>> ]
+"4420" [label = <(METHOD,CallShortMethod)<SUB>1116</SUB>> ]
+"4484" [label = <(METHOD_RETURN,jshort)<SUB>1116</SUB>> ]
   "4426" -> "4431" 
   "4430" -> "4433" 
   "4433" -> "4438" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/86-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/86-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/86-cfg.dot	2023-06-07 19:35:41.427383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/86-cfg.dot	2023-06-07 19:35:47.867382796 +0330
@@ -1,28 +1,28 @@
 digraph "CallShortMethodV" {  
-"4492" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1129</SUB>> ]
-"4510" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1130</SUB>> ]
-"4529" [label = <(soa,soa(env))<SUB>1131</SUB>> ]
-"4531" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1132</SUB>> ]
-"4532" [label = <(GetS,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS())<SUB>1132</SUB>> ]
-"4533" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS)<SUB>1132</SUB>> ]
-"4496" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1129</SUB>> ]
-"4514" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1130</SUB>> ]
-"4534" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1132</SUB>> ]
-"4539" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1132</SUB>> ]
-"4497" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1129</SUB>> ]
-"4501" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1129</SUB>> ]
-"4508" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1129</SUB>> ]
-"4515" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1130</SUB>> ]
-"4519" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1130</SUB>> ]
-"4526" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1130</SUB>> ]
-"4502" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1129</SUB>> ]
-"4520" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1130</SUB>> ]
-"4503" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1129</SUB>> ]
-"4505" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1129</SUB>> ]
-"4521" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1130</SUB>> ]
-"4523" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1130</SUB>> ]
-"4486" [label = <(METHOD,CallShortMethodV)<SUB>1128</SUB>> ]
-"4540" [label = <(METHOD_RETURN,jshort)<SUB>1128</SUB>> ]
+"4492" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1128</SUB>> ]
+"4510" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1129</SUB>> ]
+"4529" [label = <(soa,soa(env))<SUB>1130</SUB>> ]
+"4531" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1131</SUB>> ]
+"4532" [label = <(GetS,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS())<SUB>1131</SUB>> ]
+"4533" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS)<SUB>1131</SUB>> ]
+"4496" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1128</SUB>> ]
+"4514" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1129</SUB>> ]
+"4534" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1131</SUB>> ]
+"4539" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1131</SUB>> ]
+"4497" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1128</SUB>> ]
+"4501" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1128</SUB>> ]
+"4508" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1128</SUB>> ]
+"4515" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1129</SUB>> ]
+"4519" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1129</SUB>> ]
+"4526" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1129</SUB>> ]
+"4502" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1128</SUB>> ]
+"4520" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1129</SUB>> ]
+"4503" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1128</SUB>> ]
+"4505" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1128</SUB>> ]
+"4521" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1129</SUB>> ]
+"4523" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1129</SUB>> ]
+"4486" [label = <(METHOD,CallShortMethodV)<SUB>1127</SUB>> ]
+"4540" [label = <(METHOD_RETURN,jshort)<SUB>1127</SUB>> ]
   "4492" -> "4497" 
   "4492" -> "4510" 
   "4510" -> "4515" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/87-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/87-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/87-cfg.dot	2023-06-07 19:35:41.427383227 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/87-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,28 +1,28 @@
 digraph "CallShortMethodA" {  
-"4548" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1136</SUB>> ]
-"4566" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1137</SUB>> ]
-"4585" [label = <(soa,soa(env))<SUB>1138</SUB>> ]
-"4587" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();)<SUB>1139</SUB>> ]
-"4588" [label = <(GetS,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS())<SUB>1139</SUB>> ]
-"4589" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS)<SUB>1139</SUB>> ]
-"4552" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1136</SUB>> ]
-"4570" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1137</SUB>> ]
-"4590" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1139</SUB>> ]
-"4595" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1139</SUB>> ]
-"4553" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1136</SUB>> ]
-"4557" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1136</SUB>> ]
-"4564" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1136</SUB>> ]
-"4571" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1137</SUB>> ]
-"4575" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1137</SUB>> ]
-"4582" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1137</SUB>> ]
-"4558" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1136</SUB>> ]
-"4576" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1137</SUB>> ]
-"4559" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1136</SUB>> ]
-"4561" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1136</SUB>> ]
-"4577" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1137</SUB>> ]
-"4579" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1137</SUB>> ]
-"4542" [label = <(METHOD,CallShortMethodA)<SUB>1135</SUB>> ]
-"4596" [label = <(METHOD_RETURN,jshort)<SUB>1135</SUB>> ]
+"4548" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1135</SUB>> ]
+"4566" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1136</SUB>> ]
+"4585" [label = <(soa,soa(env))<SUB>1137</SUB>> ]
+"4587" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();)<SUB>1138</SUB>> ]
+"4588" [label = <(GetS,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS())<SUB>1138</SUB>> ]
+"4589" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS)<SUB>1138</SUB>> ]
+"4552" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1135</SUB>> ]
+"4570" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1136</SUB>> ]
+"4590" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1138</SUB>> ]
+"4595" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1138</SUB>> ]
+"4553" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1135</SUB>> ]
+"4557" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1135</SUB>> ]
+"4564" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1135</SUB>> ]
+"4571" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1136</SUB>> ]
+"4575" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1136</SUB>> ]
+"4582" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1136</SUB>> ]
+"4558" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1135</SUB>> ]
+"4576" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1136</SUB>> ]
+"4559" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1135</SUB>> ]
+"4561" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1135</SUB>> ]
+"4577" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1136</SUB>> ]
+"4579" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1136</SUB>> ]
+"4542" [label = <(METHOD,CallShortMethodA)<SUB>1134</SUB>> ]
+"4596" [label = <(METHOD_RETURN,jshort)<SUB>1134</SUB>> ]
   "4548" -> "4553" 
   "4548" -> "4566" 
   "4566" -> "4571" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/88-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/88-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/88-cfg.dot	2023-06-07 19:35:41.437383228 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/88-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,27 +1,27 @@
 digraph "CallVoidMethod" {  
-"4604" [label = <(va_start,va_start(ap, mid))<SUB>1144</SUB>> ]
-"4608" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1145</SUB>> ]
-"4611" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1146</SUB>> ]
-"4628" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1147</SUB>> ]
-"4646" [label = <(soa,soa(env))<SUB>1148</SUB>> ]
-"4648" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1149</SUB>> ]
-"4609" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1145</SUB>> ]
-"4615" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1146</SUB>> ]
-"4632" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1147</SUB>> ]
-"4616" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1146</SUB>> ]
-"4620" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1146</SUB>> ]
-"4627" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1146</SUB>> ]
-"4633" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1147</SUB>> ]
-"4637" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1147</SUB>> ]
-"4644" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1147</SUB>> ]
-"4621" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1146</SUB>> ]
-"4638" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1147</SUB>> ]
-"4622" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1146</SUB>> ]
-"4624" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1146</SUB>> ]
-"4639" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1147</SUB>> ]
-"4641" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1147</SUB>> ]
-"4598" [label = <(METHOD,CallVoidMethod)<SUB>1142</SUB>> ]
-"4653" [label = <(METHOD_RETURN,void)<SUB>1142</SUB>> ]
+"4604" [label = <(va_start,va_start(ap, mid))<SUB>1143</SUB>> ]
+"4608" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1144</SUB>> ]
+"4611" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1145</SUB>> ]
+"4628" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1146</SUB>> ]
+"4646" [label = <(soa,soa(env))<SUB>1147</SUB>> ]
+"4648" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1148</SUB>> ]
+"4609" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1144</SUB>> ]
+"4615" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1145</SUB>> ]
+"4632" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1146</SUB>> ]
+"4616" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1145</SUB>> ]
+"4620" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1145</SUB>> ]
+"4627" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1145</SUB>> ]
+"4633" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1146</SUB>> ]
+"4637" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1146</SUB>> ]
+"4644" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1146</SUB>> ]
+"4621" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1145</SUB>> ]
+"4638" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1146</SUB>> ]
+"4622" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1145</SUB>> ]
+"4624" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1145</SUB>> ]
+"4639" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1146</SUB>> ]
+"4641" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1146</SUB>> ]
+"4598" [label = <(METHOD,CallVoidMethod)<SUB>1141</SUB>> ]
+"4653" [label = <(METHOD_RETURN,void)<SUB>1141</SUB>> ]
   "4604" -> "4609" 
   "4608" -> "4611" 
   "4611" -> "4616" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/89-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/89-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/89-cfg.dot	2023-06-07 19:35:41.437383228 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/89-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,24 +1,24 @@
 digraph "CallVoidMethodV" {  
-"4661" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1153</SUB>> ]
-"4678" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1154</SUB>> ]
-"4696" [label = <(soa,soa(env))<SUB>1155</SUB>> ]
-"4698" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1156</SUB>> ]
-"4665" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1153</SUB>> ]
-"4682" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1154</SUB>> ]
-"4666" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1153</SUB>> ]
-"4670" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1153</SUB>> ]
-"4677" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1153</SUB>> ]
-"4683" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1154</SUB>> ]
-"4687" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1154</SUB>> ]
-"4694" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1154</SUB>> ]
-"4671" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1153</SUB>> ]
-"4688" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1154</SUB>> ]
-"4672" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1153</SUB>> ]
-"4674" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1153</SUB>> ]
-"4689" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1154</SUB>> ]
-"4691" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1154</SUB>> ]
-"4655" [label = <(METHOD,CallVoidMethodV)<SUB>1152</SUB>> ]
-"4703" [label = <(METHOD_RETURN,void)<SUB>1152</SUB>> ]
+"4661" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1152</SUB>> ]
+"4678" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1153</SUB>> ]
+"4696" [label = <(soa,soa(env))<SUB>1154</SUB>> ]
+"4698" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1155</SUB>> ]
+"4665" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1152</SUB>> ]
+"4682" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1153</SUB>> ]
+"4666" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1152</SUB>> ]
+"4670" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1152</SUB>> ]
+"4677" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1152</SUB>> ]
+"4683" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1153</SUB>> ]
+"4687" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1153</SUB>> ]
+"4694" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1153</SUB>> ]
+"4671" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1152</SUB>> ]
+"4688" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1153</SUB>> ]
+"4672" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1152</SUB>> ]
+"4674" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1152</SUB>> ]
+"4689" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1153</SUB>> ]
+"4691" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1153</SUB>> ]
+"4655" [label = <(METHOD,CallVoidMethodV)<SUB>1151</SUB>> ]
+"4703" [label = <(METHOD_RETURN,void)<SUB>1151</SUB>> ]
   "4661" -> "4666" 
   "4661" -> "4678" 
   "4678" -> "4683" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/9-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/9-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/9-cfg.dot	2023-06-07 19:35:41.347383235 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/9-cfg.dot	2023-06-07 19:35:47.787382803 +0330
@@ -1,5 +1,5 @@
 digraph "NotifySetObjectField" {  
-"232" [label = <(METHOD,NotifySetObjectField)<SUB>185</SUB>> ]
-"237" [label = <(METHOD_RETURN,void)<SUB>185</SUB>> ]
+"232" [label = <(METHOD,NotifySetObjectField)<SUB>184</SUB>> ]
+"237" [label = <(METHOD_RETURN,void)<SUB>184</SUB>> ]
   "232" -> "237" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/90-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/90-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/90-cfg.dot	2023-06-07 19:35:41.437383228 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/90-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,24 +1,24 @@
 digraph "CallVoidMethodA" {  
-"4711" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1160</SUB>> ]
-"4728" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1161</SUB>> ]
-"4746" [label = <(soa,soa(env))<SUB>1162</SUB>> ]
-"4748" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1163</SUB>> ]
-"4715" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1160</SUB>> ]
-"4732" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1161</SUB>> ]
-"4716" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1160</SUB>> ]
-"4720" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1160</SUB>> ]
-"4727" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1160</SUB>> ]
-"4733" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1161</SUB>> ]
-"4737" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1161</SUB>> ]
-"4744" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1161</SUB>> ]
-"4721" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1160</SUB>> ]
-"4738" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1161</SUB>> ]
-"4722" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1160</SUB>> ]
-"4724" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1160</SUB>> ]
-"4739" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1161</SUB>> ]
-"4741" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1161</SUB>> ]
-"4705" [label = <(METHOD,CallVoidMethodA)<SUB>1159</SUB>> ]
-"4753" [label = <(METHOD_RETURN,void)<SUB>1159</SUB>> ]
+"4711" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1159</SUB>> ]
+"4728" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1160</SUB>> ]
+"4746" [label = <(soa,soa(env))<SUB>1161</SUB>> ]
+"4748" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1162</SUB>> ]
+"4715" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1159</SUB>> ]
+"4732" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1160</SUB>> ]
+"4716" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1159</SUB>> ]
+"4720" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1159</SUB>> ]
+"4727" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1159</SUB>> ]
+"4733" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1160</SUB>> ]
+"4737" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1160</SUB>> ]
+"4744" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1160</SUB>> ]
+"4721" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1159</SUB>> ]
+"4738" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1160</SUB>> ]
+"4722" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1159</SUB>> ]
+"4724" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1159</SUB>> ]
+"4739" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1160</SUB>> ]
+"4741" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1160</SUB>> ]
+"4705" [label = <(METHOD,CallVoidMethodA)<SUB>1158</SUB>> ]
+"4753" [label = <(METHOD_RETURN,void)<SUB>1158</SUB>> ]
   "4711" -> "4716" 
   "4711" -> "4728" 
   "4728" -> "4733" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/91-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/91-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/91-cfg.dot	2023-06-07 19:35:41.437383228 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/91-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,37 +1,37 @@
 digraph "CallNonvirtualObjectMethod" {  
-"4762" [label = <(va_start,va_start(ap, mid))<SUB>1168</SUB>> ]
-"4766" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1169</SUB>> ]
-"4769" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1170</SUB>> ]
-"4787" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1171</SUB>> ]
-"4806" [label = <(soa,soa(env))<SUB>1172</SUB>> ]
-"4809" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1173</SUB>> ]
-"4816" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1174</SUB>> ]
-"4828" [label = <(RETURN,return local_result;,return local_result;)<SUB>1175</SUB>> ]
-"4767" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1169</SUB>> ]
-"4810" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1173</SUB>> ]
-"4818" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1174</SUB>> ]
-"4819" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1174</SUB>> ]
-"4824" [label = <(GetL,result.GetL())<SUB>1174</SUB>> ]
-"4773" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1170</SUB>> ]
-"4791" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1171</SUB>> ]
-"4820" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1174</SUB>> ]
-"4825" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1174</SUB>> ]
-"4774" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1170</SUB>> ]
-"4778" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1170</SUB>> ]
-"4785" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1170</SUB>> ]
-"4792" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1171</SUB>> ]
-"4796" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1171</SUB>> ]
-"4803" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1171</SUB>> ]
-"4822" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1174</SUB>> ]
-"4827" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1174</SUB>> ]
-"4779" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1170</SUB>> ]
-"4797" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1171</SUB>> ]
-"4780" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1170</SUB>> ]
-"4782" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1170</SUB>> ]
-"4798" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1171</SUB>> ]
-"4800" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1171</SUB>> ]
-"4755" [label = <(METHOD,CallNonvirtualObjectMethod)<SUB>1166</SUB>> ]
-"4830" [label = <(METHOD_RETURN,jobject)<SUB>1166</SUB>> ]
+"4762" [label = <(va_start,va_start(ap, mid))<SUB>1167</SUB>> ]
+"4766" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1168</SUB>> ]
+"4769" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1169</SUB>> ]
+"4787" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1170</SUB>> ]
+"4806" [label = <(soa,soa(env))<SUB>1171</SUB>> ]
+"4809" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1172</SUB>> ]
+"4816" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1173</SUB>> ]
+"4828" [label = <(RETURN,return local_result;,return local_result;)<SUB>1174</SUB>> ]
+"4767" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1168</SUB>> ]
+"4810" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1172</SUB>> ]
+"4818" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1173</SUB>> ]
+"4819" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1173</SUB>> ]
+"4824" [label = <(GetL,result.GetL())<SUB>1173</SUB>> ]
+"4773" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1169</SUB>> ]
+"4791" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1170</SUB>> ]
+"4820" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1173</SUB>> ]
+"4825" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1173</SUB>> ]
+"4774" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1169</SUB>> ]
+"4778" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1169</SUB>> ]
+"4785" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1169</SUB>> ]
+"4792" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1170</SUB>> ]
+"4796" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1170</SUB>> ]
+"4803" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1170</SUB>> ]
+"4822" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1173</SUB>> ]
+"4827" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1173</SUB>> ]
+"4779" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1169</SUB>> ]
+"4797" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1170</SUB>> ]
+"4780" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1169</SUB>> ]
+"4782" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1169</SUB>> ]
+"4798" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1170</SUB>> ]
+"4800" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1170</SUB>> ]
+"4755" [label = <(METHOD,CallNonvirtualObjectMethod)<SUB>1165</SUB>> ]
+"4830" [label = <(METHOD_RETURN,jobject)<SUB>1165</SUB>> ]
   "4762" -> "4767" 
   "4766" -> "4769" 
   "4769" -> "4774" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/92-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/92-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/92-cfg.dot	2023-06-07 19:35:41.437383228 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/92-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,33 +1,33 @@
 digraph "CallNonvirtualObjectMethodV" {  
-"4839" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1180</SUB>> ]
-"4857" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1181</SUB>> ]
-"4876" [label = <(soa,soa(env))<SUB>1182</SUB>> ]
-"4879" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, args)))<SUB>1183</SUB>> ]
-"4885" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1184</SUB>> ]
-"4880" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1183</SUB>> ]
-"4886" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1184</SUB>> ]
-"4887" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1184</SUB>> ]
-"4892" [label = <(GetL,result.GetL())<SUB>1184</SUB>> ]
-"4843" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1180</SUB>> ]
-"4861" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1181</SUB>> ]
-"4888" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1184</SUB>> ]
-"4893" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1184</SUB>> ]
-"4844" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1180</SUB>> ]
-"4848" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1180</SUB>> ]
-"4855" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1180</SUB>> ]
-"4862" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1181</SUB>> ]
-"4866" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1181</SUB>> ]
-"4873" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1181</SUB>> ]
-"4890" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1184</SUB>> ]
-"4895" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1184</SUB>> ]
-"4849" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1180</SUB>> ]
-"4867" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1181</SUB>> ]
-"4850" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1180</SUB>> ]
-"4852" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1180</SUB>> ]
-"4868" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1181</SUB>> ]
-"4870" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1181</SUB>> ]
-"4832" [label = <(METHOD,CallNonvirtualObjectMethodV)<SUB>1178</SUB>> ]
-"4896" [label = <(METHOD_RETURN,jobject)<SUB>1178</SUB>> ]
+"4839" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1179</SUB>> ]
+"4857" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1180</SUB>> ]
+"4876" [label = <(soa,soa(env))<SUB>1181</SUB>> ]
+"4879" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, args)))<SUB>1182</SUB>> ]
+"4885" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1183</SUB>> ]
+"4880" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1182</SUB>> ]
+"4886" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1183</SUB>> ]
+"4887" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1183</SUB>> ]
+"4892" [label = <(GetL,result.GetL())<SUB>1183</SUB>> ]
+"4843" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1179</SUB>> ]
+"4861" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1180</SUB>> ]
+"4888" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1183</SUB>> ]
+"4893" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1183</SUB>> ]
+"4844" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1179</SUB>> ]
+"4848" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1179</SUB>> ]
+"4855" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1179</SUB>> ]
+"4862" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1180</SUB>> ]
+"4866" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1180</SUB>> ]
+"4873" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1180</SUB>> ]
+"4890" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1183</SUB>> ]
+"4895" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1183</SUB>> ]
+"4849" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1179</SUB>> ]
+"4867" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1180</SUB>> ]
+"4850" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1179</SUB>> ]
+"4852" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1179</SUB>> ]
+"4868" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1180</SUB>> ]
+"4870" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1180</SUB>> ]
+"4832" [label = <(METHOD,CallNonvirtualObjectMethodV)<SUB>1177</SUB>> ]
+"4896" [label = <(METHOD_RETURN,jobject)<SUB>1177</SUB>> ]
   "4839" -> "4844" 
   "4839" -> "4857" 
   "4857" -> "4862" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/93-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/93-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/93-cfg.dot	2023-06-07 19:35:41.437383228 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/93-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,33 +1,33 @@
 digraph "CallNonvirtualObjectMethodA" {  
-"4905" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1189</SUB>> ]
-"4923" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1190</SUB>> ]
-"4942" [label = <(soa,soa(env))<SUB>1191</SUB>> ]
-"4945" [label = <(result,result(InvokeWithJValues(soa, obj, mid, args)))<SUB>1192</SUB>> ]
-"4951" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1193</SUB>> ]
-"4946" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1192</SUB>> ]
-"4952" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1193</SUB>> ]
-"4953" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1193</SUB>> ]
-"4958" [label = <(GetL,result.GetL())<SUB>1193</SUB>> ]
-"4909" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1189</SUB>> ]
-"4927" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1190</SUB>> ]
-"4954" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1193</SUB>> ]
-"4959" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1193</SUB>> ]
-"4910" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1189</SUB>> ]
-"4914" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1189</SUB>> ]
-"4921" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1189</SUB>> ]
-"4928" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1190</SUB>> ]
-"4932" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1190</SUB>> ]
-"4939" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1190</SUB>> ]
-"4956" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1193</SUB>> ]
-"4961" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1193</SUB>> ]
-"4915" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1189</SUB>> ]
-"4933" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1190</SUB>> ]
-"4916" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1189</SUB>> ]
-"4918" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1189</SUB>> ]
-"4934" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1190</SUB>> ]
-"4936" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1190</SUB>> ]
-"4898" [label = <(METHOD,CallNonvirtualObjectMethodA)<SUB>1187</SUB>> ]
-"4962" [label = <(METHOD_RETURN,jobject)<SUB>1187</SUB>> ]
+"4905" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1188</SUB>> ]
+"4923" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1189</SUB>> ]
+"4942" [label = <(soa,soa(env))<SUB>1190</SUB>> ]
+"4945" [label = <(result,result(InvokeWithJValues(soa, obj, mid, args)))<SUB>1191</SUB>> ]
+"4951" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1192</SUB>> ]
+"4946" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1191</SUB>> ]
+"4952" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1192</SUB>> ]
+"4953" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1192</SUB>> ]
+"4958" [label = <(GetL,result.GetL())<SUB>1192</SUB>> ]
+"4909" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1188</SUB>> ]
+"4927" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1189</SUB>> ]
+"4954" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1192</SUB>> ]
+"4959" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1192</SUB>> ]
+"4910" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1188</SUB>> ]
+"4914" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1188</SUB>> ]
+"4921" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1188</SUB>> ]
+"4928" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1189</SUB>> ]
+"4932" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1189</SUB>> ]
+"4939" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1189</SUB>> ]
+"4956" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1192</SUB>> ]
+"4961" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1192</SUB>> ]
+"4915" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1188</SUB>> ]
+"4933" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1189</SUB>> ]
+"4916" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1188</SUB>> ]
+"4918" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1188</SUB>> ]
+"4934" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1189</SUB>> ]
+"4936" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1189</SUB>> ]
+"4898" [label = <(METHOD,CallNonvirtualObjectMethodA)<SUB>1186</SUB>> ]
+"4962" [label = <(METHOD_RETURN,jobject)<SUB>1186</SUB>> ]
   "4905" -> "4910" 
   "4905" -> "4923" 
   "4923" -> "4928" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/94-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/94-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/94-cfg.dot	2023-06-07 19:35:41.437383228 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/94-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualBooleanMethod" {  
-"4971" [label = <(va_start,va_start(ap, mid))<SUB>1199</SUB>> ]
-"4975" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1200</SUB>> ]
-"4978" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1201</SUB>> ]
-"4996" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1202</SUB>> ]
-"5015" [label = <(soa,soa(env))<SUB>1203</SUB>> ]
-"5018" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1204</SUB>> ]
-"5024" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1205</SUB>> ]
-"4976" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1200</SUB>> ]
-"5019" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1204</SUB>> ]
-"5025" [label = <(GetZ,result.GetZ())<SUB>1205</SUB>> ]
-"5026" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1205</SUB>> ]
-"4982" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1201</SUB>> ]
-"5000" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1202</SUB>> ]
-"5028" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1205</SUB>> ]
-"4983" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1201</SUB>> ]
-"4987" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1201</SUB>> ]
-"4994" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1201</SUB>> ]
-"5001" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1202</SUB>> ]
-"5005" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1202</SUB>> ]
-"5012" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1202</SUB>> ]
-"4988" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1201</SUB>> ]
-"5006" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1202</SUB>> ]
-"4989" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1201</SUB>> ]
-"4991" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1201</SUB>> ]
-"5007" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1202</SUB>> ]
-"5009" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1202</SUB>> ]
-"4964" [label = <(METHOD,CallNonvirtualBooleanMethod)<SUB>1196</SUB>> ]
-"5029" [label = <(METHOD_RETURN,jboolean)<SUB>1196</SUB>> ]
+"4971" [label = <(va_start,va_start(ap, mid))<SUB>1198</SUB>> ]
+"4975" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1199</SUB>> ]
+"4978" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1200</SUB>> ]
+"4996" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1201</SUB>> ]
+"5015" [label = <(soa,soa(env))<SUB>1202</SUB>> ]
+"5018" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1203</SUB>> ]
+"5024" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1204</SUB>> ]
+"4976" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1199</SUB>> ]
+"5019" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1203</SUB>> ]
+"5025" [label = <(GetZ,result.GetZ())<SUB>1204</SUB>> ]
+"5026" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1204</SUB>> ]
+"4982" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1200</SUB>> ]
+"5000" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1201</SUB>> ]
+"5028" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1204</SUB>> ]
+"4983" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1200</SUB>> ]
+"4987" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1200</SUB>> ]
+"4994" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1200</SUB>> ]
+"5001" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1201</SUB>> ]
+"5005" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1201</SUB>> ]
+"5012" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1201</SUB>> ]
+"4988" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1200</SUB>> ]
+"5006" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1201</SUB>> ]
+"4989" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1200</SUB>> ]
+"4991" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1200</SUB>> ]
+"5007" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1201</SUB>> ]
+"5009" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1201</SUB>> ]
+"4964" [label = <(METHOD,CallNonvirtualBooleanMethod)<SUB>1195</SUB>> ]
+"5029" [label = <(METHOD_RETURN,jboolean)<SUB>1195</SUB>> ]
   "4971" -> "4976" 
   "4975" -> "4978" 
   "4978" -> "4983" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/95-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/95-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/95-cfg.dot	2023-06-07 19:35:41.437383228 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/95-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualBooleanMethodV" {  
-"5038" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1210</SUB>> ]
-"5056" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1211</SUB>> ]
-"5075" [label = <(soa,soa(env))<SUB>1212</SUB>> ]
-"5077" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>1213</SUB>> ]
-"5078" [label = <(GetZ,InvokeWithVarArgs(soa, obj, mid, args).GetZ())<SUB>1213</SUB>> ]
-"5079" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetZ)<SUB>1213</SUB>> ]
-"5042" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1210</SUB>> ]
-"5060" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1211</SUB>> ]
-"5080" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1213</SUB>> ]
-"5085" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1213</SUB>> ]
-"5043" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1210</SUB>> ]
-"5047" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1210</SUB>> ]
-"5054" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1210</SUB>> ]
-"5061" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1211</SUB>> ]
-"5065" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1211</SUB>> ]
-"5072" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1211</SUB>> ]
-"5048" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1210</SUB>> ]
-"5066" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1211</SUB>> ]
-"5049" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1210</SUB>> ]
-"5051" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1210</SUB>> ]
-"5067" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1211</SUB>> ]
-"5069" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1211</SUB>> ]
-"5031" [label = <(METHOD,CallNonvirtualBooleanMethodV)<SUB>1208</SUB>> ]
-"5086" [label = <(METHOD_RETURN,jboolean)<SUB>1208</SUB>> ]
+"5038" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1209</SUB>> ]
+"5056" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1210</SUB>> ]
+"5075" [label = <(soa,soa(env))<SUB>1211</SUB>> ]
+"5077" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>1212</SUB>> ]
+"5078" [label = <(GetZ,InvokeWithVarArgs(soa, obj, mid, args).GetZ())<SUB>1212</SUB>> ]
+"5079" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetZ)<SUB>1212</SUB>> ]
+"5042" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1209</SUB>> ]
+"5060" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1210</SUB>> ]
+"5080" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1212</SUB>> ]
+"5085" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1212</SUB>> ]
+"5043" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1209</SUB>> ]
+"5047" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1209</SUB>> ]
+"5054" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1209</SUB>> ]
+"5061" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1210</SUB>> ]
+"5065" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1210</SUB>> ]
+"5072" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1210</SUB>> ]
+"5048" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1209</SUB>> ]
+"5066" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1210</SUB>> ]
+"5049" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1209</SUB>> ]
+"5051" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1209</SUB>> ]
+"5067" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1210</SUB>> ]
+"5069" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1210</SUB>> ]
+"5031" [label = <(METHOD,CallNonvirtualBooleanMethodV)<SUB>1207</SUB>> ]
+"5086" [label = <(METHOD_RETURN,jboolean)<SUB>1207</SUB>> ]
   "5038" -> "5043" 
   "5038" -> "5056" 
   "5056" -> "5061" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/96-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/96-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/96-cfg.dot	2023-06-07 19:35:41.437383228 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/96-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualBooleanMethodA" {  
-"5095" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1218</SUB>> ]
-"5113" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1219</SUB>> ]
-"5132" [label = <(soa,soa(env))<SUB>1220</SUB>> ]
-"5134" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetZ();,return InvokeWithJValues(soa, obj, mid, args).GetZ();)<SUB>1221</SUB>> ]
-"5135" [label = <(GetZ,InvokeWithJValues(soa, obj, mid, args).GetZ())<SUB>1221</SUB>> ]
-"5136" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetZ)<SUB>1221</SUB>> ]
-"5099" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1218</SUB>> ]
-"5117" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1219</SUB>> ]
-"5137" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1221</SUB>> ]
-"5142" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1221</SUB>> ]
-"5100" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1218</SUB>> ]
-"5104" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1218</SUB>> ]
-"5111" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1218</SUB>> ]
-"5118" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1219</SUB>> ]
-"5122" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1219</SUB>> ]
-"5129" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1219</SUB>> ]
-"5105" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1218</SUB>> ]
-"5123" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1219</SUB>> ]
-"5106" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1218</SUB>> ]
-"5108" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1218</SUB>> ]
-"5124" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1219</SUB>> ]
-"5126" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1219</SUB>> ]
-"5088" [label = <(METHOD,CallNonvirtualBooleanMethodA)<SUB>1216</SUB>> ]
-"5143" [label = <(METHOD_RETURN,jboolean)<SUB>1216</SUB>> ]
+"5095" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1217</SUB>> ]
+"5113" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1218</SUB>> ]
+"5132" [label = <(soa,soa(env))<SUB>1219</SUB>> ]
+"5134" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetZ();,return InvokeWithJValues(soa, obj, mid, args).GetZ();)<SUB>1220</SUB>> ]
+"5135" [label = <(GetZ,InvokeWithJValues(soa, obj, mid, args).GetZ())<SUB>1220</SUB>> ]
+"5136" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetZ)<SUB>1220</SUB>> ]
+"5099" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1217</SUB>> ]
+"5117" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1218</SUB>> ]
+"5137" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1220</SUB>> ]
+"5142" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1220</SUB>> ]
+"5100" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1217</SUB>> ]
+"5104" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1217</SUB>> ]
+"5111" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1217</SUB>> ]
+"5118" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1218</SUB>> ]
+"5122" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1218</SUB>> ]
+"5129" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1218</SUB>> ]
+"5105" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1217</SUB>> ]
+"5123" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1218</SUB>> ]
+"5106" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1217</SUB>> ]
+"5108" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1217</SUB>> ]
+"5124" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1218</SUB>> ]
+"5126" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1218</SUB>> ]
+"5088" [label = <(METHOD,CallNonvirtualBooleanMethodA)<SUB>1215</SUB>> ]
+"5143" [label = <(METHOD_RETURN,jboolean)<SUB>1215</SUB>> ]
   "5095" -> "5100" 
   "5095" -> "5113" 
   "5113" -> "5118" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/97-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/97-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/97-cfg.dot	2023-06-07 19:35:41.437383228 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/97-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualByteMethod" {  
-"5152" [label = <(va_start,va_start(ap, mid))<SUB>1226</SUB>> ]
-"5156" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1227</SUB>> ]
-"5159" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1228</SUB>> ]
-"5177" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1229</SUB>> ]
-"5196" [label = <(soa,soa(env))<SUB>1230</SUB>> ]
-"5199" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1231</SUB>> ]
-"5205" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1232</SUB>> ]
-"5157" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1227</SUB>> ]
-"5200" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1231</SUB>> ]
-"5206" [label = <(GetB,result.GetB())<SUB>1232</SUB>> ]
-"5207" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1232</SUB>> ]
-"5163" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1228</SUB>> ]
-"5181" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1229</SUB>> ]
-"5209" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1232</SUB>> ]
-"5164" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1228</SUB>> ]
-"5168" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1228</SUB>> ]
-"5175" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1228</SUB>> ]
-"5182" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1229</SUB>> ]
-"5186" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1229</SUB>> ]
-"5193" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1229</SUB>> ]
-"5169" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1228</SUB>> ]
-"5187" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1229</SUB>> ]
-"5170" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1228</SUB>> ]
-"5172" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1228</SUB>> ]
-"5188" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1229</SUB>> ]
-"5190" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1229</SUB>> ]
-"5145" [label = <(METHOD,CallNonvirtualByteMethod)<SUB>1224</SUB>> ]
-"5210" [label = <(METHOD_RETURN,jbyte)<SUB>1224</SUB>> ]
+"5152" [label = <(va_start,va_start(ap, mid))<SUB>1225</SUB>> ]
+"5156" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1226</SUB>> ]
+"5159" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1227</SUB>> ]
+"5177" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1228</SUB>> ]
+"5196" [label = <(soa,soa(env))<SUB>1229</SUB>> ]
+"5199" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1230</SUB>> ]
+"5205" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1231</SUB>> ]
+"5157" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1226</SUB>> ]
+"5200" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1230</SUB>> ]
+"5206" [label = <(GetB,result.GetB())<SUB>1231</SUB>> ]
+"5207" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1231</SUB>> ]
+"5163" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1227</SUB>> ]
+"5181" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1228</SUB>> ]
+"5209" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1231</SUB>> ]
+"5164" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1227</SUB>> ]
+"5168" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1227</SUB>> ]
+"5175" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1227</SUB>> ]
+"5182" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1228</SUB>> ]
+"5186" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1228</SUB>> ]
+"5193" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1228</SUB>> ]
+"5169" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1227</SUB>> ]
+"5187" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1228</SUB>> ]
+"5170" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1227</SUB>> ]
+"5172" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1227</SUB>> ]
+"5188" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1228</SUB>> ]
+"5190" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1228</SUB>> ]
+"5145" [label = <(METHOD,CallNonvirtualByteMethod)<SUB>1223</SUB>> ]
+"5210" [label = <(METHOD_RETURN,jbyte)<SUB>1223</SUB>> ]
   "5152" -> "5157" 
   "5156" -> "5159" 
   "5159" -> "5164" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/98-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/98-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/98-cfg.dot	2023-06-07 19:35:41.447383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/98-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualByteMethodV" {  
-"5219" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1237</SUB>> ]
-"5237" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1238</SUB>> ]
-"5256" [label = <(soa,soa(env))<SUB>1239</SUB>> ]
-"5258" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetB();,return InvokeWithVarArgs(soa, obj, mid, args).GetB();)<SUB>1240</SUB>> ]
-"5259" [label = <(GetB,InvokeWithVarArgs(soa, obj, mid, args).GetB())<SUB>1240</SUB>> ]
-"5260" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetB)<SUB>1240</SUB>> ]
-"5223" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1237</SUB>> ]
-"5241" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1238</SUB>> ]
-"5261" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1240</SUB>> ]
-"5266" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1240</SUB>> ]
-"5224" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1237</SUB>> ]
-"5228" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1237</SUB>> ]
-"5235" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1237</SUB>> ]
-"5242" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1238</SUB>> ]
-"5246" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1238</SUB>> ]
-"5253" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1238</SUB>> ]
-"5229" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1237</SUB>> ]
-"5247" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1238</SUB>> ]
-"5230" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1237</SUB>> ]
-"5232" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1237</SUB>> ]
-"5248" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1238</SUB>> ]
-"5250" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1238</SUB>> ]
-"5212" [label = <(METHOD,CallNonvirtualByteMethodV)<SUB>1235</SUB>> ]
-"5267" [label = <(METHOD_RETURN,jbyte)<SUB>1235</SUB>> ]
+"5219" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1236</SUB>> ]
+"5237" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1237</SUB>> ]
+"5256" [label = <(soa,soa(env))<SUB>1238</SUB>> ]
+"5258" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetB();,return InvokeWithVarArgs(soa, obj, mid, args).GetB();)<SUB>1239</SUB>> ]
+"5259" [label = <(GetB,InvokeWithVarArgs(soa, obj, mid, args).GetB())<SUB>1239</SUB>> ]
+"5260" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetB)<SUB>1239</SUB>> ]
+"5223" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1236</SUB>> ]
+"5241" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1237</SUB>> ]
+"5261" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1239</SUB>> ]
+"5266" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1239</SUB>> ]
+"5224" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1236</SUB>> ]
+"5228" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1236</SUB>> ]
+"5235" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1236</SUB>> ]
+"5242" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1237</SUB>> ]
+"5246" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1237</SUB>> ]
+"5253" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1237</SUB>> ]
+"5229" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1236</SUB>> ]
+"5247" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1237</SUB>> ]
+"5230" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1236</SUB>> ]
+"5232" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1236</SUB>> ]
+"5248" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1237</SUB>> ]
+"5250" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1237</SUB>> ]
+"5212" [label = <(METHOD,CallNonvirtualByteMethodV)<SUB>1234</SUB>> ]
+"5267" [label = <(METHOD_RETURN,jbyte)<SUB>1234</SUB>> ]
   "5219" -> "5224" 
   "5219" -> "5237" 
   "5237" -> "5242" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/99-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/99-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/secure/out/99-cfg.dot	2023-06-07 19:35:41.447383226 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_8/vulnerable/out/99-cfg.dot	2023-06-07 19:35:47.877382797 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualByteMethodA" {  
-"5276" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1245</SUB>> ]
-"5294" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1246</SUB>> ]
-"5313" [label = <(soa,soa(env))<SUB>1247</SUB>> ]
-"5315" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetB();,return InvokeWithJValues(soa, obj, mid, args).GetB();)<SUB>1248</SUB>> ]
-"5316" [label = <(GetB,InvokeWithJValues(soa, obj, mid, args).GetB())<SUB>1248</SUB>> ]
-"5317" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetB)<SUB>1248</SUB>> ]
-"5280" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1245</SUB>> ]
-"5298" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1246</SUB>> ]
-"5318" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1248</SUB>> ]
-"5323" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1248</SUB>> ]
-"5281" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1245</SUB>> ]
-"5285" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1245</SUB>> ]
-"5292" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1245</SUB>> ]
-"5299" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1246</SUB>> ]
-"5303" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1246</SUB>> ]
-"5310" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1246</SUB>> ]
-"5286" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1245</SUB>> ]
-"5304" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1246</SUB>> ]
-"5287" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1245</SUB>> ]
-"5289" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1245</SUB>> ]
-"5305" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1246</SUB>> ]
-"5307" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1246</SUB>> ]
-"5269" [label = <(METHOD,CallNonvirtualByteMethodA)<SUB>1243</SUB>> ]
-"5324" [label = <(METHOD_RETURN,jbyte)<SUB>1243</SUB>> ]
+"5276" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1244</SUB>> ]
+"5294" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1245</SUB>> ]
+"5313" [label = <(soa,soa(env))<SUB>1246</SUB>> ]
+"5315" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetB();,return InvokeWithJValues(soa, obj, mid, args).GetB();)<SUB>1247</SUB>> ]
+"5316" [label = <(GetB,InvokeWithJValues(soa, obj, mid, args).GetB())<SUB>1247</SUB>> ]
+"5317" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetB)<SUB>1247</SUB>> ]
+"5280" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1244</SUB>> ]
+"5298" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1245</SUB>> ]
+"5318" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1247</SUB>> ]
+"5323" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1247</SUB>> ]
+"5281" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1244</SUB>> ]
+"5285" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1244</SUB>> ]
+"5292" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1244</SUB>> ]
+"5299" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1245</SUB>> ]
+"5303" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1245</SUB>> ]
+"5310" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1245</SUB>> ]
+"5286" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1244</SUB>> ]
+"5304" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1245</SUB>> ]
+"5287" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1244</SUB>> ]
+"5289" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1244</SUB>> ]
+"5305" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1245</SUB>> ]
+"5307" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1245</SUB>> ]
+"5269" [label = <(METHOD,CallNonvirtualByteMethodA)<SUB>1242</SUB>> ]
+"5324" [label = <(METHOD_RETURN,jbyte)<SUB>1242</SUB>> ]
   "5276" -> "5281" 
   "5276" -> "5294" 
   "5294" -> "5299" 

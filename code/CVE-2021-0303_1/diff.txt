diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/0-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/0-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/0-cfg.dot	2023-06-09 11:34:58.466305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/0-cfg.dot	2023-06-09 11:35:02.316305191 +0330
@@ -1,5 +1,5 @@
-digraph "GrpcGraph" {  
-"8" [label = <(METHOD,GrpcGraph)<SUB>46</SUB>> ]
-"10" [label = <(METHOD_RETURN,ANY)<SUB>46</SUB>> ]
-  "8" -> "10" 
+digraph "~EndOfStreamReporter" {  
+"9" [label = <(METHOD,~EndOfStreamReporter)<SUB>40</SUB>> ]
+"11" [label = <(METHOD_RETURN,ANY)<SUB>40</SUB>> ]
+  "9" -> "11" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/1-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/1-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/1-cfg.dot	2023-06-09 11:34:58.466305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/1-cfg.dot	2023-06-09 11:35:02.316305191 +0330
@@ -1,5 +1,5 @@
-digraph "~GrpcGraph" {  
-"12" [label = <(METHOD,~GrpcGraph)<SUB>48</SUB>> ]
-"14" [label = <(METHOD_RETURN,virtual)<SUB>48</SUB>> ]
-  "12" -> "14" 
+digraph "reportStreamClosed" {  
+"13" [label = <(METHOD,reportStreamClosed)<SUB>42</SUB>> ]
+"16" [label = <(METHOD_RETURN,void)<SUB>42</SUB>> ]
+  "13" -> "16" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/10-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/10-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/10-cfg.dot	2023-06-09 11:34:58.476305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/10-cfg.dot	2023-06-09 11:35:02.326305191 +0330
@@ -1,11 +1,5 @@
-digraph "GetGraphType" {  
-"59" [label = <(RETURN,return PrebuiltGraphType::REMOTE;,return PrebuiltGraphType::REMOTE;)<SUB>66</SUB>> ]
-"60" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphType::REMOTE)<SUB>66</SUB>> ]
-"62" [label = <(FIELD_IDENTIFIER,REMOTE,REMOTE)<SUB>66</SUB>> ]
-"57" [label = <(METHOD,GetGraphType)<SUB>65</SUB>> ]
-"63" [label = <(METHOD_RETURN,PrebuiltGraphType)<SUB>65</SUB>> ]
-  "59" -> "63" 
-  "60" -> "59" 
-  "62" -> "60" 
-  "57" -> "62" 
+digraph "stopObservingStream" {  
+"63" [label = <(METHOD,stopObservingStream)<SUB>69</SUB>> ]
+"65" [label = <(METHOD_RETURN,void)<SUB>69</SUB>> ]
+  "63" -> "65" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/100-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/100-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/100-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/100-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "std::move" {  
-"2264" [label = <(METHOD,std::move)> ]
-"2268" [label = <(METHOD_RETURN,ANY)> ]
-  "2264" -> "2268" 
+digraph "::grpc::InsecureChannelCredentials" {  
+"2249" [label = <(METHOD,::grpc::InsecureChannelCredentials)> ]
+"2252" [label = <(METHOD_RETURN,ANY)> ]
+  "2249" -> "2252" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/101-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/101-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/101-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/101-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "reset" {  
-"2269" [label = <(METHOD,reset)> ]
-"2272" [label = <(METHOD_RETURN,ANY)> ]
-  "2269" -> "2272" 
+digraph "::grpc::CreateChannel" {  
+"2253" [label = <(METHOD,::grpc::CreateChannel)> ]
+"2258" [label = <(METHOD_RETURN,ANY)> ]
+  "2253" -> "2258" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/102-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/102-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/102-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/102-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "lock" {  
-"2273" [label = <(METHOD,lock)> ]
-"2276" [label = <(METHOD_RETURN,ANY)> ]
-  "2273" -> "2276" 
+digraph "proto::GrpcGraphService::NewStub" {  
+"2259" [label = <(METHOD,proto::GrpcGraphService::NewStub)> ]
+"2263" [label = <(METHOD_RETURN,ANY)> ]
+  "2259" -> "2263" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/103-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/103-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/103-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/103-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.greaterThan" {  
-"2277" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
-"2281" [label = <(METHOD_RETURN,ANY)> ]
-  "2277" -> "2281" 
+digraph "set_deadline" {  
+"2264" [label = <(METHOD,set_deadline)> ]
+"2268" [label = <(METHOD_RETURN,ANY)> ]
+  "2264" -> "2268" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/104-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/104-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/104-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/104-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.lessThan" {  
-"2282" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
-"2286" [label = <(METHOD_RETURN,ANY)> ]
-  "2282" -> "2286" 
+digraph "std::chrono::system_clock::now" {  
+"2269" [label = <(METHOD,std::chrono::system_clock::now)> ]
+"2272" [label = <(METHOD_RETURN,ANY)> ]
+  "2269" -> "2272" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/105-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/105-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/105-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/105-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "::grpc::InsecureChannelCredentials" {  
-"2287" [label = <(METHOD,::grpc::InsecureChannelCredentials)> ]
-"2290" [label = <(METHOD_RETURN,ANY)> ]
-  "2287" -> "2290" 
+digraph "std::chrono::milliseconds" {  
+"2273" [label = <(METHOD,std::chrono::milliseconds)> ]
+"2277" [label = <(METHOD_RETURN,ANY)> ]
+  "2273" -> "2277" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/106-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/106-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/106-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/106-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "::grpc::CreateChannel" {  
-"2291" [label = <(METHOD,::grpc::CreateChannel)> ]
-"2296" [label = <(METHOD_RETURN,ANY)> ]
-  "2291" -> "2296" 
+digraph "&lt;operator&gt;.arithmeticShiftRight" {  
+"2278" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
+"2282" [label = <(METHOD_RETURN,ANY)> ]
+  "2278" -> "2282" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/107-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/107-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/107-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/107-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "proto::GrpcGraphService::NewStub" {  
-"2297" [label = <(METHOD,proto::GrpcGraphService::NewStub)> ]
-"2301" [label = <(METHOD_RETURN,ANY)> ]
-  "2297" -> "2301" 
+digraph "rpc" {  
+"2283" [label = <(METHOD,rpc)> ]
+"2286" [label = <(METHOD_RETURN,ANY)> ]
+  "2283" -> "2286" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/108-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/108-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/108-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/108-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "set_deadline" {  
-"2302" [label = <(METHOD,set_deadline)> ]
-"2306" [label = <(METHOD_RETURN,ANY)> ]
-  "2302" -> "2306" 
+digraph "AsyncGetGraphOptions" {  
+"2287" [label = <(METHOD,AsyncGetGraphOptions)> ]
+"2293" [label = <(METHOD_RETURN,ANY)> ]
+  "2287" -> "2293" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/109-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/109-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/109-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/109-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "std::chrono::system_clock::now" {  
-"2307" [label = <(METHOD,std::chrono::system_clock::now)> ]
-"2310" [label = <(METHOD_RETURN,ANY)> ]
-  "2307" -> "2310" 
+digraph "&lt;operator&gt;.notEquals" {  
+"2294" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
+"2298" [label = <(METHOD_RETURN,ANY)> ]
+  "2294" -> "2298" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/11-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/11-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/11-cfg.dot	2023-06-09 11:34:58.476305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/11-cfg.dot	2023-06-09 11:35:02.326305191 +0330
@@ -1,5 +1,7 @@
-digraph "GetGraphState" {  
-"65" [label = <(METHOD,GetGraphState)<SUB>69</SUB>> ]
-"67" [label = <(METHOD_RETURN,PrebuiltGraphState)<SUB>69</SUB>> ]
-  "65" -> "67" 
+digraph "&lt;clinit&gt;" {  
+"75" [label = <(&lt;operator&gt;.assignment,mStopped = true)<SUB>75</SUB>> ]
+"73" [label = <(METHOD,&lt;clinit&gt;)> ]
+"79" [label = <(METHOD_RETURN,ANY)> ]
+  "75" -> "79" 
+  "73" -> "75" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/110-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/110-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/110-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/110-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "std::chrono::milliseconds" {  
-"2311" [label = <(METHOD,std::chrono::milliseconds)> ]
-"2315" [label = <(METHOD_RETURN,ANY)> ]
-  "2311" -> "2315" 
+digraph "serialized_options" {  
+"2299" [label = <(METHOD,serialized_options)> ]
+"2302" [label = <(METHOD_RETURN,ANY)> ]
+  "2299" -> "2302" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/111-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/111-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/111-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/111-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.arithmeticShiftRight" {  
-"2316" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
-"2320" [label = <(METHOD_RETURN,ANY)> ]
-  "2316" -> "2320" 
+digraph "ParseFromString" {  
+"2303" [label = <(METHOD,ParseFromString)> ]
+"2307" [label = <(METHOD_RETURN,ANY)> ]
+  "2303" -> "2307" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/112-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/112-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/112-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/112-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "rpc" {  
-"2321" [label = <(METHOD,rpc)> ]
-"2324" [label = <(METHOD_RETURN,ANY)> ]
-  "2321" -> "2324" 
+digraph "&lt;operator&gt;.equals" {  
+"2308" [label = <(METHOD,&lt;operator&gt;.equals)> ]
+"2312" [label = <(METHOD_RETURN,ANY)> ]
+  "2308" -> "2312" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/113-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/113-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/113-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/113-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "AsyncGetGraphOptions" {  
-"2325" [label = <(METHOD,AsyncGetGraphOptions)> ]
-"2331" [label = <(METHOD_RETURN,ANY)> ]
-  "2325" -> "2331" 
+digraph "isAborted" {  
+"2313" [label = <(METHOD,isAborted)> ]
+"2316" [label = <(METHOD_RETURN,ANY)> ]
+  "2313" -> "2316" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/114-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/114-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/114-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/114-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.notEquals" {  
-"2332" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
-"2336" [label = <(METHOD_RETURN,ANY)> ]
-  "2332" -> "2336" 
+digraph "isTransitionComplete" {  
+"2317" [label = <(METHOD,isTransitionComplete)> ]
+"2320" [label = <(METHOD_RETURN,ANY)> ]
+  "2317" -> "2320" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/115-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/115-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/115-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/115-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "serialized_options" {  
-"2337" [label = <(METHOD,serialized_options)> ]
-"2340" [label = <(METHOD_RETURN,ANY)> ]
-  "2337" -> "2340" 
+digraph "getSerializedClientConfig" {  
+"2321" [label = <(METHOD,getSerializedClientConfig)> ]
+"2324" [label = <(METHOD_RETURN,ANY)> ]
+  "2321" -> "2324" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/116-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/116-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/116-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/116-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "ParseFromString" {  
-"2341" [label = <(METHOD,ParseFromString)> ]
-"2345" [label = <(METHOD_RETURN,ANY)> ]
-  "2341" -> "2345" 
+digraph "set_serialized_config" {  
+"2325" [label = <(METHOD,set_serialized_config)> ]
+"2329" [label = <(METHOD_RETURN,ANY)> ]
+  "2325" -> "2329" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/117-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/117-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/117-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/117-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.equals" {  
-"2346" [label = <(METHOD,&lt;operator&gt;.equals)> ]
-"2350" [label = <(METHOD_RETURN,ANY)> ]
-  "2346" -> "2350" 
+digraph "AsyncSetGraphConfig" {  
+"2330" [label = <(METHOD,AsyncSetGraphConfig)> ]
+"2336" [label = <(METHOD_RETURN,ANY)> ]
+  "2330" -> "2336" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/118-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/118-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/118-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/118-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "isAborted" {  
-"2351" [label = <(METHOD,isAborted)> ]
-"2354" [label = <(METHOD_RETURN,ANY)> ]
-  "2351" -> "2354" 
+digraph "code" {  
+"2337" [label = <(METHOD,code)> ]
+"2340" [label = <(METHOD_RETURN,ANY)> ]
+  "2337" -> "2340" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/119-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/119-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/119-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/119-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "isTransitionComplete" {  
-"2355" [label = <(METHOD,isTransitionComplete)> ]
-"2358" [label = <(METHOD_RETURN,ANY)> ]
-  "2355" -> "2358" 
+digraph "message" {  
+"2341" [label = <(METHOD,message)> ]
+"2344" [label = <(METHOD_RETURN,ANY)> ]
+  "2341" -> "2344" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/12-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/12-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/12-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/12-cfg.dot	2023-06-09 11:35:02.326305191 +0330
@@ -1,5 +1,5 @@
-digraph "GetStatus" {  
-"69" [label = <(METHOD,GetStatus)<SUB>70</SUB>> ]
-"71" [label = <(METHOD_RETURN,Status)<SUB>70</SUB>> ]
-  "69" -> "71" 
+digraph "StreamSetObserver" {  
+"81" [label = <(METHOD,StreamSetObserver)<SUB>81</SUB>> ]
+"85" [label = <(METHOD_RETURN,ANY)<SUB>81</SUB>> ]
+  "81" -> "85" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/120-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/120-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/120-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/120-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "getSerializedClientConfig" {  
-"2359" [label = <(METHOD,getSerializedClientConfig)> ]
-"2362" [label = <(METHOD_RETURN,ANY)> ]
-  "2359" -> "2362" 
+digraph "&lt;operator&gt;.bracketedPrimary" {  
+"2345" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
+"2348" [label = <(METHOD_RETURN,ANY)> ]
+  "2345" -> "2348" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/121-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/121-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/121-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/121-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "set_serialized_config" {  
-"2363" [label = <(METHOD,set_serialized_config)> ]
-"2367" [label = <(METHOD_RETURN,ANY)> ]
-  "2363" -> "2367" 
+digraph "&lt;operator&gt;.expressionList" {  
+"2349" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
+"2354" [label = <(METHOD_RETURN,ANY)> ]
+  "2349" -> "2354" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/122-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/122-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/122-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/122-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "AsyncSetGraphConfig" {  
-"2368" [label = <(METHOD,AsyncSetGraphConfig)> ]
-"2374" [label = <(METHOD_RETURN,ANY)> ]
-  "2368" -> "2374" 
+digraph "startObservingStreams" {  
+"2355" [label = <(METHOD,startObservingStreams)> ]
+"2358" [label = <(METHOD_RETURN,ANY)> ]
+  "2355" -> "2358" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/123-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/123-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/123-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/123-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "code" {  
-"2375" [label = <(METHOD,code)> ]
-"2378" [label = <(METHOD_RETURN,ANY)> ]
-  "2375" -> "2378" 
+digraph "AsyncStartGraphExecution" {  
+"2359" [label = <(METHOD,AsyncStartGraphExecution)> ]
+"2365" [label = <(METHOD_RETURN,ANY)> ]
+  "2359" -> "2365" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/124-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/124-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/124-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/124-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "message" {  
-"2379" [label = <(METHOD,message)> ]
-"2382" [label = <(METHOD_RETURN,ANY)> ]
-  "2379" -> "2382" 
+digraph "set_stop_immediate" {  
+"2366" [label = <(METHOD,set_stop_immediate)> ]
+"2370" [label = <(METHOD_RETURN,ANY)> ]
+  "2366" -> "2370" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/125-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/125-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/125-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/125-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.bracketedPrimary" {  
-"2383" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
-"2386" [label = <(METHOD_RETURN,ANY)> ]
-  "2383" -> "2386" 
+digraph "AsyncStopGraphExecution" {  
+"2371" [label = <(METHOD,AsyncStopGraphExecution)> ]
+"2377" [label = <(METHOD_RETURN,ANY)> ]
+  "2371" -> "2377" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/126-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/126-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/126-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/126-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.expressionList" {  
-"2387" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
-"2392" [label = <(METHOD_RETURN,ANY)> ]
-  "2387" -> "2392" 
+digraph "stopObservingStreams" {  
+"2378" [label = <(METHOD,stopObservingStreams)> ]
+"2382" [label = <(METHOD_RETURN,ANY)> ]
+  "2378" -> "2382" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/127-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/127-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/127-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/127-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "startObservingStreams" {  
-"2393" [label = <(METHOD,startObservingStreams)> ]
-"2396" [label = <(METHOD_RETURN,ANY)> ]
-  "2393" -> "2396" 
+digraph "AsyncResetGraph" {  
+"2383" [label = <(METHOD,AsyncResetGraph)> ]
+"2389" [label = <(METHOD_RETURN,ANY)> ]
+  "2383" -> "2389" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/128-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/128-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/128-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/128-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "AsyncStartGraphExecution" {  
-"2397" [label = <(METHOD,AsyncStartGraphExecution)> ]
-"2403" [label = <(METHOD_RETURN,ANY)> ]
-  "2397" -> "2403" 
+digraph "reset" {  
+"2390" [label = <(METHOD,reset)> ]
+"2393" [label = <(METHOD_RETURN,ANY)> ]
+  "2390" -> "2393" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/129-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/129-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/129-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/129-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "set_stop_immediate" {  
-"2404" [label = <(METHOD,set_stop_immediate)> ]
-"2408" [label = <(METHOD_RETURN,ANY)> ]
-  "2404" -> "2408" 
+digraph "AsyncStartGraphProfiling" {  
+"2394" [label = <(METHOD,AsyncStartGraphProfiling)> ]
+"2400" [label = <(METHOD_RETURN,ANY)> ]
+  "2394" -> "2400" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/13-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/13-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/13-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/13-cfg.dot	2023-06-09 11:35:02.326305191 +0330
@@ -1,5 +1,5 @@
-digraph "GetErrorMessage" {  
-"73" [label = <(METHOD,GetErrorMessage)<SUB>71</SUB>> ]
-"75" [label = <(METHOD_RETURN,ANY)<SUB>71</SUB>> ]
-  "73" -> "75" 
+digraph "startObservingStreams" {  
+"87" [label = <(METHOD,startObservingStreams)<SUB>84</SUB>> ]
+"89" [label = <(METHOD_RETURN,Status)<SUB>84</SUB>> ]
+  "87" -> "89" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/130-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/130-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/130-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/130-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "AsyncStopGraphExecution" {  
-"2409" [label = <(METHOD,AsyncStopGraphExecution)> ]
-"2415" [label = <(METHOD_RETURN,ANY)> ]
-  "2409" -> "2415" 
+digraph "AsyncStopGraphProfiling" {  
+"2401" [label = <(METHOD,AsyncStopGraphProfiling)> ]
+"2407" [label = <(METHOD_RETURN,ANY)> ]
+  "2401" -> "2407" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/131-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/131-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/131-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/131-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "stopObservingStreams" {  
-"2416" [label = <(METHOD,stopObservingStreams)> ]
-"2420" [label = <(METHOD_RETURN,ANY)> ]
-  "2416" -> "2420" 
+digraph "AsyncGetProfilingData" {  
+"2408" [label = <(METHOD,AsyncGetProfilingData)> ]
+"2414" [label = <(METHOD_RETURN,ANY)> ]
+  "2408" -> "2414" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/132-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/132-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/132-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/132-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "AsyncResetGraph" {  
-"2421" [label = <(METHOD,AsyncResetGraph)> ]
-"2427" [label = <(METHOD_RETURN,ANY)> ]
-  "2421" -> "2427" 
+digraph "data" {  
+"2415" [label = <(METHOD,data)> ]
+"2418" [label = <(METHOD_RETURN,ANY)> ]
+  "2415" -> "2418" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/133-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/133-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/133-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/133-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "AsyncStartGraphProfiling" {  
-"2428" [label = <(METHOD,AsyncStartGraphProfiling)> ]
-"2434" [label = <(METHOD_RETURN,ANY)> ]
-  "2428" -> "2434" 
+digraph "DispatchPixelData" {  
+"2419" [label = <(METHOD,DispatchPixelData)> ]
+"2425" [label = <(METHOD_RETURN,ANY)> ]
+  "2419" -> "2425" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/134-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/134-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/134-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/134-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "AsyncStopGraphProfiling" {  
-"2435" [label = <(METHOD,AsyncStopGraphProfiling)> ]
-"2441" [label = <(METHOD_RETURN,ANY)> ]
-  "2435" -> "2441" 
+digraph "DispatchSerializedData" {  
+"2426" [label = <(METHOD,DispatchSerializedData)> ]
+"2432" [label = <(METHOD_RETURN,ANY)> ]
+  "2426" -> "2432" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/135-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/135-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/135-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/135-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "AsyncGetProfilingData" {  
-"2442" [label = <(METHOD,AsyncGetProfilingData)> ]
-"2448" [label = <(METHOD_RETURN,ANY)> ]
-  "2442" -> "2448" 
+digraph "DispatchGraphTerminationMessage" {  
+"2433" [label = <(METHOD,DispatchGraphTerminationMessage)> ]
+"2438" [label = <(METHOD_RETURN,ANY)> ]
+  "2433" -> "2438" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/136-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/136-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/136-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/136-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "data" {  
-"2449" [label = <(METHOD,data)> ]
-"2452" [label = <(METHOD_RETURN,ANY)> ]
-  "2449" -> "2452" 
+digraph "std::make_unique&lt;GrpcGraph&gt;" {  
+"2439" [label = <(METHOD,std::make_unique&lt;GrpcGraph&gt;)> ]
+"2442" [label = <(METHOD_RETURN,ANY)> ]
+  "2439" -> "2442" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/137-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/137-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/137-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/137-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "DispatchPixelData" {  
-"2453" [label = <(METHOD,DispatchPixelData)> ]
-"2459" [label = <(METHOD_RETURN,ANY)> ]
-  "2453" -> "2459" 
+digraph "initialize" {  
+"2443" [label = <(METHOD,initialize)> ]
+"2448" [label = <(METHOD_RETURN,ANY)> ]
+  "2443" -> "2448" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/138-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/138-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/138-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/138-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "DispatchSerializedData" {  
-"2460" [label = <(METHOD,DispatchSerializedData)> ]
-"2466" [label = <(METHOD_RETURN,ANY)> ]
-  "2460" -> "2466" 
+digraph "get" {  
+"2449" [label = <(METHOD,get)> ]
+"2452" [label = <(METHOD_RETURN,ANY)> ]
+  "2449" -> "2452" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/139-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/139-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/139-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/139-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "DispatchGraphTerminationMessage" {  
-"2467" [label = <(METHOD,DispatchGraphTerminationMessage)> ]
-"2472" [label = <(METHOD_RETURN,ANY)> ]
-  "2467" -> "2472" 
+digraph "std::thread" {  
+"2453" [label = <(METHOD,std::thread)> ]
+"2457" [label = <(METHOD_RETURN,ANY)> ]
+  "2453" -> "2457" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/14-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/14-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/14-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/14-cfg.dot	2023-06-09 11:35:02.326305191 +0330
@@ -1,7 +1,5 @@
-digraph "GetSupportedGraphConfigs" {  
-"79" [label = <(RETURN,return mGraphConfig;,return mGraphConfig;)<SUB>75</SUB>> ]
-"77" [label = <(METHOD,GetSupportedGraphConfigs)<SUB>74</SUB>> ]
-"81" [label = <(METHOD_RETURN,Options)<SUB>74</SUB>> ]
-  "79" -> "81" 
-  "77" -> "79" 
+digraph "stopObservingStreams" {  
+"91" [label = <(METHOD,stopObservingStreams)<SUB>86</SUB>> ]
+"94" [label = <(METHOD_RETURN,void)<SUB>86</SUB>> ]
+  "91" -> "94" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/140-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/140-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/140-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/140-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "std::make_unique&lt;GrpcGraph&gt;" {  
-"2473" [label = <(METHOD,std::make_unique&lt;GrpcGraph&gt;)> ]
-"2476" [label = <(METHOD_RETURN,ANY)> ]
-  "2473" -> "2476" 
+digraph "stopObservingStream" {  
+"2458" [label = <(METHOD,stopObservingStream)> ]
+"2461" [label = <(METHOD_RETURN,ANY)> ]
+  "2458" -> "2461" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/141-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/141-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/141-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/141-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "initialize" {  
-"2477" [label = <(METHOD,initialize)> ]
-"2482" [label = <(METHOD_RETURN,ANY)> ]
-  "2477" -> "2482" 
+digraph "joinable" {  
+"2462" [label = <(METHOD,joinable)> ]
+"2465" [label = <(METHOD_RETURN,ANY)> ]
+  "2462" -> "2465" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/142-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/142-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/142-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/142-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "std::thread" {  
-"2483" [label = <(METHOD,std::thread)> ]
-"2487" [label = <(METHOD_RETURN,ANY)> ]
-  "2483" -> "2487" 
+digraph "join" {  
+"2466" [label = <(METHOD,join)> ]
+"2469" [label = <(METHOD_RETURN,ANY)> ]
+  "2466" -> "2469" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/143-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/143-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/143-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/143-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "stopObservingStream" {  
-"2488" [label = <(METHOD,stopObservingStream)> ]
-"2491" [label = <(METHOD_RETURN,ANY)> ]
-  "2488" -> "2491" 
+digraph "&lt;operator&gt;.arrayInitializer" {  
+"2470" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
+"2472" [label = <(METHOD_RETURN,ANY)> ]
+  "2470" -> "2472" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/144-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/144-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/144-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/144-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "joinable" {  
-"2492" [label = <(METHOD,joinable)> ]
-"2495" [label = <(METHOD_RETURN,ANY)> ]
-  "2492" -> "2495" 
+digraph "getOutputStreamConfigs" {  
+"2473" [label = <(METHOD,getOutputStreamConfigs)> ]
+"2477" [label = <(METHOD_RETURN,ANY)> ]
+  "2473" -> "2477" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/145-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/145-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/145-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/145-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "join" {  
-"2496" [label = <(METHOD,join)> ]
-"2499" [label = <(METHOD_RETURN,ANY)> ]
-  "2496" -> "2499" 
+digraph "&lt;operator&gt;.logicalOr" {  
+"2478" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
+"2482" [label = <(METHOD_RETURN,ANY)> ]
+  "2478" -> "2482" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/146-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/146-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/146-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/146-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.arrayInitializer" {  
-"2500" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
-"2502" [label = <(METHOD_RETURN,ANY)> ]
-  "2500" -> "2502" 
+digraph "empty" {  
+"2483" [label = <(METHOD,empty)> ]
+"2486" [label = <(METHOD_RETURN,ANY)> ]
+  "2483" -> "2486" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/147-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/147-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/147-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/147-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "getOutputStreamConfigs" {  
-"2503" [label = <(METHOD,getOutputStreamConfigs)> ]
-"2507" [label = <(METHOD_RETURN,ANY)> ]
-  "2503" -> "2507" 
+digraph "startObservingStream" {  
+"2487" [label = <(METHOD,startObservingStream)> ]
+"2490" [label = <(METHOD_RETURN,ANY)> ]
+  "2487" -> "2490" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/148-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/148-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/148-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/148-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.logicalOr" {  
-"2508" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
-"2512" [label = <(METHOD_RETURN,ANY)> ]
-  "2508" -> "2512" 
+digraph "t" {  
+"2491" [label = <(METHOD,t)> ]
+"2494" [label = <(METHOD_RETURN,ANY)> ]
+  "2491" -> "2494" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/149-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/149-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/149-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/149-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "empty" {  
-"2513" [label = <(METHOD,empty)> ]
-"2516" [label = <(METHOD_RETURN,ANY)> ]
-  "2513" -> "2516" 
+digraph "detach" {  
+"2495" [label = <(METHOD,detach)> ]
+"2498" [label = <(METHOD_RETURN,ANY)> ]
+  "2495" -> "2498" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/15-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/15-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/15-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/15-cfg.dot	2023-06-09 11:35:02.326305191 +0330
@@ -1,5 +1,5 @@
-digraph "SetInputStreamData" {  
-"83" [label = <(METHOD,SetInputStreamData)<SUB>80</SUB>> ]
-"88" [label = <(METHOD_RETURN,Status)<SUB>80</SUB>> ]
-  "83" -> "88" 
+digraph "reportStreamClosed" {  
+"96" [label = <(METHOD,reportStreamClosed)<SUB>88</SUB>> ]
+"99" [label = <(METHOD_RETURN,void)<SUB>88</SUB>> ]
+  "96" -> "99" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/150-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/150-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/150-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/150-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "startObservingStream" {  
-"2517" [label = <(METHOD,startObservingStream)> ]
-"2520" [label = <(METHOD_RETURN,ANY)> ]
-  "2517" -> "2520" 
+digraph "emplace" {  
+"2499" [label = <(METHOD,emplace)> ]
+"2503" [label = <(METHOD_RETURN,ANY)> ]
+  "2499" -> "2503" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/151-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/151-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/151-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/151-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "t" {  
-"2521" [label = <(METHOD,t)> ]
-"2524" [label = <(METHOD_RETURN,ANY)> ]
-  "2521" -> "2524" 
+digraph "std::make_pair" {  
+"2504" [label = <(METHOD,std::make_pair)> ]
+"2509" [label = <(METHOD_RETURN,ANY)> ]
+  "2504" -> "2509" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/152-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/152-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/152-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/152-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "detach" {  
-"2525" [label = <(METHOD,detach)> ]
-"2528" [label = <(METHOD_RETURN,ANY)> ]
-  "2525" -> "2528" 
+digraph "wait" {  
+"2510" [label = <(METHOD,wait)> ]
+"2515" [label = <(METHOD_RETURN,ANY)> ]
+  "2510" -> "2515" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/153-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/153-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/153-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/153-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "emplace" {  
-"2529" [label = <(METHOD,emplace)> ]
-"2533" [label = <(METHOD_RETURN,ANY)> ]
-  "2529" -> "2533" 
+digraph "find" {  
+"2516" [label = <(METHOD,find)> ]
+"2520" [label = <(METHOD_RETURN,ANY)> ]
+  "2516" -> "2520" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/154-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/154-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/154-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/154-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "std::make_pair" {  
-"2534" [label = <(METHOD,std::make_pair)> ]
-"2539" [label = <(METHOD_RETURN,ANY)> ]
-  "2534" -> "2539" 
+digraph "end" {  
+"2521" [label = <(METHOD,end)> ]
+"2524" [label = <(METHOD_RETURN,ANY)> ]
+  "2521" -> "2524" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/155-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/155-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/155-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/155-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "wait" {  
-"2540" [label = <(METHOD,wait)> ]
-"2545" [label = <(METHOD_RETURN,ANY)> ]
-  "2540" -> "2545" 
+digraph "erase" {  
+"2525" [label = <(METHOD,erase)> ]
+"2529" [label = <(METHOD_RETURN,ANY)> ]
+  "2525" -> "2529" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/156-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/156-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/156-cfg.dot	2023-06-09 11:34:58.616305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/156-cfg.dot	2023-06-09 11:35:02.466305192 +0330
@@ -1,5 +1,5 @@
-digraph "find" {  
-"2546" [label = <(METHOD,find)> ]
-"2550" [label = <(METHOD_RETURN,ANY)> ]
-  "2546" -> "2550" 
+digraph "notify_one" {  
+"2530" [label = <(METHOD,notify_one)> ]
+"2533" [label = <(METHOD_RETURN,ANY)> ]
+  "2530" -> "2533" 
 }
Only in /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out: 157-cfg.dot
Only in /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out: 158-cfg.dot
Only in /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out: 159-cfg.dot
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/16-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/16-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/16-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/16-cfg.dot	2023-06-09 11:35:02.326305191 +0330
@@ -1,5 +1,7 @@
-digraph "SetInputStreamPixelData" {  
-"90" [label = <(METHOD,SetInputStreamPixelData)<SUB>84</SUB>> ]
-"95" [label = <(METHOD_RETURN,Status)<SUB>84</SUB>> ]
-  "90" -> "95" 
+digraph "&lt;clinit&gt;" {  
+"109" [label = <(&lt;operator&gt;.assignment,mStopped = true)<SUB>95</SUB>> ]
+"107" [label = <(METHOD,&lt;clinit&gt;)> ]
+"113" [label = <(METHOD_RETURN,ANY)> ]
+  "109" -> "113" 
+  "107" -> "109" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/17-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/17-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/17-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/17-cfg.dot	2023-06-09 11:35:02.336305191 +0330
@@ -1,5 +1,7 @@
-digraph "StartGraphProfiling" {  
-"97" [label = <(METHOD,StartGraphProfiling)<SUB>88</SUB>> ]
-"99" [label = <(METHOD_RETURN,Status)<SUB>88</SUB>> ]
-  "97" -> "99" 
+digraph "&lt;global&gt;" {  
+"124" [label = <(&lt;operator&gt;.assignment,kRpcDeadlineMilliseconds = 100)<SUB>34</SUB>> ]
+"116" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"1594" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+  "124" -> "1594" 
+  "116" -> "124" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/18-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/18-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/18-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/18-cfg.dot	2023-06-09 11:35:02.356305191 +0330
@@ -1,5 +1,142 @@
-digraph "StopGraphProfiling" {  
-"101" [label = <(METHOD,StopGraphProfiling)<SUB>91</SUB>> ]
-"103" [label = <(METHOD_RETURN,Status)<SUB>91</SUB>> ]
-  "101" -> "103" 
+digraph "FinishRpcAndGetResult" {  
+"133" [label = <(&lt;operator&gt;.assignment,random_tag = rand())<SUB>40</SUB>> ]
+"137" [label = <(Finish,rpc-&gt;Finish(response, &amp;grpcStatus, reinterpret_cast&lt;void*&gt;(random_tag)))<SUB>42</SUB>> ]
+"148" [label = <(&lt;operator&gt;.assignment,ok = false)<SUB>43</SUB>> ]
+"193" [label = <(CHECK_EQ,CHECK_EQ(got_tag, reinterpret_cast&lt;void*&gt;(random_tag)))<SUB>55</SUB>> ]
+"235" [label = <(RETURN,return std::pair(Status::SUCCESS, std::string(&quot;&quot;));,return std::pair(Status::SUCCESS, std::string(&quot;&quot;));)<SUB>63</SUB>> ]
+"135" [label = <(rand,rand())<SUB>40</SUB>> ]
+"138" [label = <(&lt;operator&gt;.indirectFieldAccess,rpc-&gt;Finish)<SUB>42</SUB>> ]
+"142" [label = <(&lt;operator&gt;.addressOf,&amp;grpcStatus)<SUB>42</SUB>> ]
+"144" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(random_tag))<SUB>42</SUB>> ]
+"153" [label = <(&lt;operator&gt;.logicalNot,!cq-&gt;Next(&amp;got_tag, &amp;ok))<SUB>45</SUB>> ]
+"177" [label = <(&lt;operator&gt;.logicalNot,!ok)<SUB>50</SUB>> ]
+"195" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(random_tag))<SUB>55</SUB>> ]
+"199" [label = <(&lt;operator&gt;.logicalNot,!grpcStatus.ok())<SUB>56</SUB>> ]
+"236" [label = <(std::pair,std::pair(Status::SUCCESS, std::string(&quot;&quot;)))<SUB>63</SUB>> ]
+"140" [label = <(FIELD_IDENTIFIER,Finish,Finish)<SUB>42</SUB>> ]
+"145" [label = <(UNKNOWN,void*,void*)<SUB>42</SUB>> ]
+"154" [label = <(Next,cq-&gt;Next(&amp;got_tag, &amp;ok))<SUB>45</SUB>> ]
+"163" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Unexpected shutdown of the completion queue&quot;)<SUB>46</SUB>> ]
+"167" [label = <(RETURN,return std::pair(Status::FATAL_ERROR, &quot;Unexpected shutdown of the completion queue&quot;);,return std::pair(Status::FATAL_ERROR, &quot;Unexpected shutdown of the completion queue&quot;);)<SUB>47</SUB>> ]
+"180" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Unable to complete RPC request&quot;)<SUB>51</SUB>> ]
+"184" [label = <(RETURN,return std::pair(Status::FATAL_ERROR, &quot;Unable to complete RPC request&quot;);,return std::pair(Status::FATAL_ERROR, &quot;Unable to complete RPC request&quot;);)<SUB>52</SUB>> ]
+"196" [label = <(UNKNOWN,void*,void*)<SUB>55</SUB>> ]
+"200" [label = <(ok,grpcStatus.ok())<SUB>56</SUB>> ]
+"206" [label = <(&lt;operator&gt;.assignment,error_message =\012                std::string(&quot;Grpc failed with error: &quot;) + grpcStatus.error_message())<SUB>57</SUB>> ]
+"218" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; error_message)<SUB>59</SUB>> ]
+"222" [label = <(RETURN,return std::pair(Status::FATAL_ERROR, std::move(error_message));,return std::pair(Status::FATAL_ERROR, std::move(error_message));)<SUB>60</SUB>> ]
+"237" [label = <(&lt;operator&gt;.fieldAccess,std::pair)<SUB>63</SUB>> ]
+"240" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>63</SUB>> ]
+"243" [label = <(std::string,std::string(&quot;&quot;))<SUB>63</SUB>> ]
+"155" [label = <(&lt;operator&gt;.indirectFieldAccess,cq-&gt;Next)<SUB>45</SUB>> ]
+"158" [label = <(&lt;operator&gt;.addressOf,&amp;got_tag)<SUB>45</SUB>> ]
+"160" [label = <(&lt;operator&gt;.addressOf,&amp;ok)<SUB>45</SUB>> ]
+"164" [label = <(LOG,LOG(ERROR))<SUB>46</SUB>> ]
+"168" [label = <(std::pair,std::pair(Status::FATAL_ERROR, &quot;Unexpected shutdown of the completion queue&quot;))<SUB>47</SUB>> ]
+"181" [label = <(LOG,LOG(ERROR))<SUB>51</SUB>> ]
+"185" [label = <(std::pair,std::pair(Status::FATAL_ERROR, &quot;Unable to complete RPC request&quot;))<SUB>52</SUB>> ]
+"201" [label = <(&lt;operator&gt;.fieldAccess,grpcStatus.ok)<SUB>56</SUB>> ]
+"208" [label = <(&lt;operator&gt;.addition,std::string(&quot;Grpc failed with error: &quot;) + grpcStatus.error_message())<SUB>58</SUB>> ]
+"219" [label = <(LOG,LOG(ERROR))<SUB>59</SUB>> ]
+"223" [label = <(std::pair,std::pair(Status::FATAL_ERROR, std::move(error_message)))<SUB>60</SUB>> ]
+"239" [label = <(FIELD_IDENTIFIER,pair,pair)<SUB>63</SUB>> ]
+"242" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>63</SUB>> ]
+"244" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>63</SUB>> ]
+"157" [label = <(FIELD_IDENTIFIER,Next,Next)<SUB>45</SUB>> ]
+"169" [label = <(&lt;operator&gt;.fieldAccess,std::pair)<SUB>47</SUB>> ]
+"172" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>47</SUB>> ]
+"186" [label = <(&lt;operator&gt;.fieldAccess,std::pair)<SUB>52</SUB>> ]
+"189" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>52</SUB>> ]
+"203" [label = <(FIELD_IDENTIFIER,ok,ok)<SUB>56</SUB>> ]
+"209" [label = <(std::string,std::string(&quot;Grpc failed with error: &quot;))<SUB>58</SUB>> ]
+"214" [label = <(error_message,grpcStatus.error_message())<SUB>58</SUB>> ]
+"224" [label = <(&lt;operator&gt;.fieldAccess,std::pair)<SUB>60</SUB>> ]
+"227" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>60</SUB>> ]
+"230" [label = <(std::move,std::move(error_message))<SUB>60</SUB>> ]
+"246" [label = <(FIELD_IDENTIFIER,string,string)<SUB>63</SUB>> ]
+"171" [label = <(FIELD_IDENTIFIER,pair,pair)<SUB>47</SUB>> ]
+"174" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>47</SUB>> ]
+"188" [label = <(FIELD_IDENTIFIER,pair,pair)<SUB>52</SUB>> ]
+"191" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>52</SUB>> ]
+"210" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>58</SUB>> ]
+"215" [label = <(&lt;operator&gt;.fieldAccess,grpcStatus.error_message)<SUB>58</SUB>> ]
+"226" [label = <(FIELD_IDENTIFIER,pair,pair)<SUB>60</SUB>> ]
+"229" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>60</SUB>> ]
+"231" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>60</SUB>> ]
+"212" [label = <(FIELD_IDENTIFIER,string,string)<SUB>58</SUB>> ]
+"217" [label = <(FIELD_IDENTIFIER,error_message,error_message)<SUB>58</SUB>> ]
+"233" [label = <(FIELD_IDENTIFIER,move,move)<SUB>60</SUB>> ]
+"127" [label = <(METHOD,FinishRpcAndGetResult)<SUB>37</SUB>> ]
+"248" [label = <(METHOD_RETURN,pair&lt;Status,std.string&gt;)<SUB>37</SUB>> ]
+  "133" -> "140" 
+  "137" -> "148" 
+  "148" -> "157" 
+  "193" -> "203" 
+  "235" -> "248" 
+  "135" -> "133" 
+  "138" -> "142" 
+  "142" -> "145" 
+  "144" -> "137" 
+  "153" -> "164" 
+  "153" -> "177" 
+  "177" -> "181" 
+  "177" -> "196" 
+  "195" -> "193" 
+  "199" -> "212" 
+  "199" -> "239" 
+  "236" -> "235" 
+  "140" -> "138" 
+  "145" -> "144" 
+  "154" -> "153" 
+  "163" -> "171" 
+  "167" -> "248" 
+  "180" -> "188" 
+  "184" -> "248" 
+  "196" -> "195" 
+  "200" -> "199" 
+  "206" -> "219" 
+  "218" -> "226" 
+  "222" -> "248" 
+  "237" -> "242" 
+  "240" -> "246" 
+  "243" -> "236" 
+  "155" -> "158" 
+  "158" -> "160" 
+  "160" -> "154" 
+  "164" -> "163" 
+  "168" -> "167" 
+  "181" -> "180" 
+  "185" -> "184" 
+  "201" -> "200" 
+  "208" -> "206" 
+  "219" -> "218" 
+  "223" -> "222" 
+  "239" -> "237" 
+  "242" -> "240" 
+  "244" -> "243" 
+  "157" -> "155" 
+  "169" -> "174" 
+  "172" -> "168" 
+  "186" -> "191" 
+  "189" -> "185" 
+  "203" -> "201" 
+  "209" -> "217" 
+  "214" -> "208" 
+  "224" -> "229" 
+  "227" -> "233" 
+  "230" -> "223" 
+  "246" -> "244" 
+  "171" -> "169" 
+  "174" -> "172" 
+  "188" -> "186" 
+  "191" -> "189" 
+  "210" -> "209" 
+  "215" -> "214" 
+  "226" -> "224" 
+  "229" -> "227" 
+  "231" -> "230" 
+  "212" -> "210" 
+  "217" -> "215" 
+  "233" -> "231" 
+  "127" -> "135" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/19-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/19-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/19-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/19-cfg.dot	2023-06-09 11:35:02.356305191 +0330
@@ -1,5 +1,9 @@
-digraph "GetDebugInfo" {  
-"105" [label = <(METHOD,GetDebugInfo)<SUB>95</SUB>> ]
-"107" [label = <(METHOD_RETURN,ANY)<SUB>95</SUB>> ]
-  "105" -> "107" 
+digraph "GetGraphState" {  
+"253" [label = <(lock,lock(mLock))<SUB>69</SUB>> ]
+"255" [label = <(RETURN,return mGraphState;,return mGraphState;)<SUB>70</SUB>> ]
+"250" [label = <(METHOD,GetGraphState)<SUB>68</SUB>> ]
+"257" [label = <(METHOD_RETURN,PrebuiltGraphState)<SUB>68</SUB>> ]
+  "253" -> "255" 
+  "255" -> "257" 
+  "250" -> "253" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/2-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/2-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/2-cfg.dot	2023-06-09 11:34:58.466305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/2-cfg.dot	2023-06-09 11:35:02.316305191 +0330
@@ -1,5 +1,5 @@
-digraph "initialize" {  
-"16" [label = <(METHOD,initialize)<SUB>50</SUB>> ]
-"20" [label = <(METHOD_RETURN,Status)<SUB>50</SUB>> ]
-  "16" -> "20" 
+digraph "~StreamGraphInterface" {  
+"19" [label = <(METHOD,~StreamGraphInterface)<SUB>47</SUB>> ]
+"21" [label = <(METHOD_RETURN,ANY)<SUB>47</SUB>> ]
+  "19" -> "21" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/20-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/20-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/20-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/20-cfg.dot	2023-06-09 11:35:02.356305191 +0330
@@ -1,13 +1,9 @@
-digraph "getServiceStub" {  
-"111" [label = <(RETURN,return mGraphStub.get();,return mGraphStub.get();)<SUB>99</SUB>> ]
-"112" [label = <(get,mGraphStub.get())<SUB>99</SUB>> ]
-"113" [label = <(&lt;operator&gt;.fieldAccess,mGraphStub.get)<SUB>99</SUB>> ]
-"115" [label = <(FIELD_IDENTIFIER,get,get)<SUB>99</SUB>> ]
-"109" [label = <(METHOD,getServiceStub)<SUB>98</SUB>> ]
-"116" [label = <(METHOD_RETURN,Stub)<SUB>98</SUB>> ]
-  "111" -> "116" 
-  "112" -> "111" 
-  "113" -> "112" 
-  "115" -> "113" 
-  "109" -> "115" 
+digraph "GetStatus" {  
+"262" [label = <(lock,lock(mLock))<SUB>74</SUB>> ]
+"264" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>75</SUB>> ]
+"259" [label = <(METHOD,GetStatus)<SUB>73</SUB>> ]
+"266" [label = <(METHOD_RETURN,Status)<SUB>73</SUB>> ]
+  "262" -> "264" 
+  "264" -> "266" 
+  "259" -> "262" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/21-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/21-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/21-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/21-cfg.dot	2023-06-09 11:35:02.356305191 +0330
@@ -1,5 +1,9 @@
-digraph "dispatchPixelData" {  
-"118" [label = <(METHOD,dispatchPixelData)<SUB>102</SUB>> ]
-"123" [label = <(METHOD_RETURN,void)<SUB>102</SUB>> ]
-  "118" -> "123" 
+digraph "GetErrorMessage" {  
+"271" [label = <(lock,lock(mLock))<SUB>79</SUB>> ]
+"273" [label = <(RETURN,return mErrorMessage;,return mErrorMessage;)<SUB>80</SUB>> ]
+"268" [label = <(METHOD,GetErrorMessage)<SUB>78</SUB>> ]
+"275" [label = <(METHOD_RETURN,string)<SUB>78</SUB>> ]
+  "271" -> "273" 
+  "273" -> "275" 
+  "268" -> "271" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/22-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/22-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/22-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/22-cfg.dot	2023-06-09 11:35:02.366305191 +0330
@@ -1,5 +1,173 @@
-digraph "dispatchSerializedData" {  
-"125" [label = <(METHOD,dispatchSerializedData)<SUB>105</SUB>> ]
-"130" [label = <(METHOD_RETURN,void)<SUB>105</SUB>> ]
-  "125" -> "130" 
+digraph "initialize" {  
+"281" [label = <(&lt;operator&gt;.assignment,std::shared_ptr&lt;::grpc::ChannelCredentials&gt; creds = ::grpc::InsecureChannelCredentials())<SUB>85</SUB>> ]
+"295" [label = <(&lt;operator&gt;.assignment,std::shared_ptr&lt;::grpc::Channel&gt; channel = ::grpc::CreateChannel(address, creds))<SUB>86</SUB>> ]
+"311" [label = <(&lt;operator&gt;.assignment,mGraphStub = proto::GrpcGraphService::NewStub(channel))<SUB>87</SUB>> ]
+"320" [label = <(&lt;operator&gt;.assignment,mEngineInterface = engineInterface)<SUB>88</SUB>> ]
+"324" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>91</SUB>> ]
+"346" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::GraphOptionsResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncGetGraphOptions(&amp;context, getGraphOptionsRequest, &amp;cq)))<SUB>96</SUB>> ]
+"387" [label = <(&lt;operator&gt;.assignment,serialized_options = response.serialized_options())<SUB>107</SUB>> ]
+"412" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::STOPPED)<SUB>114</SUB>> ]
+"417" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>115</SUB>> ]
+"282" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;::grpc::ChannelCredentials&gt; creds)<SUB>85</SUB>> ]
+"291" [label = <(::grpc::InsecureChannelCredentials,::grpc::InsecureChannelCredentials())<SUB>85</SUB>> ]
+"296" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;::grpc::Channel&gt; channel)<SUB>86</SUB>> ]
+"305" [label = <(::grpc::CreateChannel,::grpc::CreateChannel(address, creds))<SUB>86</SUB>> ]
+"313" [label = <(proto::GrpcGraphService::NewStub,proto::GrpcGraphService::NewStub(channel))<SUB>87</SUB>> ]
+"325" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>91</SUB>> ]
+"328" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>91</SUB>> ]
+"347" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>96</SUB>> ]
+"354" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::GraphOptionsResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncGetGraphOptions(&amp;context, getGraphOptionsRequest, &amp;cq)))<SUB>96</SUB>> ]
+"370" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>102</SUB>> ]
+"389" [label = <(serialized_options,response.serialized_options())<SUB>107</SUB>> ]
+"394" [label = <(&lt;operator&gt;.logicalNot,!mGraphConfig.ParseFromString(serialized_options))<SUB>108</SUB>> ]
+"414" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::STOPPED)<SUB>114</SUB>> ]
+"418" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>115</SUB>> ]
+"283" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;::grpc::ChannelCredentials)<SUB>85</SUB>> ]
+"292" [label = <(&lt;operator&gt;.fieldAccess,::grpc::InsecureChannelCredentials)<SUB>85</SUB>> ]
+"297" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;::grpc::Channel)<SUB>86</SUB>> ]
+"306" [label = <(&lt;operator&gt;.fieldAccess,::grpc::CreateChannel)<SUB>86</SUB>> ]
+"314" [label = <(&lt;operator&gt;.fieldAccess,proto::GrpcGraphService::NewStub)<SUB>87</SUB>> ]
+"327" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>91</SUB>> ]
+"329" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>91</SUB>> ]
+"337" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>92</SUB>> ]
+"348" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>96</SUB>> ]
+"351" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>96</SUB>> ]
+"355" [label = <(&lt;operator&gt;.fieldAccess,proto::GraphOptionsResponse)<SUB>96</SUB>> ]
+"358" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncGetGraphOptions(&amp;context, getGraphOptionsRequest, &amp;cq)))<SUB>96</SUB>> ]
+"372" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>102</SUB>> ]
+"376" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to get graph options: &quot; &lt;&lt; mErrorMessage)<SUB>103</SUB>> ]
+"382" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>104</SUB>> ]
+"390" [label = <(&lt;operator&gt;.fieldAccess,response.serialized_options)<SUB>107</SUB>> ]
+"395" [label = <(ParseFromString,mGraphConfig.ParseFromString(serialized_options))<SUB>108</SUB>> ]
+"401" [label = <(&lt;operator&gt;.assignment,mErrorMessage = &quot;Failed to parse graph options&quot;)<SUB>109</SUB>> ]
+"404" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to parse graph options&quot;)<SUB>110</SUB>> ]
+"408" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>111</SUB>> ]
+"416" [label = <(FIELD_IDENTIFIER,STOPPED,STOPPED)<SUB>114</SUB>> ]
+"420" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>115</SUB>> ]
+"284" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>85</SUB>> ]
+"287" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ChannelCredentials)<SUB>85</SUB>> ]
+"294" [label = <(FIELD_IDENTIFIER,InsecureChannelCredentials,InsecureChannelCredentials)<SUB>85</SUB>> ]
+"298" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>86</SUB>> ]
+"301" [label = <(&lt;operator&gt;.fieldAccess,::grpc::Channel)<SUB>86</SUB>> ]
+"308" [label = <(FIELD_IDENTIFIER,CreateChannel,CreateChannel)<SUB>86</SUB>> ]
+"315" [label = <(&lt;operator&gt;.fieldAccess,proto::GrpcGraphService)<SUB>87</SUB>> ]
+"318" [label = <(FIELD_IDENTIFIER,NewStub,NewStub)<SUB>87</SUB>> ]
+"330" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>91</SUB>> ]
+"338" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>92</SUB>> ]
+"350" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>96</SUB>> ]
+"353" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>96</SUB>> ]
+"357" [label = <(FIELD_IDENTIFIER,GraphOptionsResponse,GraphOptionsResponse)<SUB>96</SUB>> ]
+"359" [label = <(AsyncGetGraphOptions,mGraphStub-&gt;AsyncGetGraphOptions(&amp;context, getGraphOptionsRequest, &amp;cq))<SUB>97</SUB>> ]
+"374" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>102</SUB>> ]
+"377" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to get graph options: &quot;)<SUB>103</SUB>> ]
+"383" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>104</SUB>> ]
+"392" [label = <(FIELD_IDENTIFIER,serialized_options,serialized_options)<SUB>107</SUB>> ]
+"396" [label = <(&lt;operator&gt;.fieldAccess,mGraphConfig.ParseFromString)<SUB>108</SUB>> ]
+"405" [label = <(LOG,LOG(ERROR))<SUB>110</SUB>> ]
+"409" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>111</SUB>> ]
+"286" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>85</SUB>> ]
+"289" [label = <(FIELD_IDENTIFIER,ChannelCredentials,ChannelCredentials)<SUB>85</SUB>> ]
+"300" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>86</SUB>> ]
+"303" [label = <(FIELD_IDENTIFIER,Channel,Channel)<SUB>86</SUB>> ]
+"331" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>91</SUB>> ]
+"336" [label = <(FIELD_IDENTIFIER,now,now)<SUB>91</SUB>> ]
+"339" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>92</SUB>> ]
+"342" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>92</SUB>> ]
+"360" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncGetGraphOptions)<SUB>97</SUB>> ]
+"363" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>97</SUB>> ]
+"366" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>97</SUB>> ]
+"378" [label = <(LOG,LOG(ERROR))<SUB>103</SUB>> ]
+"385" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>104</SUB>> ]
+"398" [label = <(FIELD_IDENTIFIER,ParseFromString,ParseFromString)<SUB>108</SUB>> ]
+"411" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>111</SUB>> ]
+"333" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>91</SUB>> ]
+"362" [label = <(FIELD_IDENTIFIER,AsyncGetGraphOptions,AsyncGetGraphOptions)<SUB>97</SUB>> ]
+"277" [label = <(METHOD,initialize)<SUB>83</SUB>> ]
+"421" [label = <(METHOD_RETURN,Status)<SUB>83</SUB>> ]
+  "281" -> "300" 
+  "295" -> "315" 
+  "311" -> "320" 
+  "320" -> "327" 
+  "324" -> "350" 
+  "346" -> "374" 
+  "387" -> "398" 
+  "412" -> "420" 
+  "417" -> "421" 
+  "282" -> "294" 
+  "291" -> "281" 
+  "296" -> "308" 
+  "305" -> "295" 
+  "313" -> "311" 
+  "325" -> "333" 
+  "328" -> "324" 
+  "347" -> "357" 
+  "354" -> "346" 
+  "370" -> "378" 
+  "370" -> "392" 
+  "389" -> "387" 
+  "394" -> "401" 
+  "394" -> "416" 
+  "414" -> "412" 
+  "418" -> "417" 
+  "283" -> "282" 
+  "292" -> "291" 
+  "297" -> "296" 
+  "306" -> "305" 
+  "314" -> "313" 
+  "327" -> "325" 
+  "329" -> "339" 
+  "337" -> "328" 
+  "348" -> "353" 
+  "351" -> "347" 
+  "355" -> "362" 
+  "358" -> "354" 
+  "372" -> "370" 
+  "376" -> "385" 
+  "382" -> "421" 
+  "390" -> "389" 
+  "395" -> "394" 
+  "401" -> "405" 
+  "404" -> "411" 
+  "408" -> "421" 
+  "416" -> "414" 
+  "420" -> "418" 
+  "284" -> "289" 
+  "287" -> "283" 
+  "294" -> "292" 
+  "298" -> "303" 
+  "301" -> "297" 
+  "308" -> "306" 
+  "315" -> "318" 
+  "318" -> "314" 
+  "330" -> "329" 
+  "338" -> "337" 
+  "350" -> "348" 
+  "353" -> "351" 
+  "357" -> "355" 
+  "359" -> "358" 
+  "374" -> "372" 
+  "377" -> "376" 
+  "383" -> "382" 
+  "392" -> "390" 
+  "396" -> "395" 
+  "405" -> "404" 
+  "409" -> "408" 
+  "286" -> "284" 
+  "289" -> "287" 
+  "300" -> "298" 
+  "303" -> "301" 
+  "331" -> "336" 
+  "336" -> "330" 
+  "339" -> "342" 
+  "342" -> "338" 
+  "360" -> "363" 
+  "363" -> "366" 
+  "366" -> "359" 
+  "378" -> "377" 
+  "385" -> "383" 
+  "398" -> "396" 
+  "411" -> "409" 
+  "333" -> "331" 
+  "362" -> "360" 
+  "277" -> "286" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/23-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/23-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/23-cfg.dot	2023-06-09 11:34:58.486305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/23-cfg.dot	2023-06-09 11:35:02.376305191 +0330
@@ -1,5 +1,212 @@
-digraph "dispatchGraphTerminationMessage" {  
-"132" [label = <(METHOD,dispatchGraphTerminationMessage)<SUB>108</SUB>> ]
-"136" [label = <(METHOD_RETURN,void)<SUB>108</SUB>> ]
-  "132" -> "136" 
+digraph "handleConfigPhase" {  
+"427" [label = <(lock,lock(mLock))<SUB>121</SUB>> ]
+"474" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>137</SUB>> ]
+"496" [label = <(&lt;operator&gt;.assignment,serializedConfig = e.getSerializedClientConfig())<SUB>141</SUB>> ]
+"503" [label = <(set_serialized_config,setGraphConfigRequest.set_serialized_config(std::move(serializedConfig)))<SUB>143</SUB>> ]
+"512" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncSetGraphConfig(&amp;context, setGraphConfigRequest, &amp;cq)))<SUB>145</SUB>> ]
+"569" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>159</SUB>> ]
+"579" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>160</SUB>> ]
+"585" [label = <(&lt;operator&gt;.assignment,mStreamSetObserver = std::make_unique&lt;StreamSetObserver&gt;(e, this))<SUB>162</SUB>> ]
+"597" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>164</SUB>> ]
+"430" [label = <(&lt;operator&gt;.equals,mGraphState == PrebuiltGraphState::UNINITIALIZED)<SUB>122</SUB>> ]
+"446" [label = <(isAborted,e.isAborted())<SUB>128</SUB>> ]
+"475" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>137</SUB>> ]
+"478" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>137</SUB>> ]
+"498" [label = <(getSerializedClientConfig,e.getSerializedClientConfig())<SUB>141</SUB>> ]
+"504" [label = <(&lt;operator&gt;.fieldAccess,setGraphConfigRequest.set_serialized_config)<SUB>143</SUB>> ]
+"507" [label = <(std::move,std::move(serializedConfig))<SUB>143</SUB>> ]
+"513" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>145</SUB>> ]
+"520" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncSetGraphConfig(&amp;context, setGraphConfigRequest, &amp;cq)))<SUB>145</SUB>> ]
+"536" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>150</SUB>> ]
+"549" [label = <(&lt;operator&gt;.notEquals,response.code() != proto::RemoteGraphStatusCode::SUCCESS)<SUB>155</SUB>> ]
+"571" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>159</SUB>> ]
+"581" [label = <(message,response.message())<SUB>160</SUB>> ]
+"587" [label = <(&lt;operator&gt;.greaterThan,std::make_unique&lt;StreamSetObserver&gt;(e, this))<SUB>162</SUB>> ]
+"432" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::UNINITIALIZED)<SUB>122</SUB>> ]
+"436" [label = <(&lt;operator&gt;.assignment,mStatus = Status::ILLEGAL_STATE)<SUB>123</SUB>> ]
+"441" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>124</SUB>> ]
+"447" [label = <(&lt;operator&gt;.fieldAccess,e.isAborted)<SUB>128</SUB>> ]
+"451" [label = <(&lt;operator&gt;.assignment,mStatus = Status::INVALID_ARGUMENT)<SUB>129</SUB>> ]
+"456" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>130</SUB>> ]
+"477" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>137</SUB>> ]
+"479" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>137</SUB>> ]
+"487" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>138</SUB>> ]
+"499" [label = <(&lt;operator&gt;.fieldAccess,e.getSerializedClientConfig)<SUB>141</SUB>> ]
+"506" [label = <(FIELD_IDENTIFIER,set_serialized_config,set_serialized_config)<SUB>143</SUB>> ]
+"508" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>143</SUB>> ]
+"514" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>145</SUB>> ]
+"517" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>145</SUB>> ]
+"521" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>145</SUB>> ]
+"524" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncSetGraphConfig(&amp;context, setGraphConfigRequest, &amp;cq)))<SUB>145</SUB>> ]
+"538" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>150</SUB>> ]
+"542" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Rpc failed while trying to set configuration&quot;)<SUB>151</SUB>> ]
+"546" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>152</SUB>> ]
+"550" [label = <(code,response.code())<SUB>155</SUB>> ]
+"554" [label = <(&lt;operator&gt;.fieldAccess,proto::RemoteGraphStatusCode::SUCCESS)<SUB>155</SUB>> ]
+"560" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to cofngure remote graph. &quot; &lt;&lt; response.message())<SUB>156</SUB>> ]
+"572" [label = <(UNKNOWN,Status,Status)<SUB>159</SUB>> ]
+"573" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>159</SUB>> ]
+"582" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>160</SUB>> ]
+"588" [label = <(&lt;operator&gt;.lessThan,std::make_unique&lt;StreamSetObserver)<SUB>162</SUB>> ]
+"593" [label = <(&lt;operator&gt;.bracketedPrimary,(e, this))<SUB>162</SUB>> ]
+"434" [label = <(FIELD_IDENTIFIER,UNINITIALIZED,UNINITIALIZED)<SUB>122</SUB>> ]
+"438" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>123</SUB>> ]
+"442" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>124</SUB>> ]
+"449" [label = <(FIELD_IDENTIFIER,isAborted,isAborted)<SUB>128</SUB>> ]
+"453" [label = <(&lt;operator&gt;.fieldAccess,Status::INVALID_ARGUMENT)<SUB>129</SUB>> ]
+"480" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>137</SUB>> ]
+"488" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>138</SUB>> ]
+"501" [label = <(FIELD_IDENTIFIER,getSerializedClientConfig,getSerializedClientConfig)<SUB>141</SUB>> ]
+"510" [label = <(FIELD_IDENTIFIER,move,move)<SUB>143</SUB>> ]
+"516" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>145</SUB>> ]
+"519" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>145</SUB>> ]
+"523" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>145</SUB>> ]
+"525" [label = <(AsyncSetGraphConfig,mGraphStub-&gt;AsyncSetGraphConfig(&amp;context, setGraphConfigRequest, &amp;cq))<SUB>146</SUB>> ]
+"540" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>150</SUB>> ]
+"543" [label = <(LOG,LOG(ERROR))<SUB>151</SUB>> ]
+"551" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>155</SUB>> ]
+"555" [label = <(&lt;operator&gt;.fieldAccess,proto::RemoteGraphStatusCode)<SUB>155</SUB>> ]
+"558" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>155</SUB>> ]
+"561" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to cofngure remote graph. &quot;)<SUB>156</SUB>> ]
+"565" [label = <(message,response.message())<SUB>156</SUB>> ]
+"574" [label = <(UNKNOWN,int,int)<SUB>159</SUB>> ]
+"575" [label = <(code,response.code())<SUB>159</SUB>> ]
+"584" [label = <(FIELD_IDENTIFIER,message,message)<SUB>160</SUB>> ]
+"589" [label = <(&lt;operator&gt;.fieldAccess,std::make_unique)<SUB>162</SUB>> ]
+"594" [label = <(&lt;operator&gt;.expressionList,e, this)<SUB>162</SUB>> ]
+"440" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>123</SUB>> ]
+"444" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>124</SUB>> ]
+"455" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>129</SUB>> ]
+"461" [label = <(isTransitionComplete,e.isTransitionComplete())<SUB>131</SUB>> ]
+"481" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>137</SUB>> ]
+"486" [label = <(FIELD_IDENTIFIER,now,now)<SUB>137</SUB>> ]
+"489" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>138</SUB>> ]
+"492" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>138</SUB>> ]
+"526" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncSetGraphConfig)<SUB>146</SUB>> ]
+"529" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>146</SUB>> ]
+"532" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>146</SUB>> ]
+"553" [label = <(FIELD_IDENTIFIER,code,code)<SUB>155</SUB>> ]
+"562" [label = <(LOG,LOG(ERROR))<SUB>156</SUB>> ]
+"566" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>156</SUB>> ]
+"576" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>159</SUB>> ]
+"591" [label = <(FIELD_IDENTIFIER,make_unique,make_unique)<SUB>162</SUB>> ]
+"462" [label = <(&lt;operator&gt;.fieldAccess,e.isTransitionComplete)<SUB>131</SUB>> ]
+"466" [label = <(&lt;operator&gt;.assignment,mStatus = Status::SUCCESS)<SUB>132</SUB>> ]
+"471" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>133</SUB>> ]
+"483" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>137</SUB>> ]
+"528" [label = <(FIELD_IDENTIFIER,AsyncSetGraphConfig,AsyncSetGraphConfig)<SUB>146</SUB>> ]
+"568" [label = <(FIELD_IDENTIFIER,message,message)<SUB>156</SUB>> ]
+"578" [label = <(FIELD_IDENTIFIER,code,code)<SUB>159</SUB>> ]
+"464" [label = <(FIELD_IDENTIFIER,isTransitionComplete,isTransitionComplete)<SUB>131</SUB>> ]
+"468" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>132</SUB>> ]
+"470" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>132</SUB>> ]
+"423" [label = <(METHOD,handleConfigPhase)<SUB>120</SUB>> ]
+"599" [label = <(METHOD_RETURN,Status)<SUB>120</SUB>> ]
+  "427" -> "434" 
+  "474" -> "501" 
+  "496" -> "506" 
+  "503" -> "516" 
+  "512" -> "540" 
+  "569" -> "584" 
+  "579" -> "591" 
+  "585" -> "597" 
+  "597" -> "599" 
+  "430" -> "440" 
+  "430" -> "449" 
+  "446" -> "455" 
+  "446" -> "464" 
+  "475" -> "483" 
+  "478" -> "474" 
+  "498" -> "496" 
+  "504" -> "510" 
+  "507" -> "503" 
+  "513" -> "523" 
+  "520" -> "512" 
+  "536" -> "543" 
+  "536" -> "553" 
+  "549" -> "562" 
+  "549" -> "572" 
+  "571" -> "569" 
+  "581" -> "579" 
+  "587" -> "585" 
+  "432" -> "430" 
+  "436" -> "444" 
+  "441" -> "599" 
+  "447" -> "446" 
+  "451" -> "456" 
+  "456" -> "599" 
+  "477" -> "475" 
+  "479" -> "489" 
+  "487" -> "478" 
+  "499" -> "498" 
+  "506" -> "504" 
+  "508" -> "507" 
+  "514" -> "519" 
+  "517" -> "513" 
+  "521" -> "528" 
+  "524" -> "520" 
+  "538" -> "536" 
+  "542" -> "546" 
+  "546" -> "599" 
+  "550" -> "555" 
+  "554" -> "549" 
+  "560" -> "572" 
+  "572" -> "574" 
+  "573" -> "571" 
+  "582" -> "581" 
+  "588" -> "594" 
+  "593" -> "587" 
+  "434" -> "432" 
+  "438" -> "436" 
+  "442" -> "441" 
+  "449" -> "447" 
+  "453" -> "451" 
+  "480" -> "479" 
+  "488" -> "487" 
+  "501" -> "499" 
+  "510" -> "508" 
+  "516" -> "514" 
+  "519" -> "517" 
+  "523" -> "521" 
+  "525" -> "524" 
+  "540" -> "538" 
+  "543" -> "542" 
+  "551" -> "550" 
+  "555" -> "558" 
+  "558" -> "554" 
+  "561" -> "568" 
+  "565" -> "560" 
+  "574" -> "578" 
+  "575" -> "573" 
+  "584" -> "582" 
+  "589" -> "588" 
+  "594" -> "593" 
+  "440" -> "438" 
+  "444" -> "442" 
+  "455" -> "453" 
+  "461" -> "470" 
+  "461" -> "477" 
+  "481" -> "486" 
+  "486" -> "480" 
+  "489" -> "492" 
+  "492" -> "488" 
+  "526" -> "529" 
+  "529" -> "532" 
+  "532" -> "525" 
+  "553" -> "551" 
+  "562" -> "561" 
+  "566" -> "565" 
+  "576" -> "575" 
+  "591" -> "589" 
+  "462" -> "461" 
+  "466" -> "471" 
+  "471" -> "599" 
+  "483" -> "481" 
+  "528" -> "526" 
+  "568" -> "566" 
+  "578" -> "576" 
+  "464" -> "462" 
+  "468" -> "466" 
+  "470" -> "468" 
+  "423" -> "427" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/24-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/24-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/24-cfg.dot	2023-06-09 11:34:58.496305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/24-cfg.dot	2023-06-09 11:35:02.386305190 +0330
@@ -1,19 +1,179 @@
-digraph "&lt;clinit&gt;" {  
-"148" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::UNINITIALIZED)<SUB>112</SUB>> ]
-"153" [label = <(&lt;operator&gt;.assignment,mStatus = Status::SUCCESS)<SUB>114</SUB>> ]
-"158" [label = <(&lt;operator&gt;.assignment,mErrorMessage = &quot;&quot;)<SUB>116</SUB>> ]
-"150" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::UNINITIALIZED)<SUB>112</SUB>> ]
-"155" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>114</SUB>> ]
-"152" [label = <(FIELD_IDENTIFIER,UNINITIALIZED,UNINITIALIZED)<SUB>112</SUB>> ]
-"157" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>114</SUB>> ]
-"146" [label = <(METHOD,&lt;clinit&gt;)> ]
-"162" [label = <(METHOD_RETURN,ANY)> ]
-  "148" -> "157" 
-  "153" -> "158" 
-  "158" -> "162" 
-  "150" -> "148" 
-  "155" -> "153" 
-  "152" -> "150" 
-  "157" -> "155" 
-  "146" -> "152" 
+digraph "handleExecutionPhase" {  
+"605" [label = <(lock,lock(mLock))<SUB>169</SUB>> ]
+"649" [label = <(&lt;operator&gt;.assignment,mStatus = mStreamSetObserver-&gt;startObservingStreams())<SUB>185</SUB>> ]
+"668" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>192</SUB>> ]
+"690" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStartGraphExecution(&amp;context, startExecutionRequest, &amp;cq)))<SUB>197</SUB>> ]
+"726" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>207</SUB>> ]
+"736" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>208</SUB>> ]
+"754" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>214</SUB>> ]
+"608" [label = <(&lt;operator&gt;.notEquals,mGraphState != PrebuiltGraphState::STOPPED)<SUB>170</SUB>> ]
+"622" [label = <(isAborted,e.isAborted())<SUB>175</SUB>> ]
+"651" [label = <(startObservingStreams,mStreamSetObserver-&gt;startObservingStreams())<SUB>185</SUB>> ]
+"656" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>186</SUB>> ]
+"669" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>192</SUB>> ]
+"672" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>192</SUB>> ]
+"691" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>197</SUB>> ]
+"698" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStartGraphExecution(&amp;context, startExecutionRequest, &amp;cq)))<SUB>197</SUB>> ]
+"714" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>202</SUB>> ]
+"728" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>207</SUB>> ]
+"738" [label = <(message,response.message())<SUB>208</SUB>> ]
+"743" [label = <(&lt;operator&gt;.equals,mStatus == Status::SUCCESS)<SUB>210</SUB>> ]
+"610" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::STOPPED)<SUB>170</SUB>> ]
+"614" [label = <(&lt;operator&gt;.assignment,mStatus = Status::ILLEGAL_STATE)<SUB>171</SUB>> ]
+"619" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>172</SUB>> ]
+"623" [label = <(&lt;operator&gt;.fieldAccess,e.isAborted)<SUB>175</SUB>> ]
+"627" [label = <(&lt;operator&gt;.assignment,mStatus = Status::INVALID_ARGUMENT)<SUB>177</SUB>> ]
+"632" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>178</SUB>> ]
+"652" [label = <(&lt;operator&gt;.indirectFieldAccess,mStreamSetObserver-&gt;startObservingStreams)<SUB>185</SUB>> ]
+"658" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>186</SUB>> ]
+"662" [label = <(&lt;operator&gt;.assignment,mErrorMessage = &quot;Failed to observe output streams&quot;)<SUB>187</SUB>> ]
+"665" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>188</SUB>> ]
+"671" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>192</SUB>> ]
+"673" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>192</SUB>> ]
+"681" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>193</SUB>> ]
+"692" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>197</SUB>> ]
+"695" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>197</SUB>> ]
+"699" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>197</SUB>> ]
+"702" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncStartGraphExecution(&amp;context, startExecutionRequest, &amp;cq)))<SUB>197</SUB>> ]
+"716" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>202</SUB>> ]
+"720" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to start graph execution&quot;)<SUB>203</SUB>> ]
+"724" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>204</SUB>> ]
+"729" [label = <(UNKNOWN,Status,Status)<SUB>207</SUB>> ]
+"730" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>207</SUB>> ]
+"739" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>208</SUB>> ]
+"745" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>210</SUB>> ]
+"749" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::RUNNING)<SUB>211</SUB>> ]
+"612" [label = <(FIELD_IDENTIFIER,STOPPED,STOPPED)<SUB>170</SUB>> ]
+"616" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>171</SUB>> ]
+"625" [label = <(FIELD_IDENTIFIER,isAborted,isAborted)<SUB>175</SUB>> ]
+"629" [label = <(&lt;operator&gt;.fieldAccess,Status::INVALID_ARGUMENT)<SUB>177</SUB>> ]
+"654" [label = <(FIELD_IDENTIFIER,startObservingStreams,startObservingStreams)<SUB>185</SUB>> ]
+"660" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>186</SUB>> ]
+"674" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>192</SUB>> ]
+"682" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>193</SUB>> ]
+"694" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>197</SUB>> ]
+"697" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>197</SUB>> ]
+"701" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>197</SUB>> ]
+"703" [label = <(AsyncStartGraphExecution,mGraphStub-&gt;AsyncStartGraphExecution(&amp;context, startExecutionRequest, &amp;cq))<SUB>198</SUB>> ]
+"718" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>202</SUB>> ]
+"721" [label = <(LOG,LOG(ERROR))<SUB>203</SUB>> ]
+"731" [label = <(UNKNOWN,int,int)<SUB>207</SUB>> ]
+"732" [label = <(code,response.code())<SUB>207</SUB>> ]
+"741" [label = <(FIELD_IDENTIFIER,message,message)<SUB>208</SUB>> ]
+"747" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>210</SUB>> ]
+"751" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::RUNNING)<SUB>211</SUB>> ]
+"618" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>171</SUB>> ]
+"631" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>177</SUB>> ]
+"637" [label = <(isTransitionComplete,e.isTransitionComplete())<SUB>179</SUB>> ]
+"675" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>192</SUB>> ]
+"680" [label = <(FIELD_IDENTIFIER,now,now)<SUB>192</SUB>> ]
+"683" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>193</SUB>> ]
+"686" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>193</SUB>> ]
+"704" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncStartGraphExecution)<SUB>198</SUB>> ]
+"707" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>198</SUB>> ]
+"710" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>198</SUB>> ]
+"733" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>207</SUB>> ]
+"753" [label = <(FIELD_IDENTIFIER,RUNNING,RUNNING)<SUB>211</SUB>> ]
+"638" [label = <(&lt;operator&gt;.fieldAccess,e.isTransitionComplete)<SUB>179</SUB>> ]
+"642" [label = <(&lt;operator&gt;.assignment,mStatus = Status::SUCCESS)<SUB>180</SUB>> ]
+"647" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>181</SUB>> ]
+"677" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>192</SUB>> ]
+"706" [label = <(FIELD_IDENTIFIER,AsyncStartGraphExecution,AsyncStartGraphExecution)<SUB>198</SUB>> ]
+"735" [label = <(FIELD_IDENTIFIER,code,code)<SUB>207</SUB>> ]
+"640" [label = <(FIELD_IDENTIFIER,isTransitionComplete,isTransitionComplete)<SUB>179</SUB>> ]
+"644" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>180</SUB>> ]
+"646" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>180</SUB>> ]
+"601" [label = <(METHOD,handleExecutionPhase)<SUB>168</SUB>> ]
+"756" [label = <(METHOD_RETURN,Status)<SUB>168</SUB>> ]
+  "605" -> "612" 
+  "649" -> "660" 
+  "668" -> "694" 
+  "690" -> "718" 
+  "726" -> "741" 
+  "736" -> "747" 
+  "754" -> "756" 
+  "608" -> "618" 
+  "608" -> "625" 
+  "622" -> "631" 
+  "622" -> "640" 
+  "651" -> "649" 
+  "656" -> "662" 
+  "656" -> "671" 
+  "669" -> "677" 
+  "672" -> "668" 
+  "691" -> "701" 
+  "698" -> "690" 
+  "714" -> "721" 
+  "714" -> "729" 
+  "728" -> "726" 
+  "738" -> "736" 
+  "743" -> "753" 
+  "743" -> "754" 
+  "610" -> "608" 
+  "614" -> "619" 
+  "619" -> "756" 
+  "623" -> "622" 
+  "627" -> "632" 
+  "632" -> "756" 
+  "652" -> "651" 
+  "658" -> "656" 
+  "662" -> "665" 
+  "665" -> "756" 
+  "671" -> "669" 
+  "673" -> "683" 
+  "681" -> "672" 
+  "692" -> "697" 
+  "695" -> "691" 
+  "699" -> "706" 
+  "702" -> "698" 
+  "716" -> "714" 
+  "720" -> "724" 
+  "724" -> "756" 
+  "729" -> "731" 
+  "730" -> "728" 
+  "739" -> "738" 
+  "745" -> "743" 
+  "749" -> "754" 
+  "612" -> "610" 
+  "616" -> "614" 
+  "625" -> "623" 
+  "629" -> "627" 
+  "654" -> "652" 
+  "660" -> "658" 
+  "674" -> "673" 
+  "682" -> "681" 
+  "694" -> "692" 
+  "697" -> "695" 
+  "701" -> "699" 
+  "703" -> "702" 
+  "718" -> "716" 
+  "721" -> "720" 
+  "731" -> "735" 
+  "732" -> "730" 
+  "741" -> "739" 
+  "747" -> "745" 
+  "751" -> "749" 
+  "618" -> "616" 
+  "631" -> "629" 
+  "637" -> "646" 
+  "637" -> "654" 
+  "675" -> "680" 
+  "680" -> "674" 
+  "683" -> "686" 
+  "686" -> "682" 
+  "704" -> "707" 
+  "707" -> "710" 
+  "710" -> "703" 
+  "733" -> "732" 
+  "753" -> "751" 
+  "638" -> "637" 
+  "642" -> "647" 
+  "647" -> "756" 
+  "677" -> "675" 
+  "706" -> "704" 
+  "735" -> "733" 
+  "640" -> "638" 
+  "644" -> "642" 
+  "646" -> "644" 
+  "601" -> "605" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/25-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/25-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/25-cfg.dot	2023-06-09 11:34:58.496305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/25-cfg.dot	2023-06-09 11:35:02.386305190 +0330
@@ -1,7 +1,170 @@
-digraph "&lt;global&gt;" {  
-"173" [label = <(&lt;operator&gt;.assignment,kRpcDeadlineMilliseconds = 100)<SUB>34</SUB>> ]
-"165" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"1651" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
-  "173" -> "1651" 
-  "165" -> "173" 
+digraph "handleStopWithFlushPhase" {  
+"762" [label = <(lock,lock(mLock))<SUB>219</SUB>> ]
+"798" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>231</SUB>> ]
+"819" [label = <(set_stop_immediate,stopExecutionRequest.set_stop_immediate(false))<SUB>235</SUB>> ]
+"825" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>237</SUB>> ]
+"863" [label = <(stopObservingStreams,mStreamSetObserver-&gt;stopObservingStreams(false))<SUB>248</SUB>> ]
+"868" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>250</SUB>> ]
+"878" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>251</SUB>> ]
+"896" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>257</SUB>> ]
+"765" [label = <(&lt;operator&gt;.notEquals,mGraphState != PrebuiltGraphState::RUNNING)<SUB>220</SUB>> ]
+"776" [label = <(isAborted,e.isAborted())<SUB>224</SUB>> ]
+"799" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>231</SUB>> ]
+"802" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>231</SUB>> ]
+"820" [label = <(&lt;operator&gt;.fieldAccess,stopExecutionRequest.set_stop_immediate)<SUB>235</SUB>> ]
+"826" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>237</SUB>> ]
+"833" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>237</SUB>> ]
+"849" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>242</SUB>> ]
+"864" [label = <(&lt;operator&gt;.indirectFieldAccess,mStreamSetObserver-&gt;stopObservingStreams)<SUB>248</SUB>> ]
+"870" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>250</SUB>> ]
+"880" [label = <(message,response.message())<SUB>251</SUB>> ]
+"885" [label = <(&lt;operator&gt;.equals,mStatus == Status::SUCCESS)<SUB>253</SUB>> ]
+"767" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::RUNNING)<SUB>220</SUB>> ]
+"771" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>221</SUB>> ]
+"777" [label = <(&lt;operator&gt;.fieldAccess,e.isAborted)<SUB>224</SUB>> ]
+"781" [label = <(RETURN,return Status::INVALID_ARGUMENT;,return Status::INVALID_ARGUMENT;)<SUB>225</SUB>> ]
+"801" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>231</SUB>> ]
+"803" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>231</SUB>> ]
+"811" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>232</SUB>> ]
+"822" [label = <(FIELD_IDENTIFIER,set_stop_immediate,set_stop_immediate)<SUB>235</SUB>> ]
+"827" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>237</SUB>> ]
+"830" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>237</SUB>> ]
+"834" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>237</SUB>> ]
+"837" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>237</SUB>> ]
+"851" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>242</SUB>> ]
+"855" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to stop graph execution&quot;)<SUB>243</SUB>> ]
+"859" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>244</SUB>> ]
+"866" [label = <(FIELD_IDENTIFIER,stopObservingStreams,stopObservingStreams)<SUB>248</SUB>> ]
+"871" [label = <(UNKNOWN,Status,Status)<SUB>250</SUB>> ]
+"872" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>250</SUB>> ]
+"881" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>251</SUB>> ]
+"887" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>253</SUB>> ]
+"891" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::FLUSHING)<SUB>254</SUB>> ]
+"769" [label = <(FIELD_IDENTIFIER,RUNNING,RUNNING)<SUB>220</SUB>> ]
+"772" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>221</SUB>> ]
+"779" [label = <(FIELD_IDENTIFIER,isAborted,isAborted)<SUB>224</SUB>> ]
+"782" [label = <(&lt;operator&gt;.fieldAccess,Status::INVALID_ARGUMENT)<SUB>225</SUB>> ]
+"804" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>231</SUB>> ]
+"812" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>232</SUB>> ]
+"829" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>237</SUB>> ]
+"832" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>237</SUB>> ]
+"836" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>237</SUB>> ]
+"838" [label = <(AsyncStopGraphExecution,mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq))<SUB>238</SUB>> ]
+"853" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>242</SUB>> ]
+"856" [label = <(LOG,LOG(ERROR))<SUB>243</SUB>> ]
+"860" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>244</SUB>> ]
+"873" [label = <(UNKNOWN,int,int)<SUB>250</SUB>> ]
+"874" [label = <(code,response.code())<SUB>250</SUB>> ]
+"883" [label = <(FIELD_IDENTIFIER,message,message)<SUB>251</SUB>> ]
+"889" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>253</SUB>> ]
+"893" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::FLUSHING)<SUB>254</SUB>> ]
+"774" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>221</SUB>> ]
+"784" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>225</SUB>> ]
+"788" [label = <(isTransitionComplete,e.isTransitionComplete())<SUB>226</SUB>> ]
+"805" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>231</SUB>> ]
+"810" [label = <(FIELD_IDENTIFIER,now,now)<SUB>231</SUB>> ]
+"813" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>232</SUB>> ]
+"816" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>232</SUB>> ]
+"839" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncStopGraphExecution)<SUB>238</SUB>> ]
+"842" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>238</SUB>> ]
+"845" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>238</SUB>> ]
+"862" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>244</SUB>> ]
+"875" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>250</SUB>> ]
+"895" [label = <(FIELD_IDENTIFIER,FLUSHING,FLUSHING)<SUB>254</SUB>> ]
+"789" [label = <(&lt;operator&gt;.fieldAccess,e.isTransitionComplete)<SUB>226</SUB>> ]
+"793" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>227</SUB>> ]
+"807" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>231</SUB>> ]
+"841" [label = <(FIELD_IDENTIFIER,AsyncStopGraphExecution,AsyncStopGraphExecution)<SUB>238</SUB>> ]
+"877" [label = <(FIELD_IDENTIFIER,code,code)<SUB>250</SUB>> ]
+"791" [label = <(FIELD_IDENTIFIER,isTransitionComplete,isTransitionComplete)<SUB>226</SUB>> ]
+"794" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>227</SUB>> ]
+"796" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>227</SUB>> ]
+"758" [label = <(METHOD,handleStopWithFlushPhase)<SUB>218</SUB>> ]
+"898" [label = <(METHOD_RETURN,Status)<SUB>218</SUB>> ]
+  "762" -> "769" 
+  "798" -> "822" 
+  "819" -> "829" 
+  "825" -> "853" 
+  "863" -> "871" 
+  "868" -> "883" 
+  "878" -> "889" 
+  "896" -> "898" 
+  "765" -> "774" 
+  "765" -> "779" 
+  "776" -> "784" 
+  "776" -> "791" 
+  "799" -> "807" 
+  "802" -> "798" 
+  "820" -> "819" 
+  "826" -> "836" 
+  "833" -> "825" 
+  "849" -> "856" 
+  "849" -> "866" 
+  "864" -> "863" 
+  "870" -> "868" 
+  "880" -> "878" 
+  "885" -> "895" 
+  "885" -> "896" 
+  "767" -> "765" 
+  "771" -> "898" 
+  "777" -> "776" 
+  "781" -> "898" 
+  "801" -> "799" 
+  "803" -> "813" 
+  "811" -> "802" 
+  "822" -> "820" 
+  "827" -> "832" 
+  "830" -> "826" 
+  "834" -> "841" 
+  "837" -> "833" 
+  "851" -> "849" 
+  "855" -> "862" 
+  "859" -> "898" 
+  "866" -> "864" 
+  "871" -> "873" 
+  "872" -> "870" 
+  "881" -> "880" 
+  "887" -> "885" 
+  "891" -> "896" 
+  "769" -> "767" 
+  "772" -> "771" 
+  "779" -> "777" 
+  "782" -> "781" 
+  "804" -> "803" 
+  "812" -> "811" 
+  "829" -> "827" 
+  "832" -> "830" 
+  "836" -> "834" 
+  "838" -> "837" 
+  "853" -> "851" 
+  "856" -> "855" 
+  "860" -> "859" 
+  "873" -> "877" 
+  "874" -> "872" 
+  "883" -> "881" 
+  "889" -> "887" 
+  "893" -> "891" 
+  "774" -> "772" 
+  "784" -> "782" 
+  "788" -> "796" 
+  "788" -> "801" 
+  "805" -> "810" 
+  "810" -> "804" 
+  "813" -> "816" 
+  "816" -> "812" 
+  "839" -> "842" 
+  "842" -> "845" 
+  "845" -> "838" 
+  "862" -> "860" 
+  "875" -> "874" 
+  "895" -> "893" 
+  "789" -> "788" 
+  "793" -> "898" 
+  "807" -> "805" 
+  "841" -> "839" 
+  "877" -> "875" 
+  "791" -> "789" 
+  "794" -> "793" 
+  "796" -> "794" 
+  "758" -> "762" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/26-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/26-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/26-cfg.dot	2023-06-09 11:34:58.516305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/26-cfg.dot	2023-06-09 11:35:02.386305190 +0330
@@ -1,142 +1,170 @@
-digraph "FinishRpcAndGetResult" {  
-"182" [label = <(&lt;operator&gt;.assignment,random_tag = rand())<SUB>40</SUB>> ]
-"186" [label = <(Finish,rpc-&gt;Finish(response, &amp;grpcStatus, reinterpret_cast&lt;void*&gt;(random_tag)))<SUB>42</SUB>> ]
-"197" [label = <(&lt;operator&gt;.assignment,ok = false)<SUB>43</SUB>> ]
-"242" [label = <(CHECK_EQ,CHECK_EQ(got_tag, reinterpret_cast&lt;void*&gt;(random_tag)))<SUB>55</SUB>> ]
-"284" [label = <(RETURN,return std::pair(Status::SUCCESS, std::string(&quot;&quot;));,return std::pair(Status::SUCCESS, std::string(&quot;&quot;));)<SUB>63</SUB>> ]
-"184" [label = <(rand,rand())<SUB>40</SUB>> ]
-"187" [label = <(&lt;operator&gt;.indirectFieldAccess,rpc-&gt;Finish)<SUB>42</SUB>> ]
-"191" [label = <(&lt;operator&gt;.addressOf,&amp;grpcStatus)<SUB>42</SUB>> ]
-"193" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(random_tag))<SUB>42</SUB>> ]
-"202" [label = <(&lt;operator&gt;.logicalNot,!cq-&gt;Next(&amp;got_tag, &amp;ok))<SUB>45</SUB>> ]
-"226" [label = <(&lt;operator&gt;.logicalNot,!ok)<SUB>50</SUB>> ]
-"244" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(random_tag))<SUB>55</SUB>> ]
-"248" [label = <(&lt;operator&gt;.logicalNot,!grpcStatus.ok())<SUB>56</SUB>> ]
-"285" [label = <(std::pair,std::pair(Status::SUCCESS, std::string(&quot;&quot;)))<SUB>63</SUB>> ]
-"189" [label = <(FIELD_IDENTIFIER,Finish,Finish)<SUB>42</SUB>> ]
-"194" [label = <(UNKNOWN,void*,void*)<SUB>42</SUB>> ]
-"203" [label = <(Next,cq-&gt;Next(&amp;got_tag, &amp;ok))<SUB>45</SUB>> ]
-"212" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Unexpected shutdown of the completion queue&quot;)<SUB>46</SUB>> ]
-"216" [label = <(RETURN,return std::pair(Status::FATAL_ERROR, &quot;Unexpected shutdown of the completion queue&quot;);,return std::pair(Status::FATAL_ERROR, &quot;Unexpected shutdown of the completion queue&quot;);)<SUB>47</SUB>> ]
-"229" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Unable to complete RPC request&quot;)<SUB>51</SUB>> ]
-"233" [label = <(RETURN,return std::pair(Status::FATAL_ERROR, &quot;Unable to complete RPC request&quot;);,return std::pair(Status::FATAL_ERROR, &quot;Unable to complete RPC request&quot;);)<SUB>52</SUB>> ]
-"245" [label = <(UNKNOWN,void*,void*)<SUB>55</SUB>> ]
-"249" [label = <(ok,grpcStatus.ok())<SUB>56</SUB>> ]
-"255" [label = <(&lt;operator&gt;.assignment,error_message =\012                std::string(&quot;Grpc failed with error: &quot;) + grpcStatus.error_message())<SUB>57</SUB>> ]
-"267" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; error_message)<SUB>59</SUB>> ]
-"271" [label = <(RETURN,return std::pair(Status::FATAL_ERROR, std::move(error_message));,return std::pair(Status::FATAL_ERROR, std::move(error_message));)<SUB>60</SUB>> ]
-"286" [label = <(&lt;operator&gt;.fieldAccess,std::pair)<SUB>63</SUB>> ]
-"289" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>63</SUB>> ]
-"292" [label = <(std::string,std::string(&quot;&quot;))<SUB>63</SUB>> ]
-"204" [label = <(&lt;operator&gt;.indirectFieldAccess,cq-&gt;Next)<SUB>45</SUB>> ]
-"207" [label = <(&lt;operator&gt;.addressOf,&amp;got_tag)<SUB>45</SUB>> ]
-"209" [label = <(&lt;operator&gt;.addressOf,&amp;ok)<SUB>45</SUB>> ]
-"213" [label = <(LOG,LOG(ERROR))<SUB>46</SUB>> ]
-"217" [label = <(std::pair,std::pair(Status::FATAL_ERROR, &quot;Unexpected shutdown of the completion queue&quot;))<SUB>47</SUB>> ]
-"230" [label = <(LOG,LOG(ERROR))<SUB>51</SUB>> ]
-"234" [label = <(std::pair,std::pair(Status::FATAL_ERROR, &quot;Unable to complete RPC request&quot;))<SUB>52</SUB>> ]
-"250" [label = <(&lt;operator&gt;.fieldAccess,grpcStatus.ok)<SUB>56</SUB>> ]
-"257" [label = <(&lt;operator&gt;.addition,std::string(&quot;Grpc failed with error: &quot;) + grpcStatus.error_message())<SUB>58</SUB>> ]
-"268" [label = <(LOG,LOG(ERROR))<SUB>59</SUB>> ]
-"272" [label = <(std::pair,std::pair(Status::FATAL_ERROR, std::move(error_message)))<SUB>60</SUB>> ]
-"288" [label = <(FIELD_IDENTIFIER,pair,pair)<SUB>63</SUB>> ]
-"291" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>63</SUB>> ]
-"293" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>63</SUB>> ]
-"206" [label = <(FIELD_IDENTIFIER,Next,Next)<SUB>45</SUB>> ]
-"218" [label = <(&lt;operator&gt;.fieldAccess,std::pair)<SUB>47</SUB>> ]
-"221" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>47</SUB>> ]
-"235" [label = <(&lt;operator&gt;.fieldAccess,std::pair)<SUB>52</SUB>> ]
-"238" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>52</SUB>> ]
-"252" [label = <(FIELD_IDENTIFIER,ok,ok)<SUB>56</SUB>> ]
-"258" [label = <(std::string,std::string(&quot;Grpc failed with error: &quot;))<SUB>58</SUB>> ]
-"263" [label = <(error_message,grpcStatus.error_message())<SUB>58</SUB>> ]
-"273" [label = <(&lt;operator&gt;.fieldAccess,std::pair)<SUB>60</SUB>> ]
-"276" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>60</SUB>> ]
-"279" [label = <(std::move,std::move(error_message))<SUB>60</SUB>> ]
-"295" [label = <(FIELD_IDENTIFIER,string,string)<SUB>63</SUB>> ]
-"220" [label = <(FIELD_IDENTIFIER,pair,pair)<SUB>47</SUB>> ]
-"223" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>47</SUB>> ]
-"237" [label = <(FIELD_IDENTIFIER,pair,pair)<SUB>52</SUB>> ]
-"240" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>52</SUB>> ]
-"259" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>58</SUB>> ]
-"264" [label = <(&lt;operator&gt;.fieldAccess,grpcStatus.error_message)<SUB>58</SUB>> ]
-"275" [label = <(FIELD_IDENTIFIER,pair,pair)<SUB>60</SUB>> ]
-"278" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>60</SUB>> ]
-"280" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>60</SUB>> ]
-"261" [label = <(FIELD_IDENTIFIER,string,string)<SUB>58</SUB>> ]
-"266" [label = <(FIELD_IDENTIFIER,error_message,error_message)<SUB>58</SUB>> ]
-"282" [label = <(FIELD_IDENTIFIER,move,move)<SUB>60</SUB>> ]
-"176" [label = <(METHOD,FinishRpcAndGetResult)<SUB>37</SUB>> ]
-"297" [label = <(METHOD_RETURN,pair&lt;Status,std.string&gt;)<SUB>37</SUB>> ]
-  "182" -> "189" 
-  "186" -> "197" 
-  "197" -> "206" 
-  "242" -> "252" 
-  "284" -> "297" 
-  "184" -> "182" 
-  "187" -> "191" 
-  "191" -> "194" 
-  "193" -> "186" 
-  "202" -> "213" 
-  "202" -> "226" 
-  "226" -> "230" 
-  "226" -> "245" 
-  "244" -> "242" 
-  "248" -> "261" 
-  "248" -> "288" 
-  "285" -> "284" 
-  "189" -> "187" 
-  "194" -> "193" 
-  "203" -> "202" 
-  "212" -> "220" 
-  "216" -> "297" 
-  "229" -> "237" 
-  "233" -> "297" 
-  "245" -> "244" 
-  "249" -> "248" 
-  "255" -> "268" 
-  "267" -> "275" 
-  "271" -> "297" 
-  "286" -> "291" 
-  "289" -> "295" 
-  "292" -> "285" 
-  "204" -> "207" 
-  "207" -> "209" 
-  "209" -> "203" 
-  "213" -> "212" 
-  "217" -> "216" 
-  "230" -> "229" 
-  "234" -> "233" 
-  "250" -> "249" 
-  "257" -> "255" 
-  "268" -> "267" 
-  "272" -> "271" 
-  "288" -> "286" 
-  "291" -> "289" 
-  "293" -> "292" 
-  "206" -> "204" 
-  "218" -> "223" 
-  "221" -> "217" 
-  "235" -> "240" 
-  "238" -> "234" 
-  "252" -> "250" 
-  "258" -> "266" 
-  "263" -> "257" 
-  "273" -> "278" 
-  "276" -> "282" 
-  "279" -> "272" 
-  "295" -> "293" 
-  "220" -> "218" 
-  "223" -> "221" 
-  "237" -> "235" 
-  "240" -> "238" 
-  "259" -> "258" 
-  "264" -> "263" 
-  "275" -> "273" 
-  "278" -> "276" 
-  "280" -> "279" 
-  "261" -> "259" 
-  "266" -> "264" 
-  "282" -> "280" 
-  "176" -> "184" 
+digraph "handleStopImmediatePhase" {  
+"904" [label = <(lock,lock(mLock))<SUB>262</SUB>> ]
+"940" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>274</SUB>> ]
+"961" [label = <(set_stop_immediate,stopExecutionRequest.set_stop_immediate(true))<SUB>278</SUB>> ]
+"967" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>280</SUB>> ]
+"1005" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>290</SUB>> ]
+"1015" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>291</SUB>> ]
+"1021" [label = <(stopObservingStreams,mStreamSetObserver-&gt;stopObservingStreams(true))<SUB>294</SUB>> ]
+"1038" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>299</SUB>> ]
+"907" [label = <(&lt;operator&gt;.notEquals,mGraphState != PrebuiltGraphState::RUNNING)<SUB>263</SUB>> ]
+"918" [label = <(isAborted,e.isAborted())<SUB>267</SUB>> ]
+"941" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>274</SUB>> ]
+"944" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>274</SUB>> ]
+"962" [label = <(&lt;operator&gt;.fieldAccess,stopExecutionRequest.set_stop_immediate)<SUB>278</SUB>> ]
+"968" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>280</SUB>> ]
+"975" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>280</SUB>> ]
+"991" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>285</SUB>> ]
+"1007" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>290</SUB>> ]
+"1017" [label = <(message,response.message())<SUB>291</SUB>> ]
+"1022" [label = <(&lt;operator&gt;.indirectFieldAccess,mStreamSetObserver-&gt;stopObservingStreams)<SUB>294</SUB>> ]
+"1027" [label = <(&lt;operator&gt;.equals,mStatus == Status::SUCCESS)<SUB>296</SUB>> ]
+"909" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::RUNNING)<SUB>263</SUB>> ]
+"913" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>264</SUB>> ]
+"919" [label = <(&lt;operator&gt;.fieldAccess,e.isAborted)<SUB>267</SUB>> ]
+"923" [label = <(RETURN,return Status::INVALID_ARGUMENT;,return Status::INVALID_ARGUMENT;)<SUB>268</SUB>> ]
+"943" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>274</SUB>> ]
+"945" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>274</SUB>> ]
+"953" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>275</SUB>> ]
+"964" [label = <(FIELD_IDENTIFIER,set_stop_immediate,set_stop_immediate)<SUB>278</SUB>> ]
+"969" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>280</SUB>> ]
+"972" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>280</SUB>> ]
+"976" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>280</SUB>> ]
+"979" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>280</SUB>> ]
+"993" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>285</SUB>> ]
+"997" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to stop graph execution&quot;)<SUB>286</SUB>> ]
+"1001" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>287</SUB>> ]
+"1008" [label = <(UNKNOWN,Status,Status)<SUB>290</SUB>> ]
+"1009" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>290</SUB>> ]
+"1018" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>291</SUB>> ]
+"1024" [label = <(FIELD_IDENTIFIER,stopObservingStreams,stopObservingStreams)<SUB>294</SUB>> ]
+"1029" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>296</SUB>> ]
+"1033" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::STOPPED)<SUB>297</SUB>> ]
+"911" [label = <(FIELD_IDENTIFIER,RUNNING,RUNNING)<SUB>263</SUB>> ]
+"914" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>264</SUB>> ]
+"921" [label = <(FIELD_IDENTIFIER,isAborted,isAborted)<SUB>267</SUB>> ]
+"924" [label = <(&lt;operator&gt;.fieldAccess,Status::INVALID_ARGUMENT)<SUB>268</SUB>> ]
+"946" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>274</SUB>> ]
+"954" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>275</SUB>> ]
+"971" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>280</SUB>> ]
+"974" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>280</SUB>> ]
+"978" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>280</SUB>> ]
+"980" [label = <(AsyncStopGraphExecution,mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq))<SUB>281</SUB>> ]
+"995" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>285</SUB>> ]
+"998" [label = <(LOG,LOG(ERROR))<SUB>286</SUB>> ]
+"1002" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>287</SUB>> ]
+"1010" [label = <(UNKNOWN,int,int)<SUB>290</SUB>> ]
+"1011" [label = <(code,response.code())<SUB>290</SUB>> ]
+"1020" [label = <(FIELD_IDENTIFIER,message,message)<SUB>291</SUB>> ]
+"1031" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>296</SUB>> ]
+"1035" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::STOPPED)<SUB>297</SUB>> ]
+"916" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>264</SUB>> ]
+"926" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>268</SUB>> ]
+"930" [label = <(isTransitionComplete,e.isTransitionComplete())<SUB>269</SUB>> ]
+"947" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>274</SUB>> ]
+"952" [label = <(FIELD_IDENTIFIER,now,now)<SUB>274</SUB>> ]
+"955" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>275</SUB>> ]
+"958" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>275</SUB>> ]
+"981" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncStopGraphExecution)<SUB>281</SUB>> ]
+"984" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>281</SUB>> ]
+"987" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>281</SUB>> ]
+"1004" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>287</SUB>> ]
+"1012" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>290</SUB>> ]
+"1037" [label = <(FIELD_IDENTIFIER,STOPPED,STOPPED)<SUB>297</SUB>> ]
+"931" [label = <(&lt;operator&gt;.fieldAccess,e.isTransitionComplete)<SUB>269</SUB>> ]
+"935" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>270</SUB>> ]
+"949" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>274</SUB>> ]
+"983" [label = <(FIELD_IDENTIFIER,AsyncStopGraphExecution,AsyncStopGraphExecution)<SUB>281</SUB>> ]
+"1014" [label = <(FIELD_IDENTIFIER,code,code)<SUB>290</SUB>> ]
+"933" [label = <(FIELD_IDENTIFIER,isTransitionComplete,isTransitionComplete)<SUB>269</SUB>> ]
+"936" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>270</SUB>> ]
+"938" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>270</SUB>> ]
+"900" [label = <(METHOD,handleStopImmediatePhase)<SUB>261</SUB>> ]
+"1040" [label = <(METHOD_RETURN,Status)<SUB>261</SUB>> ]
+  "904" -> "911" 
+  "940" -> "964" 
+  "961" -> "971" 
+  "967" -> "995" 
+  "1005" -> "1020" 
+  "1015" -> "1024" 
+  "1021" -> "1031" 
+  "1038" -> "1040" 
+  "907" -> "916" 
+  "907" -> "921" 
+  "918" -> "926" 
+  "918" -> "933" 
+  "941" -> "949" 
+  "944" -> "940" 
+  "962" -> "961" 
+  "968" -> "978" 
+  "975" -> "967" 
+  "991" -> "998" 
+  "991" -> "1008" 
+  "1007" -> "1005" 
+  "1017" -> "1015" 
+  "1022" -> "1021" 
+  "1027" -> "1037" 
+  "1027" -> "1038" 
+  "909" -> "907" 
+  "913" -> "1040" 
+  "919" -> "918" 
+  "923" -> "1040" 
+  "943" -> "941" 
+  "945" -> "955" 
+  "953" -> "944" 
+  "964" -> "962" 
+  "969" -> "974" 
+  "972" -> "968" 
+  "976" -> "983" 
+  "979" -> "975" 
+  "993" -> "991" 
+  "997" -> "1004" 
+  "1001" -> "1040" 
+  "1008" -> "1010" 
+  "1009" -> "1007" 
+  "1018" -> "1017" 
+  "1024" -> "1022" 
+  "1029" -> "1027" 
+  "1033" -> "1038" 
+  "911" -> "909" 
+  "914" -> "913" 
+  "921" -> "919" 
+  "924" -> "923" 
+  "946" -> "945" 
+  "954" -> "953" 
+  "971" -> "969" 
+  "974" -> "972" 
+  "978" -> "976" 
+  "980" -> "979" 
+  "995" -> "993" 
+  "998" -> "997" 
+  "1002" -> "1001" 
+  "1010" -> "1014" 
+  "1011" -> "1009" 
+  "1020" -> "1018" 
+  "1031" -> "1029" 
+  "1035" -> "1033" 
+  "916" -> "914" 
+  "926" -> "924" 
+  "930" -> "938" 
+  "930" -> "943" 
+  "947" -> "952" 
+  "952" -> "946" 
+  "955" -> "958" 
+  "958" -> "954" 
+  "981" -> "984" 
+  "984" -> "987" 
+  "987" -> "980" 
+  "1004" -> "1002" 
+  "1012" -> "1011" 
+  "1037" -> "1035" 
+  "931" -> "930" 
+  "935" -> "1040" 
+  "949" -> "947" 
+  "983" -> "981" 
+  "1014" -> "1012" 
+  "933" -> "931" 
+  "936" -> "935" 
+  "938" -> "936" 
+  "900" -> "904" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/27-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/27-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/27-cfg.dot	2023-06-09 11:34:58.516305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/27-cfg.dot	2023-06-09 11:35:02.396305192 +0330
@@ -1,11 +1,151 @@
-digraph "~GrpcGraph" {  
-"301" [label = <(reset,mStreamSetObserver.reset())<SUB>69</SUB>> ]
-"302" [label = <(&lt;operator&gt;.fieldAccess,mStreamSetObserver.reset)<SUB>69</SUB>> ]
-"304" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>69</SUB>> ]
-"299" [label = <(METHOD,~GrpcGraph)<SUB>68</SUB>> ]
-"305" [label = <(METHOD_RETURN,ANY)<SUB>68</SUB>> ]
-  "301" -> "305" 
-  "302" -> "301" 
-  "304" -> "302" 
-  "299" -> "304" 
+digraph "handleResetPhase" {  
+"1046" [label = <(lock,lock(mLock))<SUB>303</SUB>> ]
+"1082" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>315</SUB>> ]
+"1104" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncResetGraph(&amp;context, resetGraphRequest, &amp;cq)))<SUB>320</SUB>> ]
+"1142" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>330</SUB>> ]
+"1152" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>331</SUB>> ]
+"1158" [label = <(reset,mStreamSetObserver.reset())<SUB>332</SUB>> ]
+"1162" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>334</SUB>> ]
+"1049" [label = <(&lt;operator&gt;.notEquals,mGraphState != PrebuiltGraphState::STOPPED)<SUB>304</SUB>> ]
+"1060" [label = <(isAborted,e.isAborted())<SUB>308</SUB>> ]
+"1083" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>315</SUB>> ]
+"1086" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>315</SUB>> ]
+"1105" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>320</SUB>> ]
+"1112" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncResetGraph(&amp;context, resetGraphRequest, &amp;cq)))<SUB>320</SUB>> ]
+"1128" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>325</SUB>> ]
+"1144" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>330</SUB>> ]
+"1154" [label = <(message,response.message())<SUB>331</SUB>> ]
+"1159" [label = <(&lt;operator&gt;.fieldAccess,mStreamSetObserver.reset)<SUB>332</SUB>> ]
+"1051" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::STOPPED)<SUB>304</SUB>> ]
+"1055" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>305</SUB>> ]
+"1061" [label = <(&lt;operator&gt;.fieldAccess,e.isAborted)<SUB>308</SUB>> ]
+"1065" [label = <(RETURN,return Status::INVALID_ARGUMENT;,return Status::INVALID_ARGUMENT;)<SUB>309</SUB>> ]
+"1085" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>315</SUB>> ]
+"1087" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>315</SUB>> ]
+"1095" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>316</SUB>> ]
+"1106" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>320</SUB>> ]
+"1109" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>320</SUB>> ]
+"1113" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>320</SUB>> ]
+"1116" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncResetGraph(&amp;context, resetGraphRequest, &amp;cq)))<SUB>320</SUB>> ]
+"1130" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>325</SUB>> ]
+"1134" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to stop graph execution&quot;)<SUB>326</SUB>> ]
+"1138" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>327</SUB>> ]
+"1145" [label = <(UNKNOWN,Status,Status)<SUB>330</SUB>> ]
+"1146" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>330</SUB>> ]
+"1155" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>331</SUB>> ]
+"1161" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>332</SUB>> ]
+"1053" [label = <(FIELD_IDENTIFIER,STOPPED,STOPPED)<SUB>304</SUB>> ]
+"1056" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>305</SUB>> ]
+"1063" [label = <(FIELD_IDENTIFIER,isAborted,isAborted)<SUB>308</SUB>> ]
+"1066" [label = <(&lt;operator&gt;.fieldAccess,Status::INVALID_ARGUMENT)<SUB>309</SUB>> ]
+"1088" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>315</SUB>> ]
+"1096" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>316</SUB>> ]
+"1108" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>320</SUB>> ]
+"1111" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>320</SUB>> ]
+"1115" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>320</SUB>> ]
+"1117" [label = <(AsyncResetGraph,mGraphStub-&gt;AsyncResetGraph(&amp;context, resetGraphRequest, &amp;cq))<SUB>321</SUB>> ]
+"1132" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>325</SUB>> ]
+"1135" [label = <(LOG,LOG(ERROR))<SUB>326</SUB>> ]
+"1139" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>327</SUB>> ]
+"1147" [label = <(UNKNOWN,int,int)<SUB>330</SUB>> ]
+"1148" [label = <(code,response.code())<SUB>330</SUB>> ]
+"1157" [label = <(FIELD_IDENTIFIER,message,message)<SUB>331</SUB>> ]
+"1058" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>305</SUB>> ]
+"1068" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>309</SUB>> ]
+"1072" [label = <(isTransitionComplete,e.isTransitionComplete())<SUB>310</SUB>> ]
+"1089" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>315</SUB>> ]
+"1094" [label = <(FIELD_IDENTIFIER,now,now)<SUB>315</SUB>> ]
+"1097" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>316</SUB>> ]
+"1100" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>316</SUB>> ]
+"1118" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncResetGraph)<SUB>321</SUB>> ]
+"1121" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>321</SUB>> ]
+"1124" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>321</SUB>> ]
+"1141" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>327</SUB>> ]
+"1149" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>330</SUB>> ]
+"1073" [label = <(&lt;operator&gt;.fieldAccess,e.isTransitionComplete)<SUB>310</SUB>> ]
+"1077" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>311</SUB>> ]
+"1091" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>315</SUB>> ]
+"1120" [label = <(FIELD_IDENTIFIER,AsyncResetGraph,AsyncResetGraph)<SUB>321</SUB>> ]
+"1151" [label = <(FIELD_IDENTIFIER,code,code)<SUB>330</SUB>> ]
+"1075" [label = <(FIELD_IDENTIFIER,isTransitionComplete,isTransitionComplete)<SUB>310</SUB>> ]
+"1078" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>311</SUB>> ]
+"1080" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>311</SUB>> ]
+"1042" [label = <(METHOD,handleResetPhase)<SUB>302</SUB>> ]
+"1164" [label = <(METHOD_RETURN,Status)<SUB>302</SUB>> ]
+  "1046" -> "1053" 
+  "1082" -> "1108" 
+  "1104" -> "1132" 
+  "1142" -> "1157" 
+  "1152" -> "1161" 
+  "1158" -> "1162" 
+  "1162" -> "1164" 
+  "1049" -> "1058" 
+  "1049" -> "1063" 
+  "1060" -> "1068" 
+  "1060" -> "1075" 
+  "1083" -> "1091" 
+  "1086" -> "1082" 
+  "1105" -> "1115" 
+  "1112" -> "1104" 
+  "1128" -> "1135" 
+  "1128" -> "1145" 
+  "1144" -> "1142" 
+  "1154" -> "1152" 
+  "1159" -> "1158" 
+  "1051" -> "1049" 
+  "1055" -> "1164" 
+  "1061" -> "1060" 
+  "1065" -> "1164" 
+  "1085" -> "1083" 
+  "1087" -> "1097" 
+  "1095" -> "1086" 
+  "1106" -> "1111" 
+  "1109" -> "1105" 
+  "1113" -> "1120" 
+  "1116" -> "1112" 
+  "1130" -> "1128" 
+  "1134" -> "1141" 
+  "1138" -> "1164" 
+  "1145" -> "1147" 
+  "1146" -> "1144" 
+  "1155" -> "1154" 
+  "1161" -> "1159" 
+  "1053" -> "1051" 
+  "1056" -> "1055" 
+  "1063" -> "1061" 
+  "1066" -> "1065" 
+  "1088" -> "1087" 
+  "1096" -> "1095" 
+  "1108" -> "1106" 
+  "1111" -> "1109" 
+  "1115" -> "1113" 
+  "1117" -> "1116" 
+  "1132" -> "1130" 
+  "1135" -> "1134" 
+  "1139" -> "1138" 
+  "1147" -> "1151" 
+  "1148" -> "1146" 
+  "1157" -> "1155" 
+  "1058" -> "1056" 
+  "1068" -> "1066" 
+  "1072" -> "1080" 
+  "1072" -> "1085" 
+  "1089" -> "1094" 
+  "1094" -> "1088" 
+  "1097" -> "1100" 
+  "1100" -> "1096" 
+  "1118" -> "1121" 
+  "1121" -> "1124" 
+  "1124" -> "1117" 
+  "1141" -> "1139" 
+  "1149" -> "1148" 
+  "1073" -> "1072" 
+  "1077" -> "1164" 
+  "1091" -> "1089" 
+  "1120" -> "1118" 
+  "1151" -> "1149" 
+  "1075" -> "1073" 
+  "1078" -> "1077" 
+  "1080" -> "1078" 
+  "1042" -> "1046" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/28-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/28-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/28-cfg.dot	2023-06-09 11:34:58.516305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/28-cfg.dot	2023-06-09 11:35:02.396305192 +0330
@@ -1,9 +1,15 @@
-digraph "GetGraphState" {  
-"310" [label = <(lock,lock(mLock))<SUB>73</SUB>> ]
-"312" [label = <(RETURN,return mGraphState;,return mGraphState;)<SUB>74</SUB>> ]
-"307" [label = <(METHOD,GetGraphState)<SUB>72</SUB>> ]
-"314" [label = <(METHOD_RETURN,PrebuiltGraphState)<SUB>72</SUB>> ]
-  "310" -> "312" 
-  "312" -> "314" 
-  "307" -> "310" 
+digraph "SetInputStreamData" {  
+"1171" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Cannot set input stream for remote graphs&quot;)<SUB>339</SUB>> ]
+"1175" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>340</SUB>> ]
+"1172" [label = <(LOG,LOG(ERROR))<SUB>339</SUB>> ]
+"1176" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>340</SUB>> ]
+"1178" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>340</SUB>> ]
+"1166" [label = <(METHOD,SetInputStreamData)<SUB>337</SUB>> ]
+"1179" [label = <(METHOD_RETURN,Status)<SUB>337</SUB>> ]
+  "1171" -> "1178" 
+  "1175" -> "1179" 
+  "1172" -> "1171" 
+  "1176" -> "1175" 
+  "1178" -> "1176" 
+  "1166" -> "1172" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/29-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/29-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/29-cfg.dot	2023-06-09 11:34:58.526305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/29-cfg.dot	2023-06-09 11:35:02.396305192 +0330
@@ -1,9 +1,15 @@
-digraph "GetStatus" {  
-"319" [label = <(lock,lock(mLock))<SUB>78</SUB>> ]
-"321" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>79</SUB>> ]
-"316" [label = <(METHOD,GetStatus)<SUB>77</SUB>> ]
-"323" [label = <(METHOD_RETURN,Status)<SUB>77</SUB>> ]
-  "319" -> "321" 
-  "321" -> "323" 
-  "316" -> "319" 
+digraph "SetInputStreamPixelData" {  
+"1186" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Cannot set input streams for remote graphs&quot;)<SUB>345</SUB>> ]
+"1190" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>346</SUB>> ]
+"1187" [label = <(LOG,LOG(ERROR))<SUB>345</SUB>> ]
+"1191" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>346</SUB>> ]
+"1193" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>346</SUB>> ]
+"1181" [label = <(METHOD,SetInputStreamPixelData)<SUB>343</SUB>> ]
+"1194" [label = <(METHOD_RETURN,Status)<SUB>343</SUB>> ]
+  "1186" -> "1193" 
+  "1190" -> "1194" 
+  "1187" -> "1186" 
+  "1191" -> "1190" 
+  "1193" -> "1191" 
+  "1181" -> "1187" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/3-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/3-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/3-cfg.dot	2023-06-09 11:34:58.466305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/3-cfg.dot	2023-06-09 11:35:02.316305191 +0330
@@ -1,5 +1,5 @@
-digraph "GrpcGraph" {  
-"22" [label = <(METHOD,GrpcGraph)<SUB>54</SUB>> ]
-"25" [label = <(METHOD_RETURN,ANY)<SUB>54</SUB>> ]
-  "22" -> "25" 
+digraph "dispatchPixelData" {  
+"23" [label = <(METHOD,dispatchPixelData)<SUB>49</SUB>> ]
+"28" [label = <(METHOD_RETURN,void)<SUB>49</SUB>> ]
+  "23" -> "28" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/30-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/30-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/30-cfg.dot	2023-06-09 11:34:58.526305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/30-cfg.dot	2023-06-09 11:35:02.396305192 +0330
@@ -1,9 +1,119 @@
-digraph "GetErrorMessage" {  
-"328" [label = <(lock,lock(mLock))<SUB>83</SUB>> ]
-"330" [label = <(RETURN,return mErrorMessage;,return mErrorMessage;)<SUB>84</SUB>> ]
-"325" [label = <(METHOD,GetErrorMessage)<SUB>82</SUB>> ]
-"332" [label = <(METHOD_RETURN,string)<SUB>82</SUB>> ]
-  "328" -> "330" 
-  "330" -> "332" 
-  "325" -> "328" 
+digraph "StartGraphProfiling" {  
+"1199" [label = <(lock,lock(mLock))<SUB>350</SUB>> ]
+"1213" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>356</SUB>> ]
+"1235" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStartGraphProfiling(&amp;context, startProfilingRequest, &amp;cq)))<SUB>361</SUB>> ]
+"1273" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>371</SUB>> ]
+"1283" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>372</SUB>> ]
+"1289" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>374</SUB>> ]
+"1202" [label = <(&lt;operator&gt;.notEquals,mGraphState != PrebuiltGraphState::RUNNING)<SUB>351</SUB>> ]
+"1214" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>356</SUB>> ]
+"1217" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>356</SUB>> ]
+"1236" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>361</SUB>> ]
+"1243" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStartGraphProfiling(&amp;context, startProfilingRequest, &amp;cq)))<SUB>361</SUB>> ]
+"1259" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>366</SUB>> ]
+"1275" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>371</SUB>> ]
+"1285" [label = <(message,response.message())<SUB>372</SUB>> ]
+"1204" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::RUNNING)<SUB>351</SUB>> ]
+"1208" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>352</SUB>> ]
+"1216" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>356</SUB>> ]
+"1218" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>356</SUB>> ]
+"1226" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>357</SUB>> ]
+"1237" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>361</SUB>> ]
+"1240" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>361</SUB>> ]
+"1244" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>361</SUB>> ]
+"1247" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncStartGraphProfiling(&amp;context, startProfilingRequest, &amp;cq)))<SUB>361</SUB>> ]
+"1261" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>366</SUB>> ]
+"1265" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to start graph profiling&quot;)<SUB>367</SUB>> ]
+"1269" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>368</SUB>> ]
+"1276" [label = <(UNKNOWN,Status,Status)<SUB>371</SUB>> ]
+"1277" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>371</SUB>> ]
+"1286" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>372</SUB>> ]
+"1206" [label = <(FIELD_IDENTIFIER,RUNNING,RUNNING)<SUB>351</SUB>> ]
+"1209" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>352</SUB>> ]
+"1219" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>356</SUB>> ]
+"1227" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>357</SUB>> ]
+"1239" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>361</SUB>> ]
+"1242" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>361</SUB>> ]
+"1246" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>361</SUB>> ]
+"1248" [label = <(AsyncStartGraphProfiling,mGraphStub-&gt;AsyncStartGraphProfiling(&amp;context, startProfilingRequest, &amp;cq))<SUB>362</SUB>> ]
+"1263" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>366</SUB>> ]
+"1266" [label = <(LOG,LOG(ERROR))<SUB>367</SUB>> ]
+"1270" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>368</SUB>> ]
+"1278" [label = <(UNKNOWN,int,int)<SUB>371</SUB>> ]
+"1279" [label = <(code,response.code())<SUB>371</SUB>> ]
+"1288" [label = <(FIELD_IDENTIFIER,message,message)<SUB>372</SUB>> ]
+"1211" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>352</SUB>> ]
+"1220" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>356</SUB>> ]
+"1225" [label = <(FIELD_IDENTIFIER,now,now)<SUB>356</SUB>> ]
+"1228" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>357</SUB>> ]
+"1231" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>357</SUB>> ]
+"1249" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncStartGraphProfiling)<SUB>362</SUB>> ]
+"1252" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>362</SUB>> ]
+"1255" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>362</SUB>> ]
+"1272" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>368</SUB>> ]
+"1280" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>371</SUB>> ]
+"1222" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>356</SUB>> ]
+"1251" [label = <(FIELD_IDENTIFIER,AsyncStartGraphProfiling,AsyncStartGraphProfiling)<SUB>362</SUB>> ]
+"1282" [label = <(FIELD_IDENTIFIER,code,code)<SUB>371</SUB>> ]
+"1196" [label = <(METHOD,StartGraphProfiling)<SUB>349</SUB>> ]
+"1291" [label = <(METHOD_RETURN,Status)<SUB>349</SUB>> ]
+  "1199" -> "1206" 
+  "1213" -> "1239" 
+  "1235" -> "1263" 
+  "1273" -> "1288" 
+  "1283" -> "1289" 
+  "1289" -> "1291" 
+  "1202" -> "1211" 
+  "1202" -> "1216" 
+  "1214" -> "1222" 
+  "1217" -> "1213" 
+  "1236" -> "1246" 
+  "1243" -> "1235" 
+  "1259" -> "1266" 
+  "1259" -> "1276" 
+  "1275" -> "1273" 
+  "1285" -> "1283" 
+  "1204" -> "1202" 
+  "1208" -> "1291" 
+  "1216" -> "1214" 
+  "1218" -> "1228" 
+  "1226" -> "1217" 
+  "1237" -> "1242" 
+  "1240" -> "1236" 
+  "1244" -> "1251" 
+  "1247" -> "1243" 
+  "1261" -> "1259" 
+  "1265" -> "1272" 
+  "1269" -> "1291" 
+  "1276" -> "1278" 
+  "1277" -> "1275" 
+  "1286" -> "1285" 
+  "1206" -> "1204" 
+  "1209" -> "1208" 
+  "1219" -> "1218" 
+  "1227" -> "1226" 
+  "1239" -> "1237" 
+  "1242" -> "1240" 
+  "1246" -> "1244" 
+  "1248" -> "1247" 
+  "1263" -> "1261" 
+  "1266" -> "1265" 
+  "1270" -> "1269" 
+  "1278" -> "1282" 
+  "1279" -> "1277" 
+  "1288" -> "1286" 
+  "1211" -> "1209" 
+  "1220" -> "1225" 
+  "1225" -> "1219" 
+  "1228" -> "1231" 
+  "1231" -> "1227" 
+  "1249" -> "1252" 
+  "1252" -> "1255" 
+  "1255" -> "1248" 
+  "1272" -> "1270" 
+  "1280" -> "1279" 
+  "1222" -> "1220" 
+  "1251" -> "1249" 
+  "1282" -> "1280" 
+  "1196" -> "1199" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/31-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/31-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/31-cfg.dot	2023-06-09 11:34:58.536305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/31-cfg.dot	2023-06-09 11:35:02.406305192 +0330
@@ -1,173 +1,104 @@
-digraph "initialize" {  
-"338" [label = <(&lt;operator&gt;.assignment,std::shared_ptr&lt;::grpc::ChannelCredentials&gt; creds = ::grpc::InsecureChannelCredentials())<SUB>89</SUB>> ]
-"352" [label = <(&lt;operator&gt;.assignment,std::shared_ptr&lt;::grpc::Channel&gt; channel = ::grpc::CreateChannel(address, creds))<SUB>90</SUB>> ]
-"368" [label = <(&lt;operator&gt;.assignment,mGraphStub = proto::GrpcGraphService::NewStub(channel))<SUB>91</SUB>> ]
-"377" [label = <(&lt;operator&gt;.assignment,mEngineInterface = engineInterface)<SUB>92</SUB>> ]
-"381" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>95</SUB>> ]
-"403" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::GraphOptionsResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncGetGraphOptions(&amp;context, getGraphOptionsRequest, &amp;cq)))<SUB>100</SUB>> ]
-"444" [label = <(&lt;operator&gt;.assignment,serialized_options = response.serialized_options())<SUB>111</SUB>> ]
-"469" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::STOPPED)<SUB>118</SUB>> ]
-"474" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>119</SUB>> ]
-"339" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;::grpc::ChannelCredentials&gt; creds)<SUB>89</SUB>> ]
-"348" [label = <(::grpc::InsecureChannelCredentials,::grpc::InsecureChannelCredentials())<SUB>89</SUB>> ]
-"353" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;::grpc::Channel&gt; channel)<SUB>90</SUB>> ]
-"362" [label = <(::grpc::CreateChannel,::grpc::CreateChannel(address, creds))<SUB>90</SUB>> ]
-"370" [label = <(proto::GrpcGraphService::NewStub,proto::GrpcGraphService::NewStub(channel))<SUB>91</SUB>> ]
-"382" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>95</SUB>> ]
-"385" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>95</SUB>> ]
-"404" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>100</SUB>> ]
-"411" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::GraphOptionsResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncGetGraphOptions(&amp;context, getGraphOptionsRequest, &amp;cq)))<SUB>100</SUB>> ]
-"427" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>106</SUB>> ]
-"446" [label = <(serialized_options,response.serialized_options())<SUB>111</SUB>> ]
-"451" [label = <(&lt;operator&gt;.logicalNot,!mGraphConfig.ParseFromString(serialized_options))<SUB>112</SUB>> ]
-"471" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::STOPPED)<SUB>118</SUB>> ]
-"475" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>119</SUB>> ]
-"340" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;::grpc::ChannelCredentials)<SUB>89</SUB>> ]
-"349" [label = <(&lt;operator&gt;.fieldAccess,::grpc::InsecureChannelCredentials)<SUB>89</SUB>> ]
-"354" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;::grpc::Channel)<SUB>90</SUB>> ]
-"363" [label = <(&lt;operator&gt;.fieldAccess,::grpc::CreateChannel)<SUB>90</SUB>> ]
-"371" [label = <(&lt;operator&gt;.fieldAccess,proto::GrpcGraphService::NewStub)<SUB>91</SUB>> ]
-"384" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>95</SUB>> ]
-"386" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>95</SUB>> ]
-"394" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>96</SUB>> ]
-"405" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>100</SUB>> ]
-"408" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>100</SUB>> ]
-"412" [label = <(&lt;operator&gt;.fieldAccess,proto::GraphOptionsResponse)<SUB>100</SUB>> ]
-"415" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncGetGraphOptions(&amp;context, getGraphOptionsRequest, &amp;cq)))<SUB>100</SUB>> ]
-"429" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>106</SUB>> ]
-"433" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to get graph options: &quot; &lt;&lt; mErrorMessage)<SUB>107</SUB>> ]
-"439" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>108</SUB>> ]
-"447" [label = <(&lt;operator&gt;.fieldAccess,response.serialized_options)<SUB>111</SUB>> ]
-"452" [label = <(ParseFromString,mGraphConfig.ParseFromString(serialized_options))<SUB>112</SUB>> ]
-"458" [label = <(&lt;operator&gt;.assignment,mErrorMessage = &quot;Failed to parse graph options&quot;)<SUB>113</SUB>> ]
-"461" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to parse graph options&quot;)<SUB>114</SUB>> ]
-"465" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>115</SUB>> ]
-"473" [label = <(FIELD_IDENTIFIER,STOPPED,STOPPED)<SUB>118</SUB>> ]
-"477" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>119</SUB>> ]
-"341" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>89</SUB>> ]
-"344" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ChannelCredentials)<SUB>89</SUB>> ]
-"351" [label = <(FIELD_IDENTIFIER,InsecureChannelCredentials,InsecureChannelCredentials)<SUB>89</SUB>> ]
-"355" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>90</SUB>> ]
-"358" [label = <(&lt;operator&gt;.fieldAccess,::grpc::Channel)<SUB>90</SUB>> ]
-"365" [label = <(FIELD_IDENTIFIER,CreateChannel,CreateChannel)<SUB>90</SUB>> ]
-"372" [label = <(&lt;operator&gt;.fieldAccess,proto::GrpcGraphService)<SUB>91</SUB>> ]
-"375" [label = <(FIELD_IDENTIFIER,NewStub,NewStub)<SUB>91</SUB>> ]
-"387" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>95</SUB>> ]
-"395" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>96</SUB>> ]
-"407" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>100</SUB>> ]
-"410" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>100</SUB>> ]
-"414" [label = <(FIELD_IDENTIFIER,GraphOptionsResponse,GraphOptionsResponse)<SUB>100</SUB>> ]
-"416" [label = <(AsyncGetGraphOptions,mGraphStub-&gt;AsyncGetGraphOptions(&amp;context, getGraphOptionsRequest, &amp;cq))<SUB>101</SUB>> ]
-"431" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>106</SUB>> ]
-"434" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to get graph options: &quot;)<SUB>107</SUB>> ]
-"440" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>108</SUB>> ]
-"449" [label = <(FIELD_IDENTIFIER,serialized_options,serialized_options)<SUB>111</SUB>> ]
-"453" [label = <(&lt;operator&gt;.fieldAccess,mGraphConfig.ParseFromString)<SUB>112</SUB>> ]
-"462" [label = <(LOG,LOG(ERROR))<SUB>114</SUB>> ]
-"466" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>115</SUB>> ]
-"343" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>89</SUB>> ]
-"346" [label = <(FIELD_IDENTIFIER,ChannelCredentials,ChannelCredentials)<SUB>89</SUB>> ]
-"357" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>90</SUB>> ]
-"360" [label = <(FIELD_IDENTIFIER,Channel,Channel)<SUB>90</SUB>> ]
-"388" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>95</SUB>> ]
-"393" [label = <(FIELD_IDENTIFIER,now,now)<SUB>95</SUB>> ]
-"396" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>96</SUB>> ]
-"399" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>96</SUB>> ]
-"417" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncGetGraphOptions)<SUB>101</SUB>> ]
-"420" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>101</SUB>> ]
-"423" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>101</SUB>> ]
-"435" [label = <(LOG,LOG(ERROR))<SUB>107</SUB>> ]
-"442" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>108</SUB>> ]
-"455" [label = <(FIELD_IDENTIFIER,ParseFromString,ParseFromString)<SUB>112</SUB>> ]
-"468" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>115</SUB>> ]
-"390" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>95</SUB>> ]
-"419" [label = <(FIELD_IDENTIFIER,AsyncGetGraphOptions,AsyncGetGraphOptions)<SUB>101</SUB>> ]
-"334" [label = <(METHOD,initialize)<SUB>87</SUB>> ]
-"478" [label = <(METHOD_RETURN,Status)<SUB>87</SUB>> ]
-  "338" -> "357" 
-  "352" -> "372" 
-  "368" -> "377" 
-  "377" -> "384" 
-  "381" -> "407" 
-  "403" -> "431" 
-  "444" -> "455" 
-  "469" -> "477" 
-  "474" -> "478" 
-  "339" -> "351" 
-  "348" -> "338" 
-  "353" -> "365" 
-  "362" -> "352" 
-  "370" -> "368" 
-  "382" -> "390" 
-  "385" -> "381" 
-  "404" -> "414" 
-  "411" -> "403" 
-  "427" -> "435" 
-  "427" -> "449" 
-  "446" -> "444" 
-  "451" -> "458" 
-  "451" -> "473" 
-  "471" -> "469" 
-  "475" -> "474" 
-  "340" -> "339" 
-  "349" -> "348" 
-  "354" -> "353" 
-  "363" -> "362" 
-  "371" -> "370" 
-  "384" -> "382" 
-  "386" -> "396" 
-  "394" -> "385" 
-  "405" -> "410" 
-  "408" -> "404" 
-  "412" -> "419" 
-  "415" -> "411" 
-  "429" -> "427" 
-  "433" -> "442" 
-  "439" -> "478" 
-  "447" -> "446" 
-  "452" -> "451" 
-  "458" -> "462" 
-  "461" -> "468" 
-  "465" -> "478" 
-  "473" -> "471" 
-  "477" -> "475" 
-  "341" -> "346" 
-  "344" -> "340" 
-  "351" -> "349" 
-  "355" -> "360" 
-  "358" -> "354" 
-  "365" -> "363" 
-  "372" -> "375" 
-  "375" -> "371" 
-  "387" -> "386" 
-  "395" -> "394" 
-  "407" -> "405" 
-  "410" -> "408" 
-  "414" -> "412" 
-  "416" -> "415" 
-  "431" -> "429" 
-  "434" -> "433" 
-  "440" -> "439" 
-  "449" -> "447" 
-  "453" -> "452" 
-  "462" -> "461" 
-  "466" -> "465" 
-  "343" -> "341" 
-  "346" -> "344" 
-  "357" -> "355" 
-  "360" -> "358" 
-  "388" -> "393" 
-  "393" -> "387" 
-  "396" -> "399" 
-  "399" -> "395" 
-  "417" -> "420" 
-  "420" -> "423" 
-  "423" -> "416" 
-  "435" -> "434" 
-  "442" -> "440" 
-  "455" -> "453" 
-  "468" -> "466" 
-  "390" -> "388" 
-  "419" -> "417" 
-  "334" -> "343" 
+digraph "StopGraphProfiling" {  
+"1296" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>380</SUB>> ]
+"1318" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphProfiling(&amp;context, stopProfilingRequest, &amp;cq)))<SUB>385</SUB>> ]
+"1356" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>395</SUB>> ]
+"1366" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>396</SUB>> ]
+"1372" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>398</SUB>> ]
+"1297" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>380</SUB>> ]
+"1300" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>380</SUB>> ]
+"1319" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>385</SUB>> ]
+"1326" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphProfiling(&amp;context, stopProfilingRequest, &amp;cq)))<SUB>385</SUB>> ]
+"1342" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>390</SUB>> ]
+"1358" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>395</SUB>> ]
+"1368" [label = <(message,response.message())<SUB>396</SUB>> ]
+"1299" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>380</SUB>> ]
+"1301" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>380</SUB>> ]
+"1309" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>381</SUB>> ]
+"1320" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>385</SUB>> ]
+"1323" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>385</SUB>> ]
+"1327" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>385</SUB>> ]
+"1330" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncStopGraphProfiling(&amp;context, stopProfilingRequest, &amp;cq)))<SUB>385</SUB>> ]
+"1344" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>390</SUB>> ]
+"1348" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to stop graph profiling&quot;)<SUB>391</SUB>> ]
+"1352" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>392</SUB>> ]
+"1359" [label = <(UNKNOWN,Status,Status)<SUB>395</SUB>> ]
+"1360" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>395</SUB>> ]
+"1369" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>396</SUB>> ]
+"1302" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>380</SUB>> ]
+"1310" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>381</SUB>> ]
+"1322" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>385</SUB>> ]
+"1325" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>385</SUB>> ]
+"1329" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>385</SUB>> ]
+"1331" [label = <(AsyncStopGraphProfiling,mGraphStub-&gt;AsyncStopGraphProfiling(&amp;context, stopProfilingRequest, &amp;cq))<SUB>386</SUB>> ]
+"1346" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>390</SUB>> ]
+"1349" [label = <(LOG,LOG(ERROR))<SUB>391</SUB>> ]
+"1353" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>392</SUB>> ]
+"1361" [label = <(UNKNOWN,int,int)<SUB>395</SUB>> ]
+"1362" [label = <(code,response.code())<SUB>395</SUB>> ]
+"1371" [label = <(FIELD_IDENTIFIER,message,message)<SUB>396</SUB>> ]
+"1303" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>380</SUB>> ]
+"1308" [label = <(FIELD_IDENTIFIER,now,now)<SUB>380</SUB>> ]
+"1311" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>381</SUB>> ]
+"1314" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>381</SUB>> ]
+"1332" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncStopGraphProfiling)<SUB>386</SUB>> ]
+"1335" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>386</SUB>> ]
+"1338" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>386</SUB>> ]
+"1355" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>392</SUB>> ]
+"1363" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>395</SUB>> ]
+"1305" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>380</SUB>> ]
+"1334" [label = <(FIELD_IDENTIFIER,AsyncStopGraphProfiling,AsyncStopGraphProfiling)<SUB>386</SUB>> ]
+"1365" [label = <(FIELD_IDENTIFIER,code,code)<SUB>395</SUB>> ]
+"1293" [label = <(METHOD,StopGraphProfiling)<SUB>377</SUB>> ]
+"1374" [label = <(METHOD_RETURN,Status)<SUB>377</SUB>> ]
+  "1296" -> "1322" 
+  "1318" -> "1346" 
+  "1356" -> "1371" 
+  "1366" -> "1372" 
+  "1372" -> "1374" 
+  "1297" -> "1305" 
+  "1300" -> "1296" 
+  "1319" -> "1329" 
+  "1326" -> "1318" 
+  "1342" -> "1349" 
+  "1342" -> "1359" 
+  "1358" -> "1356" 
+  "1368" -> "1366" 
+  "1299" -> "1297" 
+  "1301" -> "1311" 
+  "1309" -> "1300" 
+  "1320" -> "1325" 
+  "1323" -> "1319" 
+  "1327" -> "1334" 
+  "1330" -> "1326" 
+  "1344" -> "1342" 
+  "1348" -> "1355" 
+  "1352" -> "1374" 
+  "1359" -> "1361" 
+  "1360" -> "1358" 
+  "1369" -> "1368" 
+  "1302" -> "1301" 
+  "1310" -> "1309" 
+  "1322" -> "1320" 
+  "1325" -> "1323" 
+  "1329" -> "1327" 
+  "1331" -> "1330" 
+  "1346" -> "1344" 
+  "1349" -> "1348" 
+  "1353" -> "1352" 
+  "1361" -> "1365" 
+  "1362" -> "1360" 
+  "1371" -> "1369" 
+  "1303" -> "1308" 
+  "1308" -> "1302" 
+  "1311" -> "1314" 
+  "1314" -> "1310" 
+  "1332" -> "1335" 
+  "1335" -> "1338" 
+  "1338" -> "1331" 
+  "1355" -> "1353" 
+  "1363" -> "1362" 
+  "1305" -> "1303" 
+  "1334" -> "1332" 
+  "1365" -> "1363" 
+  "1293" -> "1299" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/32-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/32-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/32-cfg.dot	2023-06-09 11:34:58.536305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/32-cfg.dot	2023-06-09 11:35:02.406305192 +0330
@@ -1,212 +1,82 @@
-digraph "handleConfigPhase" {  
-"484" [label = <(lock,lock(mLock))<SUB>125</SUB>> ]
-"531" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>141</SUB>> ]
-"553" [label = <(&lt;operator&gt;.assignment,serializedConfig = e.getSerializedClientConfig())<SUB>145</SUB>> ]
-"560" [label = <(set_serialized_config,setGraphConfigRequest.set_serialized_config(std::move(serializedConfig)))<SUB>147</SUB>> ]
-"569" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncSetGraphConfig(&amp;context, setGraphConfigRequest, &amp;cq)))<SUB>149</SUB>> ]
-"626" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>163</SUB>> ]
-"636" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>164</SUB>> ]
-"642" [label = <(&lt;operator&gt;.assignment,mStreamSetObserver = std::make_unique&lt;StreamSetObserver&gt;(e, this))<SUB>166</SUB>> ]
-"654" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>168</SUB>> ]
-"487" [label = <(&lt;operator&gt;.equals,mGraphState == PrebuiltGraphState::UNINITIALIZED)<SUB>126</SUB>> ]
-"503" [label = <(isAborted,e.isAborted())<SUB>132</SUB>> ]
-"532" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>141</SUB>> ]
-"535" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>141</SUB>> ]
-"555" [label = <(getSerializedClientConfig,e.getSerializedClientConfig())<SUB>145</SUB>> ]
-"561" [label = <(&lt;operator&gt;.fieldAccess,setGraphConfigRequest.set_serialized_config)<SUB>147</SUB>> ]
-"564" [label = <(std::move,std::move(serializedConfig))<SUB>147</SUB>> ]
-"570" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>149</SUB>> ]
-"577" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncSetGraphConfig(&amp;context, setGraphConfigRequest, &amp;cq)))<SUB>149</SUB>> ]
-"593" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>154</SUB>> ]
-"606" [label = <(&lt;operator&gt;.notEquals,response.code() != proto::RemoteGraphStatusCode::SUCCESS)<SUB>159</SUB>> ]
-"628" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>163</SUB>> ]
-"638" [label = <(message,response.message())<SUB>164</SUB>> ]
-"644" [label = <(&lt;operator&gt;.greaterThan,std::make_unique&lt;StreamSetObserver&gt;(e, this))<SUB>166</SUB>> ]
-"489" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::UNINITIALIZED)<SUB>126</SUB>> ]
-"493" [label = <(&lt;operator&gt;.assignment,mStatus = Status::ILLEGAL_STATE)<SUB>127</SUB>> ]
-"498" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>128</SUB>> ]
-"504" [label = <(&lt;operator&gt;.fieldAccess,e.isAborted)<SUB>132</SUB>> ]
-"508" [label = <(&lt;operator&gt;.assignment,mStatus = Status::INVALID_ARGUMENT)<SUB>133</SUB>> ]
-"513" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>134</SUB>> ]
-"534" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>141</SUB>> ]
-"536" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>141</SUB>> ]
-"544" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>142</SUB>> ]
-"556" [label = <(&lt;operator&gt;.fieldAccess,e.getSerializedClientConfig)<SUB>145</SUB>> ]
-"563" [label = <(FIELD_IDENTIFIER,set_serialized_config,set_serialized_config)<SUB>147</SUB>> ]
-"565" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>147</SUB>> ]
-"571" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>149</SUB>> ]
-"574" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>149</SUB>> ]
-"578" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>149</SUB>> ]
-"581" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncSetGraphConfig(&amp;context, setGraphConfigRequest, &amp;cq)))<SUB>149</SUB>> ]
-"595" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>154</SUB>> ]
-"599" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Rpc failed while trying to set configuration&quot;)<SUB>155</SUB>> ]
-"603" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>156</SUB>> ]
-"607" [label = <(code,response.code())<SUB>159</SUB>> ]
-"611" [label = <(&lt;operator&gt;.fieldAccess,proto::RemoteGraphStatusCode::SUCCESS)<SUB>159</SUB>> ]
-"617" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to cofngure remote graph. &quot; &lt;&lt; response.message())<SUB>160</SUB>> ]
-"629" [label = <(UNKNOWN,Status,Status)<SUB>163</SUB>> ]
-"630" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>163</SUB>> ]
-"639" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>164</SUB>> ]
-"645" [label = <(&lt;operator&gt;.lessThan,std::make_unique&lt;StreamSetObserver)<SUB>166</SUB>> ]
-"650" [label = <(&lt;operator&gt;.bracketedPrimary,(e, this))<SUB>166</SUB>> ]
-"491" [label = <(FIELD_IDENTIFIER,UNINITIALIZED,UNINITIALIZED)<SUB>126</SUB>> ]
-"495" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>127</SUB>> ]
-"499" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>128</SUB>> ]
-"506" [label = <(FIELD_IDENTIFIER,isAborted,isAborted)<SUB>132</SUB>> ]
-"510" [label = <(&lt;operator&gt;.fieldAccess,Status::INVALID_ARGUMENT)<SUB>133</SUB>> ]
-"537" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>141</SUB>> ]
-"545" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>142</SUB>> ]
-"558" [label = <(FIELD_IDENTIFIER,getSerializedClientConfig,getSerializedClientConfig)<SUB>145</SUB>> ]
-"567" [label = <(FIELD_IDENTIFIER,move,move)<SUB>147</SUB>> ]
-"573" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>149</SUB>> ]
-"576" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>149</SUB>> ]
-"580" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>149</SUB>> ]
-"582" [label = <(AsyncSetGraphConfig,mGraphStub-&gt;AsyncSetGraphConfig(&amp;context, setGraphConfigRequest, &amp;cq))<SUB>150</SUB>> ]
-"597" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>154</SUB>> ]
-"600" [label = <(LOG,LOG(ERROR))<SUB>155</SUB>> ]
-"608" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>159</SUB>> ]
-"612" [label = <(&lt;operator&gt;.fieldAccess,proto::RemoteGraphStatusCode)<SUB>159</SUB>> ]
-"615" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>159</SUB>> ]
-"618" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to cofngure remote graph. &quot;)<SUB>160</SUB>> ]
-"622" [label = <(message,response.message())<SUB>160</SUB>> ]
-"631" [label = <(UNKNOWN,int,int)<SUB>163</SUB>> ]
-"632" [label = <(code,response.code())<SUB>163</SUB>> ]
-"641" [label = <(FIELD_IDENTIFIER,message,message)<SUB>164</SUB>> ]
-"646" [label = <(&lt;operator&gt;.fieldAccess,std::make_unique)<SUB>166</SUB>> ]
-"651" [label = <(&lt;operator&gt;.expressionList,e, this)<SUB>166</SUB>> ]
-"497" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>127</SUB>> ]
-"501" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>128</SUB>> ]
-"512" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>133</SUB>> ]
-"518" [label = <(isTransitionComplete,e.isTransitionComplete())<SUB>135</SUB>> ]
-"538" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>141</SUB>> ]
-"543" [label = <(FIELD_IDENTIFIER,now,now)<SUB>141</SUB>> ]
-"546" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>142</SUB>> ]
-"549" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>142</SUB>> ]
-"583" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncSetGraphConfig)<SUB>150</SUB>> ]
-"586" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>150</SUB>> ]
-"589" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>150</SUB>> ]
-"610" [label = <(FIELD_IDENTIFIER,code,code)<SUB>159</SUB>> ]
-"619" [label = <(LOG,LOG(ERROR))<SUB>160</SUB>> ]
-"623" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>160</SUB>> ]
-"633" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>163</SUB>> ]
-"648" [label = <(FIELD_IDENTIFIER,make_unique,make_unique)<SUB>166</SUB>> ]
-"519" [label = <(&lt;operator&gt;.fieldAccess,e.isTransitionComplete)<SUB>135</SUB>> ]
-"523" [label = <(&lt;operator&gt;.assignment,mStatus = Status::SUCCESS)<SUB>136</SUB>> ]
-"528" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>137</SUB>> ]
-"540" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>141</SUB>> ]
-"585" [label = <(FIELD_IDENTIFIER,AsyncSetGraphConfig,AsyncSetGraphConfig)<SUB>150</SUB>> ]
-"625" [label = <(FIELD_IDENTIFIER,message,message)<SUB>160</SUB>> ]
-"635" [label = <(FIELD_IDENTIFIER,code,code)<SUB>163</SUB>> ]
-"521" [label = <(FIELD_IDENTIFIER,isTransitionComplete,isTransitionComplete)<SUB>135</SUB>> ]
-"525" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>136</SUB>> ]
-"527" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>136</SUB>> ]
-"480" [label = <(METHOD,handleConfigPhase)<SUB>124</SUB>> ]
-"656" [label = <(METHOD_RETURN,Status)<SUB>124</SUB>> ]
-  "484" -> "491" 
-  "531" -> "558" 
-  "553" -> "563" 
-  "560" -> "573" 
-  "569" -> "597" 
-  "626" -> "641" 
-  "636" -> "648" 
-  "642" -> "654" 
-  "654" -> "656" 
-  "487" -> "497" 
-  "487" -> "506" 
-  "503" -> "512" 
-  "503" -> "521" 
-  "532" -> "540" 
-  "535" -> "531" 
-  "555" -> "553" 
-  "561" -> "567" 
-  "564" -> "560" 
-  "570" -> "580" 
-  "577" -> "569" 
-  "593" -> "600" 
-  "593" -> "610" 
-  "606" -> "619" 
-  "606" -> "629" 
-  "628" -> "626" 
-  "638" -> "636" 
-  "644" -> "642" 
-  "489" -> "487" 
-  "493" -> "501" 
-  "498" -> "656" 
-  "504" -> "503" 
-  "508" -> "513" 
-  "513" -> "656" 
-  "534" -> "532" 
-  "536" -> "546" 
-  "544" -> "535" 
-  "556" -> "555" 
-  "563" -> "561" 
-  "565" -> "564" 
-  "571" -> "576" 
-  "574" -> "570" 
-  "578" -> "585" 
-  "581" -> "577" 
-  "595" -> "593" 
-  "599" -> "603" 
-  "603" -> "656" 
-  "607" -> "612" 
-  "611" -> "606" 
-  "617" -> "629" 
-  "629" -> "631" 
-  "630" -> "628" 
-  "639" -> "638" 
-  "645" -> "651" 
-  "650" -> "644" 
-  "491" -> "489" 
-  "495" -> "493" 
-  "499" -> "498" 
-  "506" -> "504" 
-  "510" -> "508" 
-  "537" -> "536" 
-  "545" -> "544" 
-  "558" -> "556" 
-  "567" -> "565" 
-  "573" -> "571" 
-  "576" -> "574" 
-  "580" -> "578" 
-  "582" -> "581" 
-  "597" -> "595" 
-  "600" -> "599" 
-  "608" -> "607" 
-  "612" -> "615" 
-  "615" -> "611" 
-  "618" -> "625" 
-  "622" -> "617" 
-  "631" -> "635" 
-  "632" -> "630" 
-  "641" -> "639" 
-  "646" -> "645" 
-  "651" -> "650" 
-  "497" -> "495" 
-  "501" -> "499" 
-  "512" -> "510" 
-  "518" -> "527" 
-  "518" -> "534" 
-  "538" -> "543" 
-  "543" -> "537" 
-  "546" -> "549" 
-  "549" -> "545" 
-  "583" -> "586" 
-  "586" -> "589" 
-  "589" -> "582" 
-  "610" -> "608" 
-  "619" -> "618" 
-  "623" -> "622" 
-  "633" -> "632" 
-  "648" -> "646" 
-  "519" -> "518" 
-  "523" -> "528" 
-  "528" -> "656" 
-  "540" -> "538" 
-  "585" -> "583" 
-  "625" -> "623" 
-  "635" -> "633" 
-  "521" -> "519" 
-  "525" -> "523" 
-  "527" -> "525" 
-  "480" -> "484" 
+digraph "GetDebugInfo" {  
+"1379" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>403</SUB>> ]
+"1401" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::ProfilingDataResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncGetProfilingData(&amp;context, profilingDataRequest, &amp;cq)))<SUB>408</SUB>> ]
+"1437" [label = <(RETURN,return response.data();,return response.data();)<SUB>418</SUB>> ]
+"1380" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>403</SUB>> ]
+"1383" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>403</SUB>> ]
+"1402" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>408</SUB>> ]
+"1409" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::ProfilingDataResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncGetProfilingData(&amp;context, profilingDataRequest, &amp;cq)))<SUB>408</SUB>> ]
+"1425" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>413</SUB>> ]
+"1438" [label = <(data,response.data())<SUB>418</SUB>> ]
+"1382" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>403</SUB>> ]
+"1384" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>403</SUB>> ]
+"1392" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>404</SUB>> ]
+"1403" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>408</SUB>> ]
+"1406" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>408</SUB>> ]
+"1410" [label = <(&lt;operator&gt;.fieldAccess,proto::ProfilingDataResponse)<SUB>408</SUB>> ]
+"1413" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncGetProfilingData(&amp;context, profilingDataRequest, &amp;cq)))<SUB>408</SUB>> ]
+"1427" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>413</SUB>> ]
+"1431" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to get profiling info&quot;)<SUB>414</SUB>> ]
+"1435" [label = <(RETURN,return &quot;&quot;;,return &quot;&quot;;)<SUB>415</SUB>> ]
+"1439" [label = <(&lt;operator&gt;.fieldAccess,response.data)<SUB>418</SUB>> ]
+"1385" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>403</SUB>> ]
+"1393" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>404</SUB>> ]
+"1405" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>408</SUB>> ]
+"1408" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>408</SUB>> ]
+"1412" [label = <(FIELD_IDENTIFIER,ProfilingDataResponse,ProfilingDataResponse)<SUB>408</SUB>> ]
+"1414" [label = <(AsyncGetProfilingData,mGraphStub-&gt;AsyncGetProfilingData(&amp;context, profilingDataRequest, &amp;cq))<SUB>409</SUB>> ]
+"1429" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>413</SUB>> ]
+"1432" [label = <(LOG,LOG(ERROR))<SUB>414</SUB>> ]
+"1441" [label = <(FIELD_IDENTIFIER,data,data)<SUB>418</SUB>> ]
+"1386" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>403</SUB>> ]
+"1391" [label = <(FIELD_IDENTIFIER,now,now)<SUB>403</SUB>> ]
+"1394" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>404</SUB>> ]
+"1397" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>404</SUB>> ]
+"1415" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncGetProfilingData)<SUB>409</SUB>> ]
+"1418" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>409</SUB>> ]
+"1421" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>409</SUB>> ]
+"1388" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>403</SUB>> ]
+"1417" [label = <(FIELD_IDENTIFIER,AsyncGetProfilingData,AsyncGetProfilingData)<SUB>409</SUB>> ]
+"1376" [label = <(METHOD,GetDebugInfo)<SUB>401</SUB>> ]
+"1442" [label = <(METHOD_RETURN,string)<SUB>401</SUB>> ]
+  "1379" -> "1405" 
+  "1401" -> "1429" 
+  "1437" -> "1442" 
+  "1380" -> "1388" 
+  "1383" -> "1379" 
+  "1402" -> "1412" 
+  "1409" -> "1401" 
+  "1425" -> "1432" 
+  "1425" -> "1441" 
+  "1438" -> "1437" 
+  "1382" -> "1380" 
+  "1384" -> "1394" 
+  "1392" -> "1383" 
+  "1403" -> "1408" 
+  "1406" -> "1402" 
+  "1410" -> "1417" 
+  "1413" -> "1409" 
+  "1427" -> "1425" 
+  "1431" -> "1435" 
+  "1435" -> "1442" 
+  "1439" -> "1438" 
+  "1385" -> "1384" 
+  "1393" -> "1392" 
+  "1405" -> "1403" 
+  "1408" -> "1406" 
+  "1412" -> "1410" 
+  "1414" -> "1413" 
+  "1429" -> "1427" 
+  "1432" -> "1431" 
+  "1441" -> "1439" 
+  "1386" -> "1391" 
+  "1391" -> "1385" 
+  "1394" -> "1397" 
+  "1397" -> "1393" 
+  "1415" -> "1418" 
+  "1418" -> "1421" 
+  "1421" -> "1414" 
+  "1388" -> "1386" 
+  "1417" -> "1415" 
+  "1376" -> "1382" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/33-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/33-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/33-cfg.dot	2023-06-09 11:34:58.546305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/33-cfg.dot	2023-06-09 11:35:02.406305192 +0330
@@ -1,179 +1,30 @@
-digraph "handleExecutionPhase" {  
-"662" [label = <(lock,lock(mLock))<SUB>173</SUB>> ]
-"706" [label = <(&lt;operator&gt;.assignment,mStatus = mStreamSetObserver-&gt;startObservingStreams())<SUB>189</SUB>> ]
-"725" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>196</SUB>> ]
-"747" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStartGraphExecution(&amp;context, startExecutionRequest, &amp;cq)))<SUB>201</SUB>> ]
-"783" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>211</SUB>> ]
-"793" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>212</SUB>> ]
-"811" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>218</SUB>> ]
-"665" [label = <(&lt;operator&gt;.notEquals,mGraphState != PrebuiltGraphState::STOPPED)<SUB>174</SUB>> ]
-"679" [label = <(isAborted,e.isAborted())<SUB>179</SUB>> ]
-"708" [label = <(startObservingStreams,mStreamSetObserver-&gt;startObservingStreams())<SUB>189</SUB>> ]
-"713" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>190</SUB>> ]
-"726" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>196</SUB>> ]
-"729" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>196</SUB>> ]
-"748" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>201</SUB>> ]
-"755" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStartGraphExecution(&amp;context, startExecutionRequest, &amp;cq)))<SUB>201</SUB>> ]
-"771" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>206</SUB>> ]
-"785" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>211</SUB>> ]
-"795" [label = <(message,response.message())<SUB>212</SUB>> ]
-"800" [label = <(&lt;operator&gt;.equals,mStatus == Status::SUCCESS)<SUB>214</SUB>> ]
-"667" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::STOPPED)<SUB>174</SUB>> ]
-"671" [label = <(&lt;operator&gt;.assignment,mStatus = Status::ILLEGAL_STATE)<SUB>175</SUB>> ]
-"676" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>176</SUB>> ]
-"680" [label = <(&lt;operator&gt;.fieldAccess,e.isAborted)<SUB>179</SUB>> ]
-"684" [label = <(&lt;operator&gt;.assignment,mStatus = Status::INVALID_ARGUMENT)<SUB>181</SUB>> ]
-"689" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>182</SUB>> ]
-"709" [label = <(&lt;operator&gt;.indirectFieldAccess,mStreamSetObserver-&gt;startObservingStreams)<SUB>189</SUB>> ]
-"715" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>190</SUB>> ]
-"719" [label = <(&lt;operator&gt;.assignment,mErrorMessage = &quot;Failed to observe output streams&quot;)<SUB>191</SUB>> ]
-"722" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>192</SUB>> ]
-"728" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>196</SUB>> ]
-"730" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>196</SUB>> ]
-"738" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>197</SUB>> ]
-"749" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>201</SUB>> ]
-"752" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>201</SUB>> ]
-"756" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>201</SUB>> ]
-"759" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncStartGraphExecution(&amp;context, startExecutionRequest, &amp;cq)))<SUB>201</SUB>> ]
-"773" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>206</SUB>> ]
-"777" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to start graph execution&quot;)<SUB>207</SUB>> ]
-"781" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>208</SUB>> ]
-"786" [label = <(UNKNOWN,Status,Status)<SUB>211</SUB>> ]
-"787" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>211</SUB>> ]
-"796" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>212</SUB>> ]
-"802" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>214</SUB>> ]
-"806" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::RUNNING)<SUB>215</SUB>> ]
-"669" [label = <(FIELD_IDENTIFIER,STOPPED,STOPPED)<SUB>174</SUB>> ]
-"673" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>175</SUB>> ]
-"682" [label = <(FIELD_IDENTIFIER,isAborted,isAborted)<SUB>179</SUB>> ]
-"686" [label = <(&lt;operator&gt;.fieldAccess,Status::INVALID_ARGUMENT)<SUB>181</SUB>> ]
-"711" [label = <(FIELD_IDENTIFIER,startObservingStreams,startObservingStreams)<SUB>189</SUB>> ]
-"717" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>190</SUB>> ]
-"731" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>196</SUB>> ]
-"739" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>197</SUB>> ]
-"751" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>201</SUB>> ]
-"754" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>201</SUB>> ]
-"758" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>201</SUB>> ]
-"760" [label = <(AsyncStartGraphExecution,mGraphStub-&gt;AsyncStartGraphExecution(&amp;context, startExecutionRequest, &amp;cq))<SUB>202</SUB>> ]
-"775" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>206</SUB>> ]
-"778" [label = <(LOG,LOG(ERROR))<SUB>207</SUB>> ]
-"788" [label = <(UNKNOWN,int,int)<SUB>211</SUB>> ]
-"789" [label = <(code,response.code())<SUB>211</SUB>> ]
-"798" [label = <(FIELD_IDENTIFIER,message,message)<SUB>212</SUB>> ]
-"804" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>214</SUB>> ]
-"808" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::RUNNING)<SUB>215</SUB>> ]
-"675" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>175</SUB>> ]
-"688" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>181</SUB>> ]
-"694" [label = <(isTransitionComplete,e.isTransitionComplete())<SUB>183</SUB>> ]
-"732" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>196</SUB>> ]
-"737" [label = <(FIELD_IDENTIFIER,now,now)<SUB>196</SUB>> ]
-"740" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>197</SUB>> ]
-"743" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>197</SUB>> ]
-"761" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncStartGraphExecution)<SUB>202</SUB>> ]
-"764" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>202</SUB>> ]
-"767" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>202</SUB>> ]
-"790" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>211</SUB>> ]
-"810" [label = <(FIELD_IDENTIFIER,RUNNING,RUNNING)<SUB>215</SUB>> ]
-"695" [label = <(&lt;operator&gt;.fieldAccess,e.isTransitionComplete)<SUB>183</SUB>> ]
-"699" [label = <(&lt;operator&gt;.assignment,mStatus = Status::SUCCESS)<SUB>184</SUB>> ]
-"704" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>185</SUB>> ]
-"734" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>196</SUB>> ]
-"763" [label = <(FIELD_IDENTIFIER,AsyncStartGraphExecution,AsyncStartGraphExecution)<SUB>202</SUB>> ]
-"792" [label = <(FIELD_IDENTIFIER,code,code)<SUB>211</SUB>> ]
-"697" [label = <(FIELD_IDENTIFIER,isTransitionComplete,isTransitionComplete)<SUB>183</SUB>> ]
-"701" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>184</SUB>> ]
-"703" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>184</SUB>> ]
-"658" [label = <(METHOD,handleExecutionPhase)<SUB>172</SUB>> ]
-"813" [label = <(METHOD_RETURN,Status)<SUB>172</SUB>> ]
-  "662" -> "669" 
-  "706" -> "717" 
-  "725" -> "751" 
-  "747" -> "775" 
-  "783" -> "798" 
-  "793" -> "804" 
-  "811" -> "813" 
-  "665" -> "675" 
-  "665" -> "682" 
-  "679" -> "688" 
-  "679" -> "697" 
-  "708" -> "706" 
-  "713" -> "719" 
-  "713" -> "728" 
-  "726" -> "734" 
-  "729" -> "725" 
-  "748" -> "758" 
-  "755" -> "747" 
-  "771" -> "778" 
-  "771" -> "786" 
-  "785" -> "783" 
-  "795" -> "793" 
-  "800" -> "810" 
-  "800" -> "811" 
-  "667" -> "665" 
-  "671" -> "676" 
-  "676" -> "813" 
-  "680" -> "679" 
-  "684" -> "689" 
-  "689" -> "813" 
-  "709" -> "708" 
-  "715" -> "713" 
-  "719" -> "722" 
-  "722" -> "813" 
-  "728" -> "726" 
-  "730" -> "740" 
-  "738" -> "729" 
-  "749" -> "754" 
-  "752" -> "748" 
-  "756" -> "763" 
-  "759" -> "755" 
-  "773" -> "771" 
-  "777" -> "781" 
-  "781" -> "813" 
-  "786" -> "788" 
-  "787" -> "785" 
-  "796" -> "795" 
-  "802" -> "800" 
-  "806" -> "811" 
-  "669" -> "667" 
-  "673" -> "671" 
-  "682" -> "680" 
-  "686" -> "684" 
-  "711" -> "709" 
-  "717" -> "715" 
-  "731" -> "730" 
-  "739" -> "738" 
-  "751" -> "749" 
-  "754" -> "752" 
-  "758" -> "756" 
-  "760" -> "759" 
-  "775" -> "773" 
-  "778" -> "777" 
-  "788" -> "792" 
-  "789" -> "787" 
-  "798" -> "796" 
-  "804" -> "802" 
-  "808" -> "806" 
-  "675" -> "673" 
-  "688" -> "686" 
-  "694" -> "703" 
-  "694" -> "711" 
-  "732" -> "737" 
-  "737" -> "731" 
-  "740" -> "743" 
-  "743" -> "739" 
-  "761" -> "764" 
-  "764" -> "767" 
-  "767" -> "760" 
-  "790" -> "789" 
-  "810" -> "808" 
-  "695" -> "694" 
-  "699" -> "704" 
-  "704" -> "813" 
-  "734" -> "732" 
-  "763" -> "761" 
-  "792" -> "790" 
-  "697" -> "695" 
-  "701" -> "699" 
-  "703" -> "701" 
-  "658" -> "662" 
+digraph "dispatchPixelData" {  
+"1449" [label = <(&lt;operator&gt;.assignment,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface = mEngineInterface.lock())<SUB>423</SUB>> ]
+"1450" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface)<SUB>423</SUB>> ]
+"1457" [label = <(lock,mEngineInterface.lock())<SUB>423</SUB>> ]
+"1451" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;PrebuiltEngineInterface)<SUB>423</SUB>> ]
+"1458" [label = <(&lt;operator&gt;.fieldAccess,mEngineInterface.lock)<SUB>423</SUB>> ]
+"1464" [label = <(RETURN,return engineInterface-&gt;DispatchPixelData(streamId, timestamp_us, frame);,return engineInterface-&gt;DispatchPixelData(streamId, timestamp_us, frame);)<SUB>425</SUB>> ]
+"1452" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>423</SUB>> ]
+"1460" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>423</SUB>> ]
+"1465" [label = <(DispatchPixelData,engineInterface-&gt;DispatchPixelData(streamId, timestamp_us, frame))<SUB>425</SUB>> ]
+"1454" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>423</SUB>> ]
+"1466" [label = <(&lt;operator&gt;.indirectFieldAccess,engineInterface-&gt;DispatchPixelData)<SUB>425</SUB>> ]
+"1468" [label = <(FIELD_IDENTIFIER,DispatchPixelData,DispatchPixelData)<SUB>425</SUB>> ]
+"1444" [label = <(METHOD,dispatchPixelData)<SUB>421</SUB>> ]
+"1472" [label = <(METHOD_RETURN,void)<SUB>421</SUB>> ]
+  "1449" -> "1472" 
+  "1449" -> "1468" 
+  "1450" -> "1460" 
+  "1457" -> "1449" 
+  "1451" -> "1450" 
+  "1458" -> "1457" 
+  "1464" -> "1472" 
+  "1452" -> "1451" 
+  "1460" -> "1458" 
+  "1465" -> "1464" 
+  "1454" -> "1452" 
+  "1466" -> "1465" 
+  "1468" -> "1466" 
+  "1444" -> "1454" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/34-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/34-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/34-cfg.dot	2023-06-09 11:34:58.546305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/34-cfg.dot	2023-06-09 11:35:02.416305192 +0330
@@ -1,170 +1,36 @@
-digraph "handleStopWithFlushPhase" {  
-"819" [label = <(lock,lock(mLock))<SUB>223</SUB>> ]
-"855" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>235</SUB>> ]
-"876" [label = <(set_stop_immediate,stopExecutionRequest.set_stop_immediate(false))<SUB>239</SUB>> ]
-"882" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>241</SUB>> ]
-"920" [label = <(stopObservingStreams,mStreamSetObserver-&gt;stopObservingStreams(false))<SUB>252</SUB>> ]
-"925" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>254</SUB>> ]
-"935" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>255</SUB>> ]
-"953" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>261</SUB>> ]
-"822" [label = <(&lt;operator&gt;.notEquals,mGraphState != PrebuiltGraphState::RUNNING)<SUB>224</SUB>> ]
-"833" [label = <(isAborted,e.isAborted())<SUB>228</SUB>> ]
-"856" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>235</SUB>> ]
-"859" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>235</SUB>> ]
-"877" [label = <(&lt;operator&gt;.fieldAccess,stopExecutionRequest.set_stop_immediate)<SUB>239</SUB>> ]
-"883" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>241</SUB>> ]
-"890" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>241</SUB>> ]
-"906" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>246</SUB>> ]
-"921" [label = <(&lt;operator&gt;.indirectFieldAccess,mStreamSetObserver-&gt;stopObservingStreams)<SUB>252</SUB>> ]
-"927" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>254</SUB>> ]
-"937" [label = <(message,response.message())<SUB>255</SUB>> ]
-"942" [label = <(&lt;operator&gt;.equals,mStatus == Status::SUCCESS)<SUB>257</SUB>> ]
-"824" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::RUNNING)<SUB>224</SUB>> ]
-"828" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>225</SUB>> ]
-"834" [label = <(&lt;operator&gt;.fieldAccess,e.isAborted)<SUB>228</SUB>> ]
-"838" [label = <(RETURN,return Status::INVALID_ARGUMENT;,return Status::INVALID_ARGUMENT;)<SUB>229</SUB>> ]
-"858" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>235</SUB>> ]
-"860" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>235</SUB>> ]
-"868" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>236</SUB>> ]
-"879" [label = <(FIELD_IDENTIFIER,set_stop_immediate,set_stop_immediate)<SUB>239</SUB>> ]
-"884" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>241</SUB>> ]
-"887" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>241</SUB>> ]
-"891" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>241</SUB>> ]
-"894" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>241</SUB>> ]
-"908" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>246</SUB>> ]
-"912" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to stop graph execution&quot;)<SUB>247</SUB>> ]
-"916" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>248</SUB>> ]
-"923" [label = <(FIELD_IDENTIFIER,stopObservingStreams,stopObservingStreams)<SUB>252</SUB>> ]
-"928" [label = <(UNKNOWN,Status,Status)<SUB>254</SUB>> ]
-"929" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>254</SUB>> ]
-"938" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>255</SUB>> ]
-"944" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>257</SUB>> ]
-"948" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::FLUSHING)<SUB>258</SUB>> ]
-"826" [label = <(FIELD_IDENTIFIER,RUNNING,RUNNING)<SUB>224</SUB>> ]
-"829" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>225</SUB>> ]
-"836" [label = <(FIELD_IDENTIFIER,isAborted,isAborted)<SUB>228</SUB>> ]
-"839" [label = <(&lt;operator&gt;.fieldAccess,Status::INVALID_ARGUMENT)<SUB>229</SUB>> ]
-"861" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>235</SUB>> ]
-"869" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>236</SUB>> ]
-"886" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>241</SUB>> ]
-"889" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>241</SUB>> ]
-"893" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>241</SUB>> ]
-"895" [label = <(AsyncStopGraphExecution,mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq))<SUB>242</SUB>> ]
-"910" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>246</SUB>> ]
-"913" [label = <(LOG,LOG(ERROR))<SUB>247</SUB>> ]
-"917" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>248</SUB>> ]
-"930" [label = <(UNKNOWN,int,int)<SUB>254</SUB>> ]
-"931" [label = <(code,response.code())<SUB>254</SUB>> ]
-"940" [label = <(FIELD_IDENTIFIER,message,message)<SUB>255</SUB>> ]
-"946" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>257</SUB>> ]
-"950" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::FLUSHING)<SUB>258</SUB>> ]
-"831" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>225</SUB>> ]
-"841" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>229</SUB>> ]
-"845" [label = <(isTransitionComplete,e.isTransitionComplete())<SUB>230</SUB>> ]
-"862" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>235</SUB>> ]
-"867" [label = <(FIELD_IDENTIFIER,now,now)<SUB>235</SUB>> ]
-"870" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>236</SUB>> ]
-"873" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>236</SUB>> ]
-"896" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncStopGraphExecution)<SUB>242</SUB>> ]
-"899" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>242</SUB>> ]
-"902" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>242</SUB>> ]
-"919" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>248</SUB>> ]
-"932" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>254</SUB>> ]
-"952" [label = <(FIELD_IDENTIFIER,FLUSHING,FLUSHING)<SUB>258</SUB>> ]
-"846" [label = <(&lt;operator&gt;.fieldAccess,e.isTransitionComplete)<SUB>230</SUB>> ]
-"850" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>231</SUB>> ]
-"864" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>235</SUB>> ]
-"898" [label = <(FIELD_IDENTIFIER,AsyncStopGraphExecution,AsyncStopGraphExecution)<SUB>242</SUB>> ]
-"934" [label = <(FIELD_IDENTIFIER,code,code)<SUB>254</SUB>> ]
-"848" [label = <(FIELD_IDENTIFIER,isTransitionComplete,isTransitionComplete)<SUB>230</SUB>> ]
-"851" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>231</SUB>> ]
-"853" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>231</SUB>> ]
-"815" [label = <(METHOD,handleStopWithFlushPhase)<SUB>222</SUB>> ]
-"955" [label = <(METHOD_RETURN,Status)<SUB>222</SUB>> ]
-  "819" -> "826" 
-  "855" -> "879" 
-  "876" -> "886" 
-  "882" -> "910" 
-  "920" -> "928" 
-  "925" -> "940" 
-  "935" -> "946" 
-  "953" -> "955" 
-  "822" -> "831" 
-  "822" -> "836" 
-  "833" -> "841" 
-  "833" -> "848" 
-  "856" -> "864" 
-  "859" -> "855" 
-  "877" -> "876" 
-  "883" -> "893" 
-  "890" -> "882" 
-  "906" -> "913" 
-  "906" -> "923" 
-  "921" -> "920" 
-  "927" -> "925" 
-  "937" -> "935" 
-  "942" -> "952" 
-  "942" -> "953" 
-  "824" -> "822" 
-  "828" -> "955" 
-  "834" -> "833" 
-  "838" -> "955" 
-  "858" -> "856" 
-  "860" -> "870" 
-  "868" -> "859" 
-  "879" -> "877" 
-  "884" -> "889" 
-  "887" -> "883" 
-  "891" -> "898" 
-  "894" -> "890" 
-  "908" -> "906" 
-  "912" -> "919" 
-  "916" -> "955" 
-  "923" -> "921" 
-  "928" -> "930" 
-  "929" -> "927" 
-  "938" -> "937" 
-  "944" -> "942" 
-  "948" -> "953" 
-  "826" -> "824" 
-  "829" -> "828" 
-  "836" -> "834" 
-  "839" -> "838" 
-  "861" -> "860" 
-  "869" -> "868" 
-  "886" -> "884" 
-  "889" -> "887" 
-  "893" -> "891" 
-  "895" -> "894" 
-  "910" -> "908" 
-  "913" -> "912" 
-  "917" -> "916" 
-  "930" -> "934" 
-  "931" -> "929" 
-  "940" -> "938" 
-  "946" -> "944" 
-  "950" -> "948" 
-  "831" -> "829" 
-  "841" -> "839" 
-  "845" -> "853" 
-  "845" -> "858" 
-  "862" -> "867" 
-  "867" -> "861" 
-  "870" -> "873" 
-  "873" -> "869" 
-  "896" -> "899" 
-  "899" -> "902" 
-  "902" -> "895" 
-  "919" -> "917" 
-  "932" -> "931" 
-  "952" -> "950" 
-  "846" -> "845" 
-  "850" -> "955" 
-  "864" -> "862" 
-  "898" -> "896" 
-  "934" -> "932" 
-  "848" -> "846" 
-  "851" -> "850" 
-  "853" -> "851" 
-  "815" -> "819" 
+digraph "dispatchSerializedData" {  
+"1479" [label = <(&lt;operator&gt;.assignment,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface = mEngineInterface.lock())<SUB>431</SUB>> ]
+"1480" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface)<SUB>431</SUB>> ]
+"1487" [label = <(lock,mEngineInterface.lock())<SUB>431</SUB>> ]
+"1481" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;PrebuiltEngineInterface)<SUB>431</SUB>> ]
+"1488" [label = <(&lt;operator&gt;.fieldAccess,mEngineInterface.lock)<SUB>431</SUB>> ]
+"1494" [label = <(RETURN,return engineInterface-&gt;DispatchSerializedData(streamId, timestamp_us,\012                                                       std::move(serialized_data));,return engineInterface-&gt;DispatchSerializedData(streamId, timestamp_us,\012                                                       std::move(serialized_data));)<SUB>433</SUB>> ]
+"1482" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>431</SUB>> ]
+"1490" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>431</SUB>> ]
+"1495" [label = <(DispatchSerializedData,engineInterface-&gt;DispatchSerializedData(streamId, timestamp_us,\012                                                       std::move(serialized_data)))<SUB>433</SUB>> ]
+"1484" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>431</SUB>> ]
+"1496" [label = <(&lt;operator&gt;.indirectFieldAccess,engineInterface-&gt;DispatchSerializedData)<SUB>433</SUB>> ]
+"1501" [label = <(std::move,std::move(serialized_data))<SUB>434</SUB>> ]
+"1498" [label = <(FIELD_IDENTIFIER,DispatchSerializedData,DispatchSerializedData)<SUB>433</SUB>> ]
+"1502" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>434</SUB>> ]
+"1504" [label = <(FIELD_IDENTIFIER,move,move)<SUB>434</SUB>> ]
+"1474" [label = <(METHOD,dispatchSerializedData)<SUB>429</SUB>> ]
+"1506" [label = <(METHOD_RETURN,void)<SUB>429</SUB>> ]
+  "1479" -> "1506" 
+  "1479" -> "1498" 
+  "1480" -> "1490" 
+  "1487" -> "1479" 
+  "1481" -> "1480" 
+  "1488" -> "1487" 
+  "1494" -> "1506" 
+  "1482" -> "1481" 
+  "1490" -> "1488" 
+  "1495" -> "1494" 
+  "1484" -> "1482" 
+  "1496" -> "1504" 
+  "1501" -> "1495" 
+  "1498" -> "1496" 
+  "1502" -> "1501" 
+  "1504" -> "1502" 
+  "1474" -> "1484" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/35-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/35-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/35-cfg.dot	2023-06-09 11:34:58.556305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/35-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,170 +1,54 @@
-digraph "handleStopImmediatePhase" {  
-"961" [label = <(lock,lock(mLock))<SUB>266</SUB>> ]
-"997" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>278</SUB>> ]
-"1018" [label = <(set_stop_immediate,stopExecutionRequest.set_stop_immediate(true))<SUB>282</SUB>> ]
-"1024" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>284</SUB>> ]
-"1062" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>294</SUB>> ]
-"1072" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>295</SUB>> ]
-"1078" [label = <(stopObservingStreams,mStreamSetObserver-&gt;stopObservingStreams(true))<SUB>298</SUB>> ]
-"1095" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>303</SUB>> ]
-"964" [label = <(&lt;operator&gt;.notEquals,mGraphState != PrebuiltGraphState::RUNNING)<SUB>267</SUB>> ]
-"975" [label = <(isAborted,e.isAborted())<SUB>271</SUB>> ]
-"998" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>278</SUB>> ]
-"1001" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>278</SUB>> ]
-"1019" [label = <(&lt;operator&gt;.fieldAccess,stopExecutionRequest.set_stop_immediate)<SUB>282</SUB>> ]
-"1025" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>284</SUB>> ]
-"1032" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>284</SUB>> ]
-"1048" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>289</SUB>> ]
-"1064" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>294</SUB>> ]
-"1074" [label = <(message,response.message())<SUB>295</SUB>> ]
-"1079" [label = <(&lt;operator&gt;.indirectFieldAccess,mStreamSetObserver-&gt;stopObservingStreams)<SUB>298</SUB>> ]
-"1084" [label = <(&lt;operator&gt;.equals,mStatus == Status::SUCCESS)<SUB>300</SUB>> ]
-"966" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::RUNNING)<SUB>267</SUB>> ]
-"970" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>268</SUB>> ]
-"976" [label = <(&lt;operator&gt;.fieldAccess,e.isAborted)<SUB>271</SUB>> ]
-"980" [label = <(RETURN,return Status::INVALID_ARGUMENT;,return Status::INVALID_ARGUMENT;)<SUB>272</SUB>> ]
-"1000" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>278</SUB>> ]
-"1002" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>278</SUB>> ]
-"1010" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>279</SUB>> ]
-"1021" [label = <(FIELD_IDENTIFIER,set_stop_immediate,set_stop_immediate)<SUB>282</SUB>> ]
-"1026" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>284</SUB>> ]
-"1029" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>284</SUB>> ]
-"1033" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>284</SUB>> ]
-"1036" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq)))<SUB>284</SUB>> ]
-"1050" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>289</SUB>> ]
-"1054" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to stop graph execution&quot;)<SUB>290</SUB>> ]
-"1058" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>291</SUB>> ]
-"1065" [label = <(UNKNOWN,Status,Status)<SUB>294</SUB>> ]
-"1066" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>294</SUB>> ]
-"1075" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>295</SUB>> ]
-"1081" [label = <(FIELD_IDENTIFIER,stopObservingStreams,stopObservingStreams)<SUB>298</SUB>> ]
-"1086" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>300</SUB>> ]
-"1090" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::STOPPED)<SUB>301</SUB>> ]
-"968" [label = <(FIELD_IDENTIFIER,RUNNING,RUNNING)<SUB>267</SUB>> ]
-"971" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>268</SUB>> ]
-"978" [label = <(FIELD_IDENTIFIER,isAborted,isAborted)<SUB>271</SUB>> ]
-"981" [label = <(&lt;operator&gt;.fieldAccess,Status::INVALID_ARGUMENT)<SUB>272</SUB>> ]
-"1003" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>278</SUB>> ]
-"1011" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>279</SUB>> ]
-"1028" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>284</SUB>> ]
-"1031" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>284</SUB>> ]
-"1035" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>284</SUB>> ]
-"1037" [label = <(AsyncStopGraphExecution,mGraphStub-&gt;AsyncStopGraphExecution(&amp;context, stopExecutionRequest, &amp;cq))<SUB>285</SUB>> ]
-"1052" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>289</SUB>> ]
-"1055" [label = <(LOG,LOG(ERROR))<SUB>290</SUB>> ]
-"1059" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>291</SUB>> ]
-"1067" [label = <(UNKNOWN,int,int)<SUB>294</SUB>> ]
-"1068" [label = <(code,response.code())<SUB>294</SUB>> ]
-"1077" [label = <(FIELD_IDENTIFIER,message,message)<SUB>295</SUB>> ]
-"1088" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>300</SUB>> ]
-"1092" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::STOPPED)<SUB>301</SUB>> ]
-"973" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>268</SUB>> ]
-"983" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>272</SUB>> ]
-"987" [label = <(isTransitionComplete,e.isTransitionComplete())<SUB>273</SUB>> ]
-"1004" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>278</SUB>> ]
-"1009" [label = <(FIELD_IDENTIFIER,now,now)<SUB>278</SUB>> ]
-"1012" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>279</SUB>> ]
-"1015" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>279</SUB>> ]
-"1038" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncStopGraphExecution)<SUB>285</SUB>> ]
-"1041" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>285</SUB>> ]
-"1044" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>285</SUB>> ]
-"1061" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>291</SUB>> ]
-"1069" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>294</SUB>> ]
-"1094" [label = <(FIELD_IDENTIFIER,STOPPED,STOPPED)<SUB>301</SUB>> ]
-"988" [label = <(&lt;operator&gt;.fieldAccess,e.isTransitionComplete)<SUB>273</SUB>> ]
-"992" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>274</SUB>> ]
-"1006" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>278</SUB>> ]
-"1040" [label = <(FIELD_IDENTIFIER,AsyncStopGraphExecution,AsyncStopGraphExecution)<SUB>285</SUB>> ]
-"1071" [label = <(FIELD_IDENTIFIER,code,code)<SUB>294</SUB>> ]
-"990" [label = <(FIELD_IDENTIFIER,isTransitionComplete,isTransitionComplete)<SUB>273</SUB>> ]
-"993" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>274</SUB>> ]
-"995" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>274</SUB>> ]
-"957" [label = <(METHOD,handleStopImmediatePhase)<SUB>265</SUB>> ]
-"1097" [label = <(METHOD_RETURN,Status)<SUB>265</SUB>> ]
-  "961" -> "968" 
-  "997" -> "1021" 
-  "1018" -> "1028" 
-  "1024" -> "1052" 
-  "1062" -> "1077" 
-  "1072" -> "1081" 
-  "1078" -> "1088" 
-  "1095" -> "1097" 
-  "964" -> "973" 
-  "964" -> "978" 
-  "975" -> "983" 
-  "975" -> "990" 
-  "998" -> "1006" 
-  "1001" -> "997" 
-  "1019" -> "1018" 
-  "1025" -> "1035" 
-  "1032" -> "1024" 
-  "1048" -> "1055" 
-  "1048" -> "1065" 
-  "1064" -> "1062" 
-  "1074" -> "1072" 
-  "1079" -> "1078" 
-  "1084" -> "1094" 
-  "1084" -> "1095" 
-  "966" -> "964" 
-  "970" -> "1097" 
-  "976" -> "975" 
-  "980" -> "1097" 
-  "1000" -> "998" 
-  "1002" -> "1012" 
-  "1010" -> "1001" 
-  "1021" -> "1019" 
-  "1026" -> "1031" 
-  "1029" -> "1025" 
-  "1033" -> "1040" 
-  "1036" -> "1032" 
-  "1050" -> "1048" 
-  "1054" -> "1061" 
-  "1058" -> "1097" 
-  "1065" -> "1067" 
-  "1066" -> "1064" 
-  "1075" -> "1074" 
-  "1081" -> "1079" 
-  "1086" -> "1084" 
-  "1090" -> "1095" 
-  "968" -> "966" 
-  "971" -> "970" 
-  "978" -> "976" 
-  "981" -> "980" 
-  "1003" -> "1002" 
-  "1011" -> "1010" 
-  "1028" -> "1026" 
-  "1031" -> "1029" 
-  "1035" -> "1033" 
-  "1037" -> "1036" 
-  "1052" -> "1050" 
-  "1055" -> "1054" 
-  "1059" -> "1058" 
-  "1067" -> "1071" 
-  "1068" -> "1066" 
-  "1077" -> "1075" 
-  "1088" -> "1086" 
-  "1092" -> "1090" 
-  "973" -> "971" 
-  "983" -> "981" 
-  "987" -> "995" 
-  "987" -> "1000" 
-  "1004" -> "1009" 
-  "1009" -> "1003" 
-  "1012" -> "1015" 
-  "1015" -> "1011" 
-  "1038" -> "1041" 
-  "1041" -> "1044" 
-  "1044" -> "1037" 
-  "1061" -> "1059" 
-  "1069" -> "1068" 
-  "1094" -> "1092" 
-  "988" -> "987" 
-  "992" -> "1097" 
-  "1006" -> "1004" 
-  "1040" -> "1038" 
-  "1071" -> "1069" 
-  "990" -> "988" 
-  "993" -> "992" 
-  "995" -> "993" 
-  "957" -> "961" 
+digraph "dispatchGraphTerminationMessage" {  
+"1513" [label = <(lock,lock(mLock))<SUB>439</SUB>> ]
+"1515" [label = <(&lt;operator&gt;.assignment,mErrorMessage = std::move(errorMessage))<SUB>440</SUB>> ]
+"1522" [label = <(&lt;operator&gt;.assignment,mStatus = status)<SUB>441</SUB>> ]
+"1525" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::STOPPED)<SUB>442</SUB>> ]
+"1530" [label = <(&lt;operator&gt;.assignment,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface = mEngineInterface.lock())<SUB>443</SUB>> ]
+"1517" [label = <(std::move,std::move(errorMessage))<SUB>440</SUB>> ]
+"1527" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::STOPPED)<SUB>442</SUB>> ]
+"1531" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface)<SUB>443</SUB>> ]
+"1538" [label = <(lock,mEngineInterface.lock())<SUB>443</SUB>> ]
+"1518" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>440</SUB>> ]
+"1529" [label = <(FIELD_IDENTIFIER,STOPPED,STOPPED)<SUB>442</SUB>> ]
+"1532" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;PrebuiltEngineInterface)<SUB>443</SUB>> ]
+"1539" [label = <(&lt;operator&gt;.fieldAccess,mEngineInterface.lock)<SUB>443</SUB>> ]
+"1546" [label = <(&lt;operator&gt;.assignment,errorMessageTmp = mErrorMessage)<SUB>445</SUB>> ]
+"1549" [label = <(DispatchGraphTerminationMessage,engineInterface-&gt;DispatchGraphTerminationMessage(mStatus, std::move(errorMessageTmp)))<SUB>446</SUB>> ]
+"1520" [label = <(FIELD_IDENTIFIER,move,move)<SUB>440</SUB>> ]
+"1533" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>443</SUB>> ]
+"1541" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>443</SUB>> ]
+"1550" [label = <(&lt;operator&gt;.indirectFieldAccess,engineInterface-&gt;DispatchGraphTerminationMessage)<SUB>446</SUB>> ]
+"1554" [label = <(std::move,std::move(errorMessageTmp))<SUB>446</SUB>> ]
+"1535" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>443</SUB>> ]
+"1552" [label = <(FIELD_IDENTIFIER,DispatchGraphTerminationMessage,DispatchGraphTerminationMessage)<SUB>446</SUB>> ]
+"1555" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>446</SUB>> ]
+"1557" [label = <(FIELD_IDENTIFIER,move,move)<SUB>446</SUB>> ]
+"1508" [label = <(METHOD,dispatchGraphTerminationMessage)<SUB>438</SUB>> ]
+"1559" [label = <(METHOD_RETURN,void)<SUB>438</SUB>> ]
+  "1513" -> "1520" 
+  "1515" -> "1522" 
+  "1522" -> "1529" 
+  "1525" -> "1535" 
+  "1530" -> "1559" 
+  "1530" -> "1546" 
+  "1517" -> "1515" 
+  "1527" -> "1525" 
+  "1531" -> "1541" 
+  "1538" -> "1530" 
+  "1518" -> "1517" 
+  "1529" -> "1527" 
+  "1532" -> "1531" 
+  "1539" -> "1538" 
+  "1546" -> "1552" 
+  "1549" -> "1559" 
+  "1520" -> "1518" 
+  "1533" -> "1532" 
+  "1541" -> "1539" 
+  "1550" -> "1557" 
+  "1554" -> "1549" 
+  "1535" -> "1533" 
+  "1552" -> "1550" 
+  "1555" -> "1554" 
+  "1557" -> "1555" 
+  "1508" -> "1513" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/36-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/36-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/36-cfg.dot	2023-06-09 11:34:58.556305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/36-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,151 +1,32 @@
-digraph "handleResetPhase" {  
-"1103" [label = <(lock,lock(mLock))<SUB>307</SUB>> ]
-"1139" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>319</SUB>> ]
-"1161" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncResetGraph(&amp;context, resetGraphRequest, &amp;cq)))<SUB>324</SUB>> ]
-"1199" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>334</SUB>> ]
-"1209" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>335</SUB>> ]
-"1215" [label = <(reset,mStreamSetObserver.reset())<SUB>336</SUB>> ]
-"1219" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>338</SUB>> ]
-"1106" [label = <(&lt;operator&gt;.notEquals,mGraphState != PrebuiltGraphState::STOPPED)<SUB>308</SUB>> ]
-"1117" [label = <(isAborted,e.isAborted())<SUB>312</SUB>> ]
-"1140" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>319</SUB>> ]
-"1143" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>319</SUB>> ]
-"1162" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>324</SUB>> ]
-"1169" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncResetGraph(&amp;context, resetGraphRequest, &amp;cq)))<SUB>324</SUB>> ]
-"1185" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>329</SUB>> ]
-"1201" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>334</SUB>> ]
-"1211" [label = <(message,response.message())<SUB>335</SUB>> ]
-"1216" [label = <(&lt;operator&gt;.fieldAccess,mStreamSetObserver.reset)<SUB>336</SUB>> ]
-"1108" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::STOPPED)<SUB>308</SUB>> ]
-"1112" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>309</SUB>> ]
-"1118" [label = <(&lt;operator&gt;.fieldAccess,e.isAborted)<SUB>312</SUB>> ]
-"1122" [label = <(RETURN,return Status::INVALID_ARGUMENT;,return Status::INVALID_ARGUMENT;)<SUB>313</SUB>> ]
-"1142" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>319</SUB>> ]
-"1144" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>319</SUB>> ]
-"1152" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>320</SUB>> ]
-"1163" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>324</SUB>> ]
-"1166" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>324</SUB>> ]
-"1170" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>324</SUB>> ]
-"1173" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncResetGraph(&amp;context, resetGraphRequest, &amp;cq)))<SUB>324</SUB>> ]
-"1187" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>329</SUB>> ]
-"1191" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to stop graph execution&quot;)<SUB>330</SUB>> ]
-"1195" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>331</SUB>> ]
-"1202" [label = <(UNKNOWN,Status,Status)<SUB>334</SUB>> ]
-"1203" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>334</SUB>> ]
-"1212" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>335</SUB>> ]
-"1218" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>336</SUB>> ]
-"1110" [label = <(FIELD_IDENTIFIER,STOPPED,STOPPED)<SUB>308</SUB>> ]
-"1113" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>309</SUB>> ]
-"1120" [label = <(FIELD_IDENTIFIER,isAborted,isAborted)<SUB>312</SUB>> ]
-"1123" [label = <(&lt;operator&gt;.fieldAccess,Status::INVALID_ARGUMENT)<SUB>313</SUB>> ]
-"1145" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>319</SUB>> ]
-"1153" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>320</SUB>> ]
-"1165" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>324</SUB>> ]
-"1168" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>324</SUB>> ]
-"1172" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>324</SUB>> ]
-"1174" [label = <(AsyncResetGraph,mGraphStub-&gt;AsyncResetGraph(&amp;context, resetGraphRequest, &amp;cq))<SUB>325</SUB>> ]
-"1189" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>329</SUB>> ]
-"1192" [label = <(LOG,LOG(ERROR))<SUB>330</SUB>> ]
-"1196" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>331</SUB>> ]
-"1204" [label = <(UNKNOWN,int,int)<SUB>334</SUB>> ]
-"1205" [label = <(code,response.code())<SUB>334</SUB>> ]
-"1214" [label = <(FIELD_IDENTIFIER,message,message)<SUB>335</SUB>> ]
-"1115" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>309</SUB>> ]
-"1125" [label = <(FIELD_IDENTIFIER,INVALID_ARGUMENT,INVALID_ARGUMENT)<SUB>313</SUB>> ]
-"1129" [label = <(isTransitionComplete,e.isTransitionComplete())<SUB>314</SUB>> ]
-"1146" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>319</SUB>> ]
-"1151" [label = <(FIELD_IDENTIFIER,now,now)<SUB>319</SUB>> ]
-"1154" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>320</SUB>> ]
-"1157" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>320</SUB>> ]
-"1175" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncResetGraph)<SUB>325</SUB>> ]
-"1178" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>325</SUB>> ]
-"1181" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>325</SUB>> ]
-"1198" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>331</SUB>> ]
-"1206" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>334</SUB>> ]
-"1130" [label = <(&lt;operator&gt;.fieldAccess,e.isTransitionComplete)<SUB>314</SUB>> ]
-"1134" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>315</SUB>> ]
-"1148" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>319</SUB>> ]
-"1177" [label = <(FIELD_IDENTIFIER,AsyncResetGraph,AsyncResetGraph)<SUB>325</SUB>> ]
-"1208" [label = <(FIELD_IDENTIFIER,code,code)<SUB>334</SUB>> ]
-"1132" [label = <(FIELD_IDENTIFIER,isTransitionComplete,isTransitionComplete)<SUB>314</SUB>> ]
-"1135" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>315</SUB>> ]
-"1137" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>315</SUB>> ]
-"1099" [label = <(METHOD,handleResetPhase)<SUB>306</SUB>> ]
-"1221" [label = <(METHOD_RETURN,Status)<SUB>306</SUB>> ]
-  "1103" -> "1110" 
-  "1139" -> "1165" 
-  "1161" -> "1189" 
-  "1199" -> "1214" 
-  "1209" -> "1218" 
-  "1215" -> "1219" 
-  "1219" -> "1221" 
-  "1106" -> "1115" 
-  "1106" -> "1120" 
-  "1117" -> "1125" 
-  "1117" -> "1132" 
-  "1140" -> "1148" 
-  "1143" -> "1139" 
-  "1162" -> "1172" 
-  "1169" -> "1161" 
-  "1185" -> "1192" 
-  "1185" -> "1202" 
-  "1201" -> "1199" 
-  "1211" -> "1209" 
-  "1216" -> "1215" 
-  "1108" -> "1106" 
-  "1112" -> "1221" 
-  "1118" -> "1117" 
-  "1122" -> "1221" 
-  "1142" -> "1140" 
-  "1144" -> "1154" 
-  "1152" -> "1143" 
-  "1163" -> "1168" 
-  "1166" -> "1162" 
-  "1170" -> "1177" 
-  "1173" -> "1169" 
-  "1187" -> "1185" 
-  "1191" -> "1198" 
-  "1195" -> "1221" 
-  "1202" -> "1204" 
-  "1203" -> "1201" 
-  "1212" -> "1211" 
-  "1218" -> "1216" 
-  "1110" -> "1108" 
-  "1113" -> "1112" 
-  "1120" -> "1118" 
-  "1123" -> "1122" 
-  "1145" -> "1144" 
-  "1153" -> "1152" 
-  "1165" -> "1163" 
-  "1168" -> "1166" 
-  "1172" -> "1170" 
-  "1174" -> "1173" 
-  "1189" -> "1187" 
-  "1192" -> "1191" 
-  "1196" -> "1195" 
-  "1204" -> "1208" 
-  "1205" -> "1203" 
-  "1214" -> "1212" 
-  "1115" -> "1113" 
-  "1125" -> "1123" 
-  "1129" -> "1137" 
-  "1129" -> "1142" 
-  "1146" -> "1151" 
-  "1151" -> "1145" 
-  "1154" -> "1157" 
-  "1157" -> "1153" 
-  "1175" -> "1178" 
-  "1178" -> "1181" 
-  "1181" -> "1174" 
-  "1198" -> "1196" 
-  "1206" -> "1205" 
-  "1130" -> "1129" 
-  "1134" -> "1221" 
-  "1148" -> "1146" 
-  "1177" -> "1175" 
-  "1208" -> "1206" 
-  "1132" -> "1130" 
-  "1135" -> "1134" 
-  "1137" -> "1135" 
-  "1099" -> "1103" 
+digraph "GetRemoteGraphFromAddress" {  
+"1566" [label = <(&lt;operator&gt;.assignment,prebuiltGraph = std::make_unique&lt;GrpcGraph&gt;())<SUB>452</SUB>> ]
+"1573" [label = <(&lt;operator&gt;.assignment,status = prebuiltGraph-&gt;initialize(address, engineInterface))<SUB>453</SUB>> ]
+"1590" [label = <(RETURN,return prebuiltGraph;,return prebuiltGraph;)<SUB>458</SUB>> ]
+"1568" [label = <(std::make_unique&lt;GrpcGraph&gt;,std::make_unique&lt;GrpcGraph&gt;())<SUB>452</SUB>> ]
+"1575" [label = <(initialize,prebuiltGraph-&gt;initialize(address, engineInterface))<SUB>453</SUB>> ]
+"1582" [label = <(&lt;operator&gt;.notEquals,status != Status::SUCCESS)<SUB>454</SUB>> ]
+"1569" [label = <(&lt;operator&gt;.fieldAccess,std::make_unique&lt;GrpcGraph&gt;)<SUB>452</SUB>> ]
+"1576" [label = <(&lt;operator&gt;.indirectFieldAccess,prebuiltGraph-&gt;initialize)<SUB>453</SUB>> ]
+"1584" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>454</SUB>> ]
+"1588" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>455</SUB>> ]
+"1571" [label = <(FIELD_IDENTIFIER,make_unique&lt;GrpcGraph&gt;,make_unique&lt;GrpcGraph&gt;)<SUB>452</SUB>> ]
+"1578" [label = <(FIELD_IDENTIFIER,initialize,initialize)<SUB>453</SUB>> ]
+"1586" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>454</SUB>> ]
+"1561" [label = <(METHOD,GetRemoteGraphFromAddress)<SUB>450</SUB>> ]
+"1592" [label = <(METHOD_RETURN,unique_ptr&lt;PrebuiltGraph&gt;)<SUB>450</SUB>> ]
+  "1566" -> "1578" 
+  "1573" -> "1586" 
+  "1590" -> "1592" 
+  "1568" -> "1566" 
+  "1575" -> "1573" 
+  "1582" -> "1588" 
+  "1582" -> "1590" 
+  "1569" -> "1568" 
+  "1576" -> "1575" 
+  "1584" -> "1582" 
+  "1588" -> "1592" 
+  "1571" -> "1569" 
+  "1578" -> "1576" 
+  "1586" -> "1584" 
+  "1561" -> "1571" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/37-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/37-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/37-cfg.dot	2023-06-09 11:34:58.556305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/37-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,15 +1,5 @@
-digraph "SetInputStreamData" {  
-"1228" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Cannot set input stream for remote graphs&quot;)<SUB>343</SUB>> ]
-"1232" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>344</SUB>> ]
-"1229" [label = <(LOG,LOG(ERROR))<SUB>343</SUB>> ]
-"1233" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>344</SUB>> ]
-"1235" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>344</SUB>> ]
-"1223" [label = <(METHOD,SetInputStreamData)<SUB>341</SUB>> ]
-"1236" [label = <(METHOD_RETURN,Status)<SUB>341</SUB>> ]
-  "1228" -> "1235" 
-  "1232" -> "1236" 
-  "1229" -> "1228" 
-  "1233" -> "1232" 
-  "1235" -> "1233" 
-  "1223" -> "1229" 
+digraph "GrpcGraph" {  
+"1600" [label = <(METHOD,GrpcGraph)<SUB>46</SUB>> ]
+"1602" [label = <(METHOD_RETURN,ANY)<SUB>46</SUB>> ]
+  "1600" -> "1602" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/38-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/38-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/38-cfg.dot	2023-06-09 11:34:58.556305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/38-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,15 +1,5 @@
-digraph "SetInputStreamPixelData" {  
-"1243" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Cannot set input streams for remote graphs&quot;)<SUB>349</SUB>> ]
-"1247" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>350</SUB>> ]
-"1244" [label = <(LOG,LOG(ERROR))<SUB>349</SUB>> ]
-"1248" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>350</SUB>> ]
-"1250" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>350</SUB>> ]
-"1238" [label = <(METHOD,SetInputStreamPixelData)<SUB>347</SUB>> ]
-"1251" [label = <(METHOD_RETURN,Status)<SUB>347</SUB>> ]
-  "1243" -> "1250" 
-  "1247" -> "1251" 
-  "1244" -> "1243" 
-  "1248" -> "1247" 
-  "1250" -> "1248" 
-  "1238" -> "1244" 
+digraph "~GrpcGraph" {  
+"1604" [label = <(METHOD,~GrpcGraph)<SUB>48</SUB>> ]
+"1606" [label = <(METHOD_RETURN,ANY)<SUB>48</SUB>> ]
+  "1604" -> "1606" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/39-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/39-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/39-cfg.dot	2023-06-09 11:34:58.556305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/39-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,119 +1,5 @@
-digraph "StartGraphProfiling" {  
-"1256" [label = <(lock,lock(mLock))<SUB>354</SUB>> ]
-"1270" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>360</SUB>> ]
-"1292" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStartGraphProfiling(&amp;context, startProfilingRequest, &amp;cq)))<SUB>365</SUB>> ]
-"1330" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>375</SUB>> ]
-"1340" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>376</SUB>> ]
-"1346" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>378</SUB>> ]
-"1259" [label = <(&lt;operator&gt;.notEquals,mGraphState != PrebuiltGraphState::RUNNING)<SUB>355</SUB>> ]
-"1271" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>360</SUB>> ]
-"1274" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>360</SUB>> ]
-"1293" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>365</SUB>> ]
-"1300" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStartGraphProfiling(&amp;context, startProfilingRequest, &amp;cq)))<SUB>365</SUB>> ]
-"1316" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>370</SUB>> ]
-"1332" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>375</SUB>> ]
-"1342" [label = <(message,response.message())<SUB>376</SUB>> ]
-"1261" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::RUNNING)<SUB>355</SUB>> ]
-"1265" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>356</SUB>> ]
-"1273" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>360</SUB>> ]
-"1275" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>360</SUB>> ]
-"1283" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>361</SUB>> ]
-"1294" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>365</SUB>> ]
-"1297" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>365</SUB>> ]
-"1301" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>365</SUB>> ]
-"1304" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncStartGraphProfiling(&amp;context, startProfilingRequest, &amp;cq)))<SUB>365</SUB>> ]
-"1318" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>370</SUB>> ]
-"1322" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to start graph profiling&quot;)<SUB>371</SUB>> ]
-"1326" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>372</SUB>> ]
-"1333" [label = <(UNKNOWN,Status,Status)<SUB>375</SUB>> ]
-"1334" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>375</SUB>> ]
-"1343" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>376</SUB>> ]
-"1263" [label = <(FIELD_IDENTIFIER,RUNNING,RUNNING)<SUB>355</SUB>> ]
-"1266" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>356</SUB>> ]
-"1276" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>360</SUB>> ]
-"1284" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>361</SUB>> ]
-"1296" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>365</SUB>> ]
-"1299" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>365</SUB>> ]
-"1303" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>365</SUB>> ]
-"1305" [label = <(AsyncStartGraphProfiling,mGraphStub-&gt;AsyncStartGraphProfiling(&amp;context, startProfilingRequest, &amp;cq))<SUB>366</SUB>> ]
-"1320" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>370</SUB>> ]
-"1323" [label = <(LOG,LOG(ERROR))<SUB>371</SUB>> ]
-"1327" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>372</SUB>> ]
-"1335" [label = <(UNKNOWN,int,int)<SUB>375</SUB>> ]
-"1336" [label = <(code,response.code())<SUB>375</SUB>> ]
-"1345" [label = <(FIELD_IDENTIFIER,message,message)<SUB>376</SUB>> ]
-"1268" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>356</SUB>> ]
-"1277" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>360</SUB>> ]
-"1282" [label = <(FIELD_IDENTIFIER,now,now)<SUB>360</SUB>> ]
-"1285" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>361</SUB>> ]
-"1288" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>361</SUB>> ]
-"1306" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncStartGraphProfiling)<SUB>366</SUB>> ]
-"1309" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>366</SUB>> ]
-"1312" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>366</SUB>> ]
-"1329" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>372</SUB>> ]
-"1337" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>375</SUB>> ]
-"1279" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>360</SUB>> ]
-"1308" [label = <(FIELD_IDENTIFIER,AsyncStartGraphProfiling,AsyncStartGraphProfiling)<SUB>366</SUB>> ]
-"1339" [label = <(FIELD_IDENTIFIER,code,code)<SUB>375</SUB>> ]
-"1253" [label = <(METHOD,StartGraphProfiling)<SUB>353</SUB>> ]
-"1348" [label = <(METHOD_RETURN,Status)<SUB>353</SUB>> ]
-  "1256" -> "1263" 
-  "1270" -> "1296" 
-  "1292" -> "1320" 
-  "1330" -> "1345" 
-  "1340" -> "1346" 
-  "1346" -> "1348" 
-  "1259" -> "1268" 
-  "1259" -> "1273" 
-  "1271" -> "1279" 
-  "1274" -> "1270" 
-  "1293" -> "1303" 
-  "1300" -> "1292" 
-  "1316" -> "1323" 
-  "1316" -> "1333" 
-  "1332" -> "1330" 
-  "1342" -> "1340" 
-  "1261" -> "1259" 
-  "1265" -> "1348" 
-  "1273" -> "1271" 
-  "1275" -> "1285" 
-  "1283" -> "1274" 
-  "1294" -> "1299" 
-  "1297" -> "1293" 
-  "1301" -> "1308" 
-  "1304" -> "1300" 
-  "1318" -> "1316" 
-  "1322" -> "1329" 
-  "1326" -> "1348" 
-  "1333" -> "1335" 
-  "1334" -> "1332" 
-  "1343" -> "1342" 
-  "1263" -> "1261" 
-  "1266" -> "1265" 
-  "1276" -> "1275" 
-  "1284" -> "1283" 
-  "1296" -> "1294" 
-  "1299" -> "1297" 
-  "1303" -> "1301" 
-  "1305" -> "1304" 
-  "1320" -> "1318" 
-  "1323" -> "1322" 
-  "1327" -> "1326" 
-  "1335" -> "1339" 
-  "1336" -> "1334" 
-  "1345" -> "1343" 
-  "1268" -> "1266" 
-  "1277" -> "1282" 
-  "1282" -> "1276" 
-  "1285" -> "1288" 
-  "1288" -> "1284" 
-  "1306" -> "1309" 
-  "1309" -> "1312" 
-  "1312" -> "1305" 
-  "1329" -> "1327" 
-  "1337" -> "1336" 
-  "1279" -> "1277" 
-  "1308" -> "1306" 
-  "1339" -> "1337" 
-  "1253" -> "1256" 
+digraph "initialize" {  
+"1608" [label = <(METHOD,initialize)<SUB>50</SUB>> ]
+"1612" [label = <(METHOD_RETURN,Status)<SUB>50</SUB>> ]
+  "1608" -> "1612" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/4-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/4-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/4-cfg.dot	2023-06-09 11:34:58.466305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/4-cfg.dot	2023-06-09 11:35:02.316305191 +0330
@@ -1,5 +1,5 @@
-digraph "operator =" {  
-"27" [label = <(METHOD,operator =)<SUB>55</SUB>> ]
-"30" [label = <(METHOD_RETURN,GrpcGraph)<SUB>55</SUB>> ]
-  "27" -> "30" 
+digraph "dispatchSerializedData" {  
+"30" [label = <(METHOD,dispatchSerializedData)<SUB>52</SUB>> ]
+"35" [label = <(METHOD_RETURN,void)<SUB>52</SUB>> ]
+  "30" -> "35" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/40-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/40-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/40-cfg.dot	2023-06-09 11:34:58.556305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/40-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,104 +1,5 @@
-digraph "StopGraphProfiling" {  
-"1353" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>384</SUB>> ]
-"1375" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphProfiling(&amp;context, stopProfilingRequest, &amp;cq)))<SUB>389</SUB>> ]
-"1413" [label = <(&lt;operator&gt;.assignment,mStatus = static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>399</SUB>> ]
-"1423" [label = <(&lt;operator&gt;.assignment,mErrorMessage = response.message())<SUB>400</SUB>> ]
-"1429" [label = <(RETURN,return mStatus;,return mStatus;)<SUB>402</SUB>> ]
-"1354" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>384</SUB>> ]
-"1357" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>384</SUB>> ]
-"1376" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>389</SUB>> ]
-"1383" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::StatusResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncStopGraphProfiling(&amp;context, stopProfilingRequest, &amp;cq)))<SUB>389</SUB>> ]
-"1399" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>394</SUB>> ]
-"1415" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status&gt;(static_cast&lt;int&gt;(response.code())))<SUB>399</SUB>> ]
-"1425" [label = <(message,response.message())<SUB>400</SUB>> ]
-"1356" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>384</SUB>> ]
-"1358" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>384</SUB>> ]
-"1366" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>385</SUB>> ]
-"1377" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>389</SUB>> ]
-"1380" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>389</SUB>> ]
-"1384" [label = <(&lt;operator&gt;.fieldAccess,proto::StatusResponse)<SUB>389</SUB>> ]
-"1387" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncStopGraphProfiling(&amp;context, stopProfilingRequest, &amp;cq)))<SUB>389</SUB>> ]
-"1401" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>394</SUB>> ]
-"1405" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to stop graph profiling&quot;)<SUB>395</SUB>> ]
-"1409" [label = <(RETURN,return Status::FATAL_ERROR;,return Status::FATAL_ERROR;)<SUB>396</SUB>> ]
-"1416" [label = <(UNKNOWN,Status,Status)<SUB>399</SUB>> ]
-"1417" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(response.code()))<SUB>399</SUB>> ]
-"1426" [label = <(&lt;operator&gt;.fieldAccess,response.message)<SUB>400</SUB>> ]
-"1359" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>384</SUB>> ]
-"1367" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>385</SUB>> ]
-"1379" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>389</SUB>> ]
-"1382" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>389</SUB>> ]
-"1386" [label = <(FIELD_IDENTIFIER,StatusResponse,StatusResponse)<SUB>389</SUB>> ]
-"1388" [label = <(AsyncStopGraphProfiling,mGraphStub-&gt;AsyncStopGraphProfiling(&amp;context, stopProfilingRequest, &amp;cq))<SUB>390</SUB>> ]
-"1403" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>394</SUB>> ]
-"1406" [label = <(LOG,LOG(ERROR))<SUB>395</SUB>> ]
-"1410" [label = <(&lt;operator&gt;.fieldAccess,Status::FATAL_ERROR)<SUB>396</SUB>> ]
-"1418" [label = <(UNKNOWN,int,int)<SUB>399</SUB>> ]
-"1419" [label = <(code,response.code())<SUB>399</SUB>> ]
-"1428" [label = <(FIELD_IDENTIFIER,message,message)<SUB>400</SUB>> ]
-"1360" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>384</SUB>> ]
-"1365" [label = <(FIELD_IDENTIFIER,now,now)<SUB>384</SUB>> ]
-"1368" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>385</SUB>> ]
-"1371" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>385</SUB>> ]
-"1389" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncStopGraphProfiling)<SUB>390</SUB>> ]
-"1392" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>390</SUB>> ]
-"1395" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>390</SUB>> ]
-"1412" [label = <(FIELD_IDENTIFIER,FATAL_ERROR,FATAL_ERROR)<SUB>396</SUB>> ]
-"1420" [label = <(&lt;operator&gt;.fieldAccess,response.code)<SUB>399</SUB>> ]
-"1362" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>384</SUB>> ]
-"1391" [label = <(FIELD_IDENTIFIER,AsyncStopGraphProfiling,AsyncStopGraphProfiling)<SUB>390</SUB>> ]
-"1422" [label = <(FIELD_IDENTIFIER,code,code)<SUB>399</SUB>> ]
-"1350" [label = <(METHOD,StopGraphProfiling)<SUB>381</SUB>> ]
-"1431" [label = <(METHOD_RETURN,Status)<SUB>381</SUB>> ]
-  "1353" -> "1379" 
-  "1375" -> "1403" 
-  "1413" -> "1428" 
-  "1423" -> "1429" 
-  "1429" -> "1431" 
-  "1354" -> "1362" 
-  "1357" -> "1353" 
-  "1376" -> "1386" 
-  "1383" -> "1375" 
-  "1399" -> "1406" 
-  "1399" -> "1416" 
-  "1415" -> "1413" 
-  "1425" -> "1423" 
-  "1356" -> "1354" 
-  "1358" -> "1368" 
-  "1366" -> "1357" 
-  "1377" -> "1382" 
-  "1380" -> "1376" 
-  "1384" -> "1391" 
-  "1387" -> "1383" 
-  "1401" -> "1399" 
-  "1405" -> "1412" 
-  "1409" -> "1431" 
-  "1416" -> "1418" 
-  "1417" -> "1415" 
-  "1426" -> "1425" 
-  "1359" -> "1358" 
-  "1367" -> "1366" 
-  "1379" -> "1377" 
-  "1382" -> "1380" 
-  "1386" -> "1384" 
-  "1388" -> "1387" 
-  "1403" -> "1401" 
-  "1406" -> "1405" 
-  "1410" -> "1409" 
-  "1418" -> "1422" 
-  "1419" -> "1417" 
-  "1428" -> "1426" 
-  "1360" -> "1365" 
-  "1365" -> "1359" 
-  "1368" -> "1371" 
-  "1371" -> "1367" 
-  "1389" -> "1392" 
-  "1392" -> "1395" 
-  "1395" -> "1388" 
-  "1412" -> "1410" 
-  "1420" -> "1419" 
-  "1362" -> "1360" 
-  "1391" -> "1389" 
-  "1422" -> "1420" 
-  "1350" -> "1356" 
+digraph "GrpcGraph" {  
+"1614" [label = <(METHOD,GrpcGraph)<SUB>54</SUB>> ]
+"1617" [label = <(METHOD_RETURN,ANY)<SUB>54</SUB>> ]
+  "1614" -> "1617" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/41-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/41-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/41-cfg.dot	2023-06-09 11:34:58.566305148 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/41-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,82 +1,5 @@
-digraph "GetDebugInfo" {  
-"1436" [label = <(set_deadline,context.set_deadline(std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds)))<SUB>407</SUB>> ]
-"1458" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader&lt;proto::ProfilingDataResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncGetProfilingData(&amp;context, profilingDataRequest, &amp;cq)))<SUB>412</SUB>> ]
-"1494" [label = <(RETURN,return response.data();,return response.data();)<SUB>422</SUB>> ]
-"1437" [label = <(&lt;operator&gt;.fieldAccess,context.set_deadline)<SUB>407</SUB>> ]
-"1440" [label = <(&lt;operator&gt;.addition,std::chrono::system_clock::now() +\012                         std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>407</SUB>> ]
-"1459" [label = <(&lt;operator&gt;.lessThan,std::unique_ptr&lt;::grpc::ClientAsyncResponseReader)<SUB>412</SUB>> ]
-"1466" [label = <(&lt;operator&gt;.arithmeticShiftRight,proto::ProfilingDataResponse&gt;&gt; rpc(\012            mGraphStub-&gt;AsyncGetProfilingData(&amp;context, profilingDataRequest, &amp;cq)))<SUB>412</SUB>> ]
-"1482" [label = <(&lt;operator&gt;.notEquals,mStatus != Status::SUCCESS)<SUB>417</SUB>> ]
-"1495" [label = <(data,response.data())<SUB>422</SUB>> ]
-"1439" [label = <(FIELD_IDENTIFIER,set_deadline,set_deadline)<SUB>407</SUB>> ]
-"1441" [label = <(std::chrono::system_clock::now,std::chrono::system_clock::now())<SUB>407</SUB>> ]
-"1449" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(kRpcDeadlineMilliseconds))<SUB>408</SUB>> ]
-"1460" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr)<SUB>412</SUB>> ]
-"1463" [label = <(&lt;operator&gt;.fieldAccess,::grpc::ClientAsyncResponseReader)<SUB>412</SUB>> ]
-"1467" [label = <(&lt;operator&gt;.fieldAccess,proto::ProfilingDataResponse)<SUB>412</SUB>> ]
-"1470" [label = <(rpc,rpc(\012            mGraphStub-&gt;AsyncGetProfilingData(&amp;context, profilingDataRequest, &amp;cq)))<SUB>412</SUB>> ]
-"1484" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>417</SUB>> ]
-"1488" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Failed to get profiling info&quot;)<SUB>418</SUB>> ]
-"1492" [label = <(RETURN,return &quot;&quot;;,return &quot;&quot;;)<SUB>419</SUB>> ]
-"1496" [label = <(&lt;operator&gt;.fieldAccess,response.data)<SUB>422</SUB>> ]
-"1442" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock::now)<SUB>407</SUB>> ]
-"1450" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>408</SUB>> ]
-"1462" [label = <(FIELD_IDENTIFIER,unique_ptr,unique_ptr)<SUB>412</SUB>> ]
-"1465" [label = <(FIELD_IDENTIFIER,ClientAsyncResponseReader,ClientAsyncResponseReader)<SUB>412</SUB>> ]
-"1469" [label = <(FIELD_IDENTIFIER,ProfilingDataResponse,ProfilingDataResponse)<SUB>412</SUB>> ]
-"1471" [label = <(AsyncGetProfilingData,mGraphStub-&gt;AsyncGetProfilingData(&amp;context, profilingDataRequest, &amp;cq))<SUB>413</SUB>> ]
-"1486" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>417</SUB>> ]
-"1489" [label = <(LOG,LOG(ERROR))<SUB>418</SUB>> ]
-"1498" [label = <(FIELD_IDENTIFIER,data,data)<SUB>422</SUB>> ]
-"1443" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::system_clock)<SUB>407</SUB>> ]
-"1448" [label = <(FIELD_IDENTIFIER,now,now)<SUB>407</SUB>> ]
-"1451" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>408</SUB>> ]
-"1454" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>408</SUB>> ]
-"1472" [label = <(&lt;operator&gt;.indirectFieldAccess,mGraphStub-&gt;AsyncGetProfilingData)<SUB>413</SUB>> ]
-"1475" [label = <(&lt;operator&gt;.addressOf,&amp;context)<SUB>413</SUB>> ]
-"1478" [label = <(&lt;operator&gt;.addressOf,&amp;cq)<SUB>413</SUB>> ]
-"1445" [label = <(&lt;operator&gt;.fieldAccess,chrono::system_clock)<SUB>407</SUB>> ]
-"1474" [label = <(FIELD_IDENTIFIER,AsyncGetProfilingData,AsyncGetProfilingData)<SUB>413</SUB>> ]
-"1433" [label = <(METHOD,GetDebugInfo)<SUB>405</SUB>> ]
-"1499" [label = <(METHOD_RETURN,string)<SUB>405</SUB>> ]
-  "1436" -> "1462" 
-  "1458" -> "1486" 
-  "1494" -> "1499" 
-  "1437" -> "1445" 
-  "1440" -> "1436" 
-  "1459" -> "1469" 
-  "1466" -> "1458" 
-  "1482" -> "1489" 
-  "1482" -> "1498" 
-  "1495" -> "1494" 
-  "1439" -> "1437" 
-  "1441" -> "1451" 
-  "1449" -> "1440" 
-  "1460" -> "1465" 
-  "1463" -> "1459" 
-  "1467" -> "1474" 
-  "1470" -> "1466" 
-  "1484" -> "1482" 
-  "1488" -> "1492" 
-  "1492" -> "1499" 
-  "1496" -> "1495" 
-  "1442" -> "1441" 
-  "1450" -> "1449" 
-  "1462" -> "1460" 
-  "1465" -> "1463" 
-  "1469" -> "1467" 
-  "1471" -> "1470" 
-  "1486" -> "1484" 
-  "1489" -> "1488" 
-  "1498" -> "1496" 
-  "1443" -> "1448" 
-  "1448" -> "1442" 
-  "1451" -> "1454" 
-  "1454" -> "1450" 
-  "1472" -> "1475" 
-  "1475" -> "1478" 
-  "1478" -> "1471" 
-  "1445" -> "1443" 
-  "1474" -> "1472" 
-  "1433" -> "1439" 
+digraph "operator =" {  
+"1619" [label = <(METHOD,operator =)<SUB>55</SUB>> ]
+"1622" [label = <(METHOD_RETURN,GrpcGraph)<SUB>55</SUB>> ]
+  "1619" -> "1622" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/42-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/42-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/42-cfg.dot	2023-06-09 11:34:58.566305148 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/42-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,30 +1,5 @@
-digraph "dispatchPixelData" {  
-"1506" [label = <(&lt;operator&gt;.assignment,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface = mEngineInterface.lock())<SUB>427</SUB>> ]
-"1507" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface)<SUB>427</SUB>> ]
-"1514" [label = <(lock,mEngineInterface.lock())<SUB>427</SUB>> ]
-"1508" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;PrebuiltEngineInterface)<SUB>427</SUB>> ]
-"1515" [label = <(&lt;operator&gt;.fieldAccess,mEngineInterface.lock)<SUB>427</SUB>> ]
-"1521" [label = <(RETURN,return engineInterface-&gt;DispatchPixelData(streamId, timestamp_us, frame);,return engineInterface-&gt;DispatchPixelData(streamId, timestamp_us, frame);)<SUB>429</SUB>> ]
-"1509" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>427</SUB>> ]
-"1517" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>427</SUB>> ]
-"1522" [label = <(DispatchPixelData,engineInterface-&gt;DispatchPixelData(streamId, timestamp_us, frame))<SUB>429</SUB>> ]
-"1511" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>427</SUB>> ]
-"1523" [label = <(&lt;operator&gt;.indirectFieldAccess,engineInterface-&gt;DispatchPixelData)<SUB>429</SUB>> ]
-"1525" [label = <(FIELD_IDENTIFIER,DispatchPixelData,DispatchPixelData)<SUB>429</SUB>> ]
-"1501" [label = <(METHOD,dispatchPixelData)<SUB>425</SUB>> ]
-"1529" [label = <(METHOD_RETURN,void)<SUB>425</SUB>> ]
-  "1506" -> "1529" 
-  "1506" -> "1525" 
-  "1507" -> "1517" 
-  "1514" -> "1506" 
-  "1508" -> "1507" 
-  "1515" -> "1514" 
-  "1521" -> "1529" 
-  "1509" -> "1508" 
-  "1517" -> "1515" 
-  "1522" -> "1521" 
-  "1511" -> "1509" 
-  "1523" -> "1522" 
-  "1525" -> "1523" 
-  "1501" -> "1511" 
+digraph "handleConfigPhase" {  
+"1624" [label = <(METHOD,handleConfigPhase)<SUB>59</SUB>> ]
+"1627" [label = <(METHOD_RETURN,Status)<SUB>59</SUB>> ]
+  "1624" -> "1627" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/43-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/43-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/43-cfg.dot	2023-06-09 11:34:58.576305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/43-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,36 +1,5 @@
-digraph "dispatchSerializedData" {  
-"1536" [label = <(&lt;operator&gt;.assignment,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface = mEngineInterface.lock())<SUB>435</SUB>> ]
-"1537" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface)<SUB>435</SUB>> ]
-"1544" [label = <(lock,mEngineInterface.lock())<SUB>435</SUB>> ]
-"1538" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;PrebuiltEngineInterface)<SUB>435</SUB>> ]
-"1545" [label = <(&lt;operator&gt;.fieldAccess,mEngineInterface.lock)<SUB>435</SUB>> ]
-"1551" [label = <(RETURN,return engineInterface-&gt;DispatchSerializedData(streamId, timestamp_us,\012                                                       std::move(serialized_data));,return engineInterface-&gt;DispatchSerializedData(streamId, timestamp_us,\012                                                       std::move(serialized_data));)<SUB>437</SUB>> ]
-"1539" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>435</SUB>> ]
-"1547" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>435</SUB>> ]
-"1552" [label = <(DispatchSerializedData,engineInterface-&gt;DispatchSerializedData(streamId, timestamp_us,\012                                                       std::move(serialized_data)))<SUB>437</SUB>> ]
-"1541" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>435</SUB>> ]
-"1553" [label = <(&lt;operator&gt;.indirectFieldAccess,engineInterface-&gt;DispatchSerializedData)<SUB>437</SUB>> ]
-"1558" [label = <(std::move,std::move(serialized_data))<SUB>438</SUB>> ]
-"1555" [label = <(FIELD_IDENTIFIER,DispatchSerializedData,DispatchSerializedData)<SUB>437</SUB>> ]
-"1559" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>438</SUB>> ]
-"1561" [label = <(FIELD_IDENTIFIER,move,move)<SUB>438</SUB>> ]
-"1531" [label = <(METHOD,dispatchSerializedData)<SUB>433</SUB>> ]
-"1563" [label = <(METHOD_RETURN,void)<SUB>433</SUB>> ]
-  "1536" -> "1563" 
-  "1536" -> "1555" 
-  "1537" -> "1547" 
-  "1544" -> "1536" 
-  "1538" -> "1537" 
-  "1545" -> "1544" 
-  "1551" -> "1563" 
-  "1539" -> "1538" 
-  "1547" -> "1545" 
-  "1552" -> "1551" 
-  "1541" -> "1539" 
-  "1553" -> "1561" 
-  "1558" -> "1552" 
-  "1555" -> "1553" 
-  "1559" -> "1558" 
-  "1561" -> "1559" 
-  "1531" -> "1541" 
+digraph "handleExecutionPhase" {  
+"1629" [label = <(METHOD,handleExecutionPhase)<SUB>60</SUB>> ]
+"1632" [label = <(METHOD_RETURN,Status)<SUB>60</SUB>> ]
+  "1629" -> "1632" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/44-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/44-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/44-cfg.dot	2023-06-09 11:34:58.576305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/44-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,54 +1,5 @@
-digraph "dispatchGraphTerminationMessage" {  
-"1570" [label = <(lock,lock(mLock))<SUB>443</SUB>> ]
-"1572" [label = <(&lt;operator&gt;.assignment,mErrorMessage = std::move(errorMessage))<SUB>444</SUB>> ]
-"1579" [label = <(&lt;operator&gt;.assignment,mStatus = status)<SUB>445</SUB>> ]
-"1582" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::STOPPED)<SUB>446</SUB>> ]
-"1587" [label = <(&lt;operator&gt;.assignment,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface = mEngineInterface.lock())<SUB>447</SUB>> ]
-"1574" [label = <(std::move,std::move(errorMessage))<SUB>444</SUB>> ]
-"1584" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::STOPPED)<SUB>446</SUB>> ]
-"1588" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;PrebuiltEngineInterface&gt; engineInterface)<SUB>447</SUB>> ]
-"1595" [label = <(lock,mEngineInterface.lock())<SUB>447</SUB>> ]
-"1575" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>444</SUB>> ]
-"1586" [label = <(FIELD_IDENTIFIER,STOPPED,STOPPED)<SUB>446</SUB>> ]
-"1589" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;PrebuiltEngineInterface)<SUB>447</SUB>> ]
-"1596" [label = <(&lt;operator&gt;.fieldAccess,mEngineInterface.lock)<SUB>447</SUB>> ]
-"1603" [label = <(&lt;operator&gt;.assignment,errorMessageTmp = mErrorMessage)<SUB>449</SUB>> ]
-"1606" [label = <(DispatchGraphTerminationMessage,engineInterface-&gt;DispatchGraphTerminationMessage(mStatus, std::move(errorMessageTmp)))<SUB>450</SUB>> ]
-"1577" [label = <(FIELD_IDENTIFIER,move,move)<SUB>444</SUB>> ]
-"1590" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>447</SUB>> ]
-"1598" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>447</SUB>> ]
-"1607" [label = <(&lt;operator&gt;.indirectFieldAccess,engineInterface-&gt;DispatchGraphTerminationMessage)<SUB>450</SUB>> ]
-"1611" [label = <(std::move,std::move(errorMessageTmp))<SUB>450</SUB>> ]
-"1592" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>447</SUB>> ]
-"1609" [label = <(FIELD_IDENTIFIER,DispatchGraphTerminationMessage,DispatchGraphTerminationMessage)<SUB>450</SUB>> ]
-"1612" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>450</SUB>> ]
-"1614" [label = <(FIELD_IDENTIFIER,move,move)<SUB>450</SUB>> ]
-"1565" [label = <(METHOD,dispatchGraphTerminationMessage)<SUB>442</SUB>> ]
-"1616" [label = <(METHOD_RETURN,void)<SUB>442</SUB>> ]
-  "1570" -> "1577" 
-  "1572" -> "1579" 
-  "1579" -> "1586" 
-  "1582" -> "1592" 
-  "1587" -> "1616" 
-  "1587" -> "1603" 
-  "1574" -> "1572" 
-  "1584" -> "1582" 
-  "1588" -> "1598" 
-  "1595" -> "1587" 
-  "1575" -> "1574" 
-  "1586" -> "1584" 
-  "1589" -> "1588" 
-  "1596" -> "1595" 
-  "1603" -> "1609" 
-  "1606" -> "1616" 
-  "1577" -> "1575" 
-  "1590" -> "1589" 
-  "1598" -> "1596" 
-  "1607" -> "1614" 
-  "1611" -> "1606" 
-  "1592" -> "1590" 
-  "1609" -> "1607" 
-  "1612" -> "1611" 
-  "1614" -> "1612" 
-  "1565" -> "1570" 
+digraph "handleStopWithFlushPhase" {  
+"1634" [label = <(METHOD,handleStopWithFlushPhase)<SUB>61</SUB>> ]
+"1637" [label = <(METHOD_RETURN,Status)<SUB>61</SUB>> ]
+  "1634" -> "1637" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/45-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/45-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/45-cfg.dot	2023-06-09 11:34:58.576305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/45-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,32 +1,5 @@
-digraph "GetRemoteGraphFromAddress" {  
-"1623" [label = <(&lt;operator&gt;.assignment,prebuiltGraph = std::make_unique&lt;GrpcGraph&gt;())<SUB>456</SUB>> ]
-"1630" [label = <(&lt;operator&gt;.assignment,status = prebuiltGraph-&gt;initialize(address, engineInterface))<SUB>457</SUB>> ]
-"1647" [label = <(RETURN,return prebuiltGraph;,return prebuiltGraph;)<SUB>462</SUB>> ]
-"1625" [label = <(std::make_unique&lt;GrpcGraph&gt;,std::make_unique&lt;GrpcGraph&gt;())<SUB>456</SUB>> ]
-"1632" [label = <(initialize,prebuiltGraph-&gt;initialize(address, engineInterface))<SUB>457</SUB>> ]
-"1639" [label = <(&lt;operator&gt;.notEquals,status != Status::SUCCESS)<SUB>458</SUB>> ]
-"1626" [label = <(&lt;operator&gt;.fieldAccess,std::make_unique&lt;GrpcGraph&gt;)<SUB>456</SUB>> ]
-"1633" [label = <(&lt;operator&gt;.indirectFieldAccess,prebuiltGraph-&gt;initialize)<SUB>457</SUB>> ]
-"1641" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>458</SUB>> ]
-"1645" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>459</SUB>> ]
-"1628" [label = <(FIELD_IDENTIFIER,make_unique&lt;GrpcGraph&gt;,make_unique&lt;GrpcGraph&gt;)<SUB>456</SUB>> ]
-"1635" [label = <(FIELD_IDENTIFIER,initialize,initialize)<SUB>457</SUB>> ]
-"1643" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>458</SUB>> ]
-"1618" [label = <(METHOD,GetRemoteGraphFromAddress)<SUB>454</SUB>> ]
-"1649" [label = <(METHOD_RETURN,unique_ptr&lt;PrebuiltGraph&gt;)<SUB>454</SUB>> ]
-  "1623" -> "1635" 
-  "1630" -> "1643" 
-  "1647" -> "1649" 
-  "1625" -> "1623" 
-  "1632" -> "1630" 
-  "1639" -> "1645" 
-  "1639" -> "1647" 
-  "1626" -> "1625" 
-  "1633" -> "1632" 
-  "1641" -> "1639" 
-  "1645" -> "1649" 
-  "1628" -> "1626" 
-  "1635" -> "1633" 
-  "1643" -> "1641" 
-  "1618" -> "1628" 
+digraph "handleStopImmediatePhase" {  
+"1639" [label = <(METHOD,handleStopImmediatePhase)<SUB>62</SUB>> ]
+"1642" [label = <(METHOD_RETURN,Status)<SUB>62</SUB>> ]
+  "1639" -> "1642" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/46-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/46-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/46-cfg.dot	2023-06-09 11:34:58.576305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/46-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "~EndOfStreamReporter" {  
-"1658" [label = <(METHOD,~EndOfStreamReporter)<SUB>40</SUB>> ]
-"1660" [label = <(METHOD_RETURN,ANY)<SUB>40</SUB>> ]
-  "1658" -> "1660" 
+digraph "handleResetPhase" {  
+"1644" [label = <(METHOD,handleResetPhase)<SUB>63</SUB>> ]
+"1647" [label = <(METHOD_RETURN,Status)<SUB>63</SUB>> ]
+  "1644" -> "1647" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/47-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/47-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/47-cfg.dot	2023-06-09 11:34:58.576305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/47-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,11 @@
-digraph "reportStreamClosed" {  
-"1662" [label = <(METHOD,reportStreamClosed)<SUB>42</SUB>> ]
-"1665" [label = <(METHOD_RETURN,void)<SUB>42</SUB>> ]
-  "1662" -> "1665" 
+digraph "GetGraphType" {  
+"1651" [label = <(RETURN,return PrebuiltGraphType::REMOTE;,return PrebuiltGraphType::REMOTE;)<SUB>66</SUB>> ]
+"1652" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphType::REMOTE)<SUB>66</SUB>> ]
+"1654" [label = <(FIELD_IDENTIFIER,REMOTE,REMOTE)<SUB>66</SUB>> ]
+"1649" [label = <(METHOD,GetGraphType)<SUB>65</SUB>> ]
+"1655" [label = <(METHOD_RETURN,PrebuiltGraphType)<SUB>65</SUB>> ]
+  "1651" -> "1655" 
+  "1652" -> "1651" 
+  "1654" -> "1652" 
+  "1649" -> "1654" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/48-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/48-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/48-cfg.dot	2023-06-09 11:34:58.576305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/48-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "~StreamGraphInterface" {  
-"1668" [label = <(METHOD,~StreamGraphInterface)<SUB>47</SUB>> ]
-"1670" [label = <(METHOD_RETURN,ANY)<SUB>47</SUB>> ]
-  "1668" -> "1670" 
+digraph "GetGraphState" {  
+"1657" [label = <(METHOD,GetGraphState)<SUB>69</SUB>> ]
+"1659" [label = <(METHOD_RETURN,PrebuiltGraphState)<SUB>69</SUB>> ]
+  "1657" -> "1659" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/49-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/49-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/49-cfg.dot	2023-06-09 11:34:58.576305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/49-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "dispatchPixelData" {  
-"1672" [label = <(METHOD,dispatchPixelData)<SUB>49</SUB>> ]
-"1677" [label = <(METHOD_RETURN,void)<SUB>49</SUB>> ]
-  "1672" -> "1677" 
+digraph "GetStatus" {  
+"1661" [label = <(METHOD,GetStatus)<SUB>70</SUB>> ]
+"1663" [label = <(METHOD_RETURN,Status)<SUB>70</SUB>> ]
+  "1661" -> "1663" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/5-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/5-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/5-cfg.dot	2023-06-09 11:34:58.466305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/5-cfg.dot	2023-06-09 11:35:02.316305191 +0330
@@ -1,5 +1,5 @@
-digraph "handleConfigPhase" {  
-"32" [label = <(METHOD,handleConfigPhase)<SUB>59</SUB>> ]
-"35" [label = <(METHOD_RETURN,Status)<SUB>59</SUB>> ]
-  "32" -> "35" 
+digraph "dispatchGraphTerminationMessage" {  
+"37" [label = <(METHOD,dispatchGraphTerminationMessage)<SUB>55</SUB>> ]
+"41" [label = <(METHOD_RETURN,void)<SUB>55</SUB>> ]
+  "37" -> "41" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/50-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/50-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/50-cfg.dot	2023-06-09 11:34:58.576305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/50-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "dispatchSerializedData" {  
-"1679" [label = <(METHOD,dispatchSerializedData)<SUB>52</SUB>> ]
-"1684" [label = <(METHOD_RETURN,void)<SUB>52</SUB>> ]
-  "1679" -> "1684" 
+digraph "GetErrorMessage" {  
+"1665" [label = <(METHOD,GetErrorMessage)<SUB>71</SUB>> ]
+"1667" [label = <(METHOD_RETURN,ANY)<SUB>71</SUB>> ]
+  "1665" -> "1667" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/51-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/51-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/51-cfg.dot	2023-06-09 11:34:58.576305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/51-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,7 @@
-digraph "dispatchGraphTerminationMessage" {  
-"1686" [label = <(METHOD,dispatchGraphTerminationMessage)<SUB>55</SUB>> ]
-"1690" [label = <(METHOD_RETURN,void)<SUB>55</SUB>> ]
-  "1686" -> "1690" 
+digraph "GetSupportedGraphConfigs" {  
+"1671" [label = <(RETURN,return mGraphConfig;,return mGraphConfig;)<SUB>75</SUB>> ]
+"1669" [label = <(METHOD,GetSupportedGraphConfigs)<SUB>74</SUB>> ]
+"1673" [label = <(METHOD_RETURN,Options)<SUB>74</SUB>> ]
+  "1671" -> "1673" 
+  "1669" -> "1671" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/52-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/52-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/52-cfg.dot	2023-06-09 11:34:58.576305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/52-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "getServiceStub" {  
-"1692" [label = <(METHOD,getServiceStub)<SUB>57</SUB>> ]
-"1694" [label = <(METHOD_RETURN,ANY*)<SUB>57</SUB>> ]
-  "1692" -> "1694" 
+digraph "SetInputStreamData" {  
+"1675" [label = <(METHOD,SetInputStreamData)<SUB>80</SUB>> ]
+"1680" [label = <(METHOD_RETURN,Status)<SUB>80</SUB>> ]
+  "1675" -> "1680" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/53-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/53-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/53-cfg.dot	2023-06-09 11:34:58.576305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/53-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "SingleStreamObserver" {  
-"1697" [label = <(METHOD,SingleStreamObserver)<SUB>62</SUB>> ]
-"1702" [label = <(METHOD_RETURN,ANY)<SUB>62</SUB>> ]
-  "1697" -> "1702" 
+digraph "SetInputStreamPixelData" {  
+"1682" [label = <(METHOD,SetInputStreamPixelData)<SUB>84</SUB>> ]
+"1687" [label = <(METHOD_RETURN,Status)<SUB>84</SUB>> ]
+  "1682" -> "1687" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/54-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/54-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/54-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/54-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "~SingleStreamObserver" {  
-"1704" [label = <(METHOD,~SingleStreamObserver)<SUB>65</SUB>> ]
-"1706" [label = <(METHOD_RETURN,virtual)<SUB>65</SUB>> ]
-  "1704" -> "1706" 
+digraph "StartGraphProfiling" {  
+"1689" [label = <(METHOD,StartGraphProfiling)<SUB>88</SUB>> ]
+"1691" [label = <(METHOD_RETURN,Status)<SUB>88</SUB>> ]
+  "1689" -> "1691" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/55-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/55-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/55-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/55-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "startObservingStream" {  
-"1708" [label = <(METHOD,startObservingStream)<SUB>67</SUB>> ]
-"1710" [label = <(METHOD_RETURN,Status)<SUB>67</SUB>> ]
-  "1708" -> "1710" 
+digraph "StopGraphProfiling" {  
+"1693" [label = <(METHOD,StopGraphProfiling)<SUB>91</SUB>> ]
+"1695" [label = <(METHOD_RETURN,Status)<SUB>91</SUB>> ]
+  "1693" -> "1695" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/56-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/56-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/56-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/56-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "stopObservingStream" {  
-"1712" [label = <(METHOD,stopObservingStream)<SUB>69</SUB>> ]
-"1714" [label = <(METHOD_RETURN,void)<SUB>69</SUB>> ]
-  "1712" -> "1714" 
+digraph "GetDebugInfo" {  
+"1697" [label = <(METHOD,GetDebugInfo)<SUB>95</SUB>> ]
+"1699" [label = <(METHOD_RETURN,ANY)<SUB>95</SUB>> ]
+  "1697" -> "1699" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/57-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/57-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/57-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/57-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,7 +1,13 @@
-digraph "&lt;clinit&gt;" {  
-"1724" [label = <(&lt;operator&gt;.assignment,mStopped = true)<SUB>75</SUB>> ]
-"1722" [label = <(METHOD,&lt;clinit&gt;)> ]
-"1728" [label = <(METHOD_RETURN,ANY)> ]
-  "1724" -> "1728" 
-  "1722" -> "1724" 
+digraph "getServiceStub" {  
+"1703" [label = <(RETURN,return mGraphStub.get();,return mGraphStub.get();)<SUB>99</SUB>> ]
+"1704" [label = <(get,mGraphStub.get())<SUB>99</SUB>> ]
+"1705" [label = <(&lt;operator&gt;.fieldAccess,mGraphStub.get)<SUB>99</SUB>> ]
+"1707" [label = <(FIELD_IDENTIFIER,get,get)<SUB>99</SUB>> ]
+"1701" [label = <(METHOD,getServiceStub)<SUB>98</SUB>> ]
+"1708" [label = <(METHOD_RETURN,Stub)<SUB>98</SUB>> ]
+  "1703" -> "1708" 
+  "1704" -> "1703" 
+  "1705" -> "1704" 
+  "1707" -> "1705" 
+  "1701" -> "1707" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/58-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/58-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/58-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/58-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "~StreamSetObserver" {  
-"1730" [label = <(METHOD,~StreamSetObserver)<SUB>81</SUB>> ]
-"1732" [label = <(METHOD_RETURN,virtual)<SUB>81</SUB>> ]
-  "1730" -> "1732" 
+digraph "dispatchPixelData" {  
+"1710" [label = <(METHOD,dispatchPixelData)<SUB>102</SUB>> ]
+"1715" [label = <(METHOD_RETURN,void)<SUB>102</SUB>> ]
+  "1710" -> "1715" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/59-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/59-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/59-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/59-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "StreamSetObserver" {  
-"1734" [label = <(METHOD,StreamSetObserver)<SUB>83</SUB>> ]
-"1738" [label = <(METHOD_RETURN,ANY)<SUB>83</SUB>> ]
-  "1734" -> "1738" 
+digraph "dispatchSerializedData" {  
+"1717" [label = <(METHOD,dispatchSerializedData)<SUB>105</SUB>> ]
+"1722" [label = <(METHOD_RETURN,void)<SUB>105</SUB>> ]
+  "1717" -> "1722" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/6-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/6-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/6-cfg.dot	2023-06-09 11:34:58.466305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/6-cfg.dot	2023-06-09 11:35:02.316305191 +0330
@@ -1,5 +1,5 @@
-digraph "handleExecutionPhase" {  
-"37" [label = <(METHOD,handleExecutionPhase)<SUB>60</SUB>> ]
-"40" [label = <(METHOD_RETURN,Status)<SUB>60</SUB>> ]
-  "37" -> "40" 
+digraph "getServiceStub" {  
+"43" [label = <(METHOD,getServiceStub)<SUB>57</SUB>> ]
+"45" [label = <(METHOD_RETURN,ANY*)<SUB>57</SUB>> ]
+  "43" -> "45" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/60-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/60-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/60-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/60-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "startObservingStreams" {  
-"1740" [label = <(METHOD,startObservingStreams)<SUB>86</SUB>> ]
-"1742" [label = <(METHOD_RETURN,Status)<SUB>86</SUB>> ]
-  "1740" -> "1742" 
+digraph "dispatchGraphTerminationMessage" {  
+"1724" [label = <(METHOD,dispatchGraphTerminationMessage)<SUB>108</SUB>> ]
+"1728" [label = <(METHOD_RETURN,void)<SUB>108</SUB>> ]
+  "1724" -> "1728" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/61-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/61-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/61-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/61-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,19 @@
-digraph "stopObservingStreams" {  
-"1744" [label = <(METHOD,stopObservingStreams)<SUB>88</SUB>> ]
-"1747" [label = <(METHOD_RETURN,void)<SUB>88</SUB>> ]
-  "1744" -> "1747" 
+digraph "&lt;clinit&gt;" {  
+"1740" [label = <(&lt;operator&gt;.assignment,mGraphState = PrebuiltGraphState::UNINITIALIZED)<SUB>112</SUB>> ]
+"1745" [label = <(&lt;operator&gt;.assignment,mStatus = Status::SUCCESS)<SUB>114</SUB>> ]
+"1750" [label = <(&lt;operator&gt;.assignment,mErrorMessage = &quot;&quot;)<SUB>116</SUB>> ]
+"1742" [label = <(&lt;operator&gt;.fieldAccess,PrebuiltGraphState::UNINITIALIZED)<SUB>112</SUB>> ]
+"1747" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>114</SUB>> ]
+"1744" [label = <(FIELD_IDENTIFIER,UNINITIALIZED,UNINITIALIZED)<SUB>112</SUB>> ]
+"1749" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>114</SUB>> ]
+"1738" [label = <(METHOD,&lt;clinit&gt;)> ]
+"1754" [label = <(METHOD_RETURN,ANY)> ]
+  "1740" -> "1749" 
+  "1745" -> "1750" 
+  "1750" -> "1754" 
+  "1742" -> "1740" 
+  "1747" -> "1745" 
+  "1744" -> "1742" 
+  "1749" -> "1747" 
+  "1738" -> "1744" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/62-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/62-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/62-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/62-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "reportStreamClosed" {  
-"1749" [label = <(METHOD,reportStreamClosed)<SUB>90</SUB>> ]
-"1752" [label = <(METHOD_RETURN,void)<SUB>90</SUB>> ]
-  "1749" -> "1752" 
+digraph "anonymous_lambda_0" {  
+"1755" [label = <(METHOD,anonymous_lambda_0)<SUB>43</SUB>> ]
+"1757" [label = <(METHOD_RETURN,ANY)<SUB>43</SUB>> ]
+  "1755" -> "1757" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/63-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/63-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/63-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/63-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,7 +1,5 @@
-digraph "&lt;clinit&gt;" {  
-"1763" [label = <(&lt;operator&gt;.assignment,mStopped = true)<SUB>98</SUB>> ]
-"1761" [label = <(METHOD,&lt;clinit&gt;)> ]
-"1767" [label = <(METHOD_RETURN,ANY)> ]
-  "1763" -> "1767" 
-  "1761" -> "1763" 
+digraph "anonymous_lambda_1" {  
+"1760" [label = <(METHOD,anonymous_lambda_1)<SUB>145</SUB>> ]
+"1762" [label = <(METHOD_RETURN,ANY)<SUB>145</SUB>> ]
+  "1760" -> "1762" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/64-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/64-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/64-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/64-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "anonymous_lambda_0" {  
-"1768" [label = <(METHOD,anonymous_lambda_0)<SUB>43</SUB>> ]
-"1770" [label = <(METHOD_RETURN,ANY)<SUB>43</SUB>> ]
-  "1768" -> "1770" 
+digraph "anonymous_lambda_2" {  
+"1764" [label = <(METHOD,anonymous_lambda_2)<SUB>160</SUB>> ]
+"1766" [label = <(METHOD_RETURN,ANY)<SUB>160</SUB>> ]
+  "1764" -> "1766" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/65-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/65-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/65-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/65-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "anonymous_lambda_1" {  
-"1773" [label = <(METHOD,anonymous_lambda_1)<SUB>145</SUB>> ]
-"1775" [label = <(METHOD_RETURN,ANY)<SUB>145</SUB>> ]
-  "1773" -> "1775" 
+digraph "anonymous_lambda_3" {  
+"1768" [label = <(METHOD,anonymous_lambda_3)<SUB>173</SUB>> ]
+"1770" [label = <(METHOD_RETURN,bool)<SUB>173</SUB>> ]
+  "1768" -> "1770" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/66-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/66-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/66-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/66-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "anonymous_lambda_2" {  
-"1777" [label = <(METHOD,anonymous_lambda_2)<SUB>160</SUB>> ]
-"1779" [label = <(METHOD_RETURN,ANY)<SUB>160</SUB>> ]
-  "1777" -> "1779" 
+digraph "anonymous_lambda_4" {  
+"1772" [label = <(METHOD,anonymous_lambda_4)<SUB>187</SUB>> ]
+"1774" [label = <(METHOD_RETURN,ANY)<SUB>187</SUB>> ]
+  "1772" -> "1774" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/67-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/67-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/67-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/67-cfg.dot	2023-06-09 11:35:02.426305192 +0330
@@ -1,5 +1,5 @@
-digraph "anonymous_lambda_3" {  
-"1781" [label = <(METHOD,anonymous_lambda_3)<SUB>172</SUB>> ]
-"1783" [label = <(METHOD_RETURN,bool)<SUB>172</SUB>> ]
-  "1781" -> "1783" 
+digraph "&lt;global&gt;" {  
+"1777" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"2034" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+  "1777" -> "2034" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/68-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/68-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/68-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/68-cfg.dot	2023-06-09 11:35:02.436305192 +0330
@@ -1,5 +1,5 @@
-digraph "anonymous_lambda_4" {  
-"1785" [label = <(METHOD,anonymous_lambda_4)<SUB>186</SUB>> ]
-"1787" [label = <(METHOD_RETURN,ANY)<SUB>186</SUB>> ]
-  "1785" -> "1787" 
+digraph "SingleStreamObserver" {  
+"1783" [label = <(METHOD,SingleStreamObserver)<SUB>32</SUB>> ]
+"1788" [label = <(METHOD_RETURN,ANY)<SUB>32</SUB>> ]
+  "1783" -> "1788" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/69-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/69-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/69-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/69-cfg.dot	2023-06-09 11:35:02.436305192 +0330
@@ -1,5 +1,25 @@
-digraph "&lt;global&gt;" {  
-"1790" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"2064" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
-  "1790" -> "2064" 
+digraph "startObservingStream" {  
+"1799" [label = <(&lt;operator&gt;.assignment,mThread = std::thread([this]() {\012        proto::ObserveOutputStreamRequest observeStreamRequest;\012        observeStreamRequest.set_stream_id(mStreamId);\012 ::grpc::ClientContext context;\012 ::grpc::CompletionQueue cq;\012\012 void* tag;\012 bool cqStatus;\012\012        std::unique_ptr&lt;::grpc::ClientAsyncReader&lt;proto::OutputStreamResponse&gt;&gt; rpc(\012                mStreamGraphInterface-&gt;getServiceStub()\012 -&gt;AsyncObserveOutputStream(&amp;context, observeStreamRequest, &amp;cq, nullptr));\012\012        proto::OutputStreamResponse response;\012\012        cq.Next(&amp;tag, &amp;cqStatus);\012 while (cqStatus) {\012 // Dispatch data only stream is being observed.\012            rpc-&gt;Read(&amp;response, nullptr);\012 {\012                std::lock_guard lock(mStopObservationLock);\012 if (mStopped || mStreamGraphInterface == nullptr) {\012                    LOG(INFO) &lt;&lt; &quot;Graph stopped. &quot;;\012 break;\012 }\012\012 // Since this is a separate thread, we need not worry about recursive locking\012 // and callback can be executed without creating a new thread.\012 if (response.has_pixel_data()) {\012                    proto::PixelData pixels = response.pixel_data();\012                    runner::InputFrame frame(pixels.height(), pixels.width(),\012 static_cast&lt;PixelFormat&gt;(\012 static_cast&lt;int&gt;(pixels.format())),\012                                             pixels.step(),\012 reinterpret_cast&lt;const unsigned char*&gt;(\012                                                     pixels.data().c_str()));\012                    mStreamGraphInterface-&gt;dispatchPixelData(mStreamId, response.timestamp_us(),\012                                                             frame);\012 } else if (response.has_semantic_data()) {\012                    mStreamGraphInterface\012 -&gt;dispatchSerializedData(mStreamId, response.timestamp_us(),\012                                                     std::move(*response.mutable_semantic_data()));\012 }\012 }\012\012            cq.Next(&amp;tag, &amp;cqStatus);\012 }\012\012 ::grpc::Status grpcStatus;\012        rpc-&gt;Finish(&amp;grpcStatus, nullptr);\012 if (!grpcStatus.ok()) {\012            LOG(ERROR) &lt;&lt; &quot;Failed RPC with message: &quot; &lt;&lt; grpcStatus.error_message();\012 }\012\012        cq.Shutdown();\012 if (mEndOfStreamReporter) {\012            std::lock_guard lock(mStopObservationLock);\012            mStopped = true;\012            std::thread t =\012                    std::thread([this]() { mEndOfStreamReporter-&gt;reportStreamClosed(mStreamId); });\012\012            t.detach();\012 }\012\012        proto::OutputStreamResponse streamResponse;\012 }))<SUB>43</SUB>> ]
+"1806" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>110</SUB>> ]
+"1794" [label = <(lock,lock(mStopObservationLock))<SUB>40</SUB>> ]
+"1796" [label = <(&lt;operator&gt;.assignment,mStopped = false)<SUB>41</SUB>> ]
+"1801" [label = <(std::thread,std::thread([this]() {\012        proto::ObserveOutputStreamRequest observeStreamRequest;\012        observeStreamRequest.set_stream_id(mStreamId);\012 ::grpc::ClientContext context;\012 ::grpc::CompletionQueue cq;\012\012 void* tag;\012 bool cqStatus;\012\012        std::unique_ptr&lt;::grpc::ClientAsyncReader&lt;proto::OutputStreamResponse&gt;&gt; rpc(\012                mStreamGraphInterface-&gt;getServiceStub()\012 -&gt;AsyncObserveOutputStream(&amp;context, observeStreamRequest, &amp;cq, nullptr));\012\012        proto::OutputStreamResponse response;\012\012        cq.Next(&amp;tag, &amp;cqStatus);\012 while (cqStatus) {\012 // Dispatch data only stream is being observed.\012            rpc-&gt;Read(&amp;response, nullptr);\012 {\012                std::lock_guard lock(mStopObservationLock);\012 if (mStopped || mStreamGraphInterface == nullptr) {\012                    LOG(INFO) &lt;&lt; &quot;Graph stopped. &quot;;\012 break;\012 }\012\012 // Since this is a separate thread, we need not worry about recursive locking\012 // and callback can be executed without creating a new thread.\012 if (response.has_pixel_data()) {\012                    proto::PixelData pixels = response.pixel_data();\012                    runner::InputFrame frame(pixels.height(), pixels.width(),\012 static_cast&lt;PixelFormat&gt;(\012 static_cast&lt;int&gt;(pixels.format())),\012                                             pixels.step(),\012 reinterpret_cast&lt;const unsigned char*&gt;(\012                                                     pixels.data().c_str()));\012                    mStreamGraphInterface-&gt;dispatchPixelData(mStreamId, response.timestamp_us(),\012                                                             frame);\012 } else if (response.has_semantic_data()) {\012                    mStreamGraphInterface\012 -&gt;dispatchSerializedData(mStreamId, response.timestamp_us(),\012                                                     std::move(*response.mutable_semantic_data()));\012 }\012 }\012\012            cq.Next(&amp;tag, &amp;cqStatus);\012 }\012\012 ::grpc::Status grpcStatus;\012        rpc-&gt;Finish(&amp;grpcStatus, nullptr);\012 if (!grpcStatus.ok()) {\012            LOG(ERROR) &lt;&lt; &quot;Failed RPC with message: &quot; &lt;&lt; grpcStatus.error_message();\012 }\012\012        cq.Shutdown();\012 if (mEndOfStreamReporter) {\012            std::lock_guard lock(mStopObservationLock);\012            mStopped = true;\012            std::thread t =\012                    std::thread([this]() { mEndOfStreamReporter-&gt;reportStreamClosed(mStreamId); });\012\012            t.detach();\012 }\012\012        proto::OutputStreamResponse streamResponse;\012 }))<SUB>43</SUB>> ]
+"1807" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>110</SUB>> ]
+"1802" [label = <(&lt;operator&gt;.fieldAccess,std::thread)<SUB>43</SUB>> ]
+"1805" [label = <(METHOD_REF,ANY anonymous_lambda_0 (),std::thread([this]() {\012        proto::ObserveOutputStreamRequest observeStreamRequest;\012        observeStreamRequest.set_stream_id(mStreamId);\012 ::grpc::ClientContext context;\012 ::grpc::CompletionQueue cq;\012\012 void* tag;\012 bool cqStatus;\012\012        std::unique_ptr&lt;::grpc::ClientAsyncReader&lt;proto::OutputStreamResponse&gt;&gt; rpc(\012                mStreamGraphInterface-&gt;getServiceStub()\012 -&gt;AsyncObserveOutputStream(&amp;context, observeStreamRequest, &amp;cq, nullptr));\012\012        proto::OutputStreamResponse response;\012\012        cq.Next(&amp;tag, &amp;cqStatus);\012 while (cqStatus) {\012 // Dispatch data only stream is being observed.\012            rpc-&gt;Read(&amp;response, nullptr);\012 {\012                std::lock_guard lock(mStopObservationLock);\012 if (mStopped || mStreamGraphInterface == nullptr) {\012                    LOG(INFO) &lt;&lt; &quot;Graph stopped. &quot;;\012 break;\012 }\012\012 // Since this is a separate thread, we need not worry about recursive locking\012 // and callback can be executed without creating a new thread.\012 if (response.has_pixel_data()) {\012                    proto::PixelData pixels = response.pixel_data();\012                    runner::InputFrame frame(pixels.height(), pixels.width(),\012 static_cast&lt;PixelFormat&gt;(\012 static_cast&lt;int&gt;(pixels.format())),\012                                             pixels.step(),\012 reinterpret_cast&lt;const unsigned char*&gt;(\012                                                     pixels.data().c_str()));\012                    mStreamGraphInterface-&gt;dispatchPixelData(mStreamId, response.timestamp_us(),\012                                                             frame);\012 } else if (response.has_semantic_data()) {\012                    mStreamGraphInterface\012 -&gt;dispatchSerializedData(mStreamId, response.timestamp_us(),\012                                                     std::move(*response.mutable_semantic_data()));\012 }\012 }\012\012            cq.Next(&amp;tag, &amp;cqStatus);\012 }\012\012 ::grpc::Status grpcStatus;\012        rpc-&gt;Finish(&amp;grpcStatus, nullptr);\012 if (!grpcStatus.ok()) {\012            LOG(ERROR) &lt;&lt; &quot;Failed RPC with message: &quot; &lt;&lt; grpcStatus.error_message();\012 }\012\012        cq.Shutdown();\012 if (mEndOfStreamReporter) {\012            std::lock_guard lock(mStopObservationLock);\012            mStopped = true;\012            std::thread t =\012                    std::thread([this]() { mEndOfStreamReporter-&gt;reportStreamClosed(mStreamId); });\012\012            t.detach();\012 }\012\012        proto::OutputStreamResponse streamResponse;\012 }))<SUB>43</SUB>> ]
+"1809" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>110</SUB>> ]
+"1804" [label = <(FIELD_IDENTIFIER,thread,thread)<SUB>43</SUB>> ]
+"1790" [label = <(METHOD,startObservingStream)<SUB>38</SUB>> ]
+"1810" [label = <(METHOD_RETURN,Status)<SUB>38</SUB>> ]
+  "1799" -> "1809" 
+  "1806" -> "1810" 
+  "1794" -> "1796" 
+  "1796" -> "1804" 
+  "1801" -> "1799" 
+  "1807" -> "1806" 
+  "1802" -> "1805" 
+  "1805" -> "1801" 
+  "1809" -> "1807" 
+  "1804" -> "1802" 
+  "1790" -> "1794" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/7-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/7-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/7-cfg.dot	2023-06-09 11:34:58.476305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/7-cfg.dot	2023-06-09 11:35:02.316305191 +0330
@@ -1,5 +1,5 @@
-digraph "handleStopWithFlushPhase" {  
-"42" [label = <(METHOD,handleStopWithFlushPhase)<SUB>61</SUB>> ]
-"45" [label = <(METHOD_RETURN,Status)<SUB>61</SUB>> ]
-  "42" -> "45" 
+digraph "SingleStreamObserver" {  
+"48" [label = <(METHOD,SingleStreamObserver)<SUB>62</SUB>> ]
+"53" [label = <(METHOD_RETURN,ANY)<SUB>62</SUB>> ]
+  "48" -> "53" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/70-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/70-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/70-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/70-cfg.dot	2023-06-09 11:35:02.436305192 +0330
@@ -1,5 +1,9 @@
-digraph "SingleStreamObserver" {  
-"1796" [label = <(METHOD,SingleStreamObserver)<SUB>32</SUB>> ]
-"1801" [label = <(METHOD_RETURN,ANY)<SUB>32</SUB>> ]
-  "1796" -> "1801" 
+digraph "stopObservingStream" {  
+"1815" [label = <(lock,lock(mStopObservationLock))<SUB>114</SUB>> ]
+"1817" [label = <(&lt;operator&gt;.assignment,mStopped = true)<SUB>115</SUB>> ]
+"1812" [label = <(METHOD,stopObservingStream)<SUB>113</SUB>> ]
+"1820" [label = <(METHOD_RETURN,void)<SUB>113</SUB>> ]
+  "1815" -> "1817" 
+  "1817" -> "1820" 
+  "1812" -> "1815" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/71-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/71-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/71-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/71-cfg.dot	2023-06-09 11:35:02.436305192 +0330
@@ -1,25 +1,20 @@
-digraph "startObservingStream" {  
-"1812" [label = <(&lt;operator&gt;.assignment,mThread = std::thread([this]() {\012        proto::ObserveOutputStreamRequest observeStreamRequest;\012        observeStreamRequest.set_stream_id(mStreamId);\012 ::grpc::ClientContext context;\012 ::grpc::CompletionQueue cq;\012\012 void* tag;\012 bool cqStatus;\012\012        std::unique_ptr&lt;::grpc::ClientAsyncReader&lt;proto::OutputStreamResponse&gt;&gt; rpc(\012                mStreamGraphInterface-&gt;getServiceStub()\012 -&gt;AsyncObserveOutputStream(&amp;context, observeStreamRequest, &amp;cq, nullptr));\012\012        proto::OutputStreamResponse response;\012\012        cq.Next(&amp;tag, &amp;cqStatus);\012 while (cqStatus) {\012 // Dispatch data only stream is being observed.\012            rpc-&gt;Read(&amp;response, nullptr);\012 {\012                std::lock_guard lock(mStopObservationLock);\012 if (mStopped || mStreamGraphInterface == nullptr) {\012                    LOG(INFO) &lt;&lt; &quot;Graph stopped. &quot;;\012 break;\012 }\012\012 // Since this is a separate thread, we need not worry about recursive locking\012 // and callback can be executed without creating a new thread.\012 if (response.has_pixel_data()) {\012                    proto::PixelData pixels = response.pixel_data();\012                    runner::InputFrame frame(pixels.height(), pixels.width(),\012 static_cast&lt;PixelFormat&gt;(\012 static_cast&lt;int&gt;(pixels.format())),\012                                             pixels.step(),\012 reinterpret_cast&lt;const unsigned char*&gt;(\012                                                     pixels.data().c_str()));\012                    mStreamGraphInterface-&gt;dispatchPixelData(mStreamId, response.timestamp_us(),\012                                                             frame);\012 } else if (response.has_semantic_data()) {\012                    mStreamGraphInterface\012 -&gt;dispatchSerializedData(mStreamId, response.timestamp_us(),\012                                                     std::move(*response.mutable_semantic_data()));\012 }\012 }\012\012            cq.Next(&amp;tag, &amp;cqStatus);\012 }\012\012 ::grpc::Status grpcStatus;\012        rpc-&gt;Finish(&amp;grpcStatus, nullptr);\012 if (!grpcStatus.ok()) {\012            LOG(ERROR) &lt;&lt; &quot;Failed RPC with message: &quot; &lt;&lt; grpcStatus.error_message();\012 }\012\012        cq.Shutdown();\012 if (mEndOfStreamReporter) {\012            std::lock_guard lock(mStopObservationLock);\012            mStopped = true;\012            std::thread t =\012                    std::thread([this]() { mEndOfStreamReporter-&gt;reportStreamClosed(mStreamId); });\012\012            t.detach();\012 }\012\012        proto::OutputStreamResponse streamResponse;\012 }))<SUB>43</SUB>> ]
-"1819" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>110</SUB>> ]
-"1807" [label = <(lock,lock(mStopObservationLock))<SUB>40</SUB>> ]
-"1809" [label = <(&lt;operator&gt;.assignment,mStopped = false)<SUB>41</SUB>> ]
-"1814" [label = <(std::thread,std::thread([this]() {\012        proto::ObserveOutputStreamRequest observeStreamRequest;\012        observeStreamRequest.set_stream_id(mStreamId);\012 ::grpc::ClientContext context;\012 ::grpc::CompletionQueue cq;\012\012 void* tag;\012 bool cqStatus;\012\012        std::unique_ptr&lt;::grpc::ClientAsyncReader&lt;proto::OutputStreamResponse&gt;&gt; rpc(\012                mStreamGraphInterface-&gt;getServiceStub()\012 -&gt;AsyncObserveOutputStream(&amp;context, observeStreamRequest, &amp;cq, nullptr));\012\012        proto::OutputStreamResponse response;\012\012        cq.Next(&amp;tag, &amp;cqStatus);\012 while (cqStatus) {\012 // Dispatch data only stream is being observed.\012            rpc-&gt;Read(&amp;response, nullptr);\012 {\012                std::lock_guard lock(mStopObservationLock);\012 if (mStopped || mStreamGraphInterface == nullptr) {\012                    LOG(INFO) &lt;&lt; &quot;Graph stopped. &quot;;\012 break;\012 }\012\012 // Since this is a separate thread, we need not worry about recursive locking\012 // and callback can be executed without creating a new thread.\012 if (response.has_pixel_data()) {\012                    proto::PixelData pixels = response.pixel_data();\012                    runner::InputFrame frame(pixels.height(), pixels.width(),\012 static_cast&lt;PixelFormat&gt;(\012 static_cast&lt;int&gt;(pixels.format())),\012                                             pixels.step(),\012 reinterpret_cast&lt;const unsigned char*&gt;(\012                                                     pixels.data().c_str()));\012                    mStreamGraphInterface-&gt;dispatchPixelData(mStreamId, response.timestamp_us(),\012                                                             frame);\012 } else if (response.has_semantic_data()) {\012                    mStreamGraphInterface\012 -&gt;dispatchSerializedData(mStreamId, response.timestamp_us(),\012                                                     std::move(*response.mutable_semantic_data()));\012 }\012 }\012\012            cq.Next(&amp;tag, &amp;cqStatus);\012 }\012\012 ::grpc::Status grpcStatus;\012        rpc-&gt;Finish(&amp;grpcStatus, nullptr);\012 if (!grpcStatus.ok()) {\012            LOG(ERROR) &lt;&lt; &quot;Failed RPC with message: &quot; &lt;&lt; grpcStatus.error_message();\012 }\012\012        cq.Shutdown();\012 if (mEndOfStreamReporter) {\012            std::lock_guard lock(mStopObservationLock);\012            mStopped = true;\012            std::thread t =\012                    std::thread([this]() { mEndOfStreamReporter-&gt;reportStreamClosed(mStreamId); });\012\012            t.detach();\012 }\012\012        proto::OutputStreamResponse streamResponse;\012 }))<SUB>43</SUB>> ]
-"1820" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>110</SUB>> ]
-"1815" [label = <(&lt;operator&gt;.fieldAccess,std::thread)<SUB>43</SUB>> ]
-"1818" [label = <(METHOD_REF,ANY anonymous_lambda_0 (),std::thread([this]() {\012        proto::ObserveOutputStreamRequest observeStreamRequest;\012        observeStreamRequest.set_stream_id(mStreamId);\012 ::grpc::ClientContext context;\012 ::grpc::CompletionQueue cq;\012\012 void* tag;\012 bool cqStatus;\012\012        std::unique_ptr&lt;::grpc::ClientAsyncReader&lt;proto::OutputStreamResponse&gt;&gt; rpc(\012                mStreamGraphInterface-&gt;getServiceStub()\012 -&gt;AsyncObserveOutputStream(&amp;context, observeStreamRequest, &amp;cq, nullptr));\012\012        proto::OutputStreamResponse response;\012\012        cq.Next(&amp;tag, &amp;cqStatus);\012 while (cqStatus) {\012 // Dispatch data only stream is being observed.\012            rpc-&gt;Read(&amp;response, nullptr);\012 {\012                std::lock_guard lock(mStopObservationLock);\012 if (mStopped || mStreamGraphInterface == nullptr) {\012                    LOG(INFO) &lt;&lt; &quot;Graph stopped. &quot;;\012 break;\012 }\012\012 // Since this is a separate thread, we need not worry about recursive locking\012 // and callback can be executed without creating a new thread.\012 if (response.has_pixel_data()) {\012                    proto::PixelData pixels = response.pixel_data();\012                    runner::InputFrame frame(pixels.height(), pixels.width(),\012 static_cast&lt;PixelFormat&gt;(\012 static_cast&lt;int&gt;(pixels.format())),\012                                             pixels.step(),\012 reinterpret_cast&lt;const unsigned char*&gt;(\012                                                     pixels.data().c_str()));\012                    mStreamGraphInterface-&gt;dispatchPixelData(mStreamId, response.timestamp_us(),\012                                                             frame);\012 } else if (response.has_semantic_data()) {\012                    mStreamGraphInterface\012 -&gt;dispatchSerializedData(mStreamId, response.timestamp_us(),\012                                                     std::move(*response.mutable_semantic_data()));\012 }\012 }\012\012            cq.Next(&amp;tag, &amp;cqStatus);\012 }\012\012 ::grpc::Status grpcStatus;\012        rpc-&gt;Finish(&amp;grpcStatus, nullptr);\012 if (!grpcStatus.ok()) {\012            LOG(ERROR) &lt;&lt; &quot;Failed RPC with message: &quot; &lt;&lt; grpcStatus.error_message();\012 }\012\012        cq.Shutdown();\012 if (mEndOfStreamReporter) {\012            std::lock_guard lock(mStopObservationLock);\012            mStopped = true;\012            std::thread t =\012                    std::thread([this]() { mEndOfStreamReporter-&gt;reportStreamClosed(mStreamId); });\012\012            t.detach();\012 }\012\012        proto::OutputStreamResponse streamResponse;\012 }))<SUB>43</SUB>> ]
-"1822" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>110</SUB>> ]
-"1817" [label = <(FIELD_IDENTIFIER,thread,thread)<SUB>43</SUB>> ]
-"1803" [label = <(METHOD,startObservingStream)<SUB>38</SUB>> ]
-"1823" [label = <(METHOD_RETURN,Status)<SUB>38</SUB>> ]
-  "1812" -> "1822" 
-  "1819" -> "1823" 
-  "1807" -> "1809" 
-  "1809" -> "1817" 
-  "1814" -> "1812" 
-  "1820" -> "1819" 
-  "1815" -> "1818" 
-  "1818" -> "1814" 
-  "1822" -> "1820" 
-  "1817" -> "1815" 
-  "1803" -> "1807" 
+digraph "~SingleStreamObserver" {  
+"1824" [label = <(stopObservingStream,stopObservingStream())<SUB>119</SUB>> ]
+"1826" [label = <(joinable,mThread.joinable())<SUB>121</SUB>> ]
+"1827" [label = <(&lt;operator&gt;.fieldAccess,mThread.joinable)<SUB>121</SUB>> ]
+"1831" [label = <(join,mThread.join())<SUB>122</SUB>> ]
+"1829" [label = <(FIELD_IDENTIFIER,joinable,joinable)<SUB>121</SUB>> ]
+"1832" [label = <(&lt;operator&gt;.fieldAccess,mThread.join)<SUB>122</SUB>> ]
+"1834" [label = <(FIELD_IDENTIFIER,join,join)<SUB>122</SUB>> ]
+"1822" [label = <(METHOD,~SingleStreamObserver)<SUB>118</SUB>> ]
+"1835" [label = <(METHOD_RETURN,ANY)<SUB>118</SUB>> ]
+  "1824" -> "1829" 
+  "1826" -> "1835" 
+  "1826" -> "1834" 
+  "1827" -> "1826" 
+  "1831" -> "1835" 
+  "1829" -> "1827" 
+  "1832" -> "1831" 
+  "1834" -> "1832" 
+  "1822" -> "1824" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/72-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/72-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/72-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/72-cfg.dot	2023-06-09 11:35:02.436305192 +0330
@@ -1,9 +1,5 @@
-digraph "stopObservingStream" {  
-"1828" [label = <(lock,lock(mStopObservationLock))<SUB>114</SUB>> ]
-"1830" [label = <(&lt;operator&gt;.assignment,mStopped = true)<SUB>115</SUB>> ]
-"1825" [label = <(METHOD,stopObservingStream)<SUB>113</SUB>> ]
-"1833" [label = <(METHOD_RETURN,void)<SUB>113</SUB>> ]
-  "1828" -> "1830" 
-  "1830" -> "1833" 
-  "1825" -> "1828" 
+digraph "StreamSetObserver" {  
+"1837" [label = <(METHOD,StreamSetObserver)<SUB>126</SUB>> ]
+"1841" [label = <(METHOD_RETURN,ANY)<SUB>126</SUB>> ]
+  "1837" -> "1841" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/73-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/73-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/73-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/73-cfg.dot	2023-06-09 11:35:02.436305192 +0330
@@ -1,20 +1,123 @@
-digraph "~SingleStreamObserver" {  
-"1837" [label = <(stopObservingStream,stopObservingStream())<SUB>119</SUB>> ]
-"1839" [label = <(joinable,mThread.joinable())<SUB>121</SUB>> ]
-"1840" [label = <(&lt;operator&gt;.fieldAccess,mThread.joinable)<SUB>121</SUB>> ]
-"1844" [label = <(join,mThread.join())<SUB>122</SUB>> ]
-"1842" [label = <(FIELD_IDENTIFIER,joinable,joinable)<SUB>121</SUB>> ]
-"1845" [label = <(&lt;operator&gt;.fieldAccess,mThread.join)<SUB>122</SUB>> ]
-"1847" [label = <(FIELD_IDENTIFIER,join,join)<SUB>122</SUB>> ]
-"1835" [label = <(METHOD,~SingleStreamObserver)<SUB>118</SUB>> ]
-"1848" [label = <(METHOD_RETURN,ANY)<SUB>118</SUB>> ]
-  "1837" -> "1842" 
-  "1839" -> "1848" 
-  "1839" -> "1847" 
-  "1840" -> "1839" 
-  "1844" -> "1848" 
-  "1842" -> "1840" 
-  "1845" -> "1844" 
-  "1847" -> "1845" 
-  "1835" -> "1837" 
+digraph "startObservingStreams" {  
+"1846" [label = <(lock,lock(mLock))<SUB>131</SUB>> ]
+"1849" [label = <(&lt;operator&gt;.assignment,outputConfigs = {})<SUB>132</SUB>> ]
+"1852" [label = <(getOutputStreamConfigs,mClientConfig.getOutputStreamConfigs(outputConfigs))<SUB>133</SUB>> ]
+"1934" [label = <(&lt;operator&gt;.assignment,mStopped = mStreamObservers.empty())<SUB>152</SUB>> ]
+"1940" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>153</SUB>> ]
+"1851" [label = <(&lt;operator&gt;.arrayInitializer,{})<SUB>132</SUB>> ]
+"1853" [label = <(&lt;operator&gt;.fieldAccess,mClientConfig.getOutputStreamConfigs)<SUB>133</SUB>> ]
+"1858" [label = <(&lt;operator&gt;.logicalOr,!mStopped || !mStreamObservers.empty())<SUB>135</SUB>> ]
+"1936" [label = <(empty,mStreamObservers.empty())<SUB>152</SUB>> ]
+"1941" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>153</SUB>> ]
+"1855" [label = <(FIELD_IDENTIFIER,getOutputStreamConfigs,getOutputStreamConfigs)<SUB>133</SUB>> ]
+"1859" [label = <(&lt;operator&gt;.logicalNot,!mStopped)<SUB>135</SUB>> ]
+"1861" [label = <(&lt;operator&gt;.logicalNot,!mStreamObservers.empty())<SUB>135</SUB>> ]
+"1867" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Already started observing streams. Duplicate call is not allowed&quot;)<SUB>136</SUB>> ]
+"1871" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>137</SUB>> ]
+"1880" [label = <(&lt;operator&gt;.assignment,streamObserver =\012                std::make_unique&lt;SingleStreamObserver&gt;(it.first, this, mStreamGraphInterface))<SUB>141</SUB>> ]
+"1896" [label = <(&lt;operator&gt;.assignment,status = streamObserver-&gt;startObservingStream())<SUB>143</SUB>> ]
+"1918" [label = <(emplace,mStreamObservers.emplace(std::make_pair(it.first, std::move(streamObserver))))<SUB>149</SUB>> ]
+"1937" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.empty)<SUB>152</SUB>> ]
+"1943" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>153</SUB>> ]
+"1862" [label = <(empty,mStreamObservers.empty())<SUB>135</SUB>> ]
+"1868" [label = <(LOG,LOG(ERROR))<SUB>136</SUB>> ]
+"1872" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>137</SUB>> ]
+"1882" [label = <(&lt;operator&gt;.greaterThan,std::make_unique&lt;SingleStreamObserver&gt;(it.first, this, mStreamGraphInterface))<SUB>142</SUB>> ]
+"1898" [label = <(startObservingStream,streamObserver-&gt;startObservingStream())<SUB>143</SUB>> ]
+"1903" [label = <(&lt;operator&gt;.notEquals,status != Status::SUCCESS)<SUB>144</SUB>> ]
+"1919" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.emplace)<SUB>149</SUB>> ]
+"1922" [label = <(std::make_pair,std::make_pair(it.first, std::move(streamObserver)))<SUB>149</SUB>> ]
+"1939" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>152</SUB>> ]
+"1863" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.empty)<SUB>135</SUB>> ]
+"1874" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>137</SUB>> ]
+"1883" [label = <(&lt;operator&gt;.lessThan,std::make_unique&lt;SingleStreamObserver)<SUB>142</SUB>> ]
+"1888" [label = <(&lt;operator&gt;.bracketedPrimary,(it.first, this, mStreamGraphInterface))<SUB>142</SUB>> ]
+"1899" [label = <(&lt;operator&gt;.indirectFieldAccess,streamObserver-&gt;startObservingStream)<SUB>143</SUB>> ]
+"1905" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>144</SUB>> ]
+"1910" [label = <(t,t([this]() { stopObservingStreams(true); }))<SUB>145</SUB>> ]
+"1912" [label = <(detach,t.detach())<SUB>146</SUB>> ]
+"1916" [label = <(RETURN,return status;,return status;)<SUB>147</SUB>> ]
+"1921" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>149</SUB>> ]
+"1923" [label = <(&lt;operator&gt;.fieldAccess,std::make_pair)<SUB>149</SUB>> ]
+"1926" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>149</SUB>> ]
+"1929" [label = <(std::move,std::move(streamObserver))<SUB>149</SUB>> ]
+"1865" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>135</SUB>> ]
+"1884" [label = <(&lt;operator&gt;.fieldAccess,std::make_unique)<SUB>142</SUB>> ]
+"1889" [label = <(&lt;operator&gt;.expressionList,it.first, this, mStreamGraphInterface)<SUB>142</SUB>> ]
+"1901" [label = <(FIELD_IDENTIFIER,startObservingStream,startObservingStream)<SUB>143</SUB>> ]
+"1907" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>144</SUB>> ]
+"1911" [label = <(METHOD_REF,ANY anonymous_lambda_1 (),t([this]() { stopObservingStreams(true); }))<SUB>145</SUB>> ]
+"1913" [label = <(&lt;operator&gt;.fieldAccess,t.detach)<SUB>146</SUB>> ]
+"1925" [label = <(FIELD_IDENTIFIER,make_pair,make_pair)<SUB>149</SUB>> ]
+"1928" [label = <(FIELD_IDENTIFIER,first,first)<SUB>149</SUB>> ]
+"1930" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>149</SUB>> ]
+"1886" [label = <(FIELD_IDENTIFIER,make_unique,make_unique)<SUB>142</SUB>> ]
+"1890" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>142</SUB>> ]
+"1915" [label = <(FIELD_IDENTIFIER,detach,detach)<SUB>146</SUB>> ]
+"1932" [label = <(FIELD_IDENTIFIER,move,move)<SUB>149</SUB>> ]
+"1892" [label = <(FIELD_IDENTIFIER,first,first)<SUB>142</SUB>> ]
+"1843" [label = <(METHOD,startObservingStreams)<SUB>130</SUB>> ]
+"1944" [label = <(METHOD_RETURN,Status)<SUB>130</SUB>> ]
+  "1846" -> "1851" 
+  "1849" -> "1855" 
+  "1852" -> "1859" 
+  "1934" -> "1943" 
+  "1940" -> "1944" 
+  "1851" -> "1849" 
+  "1853" -> "1852" 
+  "1858" -> "1868" 
+  "1858" -> "1886" 
+  "1936" -> "1934" 
+  "1941" -> "1940" 
+  "1855" -> "1853" 
+  "1859" -> "1858" 
+  "1859" -> "1865" 
+  "1861" -> "1858" 
+  "1867" -> "1874" 
+  "1871" -> "1944" 
+  "1880" -> "1901" 
+  "1896" -> "1907" 
+  "1918" -> "1886" 
+  "1918" -> "1939" 
+  "1937" -> "1936" 
+  "1943" -> "1941" 
+  "1862" -> "1861" 
+  "1868" -> "1867" 
+  "1872" -> "1871" 
+  "1882" -> "1880" 
+  "1898" -> "1896" 
+  "1903" -> "1911" 
+  "1903" -> "1921" 
+  "1919" -> "1925" 
+  "1922" -> "1918" 
+  "1939" -> "1937" 
+  "1863" -> "1862" 
+  "1874" -> "1872" 
+  "1883" -> "1892" 
+  "1888" -> "1882" 
+  "1899" -> "1898" 
+  "1905" -> "1903" 
+  "1910" -> "1915" 
+  "1912" -> "1916" 
+  "1916" -> "1944" 
+  "1921" -> "1919" 
+  "1923" -> "1928" 
+  "1926" -> "1932" 
+  "1929" -> "1922" 
+  "1865" -> "1863" 
+  "1884" -> "1883" 
+  "1889" -> "1888" 
+  "1901" -> "1899" 
+  "1907" -> "1905" 
+  "1911" -> "1910" 
+  "1913" -> "1912" 
+  "1925" -> "1923" 
+  "1928" -> "1926" 
+  "1930" -> "1929" 
+  "1886" -> "1884" 
+  "1890" -> "1889" 
+  "1915" -> "1913" 
+  "1932" -> "1930" 
+  "1892" -> "1890" 
+  "1843" -> "1846" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/74-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/74-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/74-cfg.dot	2023-06-09 11:34:58.586305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/74-cfg.dot	2023-06-09 11:35:02.436305192 +0330
@@ -1,5 +1,40 @@
-digraph "StreamSetObserver" {  
-"1850" [label = <(METHOD,StreamSetObserver)<SUB>126</SUB>> ]
-"1854" [label = <(METHOD_RETURN,ANY)<SUB>126</SUB>> ]
-  "1850" -> "1854" 
+digraph "stopObservingStreams" {  
+"1950" [label = <(lock,lock(mLock))<SUB>157</SUB>> ]
+"1956" [label = <(t,t([streamGraphInterface(mStreamGraphInterface)]() {\012            streamGraphInterface-&gt;dispatchGraphTerminationMessage(Status::SUCCESS, &quot;&quot;);\012 }))<SUB>160</SUB>> ]
+"1958" [label = <(detach,t.detach())<SUB>163</SUB>> ]
+"1962" [label = <(RETURN,return;,return;)<SUB>164</SUB>> ]
+"1976" [label = <(wait,mStoppedCv.wait(lock, [this]() -&gt; bool { return mStopped; }))<SUB>173</SUB>> ]
+"1957" [label = <(METHOD_REF,ANY anonymous_lambda_2 (),t([streamGraphInterface(mStreamGraphInterface)]() {\012            streamGraphInterface-&gt;dispatchGraphTerminationMessage(Status::SUCCESS, &quot;&quot;);\012 }))<SUB>160</SUB>> ]
+"1959" [label = <(&lt;operator&gt;.fieldAccess,t.detach)<SUB>163</SUB>> ]
+"1977" [label = <(&lt;operator&gt;.fieldAccess,mStoppedCv.wait)<SUB>173</SUB>> ]
+"1981" [label = <(METHOD_REF,bool anonymous_lambda_3 (),mStoppedCv.wait(lock, [this]() -&gt; bool { return mStopped; }))<SUB>173</SUB>> ]
+"1961" [label = <(FIELD_IDENTIFIER,detach,detach)<SUB>163</SUB>> ]
+"1970" [label = <(stopObservingStream,it.second-&gt;stopObservingStream())<SUB>170</SUB>> ]
+"1979" [label = <(FIELD_IDENTIFIER,wait,wait)<SUB>173</SUB>> ]
+"1971" [label = <(&lt;operator&gt;.indirectFieldAccess,it.second-&gt;stopObservingStream)<SUB>170</SUB>> ]
+"1972" [label = <(&lt;operator&gt;.fieldAccess,it.second)<SUB>170</SUB>> ]
+"1975" [label = <(FIELD_IDENTIFIER,stopObservingStream,stopObservingStream)<SUB>170</SUB>> ]
+"1974" [label = <(FIELD_IDENTIFIER,second,second)<SUB>170</SUB>> ]
+"1946" [label = <(METHOD,stopObservingStreams)<SUB>156</SUB>> ]
+"1982" [label = <(METHOD_RETURN,void)<SUB>156</SUB>> ]
+  "1950" -> "1957" 
+  "1950" -> "1982" 
+  "1950" -> "1974" 
+  "1956" -> "1961" 
+  "1958" -> "1962" 
+  "1962" -> "1982" 
+  "1976" -> "1982" 
+  "1957" -> "1956" 
+  "1959" -> "1958" 
+  "1977" -> "1981" 
+  "1981" -> "1976" 
+  "1961" -> "1959" 
+  "1970" -> "1974" 
+  "1970" -> "1979" 
+  "1979" -> "1977" 
+  "1971" -> "1970" 
+  "1972" -> "1975" 
+  "1975" -> "1971" 
+  "1974" -> "1972" 
+  "1946" -> "1950" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/75-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/75-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/75-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/75-cfg.dot	2023-06-09 11:35:02.436305192 +0330
@@ -1,123 +1,57 @@
-digraph "startObservingStreams" {  
-"1859" [label = <(lock,lock(mLock))<SUB>131</SUB>> ]
-"1862" [label = <(&lt;operator&gt;.assignment,outputConfigs = {})<SUB>132</SUB>> ]
-"1865" [label = <(getOutputStreamConfigs,mClientConfig.getOutputStreamConfigs(outputConfigs))<SUB>133</SUB>> ]
-"1947" [label = <(&lt;operator&gt;.assignment,mStopped = mStreamObservers.empty())<SUB>152</SUB>> ]
-"1953" [label = <(RETURN,return Status::SUCCESS;,return Status::SUCCESS;)<SUB>153</SUB>> ]
-"1864" [label = <(&lt;operator&gt;.arrayInitializer,{})<SUB>132</SUB>> ]
-"1866" [label = <(&lt;operator&gt;.fieldAccess,mClientConfig.getOutputStreamConfigs)<SUB>133</SUB>> ]
-"1871" [label = <(&lt;operator&gt;.logicalOr,!mStopped || !mStreamObservers.empty())<SUB>135</SUB>> ]
-"1949" [label = <(empty,mStreamObservers.empty())<SUB>152</SUB>> ]
-"1954" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>153</SUB>> ]
-"1868" [label = <(FIELD_IDENTIFIER,getOutputStreamConfigs,getOutputStreamConfigs)<SUB>133</SUB>> ]
-"1872" [label = <(&lt;operator&gt;.logicalNot,!mStopped)<SUB>135</SUB>> ]
-"1874" [label = <(&lt;operator&gt;.logicalNot,!mStreamObservers.empty())<SUB>135</SUB>> ]
-"1880" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Already started observing streams. Duplicate call is not allowed&quot;)<SUB>136</SUB>> ]
-"1884" [label = <(RETURN,return Status::ILLEGAL_STATE;,return Status::ILLEGAL_STATE;)<SUB>137</SUB>> ]
-"1893" [label = <(&lt;operator&gt;.assignment,streamObserver =\012                std::make_unique&lt;SingleStreamObserver&gt;(it.first, this, mStreamGraphInterface))<SUB>141</SUB>> ]
-"1909" [label = <(&lt;operator&gt;.assignment,status = streamObserver-&gt;startObservingStream())<SUB>143</SUB>> ]
-"1931" [label = <(emplace,mStreamObservers.emplace(std::make_pair(it.first, std::move(streamObserver))))<SUB>149</SUB>> ]
-"1950" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.empty)<SUB>152</SUB>> ]
-"1956" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>153</SUB>> ]
-"1875" [label = <(empty,mStreamObservers.empty())<SUB>135</SUB>> ]
-"1881" [label = <(LOG,LOG(ERROR))<SUB>136</SUB>> ]
-"1885" [label = <(&lt;operator&gt;.fieldAccess,Status::ILLEGAL_STATE)<SUB>137</SUB>> ]
-"1895" [label = <(&lt;operator&gt;.greaterThan,std::make_unique&lt;SingleStreamObserver&gt;(it.first, this, mStreamGraphInterface))<SUB>142</SUB>> ]
-"1911" [label = <(startObservingStream,streamObserver-&gt;startObservingStream())<SUB>143</SUB>> ]
-"1916" [label = <(&lt;operator&gt;.notEquals,status != Status::SUCCESS)<SUB>144</SUB>> ]
-"1932" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.emplace)<SUB>149</SUB>> ]
-"1935" [label = <(std::make_pair,std::make_pair(it.first, std::move(streamObserver)))<SUB>149</SUB>> ]
-"1952" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>152</SUB>> ]
-"1876" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.empty)<SUB>135</SUB>> ]
-"1887" [label = <(FIELD_IDENTIFIER,ILLEGAL_STATE,ILLEGAL_STATE)<SUB>137</SUB>> ]
-"1896" [label = <(&lt;operator&gt;.lessThan,std::make_unique&lt;SingleStreamObserver)<SUB>142</SUB>> ]
-"1901" [label = <(&lt;operator&gt;.bracketedPrimary,(it.first, this, mStreamGraphInterface))<SUB>142</SUB>> ]
-"1912" [label = <(&lt;operator&gt;.indirectFieldAccess,streamObserver-&gt;startObservingStream)<SUB>143</SUB>> ]
-"1918" [label = <(&lt;operator&gt;.fieldAccess,Status::SUCCESS)<SUB>144</SUB>> ]
-"1923" [label = <(t,t([this]() { stopObservingStreams(true); }))<SUB>145</SUB>> ]
-"1925" [label = <(detach,t.detach())<SUB>146</SUB>> ]
-"1929" [label = <(RETURN,return status;,return status;)<SUB>147</SUB>> ]
-"1934" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>149</SUB>> ]
-"1936" [label = <(&lt;operator&gt;.fieldAccess,std::make_pair)<SUB>149</SUB>> ]
-"1939" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>149</SUB>> ]
-"1942" [label = <(std::move,std::move(streamObserver))<SUB>149</SUB>> ]
-"1878" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>135</SUB>> ]
-"1897" [label = <(&lt;operator&gt;.fieldAccess,std::make_unique)<SUB>142</SUB>> ]
-"1902" [label = <(&lt;operator&gt;.expressionList,it.first, this, mStreamGraphInterface)<SUB>142</SUB>> ]
-"1914" [label = <(FIELD_IDENTIFIER,startObservingStream,startObservingStream)<SUB>143</SUB>> ]
-"1920" [label = <(FIELD_IDENTIFIER,SUCCESS,SUCCESS)<SUB>144</SUB>> ]
-"1924" [label = <(METHOD_REF,ANY anonymous_lambda_1 (),t([this]() { stopObservingStreams(true); }))<SUB>145</SUB>> ]
-"1926" [label = <(&lt;operator&gt;.fieldAccess,t.detach)<SUB>146</SUB>> ]
-"1938" [label = <(FIELD_IDENTIFIER,make_pair,make_pair)<SUB>149</SUB>> ]
-"1941" [label = <(FIELD_IDENTIFIER,first,first)<SUB>149</SUB>> ]
-"1943" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>149</SUB>> ]
-"1899" [label = <(FIELD_IDENTIFIER,make_unique,make_unique)<SUB>142</SUB>> ]
-"1903" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>142</SUB>> ]
-"1928" [label = <(FIELD_IDENTIFIER,detach,detach)<SUB>146</SUB>> ]
-"1945" [label = <(FIELD_IDENTIFIER,move,move)<SUB>149</SUB>> ]
-"1905" [label = <(FIELD_IDENTIFIER,first,first)<SUB>142</SUB>> ]
-"1856" [label = <(METHOD,startObservingStreams)<SUB>130</SUB>> ]
-"1957" [label = <(METHOD_RETURN,Status)<SUB>130</SUB>> ]
-  "1859" -> "1864" 
-  "1862" -> "1868" 
-  "1865" -> "1872" 
-  "1947" -> "1956" 
-  "1953" -> "1957" 
-  "1864" -> "1862" 
-  "1866" -> "1865" 
-  "1871" -> "1881" 
-  "1871" -> "1899" 
-  "1949" -> "1947" 
-  "1954" -> "1953" 
-  "1868" -> "1866" 
-  "1872" -> "1871" 
-  "1872" -> "1878" 
-  "1874" -> "1871" 
-  "1880" -> "1887" 
-  "1884" -> "1957" 
-  "1893" -> "1914" 
-  "1909" -> "1920" 
-  "1931" -> "1899" 
-  "1931" -> "1952" 
-  "1950" -> "1949" 
-  "1956" -> "1954" 
-  "1875" -> "1874" 
-  "1881" -> "1880" 
-  "1885" -> "1884" 
-  "1895" -> "1893" 
-  "1911" -> "1909" 
-  "1916" -> "1924" 
-  "1916" -> "1934" 
-  "1932" -> "1938" 
-  "1935" -> "1931" 
-  "1952" -> "1950" 
-  "1876" -> "1875" 
-  "1887" -> "1885" 
-  "1896" -> "1905" 
-  "1901" -> "1895" 
-  "1912" -> "1911" 
-  "1918" -> "1916" 
-  "1923" -> "1928" 
-  "1925" -> "1929" 
-  "1929" -> "1957" 
-  "1934" -> "1932" 
-  "1936" -> "1941" 
-  "1939" -> "1945" 
-  "1942" -> "1935" 
-  "1878" -> "1876" 
-  "1897" -> "1896" 
-  "1902" -> "1901" 
-  "1914" -> "1912" 
-  "1920" -> "1918" 
-  "1924" -> "1923" 
-  "1926" -> "1925" 
-  "1938" -> "1936" 
-  "1941" -> "1939" 
-  "1943" -> "1942" 
-  "1899" -> "1897" 
-  "1903" -> "1902" 
-  "1928" -> "1926" 
-  "1945" -> "1943" 
-  "1905" -> "1903" 
-  "1856" -> "1859" 
+digraph "reportStreamClosed" {  
+"1988" [label = <(lock,lock(mLock))<SUB>178</SUB>> ]
+"1991" [label = <(&lt;operator&gt;.assignment,streamObserver = mStreamObservers.find(streamId))<SUB>179</SUB>> ]
+"2007" [label = <(erase,mStreamObservers.erase(streamObserver))<SUB>183</SUB>> ]
+"1993" [label = <(find,mStreamObservers.find(streamId))<SUB>179</SUB>> ]
+"1999" [label = <(&lt;operator&gt;.equals,streamObserver == mStreamObservers.end())<SUB>180</SUB>> ]
+"2008" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.erase)<SUB>183</SUB>> ]
+"2013" [label = <(empty,mStreamObservers.empty())<SUB>184</SUB>> ]
+"1994" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.find)<SUB>179</SUB>> ]
+"2001" [label = <(end,mStreamObservers.end())<SUB>180</SUB>> ]
+"2006" [label = <(RETURN,return;,return;)<SUB>181</SUB>> ]
+"2010" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>183</SUB>> ]
+"2014" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.empty)<SUB>184</SUB>> ]
+"2018" [label = <(&lt;operator&gt;.assignment,mStopped = true)<SUB>185</SUB>> ]
+"2021" [label = <(notify_one,mStoppedCv.notify_one())<SUB>186</SUB>> ]
+"2026" [label = <(t,t([streamGraphInterface(mStreamGraphInterface)]() {\012            streamGraphInterface-&gt;dispatchGraphTerminationMessage(Status::SUCCESS, &quot;&quot;);\012 }))<SUB>187</SUB>> ]
+"2028" [label = <(detach,t.detach())<SUB>190</SUB>> ]
+"1996" [label = <(FIELD_IDENTIFIER,find,find)<SUB>179</SUB>> ]
+"2002" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.end)<SUB>180</SUB>> ]
+"2016" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>184</SUB>> ]
+"2022" [label = <(&lt;operator&gt;.fieldAccess,mStoppedCv.notify_one)<SUB>186</SUB>> ]
+"2027" [label = <(METHOD_REF,ANY anonymous_lambda_4 (),t([streamGraphInterface(mStreamGraphInterface)]() {\012            streamGraphInterface-&gt;dispatchGraphTerminationMessage(Status::SUCCESS, &quot;&quot;);\012 }))<SUB>187</SUB>> ]
+"2029" [label = <(&lt;operator&gt;.fieldAccess,t.detach)<SUB>190</SUB>> ]
+"2004" [label = <(FIELD_IDENTIFIER,end,end)<SUB>180</SUB>> ]
+"2024" [label = <(FIELD_IDENTIFIER,notify_one,notify_one)<SUB>186</SUB>> ]
+"2031" [label = <(FIELD_IDENTIFIER,detach,detach)<SUB>190</SUB>> ]
+"1984" [label = <(METHOD,reportStreamClosed)<SUB>177</SUB>> ]
+"2032" [label = <(METHOD_RETURN,void)<SUB>177</SUB>> ]
+  "1988" -> "1996" 
+  "1991" -> "2004" 
+  "2007" -> "2016" 
+  "1993" -> "1991" 
+  "1999" -> "2006" 
+  "1999" -> "2010" 
+  "2008" -> "2007" 
+  "2013" -> "2032" 
+  "2013" -> "2018" 
+  "1994" -> "1993" 
+  "2001" -> "1999" 
+  "2006" -> "2032" 
+  "2010" -> "2008" 
+  "2014" -> "2013" 
+  "2018" -> "2024" 
+  "2021" -> "2027" 
+  "2026" -> "2031" 
+  "2028" -> "2032" 
+  "1996" -> "1994" 
+  "2002" -> "2001" 
+  "2016" -> "2014" 
+  "2022" -> "2021" 
+  "2027" -> "2026" 
+  "2029" -> "2028" 
+  "2004" -> "2002" 
+  "2024" -> "2022" 
+  "2031" -> "2029" 
+  "1984" -> "1988" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/76-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/76-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/76-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/76-cfg.dot	2023-06-09 11:35:02.436305192 +0330
@@ -1,40 +1,7 @@
-digraph "stopObservingStreams" {  
-"1963" [label = <(lock,lock(mLock))<SUB>157</SUB>> ]
-"1968" [label = <(&lt;operator&gt;.assignment,mGraphTerminationThread = std::thread([this]() {\012 this-&gt;mStreamGraphInterface-&gt;dispatchGraphTerminationMessage(Status::SUCCESS, &quot;&quot;);\012 }))<SUB>160</SUB>> ]
-"1975" [label = <(RETURN,return;,return;)<SUB>163</SUB>> ]
-"1989" [label = <(wait,mStoppedCv.wait(lock, [this]() -&gt; bool { return mStopped; }))<SUB>172</SUB>> ]
-"1970" [label = <(std::thread,std::thread([this]() {\012 this-&gt;mStreamGraphInterface-&gt;dispatchGraphTerminationMessage(Status::SUCCESS, &quot;&quot;);\012 }))<SUB>160</SUB>> ]
-"1990" [label = <(&lt;operator&gt;.fieldAccess,mStoppedCv.wait)<SUB>172</SUB>> ]
-"1994" [label = <(METHOD_REF,bool anonymous_lambda_3 (),mStoppedCv.wait(lock, [this]() -&gt; bool { return mStopped; }))<SUB>172</SUB>> ]
-"1971" [label = <(&lt;operator&gt;.fieldAccess,std::thread)<SUB>160</SUB>> ]
-"1974" [label = <(METHOD_REF,ANY anonymous_lambda_2 (),std::thread([this]() {\012 this-&gt;mStreamGraphInterface-&gt;dispatchGraphTerminationMessage(Status::SUCCESS, &quot;&quot;);\012 }))<SUB>160</SUB>> ]
-"1983" [label = <(stopObservingStream,it.second-&gt;stopObservingStream())<SUB>169</SUB>> ]
-"1992" [label = <(FIELD_IDENTIFIER,wait,wait)<SUB>172</SUB>> ]
-"1973" [label = <(FIELD_IDENTIFIER,thread,thread)<SUB>160</SUB>> ]
-"1984" [label = <(&lt;operator&gt;.indirectFieldAccess,it.second-&gt;stopObservingStream)<SUB>169</SUB>> ]
-"1985" [label = <(&lt;operator&gt;.fieldAccess,it.second)<SUB>169</SUB>> ]
-"1988" [label = <(FIELD_IDENTIFIER,stopObservingStream,stopObservingStream)<SUB>169</SUB>> ]
-"1987" [label = <(FIELD_IDENTIFIER,second,second)<SUB>169</SUB>> ]
-"1959" [label = <(METHOD,stopObservingStreams)<SUB>156</SUB>> ]
-"1995" [label = <(METHOD_RETURN,void)<SUB>156</SUB>> ]
-  "1963" -> "1973" 
-  "1963" -> "1995" 
-  "1963" -> "1987" 
-  "1968" -> "1975" 
-  "1975" -> "1995" 
-  "1989" -> "1995" 
-  "1970" -> "1968" 
-  "1990" -> "1994" 
-  "1994" -> "1989" 
-  "1971" -> "1974" 
-  "1974" -> "1970" 
-  "1983" -> "1987" 
-  "1983" -> "1992" 
-  "1992" -> "1990" 
-  "1973" -> "1971" 
-  "1984" -> "1983" 
-  "1985" -> "1988" 
-  "1988" -> "1984" 
-  "1987" -> "1985" 
-  "1959" -> "1963" 
+digraph "&lt;global&gt;" {  
+"2039" [label = <(UNKNOWN,namespace android {\012namespace automotive {\012namespace computepipe {\012namespace graph {\012\012class GrpcGraph : public PrebuiltGraph, public StreamGraphInterface {\012\012 public:\012 GrpcGraph() {}\012\012 virtual ~GrpcGraph() {}\012\012 Status initialize(const std::string&amp; address,\012                      std::weak_ptr&lt;PrebuiltEngineInterface&gt; engineInterface);\012\012 // No copy or move constructors or operators are available.\012 GrpcGraph(const GrpcGraph&amp;) = delete;\012 GrpcGraph&amp; operator=(const GrpcGraph&amp;) = delete;\012\012 // Override RunnerComponent interface functions for applying configs,\012 // starting the graph and stopping the graph.\012 Status handleConfigPhase(const runner::ClientConfig&amp; e) override;\012 Status handleExecutionPhase(const runner::RunnerEvent&amp; e) override;\012 Status handleStopWithFlushPhase(const runner::RunnerEvent&amp; e) override;\012 Status handleStopImmediatePhase(const runner::RunnerEvent&amp; e) override;\012 Status handleResetPhase(const runner::RunnerEvent&amp; e) override;\012\012 PrebuiltGraphType GetGraphType() const override {\012 return PrebuiltGraphType::REMOTE;\012 }\012\012 PrebuiltGraphState GetGraphState() const override;\012 Status GetStatus() const override;\012    std::string GetErrorMessage() const override;\012\012 // Gets the supported graph config options.\012 const proto::Options&amp; GetSupportedGraphConfigs() const override {\012 return mGraphConfig;\012 }\012\012 // Sets input stream data. The string is expected to be a serialized proto\012 // the definition of which is known to the graph.\012 Status SetInputStreamData(int streamIndex, int64_t timestamp,\012 const std::string&amp; streamData) override;\012\012 // Sets pixel data to the specified input stream index.\012 Status SetInputStreamPixelData(int streamIndex, int64_t timestamp,\012 const runner::InputFrame&amp; inputFrame) override;\012\012 // Starts graph profiling at some point after starting the graph with profiling enabled.\012 Status StartGraphProfiling() override;\012\012 // Stops graph profiling.\012 Status StopGraphProfiling() override;\012\012 // Collects debugging and profiling information for the graph. The graph\012 // needs to be started with debugging enabled in order to get valid info.\012    std::string GetDebugInfo() override;\012\012 // Stream Graph interface\012    proto::GrpcGraphService::Stub* getServiceStub() override {\012 return mGraphStub.get();\012 }\012\012 void dispatchPixelData(int streamId, int64_t timestamp_us,\012 const runner::InputFrame&amp; frame) override;\012\012 void dispatchSerializedData(int streamId, int64_t timestamp_us,\012                                std::string&amp;&amp; serialized_data) override;\012\012 void dispatchGraphTerminationMessage(Status, std::string&amp;&amp;) override;\012 private:\012 mutable std::mutex mLock;\012\012 PrebuiltGraphState mGraphState = PrebuiltGraphState::UNINITIALIZED;\012\012 Status mStatus = Status::SUCCESS;\012\012    std::string mErrorMessage = &quot;&quot;;\012\012 // Cached callback interface that is passed in from the runner.\012    std::weak_ptr&lt;PrebuiltEngineInterface&gt; mEngineInterface;\012\012 // Cached graph config.\012    proto::Options mGraphConfig;\012\012    std::unique_ptr&lt;proto::GrpcGraphService::Stub&gt; mGraphStub;\012\012    std::unique_ptr&lt;StreamSetObserver&gt; mStreamSetObserver;\012};\012\012} // namespace graph\012} // namespace computepipe\012} // namespace automotive\012},namespace android {\012namespace automotive {\012namespace computepipe {\012namespace graph {\012\012class GrpcGraph : public PrebuiltGraph, public StreamGraphInterface {\012\012 public:\012 GrpcGraph() {}\012\012 virtual ~GrpcGraph() {}\012\012 Status initialize(const std::string&amp; address,\012                      std::weak_ptr&lt;PrebuiltEngineInterface&gt; engineInterface);\012\012 // No copy or move constructors or operators are available.\012 GrpcGraph(const GrpcGraph&amp;) = delete;\012 GrpcGraph&amp; operator=(const GrpcGraph&amp;) = delete;\012\012 // Override RunnerComponent interface functions for applying configs,\012 // starting the graph and stopping the graph.\012 Status handleConfigPhase(const runner::ClientConfig&amp; e) override;\012 Status handleExecutionPhase(const runner::RunnerEvent&amp; e) override;\012 Status handleStopWithFlushPhase(const runner::RunnerEvent&amp; e) override;\012 Status handleStopImmediatePhase(const runner::RunnerEvent&amp; e) override;\012 Status handleResetPhase(const runner::RunnerEvent&amp; e) override;\012\012 PrebuiltGraphType GetGraphType() const override {\012 return PrebuiltGraphType::REMOTE;\012 }\012\012 PrebuiltGraphState GetGraphState() const override;\012 Status GetStatus() const override;\012    std::string GetErrorMessage() const override;\012\012 // Gets the supported graph config options.\012 const proto::Options&amp; GetSupportedGraphConfigs() const override {\012 return mGraphConfig;\012 }\012\012 // Sets input stream data. The string is expected to be a serialized proto\012 // the definition of which is known to the graph.\012 Status SetInputStreamData(int streamIndex, int64_t timestamp,\012 const std::string&amp; streamData) override;\012\012 // Sets pixel data to the specified input stream index.\012 Status SetInputStreamPixelData(int streamIndex, int64_t timestamp,\012 const runner::InputFrame&amp; inputFrame) override;\012\012 // Starts graph profiling at some point after starting the graph with profiling enabled.\012 Status StartGraphProfiling() override;\012\012 // Stops graph profiling.\012 Status StopGraphProfiling() override;\012\012 // Collects debugging and profiling information for the graph. The graph\012 // needs to be started with debugging enabled in order to get valid info.\012    std::string GetDebugInfo() override;\012\012 // Stream Graph interface\012    proto::GrpcGraphService::Stub* getServiceStub() override {\012 return mGraphStub.get();\012 }\012\012 void dispatchPixelData(int streamId, int64_t timestamp_us,\012 const runner::InputFrame&amp; frame) override;\012\012 void dispatchSerializedData(int streamId, int64_t timestamp_us,\012                                std::string&amp;&amp; serialized_data) override;\012\012 void dispatchGraphTerminationMessage(Status, std::string&amp;&amp;) override;\012 private:\012 mutable std::mutex mLock;\012\012 PrebuiltGraphState mGraphState = PrebuiltGraphState::UNINITIALIZED;\012\012 Status mStatus = Status::SUCCESS;\012\012    std::string mErrorMessage = &quot;&quot;;\012\012 // Cached callback interface that is passed in from the runner.\012    std::weak_ptr&lt;PrebuiltEngineInterface&gt; mEngineInterface;\012\012 // Cached graph config.\012    proto::Options mGraphConfig;\012\012    std::unique_ptr&lt;proto::GrpcGraphService::Stub&gt; mGraphStub;\012\012    std::unique_ptr&lt;StreamSetObserver&gt; mStreamSetObserver;\012};\012\012} // namespace graph\012} // namespace computepipe\012} // namespace automotive\012})<SUB>38</SUB>> ]
+"2037" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"2040" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+  "2039" -> "2040" 
+  "2037" -> "2039" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/77-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/77-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/77-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/77-cfg.dot	2023-06-09 11:35:02.436305192 +0330
@@ -1,57 +1,7 @@
-digraph "reportStreamClosed" {  
-"2001" [label = <(lock,lock(mLock))<SUB>177</SUB>> ]
-"2004" [label = <(&lt;operator&gt;.assignment,streamObserver = mStreamObservers.find(streamId))<SUB>178</SUB>> ]
-"2020" [label = <(erase,mStreamObservers.erase(streamObserver))<SUB>182</SUB>> ]
-"2006" [label = <(find,mStreamObservers.find(streamId))<SUB>178</SUB>> ]
-"2012" [label = <(&lt;operator&gt;.equals,streamObserver == mStreamObservers.end())<SUB>179</SUB>> ]
-"2021" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.erase)<SUB>182</SUB>> ]
-"2026" [label = <(empty,mStreamObservers.empty())<SUB>183</SUB>> ]
-"2007" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.find)<SUB>178</SUB>> ]
-"2014" [label = <(end,mStreamObservers.end())<SUB>179</SUB>> ]
-"2019" [label = <(RETURN,return;,return;)<SUB>180</SUB>> ]
-"2023" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>182</SUB>> ]
-"2027" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.empty)<SUB>183</SUB>> ]
-"2031" [label = <(&lt;operator&gt;.assignment,mStopped = true)<SUB>184</SUB>> ]
-"2034" [label = <(notify_one,mStoppedCv.notify_one())<SUB>185</SUB>> ]
-"2038" [label = <(&lt;operator&gt;.assignment,mGraphTerminationThread = std::thread([streamGraphInterface(mStreamGraphInterface)]() {\012            streamGraphInterface-&gt;dispatchGraphTerminationMessage(Status::SUCCESS, &quot;&quot;);\012 }))<SUB>186</SUB>> ]
-"2009" [label = <(FIELD_IDENTIFIER,find,find)<SUB>178</SUB>> ]
-"2015" [label = <(&lt;operator&gt;.fieldAccess,mStreamObservers.end)<SUB>179</SUB>> ]
-"2029" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>183</SUB>> ]
-"2035" [label = <(&lt;operator&gt;.fieldAccess,mStoppedCv.notify_one)<SUB>185</SUB>> ]
-"2040" [label = <(std::thread,std::thread([streamGraphInterface(mStreamGraphInterface)]() {\012            streamGraphInterface-&gt;dispatchGraphTerminationMessage(Status::SUCCESS, &quot;&quot;);\012 }))<SUB>186</SUB>> ]
-"2017" [label = <(FIELD_IDENTIFIER,end,end)<SUB>179</SUB>> ]
-"2037" [label = <(FIELD_IDENTIFIER,notify_one,notify_one)<SUB>185</SUB>> ]
-"2041" [label = <(&lt;operator&gt;.fieldAccess,std::thread)<SUB>186</SUB>> ]
-"2044" [label = <(METHOD_REF,ANY anonymous_lambda_4 (),std::thread([streamGraphInterface(mStreamGraphInterface)]() {\012            streamGraphInterface-&gt;dispatchGraphTerminationMessage(Status::SUCCESS, &quot;&quot;);\012 }))<SUB>186</SUB>> ]
-"2043" [label = <(FIELD_IDENTIFIER,thread,thread)<SUB>186</SUB>> ]
-"1997" [label = <(METHOD,reportStreamClosed)<SUB>176</SUB>> ]
-"2045" [label = <(METHOD_RETURN,void)<SUB>176</SUB>> ]
-  "2001" -> "2009" 
-  "2004" -> "2017" 
-  "2020" -> "2029" 
-  "2006" -> "2004" 
-  "2012" -> "2019" 
-  "2012" -> "2023" 
-  "2021" -> "2020" 
-  "2026" -> "2045" 
-  "2026" -> "2031" 
-  "2007" -> "2006" 
-  "2014" -> "2012" 
-  "2019" -> "2045" 
-  "2023" -> "2021" 
-  "2027" -> "2026" 
-  "2031" -> "2037" 
-  "2034" -> "2043" 
-  "2038" -> "2045" 
-  "2009" -> "2007" 
-  "2015" -> "2014" 
-  "2029" -> "2027" 
-  "2035" -> "2034" 
-  "2040" -> "2038" 
-  "2017" -> "2015" 
-  "2037" -> "2035" 
-  "2041" -> "2044" 
-  "2044" -> "2040" 
-  "2043" -> "2041" 
-  "1997" -> "2001" 
+digraph "&lt;global&gt;" {  
+"2045" [label = <(UNKNOWN,namespace android {\012namespace automotive {\012namespace computepipe {\012namespace graph {\012\012class GrpcGraph;\012\012class EndOfStreamReporter {\012 public:\012 virtual ~EndOfStreamReporter() = default;\012\012 virtual void reportStreamClosed(int streamId) = 0;\012};\012\012class StreamGraphInterface {\012 public:\012 virtual ~StreamGraphInterface() = default;\012\012 virtual void dispatchPixelData(int streamId, int64_t timestamp_us,\012 const runner::InputFrame&amp; frame) = 0;\012\012 virtual void dispatchSerializedData(int streamId, int64_t timestamp_us,\012                                        std::string&amp;&amp; serialized_data) = 0;\012\012 virtual void dispatchGraphTerminationMessage(Status, std::string&amp;&amp;) = 0;\012\012 virtual proto::GrpcGraphService::Stub* getServiceStub() = 0;\012};\012\012class SingleStreamObserver {\012 public:\012 SingleStreamObserver(int streamId, EndOfStreamReporter* endOfStreamReporter,\012 StreamGraphInterface* streamGraphInterface);\012\012 virtual ~SingleStreamObserver();\012\012 Status startObservingStream();\012\012 void stopObservingStream();\012 private:\012 int mStreamId;\012 EndOfStreamReporter* mEndOfStreamReporter;\012 StreamGraphInterface* mStreamGraphInterface;\012    std::thread mThread;\012 bool mStopped = true;\012    std::mutex mStopObservationLock;\012};\012\012class StreamSetObserver : public EndOfStreamReporter {\012 public:\012 StreamSetObserver(const runner::ClientConfig&amp; clientConfig,\012 StreamGraphInterface* streamGraphInterface);\012\012 Status startObservingStreams();\012\012 void stopObservingStreams(bool stopImmediately);\012\012 void reportStreamClosed(int streamId) override;\012 private:\012 const runner::ClientConfig&amp; mClientConfig;\012 StreamGraphInterface* mStreamGraphInterface;\012    std::map&lt;int, std::unique_ptr&lt;SingleStreamObserver&gt;&gt; mStreamObservers;\012    std::mutex mLock;\012    std::condition_variable mStoppedCv;\012 bool mStopped = true;\012};\012\012} // namespace graph\012} // namespace computepipe\012} // namespace automotive\012},namespace android {\012namespace automotive {\012namespace computepipe {\012namespace graph {\012\012class GrpcGraph;\012\012class EndOfStreamReporter {\012 public:\012 virtual ~EndOfStreamReporter() = default;\012\012 virtual void reportStreamClosed(int streamId) = 0;\012};\012\012class StreamGraphInterface {\012 public:\012 virtual ~StreamGraphInterface() = default;\012\012 virtual void dispatchPixelData(int streamId, int64_t timestamp_us,\012 const runner::InputFrame&amp; frame) = 0;\012\012 virtual void dispatchSerializedData(int streamId, int64_t timestamp_us,\012                                        std::string&amp;&amp; serialized_data) = 0;\012\012 virtual void dispatchGraphTerminationMessage(Status, std::string&amp;&amp;) = 0;\012\012 virtual proto::GrpcGraphService::Stub* getServiceStub() = 0;\012};\012\012class SingleStreamObserver {\012 public:\012 SingleStreamObserver(int streamId, EndOfStreamReporter* endOfStreamReporter,\012 StreamGraphInterface* streamGraphInterface);\012\012 virtual ~SingleStreamObserver();\012\012 Status startObservingStream();\012\012 void stopObservingStream();\012 private:\012 int mStreamId;\012 EndOfStreamReporter* mEndOfStreamReporter;\012 StreamGraphInterface* mStreamGraphInterface;\012    std::thread mThread;\012 bool mStopped = true;\012    std::mutex mStopObservationLock;\012};\012\012class StreamSetObserver : public EndOfStreamReporter {\012 public:\012 StreamSetObserver(const runner::ClientConfig&amp; clientConfig,\012 StreamGraphInterface* streamGraphInterface);\012\012 Status startObservingStreams();\012\012 void stopObservingStreams(bool stopImmediately);\012\012 void reportStreamClosed(int streamId) override;\012 private:\012 const runner::ClientConfig&amp; mClientConfig;\012 StreamGraphInterface* mStreamGraphInterface;\012    std::map&lt;int, std::unique_ptr&lt;SingleStreamObserver&gt;&gt; mStreamObservers;\012    std::mutex mLock;\012    std::condition_variable mStoppedCv;\012 bool mStopped = true;\012};\012\012} // namespace graph\012} // namespace computepipe\012} // namespace automotive\012})<SUB>31</SUB>> ]
+"2043" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"2046" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+  "2045" -> "2046" 
+  "2043" -> "2045" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/78-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/78-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/78-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/78-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,20 +1,5 @@
-digraph "~StreamSetObserver" {  
-"2050" [label = <(lock,lock(mLock))<SUB>193</SUB>> ]
-"2053" [label = <(joinable,mGraphTerminationThread.joinable())<SUB>194</SUB>> ]
-"2054" [label = <(&lt;operator&gt;.fieldAccess,mGraphTerminationThread.joinable)<SUB>194</SUB>> ]
-"2058" [label = <(join,mGraphTerminationThread.join())<SUB>195</SUB>> ]
-"2056" [label = <(FIELD_IDENTIFIER,joinable,joinable)<SUB>194</SUB>> ]
-"2059" [label = <(&lt;operator&gt;.fieldAccess,mGraphTerminationThread.join)<SUB>195</SUB>> ]
-"2061" [label = <(FIELD_IDENTIFIER,join,join)<SUB>195</SUB>> ]
-"2047" [label = <(METHOD,~StreamSetObserver)<SUB>192</SUB>> ]
-"2062" [label = <(METHOD_RETURN,ANY)<SUB>192</SUB>> ]
-  "2050" -> "2056" 
-  "2053" -> "2062" 
-  "2053" -> "2061" 
-  "2054" -> "2053" 
-  "2058" -> "2062" 
-  "2056" -> "2054" 
-  "2059" -> "2058" 
-  "2061" -> "2059" 
-  "2047" -> "2050" 
+digraph "&lt;global&gt;" {  
+"2094" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"2096" [label = <(METHOD_RETURN,ANY)> ]
+  "2094" -> "2096" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/79-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/79-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/79-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/79-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,7 +1,5 @@
-digraph "&lt;global&gt;" {  
-"2069" [label = <(UNKNOWN,namespace android {\012namespace automotive {\012namespace computepipe {\012namespace graph {\012\012class GrpcGraph : public PrebuiltGraph, public StreamGraphInterface {\012\012 public:\012 GrpcGraph() {}\012\012 virtual ~GrpcGraph();\012\012 Status initialize(const std::string&amp; address,\012                      std::weak_ptr&lt;PrebuiltEngineInterface&gt; engineInterface);\012\012 // No copy or move constructors or operators are available.\012 GrpcGraph(const GrpcGraph&amp;) = delete;\012 GrpcGraph&amp; operator=(const GrpcGraph&amp;) = delete;\012\012 // Override RunnerComponent interface functions for applying configs,\012 // starting the graph and stopping the graph.\012 Status handleConfigPhase(const runner::ClientConfig&amp; e) override;\012 Status handleExecutionPhase(const runner::RunnerEvent&amp; e) override;\012 Status handleStopWithFlushPhase(const runner::RunnerEvent&amp; e) override;\012 Status handleStopImmediatePhase(const runner::RunnerEvent&amp; e) override;\012 Status handleResetPhase(const runner::RunnerEvent&amp; e) override;\012\012 PrebuiltGraphType GetGraphType() const override {\012 return PrebuiltGraphType::REMOTE;\012 }\012\012 PrebuiltGraphState GetGraphState() const override;\012 Status GetStatus() const override;\012    std::string GetErrorMessage() const override;\012\012 // Gets the supported graph config options.\012 const proto::Options&amp; GetSupportedGraphConfigs() const override {\012 return mGraphConfig;\012 }\012\012 // Sets input stream data. The string is expected to be a serialized proto\012 // the definition of which is known to the graph.\012 Status SetInputStreamData(int streamIndex, int64_t timestamp,\012 const std::string&amp; streamData) override;\012\012 // Sets pixel data to the specified input stream index.\012 Status SetInputStreamPixelData(int streamIndex, int64_t timestamp,\012 const runner::InputFrame&amp; inputFrame) override;\012\012 // Starts graph profiling at some point after starting the graph with profiling enabled.\012 Status StartGraphProfiling() override;\012\012 // Stops graph profiling.\012 Status StopGraphProfiling() override;\012\012 // Collects debugging and profiling information for the graph. The graph\012 // needs to be started with debugging enabled in order to get valid info.\012    std::string GetDebugInfo() override;\012\012 // Stream Graph interface\012    proto::GrpcGraphService::Stub* getServiceStub() override {\012 return mGraphStub.get();\012 }\012\012 void dispatchPixelData(int streamId, int64_t timestamp_us,\012 const runner::InputFrame&amp; frame) override;\012\012 void dispatchSerializedData(int streamId, int64_t timestamp_us,\012                                std::string&amp;&amp; serialized_data) override;\012\012 void dispatchGraphTerminationMessage(Status, std::string&amp;&amp;) override;\012 private:\012 mutable std::mutex mLock;\012\012 PrebuiltGraphState mGraphState = PrebuiltGraphState::UNINITIALIZED;\012\012 Status mStatus = Status::SUCCESS;\012\012    std::string mErrorMessage = &quot;&quot;;\012\012 // Cached callback interface that is passed in from the runner.\012    std::weak_ptr&lt;PrebuiltEngineInterface&gt; mEngineInterface;\012\012 // Cached graph config.\012    proto::Options mGraphConfig;\012\012    std::unique_ptr&lt;proto::GrpcGraphService::Stub&gt; mGraphStub;\012\012    std::unique_ptr&lt;StreamSetObserver&gt; mStreamSetObserver;\012};\012\012} // namespace graph\012} // namespace computepipe\012} // namespace automotive\012},namespace android {\012namespace automotive {\012namespace computepipe {\012namespace graph {\012\012class GrpcGraph : public PrebuiltGraph, public StreamGraphInterface {\012\012 public:\012 GrpcGraph() {}\012\012 virtual ~GrpcGraph();\012\012 Status initialize(const std::string&amp; address,\012                      std::weak_ptr&lt;PrebuiltEngineInterface&gt; engineInterface);\012\012 // No copy or move constructors or operators are available.\012 GrpcGraph(const GrpcGraph&amp;) = delete;\012 GrpcGraph&amp; operator=(const GrpcGraph&amp;) = delete;\012\012 // Override RunnerComponent interface functions for applying configs,\012 // starting the graph and stopping the graph.\012 Status handleConfigPhase(const runner::ClientConfig&amp; e) override;\012 Status handleExecutionPhase(const runner::RunnerEvent&amp; e) override;\012 Status handleStopWithFlushPhase(const runner::RunnerEvent&amp; e) override;\012 Status handleStopImmediatePhase(const runner::RunnerEvent&amp; e) override;\012 Status handleResetPhase(const runner::RunnerEvent&amp; e) override;\012\012 PrebuiltGraphType GetGraphType() const override {\012 return PrebuiltGraphType::REMOTE;\012 }\012\012 PrebuiltGraphState GetGraphState() const override;\012 Status GetStatus() const override;\012    std::string GetErrorMessage() const override;\012\012 // Gets the supported graph config options.\012 const proto::Options&amp; GetSupportedGraphConfigs() const override {\012 return mGraphConfig;\012 }\012\012 // Sets input stream data. The string is expected to be a serialized proto\012 // the definition of which is known to the graph.\012 Status SetInputStreamData(int streamIndex, int64_t timestamp,\012 const std::string&amp; streamData) override;\012\012 // Sets pixel data to the specified input stream index.\012 Status SetInputStreamPixelData(int streamIndex, int64_t timestamp,\012 const runner::InputFrame&amp; inputFrame) override;\012\012 // Starts graph profiling at some point after starting the graph with profiling enabled.\012 Status StartGraphProfiling() override;\012\012 // Stops graph profiling.\012 Status StopGraphProfiling() override;\012\012 // Collects debugging and profiling information for the graph. The graph\012 // needs to be started with debugging enabled in order to get valid info.\012    std::string GetDebugInfo() override;\012\012 // Stream Graph interface\012    proto::GrpcGraphService::Stub* getServiceStub() override {\012 return mGraphStub.get();\012 }\012\012 void dispatchPixelData(int streamId, int64_t timestamp_us,\012 const runner::InputFrame&amp; frame) override;\012\012 void dispatchSerializedData(int streamId, int64_t timestamp_us,\012                                std::string&amp;&amp; serialized_data) override;\012\012 void dispatchGraphTerminationMessage(Status, std::string&amp;&amp;) override;\012 private:\012 mutable std::mutex mLock;\012\012 PrebuiltGraphState mGraphState = PrebuiltGraphState::UNINITIALIZED;\012\012 Status mStatus = Status::SUCCESS;\012\012    std::string mErrorMessage = &quot;&quot;;\012\012 // Cached callback interface that is passed in from the runner.\012    std::weak_ptr&lt;PrebuiltEngineInterface&gt; mEngineInterface;\012\012 // Cached graph config.\012    proto::Options mGraphConfig;\012\012    std::unique_ptr&lt;proto::GrpcGraphService::Stub&gt; mGraphStub;\012\012    std::unique_ptr&lt;StreamSetObserver&gt; mStreamSetObserver;\012};\012\012} // namespace graph\012} // namespace computepipe\012} // namespace automotive\012})<SUB>38</SUB>> ]
-"2067" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"2070" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
-  "2069" -> "2070" 
-  "2067" -> "2069" 
+digraph "&lt;operator&gt;.assignment" {  
+"2148" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
+"2152" [label = <(METHOD_RETURN,ANY)> ]
+  "2148" -> "2152" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/8-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/8-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/8-cfg.dot	2023-06-09 11:34:58.476305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/8-cfg.dot	2023-06-09 11:35:02.316305191 +0330
@@ -1,5 +1,5 @@
-digraph "handleStopImmediatePhase" {  
-"47" [label = <(METHOD,handleStopImmediatePhase)<SUB>62</SUB>> ]
-"50" [label = <(METHOD_RETURN,Status)<SUB>62</SUB>> ]
-  "47" -> "50" 
+digraph "~SingleStreamObserver" {  
+"55" [label = <(METHOD,~SingleStreamObserver)<SUB>65</SUB>> ]
+"57" [label = <(METHOD_RETURN,virtual)<SUB>65</SUB>> ]
+  "55" -> "57" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/80-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/80-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/80-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/80-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,7 +1,5 @@
-digraph "&lt;global&gt;" {  
-"2075" [label = <(UNKNOWN,namespace android {\012namespace automotive {\012namespace computepipe {\012namespace graph {\012\012class GrpcGraph;\012\012class EndOfStreamReporter {\012 public:\012 virtual ~EndOfStreamReporter() = default;\012\012 virtual void reportStreamClosed(int streamId) = 0;\012};\012\012class StreamGraphInterface {\012 public:\012 virtual ~StreamGraphInterface() = default;\012\012 virtual void dispatchPixelData(int streamId, int64_t timestamp_us,\012 const runner::InputFrame&amp; frame) = 0;\012\012 virtual void dispatchSerializedData(int streamId, int64_t timestamp_us,\012                                        std::string&amp;&amp; serialized_data) = 0;\012\012 virtual void dispatchGraphTerminationMessage(Status, std::string&amp;&amp;) = 0;\012\012 virtual proto::GrpcGraphService::Stub* getServiceStub() = 0;\012};\012\012class SingleStreamObserver {\012 public:\012 SingleStreamObserver(int streamId, EndOfStreamReporter* endOfStreamReporter,\012 StreamGraphInterface* streamGraphInterface);\012\012 virtual ~SingleStreamObserver();\012\012 Status startObservingStream();\012\012 void stopObservingStream();\012 private:\012 int mStreamId;\012 EndOfStreamReporter* mEndOfStreamReporter;\012 StreamGraphInterface* mStreamGraphInterface;\012    std::thread mThread;\012 bool mStopped = true;\012    std::mutex mStopObservationLock;\012};\012\012class StreamSetObserver : public EndOfStreamReporter {\012 public:\012 virtual ~StreamSetObserver();\012\012 StreamSetObserver(const runner::ClientConfig&amp; clientConfig,\012 StreamGraphInterface* streamGraphInterface);\012\012 Status startObservingStreams();\012\012 void stopObservingStreams(bool stopImmediately);\012\012 void reportStreamClosed(int streamId) override;\012 private:\012 const runner::ClientConfig&amp; mClientConfig;\012 StreamGraphInterface* mStreamGraphInterface;\012    std::map&lt;int, std::unique_ptr&lt;SingleStreamObserver&gt;&gt; mStreamObservers;\012    std::mutex mLock;\012    std::condition_variable mStoppedCv;\012    std::thread mGraphTerminationThread;\012 bool mStopped = true;\012};\012\012} // namespace graph\012} // namespace computepipe\012} // namespace automotive\012},namespace android {\012namespace automotive {\012namespace computepipe {\012namespace graph {\012\012class GrpcGraph;\012\012class EndOfStreamReporter {\012 public:\012 virtual ~EndOfStreamReporter() = default;\012\012 virtual void reportStreamClosed(int streamId) = 0;\012};\012\012class StreamGraphInterface {\012 public:\012 virtual ~StreamGraphInterface() = default;\012\012 virtual void dispatchPixelData(int streamId, int64_t timestamp_us,\012 const runner::InputFrame&amp; frame) = 0;\012\012 virtual void dispatchSerializedData(int streamId, int64_t timestamp_us,\012                                        std::string&amp;&amp; serialized_data) = 0;\012\012 virtual void dispatchGraphTerminationMessage(Status, std::string&amp;&amp;) = 0;\012\012 virtual proto::GrpcGraphService::Stub* getServiceStub() = 0;\012};\012\012class SingleStreamObserver {\012 public:\012 SingleStreamObserver(int streamId, EndOfStreamReporter* endOfStreamReporter,\012 StreamGraphInterface* streamGraphInterface);\012\012 virtual ~SingleStreamObserver();\012\012 Status startObservingStream();\012\012 void stopObservingStream();\012 private:\012 int mStreamId;\012 EndOfStreamReporter* mEndOfStreamReporter;\012 StreamGraphInterface* mStreamGraphInterface;\012    std::thread mThread;\012 bool mStopped = true;\012    std::mutex mStopObservationLock;\012};\012\012class StreamSetObserver : public EndOfStreamReporter {\012 public:\012 virtual ~StreamSetObserver();\012\012 StreamSetObserver(const runner::ClientConfig&amp; clientConfig,\012 StreamGraphInterface* streamGraphInterface);\012\012 Status startObservingStreams();\012\012 void stopObservingStreams(bool stopImmediately);\012\012 void reportStreamClosed(int streamId) override;\012 private:\012 const runner::ClientConfig&amp; mClientConfig;\012 StreamGraphInterface* mStreamGraphInterface;\012    std::map&lt;int, std::unique_ptr&lt;SingleStreamObserver&gt;&gt; mStreamObservers;\012    std::mutex mLock;\012    std::condition_variable mStoppedCv;\012    std::thread mGraphTerminationThread;\012 bool mStopped = true;\012};\012\012} // namespace graph\012} // namespace computepipe\012} // namespace automotive\012})<SUB>31</SUB>> ]
-"2073" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"2076" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
-  "2075" -> "2076" 
-  "2073" -> "2075" 
+digraph "rand" {  
+"2153" [label = <(METHOD,rand)> ]
+"2155" [label = <(METHOD_RETURN,ANY)> ]
+  "2153" -> "2155" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/81-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/81-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/81-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/81-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;global&gt;" {  
-"2124" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"2126" [label = <(METHOD_RETURN,ANY)> ]
-  "2124" -> "2126" 
+digraph "Finish" {  
+"2156" [label = <(METHOD,Finish)> ]
+"2162" [label = <(METHOD_RETURN,ANY)> ]
+  "2156" -> "2162" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/82-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/82-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/82-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/82-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.fieldAccess" {  
-"2178" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
-"2182" [label = <(METHOD_RETURN,ANY)> ]
-  "2178" -> "2182" 
+digraph "&lt;operator&gt;.indirectFieldAccess" {  
+"2163" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
+"2167" [label = <(METHOD_RETURN,ANY)> ]
+  "2163" -> "2167" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/83-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/83-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/83-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/83-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "get" {  
-"2183" [label = <(METHOD,get)> ]
-"2186" [label = <(METHOD_RETURN,ANY)> ]
-  "2183" -> "2186" 
+digraph "&lt;operator&gt;.addressOf" {  
+"2168" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
+"2171" [label = <(METHOD_RETURN,ANY)> ]
+  "2168" -> "2171" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/84-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/84-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/84-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/84-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.assignment" {  
-"2187" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
-"2191" [label = <(METHOD_RETURN,ANY)> ]
-  "2187" -> "2191" 
+digraph "&lt;operator&gt;.cast" {  
+"2172" [label = <(METHOD,&lt;operator&gt;.cast)> ]
+"2176" [label = <(METHOD_RETURN,ANY)> ]
+  "2172" -> "2176" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/85-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/85-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/85-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/85-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "rand" {  
-"2192" [label = <(METHOD,rand)> ]
-"2194" [label = <(METHOD_RETURN,ANY)> ]
-  "2192" -> "2194" 
+digraph "&lt;operator&gt;.logicalNot" {  
+"2177" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
+"2180" [label = <(METHOD_RETURN,ANY)> ]
+  "2177" -> "2180" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/86-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/86-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/86-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/86-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "Finish" {  
-"2195" [label = <(METHOD,Finish)> ]
-"2201" [label = <(METHOD_RETURN,ANY)> ]
-  "2195" -> "2201" 
+digraph "Next" {  
+"2181" [label = <(METHOD,Next)> ]
+"2186" [label = <(METHOD_RETURN,ANY)> ]
+  "2181" -> "2186" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/87-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/87-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/87-cfg.dot	2023-06-09 11:34:58.596305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/87-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.indirectFieldAccess" {  
-"2202" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
-"2206" [label = <(METHOD_RETURN,ANY)> ]
-  "2202" -> "2206" 
+digraph "&lt;operator&gt;.shiftLeft" {  
+"2187" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
+"2191" [label = <(METHOD_RETURN,ANY)> ]
+  "2187" -> "2191" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/88-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/88-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/88-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/88-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.addressOf" {  
-"2207" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
-"2210" [label = <(METHOD_RETURN,ANY)> ]
-  "2207" -> "2210" 
+digraph "LOG" {  
+"2192" [label = <(METHOD,LOG)> ]
+"2195" [label = <(METHOD_RETURN,ANY)> ]
+  "2192" -> "2195" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/89-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/89-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/89-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/89-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.cast" {  
-"2211" [label = <(METHOD,&lt;operator&gt;.cast)> ]
-"2215" [label = <(METHOD_RETURN,ANY)> ]
-  "2211" -> "2215" 
+digraph "std::pair" {  
+"2196" [label = <(METHOD,std::pair)> ]
+"2201" [label = <(METHOD_RETURN,ANY)> ]
+  "2196" -> "2201" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/9-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/9-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/9-cfg.dot	2023-06-09 11:34:58.476305149 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/9-cfg.dot	2023-06-09 11:35:02.326305191 +0330
@@ -1,5 +1,5 @@
-digraph "handleResetPhase" {  
-"52" [label = <(METHOD,handleResetPhase)<SUB>63</SUB>> ]
-"55" [label = <(METHOD_RETURN,Status)<SUB>63</SUB>> ]
-  "52" -> "55" 
+digraph "startObservingStream" {  
+"59" [label = <(METHOD,startObservingStream)<SUB>67</SUB>> ]
+"61" [label = <(METHOD_RETURN,Status)<SUB>67</SUB>> ]
+  "59" -> "61" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/90-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/90-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/90-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/90-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.logicalNot" {  
-"2216" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
-"2219" [label = <(METHOD_RETURN,ANY)> ]
-  "2216" -> "2219" 
+digraph "&lt;operator&gt;.fieldAccess" {  
+"2202" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
+"2206" [label = <(METHOD_RETURN,ANY)> ]
+  "2202" -> "2206" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/91-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/91-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/91-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/91-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "Next" {  
-"2220" [label = <(METHOD,Next)> ]
-"2225" [label = <(METHOD_RETURN,ANY)> ]
-  "2220" -> "2225" 
+digraph "CHECK_EQ" {  
+"2207" [label = <(METHOD,CHECK_EQ)> ]
+"2211" [label = <(METHOD_RETURN,ANY)> ]
+  "2207" -> "2211" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/92-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/92-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/92-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/92-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.shiftLeft" {  
-"2226" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
-"2230" [label = <(METHOD_RETURN,ANY)> ]
-  "2226" -> "2230" 
+digraph "ok" {  
+"2212" [label = <(METHOD,ok)> ]
+"2215" [label = <(METHOD_RETURN,ANY)> ]
+  "2212" -> "2215" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/93-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/93-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/93-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/93-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "LOG" {  
-"2231" [label = <(METHOD,LOG)> ]
-"2234" [label = <(METHOD_RETURN,ANY)> ]
-  "2231" -> "2234" 
+digraph "&lt;operator&gt;.addition" {  
+"2216" [label = <(METHOD,&lt;operator&gt;.addition)> ]
+"2220" [label = <(METHOD_RETURN,ANY)> ]
+  "2216" -> "2220" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/94-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/94-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/94-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/94-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "std::pair" {  
-"2235" [label = <(METHOD,std::pair)> ]
-"2240" [label = <(METHOD_RETURN,ANY)> ]
-  "2235" -> "2240" 
+digraph "std::string" {  
+"2221" [label = <(METHOD,std::string)> ]
+"2225" [label = <(METHOD_RETURN,ANY)> ]
+  "2221" -> "2225" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/95-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/95-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/95-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/95-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_EQ" {  
-"2241" [label = <(METHOD,CHECK_EQ)> ]
-"2245" [label = <(METHOD_RETURN,ANY)> ]
-  "2241" -> "2245" 
+digraph "error_message" {  
+"2226" [label = <(METHOD,error_message)> ]
+"2229" [label = <(METHOD_RETURN,ANY)> ]
+  "2226" -> "2229" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/96-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/96-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/96-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/96-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "ok" {  
-"2246" [label = <(METHOD,ok)> ]
-"2249" [label = <(METHOD_RETURN,ANY)> ]
-  "2246" -> "2249" 
+digraph "std::move" {  
+"2230" [label = <(METHOD,std::move)> ]
+"2234" [label = <(METHOD_RETURN,ANY)> ]
+  "2230" -> "2234" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/97-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/97-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/97-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/97-cfg.dot	2023-06-09 11:35:02.446305192 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.addition" {  
-"2250" [label = <(METHOD,&lt;operator&gt;.addition)> ]
-"2254" [label = <(METHOD_RETURN,ANY)> ]
-  "2250" -> "2254" 
+digraph "lock" {  
+"2235" [label = <(METHOD,lock)> ]
+"2238" [label = <(METHOD_RETURN,ANY)> ]
+  "2235" -> "2238" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/98-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/98-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/98-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/98-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "std::string" {  
-"2255" [label = <(METHOD,std::string)> ]
-"2259" [label = <(METHOD_RETURN,ANY)> ]
-  "2255" -> "2259" 
+digraph "&lt;operator&gt;.greaterThan" {  
+"2239" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
+"2243" [label = <(METHOD_RETURN,ANY)> ]
+  "2239" -> "2243" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/99-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/99-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/secure/out/99-cfg.dot	2023-06-09 11:34:58.606305150 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0303_1/vulnerable/out/99-cfg.dot	2023-06-09 11:35:02.456305192 +0330
@@ -1,5 +1,5 @@
-digraph "error_message" {  
-"2260" [label = <(METHOD,error_message)> ]
-"2263" [label = <(METHOD_RETURN,ANY)> ]
-  "2260" -> "2263" 
+digraph "&lt;operator&gt;.lessThan" {  
+"2244" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
+"2248" [label = <(METHOD_RETURN,ANY)> ]
+  "2244" -> "2248" 
 }

diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/0-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/0-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/0-cfg.dot	2023-06-07 19:39:46.397365122 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/0-cfg.dot	2023-06-07 19:39:50.427364765 +0330
@@ -1,8 +1,8 @@
 digraph "CryptoPlugin" {  
-"23" [label = <(&lt;operator&gt;.assignment,mInitStatus = setMediaDrmSession(sessionId))<SUB>61</SUB>> ]
-"25" [label = <(setMediaDrmSession,setMediaDrmSession(sessionId))<SUB>61</SUB>> ]
-"20" [label = <(METHOD,CryptoPlugin)<SUB>60</SUB>> ]
-"27" [label = <(METHOD_RETURN,ANY)<SUB>60</SUB>> ]
+"23" [label = <(&lt;operator&gt;.assignment,mInitStatus = setMediaDrmSession(sessionId))<SUB>59</SUB>> ]
+"25" [label = <(setMediaDrmSession,setMediaDrmSession(sessionId))<SUB>59</SUB>> ]
+"20" [label = <(METHOD,CryptoPlugin)<SUB>58</SUB>> ]
+"27" [label = <(METHOD_RETURN,ANY)<SUB>58</SUB>> ]
   "23" -> "27" 
   "25" -> "23" 
   "20" -> "25" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/1-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/1-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/1-cfg.dot	2023-06-07 19:39:46.397365122 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/1-cfg.dot	2023-06-07 19:39:50.427364765 +0330
@@ -1,5 +1,5 @@
 digraph "~CryptoPlugin" {  
-"29" [label = <(METHOD,~CryptoPlugin)<SUB>63</SUB>> ]
-"31" [label = <(METHOD_RETURN,ANY)<SUB>63</SUB>> ]
+"29" [label = <(METHOD,~CryptoPlugin)<SUB>61</SUB>> ]
+"31" [label = <(METHOD_RETURN,ANY)<SUB>61</SUB>> ]
   "29" -> "31" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/10-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/10-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/10-cfg.dot	2023-06-07 19:39:46.407365120 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/10-cfg.dot	2023-06-07 19:39:50.447364762 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;global&gt;" {  
-"114" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"799" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
-  "114" -> "799" 
+"112" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"773" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+  "112" -> "773" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/11-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/11-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/11-cfg.dot	2023-06-07 19:39:46.417365118 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/11-cfg.dot	2023-06-07 19:39:50.447364762 +0330
@@ -1,39 +1,25 @@
 digraph "setSharedBufferBase" {  
-"125" [label = <(&lt;operator&gt;.assignment,sp&lt;IMemory&gt; hidlMemory = mapMemory(base))<SUB>37</SUB>> ]
-"133" [label = <(ALOGE_IF,ALOGE_IF(hidlMemory == nullptr, &quot;mapMemory returns nullptr&quot;))<SUB>38</SUB>> ]
-"138" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; shared_buffer_lock(mSharedBufferLock))<SUB>40</SUB>> ]
-"148" [label = <(&lt;operator&gt;.assignment,mSharedBufferMap[bufferId] = hidlMemory)<SUB>43</SUB>> ]
-"153" [label = <(RETURN,return Void();,return Void();)<SUB>44</SUB>> ]
-"126" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IMemory&gt; hidlMemory)<SUB>37</SUB>> ]
-"131" [label = <(mapMemory,mapMemory(base))<SUB>37</SUB>> ]
-"134" [label = <(&lt;operator&gt;.equals,hidlMemory == nullptr)<SUB>38</SUB>> ]
-"139" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>40</SUB>> ]
-"146" [label = <(shared_buffer_lock,shared_buffer_lock(mSharedBufferLock))<SUB>40</SUB>> ]
-"149" [label = <(&lt;operator&gt;.indirectIndexAccess,mSharedBufferMap[bufferId])<SUB>43</SUB>> ]
-"154" [label = <(Void,Void())<SUB>44</SUB>> ]
-"127" [label = <(&lt;operator&gt;.lessThan,sp&lt;IMemory)<SUB>37</SUB>> ]
-"140" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>40</SUB>> ]
-"143" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>40</SUB>> ]
-"142" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>40</SUB>> ]
-"145" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>40</SUB>> ]
-"121" [label = <(METHOD,setSharedBufferBase)<SUB>35</SUB>> ]
-"155" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>35</SUB>> ]
-  "125" -> "134" 
-  "133" -> "142" 
-  "138" -> "149" 
-  "148" -> "154" 
-  "153" -> "155" 
-  "126" -> "131" 
-  "131" -> "125" 
-  "134" -> "133" 
-  "139" -> "146" 
-  "146" -> "138" 
-  "149" -> "148" 
-  "154" -> "153" 
-  "127" -> "126" 
-  "140" -> "145" 
-  "143" -> "139" 
-  "142" -> "140" 
-  "145" -> "143" 
-  "121" -> "127" 
+"123" [label = <(&lt;operator&gt;.assignment,sp&lt;IMemory&gt; hidlMemory = mapMemory(base))<SUB>37</SUB>> ]
+"131" [label = <(ALOGE_IF,ALOGE_IF(hidlMemory == nullptr, &quot;mapMemory returns nullptr&quot;))<SUB>38</SUB>> ]
+"136" [label = <(&lt;operator&gt;.assignment,mSharedBufferMap[bufferId] = hidlMemory)<SUB>41</SUB>> ]
+"141" [label = <(RETURN,return Void();,return Void();)<SUB>42</SUB>> ]
+"124" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IMemory&gt; hidlMemory)<SUB>37</SUB>> ]
+"129" [label = <(mapMemory,mapMemory(base))<SUB>37</SUB>> ]
+"132" [label = <(&lt;operator&gt;.equals,hidlMemory == nullptr)<SUB>38</SUB>> ]
+"137" [label = <(&lt;operator&gt;.indirectIndexAccess,mSharedBufferMap[bufferId])<SUB>41</SUB>> ]
+"142" [label = <(Void,Void())<SUB>42</SUB>> ]
+"125" [label = <(&lt;operator&gt;.lessThan,sp&lt;IMemory)<SUB>37</SUB>> ]
+"119" [label = <(METHOD,setSharedBufferBase)<SUB>35</SUB>> ]
+"143" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>35</SUB>> ]
+  "123" -> "132" 
+  "131" -> "137" 
+  "136" -> "142" 
+  "141" -> "143" 
+  "124" -> "129" 
+  "129" -> "123" 
+  "132" -> "131" 
+  "137" -> "136" 
+  "142" -> "141" 
+  "125" -> "124" 
+  "119" -> "125" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/12-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/12-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/12-cfg.dot	2023-06-07 19:39:46.417365118 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/12-cfg.dot	2023-06-07 19:39:50.457364763 +0330
@@ -1,40 +1,40 @@
 digraph "decrypt" {  
-"170" [label = <(&lt;operator&gt;.assignment,status = Status::ERROR_DRM_UNKNOWN)<SUB>59</SUB>> ]
-"177" [label = <(&lt;operator&gt;.assignment,bytesWritten = 0)<SUB>61</SUB>> ]
-"181" [label = <(&lt;operator&gt;.assignment,hResult = decrypt_1_2(\012      secure, keyId, iv, mode, pattern, subSamples, source, offset, destination,\012 [&amp;](Status_V1_2 hStatus, uint32_t hBytesWritten, hidl_string hDetailedError) {\012        status = toStatus_1_0(hStatus);\012        bytesWritten = hBytesWritten;\012        detailedError = hDetailedError;\012 }\012 ))<SUB>63</SUB>> ]
-"194" [label = <(&lt;operator&gt;.assignment,status = hResult.isOk() ? status : Status::ERROR_DRM_CANNOT_HANDLE)<SUB>72</SUB>> ]
-"205" [label = <(_hidl_cb,_hidl_cb(status, bytesWritten, detailedError))<SUB>73</SUB>> ]
-"209" [label = <(RETURN,return Void();,return Void();)<SUB>74</SUB>> ]
-"172" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_UNKNOWN)<SUB>59</SUB>> ]
-"183" [label = <(decrypt_1_2,decrypt_1_2(\012      secure, keyId, iv, mode, pattern, subSamples, source, offset, destination,\012 [&amp;](Status_V1_2 hStatus, uint32_t hBytesWritten, hidl_string hDetailedError) {\012        status = toStatus_1_0(hStatus);\012        bytesWritten = hBytesWritten;\012        detailedError = hDetailedError;\012 }\012 ))<SUB>63</SUB>> ]
-"196" [label = <(&lt;operator&gt;.conditional,hResult.isOk() ? status : Status::ERROR_DRM_CANNOT_HANDLE)<SUB>72</SUB>> ]
-"210" [label = <(Void,Void())<SUB>74</SUB>> ]
-"174" [label = <(FIELD_IDENTIFIER,ERROR_DRM_UNKNOWN,ERROR_DRM_UNKNOWN)<SUB>59</SUB>> ]
-"193" [label = <(METHOD_REF,ANY anonymous_lambda_1 (Status_V1_2 hStatus,uint32_t hBytesWritten,hidl_string hDetailedError),decrypt_1_2(\012      secure, keyId, iv, mode, pattern, subSamples, source, offset, destination,\012 [&amp;](Status_V1_2 hStatus, uint32_t hBytesWritten, hidl_string hDetailedError) {\012        status = toStatus_1_0(hStatus);\012        bytesWritten = hBytesWritten;\012        detailedError = hDetailedError;\012 }\012 ))<SUB>65</SUB>> ]
-"197" [label = <(isOk,hResult.isOk())<SUB>72</SUB>> ]
-"202" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_CANNOT_HANDLE)<SUB>72</SUB>> ]
-"198" [label = <(&lt;operator&gt;.fieldAccess,hResult.isOk)<SUB>72</SUB>> ]
-"204" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>72</SUB>> ]
-"200" [label = <(FIELD_IDENTIFIER,isOk,isOk)<SUB>72</SUB>> ]
-"157" [label = <(METHOD,decrypt)<SUB>47</SUB>> ]
-"211" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>47</SUB>> ]
-  "170" -> "177" 
-  "177" -> "193" 
-  "181" -> "200" 
-  "194" -> "205" 
-  "205" -> "210" 
-  "209" -> "211" 
-  "172" -> "170" 
-  "183" -> "181" 
-  "196" -> "194" 
-  "210" -> "209" 
-  "174" -> "172" 
-  "193" -> "183" 
-  "197" -> "196" 
-  "197" -> "204" 
-  "202" -> "196" 
+"158" [label = <(&lt;operator&gt;.assignment,status = Status::ERROR_DRM_UNKNOWN)<SUB>57</SUB>> ]
+"165" [label = <(&lt;operator&gt;.assignment,bytesWritten = 0)<SUB>59</SUB>> ]
+"169" [label = <(&lt;operator&gt;.assignment,hResult = decrypt_1_2(\012      secure, keyId, iv, mode, pattern, subSamples, source, offset, destination,\012 [&amp;](Status_V1_2 hStatus, uint32_t hBytesWritten, hidl_string hDetailedError) {\012        status = toStatus_1_0(hStatus);\012        bytesWritten = hBytesWritten;\012        detailedError = hDetailedError;\012 }\012 ))<SUB>61</SUB>> ]
+"182" [label = <(&lt;operator&gt;.assignment,status = hResult.isOk() ? status : Status::ERROR_DRM_CANNOT_HANDLE)<SUB>70</SUB>> ]
+"193" [label = <(_hidl_cb,_hidl_cb(status, bytesWritten, detailedError))<SUB>71</SUB>> ]
+"197" [label = <(RETURN,return Void();,return Void();)<SUB>72</SUB>> ]
+"160" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_UNKNOWN)<SUB>57</SUB>> ]
+"171" [label = <(decrypt_1_2,decrypt_1_2(\012      secure, keyId, iv, mode, pattern, subSamples, source, offset, destination,\012 [&amp;](Status_V1_2 hStatus, uint32_t hBytesWritten, hidl_string hDetailedError) {\012        status = toStatus_1_0(hStatus);\012        bytesWritten = hBytesWritten;\012        detailedError = hDetailedError;\012 }\012 ))<SUB>61</SUB>> ]
+"184" [label = <(&lt;operator&gt;.conditional,hResult.isOk() ? status : Status::ERROR_DRM_CANNOT_HANDLE)<SUB>70</SUB>> ]
+"198" [label = <(Void,Void())<SUB>72</SUB>> ]
+"162" [label = <(FIELD_IDENTIFIER,ERROR_DRM_UNKNOWN,ERROR_DRM_UNKNOWN)<SUB>57</SUB>> ]
+"181" [label = <(METHOD_REF,ANY anonymous_lambda_1 (Status_V1_2 hStatus,uint32_t hBytesWritten,hidl_string hDetailedError),decrypt_1_2(\012      secure, keyId, iv, mode, pattern, subSamples, source, offset, destination,\012 [&amp;](Status_V1_2 hStatus, uint32_t hBytesWritten, hidl_string hDetailedError) {\012        status = toStatus_1_0(hStatus);\012        bytesWritten = hBytesWritten;\012        detailedError = hDetailedError;\012 }\012 ))<SUB>63</SUB>> ]
+"185" [label = <(isOk,hResult.isOk())<SUB>70</SUB>> ]
+"190" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_CANNOT_HANDLE)<SUB>70</SUB>> ]
+"186" [label = <(&lt;operator&gt;.fieldAccess,hResult.isOk)<SUB>70</SUB>> ]
+"192" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>70</SUB>> ]
+"188" [label = <(FIELD_IDENTIFIER,isOk,isOk)<SUB>70</SUB>> ]
+"145" [label = <(METHOD,decrypt)<SUB>45</SUB>> ]
+"199" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>45</SUB>> ]
+  "158" -> "165" 
+  "165" -> "181" 
+  "169" -> "188" 
+  "182" -> "193" 
+  "193" -> "198" 
+  "197" -> "199" 
+  "160" -> "158" 
+  "171" -> "169" 
+  "184" -> "182" 
   "198" -> "197" 
-  "204" -> "202" 
-  "200" -> "198" 
-  "157" -> "174" 
+  "162" -> "160" 
+  "181" -> "171" 
+  "185" -> "184" 
+  "185" -> "192" 
+  "190" -> "184" 
+  "186" -> "185" 
+  "192" -> "190" 
+  "188" -> "186" 
+  "145" -> "162" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/13-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/13-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/13-cfg.dot	2023-06-07 19:39:46.447365115 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/13-cfg.dot	2023-06-07 19:39:50.487364760 +0330
@@ -1,598 +1,578 @@
 digraph "decrypt_1_2" {  
-"225" [label = <(UNUSED,UNUSED(pattern))<SUB>91</SUB>> ]
-"238" [label = <(&lt;operator&gt;.greaterThan,std::unique_lock&lt;std::mutex&gt; shared_buffer_lock(mSharedBufferLock))<SUB>99</SUB>> ]
-"317" [label = <(&lt;operator&gt;.assignment,sp&lt;IMemory&gt; sourceBase = mSharedBufferMap[source.bufferId])<SUB>119</SUB>> ]
-"342" [label = <(&lt;operator&gt;.assignment,totalSize = 0)<SUB>125</SUB>> ]
-"381" [label = <(&lt;operator&gt;.assignment,*base = static_cast&lt;uint8_t *&gt;\012 (static_cast&lt;void *&gt;(sourceBase-&gt;getPointer())))<SUB>134</SUB>> ]
-"392" [label = <(&lt;operator&gt;.assignment,* srcPtr = static_cast&lt;uint8_t *&gt;(base + source.offset + offset))<SUB>136</SUB>> ]
-"404" [label = <(&lt;operator&gt;.assignment,* destPtr = NULL)<SUB>137</SUB>> ]
-"408" [label = <(&lt;operator&gt;.assignment,&amp; destBuffer = destination.nonsecureMemory)<SUB>139</SUB>> ]
-"413" [label = <(&lt;operator&gt;.assignment,sp&lt;IMemory&gt; destBase = mSharedBufferMap[destBuffer.bufferId])<SUB>140</SUB>> ]
-"437" [label = <(&lt;operator&gt;.assignment,base = static_cast&lt;uint8_t *&gt;(static_cast&lt;void *&gt;(destBase-&gt;getPointer())))<SUB>146</SUB>> ]
-"447" [label = <(&lt;operator&gt;.assignment,totalSize = 0)<SUB>148</SUB>> ]
-"479" [label = <(&lt;operator&gt;.assignment,destPtr = static_cast&lt;void*&gt;(base + destination.nonsecureMemory.offset))<SUB>155</SUB>> ]
-"490" [label = <(unlock,shared_buffer_lock.unlock())<SUB>158</SUB>> ]
-"495" [label = <(&lt;operator&gt;.assignment,destSize = 0)<SUB>162</SUB>> ]
-"499" [label = <(&lt;operator&gt;.assignment,srcSize = 0)<SUB>163</SUB>> ]
-"503" [label = <(&lt;operator&gt;.assignment,haveEncryptedSubsamples = false)<SUB>164</SUB>> ]
-"239" [label = <(&lt;operator&gt;.lessThan,std::unique_lock&lt;std::mutex)<SUB>99</SUB>> ]
-"246" [label = <(shared_buffer_lock,shared_buffer_lock(mSharedBufferLock))<SUB>99</SUB>> ]
-"249" [label = <(&lt;operator&gt;.equals,mSharedBufferMap.find(source.bufferId) == mSharedBufferMap.end())<SUB>100</SUB>> ]
-"271" [label = <(&lt;operator&gt;.equals,destination.type == BufferType::SHARED_MEMORY)<SUB>106</SUB>> ]
-"318" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IMemory&gt; sourceBase)<SUB>119</SUB>> ]
-"323" [label = <(&lt;operator&gt;.indirectIndexAccess,mSharedBufferMap[source.bufferId])<SUB>119</SUB>> ]
-"329" [label = <(&lt;operator&gt;.equals,sourceBase == nullptr)<SUB>120</SUB>> ]
-"346" [label = <(&lt;operator&gt;.logicalOr,__builtin_add_overflow(source.offset, offset, &amp;totalSize) ||\012        __builtin_add_overflow(totalSize, source.size, &amp;totalSize) ||\012        totalSize &gt; sourceBase-&gt;getSize())<SUB>126</SUB>> ]
-"383" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint8_t *&gt;\012 (static_cast&lt;void *&gt;(sourceBase-&gt;getPointer())))<SUB>134</SUB>> ]
-"394" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint8_t *&gt;(base + source.offset + offset))<SUB>136</SUB>> ]
-"410" [label = <(&lt;operator&gt;.fieldAccess,destination.nonsecureMemory)<SUB>139</SUB>> ]
-"414" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IMemory&gt; destBase)<SUB>140</SUB>> ]
-"419" [label = <(&lt;operator&gt;.indirectIndexAccess,mSharedBufferMap[destBuffer.bufferId])<SUB>140</SUB>> ]
-"425" [label = <(&lt;operator&gt;.equals,destBase == nullptr)<SUB>141</SUB>> ]
-"439" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint8_t *&gt;(static_cast&lt;void *&gt;(destBase-&gt;getPointer())))<SUB>146</SUB>> ]
-"451" [label = <(&lt;operator&gt;.logicalOr,__builtin_add_overflow(destBuffer.offset, destBuffer.size, &amp;totalSize) ||\012        totalSize &gt; destBase-&gt;getSize())<SUB>149</SUB>> ]
-"481" [label = <(&lt;operator&gt;.cast,static_cast&lt;void*&gt;(base + destination.nonsecureMemory.offset))<SUB>155</SUB>> ]
-"491" [label = <(&lt;operator&gt;.fieldAccess,shared_buffer_lock.unlock)<SUB>158</SUB>> ]
-"512" [label = <(&lt;operator&gt;.lessThan,i &lt; subSamples.size())<SUB>165</SUB>> ]
-"518" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>165</SUB>> ]
-"588" [label = <(&lt;operator&gt;.logicalOr,destSize &gt; destBuffer.size || srcSize &gt; source.size)<SUB>182</SUB>> ]
-"609" [label = <(&lt;operator&gt;.equals,mode == Mode::UNENCRYPTED)<SUB>187</SUB>> ]
-"230" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;Secure decryption is not supported with ClearKey.&quot;))<SUB>94</SUB>> ]
-"236" [label = <(RETURN,return Void();,return Void();)<SUB>96</SUB>> ]
-"240" [label = <(&lt;operator&gt;.fieldAccess,std::unique_lock)<SUB>99</SUB>> ]
-"243" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>99</SUB>> ]
-"250" [label = <(find,mSharedBufferMap.find(source.bufferId))<SUB>100</SUB>> ]
-"257" [label = <(end,mSharedBufferMap.end())<SUB>100</SUB>> ]
-"262" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;source decrypt buffer base not set&quot;))<SUB>101</SUB>> ]
-"268" [label = <(RETURN,return Void();,return Void();)<SUB>103</SUB>> ]
-"272" [label = <(&lt;operator&gt;.fieldAccess,destination.type)<SUB>106</SUB>> ]
-"275" [label = <(&lt;operator&gt;.fieldAccess,BufferType::SHARED_MEMORY)<SUB>106</SUB>> ]
-"280" [label = <(&lt;operator&gt;.assignment,&amp; dest = destination.nonsecureMemory)<SUB>107</SUB>> ]
-"319" [label = <(&lt;operator&gt;.lessThan,sp&lt;IMemory)<SUB>119</SUB>> ]
-"325" [label = <(&lt;operator&gt;.fieldAccess,source.bufferId)<SUB>119</SUB>> ]
-"333" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0, &quot;source is a nullptr&quot;))<SUB>121</SUB>> ]
-"339" [label = <(RETURN,return Void();,return Void();)<SUB>122</SUB>> ]
-"347" [label = <(&lt;operator&gt;.logicalOr,__builtin_add_overflow(source.offset, offset, &amp;totalSize) ||\012        __builtin_add_overflow(totalSize, source.size, &amp;totalSize))<SUB>126</SUB>> ]
-"362" [label = <(&lt;operator&gt;.greaterThan,totalSize &gt; sourceBase-&gt;getSize())<SUB>128</SUB>> ]
-"369" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;176496160&quot;))<SUB>129</SUB>> ]
-"372" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0, &quot;invalid buffer size&quot;))<SUB>130</SUB>> ]
-"378" [label = <(RETURN,return Void();,return Void();)<SUB>131</SUB>> ]
-"384" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>134</SUB>> ]
-"385" [label = <(&lt;operator&gt;.cast,static_cast&lt;void *&gt;(sourceBase-&gt;getPointer()))<SUB>135</SUB>> ]
-"395" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>136</SUB>> ]
-"396" [label = <(&lt;operator&gt;.addition,base + source.offset + offset)<SUB>136</SUB>> ]
-"412" [label = <(FIELD_IDENTIFIER,nonsecureMemory,nonsecureMemory)<SUB>139</SUB>> ]
-"415" [label = <(&lt;operator&gt;.lessThan,sp&lt;IMemory)<SUB>140</SUB>> ]
-"421" [label = <(&lt;operator&gt;.fieldAccess,destBuffer.bufferId)<SUB>140</SUB>> ]
-"429" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0, &quot;destination is a nullptr&quot;))<SUB>142</SUB>> ]
-"435" [label = <(RETURN,return Void();,return Void();)<SUB>143</SUB>> ]
-"440" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>146</SUB>> ]
-"441" [label = <(&lt;operator&gt;.cast,static_cast&lt;void *&gt;(destBase-&gt;getPointer()))<SUB>146</SUB>> ]
-"452" [label = <(__builtin_add_overflow,__builtin_add_overflow(destBuffer.offset, destBuffer.size, &amp;totalSize))<SUB>149</SUB>> ]
-"461" [label = <(&lt;operator&gt;.greaterThan,totalSize &gt; destBase-&gt;getSize())<SUB>150</SUB>> ]
-"468" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;176444622&quot;))<SUB>151</SUB>> ]
-"471" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE, 0, &quot;invalid buffer size&quot;))<SUB>152</SUB>> ]
-"477" [label = <(RETURN,return Void();,return Void();)<SUB>153</SUB>> ]
-"482" [label = <(UNKNOWN,void*,void*)<SUB>155</SUB>> ]
-"483" [label = <(&lt;operator&gt;.addition,base + destination.nonsecureMemory.offset)<SUB>155</SUB>> ]
-"493" [label = <(FIELD_IDENTIFIER,unlock,unlock)<SUB>158</SUB>> ]
-"509" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>165</SUB>> ]
-"514" [label = <(size,subSamples.size())<SUB>165</SUB>> ]
-"522" [label = <(&lt;operator&gt;.assignment,&amp;subSample = subSamples[i])<SUB>166</SUB>> ]
-"589" [label = <(&lt;operator&gt;.greaterThan,destSize &gt; destBuffer.size)<SUB>182</SUB>> ]
-"594" [label = <(&lt;operator&gt;.greaterThan,srcSize &gt; source.size)<SUB>182</SUB>> ]
-"600" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE, 0, &quot;subsample sum too large&quot;))<SUB>183</SUB>> ]
-"606" [label = <(RETURN,return Void();,return Void();)<SUB>184</SUB>> ]
-"611" [label = <(&lt;operator&gt;.fieldAccess,Mode::UNENCRYPTED)<SUB>187</SUB>> ]
-"627" [label = <(&lt;operator&gt;.assignment,offset = 0)<SUB>194</SUB>> ]
-"677" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::OK, static_cast&lt;ssize_t&gt;(offset), &quot;&quot;))<SUB>205</SUB>> ]
-"685" [label = <(RETURN,return Void();,return Void();)<SUB>206</SUB>> ]
-"231" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>94</SUB>> ]
-"237" [label = <(Void,Void())<SUB>96</SUB>> ]
-"242" [label = <(FIELD_IDENTIFIER,unique_lock,unique_lock)<SUB>99</SUB>> ]
-"245" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>99</SUB>> ]
-"251" [label = <(&lt;operator&gt;.fieldAccess,mSharedBufferMap.find)<SUB>100</SUB>> ]
-"254" [label = <(&lt;operator&gt;.fieldAccess,source.bufferId)<SUB>100</SUB>> ]
-"258" [label = <(&lt;operator&gt;.fieldAccess,mSharedBufferMap.end)<SUB>100</SUB>> ]
-"263" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>101</SUB>> ]
-"269" [label = <(Void,Void())<SUB>103</SUB>> ]
-"274" [label = <(FIELD_IDENTIFIER,type,type)<SUB>106</SUB>> ]
-"277" [label = <(FIELD_IDENTIFIER,SHARED_MEMORY,SHARED_MEMORY)<SUB>106</SUB>> ]
-"282" [label = <(&lt;operator&gt;.fieldAccess,destination.nonsecureMemory)<SUB>107</SUB>> ]
-"286" [label = <(&lt;operator&gt;.equals,mSharedBufferMap.find(dest.bufferId) == mSharedBufferMap.end())<SUB>108</SUB>> ]
-"309" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;destination type not supported&quot;))<SUB>114</SUB>> ]
-"315" [label = <(RETURN,return Void();,return Void();)<SUB>116</SUB>> ]
-"327" [label = <(FIELD_IDENTIFIER,bufferId,bufferId)<SUB>119</SUB>> ]
-"334" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>121</SUB>> ]
-"340" [label = <(Void,Void())<SUB>122</SUB>> ]
-"348" [label = <(__builtin_add_overflow,__builtin_add_overflow(source.offset, offset, &amp;totalSize))<SUB>126</SUB>> ]
-"355" [label = <(__builtin_add_overflow,__builtin_add_overflow(totalSize, source.size, &amp;totalSize))<SUB>127</SUB>> ]
-"364" [label = <(getSize,sourceBase-&gt;getSize())<SUB>128</SUB>> ]
-"373" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>130</SUB>> ]
-"379" [label = <(Void,Void())<SUB>131</SUB>> ]
-"386" [label = <(UNKNOWN,void *,void *)<SUB>135</SUB>> ]
-"387" [label = <(getPointer,sourceBase-&gt;getPointer())<SUB>135</SUB>> ]
-"397" [label = <(&lt;operator&gt;.addition,base + source.offset)<SUB>136</SUB>> ]
-"423" [label = <(FIELD_IDENTIFIER,bufferId,bufferId)<SUB>140</SUB>> ]
-"430" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>142</SUB>> ]
-"436" [label = <(Void,Void())<SUB>143</SUB>> ]
-"442" [label = <(UNKNOWN,void *,void *)<SUB>146</SUB>> ]
-"443" [label = <(getPointer,destBase-&gt;getPointer())<SUB>146</SUB>> ]
-"453" [label = <(&lt;operator&gt;.fieldAccess,destBuffer.offset)<SUB>149</SUB>> ]
-"456" [label = <(&lt;operator&gt;.fieldAccess,destBuffer.size)<SUB>149</SUB>> ]
-"459" [label = <(&lt;operator&gt;.addressOf,&amp;totalSize)<SUB>149</SUB>> ]
-"463" [label = <(getSize,destBase-&gt;getSize())<SUB>150</SUB>> ]
-"472" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>152</SUB>> ]
-"478" [label = <(Void,Void())<SUB>153</SUB>> ]
-"485" [label = <(&lt;operator&gt;.fieldAccess,destination.nonsecureMemory.offset)<SUB>155</SUB>> ]
-"515" [label = <(&lt;operator&gt;.fieldAccess,subSamples.size)<SUB>165</SUB>> ]
-"524" [label = <(&lt;operator&gt;.indirectIndexAccess,subSamples[i])<SUB>166</SUB>> ]
-"528" [label = <(&lt;operator&gt;.logicalOr,__builtin_add_overflow(destSize, subSample.numBytesOfClearData, &amp;destSize) ||\012            __builtin_add_overflow(srcSize, subSample.numBytesOfClearData, &amp;srcSize))<SUB>167</SUB>> ]
-"553" [label = <(&lt;operator&gt;.logicalOr,__builtin_add_overflow(destSize, subSample.numBytesOfEncryptedData, &amp;destSize) ||\012            __builtin_add_overflow(srcSize, subSample.numBytesOfEncryptedData, &amp;srcSize))<SUB>172</SUB>> ]
-"578" [label = <(&lt;operator&gt;.greaterThan,subSample.numBytesOfEncryptedData &gt; 0)<SUB>177</SUB>> ]
-"591" [label = <(&lt;operator&gt;.fieldAccess,destBuffer.size)<SUB>182</SUB>> ]
-"596" [label = <(&lt;operator&gt;.fieldAccess,source.size)<SUB>182</SUB>> ]
-"601" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>183</SUB>> ]
-"607" [label = <(Void,Void())<SUB>184</SUB>> ]
-"613" [label = <(FIELD_IDENTIFIER,UNENCRYPTED,UNENCRYPTED)<SUB>187</SUB>> ]
-"636" [label = <(&lt;operator&gt;.lessThan,i &lt; subSamples.size())<SUB>195</SUB>> ]
-"642" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>195</SUB>> ]
-"678" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>205</SUB>> ]
-"681" [label = <(&lt;operator&gt;.cast,static_cast&lt;ssize_t&gt;(offset))<SUB>205</SUB>> ]
-"686" [label = <(Void,Void())<SUB>206</SUB>> ]
-"233" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>94</SUB>> ]
-"253" [label = <(FIELD_IDENTIFIER,find,find)<SUB>100</SUB>> ]
-"256" [label = <(FIELD_IDENTIFIER,bufferId,bufferId)<SUB>100</SUB>> ]
-"260" [label = <(FIELD_IDENTIFIER,end,end)<SUB>100</SUB>> ]
-"265" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>101</SUB>> ]
-"284" [label = <(FIELD_IDENTIFIER,nonsecureMemory,nonsecureMemory)<SUB>107</SUB>> ]
-"287" [label = <(find,mSharedBufferMap.find(dest.bufferId))<SUB>108</SUB>> ]
-"294" [label = <(end,mSharedBufferMap.end())<SUB>108</SUB>> ]
-"299" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;destination decrypt buffer base not set&quot;))<SUB>109</SUB>> ]
-"305" [label = <(RETURN,return Void();,return Void();)<SUB>111</SUB>> ]
-"310" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>114</SUB>> ]
-"316" [label = <(Void,Void())<SUB>116</SUB>> ]
-"336" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>121</SUB>> ]
-"349" [label = <(&lt;operator&gt;.fieldAccess,source.offset)<SUB>126</SUB>> ]
-"353" [label = <(&lt;operator&gt;.addressOf,&amp;totalSize)<SUB>126</SUB>> ]
-"357" [label = <(&lt;operator&gt;.fieldAccess,source.size)<SUB>127</SUB>> ]
-"360" [label = <(&lt;operator&gt;.addressOf,&amp;totalSize)<SUB>127</SUB>> ]
-"365" [label = <(&lt;operator&gt;.indirectFieldAccess,sourceBase-&gt;getSize)<SUB>128</SUB>> ]
-"375" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>130</SUB>> ]
-"388" [label = <(&lt;operator&gt;.indirectFieldAccess,sourceBase-&gt;getPointer)<SUB>135</SUB>> ]
-"399" [label = <(&lt;operator&gt;.fieldAccess,source.offset)<SUB>136</SUB>> ]
-"432" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>142</SUB>> ]
-"444" [label = <(&lt;operator&gt;.indirectFieldAccess,destBase-&gt;getPointer)<SUB>146</SUB>> ]
-"455" [label = <(FIELD_IDENTIFIER,offset,offset)<SUB>149</SUB>> ]
-"458" [label = <(FIELD_IDENTIFIER,size,size)<SUB>149</SUB>> ]
-"464" [label = <(&lt;operator&gt;.indirectFieldAccess,destBase-&gt;getSize)<SUB>150</SUB>> ]
-"474" [label = <(FIELD_IDENTIFIER,ERROR_DRM_FRAME_TOO_LARGE,ERROR_DRM_FRAME_TOO_LARGE)<SUB>152</SUB>> ]
-"486" [label = <(&lt;operator&gt;.fieldAccess,destination.nonsecureMemory)<SUB>155</SUB>> ]
-"489" [label = <(FIELD_IDENTIFIER,offset,offset)<SUB>155</SUB>> ]
-"517" [label = <(FIELD_IDENTIFIER,size,size)<SUB>165</SUB>> ]
-"529" [label = <(__builtin_add_overflow,__builtin_add_overflow(destSize, subSample.numBytesOfClearData, &amp;destSize))<SUB>167</SUB>> ]
-"536" [label = <(__builtin_add_overflow,__builtin_add_overflow(srcSize, subSample.numBytesOfClearData, &amp;srcSize))<SUB>168</SUB>> ]
-"544" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE, 0, &quot;subsample clear size overflow&quot;))<SUB>169</SUB>> ]
-"550" [label = <(RETURN,return Void();,return Void();)<SUB>170</SUB>> ]
-"554" [label = <(__builtin_add_overflow,__builtin_add_overflow(destSize, subSample.numBytesOfEncryptedData, &amp;destSize))<SUB>172</SUB>> ]
-"561" [label = <(__builtin_add_overflow,__builtin_add_overflow(srcSize, subSample.numBytesOfEncryptedData, &amp;srcSize))<SUB>173</SUB>> ]
-"569" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE, 0, &quot;subsample encrypted size overflow&quot;))<SUB>174</SUB>> ]
-"575" [label = <(RETURN,return Void();,return Void();)<SUB>175</SUB>> ]
-"579" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfEncryptedData)<SUB>177</SUB>> ]
-"584" [label = <(&lt;operator&gt;.assignment,haveEncryptedSubsamples = true)<SUB>178</SUB>> ]
-"593" [label = <(FIELD_IDENTIFIER,size,size)<SUB>182</SUB>> ]
-"598" [label = <(FIELD_IDENTIFIER,size,size)<SUB>182</SUB>> ]
-"603" [label = <(FIELD_IDENTIFIER,ERROR_DRM_FRAME_TOO_LARGE,ERROR_DRM_FRAME_TOO_LARGE)<SUB>183</SUB>> ]
-"618" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;Encrypted subsamples found in allegedly unencrypted data.&quot;))<SUB>189</SUB>> ]
-"624" [label = <(RETURN,return Void();,return Void();)<SUB>191</SUB>> ]
-"633" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>195</SUB>> ]
-"638" [label = <(size,subSamples.size())<SUB>195</SUB>> ]
-"646" [label = <(&lt;operator&gt;.assignment,&amp; subSample = subSamples[i])<SUB>196</SUB>> ]
-"680" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>205</SUB>> ]
-"682" [label = <(UNKNOWN,ssize_t,ssize_t)<SUB>205</SUB>> ]
-"690" [label = <(&lt;operator&gt;.equals,mode == Mode::AES_CTR)<SUB>207</SUB>> ]
-"288" [label = <(&lt;operator&gt;.fieldAccess,mSharedBufferMap.find)<SUB>108</SUB>> ]
-"291" [label = <(&lt;operator&gt;.fieldAccess,dest.bufferId)<SUB>108</SUB>> ]
-"295" [label = <(&lt;operator&gt;.fieldAccess,mSharedBufferMap.end)<SUB>108</SUB>> ]
-"300" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>109</SUB>> ]
-"306" [label = <(Void,Void())<SUB>111</SUB>> ]
-"312" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>114</SUB>> ]
-"351" [label = <(FIELD_IDENTIFIER,offset,offset)<SUB>126</SUB>> ]
-"359" [label = <(FIELD_IDENTIFIER,size,size)<SUB>127</SUB>> ]
-"367" [label = <(FIELD_IDENTIFIER,getSize,getSize)<SUB>128</SUB>> ]
-"390" [label = <(FIELD_IDENTIFIER,getPointer,getPointer)<SUB>135</SUB>> ]
-"401" [label = <(FIELD_IDENTIFIER,offset,offset)<SUB>136</SUB>> ]
-"446" [label = <(FIELD_IDENTIFIER,getPointer,getPointer)<SUB>146</SUB>> ]
-"466" [label = <(FIELD_IDENTIFIER,getSize,getSize)<SUB>150</SUB>> ]
-"488" [label = <(FIELD_IDENTIFIER,nonsecureMemory,nonsecureMemory)<SUB>155</SUB>> ]
-"531" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfClearData)<SUB>167</SUB>> ]
-"534" [label = <(&lt;operator&gt;.addressOf,&amp;destSize)<SUB>167</SUB>> ]
-"538" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfClearData)<SUB>168</SUB>> ]
-"541" [label = <(&lt;operator&gt;.addressOf,&amp;srcSize)<SUB>168</SUB>> ]
-"545" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>169</SUB>> ]
-"551" [label = <(Void,Void())<SUB>170</SUB>> ]
-"556" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfEncryptedData)<SUB>172</SUB>> ]
-"559" [label = <(&lt;operator&gt;.addressOf,&amp;destSize)<SUB>172</SUB>> ]
-"563" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfEncryptedData)<SUB>173</SUB>> ]
-"566" [label = <(&lt;operator&gt;.addressOf,&amp;srcSize)<SUB>173</SUB>> ]
-"570" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>174</SUB>> ]
-"576" [label = <(Void,Void())<SUB>175</SUB>> ]
-"581" [label = <(FIELD_IDENTIFIER,numBytesOfEncryptedData,numBytesOfEncryptedData)<SUB>177</SUB>> ]
-"619" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>189</SUB>> ]
-"625" [label = <(Void,Void())<SUB>191</SUB>> ]
-"639" [label = <(&lt;operator&gt;.fieldAccess,subSamples.size)<SUB>195</SUB>> ]
-"648" [label = <(&lt;operator&gt;.indirectIndexAccess,subSamples[i])<SUB>196</SUB>> ]
-"652" [label = <(&lt;operator&gt;.notEquals,subSample.numBytesOfClearData != 0)<SUB>197</SUB>> ]
-"692" [label = <(&lt;operator&gt;.fieldAccess,Mode::AES_CTR)<SUB>207</SUB>> ]
-"698" [label = <(&lt;operator&gt;.assignment,res = mSession-&gt;decrypt(keyId.data(), iv.data(), srcPtr,\012 static_cast&lt;uint8_t*&gt;(destPtr), toVector(subSamples), &amp;bytesDecrypted))<SUB>209</SUB>> ]
-"290" [label = <(FIELD_IDENTIFIER,find,find)<SUB>108</SUB>> ]
-"293" [label = <(FIELD_IDENTIFIER,bufferId,bufferId)<SUB>108</SUB>> ]
-"297" [label = <(FIELD_IDENTIFIER,end,end)<SUB>108</SUB>> ]
-"302" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>109</SUB>> ]
-"533" [label = <(FIELD_IDENTIFIER,numBytesOfClearData,numBytesOfClearData)<SUB>167</SUB>> ]
-"540" [label = <(FIELD_IDENTIFIER,numBytesOfClearData,numBytesOfClearData)<SUB>168</SUB>> ]
-"547" [label = <(FIELD_IDENTIFIER,ERROR_DRM_FRAME_TOO_LARGE,ERROR_DRM_FRAME_TOO_LARGE)<SUB>169</SUB>> ]
-"558" [label = <(FIELD_IDENTIFIER,numBytesOfEncryptedData,numBytesOfEncryptedData)<SUB>172</SUB>> ]
-"565" [label = <(FIELD_IDENTIFIER,numBytesOfEncryptedData,numBytesOfEncryptedData)<SUB>173</SUB>> ]
-"572" [label = <(FIELD_IDENTIFIER,ERROR_DRM_FRAME_TOO_LARGE,ERROR_DRM_FRAME_TOO_LARGE)<SUB>174</SUB>> ]
-"621" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>189</SUB>> ]
-"641" [label = <(FIELD_IDENTIFIER,size,size)<SUB>195</SUB>> ]
-"653" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfClearData)<SUB>197</SUB>> ]
-"658" [label = <(memcpy,memcpy(reinterpret_cast&lt;uint8_t*&gt;(destPtr) + offset,\012 reinterpret_cast&lt;const uint8_t*&gt;(srcPtr) + offset,\012                       subSample.numBytesOfClearData))<SUB>198</SUB>> ]
-"672" [label = <(&lt;operator&gt;.assignmentPlus,offset += subSample.numBytesOfClearData)<SUB>201</SUB>> ]
-"694" [label = <(FIELD_IDENTIFIER,AES_CTR,AES_CTR)<SUB>207</SUB>> ]
-"700" [label = <(decrypt,mSession-&gt;decrypt(keyId.data(), iv.data(), srcPtr,\012 static_cast&lt;uint8_t*&gt;(destPtr), toVector(subSamples), &amp;bytesDecrypted))<SUB>209</SUB>> ]
-"721" [label = <(&lt;operator&gt;.equals,res == Status_V1_2::OK)<SUB>211</SUB>> ]
-"747" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;Selected encryption mode is not supported by the ClearKey DRM Plugin.&quot;))<SUB>219</SUB>> ]
-"753" [label = <(RETURN,return Void();,return Void();)<SUB>221</SUB>> ]
-"655" [label = <(FIELD_IDENTIFIER,numBytesOfClearData,numBytesOfClearData)<SUB>197</SUB>> ]
-"659" [label = <(&lt;operator&gt;.addition,reinterpret_cast&lt;uint8_t*&gt;(destPtr) + offset)<SUB>198</SUB>> ]
-"664" [label = <(&lt;operator&gt;.addition,reinterpret_cast&lt;const uint8_t*&gt;(srcPtr) + offset)<SUB>199</SUB>> ]
-"669" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfClearData)<SUB>200</SUB>> ]
-"674" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfClearData)<SUB>201</SUB>> ]
-"701" [label = <(&lt;operator&gt;.indirectFieldAccess,mSession-&gt;decrypt)<SUB>209</SUB>> ]
-"704" [label = <(data,keyId.data())<SUB>209</SUB>> ]
-"708" [label = <(data,iv.data())<SUB>209</SUB>> ]
-"713" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint8_t*&gt;(destPtr))<SUB>210</SUB>> ]
-"716" [label = <(toVector,toVector(subSamples))<SUB>210</SUB>> ]
-"718" [label = <(&lt;operator&gt;.addressOf,&amp;bytesDecrypted)<SUB>210</SUB>> ]
-"723" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>211</SUB>> ]
-"727" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::OK, static_cast&lt;ssize_t&gt;(bytesDecrypted), &quot;&quot;))<SUB>212</SUB>> ]
-"735" [label = <(RETURN,return Void();,return Void();)<SUB>213</SUB>> ]
-"748" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>219</SUB>> ]
-"754" [label = <(Void,Void())<SUB>221</SUB>> ]
-"660" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;uint8_t*&gt;(destPtr))<SUB>198</SUB>> ]
-"665" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;const uint8_t*&gt;(srcPtr))<SUB>199</SUB>> ]
-"671" [label = <(FIELD_IDENTIFIER,numBytesOfClearData,numBytesOfClearData)<SUB>200</SUB>> ]
-"676" [label = <(FIELD_IDENTIFIER,numBytesOfClearData,numBytesOfClearData)<SUB>201</SUB>> ]
-"703" [label = <(FIELD_IDENTIFIER,decrypt,decrypt)<SUB>209</SUB>> ]
-"705" [label = <(&lt;operator&gt;.fieldAccess,keyId.data)<SUB>209</SUB>> ]
-"709" [label = <(&lt;operator&gt;.fieldAccess,iv.data)<SUB>209</SUB>> ]
-"714" [label = <(UNKNOWN,uint8_t*,uint8_t*)<SUB>210</SUB>> ]
-"725" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>211</SUB>> ]
-"728" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>212</SUB>> ]
-"731" [label = <(&lt;operator&gt;.cast,static_cast&lt;ssize_t&gt;(bytesDecrypted))<SUB>212</SUB>> ]
-"736" [label = <(Void,Void())<SUB>213</SUB>> ]
-"739" [label = <(_hidl_cb,_hidl_cb(res, 0, &quot;Decryption Error&quot;))<SUB>215</SUB>> ]
-"743" [label = <(RETURN,return Void();,return Void();)<SUB>216</SUB>> ]
-"750" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>219</SUB>> ]
-"661" [label = <(UNKNOWN,uint8_t*,uint8_t*)<SUB>198</SUB>> ]
-"666" [label = <(UNKNOWN,const uint8_t*,const uint8_t*)<SUB>199</SUB>> ]
-"707" [label = <(FIELD_IDENTIFIER,data,data)<SUB>209</SUB>> ]
-"711" [label = <(FIELD_IDENTIFIER,data,data)<SUB>209</SUB>> ]
-"730" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>212</SUB>> ]
-"732" [label = <(UNKNOWN,ssize_t,ssize_t)<SUB>212</SUB>> ]
-"744" [label = <(Void,Void())<SUB>216</SUB>> ]
-"213" [label = <(METHOD,decrypt_1_2)<SUB>80</SUB>> ]
-"755" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>80</SUB>> ]
-  "225" -> "233" 
-  "225" -> "242" 
-  "238" -> "253" 
-  "317" -> "329" 
-  "342" -> "351" 
-  "381" -> "395" 
-  "392" -> "404" 
-  "404" -> "412" 
-  "408" -> "415" 
-  "413" -> "425" 
-  "437" -> "447" 
-  "447" -> "455" 
-  "479" -> "493" 
-  "490" -> "495" 
-  "495" -> "499" 
-  "499" -> "503" 
-  "503" -> "509" 
-  "239" -> "246" 
-  "246" -> "238" 
-  "249" -> "265" 
-  "249" -> "274" 
-  "271" -> "284" 
-  "271" -> "312" 
-  "318" -> "327" 
-  "323" -> "317" 
-  "329" -> "336" 
-  "329" -> "342" 
-  "346" -> "369" 
-  "346" -> "384" 
-  "383" -> "381" 
-  "394" -> "392" 
-  "410" -> "408" 
-  "414" -> "423" 
-  "419" -> "413" 
-  "425" -> "432" 
-  "425" -> "440" 
-  "439" -> "437" 
-  "451" -> "468" 
-  "451" -> "482" 
-  "481" -> "479" 
-  "491" -> "490" 
-  "512" -> "524" 
-  "512" -> "593" 
-  "518" -> "517" 
-  "588" -> "603" 
-  "588" -> "613" 
-  "609" -> "621" 
-  "609" -> "627" 
-  "609" -> "694" 
-  "230" -> "237" 
-  "236" -> "755" 
-  "240" -> "245" 
-  "243" -> "239" 
-  "250" -> "260" 
-  "257" -> "249" 
-  "262" -> "269" 
-  "268" -> "755" 
-  "272" -> "277" 
-  "275" -> "271" 
-  "280" -> "290" 
-  "319" -> "318" 
-  "325" -> "323" 
-  "333" -> "340" 
-  "339" -> "755" 
-  "347" -> "346" 
-  "347" -> "367" 
-  "362" -> "346" 
-  "369" -> "375" 
-  "372" -> "379" 
-  "378" -> "755" 
-  "384" -> "386" 
-  "385" -> "383" 
-  "395" -> "401" 
-  "396" -> "394" 
-  "412" -> "410" 
-  "415" -> "414" 
-  "421" -> "419" 
-  "429" -> "436" 
-  "435" -> "755" 
-  "440" -> "442" 
-  "441" -> "439" 
-  "452" -> "451" 
-  "452" -> "466" 
-  "461" -> "451" 
-  "468" -> "474" 
-  "471" -> "478" 
-  "477" -> "755" 
-  "482" -> "488" 
-  "483" -> "481" 
-  "493" -> "491" 
-  "509" -> "517" 
-  "514" -> "512" 
-  "522" -> "533" 
-  "589" -> "588" 
-  "589" -> "598" 
-  "594" -> "588" 
-  "600" -> "607" 
-  "606" -> "755" 
-  "611" -> "609" 
-  "627" -> "633" 
-  "677" -> "686" 
-  "685" -> "755" 
-  "231" -> "230" 
-  "237" -> "236" 
-  "242" -> "240" 
-  "245" -> "243" 
-  "251" -> "256" 
-  "254" -> "250" 
-  "258" -> "257" 
-  "263" -> "262" 
-  "269" -> "268" 
-  "274" -> "272" 
-  "277" -> "275" 
-  "282" -> "280" 
-  "286" -> "302" 
-  "286" -> "319" 
-  "309" -> "316" 
-  "315" -> "755" 
-  "327" -> "325" 
-  "334" -> "333" 
-  "340" -> "339" 
-  "348" -> "347" 
-  "348" -> "359" 
-  "355" -> "347" 
-  "364" -> "362" 
-  "373" -> "372" 
-  "379" -> "378" 
-  "386" -> "390" 
-  "387" -> "385" 
-  "397" -> "396" 
-  "423" -> "421" 
+"213" [label = <(UNUSED,UNUSED(pattern))<SUB>89</SUB>> ]
+"295" [label = <(&lt;operator&gt;.assignment,sp&lt;IMemory&gt; sourceBase = mSharedBufferMap[source.bufferId])<SUB>116</SUB>> ]
+"320" [label = <(&lt;operator&gt;.assignment,totalSize = 0)<SUB>122</SUB>> ]
+"359" [label = <(&lt;operator&gt;.assignment,*base = static_cast&lt;uint8_t *&gt;\012 (static_cast&lt;void *&gt;(sourceBase-&gt;getPointer())))<SUB>131</SUB>> ]
+"370" [label = <(&lt;operator&gt;.assignment,* srcPtr = static_cast&lt;uint8_t *&gt;(base + source.offset + offset))<SUB>133</SUB>> ]
+"382" [label = <(&lt;operator&gt;.assignment,* destPtr = NULL)<SUB>134</SUB>> ]
+"386" [label = <(&lt;operator&gt;.assignment,&amp; destBuffer = destination.nonsecureMemory)<SUB>136</SUB>> ]
+"391" [label = <(&lt;operator&gt;.assignment,sp&lt;IMemory&gt; destBase = mSharedBufferMap[destBuffer.bufferId])<SUB>137</SUB>> ]
+"415" [label = <(&lt;operator&gt;.assignment,base = static_cast&lt;uint8_t *&gt;(static_cast&lt;void *&gt;(destBase-&gt;getPointer())))<SUB>143</SUB>> ]
+"425" [label = <(&lt;operator&gt;.assignment,totalSize = 0)<SUB>145</SUB>> ]
+"457" [label = <(&lt;operator&gt;.assignment,destPtr = static_cast&lt;void*&gt;(base + destination.nonsecureMemory.offset))<SUB>152</SUB>> ]
+"469" [label = <(&lt;operator&gt;.assignment,destSize = 0)<SUB>156</SUB>> ]
+"473" [label = <(&lt;operator&gt;.assignment,srcSize = 0)<SUB>157</SUB>> ]
+"477" [label = <(&lt;operator&gt;.assignment,haveEncryptedSubsamples = false)<SUB>158</SUB>> ]
+"227" [label = <(&lt;operator&gt;.equals,mSharedBufferMap.find(source.bufferId) == mSharedBufferMap.end())<SUB>97</SUB>> ]
+"249" [label = <(&lt;operator&gt;.equals,destination.type == BufferType::SHARED_MEMORY)<SUB>103</SUB>> ]
+"296" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IMemory&gt; sourceBase)<SUB>116</SUB>> ]
+"301" [label = <(&lt;operator&gt;.indirectIndexAccess,mSharedBufferMap[source.bufferId])<SUB>116</SUB>> ]
+"307" [label = <(&lt;operator&gt;.equals,sourceBase == nullptr)<SUB>117</SUB>> ]
+"324" [label = <(&lt;operator&gt;.logicalOr,__builtin_add_overflow(source.offset, offset, &amp;totalSize) ||\012        __builtin_add_overflow(totalSize, source.size, &amp;totalSize) ||\012        totalSize &gt; sourceBase-&gt;getSize())<SUB>123</SUB>> ]
+"361" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint8_t *&gt;\012 (static_cast&lt;void *&gt;(sourceBase-&gt;getPointer())))<SUB>131</SUB>> ]
+"372" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint8_t *&gt;(base + source.offset + offset))<SUB>133</SUB>> ]
+"388" [label = <(&lt;operator&gt;.fieldAccess,destination.nonsecureMemory)<SUB>136</SUB>> ]
+"392" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IMemory&gt; destBase)<SUB>137</SUB>> ]
+"397" [label = <(&lt;operator&gt;.indirectIndexAccess,mSharedBufferMap[destBuffer.bufferId])<SUB>137</SUB>> ]
+"403" [label = <(&lt;operator&gt;.equals,destBase == nullptr)<SUB>138</SUB>> ]
+"417" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint8_t *&gt;(static_cast&lt;void *&gt;(destBase-&gt;getPointer())))<SUB>143</SUB>> ]
+"429" [label = <(&lt;operator&gt;.logicalOr,__builtin_add_overflow(destBuffer.offset, destBuffer.size, &amp;totalSize) ||\012        totalSize &gt; destBase-&gt;getSize())<SUB>146</SUB>> ]
+"459" [label = <(&lt;operator&gt;.cast,static_cast&lt;void*&gt;(base + destination.nonsecureMemory.offset))<SUB>152</SUB>> ]
+"486" [label = <(&lt;operator&gt;.lessThan,i &lt; subSamples.size())<SUB>159</SUB>> ]
+"492" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>159</SUB>> ]
+"562" [label = <(&lt;operator&gt;.logicalOr,destSize &gt; destBuffer.size || srcSize &gt; source.size)<SUB>176</SUB>> ]
+"583" [label = <(&lt;operator&gt;.equals,mode == Mode::UNENCRYPTED)<SUB>181</SUB>> ]
+"218" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;Secure decryption is not supported with ClearKey.&quot;))<SUB>92</SUB>> ]
+"224" [label = <(RETURN,return Void();,return Void();)<SUB>94</SUB>> ]
+"228" [label = <(find,mSharedBufferMap.find(source.bufferId))<SUB>97</SUB>> ]
+"235" [label = <(end,mSharedBufferMap.end())<SUB>97</SUB>> ]
+"240" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;source decrypt buffer base not set&quot;))<SUB>98</SUB>> ]
+"246" [label = <(RETURN,return Void();,return Void();)<SUB>100</SUB>> ]
+"250" [label = <(&lt;operator&gt;.fieldAccess,destination.type)<SUB>103</SUB>> ]
+"253" [label = <(&lt;operator&gt;.fieldAccess,BufferType::SHARED_MEMORY)<SUB>103</SUB>> ]
+"258" [label = <(&lt;operator&gt;.assignment,&amp; dest = destination.nonsecureMemory)<SUB>104</SUB>> ]
+"297" [label = <(&lt;operator&gt;.lessThan,sp&lt;IMemory)<SUB>116</SUB>> ]
+"303" [label = <(&lt;operator&gt;.fieldAccess,source.bufferId)<SUB>116</SUB>> ]
+"311" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0, &quot;source is a nullptr&quot;))<SUB>118</SUB>> ]
+"317" [label = <(RETURN,return Void();,return Void();)<SUB>119</SUB>> ]
+"325" [label = <(&lt;operator&gt;.logicalOr,__builtin_add_overflow(source.offset, offset, &amp;totalSize) ||\012        __builtin_add_overflow(totalSize, source.size, &amp;totalSize))<SUB>123</SUB>> ]
+"340" [label = <(&lt;operator&gt;.greaterThan,totalSize &gt; sourceBase-&gt;getSize())<SUB>125</SUB>> ]
+"347" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;176496160&quot;))<SUB>126</SUB>> ]
+"350" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0, &quot;invalid buffer size&quot;))<SUB>127</SUB>> ]
+"356" [label = <(RETURN,return Void();,return Void();)<SUB>128</SUB>> ]
+"362" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>131</SUB>> ]
+"363" [label = <(&lt;operator&gt;.cast,static_cast&lt;void *&gt;(sourceBase-&gt;getPointer()))<SUB>132</SUB>> ]
+"373" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>133</SUB>> ]
+"374" [label = <(&lt;operator&gt;.addition,base + source.offset + offset)<SUB>133</SUB>> ]
+"390" [label = <(FIELD_IDENTIFIER,nonsecureMemory,nonsecureMemory)<SUB>136</SUB>> ]
+"393" [label = <(&lt;operator&gt;.lessThan,sp&lt;IMemory)<SUB>137</SUB>> ]
+"399" [label = <(&lt;operator&gt;.fieldAccess,destBuffer.bufferId)<SUB>137</SUB>> ]
+"407" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0, &quot;destination is a nullptr&quot;))<SUB>139</SUB>> ]
+"413" [label = <(RETURN,return Void();,return Void();)<SUB>140</SUB>> ]
+"418" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>143</SUB>> ]
+"419" [label = <(&lt;operator&gt;.cast,static_cast&lt;void *&gt;(destBase-&gt;getPointer()))<SUB>143</SUB>> ]
+"430" [label = <(__builtin_add_overflow,__builtin_add_overflow(destBuffer.offset, destBuffer.size, &amp;totalSize))<SUB>146</SUB>> ]
+"439" [label = <(&lt;operator&gt;.greaterThan,totalSize &gt; destBase-&gt;getSize())<SUB>147</SUB>> ]
+"446" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;176444622&quot;))<SUB>148</SUB>> ]
+"449" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE, 0, &quot;invalid buffer size&quot;))<SUB>149</SUB>> ]
+"455" [label = <(RETURN,return Void();,return Void();)<SUB>150</SUB>> ]
+"460" [label = <(UNKNOWN,void*,void*)<SUB>152</SUB>> ]
+"461" [label = <(&lt;operator&gt;.addition,base + destination.nonsecureMemory.offset)<SUB>152</SUB>> ]
+"483" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>159</SUB>> ]
+"488" [label = <(size,subSamples.size())<SUB>159</SUB>> ]
+"496" [label = <(&lt;operator&gt;.assignment,&amp;subSample = subSamples[i])<SUB>160</SUB>> ]
+"563" [label = <(&lt;operator&gt;.greaterThan,destSize &gt; destBuffer.size)<SUB>176</SUB>> ]
+"568" [label = <(&lt;operator&gt;.greaterThan,srcSize &gt; source.size)<SUB>176</SUB>> ]
+"574" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE, 0, &quot;subsample sum too large&quot;))<SUB>177</SUB>> ]
+"580" [label = <(RETURN,return Void();,return Void();)<SUB>178</SUB>> ]
+"585" [label = <(&lt;operator&gt;.fieldAccess,Mode::UNENCRYPTED)<SUB>181</SUB>> ]
+"601" [label = <(&lt;operator&gt;.assignment,offset = 0)<SUB>188</SUB>> ]
+"651" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::OK, static_cast&lt;ssize_t&gt;(offset), &quot;&quot;))<SUB>199</SUB>> ]
+"659" [label = <(RETURN,return Void();,return Void();)<SUB>200</SUB>> ]
+"219" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>92</SUB>> ]
+"225" [label = <(Void,Void())<SUB>94</SUB>> ]
+"229" [label = <(&lt;operator&gt;.fieldAccess,mSharedBufferMap.find)<SUB>97</SUB>> ]
+"232" [label = <(&lt;operator&gt;.fieldAccess,source.bufferId)<SUB>97</SUB>> ]
+"236" [label = <(&lt;operator&gt;.fieldAccess,mSharedBufferMap.end)<SUB>97</SUB>> ]
+"241" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>98</SUB>> ]
+"247" [label = <(Void,Void())<SUB>100</SUB>> ]
+"252" [label = <(FIELD_IDENTIFIER,type,type)<SUB>103</SUB>> ]
+"255" [label = <(FIELD_IDENTIFIER,SHARED_MEMORY,SHARED_MEMORY)<SUB>103</SUB>> ]
+"260" [label = <(&lt;operator&gt;.fieldAccess,destination.nonsecureMemory)<SUB>104</SUB>> ]
+"264" [label = <(&lt;operator&gt;.equals,mSharedBufferMap.find(dest.bufferId) == mSharedBufferMap.end())<SUB>105</SUB>> ]
+"287" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;destination type not supported&quot;))<SUB>111</SUB>> ]
+"293" [label = <(RETURN,return Void();,return Void();)<SUB>113</SUB>> ]
+"305" [label = <(FIELD_IDENTIFIER,bufferId,bufferId)<SUB>116</SUB>> ]
+"312" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>118</SUB>> ]
+"318" [label = <(Void,Void())<SUB>119</SUB>> ]
+"326" [label = <(__builtin_add_overflow,__builtin_add_overflow(source.offset, offset, &amp;totalSize))<SUB>123</SUB>> ]
+"333" [label = <(__builtin_add_overflow,__builtin_add_overflow(totalSize, source.size, &amp;totalSize))<SUB>124</SUB>> ]
+"342" [label = <(getSize,sourceBase-&gt;getSize())<SUB>125</SUB>> ]
+"351" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>127</SUB>> ]
+"357" [label = <(Void,Void())<SUB>128</SUB>> ]
+"364" [label = <(UNKNOWN,void *,void *)<SUB>132</SUB>> ]
+"365" [label = <(getPointer,sourceBase-&gt;getPointer())<SUB>132</SUB>> ]
+"375" [label = <(&lt;operator&gt;.addition,base + source.offset)<SUB>133</SUB>> ]
+"401" [label = <(FIELD_IDENTIFIER,bufferId,bufferId)<SUB>137</SUB>> ]
+"408" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>139</SUB>> ]
+"414" [label = <(Void,Void())<SUB>140</SUB>> ]
+"420" [label = <(UNKNOWN,void *,void *)<SUB>143</SUB>> ]
+"421" [label = <(getPointer,destBase-&gt;getPointer())<SUB>143</SUB>> ]
+"431" [label = <(&lt;operator&gt;.fieldAccess,destBuffer.offset)<SUB>146</SUB>> ]
+"434" [label = <(&lt;operator&gt;.fieldAccess,destBuffer.size)<SUB>146</SUB>> ]
+"437" [label = <(&lt;operator&gt;.addressOf,&amp;totalSize)<SUB>146</SUB>> ]
+"441" [label = <(getSize,destBase-&gt;getSize())<SUB>147</SUB>> ]
+"450" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>149</SUB>> ]
+"456" [label = <(Void,Void())<SUB>150</SUB>> ]
+"463" [label = <(&lt;operator&gt;.fieldAccess,destination.nonsecureMemory.offset)<SUB>152</SUB>> ]
+"489" [label = <(&lt;operator&gt;.fieldAccess,subSamples.size)<SUB>159</SUB>> ]
+"498" [label = <(&lt;operator&gt;.indirectIndexAccess,subSamples[i])<SUB>160</SUB>> ]
+"502" [label = <(&lt;operator&gt;.logicalOr,__builtin_add_overflow(destSize, subSample.numBytesOfClearData, &amp;destSize) ||\012            __builtin_add_overflow(srcSize, subSample.numBytesOfClearData, &amp;srcSize))<SUB>161</SUB>> ]
+"527" [label = <(&lt;operator&gt;.logicalOr,__builtin_add_overflow(destSize, subSample.numBytesOfEncryptedData, &amp;destSize) ||\012            __builtin_add_overflow(srcSize, subSample.numBytesOfEncryptedData, &amp;srcSize))<SUB>166</SUB>> ]
+"552" [label = <(&lt;operator&gt;.greaterThan,subSample.numBytesOfEncryptedData &gt; 0)<SUB>171</SUB>> ]
+"565" [label = <(&lt;operator&gt;.fieldAccess,destBuffer.size)<SUB>176</SUB>> ]
+"570" [label = <(&lt;operator&gt;.fieldAccess,source.size)<SUB>176</SUB>> ]
+"575" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>177</SUB>> ]
+"581" [label = <(Void,Void())<SUB>178</SUB>> ]
+"587" [label = <(FIELD_IDENTIFIER,UNENCRYPTED,UNENCRYPTED)<SUB>181</SUB>> ]
+"610" [label = <(&lt;operator&gt;.lessThan,i &lt; subSamples.size())<SUB>189</SUB>> ]
+"616" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>189</SUB>> ]
+"652" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>199</SUB>> ]
+"655" [label = <(&lt;operator&gt;.cast,static_cast&lt;ssize_t&gt;(offset))<SUB>199</SUB>> ]
+"660" [label = <(Void,Void())<SUB>200</SUB>> ]
+"221" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>92</SUB>> ]
+"231" [label = <(FIELD_IDENTIFIER,find,find)<SUB>97</SUB>> ]
+"234" [label = <(FIELD_IDENTIFIER,bufferId,bufferId)<SUB>97</SUB>> ]
+"238" [label = <(FIELD_IDENTIFIER,end,end)<SUB>97</SUB>> ]
+"243" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>98</SUB>> ]
+"262" [label = <(FIELD_IDENTIFIER,nonsecureMemory,nonsecureMemory)<SUB>104</SUB>> ]
+"265" [label = <(find,mSharedBufferMap.find(dest.bufferId))<SUB>105</SUB>> ]
+"272" [label = <(end,mSharedBufferMap.end())<SUB>105</SUB>> ]
+"277" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;destination decrypt buffer base not set&quot;))<SUB>106</SUB>> ]
+"283" [label = <(RETURN,return Void();,return Void();)<SUB>108</SUB>> ]
+"288" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>111</SUB>> ]
+"294" [label = <(Void,Void())<SUB>113</SUB>> ]
+"314" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>118</SUB>> ]
+"327" [label = <(&lt;operator&gt;.fieldAccess,source.offset)<SUB>123</SUB>> ]
+"331" [label = <(&lt;operator&gt;.addressOf,&amp;totalSize)<SUB>123</SUB>> ]
+"335" [label = <(&lt;operator&gt;.fieldAccess,source.size)<SUB>124</SUB>> ]
+"338" [label = <(&lt;operator&gt;.addressOf,&amp;totalSize)<SUB>124</SUB>> ]
+"343" [label = <(&lt;operator&gt;.indirectFieldAccess,sourceBase-&gt;getSize)<SUB>125</SUB>> ]
+"353" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>127</SUB>> ]
+"366" [label = <(&lt;operator&gt;.indirectFieldAccess,sourceBase-&gt;getPointer)<SUB>132</SUB>> ]
+"377" [label = <(&lt;operator&gt;.fieldAccess,source.offset)<SUB>133</SUB>> ]
+"410" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>139</SUB>> ]
+"422" [label = <(&lt;operator&gt;.indirectFieldAccess,destBase-&gt;getPointer)<SUB>143</SUB>> ]
+"433" [label = <(FIELD_IDENTIFIER,offset,offset)<SUB>146</SUB>> ]
+"436" [label = <(FIELD_IDENTIFIER,size,size)<SUB>146</SUB>> ]
+"442" [label = <(&lt;operator&gt;.indirectFieldAccess,destBase-&gt;getSize)<SUB>147</SUB>> ]
+"452" [label = <(FIELD_IDENTIFIER,ERROR_DRM_FRAME_TOO_LARGE,ERROR_DRM_FRAME_TOO_LARGE)<SUB>149</SUB>> ]
+"464" [label = <(&lt;operator&gt;.fieldAccess,destination.nonsecureMemory)<SUB>152</SUB>> ]
+"467" [label = <(FIELD_IDENTIFIER,offset,offset)<SUB>152</SUB>> ]
+"491" [label = <(FIELD_IDENTIFIER,size,size)<SUB>159</SUB>> ]
+"503" [label = <(__builtin_add_overflow,__builtin_add_overflow(destSize, subSample.numBytesOfClearData, &amp;destSize))<SUB>161</SUB>> ]
+"510" [label = <(__builtin_add_overflow,__builtin_add_overflow(srcSize, subSample.numBytesOfClearData, &amp;srcSize))<SUB>162</SUB>> ]
+"518" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE, 0, &quot;subsample clear size overflow&quot;))<SUB>163</SUB>> ]
+"524" [label = <(RETURN,return Void();,return Void();)<SUB>164</SUB>> ]
+"528" [label = <(__builtin_add_overflow,__builtin_add_overflow(destSize, subSample.numBytesOfEncryptedData, &amp;destSize))<SUB>166</SUB>> ]
+"535" [label = <(__builtin_add_overflow,__builtin_add_overflow(srcSize, subSample.numBytesOfEncryptedData, &amp;srcSize))<SUB>167</SUB>> ]
+"543" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE, 0, &quot;subsample encrypted size overflow&quot;))<SUB>168</SUB>> ]
+"549" [label = <(RETURN,return Void();,return Void();)<SUB>169</SUB>> ]
+"553" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfEncryptedData)<SUB>171</SUB>> ]
+"558" [label = <(&lt;operator&gt;.assignment,haveEncryptedSubsamples = true)<SUB>172</SUB>> ]
+"567" [label = <(FIELD_IDENTIFIER,size,size)<SUB>176</SUB>> ]
+"572" [label = <(FIELD_IDENTIFIER,size,size)<SUB>176</SUB>> ]
+"577" [label = <(FIELD_IDENTIFIER,ERROR_DRM_FRAME_TOO_LARGE,ERROR_DRM_FRAME_TOO_LARGE)<SUB>177</SUB>> ]
+"592" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;Encrypted subsamples found in allegedly unencrypted data.&quot;))<SUB>183</SUB>> ]
+"598" [label = <(RETURN,return Void();,return Void();)<SUB>185</SUB>> ]
+"607" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>189</SUB>> ]
+"612" [label = <(size,subSamples.size())<SUB>189</SUB>> ]
+"620" [label = <(&lt;operator&gt;.assignment,&amp; subSample = subSamples[i])<SUB>190</SUB>> ]
+"654" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>199</SUB>> ]
+"656" [label = <(UNKNOWN,ssize_t,ssize_t)<SUB>199</SUB>> ]
+"664" [label = <(&lt;operator&gt;.equals,mode == Mode::AES_CTR)<SUB>201</SUB>> ]
+"266" [label = <(&lt;operator&gt;.fieldAccess,mSharedBufferMap.find)<SUB>105</SUB>> ]
+"269" [label = <(&lt;operator&gt;.fieldAccess,dest.bufferId)<SUB>105</SUB>> ]
+"273" [label = <(&lt;operator&gt;.fieldAccess,mSharedBufferMap.end)<SUB>105</SUB>> ]
+"278" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>106</SUB>> ]
+"284" [label = <(Void,Void())<SUB>108</SUB>> ]
+"290" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>111</SUB>> ]
+"329" [label = <(FIELD_IDENTIFIER,offset,offset)<SUB>123</SUB>> ]
+"337" [label = <(FIELD_IDENTIFIER,size,size)<SUB>124</SUB>> ]
+"345" [label = <(FIELD_IDENTIFIER,getSize,getSize)<SUB>125</SUB>> ]
+"368" [label = <(FIELD_IDENTIFIER,getPointer,getPointer)<SUB>132</SUB>> ]
+"379" [label = <(FIELD_IDENTIFIER,offset,offset)<SUB>133</SUB>> ]
+"424" [label = <(FIELD_IDENTIFIER,getPointer,getPointer)<SUB>143</SUB>> ]
+"444" [label = <(FIELD_IDENTIFIER,getSize,getSize)<SUB>147</SUB>> ]
+"466" [label = <(FIELD_IDENTIFIER,nonsecureMemory,nonsecureMemory)<SUB>152</SUB>> ]
+"505" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfClearData)<SUB>161</SUB>> ]
+"508" [label = <(&lt;operator&gt;.addressOf,&amp;destSize)<SUB>161</SUB>> ]
+"512" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfClearData)<SUB>162</SUB>> ]
+"515" [label = <(&lt;operator&gt;.addressOf,&amp;srcSize)<SUB>162</SUB>> ]
+"519" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>163</SUB>> ]
+"525" [label = <(Void,Void())<SUB>164</SUB>> ]
+"530" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfEncryptedData)<SUB>166</SUB>> ]
+"533" [label = <(&lt;operator&gt;.addressOf,&amp;destSize)<SUB>166</SUB>> ]
+"537" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfEncryptedData)<SUB>167</SUB>> ]
+"540" [label = <(&lt;operator&gt;.addressOf,&amp;srcSize)<SUB>167</SUB>> ]
+"544" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>168</SUB>> ]
+"550" [label = <(Void,Void())<SUB>169</SUB>> ]
+"555" [label = <(FIELD_IDENTIFIER,numBytesOfEncryptedData,numBytesOfEncryptedData)<SUB>171</SUB>> ]
+"593" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>183</SUB>> ]
+"599" [label = <(Void,Void())<SUB>185</SUB>> ]
+"613" [label = <(&lt;operator&gt;.fieldAccess,subSamples.size)<SUB>189</SUB>> ]
+"622" [label = <(&lt;operator&gt;.indirectIndexAccess,subSamples[i])<SUB>190</SUB>> ]
+"626" [label = <(&lt;operator&gt;.notEquals,subSample.numBytesOfClearData != 0)<SUB>191</SUB>> ]
+"666" [label = <(&lt;operator&gt;.fieldAccess,Mode::AES_CTR)<SUB>201</SUB>> ]
+"672" [label = <(&lt;operator&gt;.assignment,res = mSession-&gt;decrypt(keyId.data(), iv.data(), srcPtr,\012 static_cast&lt;uint8_t*&gt;(destPtr), toVector(subSamples), &amp;bytesDecrypted))<SUB>203</SUB>> ]
+"268" [label = <(FIELD_IDENTIFIER,find,find)<SUB>105</SUB>> ]
+"271" [label = <(FIELD_IDENTIFIER,bufferId,bufferId)<SUB>105</SUB>> ]
+"275" [label = <(FIELD_IDENTIFIER,end,end)<SUB>105</SUB>> ]
+"280" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>106</SUB>> ]
+"507" [label = <(FIELD_IDENTIFIER,numBytesOfClearData,numBytesOfClearData)<SUB>161</SUB>> ]
+"514" [label = <(FIELD_IDENTIFIER,numBytesOfClearData,numBytesOfClearData)<SUB>162</SUB>> ]
+"521" [label = <(FIELD_IDENTIFIER,ERROR_DRM_FRAME_TOO_LARGE,ERROR_DRM_FRAME_TOO_LARGE)<SUB>163</SUB>> ]
+"532" [label = <(FIELD_IDENTIFIER,numBytesOfEncryptedData,numBytesOfEncryptedData)<SUB>166</SUB>> ]
+"539" [label = <(FIELD_IDENTIFIER,numBytesOfEncryptedData,numBytesOfEncryptedData)<SUB>167</SUB>> ]
+"546" [label = <(FIELD_IDENTIFIER,ERROR_DRM_FRAME_TOO_LARGE,ERROR_DRM_FRAME_TOO_LARGE)<SUB>168</SUB>> ]
+"595" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>183</SUB>> ]
+"615" [label = <(FIELD_IDENTIFIER,size,size)<SUB>189</SUB>> ]
+"627" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfClearData)<SUB>191</SUB>> ]
+"632" [label = <(memcpy,memcpy(reinterpret_cast&lt;uint8_t*&gt;(destPtr) + offset,\012 reinterpret_cast&lt;const uint8_t*&gt;(srcPtr) + offset,\012                       subSample.numBytesOfClearData))<SUB>192</SUB>> ]
+"646" [label = <(&lt;operator&gt;.assignmentPlus,offset += subSample.numBytesOfClearData)<SUB>195</SUB>> ]
+"668" [label = <(FIELD_IDENTIFIER,AES_CTR,AES_CTR)<SUB>201</SUB>> ]
+"674" [label = <(decrypt,mSession-&gt;decrypt(keyId.data(), iv.data(), srcPtr,\012 static_cast&lt;uint8_t*&gt;(destPtr), toVector(subSamples), &amp;bytesDecrypted))<SUB>203</SUB>> ]
+"695" [label = <(&lt;operator&gt;.equals,res == Status_V1_2::OK)<SUB>205</SUB>> ]
+"721" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, 0,\012 &quot;Selected encryption mode is not supported by the ClearKey DRM Plugin.&quot;))<SUB>213</SUB>> ]
+"727" [label = <(RETURN,return Void();,return Void();)<SUB>215</SUB>> ]
+"629" [label = <(FIELD_IDENTIFIER,numBytesOfClearData,numBytesOfClearData)<SUB>191</SUB>> ]
+"633" [label = <(&lt;operator&gt;.addition,reinterpret_cast&lt;uint8_t*&gt;(destPtr) + offset)<SUB>192</SUB>> ]
+"638" [label = <(&lt;operator&gt;.addition,reinterpret_cast&lt;const uint8_t*&gt;(srcPtr) + offset)<SUB>193</SUB>> ]
+"643" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfClearData)<SUB>194</SUB>> ]
+"648" [label = <(&lt;operator&gt;.fieldAccess,subSample.numBytesOfClearData)<SUB>195</SUB>> ]
+"675" [label = <(&lt;operator&gt;.indirectFieldAccess,mSession-&gt;decrypt)<SUB>203</SUB>> ]
+"678" [label = <(data,keyId.data())<SUB>203</SUB>> ]
+"682" [label = <(data,iv.data())<SUB>203</SUB>> ]
+"687" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint8_t*&gt;(destPtr))<SUB>204</SUB>> ]
+"690" [label = <(toVector,toVector(subSamples))<SUB>204</SUB>> ]
+"692" [label = <(&lt;operator&gt;.addressOf,&amp;bytesDecrypted)<SUB>204</SUB>> ]
+"697" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>205</SUB>> ]
+"701" [label = <(_hidl_cb,_hidl_cb(Status_V1_2::OK, static_cast&lt;ssize_t&gt;(bytesDecrypted), &quot;&quot;))<SUB>206</SUB>> ]
+"709" [label = <(RETURN,return Void();,return Void();)<SUB>207</SUB>> ]
+"722" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>213</SUB>> ]
+"728" [label = <(Void,Void())<SUB>215</SUB>> ]
+"634" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;uint8_t*&gt;(destPtr))<SUB>192</SUB>> ]
+"639" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;const uint8_t*&gt;(srcPtr))<SUB>193</SUB>> ]
+"645" [label = <(FIELD_IDENTIFIER,numBytesOfClearData,numBytesOfClearData)<SUB>194</SUB>> ]
+"650" [label = <(FIELD_IDENTIFIER,numBytesOfClearData,numBytesOfClearData)<SUB>195</SUB>> ]
+"677" [label = <(FIELD_IDENTIFIER,decrypt,decrypt)<SUB>203</SUB>> ]
+"679" [label = <(&lt;operator&gt;.fieldAccess,keyId.data)<SUB>203</SUB>> ]
+"683" [label = <(&lt;operator&gt;.fieldAccess,iv.data)<SUB>203</SUB>> ]
+"688" [label = <(UNKNOWN,uint8_t*,uint8_t*)<SUB>204</SUB>> ]
+"699" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>205</SUB>> ]
+"702" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>206</SUB>> ]
+"705" [label = <(&lt;operator&gt;.cast,static_cast&lt;ssize_t&gt;(bytesDecrypted))<SUB>206</SUB>> ]
+"710" [label = <(Void,Void())<SUB>207</SUB>> ]
+"713" [label = <(_hidl_cb,_hidl_cb(res, 0, &quot;Decryption Error&quot;))<SUB>209</SUB>> ]
+"717" [label = <(RETURN,return Void();,return Void();)<SUB>210</SUB>> ]
+"724" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>213</SUB>> ]
+"635" [label = <(UNKNOWN,uint8_t*,uint8_t*)<SUB>192</SUB>> ]
+"640" [label = <(UNKNOWN,const uint8_t*,const uint8_t*)<SUB>193</SUB>> ]
+"681" [label = <(FIELD_IDENTIFIER,data,data)<SUB>203</SUB>> ]
+"685" [label = <(FIELD_IDENTIFIER,data,data)<SUB>203</SUB>> ]
+"704" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>206</SUB>> ]
+"706" [label = <(UNKNOWN,ssize_t,ssize_t)<SUB>206</SUB>> ]
+"718" [label = <(Void,Void())<SUB>210</SUB>> ]
+"201" [label = <(METHOD,decrypt_1_2)<SUB>78</SUB>> ]
+"729" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>78</SUB>> ]
+  "213" -> "221" 
+  "213" -> "231" 
+  "295" -> "307" 
+  "320" -> "329" 
+  "359" -> "373" 
+  "370" -> "382" 
+  "382" -> "390" 
+  "386" -> "393" 
+  "391" -> "403" 
+  "415" -> "425" 
+  "425" -> "433" 
+  "457" -> "469" 
+  "469" -> "473" 
+  "473" -> "477" 
+  "477" -> "483" 
+  "227" -> "243" 
+  "227" -> "252" 
+  "249" -> "262" 
+  "249" -> "290" 
+  "296" -> "305" 
+  "301" -> "295" 
+  "307" -> "314" 
+  "307" -> "320" 
+  "324" -> "347" 
+  "324" -> "362" 
+  "361" -> "359" 
+  "372" -> "370" 
+  "388" -> "386" 
+  "392" -> "401" 
+  "397" -> "391" 
+  "403" -> "410" 
+  "403" -> "418" 
+  "417" -> "415" 
+  "429" -> "446" 
+  "429" -> "460" 
+  "459" -> "457" 
+  "486" -> "498" 
+  "486" -> "567" 
+  "492" -> "491" 
+  "562" -> "577" 
+  "562" -> "587" 
+  "583" -> "595" 
+  "583" -> "601" 
+  "583" -> "668" 
+  "218" -> "225" 
+  "224" -> "729" 
+  "228" -> "238" 
+  "235" -> "227" 
+  "240" -> "247" 
+  "246" -> "729" 
+  "250" -> "255" 
+  "253" -> "249" 
+  "258" -> "268" 
+  "297" -> "296" 
+  "303" -> "301" 
+  "311" -> "318" 
+  "317" -> "729" 
+  "325" -> "324" 
+  "325" -> "345" 
+  "340" -> "324" 
+  "347" -> "353" 
+  "350" -> "357" 
+  "356" -> "729" 
+  "362" -> "364" 
+  "363" -> "361" 
+  "373" -> "379" 
+  "374" -> "372" 
+  "390" -> "388" 
+  "393" -> "392" 
+  "399" -> "397" 
+  "407" -> "414" 
+  "413" -> "729" 
+  "418" -> "420" 
+  "419" -> "417" 
   "430" -> "429" 
-  "436" -> "435" 
-  "442" -> "446" 
-  "443" -> "441" 
-  "453" -> "458" 
-  "456" -> "459" 
-  "459" -> "452" 
-  "463" -> "461" 
-  "472" -> "471" 
-  "478" -> "477" 
-  "485" -> "483" 
-  "515" -> "514" 
-  "524" -> "522" 
-  "528" -> "547" 
-  "528" -> "558" 
-  "553" -> "572" 
-  "553" -> "581" 
-  "578" -> "584" 
-  "578" -> "518" 
-  "591" -> "589" 
-  "596" -> "594" 
-  "601" -> "600" 
-  "607" -> "606" 
-  "613" -> "611" 
-  "636" -> "648" 
-  "636" -> "680" 
-  "642" -> "641" 
-  "678" -> "682" 
-  "681" -> "677" 
-  "686" -> "685" 
-  "233" -> "231" 
-  "253" -> "251" 
-  "256" -> "254" 
+  "430" -> "444" 
+  "439" -> "429" 
+  "446" -> "452" 
+  "449" -> "456" 
+  "455" -> "729" 
+  "460" -> "466" 
+  "461" -> "459" 
+  "483" -> "491" 
+  "488" -> "486" 
+  "496" -> "507" 
+  "563" -> "562" 
+  "563" -> "572" 
+  "568" -> "562" 
+  "574" -> "581" 
+  "580" -> "729" 
+  "585" -> "583" 
+  "601" -> "607" 
+  "651" -> "660" 
+  "659" -> "729" 
+  "219" -> "218" 
+  "225" -> "224" 
+  "229" -> "234" 
+  "232" -> "228" 
+  "236" -> "235" 
+  "241" -> "240" 
+  "247" -> "246" 
+  "252" -> "250" 
+  "255" -> "253" 
   "260" -> "258" 
-  "265" -> "263" 
-  "284" -> "282" 
-  "287" -> "297" 
-  "294" -> "286" 
-  "299" -> "306" 
-  "305" -> "755" 
-  "310" -> "309" 
-  "316" -> "315" 
-  "336" -> "334" 
-  "349" -> "353" 
-  "353" -> "348" 
-  "357" -> "360" 
-  "360" -> "355" 
-  "365" -> "364" 
-  "375" -> "373" 
-  "388" -> "387" 
-  "399" -> "397" 
-  "432" -> "430" 
-  "444" -> "443" 
-  "455" -> "453" 
-  "458" -> "456" 
-  "464" -> "463" 
-  "474" -> "472" 
-  "486" -> "489" 
-  "489" -> "485" 
-  "517" -> "515" 
-  "529" -> "528" 
-  "529" -> "540" 
-  "536" -> "528" 
-  "544" -> "551" 
-  "550" -> "755" 
-  "554" -> "553" 
-  "554" -> "565" 
-  "561" -> "553" 
-  "569" -> "576" 
-  "575" -> "755" 
-  "579" -> "578" 
-  "584" -> "518" 
-  "593" -> "591" 
-  "598" -> "596" 
-  "603" -> "601" 
-  "618" -> "625" 
-  "624" -> "755" 
-  "633" -> "641" 
-  "638" -> "636" 
-  "646" -> "655" 
-  "680" -> "678" 
-  "682" -> "681" 
-  "690" -> "703" 
-  "690" -> "750" 
-  "288" -> "293" 
-  "291" -> "287" 
-  "295" -> "294" 
-  "300" -> "299" 
-  "306" -> "305" 
-  "312" -> "310" 
-  "351" -> "349" 
-  "359" -> "357" 
-  "367" -> "365" 
-  "390" -> "388" 
+  "264" -> "280" 
+  "264" -> "297" 
+  "287" -> "294" 
+  "293" -> "729" 
+  "305" -> "303" 
+  "312" -> "311" 
+  "318" -> "317" 
+  "326" -> "325" 
+  "326" -> "337" 
+  "333" -> "325" 
+  "342" -> "340" 
+  "351" -> "350" 
+  "357" -> "356" 
+  "364" -> "368" 
+  "365" -> "363" 
+  "375" -> "374" 
   "401" -> "399" 
-  "446" -> "444" 
-  "466" -> "464" 
-  "488" -> "486" 
-  "531" -> "534" 
-  "534" -> "529" 
-  "538" -> "541" 
-  "541" -> "536" 
-  "545" -> "544" 
-  "551" -> "550" 
-  "556" -> "559" 
-  "559" -> "554" 
-  "563" -> "566" 
-  "566" -> "561" 
-  "570" -> "569" 
-  "576" -> "575" 
-  "581" -> "579" 
-  "619" -> "618" 
-  "625" -> "624" 
-  "639" -> "638" 
-  "648" -> "646" 
-  "652" -> "661" 
-  "652" -> "642" 
-  "692" -> "690" 
-  "698" -> "725" 
-  "290" -> "288" 
-  "293" -> "291" 
-  "297" -> "295" 
-  "302" -> "300" 
-  "533" -> "531" 
-  "540" -> "538" 
-  "547" -> "545" 
-  "558" -> "556" 
+  "408" -> "407" 
+  "414" -> "413" 
+  "420" -> "424" 
+  "421" -> "419" 
+  "431" -> "436" 
+  "434" -> "437" 
+  "437" -> "430" 
+  "441" -> "439" 
+  "450" -> "449" 
+  "456" -> "455" 
+  "463" -> "461" 
+  "489" -> "488" 
+  "498" -> "496" 
+  "502" -> "521" 
+  "502" -> "532" 
+  "527" -> "546" 
+  "527" -> "555" 
+  "552" -> "558" 
+  "552" -> "492" 
   "565" -> "563" 
+  "570" -> "568" 
+  "575" -> "574" 
+  "581" -> "580" 
+  "587" -> "585" 
+  "610" -> "622" 
+  "610" -> "654" 
+  "616" -> "615" 
+  "652" -> "656" 
+  "655" -> "651" 
+  "660" -> "659" 
+  "221" -> "219" 
+  "231" -> "229" 
+  "234" -> "232" 
+  "238" -> "236" 
+  "243" -> "241" 
+  "262" -> "260" 
+  "265" -> "275" 
+  "272" -> "264" 
+  "277" -> "284" 
+  "283" -> "729" 
+  "288" -> "287" 
+  "294" -> "293" 
+  "314" -> "312" 
+  "327" -> "331" 
+  "331" -> "326" 
+  "335" -> "338" 
+  "338" -> "333" 
+  "343" -> "342" 
+  "353" -> "351" 
+  "366" -> "365" 
+  "377" -> "375" 
+  "410" -> "408" 
+  "422" -> "421" 
+  "433" -> "431" 
+  "436" -> "434" 
+  "442" -> "441" 
+  "452" -> "450" 
+  "464" -> "467" 
+  "467" -> "463" 
+  "491" -> "489" 
+  "503" -> "502" 
+  "503" -> "514" 
+  "510" -> "502" 
+  "518" -> "525" 
+  "524" -> "729" 
+  "528" -> "527" 
+  "528" -> "539" 
+  "535" -> "527" 
+  "543" -> "550" 
+  "549" -> "729" 
+  "553" -> "552" 
+  "558" -> "492" 
+  "567" -> "565" 
   "572" -> "570" 
-  "621" -> "619" 
-  "641" -> "639" 
-  "653" -> "652" 
-  "658" -> "676" 
-  "672" -> "642" 
-  "694" -> "692" 
-  "700" -> "698" 
-  "721" -> "730" 
-  "721" -> "739" 
-  "747" -> "754" 
-  "753" -> "755" 
-  "655" -> "653" 
-  "659" -> "666" 
-  "664" -> "671" 
-  "669" -> "658" 
+  "577" -> "575" 
+  "592" -> "599" 
+  "598" -> "729" 
+  "607" -> "615" 
+  "612" -> "610" 
+  "620" -> "629" 
+  "654" -> "652" 
+  "656" -> "655" 
+  "664" -> "677" 
+  "664" -> "724" 
+  "266" -> "271" 
+  "269" -> "265" 
+  "273" -> "272" 
+  "278" -> "277" 
+  "284" -> "283" 
+  "290" -> "288" 
+  "329" -> "327" 
+  "337" -> "335" 
+  "345" -> "343" 
+  "368" -> "366" 
+  "379" -> "377" 
+  "424" -> "422" 
+  "444" -> "442" 
+  "466" -> "464" 
+  "505" -> "508" 
+  "508" -> "503" 
+  "512" -> "515" 
+  "515" -> "510" 
+  "519" -> "518" 
+  "525" -> "524" 
+  "530" -> "533" 
+  "533" -> "528" 
+  "537" -> "540" 
+  "540" -> "535" 
+  "544" -> "543" 
+  "550" -> "549" 
+  "555" -> "553" 
+  "593" -> "592" 
+  "599" -> "598" 
+  "613" -> "612" 
+  "622" -> "620" 
+  "626" -> "635" 
+  "626" -> "616" 
+  "666" -> "664" 
+  "672" -> "699" 
+  "268" -> "266" 
+  "271" -> "269" 
+  "275" -> "273" 
+  "280" -> "278" 
+  "507" -> "505" 
+  "514" -> "512" 
+  "521" -> "519" 
+  "532" -> "530" 
+  "539" -> "537" 
+  "546" -> "544" 
+  "595" -> "593" 
+  "615" -> "613" 
+  "627" -> "626" 
+  "632" -> "650" 
+  "646" -> "616" 
+  "668" -> "666" 
   "674" -> "672" 
-  "701" -> "707" 
-  "704" -> "711" 
-  "708" -> "714" 
-  "713" -> "716" 
-  "716" -> "718" 
-  "718" -> "700" 
-  "723" -> "721" 
-  "727" -> "736" 
-  "735" -> "755" 
-  "748" -> "747" 
-  "754" -> "753" 
-  "660" -> "659" 
-  "665" -> "664" 
-  "671" -> "669" 
-  "676" -> "674" 
-  "703" -> "701" 
-  "705" -> "704" 
-  "709" -> "708" 
-  "714" -> "713" 
-  "725" -> "723" 
-  "728" -> "732" 
-  "731" -> "727" 
-  "736" -> "735" 
-  "739" -> "744" 
-  "743" -> "755" 
-  "750" -> "748" 
-  "661" -> "660" 
-  "666" -> "665" 
-  "707" -> "705" 
-  "711" -> "709" 
-  "730" -> "728" 
-  "732" -> "731" 
-  "744" -> "743" 
-  "213" -> "225" 
+  "695" -> "704" 
+  "695" -> "713" 
+  "721" -> "728" 
+  "727" -> "729" 
+  "629" -> "627" 
+  "633" -> "640" 
+  "638" -> "645" 
+  "643" -> "632" 
+  "648" -> "646" 
+  "675" -> "681" 
+  "678" -> "685" 
+  "682" -> "688" 
+  "687" -> "690" 
+  "690" -> "692" 
+  "692" -> "674" 
+  "697" -> "695" 
+  "701" -> "710" 
+  "709" -> "729" 
+  "722" -> "721" 
+  "728" -> "727" 
+  "634" -> "633" 
+  "639" -> "638" 
+  "645" -> "643" 
+  "650" -> "648" 
+  "677" -> "675" 
+  "679" -> "678" 
+  "683" -> "682" 
+  "688" -> "687" 
+  "699" -> "697" 
+  "702" -> "706" 
+  "705" -> "701" 
+  "710" -> "709" 
+  "713" -> "718" 
+  "717" -> "729" 
+  "724" -> "722" 
+  "635" -> "634" 
+  "640" -> "639" 
+  "681" -> "679" 
+  "685" -> "683" 
+  "704" -> "702" 
+  "706" -> "705" 
+  "718" -> "717" 
+  "201" -> "213" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/14-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/14-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/14-cfg.dot	2023-06-07 19:39:46.447365115 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/14-cfg.dot	2023-06-07 19:39:50.487364760 +0330
@@ -1,51 +1,51 @@
 digraph "setMediaDrmSession" {  
-"793" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>235</SUB>> ]
-"761" [label = <(&lt;operator&gt;.logicalNot,!sessionId.size())<SUB>227</SUB>> ]
-"794" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>235</SUB>> ]
-"762" [label = <(size,sessionId.size())<SUB>227</SUB>> ]
-"767" [label = <(&lt;operator&gt;.assignment,mSession = nullptr)<SUB>228</SUB>> ]
-"796" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>235</SUB>> ]
-"763" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>227</SUB>> ]
-"772" [label = <(&lt;operator&gt;.assignment,mSession = SessionLibrary::get()-&gt;findSession(sessionId))<SUB>230</SUB>> ]
-"765" [label = <(FIELD_IDENTIFIER,size,size)<SUB>227</SUB>> ]
-"774" [label = <(findSession,SessionLibrary::get()-&gt;findSession(sessionId))<SUB>230</SUB>> ]
-"783" [label = <(&lt;operator&gt;.logicalNot,!mSession.get())<SUB>231</SUB>> ]
-"775" [label = <(&lt;operator&gt;.indirectFieldAccess,SessionLibrary::get()-&gt;findSession)<SUB>230</SUB>> ]
-"784" [label = <(get,mSession.get())<SUB>231</SUB>> ]
-"789" [label = <(RETURN,return Status::ERROR_DRM_SESSION_NOT_OPENED;,return Status::ERROR_DRM_SESSION_NOT_OPENED;)<SUB>232</SUB>> ]
-"776" [label = <(SessionLibrary::get,SessionLibrary::get())<SUB>230</SUB>> ]
-"780" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>230</SUB>> ]
-"785" [label = <(&lt;operator&gt;.fieldAccess,mSession.get)<SUB>231</SUB>> ]
-"790" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>232</SUB>> ]
-"777" [label = <(&lt;operator&gt;.fieldAccess,SessionLibrary::get)<SUB>230</SUB>> ]
-"787" [label = <(FIELD_IDENTIFIER,get,get)<SUB>231</SUB>> ]
-"792" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>232</SUB>> ]
-"779" [label = <(FIELD_IDENTIFIER,get,get)<SUB>230</SUB>> ]
-"757" [label = <(METHOD,setMediaDrmSession)<SUB>225</SUB>> ]
-"797" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>225</SUB>> ]
-  "793" -> "797" 
-  "761" -> "767" 
-  "761" -> "779" 
-  "794" -> "793" 
-  "762" -> "761" 
-  "767" -> "796" 
-  "796" -> "794" 
-  "763" -> "762" 
-  "772" -> "787" 
-  "765" -> "763" 
-  "774" -> "772" 
-  "783" -> "792" 
-  "783" -> "796" 
-  "775" -> "774" 
-  "784" -> "783" 
-  "789" -> "797" 
-  "776" -> "780" 
-  "780" -> "775" 
-  "785" -> "784" 
-  "790" -> "789" 
-  "777" -> "776" 
-  "787" -> "785" 
-  "792" -> "790" 
-  "779" -> "777" 
-  "757" -> "765" 
+"767" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>229</SUB>> ]
+"735" [label = <(&lt;operator&gt;.logicalNot,!sessionId.size())<SUB>221</SUB>> ]
+"768" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>229</SUB>> ]
+"736" [label = <(size,sessionId.size())<SUB>221</SUB>> ]
+"741" [label = <(&lt;operator&gt;.assignment,mSession = nullptr)<SUB>222</SUB>> ]
+"770" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>229</SUB>> ]
+"737" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>221</SUB>> ]
+"746" [label = <(&lt;operator&gt;.assignment,mSession = SessionLibrary::get()-&gt;findSession(sessionId))<SUB>224</SUB>> ]
+"739" [label = <(FIELD_IDENTIFIER,size,size)<SUB>221</SUB>> ]
+"748" [label = <(findSession,SessionLibrary::get()-&gt;findSession(sessionId))<SUB>224</SUB>> ]
+"757" [label = <(&lt;operator&gt;.logicalNot,!mSession.get())<SUB>225</SUB>> ]
+"749" [label = <(&lt;operator&gt;.indirectFieldAccess,SessionLibrary::get()-&gt;findSession)<SUB>224</SUB>> ]
+"758" [label = <(get,mSession.get())<SUB>225</SUB>> ]
+"763" [label = <(RETURN,return Status::ERROR_DRM_SESSION_NOT_OPENED;,return Status::ERROR_DRM_SESSION_NOT_OPENED;)<SUB>226</SUB>> ]
+"750" [label = <(SessionLibrary::get,SessionLibrary::get())<SUB>224</SUB>> ]
+"754" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>224</SUB>> ]
+"759" [label = <(&lt;operator&gt;.fieldAccess,mSession.get)<SUB>225</SUB>> ]
+"764" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>226</SUB>> ]
+"751" [label = <(&lt;operator&gt;.fieldAccess,SessionLibrary::get)<SUB>224</SUB>> ]
+"761" [label = <(FIELD_IDENTIFIER,get,get)<SUB>225</SUB>> ]
+"766" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>226</SUB>> ]
+"753" [label = <(FIELD_IDENTIFIER,get,get)<SUB>224</SUB>> ]
+"731" [label = <(METHOD,setMediaDrmSession)<SUB>219</SUB>> ]
+"771" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>219</SUB>> ]
+  "767" -> "771" 
+  "735" -> "741" 
+  "735" -> "753" 
+  "768" -> "767" 
+  "736" -> "735" 
+  "741" -> "770" 
+  "770" -> "768" 
+  "737" -> "736" 
+  "746" -> "761" 
+  "739" -> "737" 
+  "748" -> "746" 
+  "757" -> "766" 
+  "757" -> "770" 
+  "749" -> "748" 
+  "758" -> "757" 
+  "763" -> "771" 
+  "750" -> "754" 
+  "754" -> "749" 
+  "759" -> "758" 
+  "764" -> "763" 
+  "751" -> "750" 
+  "761" -> "759" 
+  "766" -> "764" 
+  "753" -> "751" 
+  "731" -> "739" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/15-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/15-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/15-cfg.dot	2023-06-07 19:39:46.447365115 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/15-cfg.dot	2023-06-07 19:39:50.487364760 +0330
@@ -1,9 +1,9 @@
 digraph "&lt;global&gt;" {  
-"804" [label = <(UNKNOWN,namespace {\012 static const size_t KEY_ID_SIZE = 16;\012 static const size_t KEY_IV_SIZE = 16;\012},namespace {\012 static const size_t KEY_ID_SIZE = 16;\012 static const size_t KEY_IV_SIZE = 16;\012})<SUB>29</SUB>> ]
-"805" [label = <(UNKNOWN,namespace android {\012namespace hardware {\012namespace drm {\012namespace V1_2 {\012namespace clearkey {\012\012namespace drm = ::android::hardware::drm;\012using drm::V1_0::DestinationBuffer;\012using drm::V1_0::Mode;\012using drm::V1_0::Pattern;\012using drm::V1_0::SharedBuffer;\012using drm::V1_0::Status;\012using drm::V1_0::SubSample;\012\012using ::android::hardware::hidl_array;\012using ::android::hardware::hidl_memory;\012using ::android::hardware::hidl_string;\012using ::android::hardware::hidl_vec;\012using ::android::hardware::Return;\012using ::android::hardware::Void;\012using ::android::hidl::memory::V1_0::IMemory;\012using ::android::sp;\012\012typedef drm::V1_2::Status Status_V1_2;\012\012struct CryptoPlugin : public drm::V1_2::ICryptoPlugin {\012 explicit CryptoPlugin(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012        mInitStatus = setMediaDrmSession(sessionId);\012 }\012 virtual ~CryptoPlugin() {}\012\012 Return&lt;bool&gt; requiresSecureDecoderComponent(const hidl_string&amp; mime) {\012        UNUSED(mime);\012 return false;\012 }\012\012 Return&lt;void&gt; notifyResolution(uint32_t width, uint32_t height) {\012        UNUSED(width);\012        UNUSED(height);\012 return Void();\012 }\012\012 Return&lt;void&gt; decrypt(\012 bool secure,\012 const hidl_array&lt;uint8_t, KEY_ID_SIZE&gt;&amp; keyId,\012 const hidl_array&lt;uint8_t, KEY_IV_SIZE&gt;&amp; iv,\012 Mode mode,\012 const Pattern&amp; pattern,\012 const hidl_vec&lt;SubSample&gt;&amp; subSamples,\012 const SharedBuffer&amp; source,\012 uint64_t offset,\012 const DestinationBuffer&amp; destination,\012            decrypt_cb _hidl_cb);\012\012 Return&lt;void&gt; decrypt_1_2(\012 bool secure,\012 const hidl_array&lt;uint8_t, KEY_ID_SIZE&gt;&amp; keyId,\012 const hidl_array&lt;uint8_t, KEY_IV_SIZE&gt;&amp; iv,\012 Mode mode,\012 const Pattern&amp; pattern,\012 const hidl_vec&lt;SubSample&gt;&amp; subSamples,\012 const SharedBuffer&amp; source,\012 uint64_t offset,\012 const DestinationBuffer&amp; destination,\012            decrypt_1_2_cb _hidl_cb) NO_THREAD_SAFETY_ANALYSIS; // use unique_lock\012\012 Return&lt;void&gt; setSharedBufferBase(const hidl_memory&amp; base,\012 uint32_t bufferId);\012\012 Return&lt;Status&gt; setMediaDrmSession(const hidl_vec&lt;uint8_t&gt;&amp; sessionId);\012\012 Return&lt;Status&gt; getInitStatus() const { return mInitStatus; }\012\012private:\012    CLEARKEY_DISALLOW_COPY_AND_ASSIGN(CryptoPlugin);\012\012    std::mutex mSharedBufferLock;\012    std::map&lt;uint32_t, sp&lt;IMemory&gt;&gt; mSharedBufferMap GUARDED_BY(mSharedBufferLock);\012    sp&lt;Session&gt; mSession;\012 Status mInitStatus;\012};\012\012} // namespace clearkey\012} // namespace V1_2\012} // namespace drm\012} // namespace hardware\012},namespace android {\012namespace hardware {\012namespace drm {\012namespace V1_2 {\012namespace clearkey {\012\012namespace drm = ::android::hardware::drm;\012using drm::V1_0::DestinationBuffer;\012using drm::V1_0::Mode;\012using drm::V1_0::Pattern;\012using drm::V1_0::SharedBuffer;\012using drm::V1_0::Status;\012using drm::V1_0::SubSample;\012\012using ::android::hardware::hidl_array;\012using ::android::hardware::hidl_memory;\012using ::android::hardware::hidl_string;\012using ::android::hardware::hidl_vec;\012using ::android::hardware::Return;\012using ::android::hardware::Void;\012using ::android::hidl::memory::V1_0::IMemory;\012using ::android::sp;\012\012typedef drm::V1_2::Status Status_V1_2;\012\012struct CryptoPlugin : public drm::V1_2::ICryptoPlugin {\012 explicit CryptoPlugin(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012        mInitStatus = setMediaDrmSession(sessionId);\012 }\012 virtual ~CryptoPlugin() {}\012\012 Return&lt;bool&gt; requiresSecureDecoderComponent(const hidl_string&amp; mime) {\012        UNUSED(mime);\012 return false;\012 }\012\012 Return&lt;void&gt; notifyResolution(uint32_t width, uint32_t height) {\012        UNUSED(width);\012        UNUSED(height);\012 return Void();\012 }\012\012 Return&lt;void&gt; decrypt(\012 bool secure,\012 const hidl_array&lt;uint8_t, KEY_ID_SIZE&gt;&amp; keyId,\012 const hidl_array&lt;uint8_t, KEY_IV_SIZE&gt;&amp; iv,\012 Mode mode,\012 const Pattern&amp; pattern,\012 const hidl_vec&lt;SubSample&gt;&amp; subSamples,\012 const SharedBuffer&amp; source,\012 uint64_t offset,\012 const DestinationBuffer&amp; destination,\012            decrypt_cb _hidl_cb);\012\012 Return&lt;void&gt; decrypt_1_2(\012 bool secure,\012 const hidl_array&lt;uint8_t, KEY_ID_SIZE&gt;&amp; keyId,\012 const hidl_array&lt;uint8_t, KEY_IV_SIZE&gt;&amp; iv,\012 Mode mode,\012 const Pattern&amp; pattern,\012 const hidl_vec&lt;SubSample&gt;&amp; subSamples,\012 const SharedBuffer&amp; source,\012 uint64_t offset,\012 const DestinationBuffer&amp; destination,\012            decrypt_1_2_cb _hidl_cb) NO_THREAD_SAFETY_ANALYSIS; // use unique_lock\012\012 Return&lt;void&gt; setSharedBufferBase(const hidl_memory&amp; base,\012 uint32_t bufferId);\012\012 Return&lt;Status&gt; setMediaDrmSession(const hidl_vec&lt;uint8_t&gt;&amp; sessionId);\012\012 Return&lt;Status&gt; getInitStatus() const { return mInitStatus; }\012\012private:\012    CLEARKEY_DISALLOW_COPY_AND_ASSIGN(CryptoPlugin);\012\012    std::mutex mSharedBufferLock;\012    std::map&lt;uint32_t, sp&lt;IMemory&gt;&gt; mSharedBufferMap GUARDED_BY(mSharedBufferLock);\012    sp&lt;Session&gt; mSession;\012 Status mInitStatus;\012};\012\012} // namespace clearkey\012} // namespace V1_2\012} // namespace drm\012} // namespace hardware\012})<SUB>34</SUB>> ]
-"802" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"806" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
-  "804" -> "805" 
-  "805" -> "806" 
-  "802" -> "804" 
+"778" [label = <(UNKNOWN,namespace {\012 static const size_t KEY_ID_SIZE = 16;\012 static const size_t KEY_IV_SIZE = 16;\012},namespace {\012 static const size_t KEY_ID_SIZE = 16;\012 static const size_t KEY_IV_SIZE = 16;\012})<SUB>27</SUB>> ]
+"779" [label = <(UNKNOWN,namespace android {\012namespace hardware {\012namespace drm {\012namespace V1_2 {\012namespace clearkey {\012\012namespace drm = ::android::hardware::drm;\012using drm::V1_0::DestinationBuffer;\012using drm::V1_0::Mode;\012using drm::V1_0::Pattern;\012using drm::V1_0::SharedBuffer;\012using drm::V1_0::Status;\012using drm::V1_0::SubSample;\012\012using ::android::hardware::hidl_array;\012using ::android::hardware::hidl_memory;\012using ::android::hardware::hidl_string;\012using ::android::hardware::hidl_vec;\012using ::android::hardware::Return;\012using ::android::hardware::Void;\012using ::android::hidl::memory::V1_0::IMemory;\012using ::android::sp;\012\012typedef drm::V1_2::Status Status_V1_2;\012\012struct CryptoPlugin : public drm::V1_2::ICryptoPlugin {\012 explicit CryptoPlugin(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012        mInitStatus = setMediaDrmSession(sessionId);\012 }\012 virtual ~CryptoPlugin() {}\012\012 Return&lt;bool&gt; requiresSecureDecoderComponent(const hidl_string&amp; mime) {\012        UNUSED(mime);\012 return false;\012 }\012\012 Return&lt;void&gt; notifyResolution(uint32_t width, uint32_t height) {\012        UNUSED(width);\012        UNUSED(height);\012 return Void();\012 }\012\012 Return&lt;void&gt; decrypt(\012 bool secure,\012 const hidl_array&lt;uint8_t, KEY_ID_SIZE&gt;&amp; keyId,\012 const hidl_array&lt;uint8_t, KEY_IV_SIZE&gt;&amp; iv,\012 Mode mode,\012 const Pattern&amp; pattern,\012 const hidl_vec&lt;SubSample&gt;&amp; subSamples,\012 const SharedBuffer&amp; source,\012 uint64_t offset,\012 const DestinationBuffer&amp; destination,\012            decrypt_cb _hidl_cb);\012\012 Return&lt;void&gt; decrypt_1_2(\012 bool secure,\012 const hidl_array&lt;uint8_t, KEY_ID_SIZE&gt;&amp; keyId,\012 const hidl_array&lt;uint8_t, KEY_IV_SIZE&gt;&amp; iv,\012 Mode mode,\012 const Pattern&amp; pattern,\012 const hidl_vec&lt;SubSample&gt;&amp; subSamples,\012 const SharedBuffer&amp; source,\012 uint64_t offset,\012 const DestinationBuffer&amp; destination,\012            decrypt_1_2_cb _hidl_cb);\012\012 Return&lt;void&gt; setSharedBufferBase(const hidl_memory&amp; base,\012 uint32_t bufferId);\012\012 Return&lt;Status&gt; setMediaDrmSession(const hidl_vec&lt;uint8_t&gt;&amp; sessionId);\012\012 Return&lt;Status&gt; getInitStatus() const { return mInitStatus; }\012\012private:\012    CLEARKEY_DISALLOW_COPY_AND_ASSIGN(CryptoPlugin);\012\012    std::map&lt;uint32_t, sp&lt;IMemory&gt; &gt; mSharedBufferMap;\012    sp&lt;Session&gt; mSession;\012 Status mInitStatus;\012};\012\012} // namespace clearkey\012} // namespace V1_2\012} // namespace drm\012} // namespace hardware\012},namespace android {\012namespace hardware {\012namespace drm {\012namespace V1_2 {\012namespace clearkey {\012\012namespace drm = ::android::hardware::drm;\012using drm::V1_0::DestinationBuffer;\012using drm::V1_0::Mode;\012using drm::V1_0::Pattern;\012using drm::V1_0::SharedBuffer;\012using drm::V1_0::Status;\012using drm::V1_0::SubSample;\012\012using ::android::hardware::hidl_array;\012using ::android::hardware::hidl_memory;\012using ::android::hardware::hidl_string;\012using ::android::hardware::hidl_vec;\012using ::android::hardware::Return;\012using ::android::hardware::Void;\012using ::android::hidl::memory::V1_0::IMemory;\012using ::android::sp;\012\012typedef drm::V1_2::Status Status_V1_2;\012\012struct CryptoPlugin : public drm::V1_2::ICryptoPlugin {\012 explicit CryptoPlugin(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012        mInitStatus = setMediaDrmSession(sessionId);\012 }\012 virtual ~CryptoPlugin() {}\012\012 Return&lt;bool&gt; requiresSecureDecoderComponent(const hidl_string&amp; mime) {\012        UNUSED(mime);\012 return false;\012 }\012\012 Return&lt;void&gt; notifyResolution(uint32_t width, uint32_t height) {\012        UNUSED(width);\012        UNUSED(height);\012 return Void();\012 }\012\012 Return&lt;void&gt; decrypt(\012 bool secure,\012 const hidl_array&lt;uint8_t, KEY_ID_SIZE&gt;&amp; keyId,\012 const hidl_array&lt;uint8_t, KEY_IV_SIZE&gt;&amp; iv,\012 Mode mode,\012 const Pattern&amp; pattern,\012 const hidl_vec&lt;SubSample&gt;&amp; subSamples,\012 const SharedBuffer&amp; source,\012 uint64_t offset,\012 const DestinationBuffer&amp; destination,\012            decrypt_cb _hidl_cb);\012\012 Return&lt;void&gt; decrypt_1_2(\012 bool secure,\012 const hidl_array&lt;uint8_t, KEY_ID_SIZE&gt;&amp; keyId,\012 const hidl_array&lt;uint8_t, KEY_IV_SIZE&gt;&amp; iv,\012 Mode mode,\012 const Pattern&amp; pattern,\012 const hidl_vec&lt;SubSample&gt;&amp; subSamples,\012 const SharedBuffer&amp; source,\012 uint64_t offset,\012 const DestinationBuffer&amp; destination,\012            decrypt_1_2_cb _hidl_cb);\012\012 Return&lt;void&gt; setSharedBufferBase(const hidl_memory&amp; base,\012 uint32_t bufferId);\012\012 Return&lt;Status&gt; setMediaDrmSession(const hidl_vec&lt;uint8_t&gt;&amp; sessionId);\012\012 Return&lt;Status&gt; getInitStatus() const { return mInitStatus; }\012\012private:\012    CLEARKEY_DISALLOW_COPY_AND_ASSIGN(CryptoPlugin);\012\012    std::map&lt;uint32_t, sp&lt;IMemory&gt; &gt; mSharedBufferMap;\012    sp&lt;Session&gt; mSession;\012 Status mInitStatus;\012};\012\012} // namespace clearkey\012} // namespace V1_2\012} // namespace drm\012} // namespace hardware\012})<SUB>32</SUB>> ]
+"776" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"780" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+  "778" -> "779" 
+  "779" -> "780" 
+  "776" -> "778" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/16-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/16-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/16-cfg.dot	2023-06-07 19:39:46.447365115 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/16-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,9 +1,9 @@
 digraph "&lt;global&gt;" {  
-"5" [label = <(&lt;operator&gt;.assignment,KEY_ID_SIZE = 16)<SUB>30</SUB>> ]
-"9" [label = <(&lt;operator&gt;.assignment,KEY_IV_SIZE = 16)<SUB>31</SUB>> ]
-"856" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"858" [label = <(METHOD_RETURN,ANY)> ]
+"5" [label = <(&lt;operator&gt;.assignment,KEY_ID_SIZE = 16)<SUB>28</SUB>> ]
+"9" [label = <(&lt;operator&gt;.assignment,KEY_IV_SIZE = 16)<SUB>29</SUB>> ]
+"830" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"832" [label = <(METHOD_RETURN,ANY)> ]
   "5" -> "9" 
-  "9" -> "858" 
-  "856" -> "5" 
+  "9" -> "832" 
+  "830" -> "5" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/17-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/17-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/17-cfg.dot	2023-06-07 19:39:46.447365115 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/17-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignment" {  
-"914" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
-"918" [label = <(METHOD_RETURN,ANY)> ]
-  "914" -> "918" 
+"888" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
+"892" [label = <(METHOD_RETURN,ANY)> ]
+  "888" -> "892" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/18-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/18-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/18-cfg.dot	2023-06-07 19:39:46.447365115 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/18-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
 digraph "setMediaDrmSession" {  
-"919" [label = <(METHOD,setMediaDrmSession)> ]
-"922" [label = <(METHOD_RETURN,ANY)> ]
-  "919" -> "922" 
+"893" [label = <(METHOD,setMediaDrmSession)> ]
+"896" [label = <(METHOD_RETURN,ANY)> ]
+  "893" -> "896" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/19-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/19-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/19-cfg.dot	2023-06-07 19:39:46.447365115 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/19-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
 digraph "UNUSED" {  
-"923" [label = <(METHOD,UNUSED)> ]
-"926" [label = <(METHOD_RETURN,ANY)> ]
-  "923" -> "926" 
+"897" [label = <(METHOD,UNUSED)> ]
+"900" [label = <(METHOD_RETURN,ANY)> ]
+  "897" -> "900" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/2-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/2-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/2-cfg.dot	2023-06-07 19:39:46.397365122 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/2-cfg.dot	2023-06-07 19:39:50.437364764 +0330
@@ -1,8 +1,8 @@
 digraph "requiresSecureDecoderComponent" {  
-"36" [label = <(UNUSED,UNUSED(mime))<SUB>66</SUB>> ]
-"38" [label = <(RETURN,return false;,return false;)<SUB>67</SUB>> ]
-"33" [label = <(METHOD,requiresSecureDecoderComponent)<SUB>65</SUB>> ]
-"40" [label = <(METHOD_RETURN,Return&lt;bool&gt;)<SUB>65</SUB>> ]
+"36" [label = <(UNUSED,UNUSED(mime))<SUB>64</SUB>> ]
+"38" [label = <(RETURN,return false;,return false;)<SUB>65</SUB>> ]
+"33" [label = <(METHOD,requiresSecureDecoderComponent)<SUB>63</SUB>> ]
+"40" [label = <(METHOD_RETURN,Return&lt;bool&gt;)<SUB>63</SUB>> ]
   "36" -> "38" 
   "38" -> "40" 
   "33" -> "36" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/20-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/20-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/20-cfg.dot	2023-06-07 19:39:46.447365115 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/20-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
 digraph "Void" {  
-"927" [label = <(METHOD,Void)> ]
-"929" [label = <(METHOD_RETURN,ANY)> ]
-  "927" -> "929" 
+"901" [label = <(METHOD,Void)> ]
+"903" [label = <(METHOD_RETURN,ANY)> ]
+  "901" -> "903" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/21-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/21-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/21-cfg.dot	2023-06-07 19:39:46.447365115 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/21-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterThan" {  
-"930" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
-"934" [label = <(METHOD_RETURN,ANY)> ]
-  "930" -> "934" 
+"904" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
+"908" [label = <(METHOD_RETURN,ANY)> ]
+  "904" -> "908" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/22-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/22-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/22-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/22-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessThan" {  
-"935" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
-"939" [label = <(METHOD_RETURN,ANY)> ]
-  "935" -> "939" 
+"909" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
+"913" [label = <(METHOD_RETURN,ANY)> ]
+  "909" -> "913" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/23-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/23-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/23-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/23-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
 digraph "mapMemory" {  
-"940" [label = <(METHOD,mapMemory)> ]
-"943" [label = <(METHOD_RETURN,ANY)> ]
-  "940" -> "943" 
+"914" [label = <(METHOD,mapMemory)> ]
+"917" [label = <(METHOD_RETURN,ANY)> ]
+  "914" -> "917" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/24-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/24-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/24-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/24-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGE_IF" {  
-"944" [label = <(METHOD,ALOGE_IF)> ]
-"948" [label = <(METHOD_RETURN,ANY)> ]
-  "944" -> "948" 
+"918" [label = <(METHOD,ALOGE_IF)> ]
+"922" [label = <(METHOD_RETURN,ANY)> ]
+  "918" -> "922" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/25-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/25-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/25-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/25-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.equals" {  
-"949" [label = <(METHOD,&lt;operator&gt;.equals)> ]
-"953" [label = <(METHOD_RETURN,ANY)> ]
-  "949" -> "953" 
+"923" [label = <(METHOD,&lt;operator&gt;.equals)> ]
+"927" [label = <(METHOD_RETURN,ANY)> ]
+  "923" -> "927" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/26-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/26-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/26-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/26-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.fieldAccess" {  
-"954" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
-"958" [label = <(METHOD_RETURN,ANY)> ]
-  "954" -> "958" 
+digraph "&lt;operator&gt;.indirectIndexAccess" {  
+"928" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
+"932" [label = <(METHOD_RETURN,ANY)> ]
+  "928" -> "932" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/27-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/27-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/27-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/27-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "shared_buffer_lock" {  
-"959" [label = <(METHOD,shared_buffer_lock)> ]
-"962" [label = <(METHOD_RETURN,ANY)> ]
-  "959" -> "962" 
+digraph "&lt;operator&gt;.fieldAccess" {  
+"933" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
+"937" [label = <(METHOD_RETURN,ANY)> ]
+  "933" -> "937" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/28-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/28-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/28-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/28-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.indirectIndexAccess" {  
-"963" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
-"967" [label = <(METHOD_RETURN,ANY)> ]
-  "963" -> "967" 
+digraph "decrypt_1_2" {  
+"938" [label = <(METHOD,decrypt_1_2)> ]
+"950" [label = <(METHOD_RETURN,ANY)> ]
+  "938" -> "950" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/29-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/29-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/29-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/29-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "decrypt_1_2" {  
-"968" [label = <(METHOD,decrypt_1_2)> ]
-"980" [label = <(METHOD_RETURN,ANY)> ]
-  "968" -> "980" 
+digraph "&lt;operator&gt;.conditional" {  
+"951" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
+"956" [label = <(METHOD_RETURN,ANY)> ]
+  "951" -> "956" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/3-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/3-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/3-cfg.dot	2023-06-07 19:39:46.407365120 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/3-cfg.dot	2023-06-07 19:39:50.437364764 +0330
@@ -1,10 +1,10 @@
 digraph "notifyResolution" {  
-"46" [label = <(UNUSED,UNUSED(width))<SUB>71</SUB>> ]
-"48" [label = <(UNUSED,UNUSED(height))<SUB>72</SUB>> ]
-"50" [label = <(RETURN,return Void();,return Void();)<SUB>73</SUB>> ]
-"51" [label = <(Void,Void())<SUB>73</SUB>> ]
-"42" [label = <(METHOD,notifyResolution)<SUB>70</SUB>> ]
-"52" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>70</SUB>> ]
+"46" [label = <(UNUSED,UNUSED(width))<SUB>69</SUB>> ]
+"48" [label = <(UNUSED,UNUSED(height))<SUB>70</SUB>> ]
+"50" [label = <(RETURN,return Void();,return Void();)<SUB>71</SUB>> ]
+"51" [label = <(Void,Void())<SUB>71</SUB>> ]
+"42" [label = <(METHOD,notifyResolution)<SUB>68</SUB>> ]
+"52" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>68</SUB>> ]
   "46" -> "48" 
   "48" -> "51" 
   "50" -> "52" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/30-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/30-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/30-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/30-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.conditional" {  
-"981" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
-"986" [label = <(METHOD_RETURN,ANY)> ]
-  "981" -> "986" 
+digraph "isOk" {  
+"957" [label = <(METHOD,isOk)> ]
+"960" [label = <(METHOD_RETURN,ANY)> ]
+  "957" -> "960" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/31-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/31-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/31-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/31-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "isOk" {  
-"987" [label = <(METHOD,isOk)> ]
-"990" [label = <(METHOD_RETURN,ANY)> ]
-  "987" -> "990" 
+digraph "_hidl_cb" {  
+"961" [label = <(METHOD,_hidl_cb)> ]
+"966" [label = <(METHOD_RETURN,ANY)> ]
+  "961" -> "966" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/32-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/32-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/32-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/32-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "_hidl_cb" {  
-"991" [label = <(METHOD,_hidl_cb)> ]
-"996" [label = <(METHOD_RETURN,ANY)> ]
-  "991" -> "996" 
+digraph "find" {  
+"967" [label = <(METHOD,find)> ]
+"971" [label = <(METHOD_RETURN,ANY)> ]
+  "967" -> "971" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/33-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/33-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/33-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/33-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "find" {  
-"997" [label = <(METHOD,find)> ]
-"1001" [label = <(METHOD_RETURN,ANY)> ]
-  "997" -> "1001" 
+digraph "end" {  
+"972" [label = <(METHOD,end)> ]
+"975" [label = <(METHOD_RETURN,ANY)> ]
+  "972" -> "975" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/34-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/34-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/34-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/34-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "end" {  
-"1002" [label = <(METHOD,end)> ]
-"1005" [label = <(METHOD_RETURN,ANY)> ]
-  "1002" -> "1005" 
+digraph "&lt;operator&gt;.logicalOr" {  
+"976" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
+"980" [label = <(METHOD_RETURN,ANY)> ]
+  "976" -> "980" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/35-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/35-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/35-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/35-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.logicalOr" {  
-"1006" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
-"1010" [label = <(METHOD_RETURN,ANY)> ]
-  "1006" -> "1010" 
+digraph "__builtin_add_overflow" {  
+"981" [label = <(METHOD,__builtin_add_overflow)> ]
+"986" [label = <(METHOD_RETURN,ANY)> ]
+  "981" -> "986" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/36-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/36-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/36-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/36-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "__builtin_add_overflow" {  
-"1011" [label = <(METHOD,__builtin_add_overflow)> ]
-"1016" [label = <(METHOD_RETURN,ANY)> ]
-  "1011" -> "1016" 
+digraph "&lt;operator&gt;.addressOf" {  
+"987" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
+"990" [label = <(METHOD_RETURN,ANY)> ]
+  "987" -> "990" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/37-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/37-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/37-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/37-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.addressOf" {  
-"1017" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
-"1020" [label = <(METHOD_RETURN,ANY)> ]
-  "1017" -> "1020" 
+digraph "getSize" {  
+"991" [label = <(METHOD,getSize)> ]
+"994" [label = <(METHOD_RETURN,ANY)> ]
+  "991" -> "994" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/38-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/38-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/38-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/38-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "getSize" {  
-"1021" [label = <(METHOD,getSize)> ]
-"1024" [label = <(METHOD_RETURN,ANY)> ]
-  "1021" -> "1024" 
+digraph "&lt;operator&gt;.indirectFieldAccess" {  
+"995" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
+"999" [label = <(METHOD_RETURN,ANY)> ]
+  "995" -> "999" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/39-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/39-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/39-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/39-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.indirectFieldAccess" {  
-"1025" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
-"1029" [label = <(METHOD_RETURN,ANY)> ]
-  "1025" -> "1029" 
+digraph "android_errorWriteLog" {  
+"1000" [label = <(METHOD,android_errorWriteLog)> ]
+"1004" [label = <(METHOD_RETURN,ANY)> ]
+  "1000" -> "1004" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/4-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/4-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/4-cfg.dot	2023-06-07 19:39:46.407365120 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/4-cfg.dot	2023-06-07 19:39:50.437364764 +0330
@@ -1,5 +1,5 @@
 digraph "decrypt" {  
-"54" [label = <(METHOD,decrypt)<SUB>76</SUB>> ]
-"66" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>76</SUB>> ]
+"54" [label = <(METHOD,decrypt)<SUB>74</SUB>> ]
+"66" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>74</SUB>> ]
   "54" -> "66" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/40-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/40-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/40-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/40-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "android_errorWriteLog" {  
-"1030" [label = <(METHOD,android_errorWriteLog)> ]
-"1034" [label = <(METHOD_RETURN,ANY)> ]
-  "1030" -> "1034" 
+digraph "&lt;operator&gt;.cast" {  
+"1005" [label = <(METHOD,&lt;operator&gt;.cast)> ]
+"1009" [label = <(METHOD_RETURN,ANY)> ]
+  "1005" -> "1009" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/41-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/41-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/41-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/41-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.cast" {  
-"1035" [label = <(METHOD,&lt;operator&gt;.cast)> ]
-"1039" [label = <(METHOD_RETURN,ANY)> ]
-  "1035" -> "1039" 
+digraph "getPointer" {  
+"1010" [label = <(METHOD,getPointer)> ]
+"1013" [label = <(METHOD_RETURN,ANY)> ]
+  "1010" -> "1013" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/42-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/42-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/42-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/42-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "getPointer" {  
-"1040" [label = <(METHOD,getPointer)> ]
-"1043" [label = <(METHOD_RETURN,ANY)> ]
-  "1040" -> "1043" 
+digraph "&lt;operator&gt;.addition" {  
+"1014" [label = <(METHOD,&lt;operator&gt;.addition)> ]
+"1018" [label = <(METHOD_RETURN,ANY)> ]
+  "1014" -> "1018" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/43-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/43-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/43-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/43-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.addition" {  
-"1044" [label = <(METHOD,&lt;operator&gt;.addition)> ]
-"1048" [label = <(METHOD_RETURN,ANY)> ]
-  "1044" -> "1048" 
+digraph "size" {  
+"1019" [label = <(METHOD,size)> ]
+"1022" [label = <(METHOD_RETURN,ANY)> ]
+  "1019" -> "1022" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/44-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/44-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/44-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/44-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "unlock" {  
-"1049" [label = <(METHOD,unlock)> ]
-"1052" [label = <(METHOD_RETURN,ANY)> ]
-  "1049" -> "1052" 
+digraph "&lt;operator&gt;.postIncrement" {  
+"1023" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
+"1026" [label = <(METHOD_RETURN,ANY)> ]
+  "1023" -> "1026" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/45-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/45-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/45-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/45-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "size" {  
-"1053" [label = <(METHOD,size)> ]
-"1056" [label = <(METHOD_RETURN,ANY)> ]
-  "1053" -> "1056" 
+digraph "&lt;operator&gt;.preIncrement" {  
+"1027" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
+"1030" [label = <(METHOD_RETURN,ANY)> ]
+  "1027" -> "1030" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/46-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/46-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/46-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/46-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.postIncrement" {  
-"1057" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
-"1060" [label = <(METHOD_RETURN,ANY)> ]
-  "1057" -> "1060" 
+digraph "&lt;operator&gt;.notEquals" {  
+"1031" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
+"1035" [label = <(METHOD_RETURN,ANY)> ]
+  "1031" -> "1035" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/47-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/47-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/47-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/47-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.preIncrement" {  
-"1061" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
-"1064" [label = <(METHOD_RETURN,ANY)> ]
-  "1061" -> "1064" 
+digraph "memcpy" {  
+"1036" [label = <(METHOD,memcpy)> ]
+"1041" [label = <(METHOD_RETURN,ANY)> ]
+  "1036" -> "1041" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/48-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/48-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/48-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/48-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.notEquals" {  
-"1065" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
-"1069" [label = <(METHOD_RETURN,ANY)> ]
-  "1065" -> "1069" 
+digraph "&lt;operator&gt;.assignmentPlus" {  
+"1042" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
+"1046" [label = <(METHOD_RETURN,ANY)> ]
+  "1042" -> "1046" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/49-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/49-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/49-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/49-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "memcpy" {  
-"1070" [label = <(METHOD,memcpy)> ]
-"1075" [label = <(METHOD_RETURN,ANY)> ]
-  "1070" -> "1075" 
+digraph "decrypt" {  
+"1047" [label = <(METHOD,decrypt)> ]
+"1056" [label = <(METHOD_RETURN,ANY)> ]
+  "1047" -> "1056" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/5-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/5-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/5-cfg.dot	2023-06-07 19:39:46.407365120 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/5-cfg.dot	2023-06-07 19:39:50.437364764 +0330
@@ -1,5 +1,5 @@
 digraph "decrypt_1_2" {  
-"68" [label = <(METHOD,decrypt_1_2)<SUB>88</SUB>> ]
-"80" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>88</SUB>> ]
+"68" [label = <(METHOD,decrypt_1_2)<SUB>86</SUB>> ]
+"80" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>86</SUB>> ]
   "68" -> "80" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/50-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/50-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/50-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/50-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.assignmentPlus" {  
-"1076" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
-"1080" [label = <(METHOD_RETURN,ANY)> ]
-  "1076" -> "1080" 
+digraph "data" {  
+"1057" [label = <(METHOD,data)> ]
+"1060" [label = <(METHOD_RETURN,ANY)> ]
+  "1057" -> "1060" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/51-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/51-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/51-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/51-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "decrypt" {  
-"1081" [label = <(METHOD,decrypt)> ]
-"1090" [label = <(METHOD_RETURN,ANY)> ]
-  "1081" -> "1090" 
+digraph "toVector" {  
+"1061" [label = <(METHOD,toVector)> ]
+"1064" [label = <(METHOD_RETURN,ANY)> ]
+  "1061" -> "1064" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/52-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/52-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/52-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/52-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "data" {  
-"1091" [label = <(METHOD,data)> ]
-"1094" [label = <(METHOD_RETURN,ANY)> ]
-  "1091" -> "1094" 
+digraph "&lt;operator&gt;.logicalNot" {  
+"1065" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
+"1068" [label = <(METHOD_RETURN,ANY)> ]
+  "1065" -> "1068" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/53-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/53-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/53-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/53-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "toVector" {  
-"1095" [label = <(METHOD,toVector)> ]
-"1098" [label = <(METHOD_RETURN,ANY)> ]
-  "1095" -> "1098" 
+digraph "findSession" {  
+"1069" [label = <(METHOD,findSession)> ]
+"1073" [label = <(METHOD_RETURN,ANY)> ]
+  "1069" -> "1073" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/54-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/54-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/54-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/54-cfg.dot	2023-06-07 19:39:50.497364759 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.logicalNot" {  
-"1099" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
-"1102" [label = <(METHOD_RETURN,ANY)> ]
-  "1099" -> "1102" 
+digraph "SessionLibrary::get" {  
+"1074" [label = <(METHOD,SessionLibrary::get)> ]
+"1077" [label = <(METHOD_RETURN,ANY)> ]
+  "1074" -> "1077" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/55-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/55-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/55-cfg.dot	2023-06-07 19:39:46.457365116 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/55-cfg.dot	2023-06-07 19:39:50.507364756 +0330
@@ -1,5 +1,5 @@
-digraph "findSession" {  
-"1103" [label = <(METHOD,findSession)> ]
-"1107" [label = <(METHOD_RETURN,ANY)> ]
-  "1103" -> "1107" 
+digraph "get" {  
+"1078" [label = <(METHOD,get)> ]
+"1081" [label = <(METHOD_RETURN,ANY)> ]
+  "1078" -> "1081" 
 }
Only in /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out: 56-cfg.dot
Only in /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out: 57-cfg.dot
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/6-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/6-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/6-cfg.dot	2023-06-07 19:39:46.407365120 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/6-cfg.dot	2023-06-07 19:39:50.437364764 +0330
@@ -1,5 +1,5 @@
 digraph "setSharedBufferBase" {  
-"83" [label = <(METHOD,setSharedBufferBase)<SUB>100</SUB>> ]
-"87" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>100</SUB>> ]
-  "83" -> "87" 
+"82" [label = <(METHOD,setSharedBufferBase)<SUB>98</SUB>> ]
+"86" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>98</SUB>> ]
+  "82" -> "86" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/7-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/7-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/7-cfg.dot	2023-06-07 19:39:46.407365120 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/7-cfg.dot	2023-06-07 19:39:50.437364764 +0330
@@ -1,5 +1,5 @@
 digraph "setMediaDrmSession" {  
-"89" [label = <(METHOD,setMediaDrmSession)<SUB>103</SUB>> ]
-"92" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>103</SUB>> ]
-  "89" -> "92" 
+"88" [label = <(METHOD,setMediaDrmSession)<SUB>101</SUB>> ]
+"91" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>101</SUB>> ]
+  "88" -> "91" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/8-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/8-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/8-cfg.dot	2023-06-07 19:39:46.407365120 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/8-cfg.dot	2023-06-07 19:39:50.447364762 +0330
@@ -1,7 +1,7 @@
 digraph "getInitStatus" {  
-"96" [label = <(RETURN,return mInitStatus;,return mInitStatus;)<SUB>105</SUB>> ]
-"94" [label = <(METHOD,getInitStatus)<SUB>105</SUB>> ]
-"98" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>105</SUB>> ]
-  "96" -> "98" 
-  "94" -> "96" 
+"95" [label = <(RETURN,return mInitStatus;,return mInitStatus;)<SUB>103</SUB>> ]
+"93" [label = <(METHOD,getInitStatus)<SUB>103</SUB>> ]
+"97" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>103</SUB>> ]
+  "95" -> "97" 
+  "93" -> "95" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/9-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/9-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/secure/out/9-cfg.dot	2023-06-07 19:39:46.407365120 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0509_1/vulnerable/out/9-cfg.dot	2023-06-07 19:39:50.447364762 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_1" {  
-"105" [label = <(METHOD,anonymous_lambda_1)<SUB>65</SUB>> ]
-"110" [label = <(METHOD_RETURN,ANY)<SUB>65</SUB>> ]
-  "105" -> "110" 
+"103" [label = <(METHOD,anonymous_lambda_1)<SUB>63</SUB>> ]
+"108" [label = <(METHOD_RETURN,ANY)<SUB>63</SUB>> ]
+  "103" -> "108" 
 }

diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/0-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/0-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/0-cfg.dot	2023-06-07 19:34:34.807389646 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/0-cfg.dot	2023-06-07 19:34:41.337389044 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_8" {  
-"3" [label = <(METHOD,anonymous_lambda_8)<SUB>106</SUB>> ]
-"5" [label = <(METHOD_RETURN,ANY)<SUB>106</SUB>> ]
+"3" [label = <(METHOD,anonymous_lambda_8)<SUB>105</SUB>> ]
+"5" [label = <(METHOD_RETURN,ANY)<SUB>105</SUB>> ]
   "3" -> "5" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/1-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/1-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/1-cfg.dot	2023-06-07 19:34:34.807389646 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/1-cfg.dot	2023-06-07 19:34:41.337389044 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_9" {  
-"8" [label = <(METHOD,anonymous_lambda_9)<SUB>1901</SUB>> ]
-"12" [label = <(METHOD_RETURN,ANY)<SUB>1901</SUB>> ]
+"8" [label = <(METHOD,anonymous_lambda_9)<SUB>1899</SUB>> ]
+"12" [label = <(METHOD_RETURN,ANY)<SUB>1899</SUB>> ]
   "8" -> "12" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/10-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/10-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/10-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/10-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "NotifySetPrimitiveField" {  
-"253" [label = <(METHOD,NotifySetPrimitiveField)<SUB>209</SUB>> ]
-"258" [label = <(METHOD_RETURN,void)<SUB>209</SUB>> ]
+"253" [label = <(METHOD,NotifySetPrimitiveField)<SUB>208</SUB>> ]
+"258" [label = <(METHOD_RETURN,void)<SUB>208</SUB>> ]
   "253" -> "258" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/100-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/100-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/100-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/100-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualCharMethodA" {  
-"5077" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1239</SUB>> ]
-"5095" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1240</SUB>> ]
-"5114" [label = <(soa,soa(env))<SUB>1241</SUB>> ]
-"5116" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetC();,return InvokeWithJValues(soa, obj, mid, args).GetC();)<SUB>1242</SUB>> ]
-"5117" [label = <(GetC,InvokeWithJValues(soa, obj, mid, args).GetC())<SUB>1242</SUB>> ]
-"5118" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetC)<SUB>1242</SUB>> ]
-"5081" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1239</SUB>> ]
-"5099" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1240</SUB>> ]
-"5119" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1242</SUB>> ]
-"5124" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1242</SUB>> ]
-"5082" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1239</SUB>> ]
-"5086" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1239</SUB>> ]
-"5093" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1239</SUB>> ]
-"5100" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1240</SUB>> ]
-"5104" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1240</SUB>> ]
-"5111" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1240</SUB>> ]
-"5087" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1239</SUB>> ]
-"5105" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1240</SUB>> ]
-"5088" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1239</SUB>> ]
-"5090" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1239</SUB>> ]
-"5106" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1240</SUB>> ]
-"5108" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1240</SUB>> ]
-"5070" [label = <(METHOD,CallNonvirtualCharMethodA)<SUB>1237</SUB>> ]
-"5125" [label = <(METHOD_RETURN,jchar)<SUB>1237</SUB>> ]
+"5077" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1238</SUB>> ]
+"5095" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1239</SUB>> ]
+"5114" [label = <(soa,soa(env))<SUB>1240</SUB>> ]
+"5116" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetC();,return InvokeWithJValues(soa, obj, mid, args).GetC();)<SUB>1241</SUB>> ]
+"5117" [label = <(GetC,InvokeWithJValues(soa, obj, mid, args).GetC())<SUB>1241</SUB>> ]
+"5118" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetC)<SUB>1241</SUB>> ]
+"5081" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1238</SUB>> ]
+"5099" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1239</SUB>> ]
+"5119" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1241</SUB>> ]
+"5124" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1241</SUB>> ]
+"5082" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1238</SUB>> ]
+"5086" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1238</SUB>> ]
+"5093" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1238</SUB>> ]
+"5100" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1239</SUB>> ]
+"5104" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1239</SUB>> ]
+"5111" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1239</SUB>> ]
+"5087" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1238</SUB>> ]
+"5105" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1239</SUB>> ]
+"5088" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1238</SUB>> ]
+"5090" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1238</SUB>> ]
+"5106" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1239</SUB>> ]
+"5108" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1239</SUB>> ]
+"5070" [label = <(METHOD,CallNonvirtualCharMethodA)<SUB>1236</SUB>> ]
+"5125" [label = <(METHOD_RETURN,jchar)<SUB>1236</SUB>> ]
   "5077" -> "5082" 
   "5077" -> "5095" 
   "5095" -> "5100" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/101-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/101-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/101-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/101-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualShortMethod" {  
-"5134" [label = <(va_start,va_start(ap, mid))<SUB>1247</SUB>> ]
-"5138" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1248</SUB>> ]
-"5141" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1249</SUB>> ]
-"5159" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1250</SUB>> ]
-"5178" [label = <(soa,soa(env))<SUB>1251</SUB>> ]
-"5181" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1252</SUB>> ]
-"5187" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1253</SUB>> ]
-"5139" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1248</SUB>> ]
-"5182" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1252</SUB>> ]
-"5188" [label = <(GetS,result.GetS())<SUB>1253</SUB>> ]
-"5189" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1253</SUB>> ]
-"5145" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1249</SUB>> ]
-"5163" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1250</SUB>> ]
-"5191" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1253</SUB>> ]
-"5146" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1249</SUB>> ]
-"5150" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1249</SUB>> ]
-"5157" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1249</SUB>> ]
-"5164" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1250</SUB>> ]
-"5168" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1250</SUB>> ]
-"5175" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1250</SUB>> ]
-"5151" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1249</SUB>> ]
-"5169" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1250</SUB>> ]
-"5152" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1249</SUB>> ]
-"5154" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1249</SUB>> ]
-"5170" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1250</SUB>> ]
-"5172" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1250</SUB>> ]
-"5127" [label = <(METHOD,CallNonvirtualShortMethod)<SUB>1245</SUB>> ]
-"5192" [label = <(METHOD_RETURN,jshort)<SUB>1245</SUB>> ]
+"5134" [label = <(va_start,va_start(ap, mid))<SUB>1246</SUB>> ]
+"5138" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1247</SUB>> ]
+"5141" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1248</SUB>> ]
+"5159" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1249</SUB>> ]
+"5178" [label = <(soa,soa(env))<SUB>1250</SUB>> ]
+"5181" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1251</SUB>> ]
+"5187" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1252</SUB>> ]
+"5139" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1247</SUB>> ]
+"5182" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1251</SUB>> ]
+"5188" [label = <(GetS,result.GetS())<SUB>1252</SUB>> ]
+"5189" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1252</SUB>> ]
+"5145" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1248</SUB>> ]
+"5163" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1249</SUB>> ]
+"5191" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1252</SUB>> ]
+"5146" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1248</SUB>> ]
+"5150" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1248</SUB>> ]
+"5157" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1248</SUB>> ]
+"5164" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1249</SUB>> ]
+"5168" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1249</SUB>> ]
+"5175" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1249</SUB>> ]
+"5151" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1248</SUB>> ]
+"5169" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1249</SUB>> ]
+"5152" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1248</SUB>> ]
+"5154" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1248</SUB>> ]
+"5170" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1249</SUB>> ]
+"5172" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1249</SUB>> ]
+"5127" [label = <(METHOD,CallNonvirtualShortMethod)<SUB>1244</SUB>> ]
+"5192" [label = <(METHOD_RETURN,jshort)<SUB>1244</SUB>> ]
   "5134" -> "5139" 
   "5138" -> "5141" 
   "5141" -> "5146" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/102-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/102-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/102-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/102-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualShortMethodV" {  
-"5201" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1258</SUB>> ]
-"5219" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1259</SUB>> ]
-"5238" [label = <(soa,soa(env))<SUB>1260</SUB>> ]
-"5240" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetS();,return InvokeWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1261</SUB>> ]
-"5241" [label = <(GetS,InvokeWithVarArgs(soa, obj, mid, args).GetS())<SUB>1261</SUB>> ]
-"5242" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetS)<SUB>1261</SUB>> ]
-"5205" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1258</SUB>> ]
-"5223" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1259</SUB>> ]
-"5243" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1261</SUB>> ]
-"5248" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1261</SUB>> ]
-"5206" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1258</SUB>> ]
-"5210" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1258</SUB>> ]
-"5217" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1258</SUB>> ]
-"5224" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1259</SUB>> ]
-"5228" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1259</SUB>> ]
-"5235" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1259</SUB>> ]
-"5211" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1258</SUB>> ]
-"5229" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1259</SUB>> ]
-"5212" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1258</SUB>> ]
-"5214" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1258</SUB>> ]
-"5230" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1259</SUB>> ]
-"5232" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1259</SUB>> ]
-"5194" [label = <(METHOD,CallNonvirtualShortMethodV)<SUB>1256</SUB>> ]
-"5249" [label = <(METHOD_RETURN,jshort)<SUB>1256</SUB>> ]
+"5201" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1257</SUB>> ]
+"5219" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1258</SUB>> ]
+"5238" [label = <(soa,soa(env))<SUB>1259</SUB>> ]
+"5240" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetS();,return InvokeWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1260</SUB>> ]
+"5241" [label = <(GetS,InvokeWithVarArgs(soa, obj, mid, args).GetS())<SUB>1260</SUB>> ]
+"5242" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetS)<SUB>1260</SUB>> ]
+"5205" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1257</SUB>> ]
+"5223" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1258</SUB>> ]
+"5243" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1260</SUB>> ]
+"5248" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1260</SUB>> ]
+"5206" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1257</SUB>> ]
+"5210" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1257</SUB>> ]
+"5217" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1257</SUB>> ]
+"5224" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1258</SUB>> ]
+"5228" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1258</SUB>> ]
+"5235" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1258</SUB>> ]
+"5211" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1257</SUB>> ]
+"5229" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1258</SUB>> ]
+"5212" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1257</SUB>> ]
+"5214" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1257</SUB>> ]
+"5230" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1258</SUB>> ]
+"5232" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1258</SUB>> ]
+"5194" [label = <(METHOD,CallNonvirtualShortMethodV)<SUB>1255</SUB>> ]
+"5249" [label = <(METHOD_RETURN,jshort)<SUB>1255</SUB>> ]
   "5201" -> "5206" 
   "5201" -> "5219" 
   "5219" -> "5224" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/103-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/103-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/103-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/103-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualShortMethodA" {  
-"5258" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1266</SUB>> ]
-"5276" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1267</SUB>> ]
-"5295" [label = <(soa,soa(env))<SUB>1268</SUB>> ]
-"5297" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetS();,return InvokeWithJValues(soa, obj, mid, args).GetS();)<SUB>1269</SUB>> ]
-"5298" [label = <(GetS,InvokeWithJValues(soa, obj, mid, args).GetS())<SUB>1269</SUB>> ]
-"5299" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetS)<SUB>1269</SUB>> ]
-"5262" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1266</SUB>> ]
-"5280" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1267</SUB>> ]
-"5300" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1269</SUB>> ]
-"5305" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1269</SUB>> ]
-"5263" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1266</SUB>> ]
-"5267" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1266</SUB>> ]
-"5274" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1266</SUB>> ]
-"5281" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1267</SUB>> ]
-"5285" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1267</SUB>> ]
-"5292" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1267</SUB>> ]
-"5268" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1266</SUB>> ]
-"5286" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1267</SUB>> ]
-"5269" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1266</SUB>> ]
-"5271" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1266</SUB>> ]
-"5287" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1267</SUB>> ]
-"5289" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1267</SUB>> ]
-"5251" [label = <(METHOD,CallNonvirtualShortMethodA)<SUB>1264</SUB>> ]
-"5306" [label = <(METHOD_RETURN,jshort)<SUB>1264</SUB>> ]
+"5258" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1265</SUB>> ]
+"5276" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1266</SUB>> ]
+"5295" [label = <(soa,soa(env))<SUB>1267</SUB>> ]
+"5297" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetS();,return InvokeWithJValues(soa, obj, mid, args).GetS();)<SUB>1268</SUB>> ]
+"5298" [label = <(GetS,InvokeWithJValues(soa, obj, mid, args).GetS())<SUB>1268</SUB>> ]
+"5299" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetS)<SUB>1268</SUB>> ]
+"5262" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1265</SUB>> ]
+"5280" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1266</SUB>> ]
+"5300" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1268</SUB>> ]
+"5305" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1268</SUB>> ]
+"5263" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1265</SUB>> ]
+"5267" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1265</SUB>> ]
+"5274" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1265</SUB>> ]
+"5281" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1266</SUB>> ]
+"5285" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1266</SUB>> ]
+"5292" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1266</SUB>> ]
+"5268" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1265</SUB>> ]
+"5286" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1266</SUB>> ]
+"5269" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1265</SUB>> ]
+"5271" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1265</SUB>> ]
+"5287" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1266</SUB>> ]
+"5289" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1266</SUB>> ]
+"5251" [label = <(METHOD,CallNonvirtualShortMethodA)<SUB>1263</SUB>> ]
+"5306" [label = <(METHOD_RETURN,jshort)<SUB>1263</SUB>> ]
   "5258" -> "5263" 
   "5258" -> "5276" 
   "5276" -> "5281" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/104-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/104-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/104-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/104-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualIntMethod" {  
-"5315" [label = <(va_start,va_start(ap, mid))<SUB>1274</SUB>> ]
-"5319" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1275</SUB>> ]
-"5322" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1276</SUB>> ]
-"5340" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1277</SUB>> ]
-"5359" [label = <(soa,soa(env))<SUB>1278</SUB>> ]
-"5362" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1279</SUB>> ]
-"5368" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1280</SUB>> ]
-"5320" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1275</SUB>> ]
-"5363" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1279</SUB>> ]
-"5369" [label = <(GetI,result.GetI())<SUB>1280</SUB>> ]
-"5370" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1280</SUB>> ]
-"5326" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1276</SUB>> ]
-"5344" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1277</SUB>> ]
-"5372" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1280</SUB>> ]
-"5327" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1276</SUB>> ]
-"5331" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1276</SUB>> ]
-"5338" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1276</SUB>> ]
-"5345" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1277</SUB>> ]
-"5349" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1277</SUB>> ]
-"5356" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1277</SUB>> ]
-"5332" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1276</SUB>> ]
-"5350" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1277</SUB>> ]
-"5333" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1276</SUB>> ]
-"5335" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1276</SUB>> ]
-"5351" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1277</SUB>> ]
-"5353" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1277</SUB>> ]
-"5308" [label = <(METHOD,CallNonvirtualIntMethod)<SUB>1272</SUB>> ]
-"5373" [label = <(METHOD_RETURN,jint)<SUB>1272</SUB>> ]
+"5315" [label = <(va_start,va_start(ap, mid))<SUB>1273</SUB>> ]
+"5319" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1274</SUB>> ]
+"5322" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1275</SUB>> ]
+"5340" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1276</SUB>> ]
+"5359" [label = <(soa,soa(env))<SUB>1277</SUB>> ]
+"5362" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1278</SUB>> ]
+"5368" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1279</SUB>> ]
+"5320" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1274</SUB>> ]
+"5363" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1278</SUB>> ]
+"5369" [label = <(GetI,result.GetI())<SUB>1279</SUB>> ]
+"5370" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1279</SUB>> ]
+"5326" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1275</SUB>> ]
+"5344" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1276</SUB>> ]
+"5372" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1279</SUB>> ]
+"5327" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1275</SUB>> ]
+"5331" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1275</SUB>> ]
+"5338" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1275</SUB>> ]
+"5345" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1276</SUB>> ]
+"5349" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1276</SUB>> ]
+"5356" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1276</SUB>> ]
+"5332" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1275</SUB>> ]
+"5350" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1276</SUB>> ]
+"5333" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1275</SUB>> ]
+"5335" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1275</SUB>> ]
+"5351" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1276</SUB>> ]
+"5353" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1276</SUB>> ]
+"5308" [label = <(METHOD,CallNonvirtualIntMethod)<SUB>1271</SUB>> ]
+"5373" [label = <(METHOD_RETURN,jint)<SUB>1271</SUB>> ]
   "5315" -> "5320" 
   "5319" -> "5322" 
   "5322" -> "5327" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/105-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/105-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/105-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/105-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualIntMethodV" {  
-"5382" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1285</SUB>> ]
-"5400" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1286</SUB>> ]
-"5419" [label = <(soa,soa(env))<SUB>1287</SUB>> ]
-"5421" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetI();,return InvokeWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1288</SUB>> ]
-"5422" [label = <(GetI,InvokeWithVarArgs(soa, obj, mid, args).GetI())<SUB>1288</SUB>> ]
-"5423" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetI)<SUB>1288</SUB>> ]
-"5386" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1285</SUB>> ]
-"5404" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1286</SUB>> ]
-"5424" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1288</SUB>> ]
-"5429" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1288</SUB>> ]
-"5387" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1285</SUB>> ]
-"5391" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1285</SUB>> ]
-"5398" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1285</SUB>> ]
-"5405" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1286</SUB>> ]
-"5409" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1286</SUB>> ]
-"5416" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1286</SUB>> ]
-"5392" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1285</SUB>> ]
-"5410" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1286</SUB>> ]
-"5393" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1285</SUB>> ]
-"5395" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1285</SUB>> ]
-"5411" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1286</SUB>> ]
-"5413" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1286</SUB>> ]
-"5375" [label = <(METHOD,CallNonvirtualIntMethodV)<SUB>1283</SUB>> ]
-"5430" [label = <(METHOD_RETURN,jint)<SUB>1283</SUB>> ]
+"5382" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1284</SUB>> ]
+"5400" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1285</SUB>> ]
+"5419" [label = <(soa,soa(env))<SUB>1286</SUB>> ]
+"5421" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetI();,return InvokeWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1287</SUB>> ]
+"5422" [label = <(GetI,InvokeWithVarArgs(soa, obj, mid, args).GetI())<SUB>1287</SUB>> ]
+"5423" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetI)<SUB>1287</SUB>> ]
+"5386" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1284</SUB>> ]
+"5404" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1285</SUB>> ]
+"5424" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1287</SUB>> ]
+"5429" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1287</SUB>> ]
+"5387" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1284</SUB>> ]
+"5391" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1284</SUB>> ]
+"5398" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1284</SUB>> ]
+"5405" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1285</SUB>> ]
+"5409" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1285</SUB>> ]
+"5416" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1285</SUB>> ]
+"5392" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1284</SUB>> ]
+"5410" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1285</SUB>> ]
+"5393" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1284</SUB>> ]
+"5395" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1284</SUB>> ]
+"5411" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1285</SUB>> ]
+"5413" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1285</SUB>> ]
+"5375" [label = <(METHOD,CallNonvirtualIntMethodV)<SUB>1282</SUB>> ]
+"5430" [label = <(METHOD_RETURN,jint)<SUB>1282</SUB>> ]
   "5382" -> "5387" 
   "5382" -> "5400" 
   "5400" -> "5405" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/106-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/106-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/106-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/106-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualIntMethodA" {  
-"5439" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1293</SUB>> ]
-"5457" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1294</SUB>> ]
-"5476" [label = <(soa,soa(env))<SUB>1295</SUB>> ]
-"5478" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetI();,return InvokeWithJValues(soa, obj, mid, args).GetI();)<SUB>1296</SUB>> ]
-"5479" [label = <(GetI,InvokeWithJValues(soa, obj, mid, args).GetI())<SUB>1296</SUB>> ]
-"5480" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetI)<SUB>1296</SUB>> ]
-"5443" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1293</SUB>> ]
-"5461" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1294</SUB>> ]
-"5481" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1296</SUB>> ]
-"5486" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1296</SUB>> ]
-"5444" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1293</SUB>> ]
-"5448" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1293</SUB>> ]
-"5455" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1293</SUB>> ]
-"5462" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1294</SUB>> ]
-"5466" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1294</SUB>> ]
-"5473" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1294</SUB>> ]
-"5449" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1293</SUB>> ]
-"5467" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1294</SUB>> ]
-"5450" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1293</SUB>> ]
-"5452" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1293</SUB>> ]
-"5468" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1294</SUB>> ]
-"5470" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1294</SUB>> ]
-"5432" [label = <(METHOD,CallNonvirtualIntMethodA)<SUB>1291</SUB>> ]
-"5487" [label = <(METHOD_RETURN,jint)<SUB>1291</SUB>> ]
+"5439" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1292</SUB>> ]
+"5457" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1293</SUB>> ]
+"5476" [label = <(soa,soa(env))<SUB>1294</SUB>> ]
+"5478" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetI();,return InvokeWithJValues(soa, obj, mid, args).GetI();)<SUB>1295</SUB>> ]
+"5479" [label = <(GetI,InvokeWithJValues(soa, obj, mid, args).GetI())<SUB>1295</SUB>> ]
+"5480" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetI)<SUB>1295</SUB>> ]
+"5443" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1292</SUB>> ]
+"5461" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1293</SUB>> ]
+"5481" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1295</SUB>> ]
+"5486" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1295</SUB>> ]
+"5444" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1292</SUB>> ]
+"5448" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1292</SUB>> ]
+"5455" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1292</SUB>> ]
+"5462" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1293</SUB>> ]
+"5466" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1293</SUB>> ]
+"5473" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1293</SUB>> ]
+"5449" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1292</SUB>> ]
+"5467" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1293</SUB>> ]
+"5450" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1292</SUB>> ]
+"5452" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1292</SUB>> ]
+"5468" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1293</SUB>> ]
+"5470" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1293</SUB>> ]
+"5432" [label = <(METHOD,CallNonvirtualIntMethodA)<SUB>1290</SUB>> ]
+"5487" [label = <(METHOD_RETURN,jint)<SUB>1290</SUB>> ]
   "5439" -> "5444" 
   "5439" -> "5457" 
   "5457" -> "5462" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/107-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/107-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/107-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/107-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualLongMethod" {  
-"5496" [label = <(va_start,va_start(ap, mid))<SUB>1301</SUB>> ]
-"5500" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1302</SUB>> ]
-"5503" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1303</SUB>> ]
-"5521" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1304</SUB>> ]
-"5540" [label = <(soa,soa(env))<SUB>1305</SUB>> ]
-"5543" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1306</SUB>> ]
-"5549" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1307</SUB>> ]
-"5501" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1302</SUB>> ]
-"5544" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1306</SUB>> ]
-"5550" [label = <(GetJ,result.GetJ())<SUB>1307</SUB>> ]
-"5551" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1307</SUB>> ]
-"5507" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1303</SUB>> ]
-"5525" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1304</SUB>> ]
-"5553" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1307</SUB>> ]
-"5508" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1303</SUB>> ]
-"5512" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1303</SUB>> ]
-"5519" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1303</SUB>> ]
-"5526" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1304</SUB>> ]
-"5530" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1304</SUB>> ]
-"5537" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1304</SUB>> ]
-"5513" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1303</SUB>> ]
-"5531" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1304</SUB>> ]
-"5514" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1303</SUB>> ]
-"5516" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1303</SUB>> ]
-"5532" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1304</SUB>> ]
-"5534" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1304</SUB>> ]
-"5489" [label = <(METHOD,CallNonvirtualLongMethod)<SUB>1299</SUB>> ]
-"5554" [label = <(METHOD_RETURN,jlong)<SUB>1299</SUB>> ]
+"5496" [label = <(va_start,va_start(ap, mid))<SUB>1300</SUB>> ]
+"5500" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1301</SUB>> ]
+"5503" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1302</SUB>> ]
+"5521" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1303</SUB>> ]
+"5540" [label = <(soa,soa(env))<SUB>1304</SUB>> ]
+"5543" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1305</SUB>> ]
+"5549" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1306</SUB>> ]
+"5501" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1301</SUB>> ]
+"5544" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1305</SUB>> ]
+"5550" [label = <(GetJ,result.GetJ())<SUB>1306</SUB>> ]
+"5551" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1306</SUB>> ]
+"5507" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1302</SUB>> ]
+"5525" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1303</SUB>> ]
+"5553" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1306</SUB>> ]
+"5508" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1302</SUB>> ]
+"5512" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1302</SUB>> ]
+"5519" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1302</SUB>> ]
+"5526" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1303</SUB>> ]
+"5530" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1303</SUB>> ]
+"5537" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1303</SUB>> ]
+"5513" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1302</SUB>> ]
+"5531" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1303</SUB>> ]
+"5514" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1302</SUB>> ]
+"5516" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1302</SUB>> ]
+"5532" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1303</SUB>> ]
+"5534" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1303</SUB>> ]
+"5489" [label = <(METHOD,CallNonvirtualLongMethod)<SUB>1298</SUB>> ]
+"5554" [label = <(METHOD_RETURN,jlong)<SUB>1298</SUB>> ]
   "5496" -> "5501" 
   "5500" -> "5503" 
   "5503" -> "5508" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/108-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/108-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/108-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/108-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualLongMethodV" {  
-"5563" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1312</SUB>> ]
-"5581" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1313</SUB>> ]
-"5600" [label = <(soa,soa(env))<SUB>1314</SUB>> ]
-"5602" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1315</SUB>> ]
-"5603" [label = <(GetJ,InvokeWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1315</SUB>> ]
-"5604" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1315</SUB>> ]
-"5567" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1312</SUB>> ]
-"5585" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1313</SUB>> ]
-"5605" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1315</SUB>> ]
-"5610" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1315</SUB>> ]
-"5568" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1312</SUB>> ]
-"5572" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1312</SUB>> ]
-"5579" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1312</SUB>> ]
-"5586" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1313</SUB>> ]
-"5590" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1313</SUB>> ]
-"5597" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1313</SUB>> ]
-"5573" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1312</SUB>> ]
-"5591" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1313</SUB>> ]
-"5574" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1312</SUB>> ]
-"5576" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1312</SUB>> ]
-"5592" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1313</SUB>> ]
-"5594" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1313</SUB>> ]
-"5556" [label = <(METHOD,CallNonvirtualLongMethodV)<SUB>1310</SUB>> ]
-"5611" [label = <(METHOD_RETURN,jlong)<SUB>1310</SUB>> ]
+"5563" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1311</SUB>> ]
+"5581" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1312</SUB>> ]
+"5600" [label = <(soa,soa(env))<SUB>1313</SUB>> ]
+"5602" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1314</SUB>> ]
+"5603" [label = <(GetJ,InvokeWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1314</SUB>> ]
+"5604" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1314</SUB>> ]
+"5567" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1311</SUB>> ]
+"5585" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1312</SUB>> ]
+"5605" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1314</SUB>> ]
+"5610" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1314</SUB>> ]
+"5568" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1311</SUB>> ]
+"5572" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1311</SUB>> ]
+"5579" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1311</SUB>> ]
+"5586" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1312</SUB>> ]
+"5590" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1312</SUB>> ]
+"5597" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1312</SUB>> ]
+"5573" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1311</SUB>> ]
+"5591" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1312</SUB>> ]
+"5574" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1311</SUB>> ]
+"5576" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1311</SUB>> ]
+"5592" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1312</SUB>> ]
+"5594" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1312</SUB>> ]
+"5556" [label = <(METHOD,CallNonvirtualLongMethodV)<SUB>1309</SUB>> ]
+"5611" [label = <(METHOD_RETURN,jlong)<SUB>1309</SUB>> ]
   "5563" -> "5568" 
   "5563" -> "5581" 
   "5581" -> "5586" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/109-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/109-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/109-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/109-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualLongMethodA" {  
-"5620" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1320</SUB>> ]
-"5638" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1321</SUB>> ]
-"5657" [label = <(soa,soa(env))<SUB>1322</SUB>> ]
-"5659" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetJ();,return InvokeWithJValues(soa, obj, mid, args).GetJ();)<SUB>1323</SUB>> ]
-"5660" [label = <(GetJ,InvokeWithJValues(soa, obj, mid, args).GetJ())<SUB>1323</SUB>> ]
-"5661" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetJ)<SUB>1323</SUB>> ]
-"5624" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1320</SUB>> ]
-"5642" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1321</SUB>> ]
-"5662" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1323</SUB>> ]
-"5667" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1323</SUB>> ]
-"5625" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1320</SUB>> ]
-"5629" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1320</SUB>> ]
-"5636" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1320</SUB>> ]
-"5643" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1321</SUB>> ]
-"5647" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1321</SUB>> ]
-"5654" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1321</SUB>> ]
-"5630" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1320</SUB>> ]
-"5648" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1321</SUB>> ]
-"5631" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1320</SUB>> ]
-"5633" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1320</SUB>> ]
-"5649" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1321</SUB>> ]
-"5651" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1321</SUB>> ]
-"5613" [label = <(METHOD,CallNonvirtualLongMethodA)<SUB>1318</SUB>> ]
-"5668" [label = <(METHOD_RETURN,jlong)<SUB>1318</SUB>> ]
+"5620" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1319</SUB>> ]
+"5638" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1320</SUB>> ]
+"5657" [label = <(soa,soa(env))<SUB>1321</SUB>> ]
+"5659" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetJ();,return InvokeWithJValues(soa, obj, mid, args).GetJ();)<SUB>1322</SUB>> ]
+"5660" [label = <(GetJ,InvokeWithJValues(soa, obj, mid, args).GetJ())<SUB>1322</SUB>> ]
+"5661" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetJ)<SUB>1322</SUB>> ]
+"5624" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1319</SUB>> ]
+"5642" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1320</SUB>> ]
+"5662" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1322</SUB>> ]
+"5667" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1322</SUB>> ]
+"5625" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1319</SUB>> ]
+"5629" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1319</SUB>> ]
+"5636" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1319</SUB>> ]
+"5643" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1320</SUB>> ]
+"5647" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1320</SUB>> ]
+"5654" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1320</SUB>> ]
+"5630" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1319</SUB>> ]
+"5648" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1320</SUB>> ]
+"5631" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1319</SUB>> ]
+"5633" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1319</SUB>> ]
+"5649" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1320</SUB>> ]
+"5651" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1320</SUB>> ]
+"5613" [label = <(METHOD,CallNonvirtualLongMethodA)<SUB>1317</SUB>> ]
+"5668" [label = <(METHOD_RETURN,jlong)<SUB>1317</SUB>> ]
   "5620" -> "5625" 
   "5620" -> "5638" 
   "5638" -> "5643" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/11-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/11-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/11-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/11-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "NotifyGetField" {  
-"274" [label = <(METHOD,NotifyGetField)<SUB>234</SUB>> ]
-"278" [label = <(METHOD_RETURN,void)<SUB>234</SUB>> ]
+"274" [label = <(METHOD,NotifyGetField)<SUB>233</SUB>> ]
+"278" [label = <(METHOD_RETURN,void)<SUB>233</SUB>> ]
   "274" -> "278" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/110-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/110-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/110-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/110-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualFloatMethod" {  
-"5677" [label = <(va_start,va_start(ap, mid))<SUB>1328</SUB>> ]
-"5681" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1329</SUB>> ]
-"5684" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1330</SUB>> ]
-"5702" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1331</SUB>> ]
-"5721" [label = <(soa,soa(env))<SUB>1332</SUB>> ]
-"5724" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1333</SUB>> ]
-"5730" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1334</SUB>> ]
-"5682" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1329</SUB>> ]
-"5725" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1333</SUB>> ]
-"5731" [label = <(GetF,result.GetF())<SUB>1334</SUB>> ]
-"5732" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1334</SUB>> ]
-"5688" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1330</SUB>> ]
-"5706" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1331</SUB>> ]
-"5734" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1334</SUB>> ]
-"5689" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1330</SUB>> ]
-"5693" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1330</SUB>> ]
-"5700" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1330</SUB>> ]
-"5707" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1331</SUB>> ]
-"5711" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1331</SUB>> ]
-"5718" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1331</SUB>> ]
-"5694" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1330</SUB>> ]
-"5712" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1331</SUB>> ]
-"5695" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1330</SUB>> ]
-"5697" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1330</SUB>> ]
-"5713" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1331</SUB>> ]
-"5715" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1331</SUB>> ]
-"5670" [label = <(METHOD,CallNonvirtualFloatMethod)<SUB>1326</SUB>> ]
-"5735" [label = <(METHOD_RETURN,jfloat)<SUB>1326</SUB>> ]
+"5677" [label = <(va_start,va_start(ap, mid))<SUB>1327</SUB>> ]
+"5681" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1328</SUB>> ]
+"5684" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1329</SUB>> ]
+"5702" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1330</SUB>> ]
+"5721" [label = <(soa,soa(env))<SUB>1331</SUB>> ]
+"5724" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1332</SUB>> ]
+"5730" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1333</SUB>> ]
+"5682" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1328</SUB>> ]
+"5725" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1332</SUB>> ]
+"5731" [label = <(GetF,result.GetF())<SUB>1333</SUB>> ]
+"5732" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1333</SUB>> ]
+"5688" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1329</SUB>> ]
+"5706" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1330</SUB>> ]
+"5734" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1333</SUB>> ]
+"5689" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1329</SUB>> ]
+"5693" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1329</SUB>> ]
+"5700" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1329</SUB>> ]
+"5707" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1330</SUB>> ]
+"5711" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1330</SUB>> ]
+"5718" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1330</SUB>> ]
+"5694" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1329</SUB>> ]
+"5712" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1330</SUB>> ]
+"5695" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1329</SUB>> ]
+"5697" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1329</SUB>> ]
+"5713" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1330</SUB>> ]
+"5715" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1330</SUB>> ]
+"5670" [label = <(METHOD,CallNonvirtualFloatMethod)<SUB>1325</SUB>> ]
+"5735" [label = <(METHOD_RETURN,jfloat)<SUB>1325</SUB>> ]
   "5677" -> "5682" 
   "5681" -> "5684" 
   "5684" -> "5689" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/111-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/111-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/111-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/111-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualFloatMethodV" {  
-"5744" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1339</SUB>> ]
-"5762" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1340</SUB>> ]
-"5781" [label = <(soa,soa(env))<SUB>1341</SUB>> ]
-"5783" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetF();,return InvokeWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1342</SUB>> ]
-"5784" [label = <(GetF,InvokeWithVarArgs(soa, obj, mid, args).GetF())<SUB>1342</SUB>> ]
-"5785" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetF)<SUB>1342</SUB>> ]
-"5748" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1339</SUB>> ]
-"5766" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1340</SUB>> ]
-"5786" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1342</SUB>> ]
-"5791" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1342</SUB>> ]
-"5749" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1339</SUB>> ]
-"5753" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1339</SUB>> ]
-"5760" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1339</SUB>> ]
-"5767" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1340</SUB>> ]
-"5771" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1340</SUB>> ]
-"5778" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1340</SUB>> ]
-"5754" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1339</SUB>> ]
-"5772" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1340</SUB>> ]
-"5755" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1339</SUB>> ]
-"5757" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1339</SUB>> ]
-"5773" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1340</SUB>> ]
-"5775" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1340</SUB>> ]
-"5737" [label = <(METHOD,CallNonvirtualFloatMethodV)<SUB>1337</SUB>> ]
-"5792" [label = <(METHOD_RETURN,jfloat)<SUB>1337</SUB>> ]
+"5744" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1338</SUB>> ]
+"5762" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1339</SUB>> ]
+"5781" [label = <(soa,soa(env))<SUB>1340</SUB>> ]
+"5783" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetF();,return InvokeWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1341</SUB>> ]
+"5784" [label = <(GetF,InvokeWithVarArgs(soa, obj, mid, args).GetF())<SUB>1341</SUB>> ]
+"5785" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetF)<SUB>1341</SUB>> ]
+"5748" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1338</SUB>> ]
+"5766" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1339</SUB>> ]
+"5786" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1341</SUB>> ]
+"5791" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1341</SUB>> ]
+"5749" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1338</SUB>> ]
+"5753" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1338</SUB>> ]
+"5760" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1338</SUB>> ]
+"5767" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1339</SUB>> ]
+"5771" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1339</SUB>> ]
+"5778" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1339</SUB>> ]
+"5754" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1338</SUB>> ]
+"5772" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1339</SUB>> ]
+"5755" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1338</SUB>> ]
+"5757" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1338</SUB>> ]
+"5773" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1339</SUB>> ]
+"5775" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1339</SUB>> ]
+"5737" [label = <(METHOD,CallNonvirtualFloatMethodV)<SUB>1336</SUB>> ]
+"5792" [label = <(METHOD_RETURN,jfloat)<SUB>1336</SUB>> ]
   "5744" -> "5749" 
   "5744" -> "5762" 
   "5762" -> "5767" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/112-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/112-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/112-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/112-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualFloatMethodA" {  
-"5801" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1347</SUB>> ]
-"5819" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1348</SUB>> ]
-"5838" [label = <(soa,soa(env))<SUB>1349</SUB>> ]
-"5840" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetF();,return InvokeWithJValues(soa, obj, mid, args).GetF();)<SUB>1350</SUB>> ]
-"5841" [label = <(GetF,InvokeWithJValues(soa, obj, mid, args).GetF())<SUB>1350</SUB>> ]
-"5842" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetF)<SUB>1350</SUB>> ]
-"5805" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1347</SUB>> ]
-"5823" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1348</SUB>> ]
-"5843" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1350</SUB>> ]
-"5848" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1350</SUB>> ]
-"5806" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1347</SUB>> ]
-"5810" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1347</SUB>> ]
-"5817" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1347</SUB>> ]
-"5824" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1348</SUB>> ]
-"5828" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1348</SUB>> ]
-"5835" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1348</SUB>> ]
-"5811" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1347</SUB>> ]
-"5829" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1348</SUB>> ]
-"5812" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1347</SUB>> ]
-"5814" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1347</SUB>> ]
-"5830" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1348</SUB>> ]
-"5832" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1348</SUB>> ]
-"5794" [label = <(METHOD,CallNonvirtualFloatMethodA)<SUB>1345</SUB>> ]
-"5849" [label = <(METHOD_RETURN,jfloat)<SUB>1345</SUB>> ]
+"5801" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1346</SUB>> ]
+"5819" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1347</SUB>> ]
+"5838" [label = <(soa,soa(env))<SUB>1348</SUB>> ]
+"5840" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetF();,return InvokeWithJValues(soa, obj, mid, args).GetF();)<SUB>1349</SUB>> ]
+"5841" [label = <(GetF,InvokeWithJValues(soa, obj, mid, args).GetF())<SUB>1349</SUB>> ]
+"5842" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetF)<SUB>1349</SUB>> ]
+"5805" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1346</SUB>> ]
+"5823" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1347</SUB>> ]
+"5843" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1349</SUB>> ]
+"5848" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1349</SUB>> ]
+"5806" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1346</SUB>> ]
+"5810" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1346</SUB>> ]
+"5817" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1346</SUB>> ]
+"5824" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1347</SUB>> ]
+"5828" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1347</SUB>> ]
+"5835" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1347</SUB>> ]
+"5811" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1346</SUB>> ]
+"5829" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1347</SUB>> ]
+"5812" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1346</SUB>> ]
+"5814" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1346</SUB>> ]
+"5830" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1347</SUB>> ]
+"5832" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1347</SUB>> ]
+"5794" [label = <(METHOD,CallNonvirtualFloatMethodA)<SUB>1344</SUB>> ]
+"5849" [label = <(METHOD_RETURN,jfloat)<SUB>1344</SUB>> ]
   "5801" -> "5806" 
   "5801" -> "5819" 
   "5819" -> "5824" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/113-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/113-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/113-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/113-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualDoubleMethod" {  
-"5858" [label = <(va_start,va_start(ap, mid))<SUB>1355</SUB>> ]
-"5862" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1356</SUB>> ]
-"5865" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1357</SUB>> ]
-"5883" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1358</SUB>> ]
-"5902" [label = <(soa,soa(env))<SUB>1359</SUB>> ]
-"5905" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1360</SUB>> ]
-"5911" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1361</SUB>> ]
-"5863" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1356</SUB>> ]
-"5906" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1360</SUB>> ]
-"5912" [label = <(GetD,result.GetD())<SUB>1361</SUB>> ]
-"5913" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1361</SUB>> ]
-"5869" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1357</SUB>> ]
-"5887" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1358</SUB>> ]
-"5915" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1361</SUB>> ]
-"5870" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1357</SUB>> ]
-"5874" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1357</SUB>> ]
-"5881" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1357</SUB>> ]
-"5888" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1358</SUB>> ]
-"5892" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1358</SUB>> ]
-"5899" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1358</SUB>> ]
-"5875" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1357</SUB>> ]
-"5893" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1358</SUB>> ]
-"5876" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1357</SUB>> ]
-"5878" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1357</SUB>> ]
-"5894" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1358</SUB>> ]
-"5896" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1358</SUB>> ]
-"5851" [label = <(METHOD,CallNonvirtualDoubleMethod)<SUB>1353</SUB>> ]
-"5916" [label = <(METHOD_RETURN,jdouble)<SUB>1353</SUB>> ]
+"5858" [label = <(va_start,va_start(ap, mid))<SUB>1354</SUB>> ]
+"5862" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1355</SUB>> ]
+"5865" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1356</SUB>> ]
+"5883" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1357</SUB>> ]
+"5902" [label = <(soa,soa(env))<SUB>1358</SUB>> ]
+"5905" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1359</SUB>> ]
+"5911" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1360</SUB>> ]
+"5863" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1355</SUB>> ]
+"5906" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1359</SUB>> ]
+"5912" [label = <(GetD,result.GetD())<SUB>1360</SUB>> ]
+"5913" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1360</SUB>> ]
+"5869" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1356</SUB>> ]
+"5887" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1357</SUB>> ]
+"5915" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1360</SUB>> ]
+"5870" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1356</SUB>> ]
+"5874" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1356</SUB>> ]
+"5881" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1356</SUB>> ]
+"5888" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1357</SUB>> ]
+"5892" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1357</SUB>> ]
+"5899" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1357</SUB>> ]
+"5875" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1356</SUB>> ]
+"5893" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1357</SUB>> ]
+"5876" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1356</SUB>> ]
+"5878" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1356</SUB>> ]
+"5894" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1357</SUB>> ]
+"5896" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1357</SUB>> ]
+"5851" [label = <(METHOD,CallNonvirtualDoubleMethod)<SUB>1352</SUB>> ]
+"5916" [label = <(METHOD_RETURN,jdouble)<SUB>1352</SUB>> ]
   "5858" -> "5863" 
   "5862" -> "5865" 
   "5865" -> "5870" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/114-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/114-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/114-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/114-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualDoubleMethodV" {  
-"5925" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1366</SUB>> ]
-"5943" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1367</SUB>> ]
-"5962" [label = <(soa,soa(env))<SUB>1368</SUB>> ]
-"5964" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetD();,return InvokeWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1369</SUB>> ]
-"5965" [label = <(GetD,InvokeWithVarArgs(soa, obj, mid, args).GetD())<SUB>1369</SUB>> ]
-"5966" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetD)<SUB>1369</SUB>> ]
-"5929" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1366</SUB>> ]
-"5947" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1367</SUB>> ]
-"5967" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1369</SUB>> ]
-"5972" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1369</SUB>> ]
-"5930" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1366</SUB>> ]
-"5934" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1366</SUB>> ]
-"5941" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1366</SUB>> ]
-"5948" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1367</SUB>> ]
-"5952" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1367</SUB>> ]
-"5959" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1367</SUB>> ]
-"5935" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1366</SUB>> ]
-"5953" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1367</SUB>> ]
-"5936" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1366</SUB>> ]
-"5938" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1366</SUB>> ]
-"5954" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1367</SUB>> ]
-"5956" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1367</SUB>> ]
-"5918" [label = <(METHOD,CallNonvirtualDoubleMethodV)<SUB>1364</SUB>> ]
-"5973" [label = <(METHOD_RETURN,jdouble)<SUB>1364</SUB>> ]
+"5925" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1365</SUB>> ]
+"5943" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1366</SUB>> ]
+"5962" [label = <(soa,soa(env))<SUB>1367</SUB>> ]
+"5964" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetD();,return InvokeWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1368</SUB>> ]
+"5965" [label = <(GetD,InvokeWithVarArgs(soa, obj, mid, args).GetD())<SUB>1368</SUB>> ]
+"5966" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetD)<SUB>1368</SUB>> ]
+"5929" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1365</SUB>> ]
+"5947" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1366</SUB>> ]
+"5967" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1368</SUB>> ]
+"5972" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1368</SUB>> ]
+"5930" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1365</SUB>> ]
+"5934" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1365</SUB>> ]
+"5941" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1365</SUB>> ]
+"5948" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1366</SUB>> ]
+"5952" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1366</SUB>> ]
+"5959" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1366</SUB>> ]
+"5935" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1365</SUB>> ]
+"5953" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1366</SUB>> ]
+"5936" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1365</SUB>> ]
+"5938" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1365</SUB>> ]
+"5954" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1366</SUB>> ]
+"5956" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1366</SUB>> ]
+"5918" [label = <(METHOD,CallNonvirtualDoubleMethodV)<SUB>1363</SUB>> ]
+"5973" [label = <(METHOD_RETURN,jdouble)<SUB>1363</SUB>> ]
   "5925" -> "5930" 
   "5925" -> "5943" 
   "5943" -> "5948" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/115-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/115-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/115-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/115-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualDoubleMethodA" {  
-"5982" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1374</SUB>> ]
-"6000" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1375</SUB>> ]
-"6019" [label = <(soa,soa(env))<SUB>1376</SUB>> ]
-"6021" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetD();,return InvokeWithJValues(soa, obj, mid, args).GetD();)<SUB>1377</SUB>> ]
-"6022" [label = <(GetD,InvokeWithJValues(soa, obj, mid, args).GetD())<SUB>1377</SUB>> ]
-"6023" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetD)<SUB>1377</SUB>> ]
-"5986" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1374</SUB>> ]
-"6004" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1375</SUB>> ]
-"6024" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1377</SUB>> ]
-"6029" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1377</SUB>> ]
-"5987" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1374</SUB>> ]
-"5991" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1374</SUB>> ]
-"5998" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1374</SUB>> ]
-"6005" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1375</SUB>> ]
-"6009" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1375</SUB>> ]
-"6016" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1375</SUB>> ]
-"5992" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1374</SUB>> ]
-"6010" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1375</SUB>> ]
-"5993" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1374</SUB>> ]
-"5995" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1374</SUB>> ]
-"6011" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1375</SUB>> ]
-"6013" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1375</SUB>> ]
-"5975" [label = <(METHOD,CallNonvirtualDoubleMethodA)<SUB>1372</SUB>> ]
-"6030" [label = <(METHOD_RETURN,jdouble)<SUB>1372</SUB>> ]
+"5982" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1373</SUB>> ]
+"6000" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1374</SUB>> ]
+"6019" [label = <(soa,soa(env))<SUB>1375</SUB>> ]
+"6021" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetD();,return InvokeWithJValues(soa, obj, mid, args).GetD();)<SUB>1376</SUB>> ]
+"6022" [label = <(GetD,InvokeWithJValues(soa, obj, mid, args).GetD())<SUB>1376</SUB>> ]
+"6023" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetD)<SUB>1376</SUB>> ]
+"5986" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1373</SUB>> ]
+"6004" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1374</SUB>> ]
+"6024" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1376</SUB>> ]
+"6029" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1376</SUB>> ]
+"5987" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1373</SUB>> ]
+"5991" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1373</SUB>> ]
+"5998" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1373</SUB>> ]
+"6005" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1374</SUB>> ]
+"6009" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1374</SUB>> ]
+"6016" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1374</SUB>> ]
+"5992" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1373</SUB>> ]
+"6010" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1374</SUB>> ]
+"5993" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1373</SUB>> ]
+"5995" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1373</SUB>> ]
+"6011" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1374</SUB>> ]
+"6013" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1374</SUB>> ]
+"5975" [label = <(METHOD,CallNonvirtualDoubleMethodA)<SUB>1371</SUB>> ]
+"6030" [label = <(METHOD_RETURN,jdouble)<SUB>1371</SUB>> ]
   "5982" -> "5987" 
   "5982" -> "6000" 
   "6000" -> "6005" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/116-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/116-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/116-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/116-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,27 +1,27 @@
 digraph "CallNonvirtualVoidMethod" {  
-"6039" [label = <(va_start,va_start(ap, mid))<SUB>1382</SUB>> ]
-"6043" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1383</SUB>> ]
-"6046" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1384</SUB>> ]
-"6063" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1385</SUB>> ]
-"6081" [label = <(soa,soa(env))<SUB>1386</SUB>> ]
-"6083" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1387</SUB>> ]
-"6044" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1383</SUB>> ]
-"6050" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1384</SUB>> ]
-"6067" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1385</SUB>> ]
-"6051" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1384</SUB>> ]
-"6055" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1384</SUB>> ]
-"6062" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1384</SUB>> ]
-"6068" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1385</SUB>> ]
-"6072" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1385</SUB>> ]
-"6079" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1385</SUB>> ]
-"6056" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1384</SUB>> ]
-"6073" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1385</SUB>> ]
-"6057" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1384</SUB>> ]
-"6059" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1384</SUB>> ]
-"6074" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1385</SUB>> ]
-"6076" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1385</SUB>> ]
-"6032" [label = <(METHOD,CallNonvirtualVoidMethod)<SUB>1380</SUB>> ]
-"6088" [label = <(METHOD_RETURN,void)<SUB>1380</SUB>> ]
+"6039" [label = <(va_start,va_start(ap, mid))<SUB>1381</SUB>> ]
+"6043" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1382</SUB>> ]
+"6046" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1383</SUB>> ]
+"6063" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1384</SUB>> ]
+"6081" [label = <(soa,soa(env))<SUB>1385</SUB>> ]
+"6083" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1386</SUB>> ]
+"6044" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1382</SUB>> ]
+"6050" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1383</SUB>> ]
+"6067" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1384</SUB>> ]
+"6051" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1383</SUB>> ]
+"6055" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1383</SUB>> ]
+"6062" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1383</SUB>> ]
+"6068" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1384</SUB>> ]
+"6072" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1384</SUB>> ]
+"6079" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1384</SUB>> ]
+"6056" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1383</SUB>> ]
+"6073" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1384</SUB>> ]
+"6057" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1383</SUB>> ]
+"6059" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1383</SUB>> ]
+"6074" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1384</SUB>> ]
+"6076" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1384</SUB>> ]
+"6032" [label = <(METHOD,CallNonvirtualVoidMethod)<SUB>1379</SUB>> ]
+"6088" [label = <(METHOD_RETURN,void)<SUB>1379</SUB>> ]
   "6039" -> "6044" 
   "6043" -> "6046" 
   "6046" -> "6051" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/117-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/117-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/117-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/117-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,24 +1,24 @@
 digraph "CallNonvirtualVoidMethodV" {  
-"6097" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1392</SUB>> ]
-"6114" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1393</SUB>> ]
-"6132" [label = <(soa,soa(env))<SUB>1394</SUB>> ]
-"6134" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1395</SUB>> ]
-"6101" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1392</SUB>> ]
-"6118" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1393</SUB>> ]
-"6102" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1392</SUB>> ]
-"6106" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1392</SUB>> ]
-"6113" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1392</SUB>> ]
-"6119" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1393</SUB>> ]
-"6123" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1393</SUB>> ]
-"6130" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1393</SUB>> ]
-"6107" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1392</SUB>> ]
-"6124" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1393</SUB>> ]
-"6108" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1392</SUB>> ]
-"6110" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1392</SUB>> ]
-"6125" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1393</SUB>> ]
-"6127" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1393</SUB>> ]
-"6090" [label = <(METHOD,CallNonvirtualVoidMethodV)<SUB>1390</SUB>> ]
-"6139" [label = <(METHOD_RETURN,void)<SUB>1390</SUB>> ]
+"6097" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1391</SUB>> ]
+"6114" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1392</SUB>> ]
+"6132" [label = <(soa,soa(env))<SUB>1393</SUB>> ]
+"6134" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1394</SUB>> ]
+"6101" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1391</SUB>> ]
+"6118" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1392</SUB>> ]
+"6102" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1391</SUB>> ]
+"6106" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1391</SUB>> ]
+"6113" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1391</SUB>> ]
+"6119" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1392</SUB>> ]
+"6123" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1392</SUB>> ]
+"6130" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1392</SUB>> ]
+"6107" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1391</SUB>> ]
+"6124" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1392</SUB>> ]
+"6108" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1391</SUB>> ]
+"6110" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1391</SUB>> ]
+"6125" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1392</SUB>> ]
+"6127" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1392</SUB>> ]
+"6090" [label = <(METHOD,CallNonvirtualVoidMethodV)<SUB>1389</SUB>> ]
+"6139" [label = <(METHOD_RETURN,void)<SUB>1389</SUB>> ]
   "6097" -> "6102" 
   "6097" -> "6114" 
   "6114" -> "6119" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/118-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/118-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/118-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/118-cfg.dot	2023-06-07 19:34:41.637389017 +0330
@@ -1,24 +1,24 @@
 digraph "CallNonvirtualVoidMethodA" {  
-"6148" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1400</SUB>> ]
-"6165" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1401</SUB>> ]
-"6183" [label = <(soa,soa(env))<SUB>1402</SUB>> ]
-"6185" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1403</SUB>> ]
-"6152" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1400</SUB>> ]
-"6169" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1401</SUB>> ]
-"6153" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1400</SUB>> ]
-"6157" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1400</SUB>> ]
-"6164" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1400</SUB>> ]
-"6170" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1401</SUB>> ]
-"6174" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1401</SUB>> ]
-"6181" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1401</SUB>> ]
-"6158" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1400</SUB>> ]
-"6175" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1401</SUB>> ]
-"6159" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1400</SUB>> ]
-"6161" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1400</SUB>> ]
-"6176" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1401</SUB>> ]
-"6178" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1401</SUB>> ]
-"6141" [label = <(METHOD,CallNonvirtualVoidMethodA)<SUB>1398</SUB>> ]
-"6190" [label = <(METHOD_RETURN,void)<SUB>1398</SUB>> ]
+"6148" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1399</SUB>> ]
+"6165" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1400</SUB>> ]
+"6183" [label = <(soa,soa(env))<SUB>1401</SUB>> ]
+"6185" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1402</SUB>> ]
+"6152" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1399</SUB>> ]
+"6169" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1400</SUB>> ]
+"6153" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1399</SUB>> ]
+"6157" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1399</SUB>> ]
+"6164" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1399</SUB>> ]
+"6170" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1400</SUB>> ]
+"6174" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1400</SUB>> ]
+"6181" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1400</SUB>> ]
+"6158" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1399</SUB>> ]
+"6175" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1400</SUB>> ]
+"6159" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1399</SUB>> ]
+"6161" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1399</SUB>> ]
+"6176" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1400</SUB>> ]
+"6178" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1400</SUB>> ]
+"6141" [label = <(METHOD,CallNonvirtualVoidMethodA)<SUB>1397</SUB>> ]
+"6190" [label = <(METHOD_RETURN,void)<SUB>1397</SUB>> ]
   "6148" -> "6153" 
   "6148" -> "6165" 
   "6165" -> "6170" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/119-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/119-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/119-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/119-cfg.dot	2023-06-07 19:34:41.647389016 +0330
@@ -1,33 +1,33 @@
 digraph "GetFieldID" {  
-"6198" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1407</SUB>> ]
-"6216" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1408</SUB>> ]
-"6234" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1409</SUB>> ]
-"6253" [label = <(soa,soa(env))<SUB>1410</SUB>> ]
-"6255" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, false);,return FindFieldID(soa, java_class, name, sig, false);)<SUB>1411</SUB>> ]
-"6256" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, false))<SUB>1411</SUB>> ]
-"6202" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1407</SUB>> ]
-"6220" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1408</SUB>> ]
-"6238" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1409</SUB>> ]
-"6203" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1407</SUB>> ]
-"6207" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1407</SUB>> ]
-"6214" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1407</SUB>> ]
-"6221" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1408</SUB>> ]
-"6225" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1408</SUB>> ]
-"6232" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1408</SUB>> ]
-"6239" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1409</SUB>> ]
-"6243" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1409</SUB>> ]
-"6250" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1409</SUB>> ]
-"6208" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1407</SUB>> ]
-"6226" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1408</SUB>> ]
-"6244" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1409</SUB>> ]
-"6209" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1407</SUB>> ]
-"6211" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1407</SUB>> ]
-"6227" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1408</SUB>> ]
-"6229" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1408</SUB>> ]
-"6245" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1409</SUB>> ]
-"6247" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1409</SUB>> ]
-"6192" [label = <(METHOD,GetFieldID)<SUB>1406</SUB>> ]
-"6262" [label = <(METHOD_RETURN,jfieldID)<SUB>1406</SUB>> ]
+"6198" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1406</SUB>> ]
+"6216" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1407</SUB>> ]
+"6234" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1408</SUB>> ]
+"6253" [label = <(soa,soa(env))<SUB>1409</SUB>> ]
+"6255" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, false);,return FindFieldID(soa, java_class, name, sig, false);)<SUB>1410</SUB>> ]
+"6256" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, false))<SUB>1410</SUB>> ]
+"6202" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1406</SUB>> ]
+"6220" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1407</SUB>> ]
+"6238" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1408</SUB>> ]
+"6203" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1406</SUB>> ]
+"6207" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1406</SUB>> ]
+"6214" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1406</SUB>> ]
+"6221" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1407</SUB>> ]
+"6225" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1407</SUB>> ]
+"6232" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1407</SUB>> ]
+"6239" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1408</SUB>> ]
+"6243" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1408</SUB>> ]
+"6250" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1408</SUB>> ]
+"6208" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1406</SUB>> ]
+"6226" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1407</SUB>> ]
+"6244" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1408</SUB>> ]
+"6209" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1406</SUB>> ]
+"6211" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1406</SUB>> ]
+"6227" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1407</SUB>> ]
+"6229" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1407</SUB>> ]
+"6245" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1408</SUB>> ]
+"6247" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1408</SUB>> ]
+"6192" [label = <(METHOD,GetFieldID)<SUB>1405</SUB>> ]
+"6262" [label = <(METHOD_RETURN,jfieldID)<SUB>1405</SUB>> ]
   "6198" -> "6203" 
   "6198" -> "6216" 
   "6216" -> "6221" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/12-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/12-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/12-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/12-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,34 +1,34 @@
 digraph "NormalizeJniClassDescriptor" {  
-"346" [label = <(RETURN,return result;,return result;)<SUB>278</SUB>> ]
-"289" [label = <(&lt;operator&gt;.equals,name[0] == '[')<SUB>265</SUB>> ]
-"310" [label = <(&lt;operator&gt;.notEquals,result.find('.') != std::string::npos)<SUB>273</SUB>> ]
-"290" [label = <(&lt;operator&gt;.indirectIndexAccess,name[0])<SUB>265</SUB>> ]
-"295" [label = <(&lt;operator&gt;.assignment,result = name)<SUB>266</SUB>> ]
-"311" [label = <(find,result.find('.'))<SUB>273</SUB>> ]
-"316" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>273</SUB>> ]
-"322" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot;&quot;)<SUB>274</SUB>> ]
-"332" [label = <(std::replace,std::replace(result.begin(), result.end(), '.', '/'))<SUB>276</SUB>> ]
-"300" [label = <(&lt;operator&gt;.assignmentPlus,result += 'L')<SUB>268</SUB>> ]
-"303" [label = <(&lt;operator&gt;.assignmentPlus,result += name)<SUB>269</SUB>> ]
-"306" [label = <(&lt;operator&gt;.assignmentPlus,result += ';')<SUB>270</SUB>> ]
-"312" [label = <(&lt;operator&gt;.fieldAccess,result.find)<SUB>273</SUB>> ]
-"317" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>273</SUB>> ]
-"320" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>273</SUB>> ]
-"323" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name)<SUB>274</SUB>> ]
-"333" [label = <(&lt;operator&gt;.fieldAccess,std::replace)<SUB>276</SUB>> ]
-"336" [label = <(begin,result.begin())<SUB>276</SUB>> ]
-"340" [label = <(end,result.end())<SUB>276</SUB>> ]
-"314" [label = <(FIELD_IDENTIFIER,find,find)<SUB>273</SUB>> ]
-"324" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot;)<SUB>274</SUB>> ]
-"335" [label = <(FIELD_IDENTIFIER,replace,replace)<SUB>276</SUB>> ]
-"337" [label = <(&lt;operator&gt;.fieldAccess,result.begin)<SUB>276</SUB>> ]
-"341" [label = <(&lt;operator&gt;.fieldAccess,result.end)<SUB>276</SUB>> ]
-"325" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;)<SUB>274</SUB>> ]
-"339" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>276</SUB>> ]
-"343" [label = <(FIELD_IDENTIFIER,end,end)<SUB>276</SUB>> ]
-"326" [label = <(LOG,LOG(WARNING))<SUB>274</SUB>> ]
-"284" [label = <(METHOD,NormalizeJniClassDescriptor)<SUB>262</SUB>> ]
-"348" [label = <(METHOD_RETURN,string)<SUB>262</SUB>> ]
+"346" [label = <(RETURN,return result;,return result;)<SUB>277</SUB>> ]
+"289" [label = <(&lt;operator&gt;.equals,name[0] == '[')<SUB>264</SUB>> ]
+"310" [label = <(&lt;operator&gt;.notEquals,result.find('.') != std::string::npos)<SUB>272</SUB>> ]
+"290" [label = <(&lt;operator&gt;.indirectIndexAccess,name[0])<SUB>264</SUB>> ]
+"295" [label = <(&lt;operator&gt;.assignment,result = name)<SUB>265</SUB>> ]
+"311" [label = <(find,result.find('.'))<SUB>272</SUB>> ]
+"316" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>272</SUB>> ]
+"322" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot;&quot;)<SUB>273</SUB>> ]
+"332" [label = <(std::replace,std::replace(result.begin(), result.end(), '.', '/'))<SUB>275</SUB>> ]
+"300" [label = <(&lt;operator&gt;.assignmentPlus,result += 'L')<SUB>267</SUB>> ]
+"303" [label = <(&lt;operator&gt;.assignmentPlus,result += name)<SUB>268</SUB>> ]
+"306" [label = <(&lt;operator&gt;.assignmentPlus,result += ';')<SUB>269</SUB>> ]
+"312" [label = <(&lt;operator&gt;.fieldAccess,result.find)<SUB>272</SUB>> ]
+"317" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>272</SUB>> ]
+"320" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>272</SUB>> ]
+"323" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name)<SUB>273</SUB>> ]
+"333" [label = <(&lt;operator&gt;.fieldAccess,std::replace)<SUB>275</SUB>> ]
+"336" [label = <(begin,result.begin())<SUB>275</SUB>> ]
+"340" [label = <(end,result.end())<SUB>275</SUB>> ]
+"314" [label = <(FIELD_IDENTIFIER,find,find)<SUB>272</SUB>> ]
+"324" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot;)<SUB>273</SUB>> ]
+"335" [label = <(FIELD_IDENTIFIER,replace,replace)<SUB>275</SUB>> ]
+"337" [label = <(&lt;operator&gt;.fieldAccess,result.begin)<SUB>275</SUB>> ]
+"341" [label = <(&lt;operator&gt;.fieldAccess,result.end)<SUB>275</SUB>> ]
+"325" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;)<SUB>273</SUB>> ]
+"339" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>275</SUB>> ]
+"343" [label = <(FIELD_IDENTIFIER,end,end)<SUB>275</SUB>> ]
+"326" [label = <(LOG,LOG(WARNING))<SUB>273</SUB>> ]
+"284" [label = <(METHOD,NormalizeJniClassDescriptor)<SUB>261</SUB>> ]
+"348" [label = <(METHOD_RETURN,string)<SUB>261</SUB>> ]
   "346" -> "348" 
   "289" -> "295" 
   "289" -> "300" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/120-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/120-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/120-cfg.dot	2023-06-07 19:34:35.117389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/120-cfg.dot	2023-06-07 19:34:41.647389016 +0330
@@ -1,33 +1,33 @@
 digraph "GetStaticFieldID" {  
-"6270" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1416</SUB>> ]
-"6288" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1417</SUB>> ]
-"6306" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1418</SUB>> ]
-"6325" [label = <(soa,soa(env))<SUB>1419</SUB>> ]
-"6327" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, true);,return FindFieldID(soa, java_class, name, sig, true);)<SUB>1420</SUB>> ]
-"6328" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, true))<SUB>1420</SUB>> ]
-"6274" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1416</SUB>> ]
-"6292" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1417</SUB>> ]
-"6310" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1418</SUB>> ]
-"6275" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1416</SUB>> ]
-"6279" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1416</SUB>> ]
-"6286" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1416</SUB>> ]
-"6293" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1417</SUB>> ]
-"6297" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1417</SUB>> ]
-"6304" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1417</SUB>> ]
-"6311" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1418</SUB>> ]
-"6315" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1418</SUB>> ]
-"6322" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1418</SUB>> ]
-"6280" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1416</SUB>> ]
-"6298" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1417</SUB>> ]
-"6316" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1418</SUB>> ]
-"6281" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1416</SUB>> ]
-"6283" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1416</SUB>> ]
-"6299" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1417</SUB>> ]
-"6301" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1417</SUB>> ]
-"6317" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1418</SUB>> ]
-"6319" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1418</SUB>> ]
-"6264" [label = <(METHOD,GetStaticFieldID)<SUB>1414</SUB>> ]
-"6334" [label = <(METHOD_RETURN,jfieldID)<SUB>1414</SUB>> ]
+"6270" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1415</SUB>> ]
+"6288" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1416</SUB>> ]
+"6306" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1417</SUB>> ]
+"6325" [label = <(soa,soa(env))<SUB>1418</SUB>> ]
+"6327" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, true);,return FindFieldID(soa, java_class, name, sig, true);)<SUB>1419</SUB>> ]
+"6328" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, true))<SUB>1419</SUB>> ]
+"6274" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1415</SUB>> ]
+"6292" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1416</SUB>> ]
+"6310" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1417</SUB>> ]
+"6275" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1415</SUB>> ]
+"6279" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1415</SUB>> ]
+"6286" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1415</SUB>> ]
+"6293" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1416</SUB>> ]
+"6297" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1416</SUB>> ]
+"6304" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1416</SUB>> ]
+"6311" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1417</SUB>> ]
+"6315" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1417</SUB>> ]
+"6322" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1417</SUB>> ]
+"6280" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1415</SUB>> ]
+"6298" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1416</SUB>> ]
+"6316" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1417</SUB>> ]
+"6281" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1415</SUB>> ]
+"6283" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1415</SUB>> ]
+"6299" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1416</SUB>> ]
+"6301" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1416</SUB>> ]
+"6317" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1417</SUB>> ]
+"6319" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1417</SUB>> ]
+"6264" [label = <(METHOD,GetStaticFieldID)<SUB>1413</SUB>> ]
+"6334" [label = <(METHOD_RETURN,jfieldID)<SUB>1413</SUB>> ]
   "6270" -> "6275" 
   "6270" -> "6288" 
   "6288" -> "6293" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/121-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/121-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/121-cfg.dot	2023-06-07 19:34:35.127389618 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/121-cfg.dot	2023-06-07 19:34:41.647389016 +0330
@@ -1,47 +1,47 @@
 digraph "GetObjectField" {  
-"6341" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1424</SUB>> ]
-"6359" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1425</SUB>> ]
-"6378" [label = <(soa,soa(env))<SUB>1426</SUB>> ]
-"6381" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1427</SUB>> ]
-"6388" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1428</SUB>> ]
-"6391" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1429</SUB>> ]
-"6408" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));)<SUB>1430</SUB>> ]
-"6383" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1427</SUB>> ]
-"6392" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1429</SUB>> ]
-"6399" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1429</SUB>> ]
-"6409" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o)))<SUB>1430</SUB>> ]
-"6384" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1427</SUB>> ]
-"6393" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1429</SUB>> ]
-"6400" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1429</SUB>> ]
-"6410" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1430</SUB>> ]
-"6415" [label = <(GetObject,f-&gt;GetObject(o))<SUB>1430</SUB>> ]
-"6345" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1424</SUB>> ]
-"6363" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1425</SUB>> ]
-"6386" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1427</SUB>> ]
-"6395" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1429</SUB>> ]
-"6401" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1429</SUB>> ]
-"6404" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1429</SUB>> ]
-"6411" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1430</SUB>> ]
-"6416" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1430</SUB>> ]
-"6346" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1424</SUB>> ]
-"6350" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1424</SUB>> ]
-"6357" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1424</SUB>> ]
-"6364" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1425</SUB>> ]
-"6368" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1425</SUB>> ]
-"6375" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1425</SUB>> ]
-"6397" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1429</SUB>> ]
-"6403" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1429</SUB>> ]
-"6406" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1429</SUB>> ]
-"6413" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1430</SUB>> ]
-"6418" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1430</SUB>> ]
-"6351" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1424</SUB>> ]
-"6369" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1425</SUB>> ]
-"6352" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1424</SUB>> ]
-"6354" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1424</SUB>> ]
-"6370" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1425</SUB>> ]
-"6372" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1425</SUB>> ]
-"6336" [label = <(METHOD,GetObjectField)<SUB>1423</SUB>> ]
-"6420" [label = <(METHOD_RETURN,jobject)<SUB>1423</SUB>> ]
+"6341" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1423</SUB>> ]
+"6359" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1424</SUB>> ]
+"6378" [label = <(soa,soa(env))<SUB>1425</SUB>> ]
+"6381" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1426</SUB>> ]
+"6388" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1427</SUB>> ]
+"6391" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1428</SUB>> ]
+"6408" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));)<SUB>1429</SUB>> ]
+"6383" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1426</SUB>> ]
+"6392" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1428</SUB>> ]
+"6399" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1428</SUB>> ]
+"6409" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o)))<SUB>1429</SUB>> ]
+"6384" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1426</SUB>> ]
+"6393" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1428</SUB>> ]
+"6400" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1428</SUB>> ]
+"6410" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1429</SUB>> ]
+"6415" [label = <(GetObject,f-&gt;GetObject(o))<SUB>1429</SUB>> ]
+"6345" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1423</SUB>> ]
+"6363" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1424</SUB>> ]
+"6386" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1426</SUB>> ]
+"6395" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1428</SUB>> ]
+"6401" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1428</SUB>> ]
+"6404" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1428</SUB>> ]
+"6411" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1429</SUB>> ]
+"6416" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1429</SUB>> ]
+"6346" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1423</SUB>> ]
+"6350" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1423</SUB>> ]
+"6357" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1423</SUB>> ]
+"6364" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1424</SUB>> ]
+"6368" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1424</SUB>> ]
+"6375" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1424</SUB>> ]
+"6397" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1428</SUB>> ]
+"6403" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1428</SUB>> ]
+"6406" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1428</SUB>> ]
+"6413" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1429</SUB>> ]
+"6418" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1429</SUB>> ]
+"6351" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1423</SUB>> ]
+"6369" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1424</SUB>> ]
+"6352" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1423</SUB>> ]
+"6354" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1423</SUB>> ]
+"6370" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1424</SUB>> ]
+"6372" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1424</SUB>> ]
+"6336" [label = <(METHOD,GetObjectField)<SUB>1422</SUB>> ]
+"6420" [label = <(METHOD_RETURN,jobject)<SUB>1422</SUB>> ]
   "6341" -> "6346" 
   "6341" -> "6359" 
   "6359" -> "6364" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/122-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/122-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/122-cfg.dot	2023-06-07 19:34:35.127389618 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/122-cfg.dot	2023-06-07 19:34:41.647389016 +0330
@@ -1,31 +1,31 @@
 digraph "GetStaticObjectField" {  
-"6427" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1434</SUB>> ]
-"6446" [label = <(soa,soa(env))<SUB>1435</SUB>> ]
-"6449" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1436</SUB>> ]
-"6456" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1437</SUB>> ]
-"6459" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));)<SUB>1438</SUB>> ]
-"6451" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1436</SUB>> ]
-"6460" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass())))<SUB>1438</SUB>> ]
-"6452" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1436</SUB>> ]
-"6461" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1438</SUB>> ]
-"6466" [label = <(GetObject,f-&gt;GetObject(f-&gt;GetDeclaringClass()))<SUB>1438</SUB>> ]
-"6431" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1434</SUB>> ]
-"6454" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1436</SUB>> ]
-"6462" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1438</SUB>> ]
-"6467" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1438</SUB>> ]
-"6470" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1438</SUB>> ]
-"6432" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1434</SUB>> ]
-"6436" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1434</SUB>> ]
-"6443" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1434</SUB>> ]
-"6464" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1438</SUB>> ]
-"6469" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1438</SUB>> ]
-"6471" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1438</SUB>> ]
-"6437" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1434</SUB>> ]
-"6473" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1438</SUB>> ]
-"6438" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1434</SUB>> ]
-"6440" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1434</SUB>> ]
-"6422" [label = <(METHOD,GetStaticObjectField)<SUB>1433</SUB>> ]
-"6474" [label = <(METHOD_RETURN,jobject)<SUB>1433</SUB>> ]
+"6427" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1433</SUB>> ]
+"6446" [label = <(soa,soa(env))<SUB>1434</SUB>> ]
+"6449" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1435</SUB>> ]
+"6456" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1436</SUB>> ]
+"6459" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));)<SUB>1437</SUB>> ]
+"6451" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1435</SUB>> ]
+"6460" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass())))<SUB>1437</SUB>> ]
+"6452" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1435</SUB>> ]
+"6461" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1437</SUB>> ]
+"6466" [label = <(GetObject,f-&gt;GetObject(f-&gt;GetDeclaringClass()))<SUB>1437</SUB>> ]
+"6431" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1433</SUB>> ]
+"6454" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1435</SUB>> ]
+"6462" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1437</SUB>> ]
+"6467" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1437</SUB>> ]
+"6470" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1437</SUB>> ]
+"6432" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1433</SUB>> ]
+"6436" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1433</SUB>> ]
+"6443" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1433</SUB>> ]
+"6464" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1437</SUB>> ]
+"6469" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1437</SUB>> ]
+"6471" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1437</SUB>> ]
+"6437" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1433</SUB>> ]
+"6473" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1437</SUB>> ]
+"6438" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1433</SUB>> ]
+"6440" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1433</SUB>> ]
+"6422" [label = <(METHOD,GetStaticObjectField)<SUB>1432</SUB>> ]
+"6474" [label = <(METHOD_RETURN,jobject)<SUB>1432</SUB>> ]
   "6427" -> "6432" 
   "6427" -> "6446" 
   "6446" -> "6454" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/123-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/123-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/123-cfg.dot	2023-06-07 19:34:35.127389618 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/123-cfg.dot	2023-06-07 19:34:41.647389016 +0330
@@ -1,56 +1,56 @@
 digraph "SetObjectField" {  
-"6482" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1442</SUB>> ]
-"6499" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1443</SUB>> ]
-"6517" [label = <(soa,soa(env))<SUB>1444</SUB>> ]
-"6520" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1445</SUB>> ]
-"6527" [label = <(NotifySetObjectField,NotifySetObjectField(f, java_object, java_value))<SUB>1446</SUB>> ]
-"6531" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1447</SUB>> ]
-"6548" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1448</SUB>> ]
-"6565" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(o, v))<SUB>1449</SUB>> ]
-"6522" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1445</SUB>> ]
-"6532" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1447</SUB>> ]
-"6539" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1447</SUB>> ]
-"6549" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1448</SUB>> ]
-"6556" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1448</SUB>> ]
-"6566" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1449</SUB>> ]
-"6571" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1449</SUB>> ]
-"6523" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1445</SUB>> ]
-"6533" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1447</SUB>> ]
-"6540" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1447</SUB>> ]
-"6550" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1448</SUB>> ]
-"6557" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1448</SUB>> ]
-"6567" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1449</SUB>> ]
-"6572" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1449</SUB>> ]
-"6486" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>1442</SUB>> ]
-"6503" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1443</SUB>> ]
-"6525" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1445</SUB>> ]
-"6535" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1447</SUB>> ]
-"6541" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1447</SUB>> ]
-"6544" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1447</SUB>> ]
-"6552" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1448</SUB>> ]
-"6558" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1448</SUB>> ]
-"6561" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1448</SUB>> ]
-"6569" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1449</SUB>> ]
-"6487" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>1442</SUB>> ]
-"6491" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>1442</SUB>> ]
-"6498" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1442</SUB>> ]
-"6504" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1443</SUB>> ]
-"6508" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1443</SUB>> ]
-"6515" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1443</SUB>> ]
-"6537" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1447</SUB>> ]
-"6543" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1447</SUB>> ]
-"6546" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1447</SUB>> ]
-"6554" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1448</SUB>> ]
-"6560" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1448</SUB>> ]
-"6563" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1448</SUB>> ]
-"6492" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1442</SUB>> ]
-"6509" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1443</SUB>> ]
-"6493" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1442</SUB>> ]
-"6495" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1442</SUB>> ]
-"6510" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1443</SUB>> ]
-"6512" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1443</SUB>> ]
-"6476" [label = <(METHOD,SetObjectField)<SUB>1441</SUB>> ]
-"6575" [label = <(METHOD_RETURN,void)<SUB>1441</SUB>> ]
+"6482" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1441</SUB>> ]
+"6499" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1442</SUB>> ]
+"6517" [label = <(soa,soa(env))<SUB>1443</SUB>> ]
+"6520" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1444</SUB>> ]
+"6527" [label = <(NotifySetObjectField,NotifySetObjectField(f, java_object, java_value))<SUB>1445</SUB>> ]
+"6531" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1446</SUB>> ]
+"6548" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1447</SUB>> ]
+"6565" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(o, v))<SUB>1448</SUB>> ]
+"6522" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1444</SUB>> ]
+"6532" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1446</SUB>> ]
+"6539" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1446</SUB>> ]
+"6549" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1447</SUB>> ]
+"6556" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1447</SUB>> ]
+"6566" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1448</SUB>> ]
+"6571" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1448</SUB>> ]
+"6523" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1444</SUB>> ]
+"6533" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1446</SUB>> ]
+"6540" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1446</SUB>> ]
+"6550" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1447</SUB>> ]
+"6557" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1447</SUB>> ]
+"6567" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1448</SUB>> ]
+"6572" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1448</SUB>> ]
+"6486" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>1441</SUB>> ]
+"6503" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1442</SUB>> ]
+"6525" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1444</SUB>> ]
+"6535" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1446</SUB>> ]
+"6541" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1446</SUB>> ]
+"6544" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1446</SUB>> ]
+"6552" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1447</SUB>> ]
+"6558" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1447</SUB>> ]
+"6561" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1447</SUB>> ]
+"6569" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1448</SUB>> ]
+"6487" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>1441</SUB>> ]
+"6491" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>1441</SUB>> ]
+"6498" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1441</SUB>> ]
+"6504" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1442</SUB>> ]
+"6508" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1442</SUB>> ]
+"6515" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1442</SUB>> ]
+"6537" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1446</SUB>> ]
+"6543" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1446</SUB>> ]
+"6546" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1446</SUB>> ]
+"6554" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1447</SUB>> ]
+"6560" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1447</SUB>> ]
+"6563" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1447</SUB>> ]
+"6492" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1441</SUB>> ]
+"6509" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1442</SUB>> ]
+"6493" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1441</SUB>> ]
+"6495" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1441</SUB>> ]
+"6510" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1442</SUB>> ]
+"6512" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1442</SUB>> ]
+"6476" [label = <(METHOD,SetObjectField)<SUB>1440</SUB>> ]
+"6575" [label = <(METHOD_RETURN,void)<SUB>1440</SUB>> ]
   "6482" -> "6487" 
   "6482" -> "6499" 
   "6499" -> "6504" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/124-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/124-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/124-cfg.dot	2023-06-07 19:34:35.127389618 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/124-cfg.dot	2023-06-07 19:34:41.647389016 +0330
@@ -1,40 +1,40 @@
 digraph "SetStaticObjectField" {  
-"6583" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1453</SUB>> ]
-"6601" [label = <(soa,soa(env))<SUB>1454</SUB>> ]
-"6604" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1455</SUB>> ]
-"6611" [label = <(NotifySetObjectField,NotifySetObjectField(f, nullptr, java_value))<SUB>1456</SUB>> ]
-"6615" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1457</SUB>> ]
-"6632" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(f-&gt;GetDeclaringClass(), v))<SUB>1458</SUB>> ]
-"6606" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1455</SUB>> ]
-"6616" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1457</SUB>> ]
-"6623" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1457</SUB>> ]
-"6633" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1458</SUB>> ]
-"6638" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1458</SUB>> ]
-"6607" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1455</SUB>> ]
-"6617" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1457</SUB>> ]
-"6624" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1457</SUB>> ]
-"6634" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1458</SUB>> ]
-"6639" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1458</SUB>> ]
-"6587" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1453</SUB>> ]
-"6609" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1455</SUB>> ]
-"6619" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1457</SUB>> ]
-"6625" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1457</SUB>> ]
-"6628" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1457</SUB>> ]
-"6636" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1458</SUB>> ]
-"6640" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1458</SUB>> ]
-"6588" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1453</SUB>> ]
-"6592" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1453</SUB>> ]
-"6599" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1453</SUB>> ]
-"6621" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1457</SUB>> ]
-"6627" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1457</SUB>> ]
-"6630" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1457</SUB>> ]
-"6641" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1458</SUB>> ]
-"6593" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1453</SUB>> ]
-"6643" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1458</SUB>> ]
-"6594" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1453</SUB>> ]
-"6596" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1453</SUB>> ]
-"6577" [label = <(METHOD,SetStaticObjectField)<SUB>1452</SUB>> ]
-"6645" [label = <(METHOD_RETURN,void)<SUB>1452</SUB>> ]
+"6583" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1452</SUB>> ]
+"6601" [label = <(soa,soa(env))<SUB>1453</SUB>> ]
+"6604" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1454</SUB>> ]
+"6611" [label = <(NotifySetObjectField,NotifySetObjectField(f, nullptr, java_value))<SUB>1455</SUB>> ]
+"6615" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1456</SUB>> ]
+"6632" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(f-&gt;GetDeclaringClass(), v))<SUB>1457</SUB>> ]
+"6606" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1454</SUB>> ]
+"6616" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1456</SUB>> ]
+"6623" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1456</SUB>> ]
+"6633" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1457</SUB>> ]
+"6638" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1457</SUB>> ]
+"6607" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1454</SUB>> ]
+"6617" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1456</SUB>> ]
+"6624" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1456</SUB>> ]
+"6634" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1457</SUB>> ]
+"6639" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1457</SUB>> ]
+"6587" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1452</SUB>> ]
+"6609" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1454</SUB>> ]
+"6619" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1456</SUB>> ]
+"6625" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1456</SUB>> ]
+"6628" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1456</SUB>> ]
+"6636" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1457</SUB>> ]
+"6640" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1457</SUB>> ]
+"6588" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1452</SUB>> ]
+"6592" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1452</SUB>> ]
+"6599" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1452</SUB>> ]
+"6621" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1456</SUB>> ]
+"6627" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1456</SUB>> ]
+"6630" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1456</SUB>> ]
+"6641" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1457</SUB>> ]
+"6593" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1452</SUB>> ]
+"6643" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1457</SUB>> ]
+"6594" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1452</SUB>> ]
+"6596" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1452</SUB>> ]
+"6577" [label = <(METHOD,SetStaticObjectField)<SUB>1451</SUB>> ]
+"6645" [label = <(METHOD_RETURN,void)<SUB>1451</SUB>> ]
   "6583" -> "6588" 
   "6583" -> "6601" 
   "6601" -> "6609" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/125-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/125-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/125-cfg.dot	2023-06-07 19:34:35.127389618 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/125-cfg.dot	2023-06-07 19:34:41.647389016 +0330
@@ -1,42 +1,42 @@
 digraph "GetBooleanField" {  
-"6652" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1494</SUB>> ]
-"6686" [label = <(soa,ScopedObjectAccess)<SUB>1494</SUB>> ]
-"6689" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1494</SUB>> ]
-"6696" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1494</SUB>> ]
-"6699" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1494</SUB>> ]
-"6716" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj);,GET_PRIMITIVE_FIELD(Boolean, obj);)<SUB>1494</SUB>> ]
-"6671" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1494</SUB>> ]
-"6691" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),jni::DecodeArtField(fid))<SUB>1494</SUB>> ]
-"6700" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1494</SUB>> ]
-"6707" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1494</SUB>> ]
-"6717" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),f-&gt;GetBoolean(o))<SUB>1494</SUB>> ]
-"6672" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1494</SUB>> ]
-"6676" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1494</SUB>> ]
-"6683" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1494</SUB>> ]
-"6692" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1494</SUB>> ]
-"6701" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1494</SUB>> ]
-"6708" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1494</SUB>> ]
-"6718" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1494</SUB>> ]
-"6656" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1494</SUB>> ]
-"6677" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1494</SUB>> ]
-"6694" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1494</SUB>> ]
-"6703" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1494</SUB>> ]
-"6709" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1494</SUB>> ]
-"6712" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1494</SUB>> ]
-"6720" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1494</SUB>> ]
-"6657" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1494</SUB>> ]
-"6661" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1494</SUB>> ]
-"6668" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1494</SUB>> ]
-"6678" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1494</SUB>> ]
-"6680" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1494</SUB>> ]
-"6705" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1494</SUB>> ]
-"6711" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1494</SUB>> ]
-"6714" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1494</SUB>> ]
-"6662" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1494</SUB>> ]
-"6663" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1494</SUB>> ]
-"6665" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1494</SUB>> ]
-"6647" [label = <(METHOD,GetBooleanField)<SUB>1493</SUB>> ]
-"6722" [label = <(METHOD_RETURN,jboolean)<SUB>1493</SUB>> ]
+"6652" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1493</SUB>> ]
+"6686" [label = <(soa,ScopedObjectAccess)<SUB>1493</SUB>> ]
+"6689" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1493</SUB>> ]
+"6696" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1493</SUB>> ]
+"6699" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1493</SUB>> ]
+"6716" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj);,GET_PRIMITIVE_FIELD(Boolean, obj);)<SUB>1493</SUB>> ]
+"6671" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1493</SUB>> ]
+"6691" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),jni::DecodeArtField(fid))<SUB>1493</SUB>> ]
+"6700" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1493</SUB>> ]
+"6707" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1493</SUB>> ]
+"6717" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),f-&gt;GetBoolean(o))<SUB>1493</SUB>> ]
+"6672" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1493</SUB>> ]
+"6676" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1493</SUB>> ]
+"6683" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1493</SUB>> ]
+"6692" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1493</SUB>> ]
+"6701" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1493</SUB>> ]
+"6708" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1493</SUB>> ]
+"6718" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1493</SUB>> ]
+"6656" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1493</SUB>> ]
+"6677" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1493</SUB>> ]
+"6694" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1493</SUB>> ]
+"6703" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1493</SUB>> ]
+"6709" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1493</SUB>> ]
+"6712" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1493</SUB>> ]
+"6720" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1493</SUB>> ]
+"6657" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1493</SUB>> ]
+"6661" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1493</SUB>> ]
+"6668" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1493</SUB>> ]
+"6678" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1493</SUB>> ]
+"6680" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1493</SUB>> ]
+"6705" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1493</SUB>> ]
+"6711" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1493</SUB>> ]
+"6714" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1493</SUB>> ]
+"6662" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1493</SUB>> ]
+"6663" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1493</SUB>> ]
+"6665" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1493</SUB>> ]
+"6647" [label = <(METHOD,GetBooleanField)<SUB>1492</SUB>> ]
+"6722" [label = <(METHOD_RETURN,jboolean)<SUB>1492</SUB>> ]
   "6652" -> "6657" 
   "6652" -> "6672" 
   "6686" -> "6694" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/126-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/126-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/126-cfg.dot	2023-06-07 19:34:35.127389618 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/126-cfg.dot	2023-06-07 19:34:41.647389016 +0330
@@ -1,42 +1,42 @@
 digraph "GetByteField" {  
-"6729" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1498</SUB>> ]
-"6763" [label = <(soa,ScopedObjectAccess)<SUB>1498</SUB>> ]
-"6766" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1498</SUB>> ]
-"6773" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1498</SUB>> ]
-"6776" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1498</SUB>> ]
-"6793" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj);,GET_PRIMITIVE_FIELD(Byte, obj);)<SUB>1498</SUB>> ]
-"6748" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1498</SUB>> ]
-"6768" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),jni::DecodeArtField(fid))<SUB>1498</SUB>> ]
-"6777" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1498</SUB>> ]
-"6784" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1498</SUB>> ]
-"6794" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),f-&gt;GetByte(o))<SUB>1498</SUB>> ]
-"6749" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1498</SUB>> ]
-"6753" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1498</SUB>> ]
-"6760" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1498</SUB>> ]
-"6769" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1498</SUB>> ]
-"6778" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1498</SUB>> ]
-"6785" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1498</SUB>> ]
-"6795" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1498</SUB>> ]
-"6733" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1498</SUB>> ]
-"6754" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1498</SUB>> ]
-"6771" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1498</SUB>> ]
-"6780" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1498</SUB>> ]
-"6786" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1498</SUB>> ]
-"6789" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1498</SUB>> ]
-"6797" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1498</SUB>> ]
-"6734" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1498</SUB>> ]
-"6738" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1498</SUB>> ]
-"6745" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1498</SUB>> ]
-"6755" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1498</SUB>> ]
-"6757" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1498</SUB>> ]
-"6782" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1498</SUB>> ]
-"6788" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1498</SUB>> ]
-"6791" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1498</SUB>> ]
-"6739" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1498</SUB>> ]
-"6740" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1498</SUB>> ]
-"6742" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1498</SUB>> ]
-"6724" [label = <(METHOD,GetByteField)<SUB>1497</SUB>> ]
-"6799" [label = <(METHOD_RETURN,jbyte)<SUB>1497</SUB>> ]
+"6729" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1497</SUB>> ]
+"6763" [label = <(soa,ScopedObjectAccess)<SUB>1497</SUB>> ]
+"6766" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1497</SUB>> ]
+"6773" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1497</SUB>> ]
+"6776" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1497</SUB>> ]
+"6793" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj);,GET_PRIMITIVE_FIELD(Byte, obj);)<SUB>1497</SUB>> ]
+"6748" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1497</SUB>> ]
+"6768" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),jni::DecodeArtField(fid))<SUB>1497</SUB>> ]
+"6777" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1497</SUB>> ]
+"6784" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1497</SUB>> ]
+"6794" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),f-&gt;GetByte(o))<SUB>1497</SUB>> ]
+"6749" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1497</SUB>> ]
+"6753" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1497</SUB>> ]
+"6760" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1497</SUB>> ]
+"6769" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1497</SUB>> ]
+"6778" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1497</SUB>> ]
+"6785" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1497</SUB>> ]
+"6795" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1497</SUB>> ]
+"6733" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1497</SUB>> ]
+"6754" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1497</SUB>> ]
+"6771" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1497</SUB>> ]
+"6780" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1497</SUB>> ]
+"6786" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1497</SUB>> ]
+"6789" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1497</SUB>> ]
+"6797" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1497</SUB>> ]
+"6734" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1497</SUB>> ]
+"6738" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1497</SUB>> ]
+"6745" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1497</SUB>> ]
+"6755" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1497</SUB>> ]
+"6757" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1497</SUB>> ]
+"6782" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1497</SUB>> ]
+"6788" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1497</SUB>> ]
+"6791" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1497</SUB>> ]
+"6739" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1497</SUB>> ]
+"6740" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1497</SUB>> ]
+"6742" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1497</SUB>> ]
+"6724" [label = <(METHOD,GetByteField)<SUB>1496</SUB>> ]
+"6799" [label = <(METHOD_RETURN,jbyte)<SUB>1496</SUB>> ]
   "6729" -> "6734" 
   "6729" -> "6749" 
   "6763" -> "6771" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/127-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/127-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/127-cfg.dot	2023-06-07 19:34:35.127389618 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/127-cfg.dot	2023-06-07 19:34:41.647389016 +0330
@@ -1,42 +1,42 @@
 digraph "GetCharField" {  
-"6806" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1502</SUB>> ]
-"6840" [label = <(soa,ScopedObjectAccess)<SUB>1502</SUB>> ]
-"6843" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1502</SUB>> ]
-"6850" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1502</SUB>> ]
-"6853" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1502</SUB>> ]
-"6870" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj);,GET_PRIMITIVE_FIELD(Char, obj);)<SUB>1502</SUB>> ]
-"6825" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1502</SUB>> ]
-"6845" [label = <(GET_PRIMITIVE_FIELD(Char, obj),jni::DecodeArtField(fid))<SUB>1502</SUB>> ]
-"6854" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1502</SUB>> ]
-"6861" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1502</SUB>> ]
-"6871" [label = <(GET_PRIMITIVE_FIELD(Char, obj),f-&gt;GetChar(o))<SUB>1502</SUB>> ]
-"6826" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1502</SUB>> ]
-"6830" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1502</SUB>> ]
-"6837" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1502</SUB>> ]
-"6846" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1502</SUB>> ]
-"6855" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1502</SUB>> ]
-"6862" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1502</SUB>> ]
-"6872" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1502</SUB>> ]
-"6810" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1502</SUB>> ]
-"6831" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1502</SUB>> ]
-"6848" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1502</SUB>> ]
-"6857" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1502</SUB>> ]
-"6863" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1502</SUB>> ]
-"6866" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1502</SUB>> ]
-"6874" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1502</SUB>> ]
-"6811" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1502</SUB>> ]
-"6815" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1502</SUB>> ]
-"6822" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1502</SUB>> ]
-"6832" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1502</SUB>> ]
-"6834" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1502</SUB>> ]
-"6859" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1502</SUB>> ]
-"6865" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1502</SUB>> ]
-"6868" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1502</SUB>> ]
-"6816" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1502</SUB>> ]
-"6817" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1502</SUB>> ]
-"6819" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1502</SUB>> ]
-"6801" [label = <(METHOD,GetCharField)<SUB>1501</SUB>> ]
-"6876" [label = <(METHOD_RETURN,jchar)<SUB>1501</SUB>> ]
+"6806" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1501</SUB>> ]
+"6840" [label = <(soa,ScopedObjectAccess)<SUB>1501</SUB>> ]
+"6843" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1501</SUB>> ]
+"6850" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1501</SUB>> ]
+"6853" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1501</SUB>> ]
+"6870" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj);,GET_PRIMITIVE_FIELD(Char, obj);)<SUB>1501</SUB>> ]
+"6825" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1501</SUB>> ]
+"6845" [label = <(GET_PRIMITIVE_FIELD(Char, obj),jni::DecodeArtField(fid))<SUB>1501</SUB>> ]
+"6854" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1501</SUB>> ]
+"6861" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1501</SUB>> ]
+"6871" [label = <(GET_PRIMITIVE_FIELD(Char, obj),f-&gt;GetChar(o))<SUB>1501</SUB>> ]
+"6826" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1501</SUB>> ]
+"6830" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1501</SUB>> ]
+"6837" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1501</SUB>> ]
+"6846" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1501</SUB>> ]
+"6855" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1501</SUB>> ]
+"6862" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1501</SUB>> ]
+"6872" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1501</SUB>> ]
+"6810" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1501</SUB>> ]
+"6831" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1501</SUB>> ]
+"6848" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1501</SUB>> ]
+"6857" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1501</SUB>> ]
+"6863" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1501</SUB>> ]
+"6866" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1501</SUB>> ]
+"6874" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1501</SUB>> ]
+"6811" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1501</SUB>> ]
+"6815" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1501</SUB>> ]
+"6822" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1501</SUB>> ]
+"6832" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1501</SUB>> ]
+"6834" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1501</SUB>> ]
+"6859" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1501</SUB>> ]
+"6865" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1501</SUB>> ]
+"6868" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1501</SUB>> ]
+"6816" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1501</SUB>> ]
+"6817" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1501</SUB>> ]
+"6819" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1501</SUB>> ]
+"6801" [label = <(METHOD,GetCharField)<SUB>1500</SUB>> ]
+"6876" [label = <(METHOD_RETURN,jchar)<SUB>1500</SUB>> ]
   "6806" -> "6811" 
   "6806" -> "6826" 
   "6840" -> "6848" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/128-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/128-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/128-cfg.dot	2023-06-07 19:34:35.127389618 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/128-cfg.dot	2023-06-07 19:34:41.647389016 +0330
@@ -1,42 +1,42 @@
 digraph "GetShortField" {  
-"6883" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1506</SUB>> ]
-"6917" [label = <(soa,ScopedObjectAccess)<SUB>1506</SUB>> ]
-"6920" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1506</SUB>> ]
-"6927" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1506</SUB>> ]
-"6930" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1506</SUB>> ]
-"6947" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj);,GET_PRIMITIVE_FIELD(Short, obj);)<SUB>1506</SUB>> ]
-"6902" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1506</SUB>> ]
-"6922" [label = <(GET_PRIMITIVE_FIELD(Short, obj),jni::DecodeArtField(fid))<SUB>1506</SUB>> ]
-"6931" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1506</SUB>> ]
-"6938" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1506</SUB>> ]
-"6948" [label = <(GET_PRIMITIVE_FIELD(Short, obj),f-&gt;GetShort(o))<SUB>1506</SUB>> ]
-"6903" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1506</SUB>> ]
-"6907" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1506</SUB>> ]
-"6914" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1506</SUB>> ]
-"6923" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1506</SUB>> ]
-"6932" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1506</SUB>> ]
-"6939" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1506</SUB>> ]
-"6949" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1506</SUB>> ]
-"6887" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1506</SUB>> ]
-"6908" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1506</SUB>> ]
-"6925" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1506</SUB>> ]
-"6934" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1506</SUB>> ]
-"6940" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1506</SUB>> ]
-"6943" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1506</SUB>> ]
-"6951" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1506</SUB>> ]
-"6888" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1506</SUB>> ]
-"6892" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1506</SUB>> ]
-"6899" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1506</SUB>> ]
-"6909" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1506</SUB>> ]
-"6911" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1506</SUB>> ]
-"6936" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1506</SUB>> ]
-"6942" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1506</SUB>> ]
-"6945" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1506</SUB>> ]
-"6893" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1506</SUB>> ]
-"6894" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1506</SUB>> ]
-"6896" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1506</SUB>> ]
-"6878" [label = <(METHOD,GetShortField)<SUB>1505</SUB>> ]
-"6953" [label = <(METHOD_RETURN,jshort)<SUB>1505</SUB>> ]
+"6883" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1505</SUB>> ]
+"6917" [label = <(soa,ScopedObjectAccess)<SUB>1505</SUB>> ]
+"6920" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1505</SUB>> ]
+"6927" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1505</SUB>> ]
+"6930" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1505</SUB>> ]
+"6947" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj);,GET_PRIMITIVE_FIELD(Short, obj);)<SUB>1505</SUB>> ]
+"6902" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1505</SUB>> ]
+"6922" [label = <(GET_PRIMITIVE_FIELD(Short, obj),jni::DecodeArtField(fid))<SUB>1505</SUB>> ]
+"6931" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1505</SUB>> ]
+"6938" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1505</SUB>> ]
+"6948" [label = <(GET_PRIMITIVE_FIELD(Short, obj),f-&gt;GetShort(o))<SUB>1505</SUB>> ]
+"6903" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1505</SUB>> ]
+"6907" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1505</SUB>> ]
+"6914" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1505</SUB>> ]
+"6923" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1505</SUB>> ]
+"6932" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1505</SUB>> ]
+"6939" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1505</SUB>> ]
+"6949" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1505</SUB>> ]
+"6887" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1505</SUB>> ]
+"6908" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1505</SUB>> ]
+"6925" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1505</SUB>> ]
+"6934" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1505</SUB>> ]
+"6940" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1505</SUB>> ]
+"6943" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1505</SUB>> ]
+"6951" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1505</SUB>> ]
+"6888" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1505</SUB>> ]
+"6892" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1505</SUB>> ]
+"6899" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1505</SUB>> ]
+"6909" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1505</SUB>> ]
+"6911" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1505</SUB>> ]
+"6936" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1505</SUB>> ]
+"6942" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1505</SUB>> ]
+"6945" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1505</SUB>> ]
+"6893" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1505</SUB>> ]
+"6894" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1505</SUB>> ]
+"6896" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1505</SUB>> ]
+"6878" [label = <(METHOD,GetShortField)<SUB>1504</SUB>> ]
+"6953" [label = <(METHOD_RETURN,jshort)<SUB>1504</SUB>> ]
   "6883" -> "6888" 
   "6883" -> "6903" 
   "6917" -> "6925" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/129-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/129-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/129-cfg.dot	2023-06-07 19:34:35.127389618 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/129-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,42 +1,42 @@
 digraph "GetIntField" {  
-"6960" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1510</SUB>> ]
-"6994" [label = <(soa,ScopedObjectAccess)<SUB>1510</SUB>> ]
-"6997" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1510</SUB>> ]
-"7004" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1510</SUB>> ]
-"7007" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1510</SUB>> ]
-"7024" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj);,GET_PRIMITIVE_FIELD(Int, obj);)<SUB>1510</SUB>> ]
-"6979" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1510</SUB>> ]
-"6999" [label = <(GET_PRIMITIVE_FIELD(Int, obj),jni::DecodeArtField(fid))<SUB>1510</SUB>> ]
-"7008" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1510</SUB>> ]
-"7015" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1510</SUB>> ]
-"7025" [label = <(GET_PRIMITIVE_FIELD(Int, obj),f-&gt;GetInt(o))<SUB>1510</SUB>> ]
-"6980" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1510</SUB>> ]
-"6984" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1510</SUB>> ]
-"6991" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1510</SUB>> ]
-"7000" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1510</SUB>> ]
-"7009" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1510</SUB>> ]
-"7016" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1510</SUB>> ]
-"7026" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1510</SUB>> ]
-"6964" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1510</SUB>> ]
-"6985" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1510</SUB>> ]
-"7002" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1510</SUB>> ]
-"7011" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1510</SUB>> ]
-"7017" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1510</SUB>> ]
-"7020" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1510</SUB>> ]
-"7028" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1510</SUB>> ]
-"6965" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1510</SUB>> ]
-"6969" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1510</SUB>> ]
-"6976" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1510</SUB>> ]
-"6986" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1510</SUB>> ]
-"6988" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1510</SUB>> ]
-"7013" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1510</SUB>> ]
-"7019" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1510</SUB>> ]
-"7022" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1510</SUB>> ]
-"6970" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1510</SUB>> ]
-"6971" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1510</SUB>> ]
-"6973" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1510</SUB>> ]
-"6955" [label = <(METHOD,GetIntField)<SUB>1509</SUB>> ]
-"7030" [label = <(METHOD_RETURN,jint)<SUB>1509</SUB>> ]
+"6960" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1509</SUB>> ]
+"6994" [label = <(soa,ScopedObjectAccess)<SUB>1509</SUB>> ]
+"6997" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1509</SUB>> ]
+"7004" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1509</SUB>> ]
+"7007" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1509</SUB>> ]
+"7024" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj);,GET_PRIMITIVE_FIELD(Int, obj);)<SUB>1509</SUB>> ]
+"6979" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1509</SUB>> ]
+"6999" [label = <(GET_PRIMITIVE_FIELD(Int, obj),jni::DecodeArtField(fid))<SUB>1509</SUB>> ]
+"7008" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1509</SUB>> ]
+"7015" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1509</SUB>> ]
+"7025" [label = <(GET_PRIMITIVE_FIELD(Int, obj),f-&gt;GetInt(o))<SUB>1509</SUB>> ]
+"6980" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1509</SUB>> ]
+"6984" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1509</SUB>> ]
+"6991" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1509</SUB>> ]
+"7000" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1509</SUB>> ]
+"7009" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1509</SUB>> ]
+"7016" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1509</SUB>> ]
+"7026" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1509</SUB>> ]
+"6964" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1509</SUB>> ]
+"6985" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1509</SUB>> ]
+"7002" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1509</SUB>> ]
+"7011" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1509</SUB>> ]
+"7017" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1509</SUB>> ]
+"7020" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1509</SUB>> ]
+"7028" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1509</SUB>> ]
+"6965" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1509</SUB>> ]
+"6969" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1509</SUB>> ]
+"6976" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1509</SUB>> ]
+"6986" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1509</SUB>> ]
+"6988" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1509</SUB>> ]
+"7013" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1509</SUB>> ]
+"7019" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1509</SUB>> ]
+"7022" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1509</SUB>> ]
+"6970" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1509</SUB>> ]
+"6971" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1509</SUB>> ]
+"6973" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1509</SUB>> ]
+"6955" [label = <(METHOD,GetIntField)<SUB>1508</SUB>> ]
+"7030" [label = <(METHOD_RETURN,jint)<SUB>1508</SUB>> ]
   "6960" -> "6965" 
   "6960" -> "6980" 
   "6994" -> "7002" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/13-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/13-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/13-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/13-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowNoSuchMethodError" {  
-"350" [label = <(METHOD,ThrowNoSuchMethodError)<SUB>281</SUB>> ]
-"357" [label = <(METHOD_RETURN,void)<SUB>281</SUB>> ]
+"350" [label = <(METHOD,ThrowNoSuchMethodError)<SUB>280</SUB>> ]
+"357" [label = <(METHOD_RETURN,void)<SUB>280</SUB>> ]
   "350" -> "357" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/130-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/130-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/130-cfg.dot	2023-06-07 19:34:35.127389618 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/130-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,42 +1,42 @@
 digraph "GetLongField" {  
-"7037" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1514</SUB>> ]
-"7071" [label = <(soa,ScopedObjectAccess)<SUB>1514</SUB>> ]
-"7074" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1514</SUB>> ]
-"7081" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1514</SUB>> ]
-"7084" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1514</SUB>> ]
-"7101" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj);,GET_PRIMITIVE_FIELD(Long, obj);)<SUB>1514</SUB>> ]
-"7056" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1514</SUB>> ]
-"7076" [label = <(GET_PRIMITIVE_FIELD(Long, obj),jni::DecodeArtField(fid))<SUB>1514</SUB>> ]
-"7085" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1514</SUB>> ]
-"7092" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1514</SUB>> ]
-"7102" [label = <(GET_PRIMITIVE_FIELD(Long, obj),f-&gt;GetLong(o))<SUB>1514</SUB>> ]
-"7057" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1514</SUB>> ]
-"7061" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1514</SUB>> ]
-"7068" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1514</SUB>> ]
-"7077" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1514</SUB>> ]
-"7086" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1514</SUB>> ]
-"7093" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1514</SUB>> ]
-"7103" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1514</SUB>> ]
-"7041" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1514</SUB>> ]
-"7062" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1514</SUB>> ]
-"7079" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1514</SUB>> ]
-"7088" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1514</SUB>> ]
-"7094" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1514</SUB>> ]
-"7097" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1514</SUB>> ]
-"7105" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1514</SUB>> ]
-"7042" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1514</SUB>> ]
-"7046" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1514</SUB>> ]
-"7053" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1514</SUB>> ]
-"7063" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1514</SUB>> ]
-"7065" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1514</SUB>> ]
-"7090" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1514</SUB>> ]
-"7096" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1514</SUB>> ]
-"7099" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1514</SUB>> ]
-"7047" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1514</SUB>> ]
-"7048" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1514</SUB>> ]
-"7050" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1514</SUB>> ]
-"7032" [label = <(METHOD,GetLongField)<SUB>1513</SUB>> ]
-"7107" [label = <(METHOD_RETURN,jlong)<SUB>1513</SUB>> ]
+"7037" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1513</SUB>> ]
+"7071" [label = <(soa,ScopedObjectAccess)<SUB>1513</SUB>> ]
+"7074" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1513</SUB>> ]
+"7081" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1513</SUB>> ]
+"7084" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1513</SUB>> ]
+"7101" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj);,GET_PRIMITIVE_FIELD(Long, obj);)<SUB>1513</SUB>> ]
+"7056" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1513</SUB>> ]
+"7076" [label = <(GET_PRIMITIVE_FIELD(Long, obj),jni::DecodeArtField(fid))<SUB>1513</SUB>> ]
+"7085" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1513</SUB>> ]
+"7092" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1513</SUB>> ]
+"7102" [label = <(GET_PRIMITIVE_FIELD(Long, obj),f-&gt;GetLong(o))<SUB>1513</SUB>> ]
+"7057" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1513</SUB>> ]
+"7061" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1513</SUB>> ]
+"7068" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1513</SUB>> ]
+"7077" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1513</SUB>> ]
+"7086" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1513</SUB>> ]
+"7093" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1513</SUB>> ]
+"7103" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1513</SUB>> ]
+"7041" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1513</SUB>> ]
+"7062" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1513</SUB>> ]
+"7079" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1513</SUB>> ]
+"7088" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1513</SUB>> ]
+"7094" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1513</SUB>> ]
+"7097" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1513</SUB>> ]
+"7105" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1513</SUB>> ]
+"7042" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1513</SUB>> ]
+"7046" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1513</SUB>> ]
+"7053" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1513</SUB>> ]
+"7063" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1513</SUB>> ]
+"7065" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1513</SUB>> ]
+"7090" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1513</SUB>> ]
+"7096" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1513</SUB>> ]
+"7099" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1513</SUB>> ]
+"7047" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1513</SUB>> ]
+"7048" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1513</SUB>> ]
+"7050" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1513</SUB>> ]
+"7032" [label = <(METHOD,GetLongField)<SUB>1512</SUB>> ]
+"7107" [label = <(METHOD_RETURN,jlong)<SUB>1512</SUB>> ]
   "7037" -> "7042" 
   "7037" -> "7057" 
   "7071" -> "7079" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/131-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/131-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/131-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/131-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,42 +1,42 @@
 digraph "GetFloatField" {  
-"7114" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1518</SUB>> ]
-"7148" [label = <(soa,ScopedObjectAccess)<SUB>1518</SUB>> ]
-"7151" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1518</SUB>> ]
-"7158" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1518</SUB>> ]
-"7161" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1518</SUB>> ]
-"7178" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj);,GET_PRIMITIVE_FIELD(Float, obj);)<SUB>1518</SUB>> ]
-"7133" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1518</SUB>> ]
-"7153" [label = <(GET_PRIMITIVE_FIELD(Float, obj),jni::DecodeArtField(fid))<SUB>1518</SUB>> ]
-"7162" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1518</SUB>> ]
-"7169" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1518</SUB>> ]
-"7179" [label = <(GET_PRIMITIVE_FIELD(Float, obj),f-&gt;GetFloat(o))<SUB>1518</SUB>> ]
-"7134" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1518</SUB>> ]
-"7138" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1518</SUB>> ]
-"7145" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1518</SUB>> ]
-"7154" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1518</SUB>> ]
-"7163" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1518</SUB>> ]
-"7170" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1518</SUB>> ]
-"7180" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1518</SUB>> ]
-"7118" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1518</SUB>> ]
-"7139" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1518</SUB>> ]
-"7156" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1518</SUB>> ]
-"7165" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1518</SUB>> ]
-"7171" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1518</SUB>> ]
-"7174" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1518</SUB>> ]
-"7182" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1518</SUB>> ]
-"7119" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1518</SUB>> ]
-"7123" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1518</SUB>> ]
-"7130" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1518</SUB>> ]
-"7140" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1518</SUB>> ]
-"7142" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1518</SUB>> ]
-"7167" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1518</SUB>> ]
-"7173" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1518</SUB>> ]
-"7176" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1518</SUB>> ]
-"7124" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1518</SUB>> ]
-"7125" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1518</SUB>> ]
-"7127" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1518</SUB>> ]
-"7109" [label = <(METHOD,GetFloatField)<SUB>1517</SUB>> ]
-"7184" [label = <(METHOD_RETURN,jfloat)<SUB>1517</SUB>> ]
+"7114" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1517</SUB>> ]
+"7148" [label = <(soa,ScopedObjectAccess)<SUB>1517</SUB>> ]
+"7151" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1517</SUB>> ]
+"7158" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1517</SUB>> ]
+"7161" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1517</SUB>> ]
+"7178" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj);,GET_PRIMITIVE_FIELD(Float, obj);)<SUB>1517</SUB>> ]
+"7133" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1517</SUB>> ]
+"7153" [label = <(GET_PRIMITIVE_FIELD(Float, obj),jni::DecodeArtField(fid))<SUB>1517</SUB>> ]
+"7162" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1517</SUB>> ]
+"7169" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1517</SUB>> ]
+"7179" [label = <(GET_PRIMITIVE_FIELD(Float, obj),f-&gt;GetFloat(o))<SUB>1517</SUB>> ]
+"7134" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1517</SUB>> ]
+"7138" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1517</SUB>> ]
+"7145" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1517</SUB>> ]
+"7154" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1517</SUB>> ]
+"7163" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1517</SUB>> ]
+"7170" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1517</SUB>> ]
+"7180" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1517</SUB>> ]
+"7118" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1517</SUB>> ]
+"7139" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1517</SUB>> ]
+"7156" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1517</SUB>> ]
+"7165" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1517</SUB>> ]
+"7171" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1517</SUB>> ]
+"7174" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1517</SUB>> ]
+"7182" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1517</SUB>> ]
+"7119" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1517</SUB>> ]
+"7123" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1517</SUB>> ]
+"7130" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1517</SUB>> ]
+"7140" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1517</SUB>> ]
+"7142" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1517</SUB>> ]
+"7167" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1517</SUB>> ]
+"7173" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1517</SUB>> ]
+"7176" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1517</SUB>> ]
+"7124" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1517</SUB>> ]
+"7125" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1517</SUB>> ]
+"7127" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1517</SUB>> ]
+"7109" [label = <(METHOD,GetFloatField)<SUB>1516</SUB>> ]
+"7184" [label = <(METHOD_RETURN,jfloat)<SUB>1516</SUB>> ]
   "7114" -> "7119" 
   "7114" -> "7134" 
   "7148" -> "7156" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/132-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/132-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/132-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/132-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,42 +1,42 @@
 digraph "GetDoubleField" {  
-"7191" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1522</SUB>> ]
-"7225" [label = <(soa,ScopedObjectAccess)<SUB>1522</SUB>> ]
-"7228" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1522</SUB>> ]
-"7235" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1522</SUB>> ]
-"7238" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1522</SUB>> ]
-"7255" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj);,GET_PRIMITIVE_FIELD(Double, obj);)<SUB>1522</SUB>> ]
-"7210" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1522</SUB>> ]
-"7230" [label = <(GET_PRIMITIVE_FIELD(Double, obj),jni::DecodeArtField(fid))<SUB>1522</SUB>> ]
-"7239" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1522</SUB>> ]
-"7246" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1522</SUB>> ]
-"7256" [label = <(GET_PRIMITIVE_FIELD(Double, obj),f-&gt;GetDouble(o))<SUB>1522</SUB>> ]
-"7211" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1522</SUB>> ]
-"7215" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1522</SUB>> ]
-"7222" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1522</SUB>> ]
-"7231" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1522</SUB>> ]
-"7240" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1522</SUB>> ]
-"7247" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1522</SUB>> ]
-"7257" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1522</SUB>> ]
-"7195" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1522</SUB>> ]
-"7216" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1522</SUB>> ]
-"7233" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1522</SUB>> ]
-"7242" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1522</SUB>> ]
-"7248" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1522</SUB>> ]
-"7251" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1522</SUB>> ]
-"7259" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1522</SUB>> ]
-"7196" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1522</SUB>> ]
-"7200" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1522</SUB>> ]
-"7207" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1522</SUB>> ]
-"7217" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1522</SUB>> ]
-"7219" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1522</SUB>> ]
-"7244" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1522</SUB>> ]
-"7250" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1522</SUB>> ]
-"7253" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1522</SUB>> ]
-"7201" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1522</SUB>> ]
-"7202" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1522</SUB>> ]
-"7204" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1522</SUB>> ]
-"7186" [label = <(METHOD,GetDoubleField)<SUB>1521</SUB>> ]
-"7261" [label = <(METHOD_RETURN,jdouble)<SUB>1521</SUB>> ]
+"7191" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1521</SUB>> ]
+"7225" [label = <(soa,ScopedObjectAccess)<SUB>1521</SUB>> ]
+"7228" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1521</SUB>> ]
+"7235" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1521</SUB>> ]
+"7238" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1521</SUB>> ]
+"7255" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj);,GET_PRIMITIVE_FIELD(Double, obj);)<SUB>1521</SUB>> ]
+"7210" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1521</SUB>> ]
+"7230" [label = <(GET_PRIMITIVE_FIELD(Double, obj),jni::DecodeArtField(fid))<SUB>1521</SUB>> ]
+"7239" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1521</SUB>> ]
+"7246" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1521</SUB>> ]
+"7256" [label = <(GET_PRIMITIVE_FIELD(Double, obj),f-&gt;GetDouble(o))<SUB>1521</SUB>> ]
+"7211" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1521</SUB>> ]
+"7215" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1521</SUB>> ]
+"7222" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1521</SUB>> ]
+"7231" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1521</SUB>> ]
+"7240" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1521</SUB>> ]
+"7247" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1521</SUB>> ]
+"7257" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1521</SUB>> ]
+"7195" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1521</SUB>> ]
+"7216" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1521</SUB>> ]
+"7233" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1521</SUB>> ]
+"7242" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1521</SUB>> ]
+"7248" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1521</SUB>> ]
+"7251" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1521</SUB>> ]
+"7259" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1521</SUB>> ]
+"7196" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1521</SUB>> ]
+"7200" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1521</SUB>> ]
+"7207" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1521</SUB>> ]
+"7217" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1521</SUB>> ]
+"7219" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1521</SUB>> ]
+"7244" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1521</SUB>> ]
+"7250" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1521</SUB>> ]
+"7253" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1521</SUB>> ]
+"7201" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1521</SUB>> ]
+"7202" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1521</SUB>> ]
+"7204" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1521</SUB>> ]
+"7186" [label = <(METHOD,GetDoubleField)<SUB>1520</SUB>> ]
+"7261" [label = <(METHOD_RETURN,jdouble)<SUB>1520</SUB>> ]
   "7191" -> "7196" 
   "7191" -> "7211" 
   "7225" -> "7233" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/133-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/133-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/133-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/133-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticBooleanField" {  
-"7268" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1526</SUB>> ]
-"7286" [label = <(soa,ScopedObjectAccess)<SUB>1526</SUB>> ]
-"7289" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1526</SUB>> ]
-"7296" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1526</SUB>> ]
-"7299" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean);,GET_STATIC_PRIMITIVE_FIELD(Boolean);)<SUB>1526</SUB>> ]
-"7291" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),jni::DecodeArtField(fid))<SUB>1526</SUB>> ]
-"7300" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetBoolean(f-&gt;GetDeclaringClass()))<SUB>1526</SUB>> ]
-"7292" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1526</SUB>> ]
-"7301" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1526</SUB>> ]
-"7304" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetDeclaringClass())<SUB>1526</SUB>> ]
-"7271" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1526</SUB>> ]
-"7294" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1526</SUB>> ]
-"7303" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1526</SUB>> ]
-"7305" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1526</SUB>> ]
-"7272" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1526</SUB>> ]
-"7276" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1526</SUB>> ]
-"7283" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean),GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1526</SUB>> ]
-"7307" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1526</SUB>> ]
-"7277" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1526</SUB>> ]
-"7278" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1526</SUB>> ]
-"7280" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1526</SUB>> ]
-"7263" [label = <(METHOD,GetStaticBooleanField)<SUB>1525</SUB>> ]
-"7308" [label = <(METHOD_RETURN,jboolean)<SUB>1525</SUB>> ]
+"7268" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1525</SUB>> ]
+"7286" [label = <(soa,ScopedObjectAccess)<SUB>1525</SUB>> ]
+"7289" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1525</SUB>> ]
+"7296" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1525</SUB>> ]
+"7299" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean);,GET_STATIC_PRIMITIVE_FIELD(Boolean);)<SUB>1525</SUB>> ]
+"7291" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),jni::DecodeArtField(fid))<SUB>1525</SUB>> ]
+"7300" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetBoolean(f-&gt;GetDeclaringClass()))<SUB>1525</SUB>> ]
+"7292" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1525</SUB>> ]
+"7301" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1525</SUB>> ]
+"7304" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetDeclaringClass())<SUB>1525</SUB>> ]
+"7271" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1525</SUB>> ]
+"7294" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1525</SUB>> ]
+"7303" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1525</SUB>> ]
+"7305" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1525</SUB>> ]
+"7272" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1525</SUB>> ]
+"7276" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1525</SUB>> ]
+"7283" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean),GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1525</SUB>> ]
+"7307" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1525</SUB>> ]
+"7277" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1525</SUB>> ]
+"7278" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1525</SUB>> ]
+"7280" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1525</SUB>> ]
+"7263" [label = <(METHOD,GetStaticBooleanField)<SUB>1524</SUB>> ]
+"7308" [label = <(METHOD_RETURN,jboolean)<SUB>1524</SUB>> ]
   "7268" -> "7272" 
   "7268" -> "7286" 
   "7286" -> "7294" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/134-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/134-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/134-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/134-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticByteField" {  
-"7315" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1530</SUB>> ]
-"7333" [label = <(soa,ScopedObjectAccess)<SUB>1530</SUB>> ]
-"7336" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1530</SUB>> ]
-"7343" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1530</SUB>> ]
-"7346" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte);,GET_STATIC_PRIMITIVE_FIELD(Byte);)<SUB>1530</SUB>> ]
-"7338" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),jni::DecodeArtField(fid))<SUB>1530</SUB>> ]
-"7347" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetByte(f-&gt;GetDeclaringClass()))<SUB>1530</SUB>> ]
-"7339" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1530</SUB>> ]
-"7348" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1530</SUB>> ]
-"7351" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetDeclaringClass())<SUB>1530</SUB>> ]
-"7318" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1530</SUB>> ]
-"7341" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1530</SUB>> ]
-"7350" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1530</SUB>> ]
-"7352" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1530</SUB>> ]
-"7319" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1530</SUB>> ]
-"7323" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1530</SUB>> ]
-"7330" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte),GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1530</SUB>> ]
-"7354" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1530</SUB>> ]
-"7324" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1530</SUB>> ]
-"7325" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1530</SUB>> ]
-"7327" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1530</SUB>> ]
-"7310" [label = <(METHOD,GetStaticByteField)<SUB>1529</SUB>> ]
-"7355" [label = <(METHOD_RETURN,jbyte)<SUB>1529</SUB>> ]
+"7315" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1529</SUB>> ]
+"7333" [label = <(soa,ScopedObjectAccess)<SUB>1529</SUB>> ]
+"7336" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1529</SUB>> ]
+"7343" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1529</SUB>> ]
+"7346" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte);,GET_STATIC_PRIMITIVE_FIELD(Byte);)<SUB>1529</SUB>> ]
+"7338" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),jni::DecodeArtField(fid))<SUB>1529</SUB>> ]
+"7347" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetByte(f-&gt;GetDeclaringClass()))<SUB>1529</SUB>> ]
+"7339" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1529</SUB>> ]
+"7348" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1529</SUB>> ]
+"7351" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetDeclaringClass())<SUB>1529</SUB>> ]
+"7318" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1529</SUB>> ]
+"7341" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1529</SUB>> ]
+"7350" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1529</SUB>> ]
+"7352" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1529</SUB>> ]
+"7319" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1529</SUB>> ]
+"7323" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1529</SUB>> ]
+"7330" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte),GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1529</SUB>> ]
+"7354" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1529</SUB>> ]
+"7324" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1529</SUB>> ]
+"7325" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1529</SUB>> ]
+"7327" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1529</SUB>> ]
+"7310" [label = <(METHOD,GetStaticByteField)<SUB>1528</SUB>> ]
+"7355" [label = <(METHOD_RETURN,jbyte)<SUB>1528</SUB>> ]
   "7315" -> "7319" 
   "7315" -> "7333" 
   "7333" -> "7341" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/135-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/135-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/135-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/135-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticCharField" {  
-"7362" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1534</SUB>> ]
-"7380" [label = <(soa,ScopedObjectAccess)<SUB>1534</SUB>> ]
-"7383" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1534</SUB>> ]
-"7390" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1534</SUB>> ]
-"7393" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char);,GET_STATIC_PRIMITIVE_FIELD(Char);)<SUB>1534</SUB>> ]
-"7385" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),jni::DecodeArtField(fid))<SUB>1534</SUB>> ]
-"7394" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetChar(f-&gt;GetDeclaringClass()))<SUB>1534</SUB>> ]
-"7386" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1534</SUB>> ]
-"7395" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1534</SUB>> ]
-"7398" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetDeclaringClass())<SUB>1534</SUB>> ]
-"7365" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1534</SUB>> ]
-"7388" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1534</SUB>> ]
-"7397" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1534</SUB>> ]
-"7399" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1534</SUB>> ]
-"7366" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1534</SUB>> ]
-"7370" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1534</SUB>> ]
-"7377" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char),GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1534</SUB>> ]
-"7401" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1534</SUB>> ]
-"7371" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1534</SUB>> ]
-"7372" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1534</SUB>> ]
-"7374" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1534</SUB>> ]
-"7357" [label = <(METHOD,GetStaticCharField)<SUB>1533</SUB>> ]
-"7402" [label = <(METHOD_RETURN,jchar)<SUB>1533</SUB>> ]
+"7362" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1533</SUB>> ]
+"7380" [label = <(soa,ScopedObjectAccess)<SUB>1533</SUB>> ]
+"7383" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1533</SUB>> ]
+"7390" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1533</SUB>> ]
+"7393" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char);,GET_STATIC_PRIMITIVE_FIELD(Char);)<SUB>1533</SUB>> ]
+"7385" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),jni::DecodeArtField(fid))<SUB>1533</SUB>> ]
+"7394" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetChar(f-&gt;GetDeclaringClass()))<SUB>1533</SUB>> ]
+"7386" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1533</SUB>> ]
+"7395" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1533</SUB>> ]
+"7398" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetDeclaringClass())<SUB>1533</SUB>> ]
+"7365" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1533</SUB>> ]
+"7388" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1533</SUB>> ]
+"7397" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1533</SUB>> ]
+"7399" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1533</SUB>> ]
+"7366" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1533</SUB>> ]
+"7370" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1533</SUB>> ]
+"7377" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char),GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1533</SUB>> ]
+"7401" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1533</SUB>> ]
+"7371" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1533</SUB>> ]
+"7372" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1533</SUB>> ]
+"7374" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1533</SUB>> ]
+"7357" [label = <(METHOD,GetStaticCharField)<SUB>1532</SUB>> ]
+"7402" [label = <(METHOD_RETURN,jchar)<SUB>1532</SUB>> ]
   "7362" -> "7366" 
   "7362" -> "7380" 
   "7380" -> "7388" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/136-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/136-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/136-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/136-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticShortField" {  
-"7409" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1538</SUB>> ]
-"7427" [label = <(soa,ScopedObjectAccess)<SUB>1538</SUB>> ]
-"7430" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1538</SUB>> ]
-"7437" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1538</SUB>> ]
-"7440" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short);,GET_STATIC_PRIMITIVE_FIELD(Short);)<SUB>1538</SUB>> ]
-"7432" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),jni::DecodeArtField(fid))<SUB>1538</SUB>> ]
-"7441" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetShort(f-&gt;GetDeclaringClass()))<SUB>1538</SUB>> ]
-"7433" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1538</SUB>> ]
-"7442" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1538</SUB>> ]
-"7445" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetDeclaringClass())<SUB>1538</SUB>> ]
-"7412" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1538</SUB>> ]
-"7435" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1538</SUB>> ]
-"7444" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1538</SUB>> ]
-"7446" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1538</SUB>> ]
-"7413" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1538</SUB>> ]
-"7417" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1538</SUB>> ]
-"7424" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short),GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1538</SUB>> ]
-"7448" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1538</SUB>> ]
-"7418" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1538</SUB>> ]
-"7419" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1538</SUB>> ]
-"7421" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1538</SUB>> ]
-"7404" [label = <(METHOD,GetStaticShortField)<SUB>1537</SUB>> ]
-"7449" [label = <(METHOD_RETURN,jshort)<SUB>1537</SUB>> ]
+"7409" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1537</SUB>> ]
+"7427" [label = <(soa,ScopedObjectAccess)<SUB>1537</SUB>> ]
+"7430" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1537</SUB>> ]
+"7437" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1537</SUB>> ]
+"7440" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short);,GET_STATIC_PRIMITIVE_FIELD(Short);)<SUB>1537</SUB>> ]
+"7432" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),jni::DecodeArtField(fid))<SUB>1537</SUB>> ]
+"7441" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetShort(f-&gt;GetDeclaringClass()))<SUB>1537</SUB>> ]
+"7433" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1537</SUB>> ]
+"7442" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1537</SUB>> ]
+"7445" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetDeclaringClass())<SUB>1537</SUB>> ]
+"7412" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1537</SUB>> ]
+"7435" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1537</SUB>> ]
+"7444" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1537</SUB>> ]
+"7446" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1537</SUB>> ]
+"7413" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1537</SUB>> ]
+"7417" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1537</SUB>> ]
+"7424" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short),GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1537</SUB>> ]
+"7448" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1537</SUB>> ]
+"7418" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1537</SUB>> ]
+"7419" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1537</SUB>> ]
+"7421" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1537</SUB>> ]
+"7404" [label = <(METHOD,GetStaticShortField)<SUB>1536</SUB>> ]
+"7449" [label = <(METHOD_RETURN,jshort)<SUB>1536</SUB>> ]
   "7409" -> "7413" 
   "7409" -> "7427" 
   "7427" -> "7435" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/137-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/137-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/137-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/137-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticIntField" {  
-"7456" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1542</SUB>> ]
-"7474" [label = <(soa,ScopedObjectAccess)<SUB>1542</SUB>> ]
-"7477" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1542</SUB>> ]
-"7484" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1542</SUB>> ]
-"7487" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int);,GET_STATIC_PRIMITIVE_FIELD(Int);)<SUB>1542</SUB>> ]
-"7479" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),jni::DecodeArtField(fid))<SUB>1542</SUB>> ]
-"7488" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetInt(f-&gt;GetDeclaringClass()))<SUB>1542</SUB>> ]
-"7480" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1542</SUB>> ]
-"7489" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1542</SUB>> ]
-"7492" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetDeclaringClass())<SUB>1542</SUB>> ]
-"7459" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1542</SUB>> ]
-"7482" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1542</SUB>> ]
-"7491" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1542</SUB>> ]
-"7493" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1542</SUB>> ]
-"7460" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1542</SUB>> ]
-"7464" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1542</SUB>> ]
-"7471" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int),GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1542</SUB>> ]
-"7495" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1542</SUB>> ]
-"7465" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1542</SUB>> ]
-"7466" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1542</SUB>> ]
-"7468" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1542</SUB>> ]
-"7451" [label = <(METHOD,GetStaticIntField)<SUB>1541</SUB>> ]
-"7496" [label = <(METHOD_RETURN,jint)<SUB>1541</SUB>> ]
+"7456" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1541</SUB>> ]
+"7474" [label = <(soa,ScopedObjectAccess)<SUB>1541</SUB>> ]
+"7477" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1541</SUB>> ]
+"7484" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1541</SUB>> ]
+"7487" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int);,GET_STATIC_PRIMITIVE_FIELD(Int);)<SUB>1541</SUB>> ]
+"7479" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),jni::DecodeArtField(fid))<SUB>1541</SUB>> ]
+"7488" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetInt(f-&gt;GetDeclaringClass()))<SUB>1541</SUB>> ]
+"7480" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1541</SUB>> ]
+"7489" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1541</SUB>> ]
+"7492" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetDeclaringClass())<SUB>1541</SUB>> ]
+"7459" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1541</SUB>> ]
+"7482" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1541</SUB>> ]
+"7491" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1541</SUB>> ]
+"7493" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1541</SUB>> ]
+"7460" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1541</SUB>> ]
+"7464" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1541</SUB>> ]
+"7471" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int),GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1541</SUB>> ]
+"7495" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1541</SUB>> ]
+"7465" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1541</SUB>> ]
+"7466" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1541</SUB>> ]
+"7468" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1541</SUB>> ]
+"7451" [label = <(METHOD,GetStaticIntField)<SUB>1540</SUB>> ]
+"7496" [label = <(METHOD_RETURN,jint)<SUB>1540</SUB>> ]
   "7456" -> "7460" 
   "7456" -> "7474" 
   "7474" -> "7482" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/138-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/138-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/138-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/138-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticLongField" {  
-"7503" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1546</SUB>> ]
-"7521" [label = <(soa,ScopedObjectAccess)<SUB>1546</SUB>> ]
-"7524" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1546</SUB>> ]
-"7531" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1546</SUB>> ]
-"7534" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long);,GET_STATIC_PRIMITIVE_FIELD(Long);)<SUB>1546</SUB>> ]
-"7526" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),jni::DecodeArtField(fid))<SUB>1546</SUB>> ]
-"7535" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetLong(f-&gt;GetDeclaringClass()))<SUB>1546</SUB>> ]
-"7527" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1546</SUB>> ]
-"7536" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1546</SUB>> ]
-"7539" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetDeclaringClass())<SUB>1546</SUB>> ]
-"7506" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1546</SUB>> ]
-"7529" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1546</SUB>> ]
-"7538" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1546</SUB>> ]
-"7540" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1546</SUB>> ]
-"7507" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1546</SUB>> ]
-"7511" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1546</SUB>> ]
-"7518" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long),GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1546</SUB>> ]
-"7542" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1546</SUB>> ]
-"7512" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1546</SUB>> ]
-"7513" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1546</SUB>> ]
-"7515" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1546</SUB>> ]
-"7498" [label = <(METHOD,GetStaticLongField)<SUB>1545</SUB>> ]
-"7543" [label = <(METHOD_RETURN,jlong)<SUB>1545</SUB>> ]
+"7503" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1545</SUB>> ]
+"7521" [label = <(soa,ScopedObjectAccess)<SUB>1545</SUB>> ]
+"7524" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1545</SUB>> ]
+"7531" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1545</SUB>> ]
+"7534" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long);,GET_STATIC_PRIMITIVE_FIELD(Long);)<SUB>1545</SUB>> ]
+"7526" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),jni::DecodeArtField(fid))<SUB>1545</SUB>> ]
+"7535" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetLong(f-&gt;GetDeclaringClass()))<SUB>1545</SUB>> ]
+"7527" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1545</SUB>> ]
+"7536" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1545</SUB>> ]
+"7539" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetDeclaringClass())<SUB>1545</SUB>> ]
+"7506" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1545</SUB>> ]
+"7529" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1545</SUB>> ]
+"7538" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1545</SUB>> ]
+"7540" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1545</SUB>> ]
+"7507" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1545</SUB>> ]
+"7511" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1545</SUB>> ]
+"7518" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long),GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1545</SUB>> ]
+"7542" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1545</SUB>> ]
+"7512" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1545</SUB>> ]
+"7513" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1545</SUB>> ]
+"7515" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1545</SUB>> ]
+"7498" [label = <(METHOD,GetStaticLongField)<SUB>1544</SUB>> ]
+"7543" [label = <(METHOD_RETURN,jlong)<SUB>1544</SUB>> ]
   "7503" -> "7507" 
   "7503" -> "7521" 
   "7521" -> "7529" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/139-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/139-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/139-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/139-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticFloatField" {  
-"7550" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1550</SUB>> ]
-"7568" [label = <(soa,ScopedObjectAccess)<SUB>1550</SUB>> ]
-"7571" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1550</SUB>> ]
-"7578" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1550</SUB>> ]
-"7581" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float);,GET_STATIC_PRIMITIVE_FIELD(Float);)<SUB>1550</SUB>> ]
-"7573" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),jni::DecodeArtField(fid))<SUB>1550</SUB>> ]
-"7582" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetFloat(f-&gt;GetDeclaringClass()))<SUB>1550</SUB>> ]
-"7574" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1550</SUB>> ]
-"7583" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1550</SUB>> ]
-"7586" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetDeclaringClass())<SUB>1550</SUB>> ]
-"7553" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1550</SUB>> ]
-"7576" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1550</SUB>> ]
-"7585" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1550</SUB>> ]
-"7587" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1550</SUB>> ]
-"7554" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1550</SUB>> ]
-"7558" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1550</SUB>> ]
-"7565" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float),GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1550</SUB>> ]
-"7589" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1550</SUB>> ]
-"7559" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1550</SUB>> ]
-"7560" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1550</SUB>> ]
-"7562" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1550</SUB>> ]
-"7545" [label = <(METHOD,GetStaticFloatField)<SUB>1549</SUB>> ]
-"7590" [label = <(METHOD_RETURN,jfloat)<SUB>1549</SUB>> ]
+"7550" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1549</SUB>> ]
+"7568" [label = <(soa,ScopedObjectAccess)<SUB>1549</SUB>> ]
+"7571" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1549</SUB>> ]
+"7578" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1549</SUB>> ]
+"7581" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float);,GET_STATIC_PRIMITIVE_FIELD(Float);)<SUB>1549</SUB>> ]
+"7573" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),jni::DecodeArtField(fid))<SUB>1549</SUB>> ]
+"7582" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetFloat(f-&gt;GetDeclaringClass()))<SUB>1549</SUB>> ]
+"7574" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1549</SUB>> ]
+"7583" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1549</SUB>> ]
+"7586" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetDeclaringClass())<SUB>1549</SUB>> ]
+"7553" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1549</SUB>> ]
+"7576" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1549</SUB>> ]
+"7585" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1549</SUB>> ]
+"7587" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1549</SUB>> ]
+"7554" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1549</SUB>> ]
+"7558" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1549</SUB>> ]
+"7565" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float),GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1549</SUB>> ]
+"7589" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1549</SUB>> ]
+"7559" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1549</SUB>> ]
+"7560" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1549</SUB>> ]
+"7562" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1549</SUB>> ]
+"7545" [label = <(METHOD,GetStaticFloatField)<SUB>1548</SUB>> ]
+"7590" [label = <(METHOD_RETURN,jfloat)<SUB>1548</SUB>> ]
   "7550" -> "7554" 
   "7550" -> "7568" 
   "7568" -> "7576" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/14-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/14-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/14-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/14-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "ReportInvalidJNINativeMethod" {  
-"363" [label = <(METHOD,ReportInvalidJNINativeMethod)<SUB>296</SUB>> ]
-"369" [label = <(METHOD_RETURN,void)<SUB>296</SUB>> ]
+"363" [label = <(METHOD,ReportInvalidJNINativeMethod)<SUB>295</SUB>> ]
+"369" [label = <(METHOD_RETURN,void)<SUB>295</SUB>> ]
   "363" -> "369" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/140-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/140-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/140-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/140-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticDoubleField" {  
-"7597" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1554</SUB>> ]
-"7615" [label = <(soa,ScopedObjectAccess)<SUB>1554</SUB>> ]
-"7618" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1554</SUB>> ]
-"7625" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1554</SUB>> ]
-"7628" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double);,GET_STATIC_PRIMITIVE_FIELD(Double);)<SUB>1554</SUB>> ]
-"7620" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),jni::DecodeArtField(fid))<SUB>1554</SUB>> ]
-"7629" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDouble(f-&gt;GetDeclaringClass()))<SUB>1554</SUB>> ]
-"7621" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1554</SUB>> ]
-"7630" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1554</SUB>> ]
-"7633" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDeclaringClass())<SUB>1554</SUB>> ]
-"7600" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1554</SUB>> ]
-"7623" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1554</SUB>> ]
-"7632" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1554</SUB>> ]
-"7634" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1554</SUB>> ]
-"7601" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1554</SUB>> ]
-"7605" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1554</SUB>> ]
-"7612" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double),GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1554</SUB>> ]
-"7636" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1554</SUB>> ]
-"7606" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1554</SUB>> ]
-"7607" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1554</SUB>> ]
-"7609" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1554</SUB>> ]
-"7592" [label = <(METHOD,GetStaticDoubleField)<SUB>1553</SUB>> ]
-"7637" [label = <(METHOD_RETURN,jdouble)<SUB>1553</SUB>> ]
+"7597" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1553</SUB>> ]
+"7615" [label = <(soa,ScopedObjectAccess)<SUB>1553</SUB>> ]
+"7618" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1553</SUB>> ]
+"7625" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1553</SUB>> ]
+"7628" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double);,GET_STATIC_PRIMITIVE_FIELD(Double);)<SUB>1553</SUB>> ]
+"7620" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),jni::DecodeArtField(fid))<SUB>1553</SUB>> ]
+"7629" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDouble(f-&gt;GetDeclaringClass()))<SUB>1553</SUB>> ]
+"7621" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1553</SUB>> ]
+"7630" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1553</SUB>> ]
+"7633" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDeclaringClass())<SUB>1553</SUB>> ]
+"7600" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1553</SUB>> ]
+"7623" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1553</SUB>> ]
+"7632" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1553</SUB>> ]
+"7634" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1553</SUB>> ]
+"7601" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1553</SUB>> ]
+"7605" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1553</SUB>> ]
+"7612" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double),GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1553</SUB>> ]
+"7636" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1553</SUB>> ]
+"7606" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1553</SUB>> ]
+"7607" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1553</SUB>> ]
+"7609" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1553</SUB>> ]
+"7592" [label = <(METHOD,GetStaticDoubleField)<SUB>1552</SUB>> ]
+"7637" [label = <(METHOD_RETURN,jdouble)<SUB>1552</SUB>> ]
   "7597" -> "7601" 
   "7597" -> "7615" 
   "7615" -> "7623" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/141-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/141-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/141-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/141-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,47 +1,47 @@
 digraph "SetBooleanField" {  
-"7645" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1558</SUB>> ]
-"7677" [label = <(soa,ScopedObjectAccess)<SUB>1558</SUB>> ]
-"7680" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1558</SUB>> ]
-"7687" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v)))<SUB>1558</SUB>> ]
-"7695" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1558</SUB>> ]
-"7712" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (o, v))<SUB>1558</SUB>> ]
-"7663" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1558</SUB>> ]
-"7682" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),jni::DecodeArtField(fid))<SUB>1558</SUB>> ]
-"7690" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v))<SUB>1558</SUB>> ]
-"7696" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1558</SUB>> ]
-"7703" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1558</SUB>> ]
-"7713" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1558</SUB>> ]
-"7718" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1558</SUB>> ]
-"7664" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1558</SUB>> ]
-"7668" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1558</SUB>> ]
-"7675" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1558</SUB>> ]
-"7683" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1558</SUB>> ]
-"7691" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1558</SUB>> ]
-"7697" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1558</SUB>> ]
-"7704" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1558</SUB>> ]
-"7714" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1558</SUB>> ]
-"7719" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1558</SUB>> ]
-"7649" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1558</SUB>> ]
-"7669" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1558</SUB>> ]
-"7685" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1558</SUB>> ]
-"7693" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;)<SUB>1558</SUB>> ]
-"7699" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1558</SUB>> ]
-"7705" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1558</SUB>> ]
-"7708" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1558</SUB>> ]
-"7716" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1558</SUB>> ]
-"7650" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1558</SUB>> ]
-"7654" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1558</SUB>> ]
-"7661" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1558</SUB>> ]
-"7670" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1558</SUB>> ]
-"7672" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1558</SUB>> ]
-"7701" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1558</SUB>> ]
-"7707" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1558</SUB>> ]
-"7710" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1558</SUB>> ]
-"7655" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1558</SUB>> ]
-"7656" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1558</SUB>> ]
-"7658" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1558</SUB>> ]
-"7639" [label = <(METHOD,SetBooleanField)<SUB>1557</SUB>> ]
-"7722" [label = <(METHOD_RETURN,void)<SUB>1557</SUB>> ]
+"7645" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1557</SUB>> ]
+"7677" [label = <(soa,ScopedObjectAccess)<SUB>1557</SUB>> ]
+"7680" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1557</SUB>> ]
+"7687" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v)))<SUB>1557</SUB>> ]
+"7695" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1557</SUB>> ]
+"7712" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (o, v))<SUB>1557</SUB>> ]
+"7663" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1557</SUB>> ]
+"7682" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),jni::DecodeArtField(fid))<SUB>1557</SUB>> ]
+"7690" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v))<SUB>1557</SUB>> ]
+"7696" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1557</SUB>> ]
+"7703" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1557</SUB>> ]
+"7713" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1557</SUB>> ]
+"7718" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1557</SUB>> ]
+"7664" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1557</SUB>> ]
+"7668" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1557</SUB>> ]
+"7675" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1557</SUB>> ]
+"7683" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1557</SUB>> ]
+"7691" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1557</SUB>> ]
+"7697" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1557</SUB>> ]
+"7704" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1557</SUB>> ]
+"7714" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1557</SUB>> ]
+"7719" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1557</SUB>> ]
+"7649" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1557</SUB>> ]
+"7669" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1557</SUB>> ]
+"7685" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1557</SUB>> ]
+"7693" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;)<SUB>1557</SUB>> ]
+"7699" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1557</SUB>> ]
+"7705" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1557</SUB>> ]
+"7708" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1557</SUB>> ]
+"7716" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1557</SUB>> ]
+"7650" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1557</SUB>> ]
+"7654" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1557</SUB>> ]
+"7661" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1557</SUB>> ]
+"7670" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1557</SUB>> ]
+"7672" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1557</SUB>> ]
+"7701" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1557</SUB>> ]
+"7707" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1557</SUB>> ]
+"7710" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1557</SUB>> ]
+"7655" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1557</SUB>> ]
+"7656" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1557</SUB>> ]
+"7658" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1557</SUB>> ]
+"7639" [label = <(METHOD,SetBooleanField)<SUB>1556</SUB>> ]
+"7722" [label = <(METHOD_RETURN,void)<SUB>1556</SUB>> ]
   "7645" -> "7650" 
   "7645" -> "7664" 
   "7677" -> "7685" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/142-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/142-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/142-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/142-cfg.dot	2023-06-07 19:34:41.657389013 +0330
@@ -1,47 +1,47 @@
 digraph "SetByteField" {  
-"7730" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1562</SUB>> ]
-"7762" [label = <(soa,ScopedObjectAccess)<SUB>1562</SUB>> ]
-"7765" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1562</SUB>> ]
-"7772" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v)))<SUB>1562</SUB>> ]
-"7780" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1562</SUB>> ]
-"7797" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (o, v))<SUB>1562</SUB>> ]
-"7748" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1562</SUB>> ]
-"7767" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),jni::DecodeArtField(fid))<SUB>1562</SUB>> ]
-"7775" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v))<SUB>1562</SUB>> ]
-"7781" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1562</SUB>> ]
-"7788" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1562</SUB>> ]
-"7798" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1562</SUB>> ]
-"7803" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1562</SUB>> ]
-"7749" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1562</SUB>> ]
-"7753" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1562</SUB>> ]
-"7760" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1562</SUB>> ]
-"7768" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1562</SUB>> ]
-"7776" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1562</SUB>> ]
-"7782" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1562</SUB>> ]
-"7789" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1562</SUB>> ]
-"7799" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1562</SUB>> ]
-"7804" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1562</SUB>> ]
-"7734" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1562</SUB>> ]
-"7754" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1562</SUB>> ]
-"7770" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1562</SUB>> ]
-"7778" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;)<SUB>1562</SUB>> ]
-"7784" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1562</SUB>> ]
-"7790" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1562</SUB>> ]
-"7793" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1562</SUB>> ]
-"7801" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1562</SUB>> ]
-"7735" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1562</SUB>> ]
-"7739" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1562</SUB>> ]
-"7746" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1562</SUB>> ]
-"7755" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1562</SUB>> ]
-"7757" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1562</SUB>> ]
-"7786" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1562</SUB>> ]
-"7792" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1562</SUB>> ]
-"7795" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1562</SUB>> ]
-"7740" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1562</SUB>> ]
-"7741" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1562</SUB>> ]
-"7743" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1562</SUB>> ]
-"7724" [label = <(METHOD,SetByteField)<SUB>1561</SUB>> ]
-"7807" [label = <(METHOD_RETURN,void)<SUB>1561</SUB>> ]
+"7730" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1561</SUB>> ]
+"7762" [label = <(soa,ScopedObjectAccess)<SUB>1561</SUB>> ]
+"7765" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1561</SUB>> ]
+"7772" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v)))<SUB>1561</SUB>> ]
+"7780" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1561</SUB>> ]
+"7797" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (o, v))<SUB>1561</SUB>> ]
+"7748" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1561</SUB>> ]
+"7767" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),jni::DecodeArtField(fid))<SUB>1561</SUB>> ]
+"7775" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v))<SUB>1561</SUB>> ]
+"7781" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1561</SUB>> ]
+"7788" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1561</SUB>> ]
+"7798" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1561</SUB>> ]
+"7803" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1561</SUB>> ]
+"7749" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1561</SUB>> ]
+"7753" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1561</SUB>> ]
+"7760" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1561</SUB>> ]
+"7768" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1561</SUB>> ]
+"7776" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1561</SUB>> ]
+"7782" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1561</SUB>> ]
+"7789" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1561</SUB>> ]
+"7799" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1561</SUB>> ]
+"7804" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1561</SUB>> ]
+"7734" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1561</SUB>> ]
+"7754" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1561</SUB>> ]
+"7770" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1561</SUB>> ]
+"7778" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;)<SUB>1561</SUB>> ]
+"7784" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1561</SUB>> ]
+"7790" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1561</SUB>> ]
+"7793" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1561</SUB>> ]
+"7801" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1561</SUB>> ]
+"7735" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1561</SUB>> ]
+"7739" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1561</SUB>> ]
+"7746" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1561</SUB>> ]
+"7755" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1561</SUB>> ]
+"7757" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1561</SUB>> ]
+"7786" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1561</SUB>> ]
+"7792" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1561</SUB>> ]
+"7795" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1561</SUB>> ]
+"7740" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1561</SUB>> ]
+"7741" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1561</SUB>> ]
+"7743" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1561</SUB>> ]
+"7724" [label = <(METHOD,SetByteField)<SUB>1560</SUB>> ]
+"7807" [label = <(METHOD_RETURN,void)<SUB>1560</SUB>> ]
   "7730" -> "7735" 
   "7730" -> "7749" 
   "7762" -> "7770" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/143-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/143-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/143-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/143-cfg.dot	2023-06-07 19:34:41.667389015 +0330
@@ -1,47 +1,47 @@
 digraph "SetCharField" {  
-"7815" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1566</SUB>> ]
-"7847" [label = <(soa,ScopedObjectAccess)<SUB>1566</SUB>> ]
-"7850" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1566</SUB>> ]
-"7857" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v)))<SUB>1566</SUB>> ]
-"7865" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1566</SUB>> ]
-"7882" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (o, v))<SUB>1566</SUB>> ]
-"7833" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1566</SUB>> ]
-"7852" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),jni::DecodeArtField(fid))<SUB>1566</SUB>> ]
-"7860" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v))<SUB>1566</SUB>> ]
-"7866" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1566</SUB>> ]
-"7873" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1566</SUB>> ]
-"7883" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1566</SUB>> ]
-"7888" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1566</SUB>> ]
-"7834" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1566</SUB>> ]
-"7838" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1566</SUB>> ]
-"7845" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1566</SUB>> ]
-"7853" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1566</SUB>> ]
-"7861" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1566</SUB>> ]
-"7867" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1566</SUB>> ]
-"7874" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1566</SUB>> ]
-"7884" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1566</SUB>> ]
-"7889" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1566</SUB>> ]
-"7819" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1566</SUB>> ]
-"7839" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1566</SUB>> ]
-"7855" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1566</SUB>> ]
-"7863" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;)<SUB>1566</SUB>> ]
-"7869" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1566</SUB>> ]
-"7875" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1566</SUB>> ]
-"7878" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1566</SUB>> ]
-"7886" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1566</SUB>> ]
-"7820" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1566</SUB>> ]
-"7824" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1566</SUB>> ]
-"7831" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1566</SUB>> ]
-"7840" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1566</SUB>> ]
-"7842" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1566</SUB>> ]
-"7871" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1566</SUB>> ]
-"7877" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1566</SUB>> ]
-"7880" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1566</SUB>> ]
-"7825" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1566</SUB>> ]
-"7826" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1566</SUB>> ]
-"7828" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1566</SUB>> ]
-"7809" [label = <(METHOD,SetCharField)<SUB>1565</SUB>> ]
-"7892" [label = <(METHOD_RETURN,void)<SUB>1565</SUB>> ]
+"7815" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1565</SUB>> ]
+"7847" [label = <(soa,ScopedObjectAccess)<SUB>1565</SUB>> ]
+"7850" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1565</SUB>> ]
+"7857" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v)))<SUB>1565</SUB>> ]
+"7865" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1565</SUB>> ]
+"7882" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (o, v))<SUB>1565</SUB>> ]
+"7833" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1565</SUB>> ]
+"7852" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),jni::DecodeArtField(fid))<SUB>1565</SUB>> ]
+"7860" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v))<SUB>1565</SUB>> ]
+"7866" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1565</SUB>> ]
+"7873" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1565</SUB>> ]
+"7883" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1565</SUB>> ]
+"7888" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1565</SUB>> ]
+"7834" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1565</SUB>> ]
+"7838" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1565</SUB>> ]
+"7845" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1565</SUB>> ]
+"7853" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1565</SUB>> ]
+"7861" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1565</SUB>> ]
+"7867" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1565</SUB>> ]
+"7874" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1565</SUB>> ]
+"7884" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1565</SUB>> ]
+"7889" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1565</SUB>> ]
+"7819" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1565</SUB>> ]
+"7839" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1565</SUB>> ]
+"7855" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1565</SUB>> ]
+"7863" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;)<SUB>1565</SUB>> ]
+"7869" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1565</SUB>> ]
+"7875" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1565</SUB>> ]
+"7878" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1565</SUB>> ]
+"7886" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1565</SUB>> ]
+"7820" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1565</SUB>> ]
+"7824" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1565</SUB>> ]
+"7831" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1565</SUB>> ]
+"7840" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1565</SUB>> ]
+"7842" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1565</SUB>> ]
+"7871" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1565</SUB>> ]
+"7877" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1565</SUB>> ]
+"7880" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1565</SUB>> ]
+"7825" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1565</SUB>> ]
+"7826" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1565</SUB>> ]
+"7828" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1565</SUB>> ]
+"7809" [label = <(METHOD,SetCharField)<SUB>1564</SUB>> ]
+"7892" [label = <(METHOD_RETURN,void)<SUB>1564</SUB>> ]
   "7815" -> "7820" 
   "7815" -> "7834" 
   "7847" -> "7855" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/144-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/144-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/144-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/144-cfg.dot	2023-06-07 19:34:41.667389015 +0330
@@ -1,47 +1,47 @@
 digraph "SetFloatField" {  
-"7900" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1570</SUB>> ]
-"7932" [label = <(soa,ScopedObjectAccess)<SUB>1570</SUB>> ]
-"7935" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1570</SUB>> ]
-"7942" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v)))<SUB>1570</SUB>> ]
-"7950" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1570</SUB>> ]
-"7967" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (o, v))<SUB>1570</SUB>> ]
-"7918" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1570</SUB>> ]
-"7937" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),jni::DecodeArtField(fid))<SUB>1570</SUB>> ]
-"7945" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v))<SUB>1570</SUB>> ]
-"7951" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1570</SUB>> ]
-"7958" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1570</SUB>> ]
-"7968" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1570</SUB>> ]
-"7973" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1570</SUB>> ]
-"7919" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1570</SUB>> ]
-"7923" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1570</SUB>> ]
-"7930" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1570</SUB>> ]
-"7938" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1570</SUB>> ]
-"7946" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1570</SUB>> ]
-"7952" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1570</SUB>> ]
-"7959" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1570</SUB>> ]
-"7969" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1570</SUB>> ]
-"7974" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1570</SUB>> ]
-"7904" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1570</SUB>> ]
-"7924" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1570</SUB>> ]
-"7940" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1570</SUB>> ]
-"7948" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;)<SUB>1570</SUB>> ]
-"7954" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1570</SUB>> ]
-"7960" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1570</SUB>> ]
-"7963" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1570</SUB>> ]
-"7971" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1570</SUB>> ]
-"7905" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1570</SUB>> ]
-"7909" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1570</SUB>> ]
-"7916" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1570</SUB>> ]
-"7925" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1570</SUB>> ]
-"7927" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1570</SUB>> ]
-"7956" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1570</SUB>> ]
-"7962" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1570</SUB>> ]
-"7965" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1570</SUB>> ]
-"7910" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1570</SUB>> ]
-"7911" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1570</SUB>> ]
-"7913" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1570</SUB>> ]
-"7894" [label = <(METHOD,SetFloatField)<SUB>1569</SUB>> ]
-"7977" [label = <(METHOD_RETURN,void)<SUB>1569</SUB>> ]
+"7900" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1569</SUB>> ]
+"7932" [label = <(soa,ScopedObjectAccess)<SUB>1569</SUB>> ]
+"7935" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1569</SUB>> ]
+"7942" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v)))<SUB>1569</SUB>> ]
+"7950" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1569</SUB>> ]
+"7967" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (o, v))<SUB>1569</SUB>> ]
+"7918" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1569</SUB>> ]
+"7937" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),jni::DecodeArtField(fid))<SUB>1569</SUB>> ]
+"7945" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v))<SUB>1569</SUB>> ]
+"7951" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1569</SUB>> ]
+"7958" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1569</SUB>> ]
+"7968" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1569</SUB>> ]
+"7973" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1569</SUB>> ]
+"7919" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1569</SUB>> ]
+"7923" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1569</SUB>> ]
+"7930" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1569</SUB>> ]
+"7938" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1569</SUB>> ]
+"7946" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1569</SUB>> ]
+"7952" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1569</SUB>> ]
+"7959" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1569</SUB>> ]
+"7969" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1569</SUB>> ]
+"7974" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1569</SUB>> ]
+"7904" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1569</SUB>> ]
+"7924" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1569</SUB>> ]
+"7940" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1569</SUB>> ]
+"7948" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;)<SUB>1569</SUB>> ]
+"7954" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1569</SUB>> ]
+"7960" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1569</SUB>> ]
+"7963" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1569</SUB>> ]
+"7971" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1569</SUB>> ]
+"7905" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1569</SUB>> ]
+"7909" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1569</SUB>> ]
+"7916" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1569</SUB>> ]
+"7925" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1569</SUB>> ]
+"7927" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1569</SUB>> ]
+"7956" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1569</SUB>> ]
+"7962" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1569</SUB>> ]
+"7965" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1569</SUB>> ]
+"7910" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1569</SUB>> ]
+"7911" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1569</SUB>> ]
+"7913" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1569</SUB>> ]
+"7894" [label = <(METHOD,SetFloatField)<SUB>1568</SUB>> ]
+"7977" [label = <(METHOD_RETURN,void)<SUB>1568</SUB>> ]
   "7900" -> "7905" 
   "7900" -> "7919" 
   "7932" -> "7940" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/145-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/145-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/145-cfg.dot	2023-06-07 19:34:35.137389617 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/145-cfg.dot	2023-06-07 19:34:41.667389015 +0330
@@ -1,47 +1,47 @@
 digraph "SetDoubleField" {  
-"7985" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1574</SUB>> ]
-"8017" [label = <(soa,ScopedObjectAccess)<SUB>1574</SUB>> ]
-"8020" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1574</SUB>> ]
-"8027" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v)))<SUB>1574</SUB>> ]
-"8035" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1574</SUB>> ]
-"8052" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (o, v))<SUB>1574</SUB>> ]
-"8003" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1574</SUB>> ]
-"8022" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),jni::DecodeArtField(fid))<SUB>1574</SUB>> ]
-"8030" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v))<SUB>1574</SUB>> ]
-"8036" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1574</SUB>> ]
-"8043" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1574</SUB>> ]
-"8053" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1574</SUB>> ]
-"8058" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1574</SUB>> ]
-"8004" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1574</SUB>> ]
-"8008" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1574</SUB>> ]
-"8015" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1574</SUB>> ]
-"8023" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1574</SUB>> ]
-"8031" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1574</SUB>> ]
-"8037" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1574</SUB>> ]
-"8044" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1574</SUB>> ]
-"8054" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1574</SUB>> ]
-"8059" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1574</SUB>> ]
-"7989" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1574</SUB>> ]
-"8009" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1574</SUB>> ]
-"8025" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1574</SUB>> ]
-"8033" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;)<SUB>1574</SUB>> ]
-"8039" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1574</SUB>> ]
-"8045" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1574</SUB>> ]
-"8048" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1574</SUB>> ]
-"8056" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1574</SUB>> ]
-"7990" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1574</SUB>> ]
-"7994" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1574</SUB>> ]
-"8001" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1574</SUB>> ]
-"8010" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1574</SUB>> ]
-"8012" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1574</SUB>> ]
-"8041" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1574</SUB>> ]
-"8047" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1574</SUB>> ]
-"8050" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1574</SUB>> ]
-"7995" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1574</SUB>> ]
-"7996" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1574</SUB>> ]
-"7998" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1574</SUB>> ]
-"7979" [label = <(METHOD,SetDoubleField)<SUB>1573</SUB>> ]
-"8062" [label = <(METHOD_RETURN,void)<SUB>1573</SUB>> ]
+"7985" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1573</SUB>> ]
+"8017" [label = <(soa,ScopedObjectAccess)<SUB>1573</SUB>> ]
+"8020" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1573</SUB>> ]
+"8027" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v)))<SUB>1573</SUB>> ]
+"8035" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1573</SUB>> ]
+"8052" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (o, v))<SUB>1573</SUB>> ]
+"8003" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1573</SUB>> ]
+"8022" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),jni::DecodeArtField(fid))<SUB>1573</SUB>> ]
+"8030" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v))<SUB>1573</SUB>> ]
+"8036" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1573</SUB>> ]
+"8043" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1573</SUB>> ]
+"8053" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1573</SUB>> ]
+"8058" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1573</SUB>> ]
+"8004" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1573</SUB>> ]
+"8008" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1573</SUB>> ]
+"8015" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1573</SUB>> ]
+"8023" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1573</SUB>> ]
+"8031" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1573</SUB>> ]
+"8037" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1573</SUB>> ]
+"8044" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1573</SUB>> ]
+"8054" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1573</SUB>> ]
+"8059" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1573</SUB>> ]
+"7989" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1573</SUB>> ]
+"8009" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1573</SUB>> ]
+"8025" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1573</SUB>> ]
+"8033" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;)<SUB>1573</SUB>> ]
+"8039" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1573</SUB>> ]
+"8045" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1573</SUB>> ]
+"8048" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1573</SUB>> ]
+"8056" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1573</SUB>> ]
+"7990" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1573</SUB>> ]
+"7994" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1573</SUB>> ]
+"8001" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1573</SUB>> ]
+"8010" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1573</SUB>> ]
+"8012" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1573</SUB>> ]
+"8041" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1573</SUB>> ]
+"8047" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1573</SUB>> ]
+"8050" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1573</SUB>> ]
+"7995" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1573</SUB>> ]
+"7996" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1573</SUB>> ]
+"7998" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1573</SUB>> ]
+"7979" [label = <(METHOD,SetDoubleField)<SUB>1572</SUB>> ]
+"8062" [label = <(METHOD_RETURN,void)<SUB>1572</SUB>> ]
   "7985" -> "7990" 
   "7985" -> "8004" 
   "8017" -> "8025" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/146-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/146-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/146-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/146-cfg.dot	2023-06-07 19:34:41.667389015 +0330
@@ -1,47 +1,47 @@
 digraph "SetIntField" {  
-"8070" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1578</SUB>> ]
-"8102" [label = <(soa,ScopedObjectAccess)<SUB>1578</SUB>> ]
-"8105" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1578</SUB>> ]
-"8112" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v)))<SUB>1578</SUB>> ]
-"8120" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1578</SUB>> ]
-"8137" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (o, v))<SUB>1578</SUB>> ]
-"8088" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1578</SUB>> ]
-"8107" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),jni::DecodeArtField(fid))<SUB>1578</SUB>> ]
-"8115" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v))<SUB>1578</SUB>> ]
-"8121" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1578</SUB>> ]
-"8128" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1578</SUB>> ]
-"8138" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1578</SUB>> ]
-"8143" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1578</SUB>> ]
-"8089" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1578</SUB>> ]
-"8093" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1578</SUB>> ]
-"8100" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1578</SUB>> ]
-"8108" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1578</SUB>> ]
-"8116" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1578</SUB>> ]
-"8122" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1578</SUB>> ]
-"8129" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1578</SUB>> ]
-"8139" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1578</SUB>> ]
-"8144" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1578</SUB>> ]
-"8074" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1578</SUB>> ]
-"8094" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1578</SUB>> ]
-"8110" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1578</SUB>> ]
-"8118" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;)<SUB>1578</SUB>> ]
-"8124" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1578</SUB>> ]
-"8130" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1578</SUB>> ]
-"8133" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1578</SUB>> ]
-"8141" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1578</SUB>> ]
-"8075" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1578</SUB>> ]
-"8079" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1578</SUB>> ]
-"8086" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1578</SUB>> ]
-"8095" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1578</SUB>> ]
-"8097" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1578</SUB>> ]
-"8126" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1578</SUB>> ]
-"8132" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1578</SUB>> ]
-"8135" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1578</SUB>> ]
-"8080" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1578</SUB>> ]
-"8081" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1578</SUB>> ]
-"8083" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1578</SUB>> ]
-"8064" [label = <(METHOD,SetIntField)<SUB>1577</SUB>> ]
-"8147" [label = <(METHOD_RETURN,void)<SUB>1577</SUB>> ]
+"8070" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1577</SUB>> ]
+"8102" [label = <(soa,ScopedObjectAccess)<SUB>1577</SUB>> ]
+"8105" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1577</SUB>> ]
+"8112" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v)))<SUB>1577</SUB>> ]
+"8120" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1577</SUB>> ]
+"8137" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (o, v))<SUB>1577</SUB>> ]
+"8088" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1577</SUB>> ]
+"8107" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),jni::DecodeArtField(fid))<SUB>1577</SUB>> ]
+"8115" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v))<SUB>1577</SUB>> ]
+"8121" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1577</SUB>> ]
+"8128" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1577</SUB>> ]
+"8138" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1577</SUB>> ]
+"8143" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1577</SUB>> ]
+"8089" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1577</SUB>> ]
+"8093" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1577</SUB>> ]
+"8100" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1577</SUB>> ]
+"8108" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1577</SUB>> ]
+"8116" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1577</SUB>> ]
+"8122" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1577</SUB>> ]
+"8129" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1577</SUB>> ]
+"8139" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1577</SUB>> ]
+"8144" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1577</SUB>> ]
+"8074" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1577</SUB>> ]
+"8094" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1577</SUB>> ]
+"8110" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1577</SUB>> ]
+"8118" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;)<SUB>1577</SUB>> ]
+"8124" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1577</SUB>> ]
+"8130" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1577</SUB>> ]
+"8133" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1577</SUB>> ]
+"8141" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1577</SUB>> ]
+"8075" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1577</SUB>> ]
+"8079" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1577</SUB>> ]
+"8086" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1577</SUB>> ]
+"8095" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1577</SUB>> ]
+"8097" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1577</SUB>> ]
+"8126" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1577</SUB>> ]
+"8132" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1577</SUB>> ]
+"8135" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1577</SUB>> ]
+"8080" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1577</SUB>> ]
+"8081" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1577</SUB>> ]
+"8083" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1577</SUB>> ]
+"8064" [label = <(METHOD,SetIntField)<SUB>1576</SUB>> ]
+"8147" [label = <(METHOD_RETURN,void)<SUB>1576</SUB>> ]
   "8070" -> "8075" 
   "8070" -> "8089" 
   "8102" -> "8110" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/147-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/147-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/147-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/147-cfg.dot	2023-06-07 19:34:41.667389015 +0330
@@ -1,47 +1,47 @@
 digraph "SetLongField" {  
-"8155" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1582</SUB>> ]
-"8187" [label = <(soa,ScopedObjectAccess)<SUB>1582</SUB>> ]
-"8190" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1582</SUB>> ]
-"8197" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v)))<SUB>1582</SUB>> ]
-"8205" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1582</SUB>> ]
-"8222" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (o, v))<SUB>1582</SUB>> ]
-"8173" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1582</SUB>> ]
-"8192" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),jni::DecodeArtField(fid))<SUB>1582</SUB>> ]
-"8200" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v))<SUB>1582</SUB>> ]
-"8206" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1582</SUB>> ]
-"8213" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1582</SUB>> ]
-"8223" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1582</SUB>> ]
-"8228" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1582</SUB>> ]
-"8174" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1582</SUB>> ]
-"8178" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1582</SUB>> ]
-"8185" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1582</SUB>> ]
-"8193" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1582</SUB>> ]
-"8201" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1582</SUB>> ]
-"8207" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1582</SUB>> ]
-"8214" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1582</SUB>> ]
-"8224" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1582</SUB>> ]
-"8229" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1582</SUB>> ]
-"8159" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1582</SUB>> ]
-"8179" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1582</SUB>> ]
-"8195" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1582</SUB>> ]
-"8203" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;)<SUB>1582</SUB>> ]
-"8209" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1582</SUB>> ]
-"8215" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1582</SUB>> ]
-"8218" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1582</SUB>> ]
-"8226" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1582</SUB>> ]
-"8160" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1582</SUB>> ]
-"8164" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1582</SUB>> ]
-"8171" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1582</SUB>> ]
-"8180" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1582</SUB>> ]
-"8182" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1582</SUB>> ]
-"8211" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1582</SUB>> ]
-"8217" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1582</SUB>> ]
-"8220" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1582</SUB>> ]
-"8165" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1582</SUB>> ]
-"8166" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1582</SUB>> ]
-"8168" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1582</SUB>> ]
-"8149" [label = <(METHOD,SetLongField)<SUB>1581</SUB>> ]
-"8232" [label = <(METHOD_RETURN,void)<SUB>1581</SUB>> ]
+"8155" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1581</SUB>> ]
+"8187" [label = <(soa,ScopedObjectAccess)<SUB>1581</SUB>> ]
+"8190" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1581</SUB>> ]
+"8197" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v)))<SUB>1581</SUB>> ]
+"8205" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1581</SUB>> ]
+"8222" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (o, v))<SUB>1581</SUB>> ]
+"8173" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1581</SUB>> ]
+"8192" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),jni::DecodeArtField(fid))<SUB>1581</SUB>> ]
+"8200" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v))<SUB>1581</SUB>> ]
+"8206" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1581</SUB>> ]
+"8213" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1581</SUB>> ]
+"8223" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1581</SUB>> ]
+"8228" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1581</SUB>> ]
+"8174" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1581</SUB>> ]
+"8178" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1581</SUB>> ]
+"8185" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1581</SUB>> ]
+"8193" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1581</SUB>> ]
+"8201" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1581</SUB>> ]
+"8207" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1581</SUB>> ]
+"8214" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1581</SUB>> ]
+"8224" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1581</SUB>> ]
+"8229" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1581</SUB>> ]
+"8159" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1581</SUB>> ]
+"8179" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1581</SUB>> ]
+"8195" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1581</SUB>> ]
+"8203" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;)<SUB>1581</SUB>> ]
+"8209" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1581</SUB>> ]
+"8215" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1581</SUB>> ]
+"8218" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1581</SUB>> ]
+"8226" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1581</SUB>> ]
+"8160" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1581</SUB>> ]
+"8164" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1581</SUB>> ]
+"8171" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1581</SUB>> ]
+"8180" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1581</SUB>> ]
+"8182" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1581</SUB>> ]
+"8211" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1581</SUB>> ]
+"8217" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1581</SUB>> ]
+"8220" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1581</SUB>> ]
+"8165" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1581</SUB>> ]
+"8166" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1581</SUB>> ]
+"8168" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1581</SUB>> ]
+"8149" [label = <(METHOD,SetLongField)<SUB>1580</SUB>> ]
+"8232" [label = <(METHOD_RETURN,void)<SUB>1580</SUB>> ]
   "8155" -> "8160" 
   "8155" -> "8174" 
   "8187" -> "8195" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/148-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/148-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/148-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/148-cfg.dot	2023-06-07 19:34:41.667389015 +0330
@@ -1,47 +1,47 @@
 digraph "SetShortField" {  
-"8240" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1586</SUB>> ]
-"8272" [label = <(soa,ScopedObjectAccess)<SUB>1586</SUB>> ]
-"8275" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1586</SUB>> ]
-"8282" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v)))<SUB>1586</SUB>> ]
-"8290" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1586</SUB>> ]
-"8307" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (o, v))<SUB>1586</SUB>> ]
-"8258" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1586</SUB>> ]
-"8277" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),jni::DecodeArtField(fid))<SUB>1586</SUB>> ]
-"8285" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v))<SUB>1586</SUB>> ]
-"8291" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1586</SUB>> ]
-"8298" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1586</SUB>> ]
-"8308" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1586</SUB>> ]
-"8313" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1586</SUB>> ]
-"8259" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1586</SUB>> ]
-"8263" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1586</SUB>> ]
-"8270" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1586</SUB>> ]
-"8278" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1586</SUB>> ]
-"8286" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1586</SUB>> ]
-"8292" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1586</SUB>> ]
-"8299" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1586</SUB>> ]
-"8309" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1586</SUB>> ]
-"8314" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1586</SUB>> ]
-"8244" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1586</SUB>> ]
-"8264" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1586</SUB>> ]
-"8280" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1586</SUB>> ]
-"8288" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;)<SUB>1586</SUB>> ]
-"8294" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1586</SUB>> ]
-"8300" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1586</SUB>> ]
-"8303" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1586</SUB>> ]
-"8311" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1586</SUB>> ]
-"8245" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1586</SUB>> ]
-"8249" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1586</SUB>> ]
-"8256" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1586</SUB>> ]
-"8265" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1586</SUB>> ]
-"8267" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1586</SUB>> ]
-"8296" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1586</SUB>> ]
-"8302" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1586</SUB>> ]
-"8305" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1586</SUB>> ]
-"8250" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1586</SUB>> ]
-"8251" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1586</SUB>> ]
-"8253" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1586</SUB>> ]
-"8234" [label = <(METHOD,SetShortField)<SUB>1585</SUB>> ]
-"8317" [label = <(METHOD_RETURN,void)<SUB>1585</SUB>> ]
+"8240" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1585</SUB>> ]
+"8272" [label = <(soa,ScopedObjectAccess)<SUB>1585</SUB>> ]
+"8275" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1585</SUB>> ]
+"8282" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v)))<SUB>1585</SUB>> ]
+"8290" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1585</SUB>> ]
+"8307" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (o, v))<SUB>1585</SUB>> ]
+"8258" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1585</SUB>> ]
+"8277" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),jni::DecodeArtField(fid))<SUB>1585</SUB>> ]
+"8285" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v))<SUB>1585</SUB>> ]
+"8291" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1585</SUB>> ]
+"8298" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1585</SUB>> ]
+"8308" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1585</SUB>> ]
+"8313" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1585</SUB>> ]
+"8259" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1585</SUB>> ]
+"8263" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1585</SUB>> ]
+"8270" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1585</SUB>> ]
+"8278" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1585</SUB>> ]
+"8286" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1585</SUB>> ]
+"8292" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1585</SUB>> ]
+"8299" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1585</SUB>> ]
+"8309" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1585</SUB>> ]
+"8314" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1585</SUB>> ]
+"8244" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1585</SUB>> ]
+"8264" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1585</SUB>> ]
+"8280" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1585</SUB>> ]
+"8288" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;)<SUB>1585</SUB>> ]
+"8294" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1585</SUB>> ]
+"8300" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1585</SUB>> ]
+"8303" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1585</SUB>> ]
+"8311" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1585</SUB>> ]
+"8245" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1585</SUB>> ]
+"8249" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1585</SUB>> ]
+"8256" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1585</SUB>> ]
+"8265" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1585</SUB>> ]
+"8267" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1585</SUB>> ]
+"8296" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1585</SUB>> ]
+"8302" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1585</SUB>> ]
+"8305" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1585</SUB>> ]
+"8250" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1585</SUB>> ]
+"8251" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1585</SUB>> ]
+"8253" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1585</SUB>> ]
+"8234" [label = <(METHOD,SetShortField)<SUB>1584</SUB>> ]
+"8317" [label = <(METHOD_RETURN,void)<SUB>1584</SUB>> ]
   "8240" -> "8245" 
   "8240" -> "8259" 
   "8272" -> "8280" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/149-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/149-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/149-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/149-cfg.dot	2023-06-07 19:34:41.667389015 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticBooleanField" {  
-"8325" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1590</SUB>> ]
-"8342" [label = <(soa,ScopedObjectAccess)<SUB>1590</SUB>> ]
-"8345" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1590</SUB>> ]
-"8352" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v)))<SUB>1590</SUB>> ]
-"8360" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1590</SUB>> ]
-"8347" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),jni::DecodeArtField(fid))<SUB>1590</SUB>> ]
-"8355" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v))<SUB>1590</SUB>> ]
-"8361" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1590</SUB>> ]
-"8366" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1590</SUB>> ]
-"8348" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1590</SUB>> ]
-"8356" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1590</SUB>> ]
-"8362" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1590</SUB>> ]
-"8367" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1590</SUB>> ]
-"8328" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1590</SUB>> ]
-"8350" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1590</SUB>> ]
-"8358" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;)<SUB>1590</SUB>> ]
-"8364" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1590</SUB>> ]
-"8368" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),f-&gt;GetDeclaringClass())<SUB>1590</SUB>> ]
-"8329" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1590</SUB>> ]
-"8333" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1590</SUB>> ]
-"8340" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Boolean, v),SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1590</SUB>> ]
-"8369" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1590</SUB>> ]
-"8334" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1590</SUB>> ]
-"8371" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1590</SUB>> ]
-"8335" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1590</SUB>> ]
-"8337" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1590</SUB>> ]
-"8319" [label = <(METHOD,SetStaticBooleanField)<SUB>1589</SUB>> ]
-"8373" [label = <(METHOD_RETURN,void)<SUB>1589</SUB>> ]
+"8325" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1589</SUB>> ]
+"8342" [label = <(soa,ScopedObjectAccess)<SUB>1589</SUB>> ]
+"8345" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1589</SUB>> ]
+"8352" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v)))<SUB>1589</SUB>> ]
+"8360" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1589</SUB>> ]
+"8347" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),jni::DecodeArtField(fid))<SUB>1589</SUB>> ]
+"8355" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v))<SUB>1589</SUB>> ]
+"8361" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1589</SUB>> ]
+"8366" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1589</SUB>> ]
+"8348" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1589</SUB>> ]
+"8356" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1589</SUB>> ]
+"8362" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1589</SUB>> ]
+"8367" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1589</SUB>> ]
+"8328" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1589</SUB>> ]
+"8350" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1589</SUB>> ]
+"8358" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;)<SUB>1589</SUB>> ]
+"8364" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1589</SUB>> ]
+"8368" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),f-&gt;GetDeclaringClass())<SUB>1589</SUB>> ]
+"8329" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1589</SUB>> ]
+"8333" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1589</SUB>> ]
+"8340" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Boolean, v),SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1589</SUB>> ]
+"8369" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1589</SUB>> ]
+"8334" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1589</SUB>> ]
+"8371" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1589</SUB>> ]
+"8335" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1589</SUB>> ]
+"8337" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1589</SUB>> ]
+"8319" [label = <(METHOD,SetStaticBooleanField)<SUB>1588</SUB>> ]
+"8373" [label = <(METHOD_RETURN,void)<SUB>1588</SUB>> ]
   "8325" -> "8329" 
   "8325" -> "8342" 
   "8342" -> "8350" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/15-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/15-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/15-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/15-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureInitialized" {  
-"375" [label = <(METHOD,EnsureInitialized)<SUB>311</SUB>> ]
-"379" [label = <(METHOD_RETURN,ANY)<SUB>311</SUB>> ]
+"375" [label = <(METHOD,EnsureInitialized)<SUB>310</SUB>> ]
+"379" [label = <(METHOD_RETURN,ANY)<SUB>310</SUB>> ]
   "375" -> "379" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/150-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/150-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/150-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/150-cfg.dot	2023-06-07 19:34:41.667389015 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticByteField" {  
-"8381" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1594</SUB>> ]
-"8398" [label = <(soa,ScopedObjectAccess)<SUB>1594</SUB>> ]
-"8401" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1594</SUB>> ]
-"8408" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v)))<SUB>1594</SUB>> ]
-"8416" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1594</SUB>> ]
-"8403" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),jni::DecodeArtField(fid))<SUB>1594</SUB>> ]
-"8411" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v))<SUB>1594</SUB>> ]
-"8417" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1594</SUB>> ]
-"8422" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1594</SUB>> ]
-"8404" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1594</SUB>> ]
-"8412" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1594</SUB>> ]
-"8418" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1594</SUB>> ]
-"8423" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1594</SUB>> ]
-"8384" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1594</SUB>> ]
-"8406" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1594</SUB>> ]
-"8414" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;)<SUB>1594</SUB>> ]
-"8420" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1594</SUB>> ]
-"8424" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),f-&gt;GetDeclaringClass())<SUB>1594</SUB>> ]
-"8385" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1594</SUB>> ]
-"8389" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1594</SUB>> ]
-"8396" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Byte, v),SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1594</SUB>> ]
-"8425" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1594</SUB>> ]
-"8390" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1594</SUB>> ]
-"8427" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1594</SUB>> ]
-"8391" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1594</SUB>> ]
-"8393" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1594</SUB>> ]
-"8375" [label = <(METHOD,SetStaticByteField)<SUB>1593</SUB>> ]
-"8429" [label = <(METHOD_RETURN,void)<SUB>1593</SUB>> ]
+"8381" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1593</SUB>> ]
+"8398" [label = <(soa,ScopedObjectAccess)<SUB>1593</SUB>> ]
+"8401" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1593</SUB>> ]
+"8408" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v)))<SUB>1593</SUB>> ]
+"8416" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1593</SUB>> ]
+"8403" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),jni::DecodeArtField(fid))<SUB>1593</SUB>> ]
+"8411" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v))<SUB>1593</SUB>> ]
+"8417" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1593</SUB>> ]
+"8422" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1593</SUB>> ]
+"8404" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1593</SUB>> ]
+"8412" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1593</SUB>> ]
+"8418" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1593</SUB>> ]
+"8423" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1593</SUB>> ]
+"8384" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1593</SUB>> ]
+"8406" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1593</SUB>> ]
+"8414" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;)<SUB>1593</SUB>> ]
+"8420" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1593</SUB>> ]
+"8424" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),f-&gt;GetDeclaringClass())<SUB>1593</SUB>> ]
+"8385" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1593</SUB>> ]
+"8389" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1593</SUB>> ]
+"8396" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Byte, v),SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1593</SUB>> ]
+"8425" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1593</SUB>> ]
+"8390" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1593</SUB>> ]
+"8427" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1593</SUB>> ]
+"8391" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1593</SUB>> ]
+"8393" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1593</SUB>> ]
+"8375" [label = <(METHOD,SetStaticByteField)<SUB>1592</SUB>> ]
+"8429" [label = <(METHOD_RETURN,void)<SUB>1592</SUB>> ]
   "8381" -> "8385" 
   "8381" -> "8398" 
   "8398" -> "8406" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/151-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/151-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/151-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/151-cfg.dot	2023-06-07 19:34:41.667389015 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticCharField" {  
-"8437" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1598</SUB>> ]
-"8454" [label = <(soa,ScopedObjectAccess)<SUB>1598</SUB>> ]
-"8457" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1598</SUB>> ]
-"8464" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v)))<SUB>1598</SUB>> ]
-"8472" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1598</SUB>> ]
-"8459" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),jni::DecodeArtField(fid))<SUB>1598</SUB>> ]
-"8467" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v))<SUB>1598</SUB>> ]
-"8473" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1598</SUB>> ]
-"8478" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1598</SUB>> ]
-"8460" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1598</SUB>> ]
-"8468" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1598</SUB>> ]
-"8474" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1598</SUB>> ]
-"8479" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1598</SUB>> ]
-"8440" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1598</SUB>> ]
-"8462" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1598</SUB>> ]
-"8470" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;)<SUB>1598</SUB>> ]
-"8476" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1598</SUB>> ]
-"8480" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),f-&gt;GetDeclaringClass())<SUB>1598</SUB>> ]
-"8441" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1598</SUB>> ]
-"8445" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1598</SUB>> ]
-"8452" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Char, v),SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1598</SUB>> ]
-"8481" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1598</SUB>> ]
-"8446" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1598</SUB>> ]
-"8483" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1598</SUB>> ]
-"8447" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1598</SUB>> ]
-"8449" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1598</SUB>> ]
-"8431" [label = <(METHOD,SetStaticCharField)<SUB>1597</SUB>> ]
-"8485" [label = <(METHOD_RETURN,void)<SUB>1597</SUB>> ]
+"8437" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1597</SUB>> ]
+"8454" [label = <(soa,ScopedObjectAccess)<SUB>1597</SUB>> ]
+"8457" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1597</SUB>> ]
+"8464" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v)))<SUB>1597</SUB>> ]
+"8472" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1597</SUB>> ]
+"8459" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),jni::DecodeArtField(fid))<SUB>1597</SUB>> ]
+"8467" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v))<SUB>1597</SUB>> ]
+"8473" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1597</SUB>> ]
+"8478" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1597</SUB>> ]
+"8460" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1597</SUB>> ]
+"8468" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1597</SUB>> ]
+"8474" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1597</SUB>> ]
+"8479" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1597</SUB>> ]
+"8440" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1597</SUB>> ]
+"8462" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1597</SUB>> ]
+"8470" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;)<SUB>1597</SUB>> ]
+"8476" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1597</SUB>> ]
+"8480" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),f-&gt;GetDeclaringClass())<SUB>1597</SUB>> ]
+"8441" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1597</SUB>> ]
+"8445" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1597</SUB>> ]
+"8452" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Char, v),SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1597</SUB>> ]
+"8481" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1597</SUB>> ]
+"8446" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1597</SUB>> ]
+"8483" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1597</SUB>> ]
+"8447" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1597</SUB>> ]
+"8449" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1597</SUB>> ]
+"8431" [label = <(METHOD,SetStaticCharField)<SUB>1596</SUB>> ]
+"8485" [label = <(METHOD_RETURN,void)<SUB>1596</SUB>> ]
   "8437" -> "8441" 
   "8437" -> "8454" 
   "8454" -> "8462" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/152-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/152-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/152-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/152-cfg.dot	2023-06-07 19:34:41.667389015 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticFloatField" {  
-"8493" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1602</SUB>> ]
-"8510" [label = <(soa,ScopedObjectAccess)<SUB>1602</SUB>> ]
-"8513" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1602</SUB>> ]
-"8520" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v)))<SUB>1602</SUB>> ]
-"8528" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1602</SUB>> ]
-"8515" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),jni::DecodeArtField(fid))<SUB>1602</SUB>> ]
-"8523" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v))<SUB>1602</SUB>> ]
-"8529" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1602</SUB>> ]
-"8534" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1602</SUB>> ]
-"8516" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1602</SUB>> ]
-"8524" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1602</SUB>> ]
-"8530" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1602</SUB>> ]
-"8535" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1602</SUB>> ]
-"8496" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1602</SUB>> ]
-"8518" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1602</SUB>> ]
-"8526" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;)<SUB>1602</SUB>> ]
-"8532" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1602</SUB>> ]
-"8536" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),f-&gt;GetDeclaringClass())<SUB>1602</SUB>> ]
-"8497" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1602</SUB>> ]
-"8501" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1602</SUB>> ]
-"8508" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Float, v),SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1602</SUB>> ]
-"8537" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1602</SUB>> ]
-"8502" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1602</SUB>> ]
-"8539" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1602</SUB>> ]
-"8503" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1602</SUB>> ]
-"8505" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1602</SUB>> ]
-"8487" [label = <(METHOD,SetStaticFloatField)<SUB>1601</SUB>> ]
-"8541" [label = <(METHOD_RETURN,void)<SUB>1601</SUB>> ]
+"8493" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1601</SUB>> ]
+"8510" [label = <(soa,ScopedObjectAccess)<SUB>1601</SUB>> ]
+"8513" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1601</SUB>> ]
+"8520" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v)))<SUB>1601</SUB>> ]
+"8528" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1601</SUB>> ]
+"8515" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),jni::DecodeArtField(fid))<SUB>1601</SUB>> ]
+"8523" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v))<SUB>1601</SUB>> ]
+"8529" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1601</SUB>> ]
+"8534" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1601</SUB>> ]
+"8516" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1601</SUB>> ]
+"8524" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1601</SUB>> ]
+"8530" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1601</SUB>> ]
+"8535" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1601</SUB>> ]
+"8496" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1601</SUB>> ]
+"8518" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1601</SUB>> ]
+"8526" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;)<SUB>1601</SUB>> ]
+"8532" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1601</SUB>> ]
+"8536" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),f-&gt;GetDeclaringClass())<SUB>1601</SUB>> ]
+"8497" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1601</SUB>> ]
+"8501" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1601</SUB>> ]
+"8508" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Float, v),SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1601</SUB>> ]
+"8537" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1601</SUB>> ]
+"8502" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1601</SUB>> ]
+"8539" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1601</SUB>> ]
+"8503" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1601</SUB>> ]
+"8505" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1601</SUB>> ]
+"8487" [label = <(METHOD,SetStaticFloatField)<SUB>1600</SUB>> ]
+"8541" [label = <(METHOD_RETURN,void)<SUB>1600</SUB>> ]
   "8493" -> "8497" 
   "8493" -> "8510" 
   "8510" -> "8518" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/153-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/153-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/153-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/153-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticDoubleField" {  
-"8549" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1606</SUB>> ]
-"8566" [label = <(soa,ScopedObjectAccess)<SUB>1606</SUB>> ]
-"8569" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1606</SUB>> ]
-"8576" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v)))<SUB>1606</SUB>> ]
-"8584" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1606</SUB>> ]
-"8571" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),jni::DecodeArtField(fid))<SUB>1606</SUB>> ]
-"8579" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v))<SUB>1606</SUB>> ]
-"8585" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1606</SUB>> ]
-"8590" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1606</SUB>> ]
-"8572" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1606</SUB>> ]
-"8580" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1606</SUB>> ]
-"8586" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1606</SUB>> ]
-"8591" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1606</SUB>> ]
-"8552" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1606</SUB>> ]
-"8574" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1606</SUB>> ]
-"8582" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;)<SUB>1606</SUB>> ]
-"8588" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1606</SUB>> ]
-"8592" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),f-&gt;GetDeclaringClass())<SUB>1606</SUB>> ]
-"8553" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1606</SUB>> ]
-"8557" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1606</SUB>> ]
-"8564" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Double, v),SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1606</SUB>> ]
-"8593" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1606</SUB>> ]
-"8558" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1606</SUB>> ]
-"8595" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1606</SUB>> ]
-"8559" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1606</SUB>> ]
-"8561" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1606</SUB>> ]
-"8543" [label = <(METHOD,SetStaticDoubleField)<SUB>1605</SUB>> ]
-"8597" [label = <(METHOD_RETURN,void)<SUB>1605</SUB>> ]
+"8549" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1605</SUB>> ]
+"8566" [label = <(soa,ScopedObjectAccess)<SUB>1605</SUB>> ]
+"8569" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1605</SUB>> ]
+"8576" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v)))<SUB>1605</SUB>> ]
+"8584" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1605</SUB>> ]
+"8571" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),jni::DecodeArtField(fid))<SUB>1605</SUB>> ]
+"8579" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v))<SUB>1605</SUB>> ]
+"8585" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1605</SUB>> ]
+"8590" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1605</SUB>> ]
+"8572" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1605</SUB>> ]
+"8580" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1605</SUB>> ]
+"8586" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1605</SUB>> ]
+"8591" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1605</SUB>> ]
+"8552" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1605</SUB>> ]
+"8574" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1605</SUB>> ]
+"8582" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;)<SUB>1605</SUB>> ]
+"8588" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1605</SUB>> ]
+"8592" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),f-&gt;GetDeclaringClass())<SUB>1605</SUB>> ]
+"8553" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1605</SUB>> ]
+"8557" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1605</SUB>> ]
+"8564" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Double, v),SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1605</SUB>> ]
+"8593" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1605</SUB>> ]
+"8558" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1605</SUB>> ]
+"8595" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1605</SUB>> ]
+"8559" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1605</SUB>> ]
+"8561" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1605</SUB>> ]
+"8543" [label = <(METHOD,SetStaticDoubleField)<SUB>1604</SUB>> ]
+"8597" [label = <(METHOD_RETURN,void)<SUB>1604</SUB>> ]
   "8549" -> "8553" 
   "8549" -> "8566" 
   "8566" -> "8574" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/154-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/154-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/154-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/154-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticIntField" {  
-"8605" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1610</SUB>> ]
-"8622" [label = <(soa,ScopedObjectAccess)<SUB>1610</SUB>> ]
-"8625" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1610</SUB>> ]
-"8632" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v)))<SUB>1610</SUB>> ]
-"8640" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1610</SUB>> ]
-"8627" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),jni::DecodeArtField(fid))<SUB>1610</SUB>> ]
-"8635" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v))<SUB>1610</SUB>> ]
-"8641" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1610</SUB>> ]
-"8646" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1610</SUB>> ]
-"8628" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1610</SUB>> ]
-"8636" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1610</SUB>> ]
-"8642" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1610</SUB>> ]
-"8647" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1610</SUB>> ]
-"8608" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1610</SUB>> ]
-"8630" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1610</SUB>> ]
-"8638" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;)<SUB>1610</SUB>> ]
-"8644" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1610</SUB>> ]
-"8648" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),f-&gt;GetDeclaringClass())<SUB>1610</SUB>> ]
-"8609" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1610</SUB>> ]
-"8613" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1610</SUB>> ]
-"8620" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Int, v),SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1610</SUB>> ]
-"8649" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1610</SUB>> ]
-"8614" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1610</SUB>> ]
-"8651" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1610</SUB>> ]
-"8615" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1610</SUB>> ]
-"8617" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1610</SUB>> ]
-"8599" [label = <(METHOD,SetStaticIntField)<SUB>1609</SUB>> ]
-"8653" [label = <(METHOD_RETURN,void)<SUB>1609</SUB>> ]
+"8605" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1609</SUB>> ]
+"8622" [label = <(soa,ScopedObjectAccess)<SUB>1609</SUB>> ]
+"8625" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1609</SUB>> ]
+"8632" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v)))<SUB>1609</SUB>> ]
+"8640" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1609</SUB>> ]
+"8627" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),jni::DecodeArtField(fid))<SUB>1609</SUB>> ]
+"8635" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v))<SUB>1609</SUB>> ]
+"8641" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1609</SUB>> ]
+"8646" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1609</SUB>> ]
+"8628" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1609</SUB>> ]
+"8636" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1609</SUB>> ]
+"8642" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1609</SUB>> ]
+"8647" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1609</SUB>> ]
+"8608" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1609</SUB>> ]
+"8630" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1609</SUB>> ]
+"8638" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;)<SUB>1609</SUB>> ]
+"8644" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1609</SUB>> ]
+"8648" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),f-&gt;GetDeclaringClass())<SUB>1609</SUB>> ]
+"8609" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1609</SUB>> ]
+"8613" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1609</SUB>> ]
+"8620" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Int, v),SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1609</SUB>> ]
+"8649" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1609</SUB>> ]
+"8614" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1609</SUB>> ]
+"8651" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1609</SUB>> ]
+"8615" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1609</SUB>> ]
+"8617" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1609</SUB>> ]
+"8599" [label = <(METHOD,SetStaticIntField)<SUB>1608</SUB>> ]
+"8653" [label = <(METHOD_RETURN,void)<SUB>1608</SUB>> ]
   "8605" -> "8609" 
   "8605" -> "8622" 
   "8622" -> "8630" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/155-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/155-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/155-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/155-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticLongField" {  
-"8661" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1614</SUB>> ]
-"8678" [label = <(soa,ScopedObjectAccess)<SUB>1614</SUB>> ]
-"8681" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1614</SUB>> ]
-"8688" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v)))<SUB>1614</SUB>> ]
-"8696" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1614</SUB>> ]
-"8683" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),jni::DecodeArtField(fid))<SUB>1614</SUB>> ]
-"8691" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v))<SUB>1614</SUB>> ]
-"8697" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1614</SUB>> ]
-"8702" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1614</SUB>> ]
-"8684" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1614</SUB>> ]
-"8692" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1614</SUB>> ]
-"8698" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1614</SUB>> ]
-"8703" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1614</SUB>> ]
-"8664" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1614</SUB>> ]
-"8686" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1614</SUB>> ]
-"8694" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;)<SUB>1614</SUB>> ]
-"8700" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1614</SUB>> ]
-"8704" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),f-&gt;GetDeclaringClass())<SUB>1614</SUB>> ]
-"8665" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1614</SUB>> ]
-"8669" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1614</SUB>> ]
-"8676" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Long, v),SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1614</SUB>> ]
-"8705" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1614</SUB>> ]
-"8670" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1614</SUB>> ]
-"8707" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1614</SUB>> ]
-"8671" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1614</SUB>> ]
-"8673" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1614</SUB>> ]
-"8655" [label = <(METHOD,SetStaticLongField)<SUB>1613</SUB>> ]
-"8709" [label = <(METHOD_RETURN,void)<SUB>1613</SUB>> ]
+"8661" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1613</SUB>> ]
+"8678" [label = <(soa,ScopedObjectAccess)<SUB>1613</SUB>> ]
+"8681" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1613</SUB>> ]
+"8688" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v)))<SUB>1613</SUB>> ]
+"8696" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1613</SUB>> ]
+"8683" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),jni::DecodeArtField(fid))<SUB>1613</SUB>> ]
+"8691" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v))<SUB>1613</SUB>> ]
+"8697" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1613</SUB>> ]
+"8702" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1613</SUB>> ]
+"8684" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1613</SUB>> ]
+"8692" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1613</SUB>> ]
+"8698" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1613</SUB>> ]
+"8703" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1613</SUB>> ]
+"8664" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1613</SUB>> ]
+"8686" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1613</SUB>> ]
+"8694" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;)<SUB>1613</SUB>> ]
+"8700" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1613</SUB>> ]
+"8704" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),f-&gt;GetDeclaringClass())<SUB>1613</SUB>> ]
+"8665" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1613</SUB>> ]
+"8669" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1613</SUB>> ]
+"8676" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Long, v),SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1613</SUB>> ]
+"8705" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1613</SUB>> ]
+"8670" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1613</SUB>> ]
+"8707" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1613</SUB>> ]
+"8671" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1613</SUB>> ]
+"8673" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1613</SUB>> ]
+"8655" [label = <(METHOD,SetStaticLongField)<SUB>1612</SUB>> ]
+"8709" [label = <(METHOD_RETURN,void)<SUB>1612</SUB>> ]
   "8661" -> "8665" 
   "8661" -> "8678" 
   "8678" -> "8686" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/156-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/156-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/156-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/156-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticShortField" {  
-"8717" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1618</SUB>> ]
-"8734" [label = <(soa,ScopedObjectAccess)<SUB>1618</SUB>> ]
-"8737" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1618</SUB>> ]
-"8744" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v)))<SUB>1618</SUB>> ]
-"8752" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1618</SUB>> ]
-"8739" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),jni::DecodeArtField(fid))<SUB>1618</SUB>> ]
-"8747" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v))<SUB>1618</SUB>> ]
-"8753" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1618</SUB>> ]
-"8758" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1618</SUB>> ]
-"8740" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1618</SUB>> ]
-"8748" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1618</SUB>> ]
-"8754" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1618</SUB>> ]
-"8759" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1618</SUB>> ]
-"8720" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1618</SUB>> ]
-"8742" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1618</SUB>> ]
-"8750" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;)<SUB>1618</SUB>> ]
-"8756" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1618</SUB>> ]
-"8760" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),f-&gt;GetDeclaringClass())<SUB>1618</SUB>> ]
-"8721" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1618</SUB>> ]
-"8725" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1618</SUB>> ]
-"8732" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Short, v),SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1618</SUB>> ]
-"8761" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1618</SUB>> ]
-"8726" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1618</SUB>> ]
-"8763" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1618</SUB>> ]
-"8727" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1618</SUB>> ]
-"8729" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1618</SUB>> ]
-"8711" [label = <(METHOD,SetStaticShortField)<SUB>1617</SUB>> ]
-"8765" [label = <(METHOD_RETURN,void)<SUB>1617</SUB>> ]
+"8717" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1617</SUB>> ]
+"8734" [label = <(soa,ScopedObjectAccess)<SUB>1617</SUB>> ]
+"8737" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1617</SUB>> ]
+"8744" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v)))<SUB>1617</SUB>> ]
+"8752" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1617</SUB>> ]
+"8739" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),jni::DecodeArtField(fid))<SUB>1617</SUB>> ]
+"8747" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v))<SUB>1617</SUB>> ]
+"8753" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1617</SUB>> ]
+"8758" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1617</SUB>> ]
+"8740" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1617</SUB>> ]
+"8748" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1617</SUB>> ]
+"8754" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1617</SUB>> ]
+"8759" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1617</SUB>> ]
+"8720" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1617</SUB>> ]
+"8742" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1617</SUB>> ]
+"8750" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;)<SUB>1617</SUB>> ]
+"8756" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1617</SUB>> ]
+"8760" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),f-&gt;GetDeclaringClass())<SUB>1617</SUB>> ]
+"8721" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1617</SUB>> ]
+"8725" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1617</SUB>> ]
+"8732" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Short, v),SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1617</SUB>> ]
+"8761" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1617</SUB>> ]
+"8726" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1617</SUB>> ]
+"8763" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1617</SUB>> ]
+"8727" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1617</SUB>> ]
+"8729" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1617</SUB>> ]
+"8711" [label = <(METHOD,SetStaticShortField)<SUB>1616</SUB>> ]
+"8765" [label = <(METHOD_RETURN,void)<SUB>1616</SUB>> ]
   "8717" -> "8721" 
   "8717" -> "8734" 
   "8734" -> "8742" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/157-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/157-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/157-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/157-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,29 +1,29 @@
 digraph "CallStaticObjectMethod" {  
-"8773" [label = <(va_start,va_start(ap, mid))<SUB>1623</SUB>> ]
-"8777" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1624</SUB>> ]
-"8780" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1625</SUB>> ]
-"8799" [label = <(soa,soa(env))<SUB>1626</SUB>> ]
-"8802" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1627</SUB>> ]
-"8809" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1628</SUB>> ]
-"8821" [label = <(RETURN,return local_result;,return local_result;)<SUB>1629</SUB>> ]
-"8778" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1624</SUB>> ]
-"8803" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1627</SUB>> ]
-"8811" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1628</SUB>> ]
-"8812" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1628</SUB>> ]
-"8817" [label = <(GetL,result.GetL())<SUB>1628</SUB>> ]
-"8784" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1625</SUB>> ]
-"8813" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1628</SUB>> ]
-"8818" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1628</SUB>> ]
-"8785" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1625</SUB>> ]
-"8789" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1625</SUB>> ]
-"8796" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1625</SUB>> ]
-"8815" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1628</SUB>> ]
-"8820" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1628</SUB>> ]
-"8790" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1625</SUB>> ]
-"8791" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1625</SUB>> ]
-"8793" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1625</SUB>> ]
-"8767" [label = <(METHOD,CallStaticObjectMethod)<SUB>1621</SUB>> ]
-"8823" [label = <(METHOD_RETURN,jobject)<SUB>1621</SUB>> ]
+"8773" [label = <(va_start,va_start(ap, mid))<SUB>1622</SUB>> ]
+"8777" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1623</SUB>> ]
+"8780" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1624</SUB>> ]
+"8799" [label = <(soa,soa(env))<SUB>1625</SUB>> ]
+"8802" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1626</SUB>> ]
+"8809" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1627</SUB>> ]
+"8821" [label = <(RETURN,return local_result;,return local_result;)<SUB>1628</SUB>> ]
+"8778" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1623</SUB>> ]
+"8803" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1626</SUB>> ]
+"8811" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1627</SUB>> ]
+"8812" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1627</SUB>> ]
+"8817" [label = <(GetL,result.GetL())<SUB>1627</SUB>> ]
+"8784" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1624</SUB>> ]
+"8813" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1627</SUB>> ]
+"8818" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1627</SUB>> ]
+"8785" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1624</SUB>> ]
+"8789" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1624</SUB>> ]
+"8796" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1624</SUB>> ]
+"8815" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1627</SUB>> ]
+"8820" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1627</SUB>> ]
+"8790" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1624</SUB>> ]
+"8791" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1624</SUB>> ]
+"8793" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1624</SUB>> ]
+"8767" [label = <(METHOD,CallStaticObjectMethod)<SUB>1620</SUB>> ]
+"8823" [label = <(METHOD_RETURN,jobject)<SUB>1620</SUB>> ]
   "8773" -> "8778" 
   "8777" -> "8780" 
   "8780" -> "8785" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/158-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/158-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/158-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/158-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,25 +1,25 @@
 digraph "CallStaticObjectMethodV" {  
-"8831" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1633</SUB>> ]
-"8850" [label = <(soa,soa(env))<SUB>1634</SUB>> ]
-"8853" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, args)))<SUB>1635</SUB>> ]
-"8859" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1636</SUB>> ]
-"8854" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1635</SUB>> ]
-"8860" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1636</SUB>> ]
-"8861" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1636</SUB>> ]
-"8866" [label = <(GetL,result.GetL())<SUB>1636</SUB>> ]
-"8835" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1633</SUB>> ]
-"8862" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1636</SUB>> ]
-"8867" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1636</SUB>> ]
-"8836" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1633</SUB>> ]
-"8840" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1633</SUB>> ]
-"8847" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1633</SUB>> ]
-"8864" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1636</SUB>> ]
-"8869" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1636</SUB>> ]
-"8841" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1633</SUB>> ]
-"8842" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1633</SUB>> ]
-"8844" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1633</SUB>> ]
-"8825" [label = <(METHOD,CallStaticObjectMethodV)<SUB>1632</SUB>> ]
-"8870" [label = <(METHOD_RETURN,jobject)<SUB>1632</SUB>> ]
+"8831" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1632</SUB>> ]
+"8850" [label = <(soa,soa(env))<SUB>1633</SUB>> ]
+"8853" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, args)))<SUB>1634</SUB>> ]
+"8859" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1635</SUB>> ]
+"8854" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1634</SUB>> ]
+"8860" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1635</SUB>> ]
+"8861" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1635</SUB>> ]
+"8866" [label = <(GetL,result.GetL())<SUB>1635</SUB>> ]
+"8835" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1632</SUB>> ]
+"8862" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1635</SUB>> ]
+"8867" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1635</SUB>> ]
+"8836" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1632</SUB>> ]
+"8840" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1632</SUB>> ]
+"8847" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1632</SUB>> ]
+"8864" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1635</SUB>> ]
+"8869" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1635</SUB>> ]
+"8841" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1632</SUB>> ]
+"8842" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1632</SUB>> ]
+"8844" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1632</SUB>> ]
+"8825" [label = <(METHOD,CallStaticObjectMethodV)<SUB>1631</SUB>> ]
+"8870" [label = <(METHOD_RETURN,jobject)<SUB>1631</SUB>> ]
   "8831" -> "8836" 
   "8831" -> "8850" 
   "8850" -> "8854" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/159-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/159-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/159-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/159-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,25 +1,25 @@
 digraph "CallStaticObjectMethodA" {  
-"8878" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1640</SUB>> ]
-"8897" [label = <(soa,soa(env))<SUB>1641</SUB>> ]
-"8900" [label = <(result,result(InvokeWithJValues(soa, nullptr, mid, args)))<SUB>1642</SUB>> ]
-"8906" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1643</SUB>> ]
-"8901" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1642</SUB>> ]
-"8907" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1643</SUB>> ]
-"8908" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1643</SUB>> ]
-"8913" [label = <(GetL,result.GetL())<SUB>1643</SUB>> ]
-"8882" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1640</SUB>> ]
-"8909" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1643</SUB>> ]
-"8914" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1643</SUB>> ]
-"8883" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1640</SUB>> ]
-"8887" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1640</SUB>> ]
-"8894" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1640</SUB>> ]
-"8911" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1643</SUB>> ]
-"8916" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1643</SUB>> ]
-"8888" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1640</SUB>> ]
-"8889" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1640</SUB>> ]
-"8891" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1640</SUB>> ]
-"8872" [label = <(METHOD,CallStaticObjectMethodA)<SUB>1639</SUB>> ]
-"8917" [label = <(METHOD_RETURN,jobject)<SUB>1639</SUB>> ]
+"8878" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1639</SUB>> ]
+"8897" [label = <(soa,soa(env))<SUB>1640</SUB>> ]
+"8900" [label = <(result,result(InvokeWithJValues(soa, nullptr, mid, args)))<SUB>1641</SUB>> ]
+"8906" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1642</SUB>> ]
+"8901" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1641</SUB>> ]
+"8907" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1642</SUB>> ]
+"8908" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1642</SUB>> ]
+"8913" [label = <(GetL,result.GetL())<SUB>1642</SUB>> ]
+"8882" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1639</SUB>> ]
+"8909" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1642</SUB>> ]
+"8914" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1642</SUB>> ]
+"8883" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1639</SUB>> ]
+"8887" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1639</SUB>> ]
+"8894" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1639</SUB>> ]
+"8911" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1642</SUB>> ]
+"8916" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1642</SUB>> ]
+"8888" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1639</SUB>> ]
+"8889" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1639</SUB>> ]
+"8891" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1639</SUB>> ]
+"8872" [label = <(METHOD,CallStaticObjectMethodA)<SUB>1638</SUB>> ]
+"8917" [label = <(METHOD_RETURN,jobject)<SUB>1638</SUB>> ]
   "8878" -> "8883" 
   "8878" -> "8897" 
   "8897" -> "8901" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/16-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/16-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/16-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/16-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "hs" {  
-"383" [label = <(METHOD,hs)<SUB>316</SUB>> ]
-"386" [label = <(METHOD_RETURN,StackHandleScope&lt;1&gt;)<SUB>316</SUB>> ]
+"383" [label = <(METHOD,hs)<SUB>315</SUB>> ]
+"386" [label = <(METHOD_RETURN,StackHandleScope&lt;1&gt;)<SUB>315</SUB>> ]
   "383" -> "386" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/160-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/160-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/160-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/160-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticBooleanMethod" {  
-"8925" [label = <(va_start,va_start(ap, mid))<SUB>1648</SUB>> ]
-"8929" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1649</SUB>> ]
-"8932" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1650</SUB>> ]
-"8951" [label = <(soa,soa(env))<SUB>1651</SUB>> ]
-"8954" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1652</SUB>> ]
-"8960" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1653</SUB>> ]
-"8930" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1649</SUB>> ]
-"8955" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1652</SUB>> ]
-"8961" [label = <(GetZ,result.GetZ())<SUB>1653</SUB>> ]
-"8962" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1653</SUB>> ]
-"8936" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1650</SUB>> ]
-"8964" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1653</SUB>> ]
-"8937" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1650</SUB>> ]
-"8941" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1650</SUB>> ]
-"8948" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1650</SUB>> ]
-"8942" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1650</SUB>> ]
-"8943" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1650</SUB>> ]
-"8945" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1650</SUB>> ]
-"8919" [label = <(METHOD,CallStaticBooleanMethod)<SUB>1646</SUB>> ]
-"8965" [label = <(METHOD_RETURN,jboolean)<SUB>1646</SUB>> ]
+"8925" [label = <(va_start,va_start(ap, mid))<SUB>1647</SUB>> ]
+"8929" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1648</SUB>> ]
+"8932" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1649</SUB>> ]
+"8951" [label = <(soa,soa(env))<SUB>1650</SUB>> ]
+"8954" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1651</SUB>> ]
+"8960" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1652</SUB>> ]
+"8930" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1648</SUB>> ]
+"8955" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1651</SUB>> ]
+"8961" [label = <(GetZ,result.GetZ())<SUB>1652</SUB>> ]
+"8962" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1652</SUB>> ]
+"8936" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1649</SUB>> ]
+"8964" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1652</SUB>> ]
+"8937" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1649</SUB>> ]
+"8941" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1649</SUB>> ]
+"8948" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1649</SUB>> ]
+"8942" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1649</SUB>> ]
+"8943" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1649</SUB>> ]
+"8945" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1649</SUB>> ]
+"8919" [label = <(METHOD,CallStaticBooleanMethod)<SUB>1645</SUB>> ]
+"8965" [label = <(METHOD_RETURN,jboolean)<SUB>1645</SUB>> ]
   "8925" -> "8930" 
   "8929" -> "8932" 
   "8932" -> "8937" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/161-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/161-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/161-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/161-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticBooleanMethodV" {  
-"8973" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1657</SUB>> ]
-"8992" [label = <(soa,soa(env))<SUB>1658</SUB>> ]
-"8994" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();)<SUB>1659</SUB>> ]
-"8995" [label = <(GetZ,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ())<SUB>1659</SUB>> ]
-"8996" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ)<SUB>1659</SUB>> ]
-"8977" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1657</SUB>> ]
-"8997" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1659</SUB>> ]
-"9002" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1659</SUB>> ]
-"8978" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1657</SUB>> ]
-"8982" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1657</SUB>> ]
-"8989" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1657</SUB>> ]
-"8983" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1657</SUB>> ]
-"8984" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1657</SUB>> ]
-"8986" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1657</SUB>> ]
-"8967" [label = <(METHOD,CallStaticBooleanMethodV)<SUB>1656</SUB>> ]
-"9003" [label = <(METHOD_RETURN,jboolean)<SUB>1656</SUB>> ]
+"8973" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1656</SUB>> ]
+"8992" [label = <(soa,soa(env))<SUB>1657</SUB>> ]
+"8994" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();)<SUB>1658</SUB>> ]
+"8995" [label = <(GetZ,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ())<SUB>1658</SUB>> ]
+"8996" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ)<SUB>1658</SUB>> ]
+"8977" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1656</SUB>> ]
+"8997" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1658</SUB>> ]
+"9002" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1658</SUB>> ]
+"8978" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1656</SUB>> ]
+"8982" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1656</SUB>> ]
+"8989" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1656</SUB>> ]
+"8983" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1656</SUB>> ]
+"8984" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1656</SUB>> ]
+"8986" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1656</SUB>> ]
+"8967" [label = <(METHOD,CallStaticBooleanMethodV)<SUB>1655</SUB>> ]
+"9003" [label = <(METHOD_RETURN,jboolean)<SUB>1655</SUB>> ]
   "8973" -> "8978" 
   "8973" -> "8992" 
   "8992" -> "8997" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/162-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/162-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/162-cfg.dot	2023-06-07 19:34:35.147389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/162-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticBooleanMethodA" {  
-"9011" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1663</SUB>> ]
-"9030" [label = <(soa,soa(env))<SUB>1664</SUB>> ]
-"9032" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();)<SUB>1665</SUB>> ]
-"9033" [label = <(GetZ,InvokeWithJValues(soa, nullptr, mid, args).GetZ())<SUB>1665</SUB>> ]
-"9034" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetZ)<SUB>1665</SUB>> ]
-"9015" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1663</SUB>> ]
-"9035" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1665</SUB>> ]
-"9040" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1665</SUB>> ]
-"9016" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1663</SUB>> ]
-"9020" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1663</SUB>> ]
-"9027" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1663</SUB>> ]
-"9021" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1663</SUB>> ]
-"9022" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1663</SUB>> ]
-"9024" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1663</SUB>> ]
-"9005" [label = <(METHOD,CallStaticBooleanMethodA)<SUB>1662</SUB>> ]
-"9041" [label = <(METHOD_RETURN,jboolean)<SUB>1662</SUB>> ]
+"9011" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1662</SUB>> ]
+"9030" [label = <(soa,soa(env))<SUB>1663</SUB>> ]
+"9032" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();)<SUB>1664</SUB>> ]
+"9033" [label = <(GetZ,InvokeWithJValues(soa, nullptr, mid, args).GetZ())<SUB>1664</SUB>> ]
+"9034" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetZ)<SUB>1664</SUB>> ]
+"9015" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1662</SUB>> ]
+"9035" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1664</SUB>> ]
+"9040" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1664</SUB>> ]
+"9016" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1662</SUB>> ]
+"9020" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1662</SUB>> ]
+"9027" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1662</SUB>> ]
+"9021" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1662</SUB>> ]
+"9022" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1662</SUB>> ]
+"9024" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1662</SUB>> ]
+"9005" [label = <(METHOD,CallStaticBooleanMethodA)<SUB>1661</SUB>> ]
+"9041" [label = <(METHOD_RETURN,jboolean)<SUB>1661</SUB>> ]
   "9011" -> "9016" 
   "9011" -> "9030" 
   "9030" -> "9035" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/163-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/163-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/163-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/163-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticByteMethod" {  
-"9049" [label = <(va_start,va_start(ap, mid))<SUB>1670</SUB>> ]
-"9053" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1671</SUB>> ]
-"9056" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1672</SUB>> ]
-"9075" [label = <(soa,soa(env))<SUB>1673</SUB>> ]
-"9078" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1674</SUB>> ]
-"9084" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1675</SUB>> ]
-"9054" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1671</SUB>> ]
-"9079" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1674</SUB>> ]
-"9085" [label = <(GetB,result.GetB())<SUB>1675</SUB>> ]
-"9086" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1675</SUB>> ]
-"9060" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1672</SUB>> ]
-"9088" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1675</SUB>> ]
-"9061" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1672</SUB>> ]
-"9065" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1672</SUB>> ]
-"9072" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1672</SUB>> ]
-"9066" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1672</SUB>> ]
-"9067" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1672</SUB>> ]
-"9069" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1672</SUB>> ]
-"9043" [label = <(METHOD,CallStaticByteMethod)<SUB>1668</SUB>> ]
-"9089" [label = <(METHOD_RETURN,jbyte)<SUB>1668</SUB>> ]
+"9049" [label = <(va_start,va_start(ap, mid))<SUB>1669</SUB>> ]
+"9053" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1670</SUB>> ]
+"9056" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1671</SUB>> ]
+"9075" [label = <(soa,soa(env))<SUB>1672</SUB>> ]
+"9078" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1673</SUB>> ]
+"9084" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1674</SUB>> ]
+"9054" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1670</SUB>> ]
+"9079" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1673</SUB>> ]
+"9085" [label = <(GetB,result.GetB())<SUB>1674</SUB>> ]
+"9086" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1674</SUB>> ]
+"9060" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1671</SUB>> ]
+"9088" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1674</SUB>> ]
+"9061" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1671</SUB>> ]
+"9065" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1671</SUB>> ]
+"9072" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1671</SUB>> ]
+"9066" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1671</SUB>> ]
+"9067" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1671</SUB>> ]
+"9069" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1671</SUB>> ]
+"9043" [label = <(METHOD,CallStaticByteMethod)<SUB>1667</SUB>> ]
+"9089" [label = <(METHOD_RETURN,jbyte)<SUB>1667</SUB>> ]
   "9049" -> "9054" 
   "9053" -> "9056" 
   "9056" -> "9061" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/164-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/164-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/164-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/164-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticByteMethodV" {  
-"9097" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1679</SUB>> ]
-"9116" [label = <(soa,soa(env))<SUB>1680</SUB>> ]
-"9118" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();)<SUB>1681</SUB>> ]
-"9119" [label = <(GetB,InvokeWithVarArgs(soa, nullptr, mid, args).GetB())<SUB>1681</SUB>> ]
-"9120" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetB)<SUB>1681</SUB>> ]
-"9101" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1679</SUB>> ]
-"9121" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1681</SUB>> ]
-"9126" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1681</SUB>> ]
-"9102" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1679</SUB>> ]
-"9106" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1679</SUB>> ]
-"9113" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1679</SUB>> ]
-"9107" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1679</SUB>> ]
-"9108" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1679</SUB>> ]
-"9110" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1679</SUB>> ]
-"9091" [label = <(METHOD,CallStaticByteMethodV)<SUB>1678</SUB>> ]
-"9127" [label = <(METHOD_RETURN,jbyte)<SUB>1678</SUB>> ]
+"9097" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1678</SUB>> ]
+"9116" [label = <(soa,soa(env))<SUB>1679</SUB>> ]
+"9118" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();)<SUB>1680</SUB>> ]
+"9119" [label = <(GetB,InvokeWithVarArgs(soa, nullptr, mid, args).GetB())<SUB>1680</SUB>> ]
+"9120" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetB)<SUB>1680</SUB>> ]
+"9101" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1678</SUB>> ]
+"9121" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1680</SUB>> ]
+"9126" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1680</SUB>> ]
+"9102" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1678</SUB>> ]
+"9106" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1678</SUB>> ]
+"9113" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1678</SUB>> ]
+"9107" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1678</SUB>> ]
+"9108" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1678</SUB>> ]
+"9110" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1678</SUB>> ]
+"9091" [label = <(METHOD,CallStaticByteMethodV)<SUB>1677</SUB>> ]
+"9127" [label = <(METHOD_RETURN,jbyte)<SUB>1677</SUB>> ]
   "9097" -> "9102" 
   "9097" -> "9116" 
   "9116" -> "9121" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/165-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/165-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/165-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/165-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticByteMethodA" {  
-"9135" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1685</SUB>> ]
-"9154" [label = <(soa,soa(env))<SUB>1686</SUB>> ]
-"9156" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetB();,return InvokeWithJValues(soa, nullptr, mid, args).GetB();)<SUB>1687</SUB>> ]
-"9157" [label = <(GetB,InvokeWithJValues(soa, nullptr, mid, args).GetB())<SUB>1687</SUB>> ]
-"9158" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetB)<SUB>1687</SUB>> ]
-"9139" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1685</SUB>> ]
-"9159" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1687</SUB>> ]
-"9164" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1687</SUB>> ]
-"9140" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1685</SUB>> ]
-"9144" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1685</SUB>> ]
-"9151" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1685</SUB>> ]
-"9145" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1685</SUB>> ]
-"9146" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1685</SUB>> ]
-"9148" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1685</SUB>> ]
-"9129" [label = <(METHOD,CallStaticByteMethodA)<SUB>1684</SUB>> ]
-"9165" [label = <(METHOD_RETURN,jbyte)<SUB>1684</SUB>> ]
+"9135" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1684</SUB>> ]
+"9154" [label = <(soa,soa(env))<SUB>1685</SUB>> ]
+"9156" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetB();,return InvokeWithJValues(soa, nullptr, mid, args).GetB();)<SUB>1686</SUB>> ]
+"9157" [label = <(GetB,InvokeWithJValues(soa, nullptr, mid, args).GetB())<SUB>1686</SUB>> ]
+"9158" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetB)<SUB>1686</SUB>> ]
+"9139" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1684</SUB>> ]
+"9159" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1686</SUB>> ]
+"9164" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1686</SUB>> ]
+"9140" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1684</SUB>> ]
+"9144" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1684</SUB>> ]
+"9151" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1684</SUB>> ]
+"9145" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1684</SUB>> ]
+"9146" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1684</SUB>> ]
+"9148" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1684</SUB>> ]
+"9129" [label = <(METHOD,CallStaticByteMethodA)<SUB>1683</SUB>> ]
+"9165" [label = <(METHOD_RETURN,jbyte)<SUB>1683</SUB>> ]
   "9135" -> "9140" 
   "9135" -> "9154" 
   "9154" -> "9159" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/166-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/166-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/166-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/166-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticCharMethod" {  
-"9173" [label = <(va_start,va_start(ap, mid))<SUB>1692</SUB>> ]
-"9177" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1693</SUB>> ]
-"9180" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1694</SUB>> ]
-"9199" [label = <(soa,soa(env))<SUB>1695</SUB>> ]
-"9202" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1696</SUB>> ]
-"9208" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1697</SUB>> ]
-"9178" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1693</SUB>> ]
-"9203" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1696</SUB>> ]
-"9209" [label = <(GetC,result.GetC())<SUB>1697</SUB>> ]
-"9210" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1697</SUB>> ]
-"9184" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1694</SUB>> ]
-"9212" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1697</SUB>> ]
-"9185" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1694</SUB>> ]
-"9189" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1694</SUB>> ]
-"9196" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1694</SUB>> ]
-"9190" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1694</SUB>> ]
-"9191" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1694</SUB>> ]
-"9193" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1694</SUB>> ]
-"9167" [label = <(METHOD,CallStaticCharMethod)<SUB>1690</SUB>> ]
-"9213" [label = <(METHOD_RETURN,jchar)<SUB>1690</SUB>> ]
+"9173" [label = <(va_start,va_start(ap, mid))<SUB>1691</SUB>> ]
+"9177" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1692</SUB>> ]
+"9180" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1693</SUB>> ]
+"9199" [label = <(soa,soa(env))<SUB>1694</SUB>> ]
+"9202" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1695</SUB>> ]
+"9208" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1696</SUB>> ]
+"9178" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1692</SUB>> ]
+"9203" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1695</SUB>> ]
+"9209" [label = <(GetC,result.GetC())<SUB>1696</SUB>> ]
+"9210" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1696</SUB>> ]
+"9184" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1693</SUB>> ]
+"9212" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1696</SUB>> ]
+"9185" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1693</SUB>> ]
+"9189" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1693</SUB>> ]
+"9196" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1693</SUB>> ]
+"9190" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1693</SUB>> ]
+"9191" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1693</SUB>> ]
+"9193" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1693</SUB>> ]
+"9167" [label = <(METHOD,CallStaticCharMethod)<SUB>1689</SUB>> ]
+"9213" [label = <(METHOD_RETURN,jchar)<SUB>1689</SUB>> ]
   "9173" -> "9178" 
   "9177" -> "9180" 
   "9180" -> "9185" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/167-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/167-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/167-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/167-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticCharMethodV" {  
-"9221" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1701</SUB>> ]
-"9240" [label = <(soa,soa(env))<SUB>1702</SUB>> ]
-"9242" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();)<SUB>1703</SUB>> ]
-"9243" [label = <(GetC,InvokeWithVarArgs(soa, nullptr, mid, args).GetC())<SUB>1703</SUB>> ]
-"9244" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetC)<SUB>1703</SUB>> ]
-"9225" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1701</SUB>> ]
-"9245" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1703</SUB>> ]
-"9250" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1703</SUB>> ]
-"9226" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1701</SUB>> ]
-"9230" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1701</SUB>> ]
-"9237" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1701</SUB>> ]
-"9231" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1701</SUB>> ]
-"9232" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1701</SUB>> ]
-"9234" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1701</SUB>> ]
-"9215" [label = <(METHOD,CallStaticCharMethodV)<SUB>1700</SUB>> ]
-"9251" [label = <(METHOD_RETURN,jchar)<SUB>1700</SUB>> ]
+"9221" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1700</SUB>> ]
+"9240" [label = <(soa,soa(env))<SUB>1701</SUB>> ]
+"9242" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();)<SUB>1702</SUB>> ]
+"9243" [label = <(GetC,InvokeWithVarArgs(soa, nullptr, mid, args).GetC())<SUB>1702</SUB>> ]
+"9244" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetC)<SUB>1702</SUB>> ]
+"9225" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1700</SUB>> ]
+"9245" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1702</SUB>> ]
+"9250" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1702</SUB>> ]
+"9226" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1700</SUB>> ]
+"9230" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1700</SUB>> ]
+"9237" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1700</SUB>> ]
+"9231" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1700</SUB>> ]
+"9232" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1700</SUB>> ]
+"9234" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1700</SUB>> ]
+"9215" [label = <(METHOD,CallStaticCharMethodV)<SUB>1699</SUB>> ]
+"9251" [label = <(METHOD_RETURN,jchar)<SUB>1699</SUB>> ]
   "9221" -> "9226" 
   "9221" -> "9240" 
   "9240" -> "9245" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/168-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/168-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/168-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/168-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticCharMethodA" {  
-"9259" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1707</SUB>> ]
-"9278" [label = <(soa,soa(env))<SUB>1708</SUB>> ]
-"9280" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetC();,return InvokeWithJValues(soa, nullptr, mid, args).GetC();)<SUB>1709</SUB>> ]
-"9281" [label = <(GetC,InvokeWithJValues(soa, nullptr, mid, args).GetC())<SUB>1709</SUB>> ]
-"9282" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetC)<SUB>1709</SUB>> ]
-"9263" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1707</SUB>> ]
-"9283" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1709</SUB>> ]
-"9288" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1709</SUB>> ]
-"9264" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1707</SUB>> ]
-"9268" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1707</SUB>> ]
-"9275" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1707</SUB>> ]
-"9269" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1707</SUB>> ]
-"9270" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1707</SUB>> ]
-"9272" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1707</SUB>> ]
-"9253" [label = <(METHOD,CallStaticCharMethodA)<SUB>1706</SUB>> ]
-"9289" [label = <(METHOD_RETURN,jchar)<SUB>1706</SUB>> ]
+"9259" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1706</SUB>> ]
+"9278" [label = <(soa,soa(env))<SUB>1707</SUB>> ]
+"9280" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetC();,return InvokeWithJValues(soa, nullptr, mid, args).GetC();)<SUB>1708</SUB>> ]
+"9281" [label = <(GetC,InvokeWithJValues(soa, nullptr, mid, args).GetC())<SUB>1708</SUB>> ]
+"9282" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetC)<SUB>1708</SUB>> ]
+"9263" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1706</SUB>> ]
+"9283" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1708</SUB>> ]
+"9288" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1708</SUB>> ]
+"9264" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1706</SUB>> ]
+"9268" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1706</SUB>> ]
+"9275" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1706</SUB>> ]
+"9269" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1706</SUB>> ]
+"9270" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1706</SUB>> ]
+"9272" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1706</SUB>> ]
+"9253" [label = <(METHOD,CallStaticCharMethodA)<SUB>1705</SUB>> ]
+"9289" [label = <(METHOD_RETURN,jchar)<SUB>1705</SUB>> ]
   "9259" -> "9264" 
   "9259" -> "9278" 
   "9278" -> "9283" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/169-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/169-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/169-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/169-cfg.dot	2023-06-07 19:34:41.677389013 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticShortMethod" {  
-"9297" [label = <(va_start,va_start(ap, mid))<SUB>1714</SUB>> ]
-"9301" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1715</SUB>> ]
-"9304" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1716</SUB>> ]
-"9323" [label = <(soa,soa(env))<SUB>1717</SUB>> ]
-"9326" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1718</SUB>> ]
-"9332" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1719</SUB>> ]
-"9302" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1715</SUB>> ]
-"9327" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1718</SUB>> ]
-"9333" [label = <(GetS,result.GetS())<SUB>1719</SUB>> ]
-"9334" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1719</SUB>> ]
-"9308" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1716</SUB>> ]
-"9336" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1719</SUB>> ]
-"9309" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1716</SUB>> ]
-"9313" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1716</SUB>> ]
-"9320" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1716</SUB>> ]
-"9314" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1716</SUB>> ]
-"9315" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1716</SUB>> ]
-"9317" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1716</SUB>> ]
-"9291" [label = <(METHOD,CallStaticShortMethod)<SUB>1712</SUB>> ]
-"9337" [label = <(METHOD_RETURN,jshort)<SUB>1712</SUB>> ]
+"9297" [label = <(va_start,va_start(ap, mid))<SUB>1713</SUB>> ]
+"9301" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1714</SUB>> ]
+"9304" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1715</SUB>> ]
+"9323" [label = <(soa,soa(env))<SUB>1716</SUB>> ]
+"9326" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1717</SUB>> ]
+"9332" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1718</SUB>> ]
+"9302" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1714</SUB>> ]
+"9327" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1717</SUB>> ]
+"9333" [label = <(GetS,result.GetS())<SUB>1718</SUB>> ]
+"9334" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1718</SUB>> ]
+"9308" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1715</SUB>> ]
+"9336" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1718</SUB>> ]
+"9309" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1715</SUB>> ]
+"9313" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1715</SUB>> ]
+"9320" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1715</SUB>> ]
+"9314" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1715</SUB>> ]
+"9315" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1715</SUB>> ]
+"9317" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1715</SUB>> ]
+"9291" [label = <(METHOD,CallStaticShortMethod)<SUB>1711</SUB>> ]
+"9337" [label = <(METHOD_RETURN,jshort)<SUB>1711</SUB>> ]
   "9297" -> "9302" 
   "9301" -> "9304" 
   "9304" -> "9309" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/17-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/17-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/17-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/17-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "FindMethodID" {  
-"398" [label = <(METHOD,FindMethodID)<SUB>324</SUB>> ]
-"405" [label = <(METHOD_RETURN,jmethodID)<SUB>324</SUB>> ]
+"398" [label = <(METHOD,FindMethodID)<SUB>323</SUB>> ]
+"405" [label = <(METHOD_RETURN,jmethodID)<SUB>323</SUB>> ]
   "398" -> "405" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/170-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/170-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/170-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/170-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticShortMethodV" {  
-"9345" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1723</SUB>> ]
-"9364" [label = <(soa,soa(env))<SUB>1724</SUB>> ]
-"9366" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();)<SUB>1725</SUB>> ]
-"9367" [label = <(GetS,InvokeWithVarArgs(soa, nullptr, mid, args).GetS())<SUB>1725</SUB>> ]
-"9368" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetS)<SUB>1725</SUB>> ]
-"9349" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1723</SUB>> ]
-"9369" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1725</SUB>> ]
-"9374" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1725</SUB>> ]
-"9350" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1723</SUB>> ]
-"9354" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1723</SUB>> ]
-"9361" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1723</SUB>> ]
-"9355" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1723</SUB>> ]
-"9356" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1723</SUB>> ]
-"9358" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1723</SUB>> ]
-"9339" [label = <(METHOD,CallStaticShortMethodV)<SUB>1722</SUB>> ]
-"9375" [label = <(METHOD_RETURN,jshort)<SUB>1722</SUB>> ]
+"9345" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1722</SUB>> ]
+"9364" [label = <(soa,soa(env))<SUB>1723</SUB>> ]
+"9366" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();)<SUB>1724</SUB>> ]
+"9367" [label = <(GetS,InvokeWithVarArgs(soa, nullptr, mid, args).GetS())<SUB>1724</SUB>> ]
+"9368" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetS)<SUB>1724</SUB>> ]
+"9349" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1722</SUB>> ]
+"9369" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1724</SUB>> ]
+"9374" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1724</SUB>> ]
+"9350" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1722</SUB>> ]
+"9354" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1722</SUB>> ]
+"9361" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1722</SUB>> ]
+"9355" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1722</SUB>> ]
+"9356" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1722</SUB>> ]
+"9358" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1722</SUB>> ]
+"9339" [label = <(METHOD,CallStaticShortMethodV)<SUB>1721</SUB>> ]
+"9375" [label = <(METHOD_RETURN,jshort)<SUB>1721</SUB>> ]
   "9345" -> "9350" 
   "9345" -> "9364" 
   "9364" -> "9369" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/171-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/171-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/171-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/171-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticShortMethodA" {  
-"9383" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1729</SUB>> ]
-"9402" [label = <(soa,soa(env))<SUB>1730</SUB>> ]
-"9404" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetS();,return InvokeWithJValues(soa, nullptr, mid, args).GetS();)<SUB>1731</SUB>> ]
-"9405" [label = <(GetS,InvokeWithJValues(soa, nullptr, mid, args).GetS())<SUB>1731</SUB>> ]
-"9406" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetS)<SUB>1731</SUB>> ]
-"9387" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1729</SUB>> ]
-"9407" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1731</SUB>> ]
-"9412" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1731</SUB>> ]
-"9388" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1729</SUB>> ]
-"9392" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1729</SUB>> ]
-"9399" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1729</SUB>> ]
-"9393" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1729</SUB>> ]
-"9394" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1729</SUB>> ]
-"9396" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1729</SUB>> ]
-"9377" [label = <(METHOD,CallStaticShortMethodA)<SUB>1728</SUB>> ]
-"9413" [label = <(METHOD_RETURN,jshort)<SUB>1728</SUB>> ]
+"9383" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1728</SUB>> ]
+"9402" [label = <(soa,soa(env))<SUB>1729</SUB>> ]
+"9404" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetS();,return InvokeWithJValues(soa, nullptr, mid, args).GetS();)<SUB>1730</SUB>> ]
+"9405" [label = <(GetS,InvokeWithJValues(soa, nullptr, mid, args).GetS())<SUB>1730</SUB>> ]
+"9406" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetS)<SUB>1730</SUB>> ]
+"9387" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1728</SUB>> ]
+"9407" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1730</SUB>> ]
+"9412" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1730</SUB>> ]
+"9388" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1728</SUB>> ]
+"9392" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1728</SUB>> ]
+"9399" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1728</SUB>> ]
+"9393" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1728</SUB>> ]
+"9394" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1728</SUB>> ]
+"9396" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1728</SUB>> ]
+"9377" [label = <(METHOD,CallStaticShortMethodA)<SUB>1727</SUB>> ]
+"9413" [label = <(METHOD_RETURN,jshort)<SUB>1727</SUB>> ]
   "9383" -> "9388" 
   "9383" -> "9402" 
   "9402" -> "9407" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/172-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/172-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/172-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/172-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticIntMethod" {  
-"9421" [label = <(va_start,va_start(ap, mid))<SUB>1736</SUB>> ]
-"9425" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1737</SUB>> ]
-"9428" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1738</SUB>> ]
-"9447" [label = <(soa,soa(env))<SUB>1739</SUB>> ]
-"9450" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1740</SUB>> ]
-"9456" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1741</SUB>> ]
-"9426" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1737</SUB>> ]
-"9451" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1740</SUB>> ]
-"9457" [label = <(GetI,result.GetI())<SUB>1741</SUB>> ]
-"9458" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1741</SUB>> ]
-"9432" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1738</SUB>> ]
-"9460" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1741</SUB>> ]
-"9433" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1738</SUB>> ]
-"9437" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1738</SUB>> ]
-"9444" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1738</SUB>> ]
-"9438" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1738</SUB>> ]
-"9439" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1738</SUB>> ]
-"9441" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1738</SUB>> ]
-"9415" [label = <(METHOD,CallStaticIntMethod)<SUB>1734</SUB>> ]
-"9461" [label = <(METHOD_RETURN,jint)<SUB>1734</SUB>> ]
+"9421" [label = <(va_start,va_start(ap, mid))<SUB>1735</SUB>> ]
+"9425" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1736</SUB>> ]
+"9428" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1737</SUB>> ]
+"9447" [label = <(soa,soa(env))<SUB>1738</SUB>> ]
+"9450" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1739</SUB>> ]
+"9456" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1740</SUB>> ]
+"9426" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1736</SUB>> ]
+"9451" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1739</SUB>> ]
+"9457" [label = <(GetI,result.GetI())<SUB>1740</SUB>> ]
+"9458" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1740</SUB>> ]
+"9432" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1737</SUB>> ]
+"9460" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1740</SUB>> ]
+"9433" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1737</SUB>> ]
+"9437" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1737</SUB>> ]
+"9444" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1737</SUB>> ]
+"9438" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1737</SUB>> ]
+"9439" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1737</SUB>> ]
+"9441" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1737</SUB>> ]
+"9415" [label = <(METHOD,CallStaticIntMethod)<SUB>1733</SUB>> ]
+"9461" [label = <(METHOD_RETURN,jint)<SUB>1733</SUB>> ]
   "9421" -> "9426" 
   "9425" -> "9428" 
   "9428" -> "9433" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/173-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/173-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/173-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/173-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticIntMethodV" {  
-"9469" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1745</SUB>> ]
-"9488" [label = <(soa,soa(env))<SUB>1746</SUB>> ]
-"9490" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();)<SUB>1747</SUB>> ]
-"9491" [label = <(GetI,InvokeWithVarArgs(soa, nullptr, mid, args).GetI())<SUB>1747</SUB>> ]
-"9492" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetI)<SUB>1747</SUB>> ]
-"9473" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1745</SUB>> ]
-"9493" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1747</SUB>> ]
-"9498" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1747</SUB>> ]
-"9474" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1745</SUB>> ]
-"9478" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1745</SUB>> ]
-"9485" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1745</SUB>> ]
-"9479" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1745</SUB>> ]
-"9480" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1745</SUB>> ]
-"9482" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1745</SUB>> ]
-"9463" [label = <(METHOD,CallStaticIntMethodV)<SUB>1744</SUB>> ]
-"9499" [label = <(METHOD_RETURN,jint)<SUB>1744</SUB>> ]
+"9469" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1744</SUB>> ]
+"9488" [label = <(soa,soa(env))<SUB>1745</SUB>> ]
+"9490" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();)<SUB>1746</SUB>> ]
+"9491" [label = <(GetI,InvokeWithVarArgs(soa, nullptr, mid, args).GetI())<SUB>1746</SUB>> ]
+"9492" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetI)<SUB>1746</SUB>> ]
+"9473" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1744</SUB>> ]
+"9493" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1746</SUB>> ]
+"9498" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1746</SUB>> ]
+"9474" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1744</SUB>> ]
+"9478" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1744</SUB>> ]
+"9485" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1744</SUB>> ]
+"9479" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1744</SUB>> ]
+"9480" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1744</SUB>> ]
+"9482" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1744</SUB>> ]
+"9463" [label = <(METHOD,CallStaticIntMethodV)<SUB>1743</SUB>> ]
+"9499" [label = <(METHOD_RETURN,jint)<SUB>1743</SUB>> ]
   "9469" -> "9474" 
   "9469" -> "9488" 
   "9488" -> "9493" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/174-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/174-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/174-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/174-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticIntMethodA" {  
-"9507" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1751</SUB>> ]
-"9526" [label = <(soa,soa(env))<SUB>1752</SUB>> ]
-"9528" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetI();,return InvokeWithJValues(soa, nullptr, mid, args).GetI();)<SUB>1753</SUB>> ]
-"9529" [label = <(GetI,InvokeWithJValues(soa, nullptr, mid, args).GetI())<SUB>1753</SUB>> ]
-"9530" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetI)<SUB>1753</SUB>> ]
-"9511" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1751</SUB>> ]
-"9531" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1753</SUB>> ]
-"9536" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1753</SUB>> ]
-"9512" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1751</SUB>> ]
-"9516" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1751</SUB>> ]
-"9523" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1751</SUB>> ]
-"9517" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1751</SUB>> ]
-"9518" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1751</SUB>> ]
-"9520" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1751</SUB>> ]
-"9501" [label = <(METHOD,CallStaticIntMethodA)<SUB>1750</SUB>> ]
-"9537" [label = <(METHOD_RETURN,jint)<SUB>1750</SUB>> ]
+"9507" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1750</SUB>> ]
+"9526" [label = <(soa,soa(env))<SUB>1751</SUB>> ]
+"9528" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetI();,return InvokeWithJValues(soa, nullptr, mid, args).GetI();)<SUB>1752</SUB>> ]
+"9529" [label = <(GetI,InvokeWithJValues(soa, nullptr, mid, args).GetI())<SUB>1752</SUB>> ]
+"9530" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetI)<SUB>1752</SUB>> ]
+"9511" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1750</SUB>> ]
+"9531" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1752</SUB>> ]
+"9536" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1752</SUB>> ]
+"9512" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1750</SUB>> ]
+"9516" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1750</SUB>> ]
+"9523" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1750</SUB>> ]
+"9517" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1750</SUB>> ]
+"9518" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1750</SUB>> ]
+"9520" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1750</SUB>> ]
+"9501" [label = <(METHOD,CallStaticIntMethodA)<SUB>1749</SUB>> ]
+"9537" [label = <(METHOD_RETURN,jint)<SUB>1749</SUB>> ]
   "9507" -> "9512" 
   "9507" -> "9526" 
   "9526" -> "9531" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/175-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/175-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/175-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/175-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticLongMethod" {  
-"9545" [label = <(va_start,va_start(ap, mid))<SUB>1758</SUB>> ]
-"9549" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1759</SUB>> ]
-"9552" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1760</SUB>> ]
-"9571" [label = <(soa,soa(env))<SUB>1761</SUB>> ]
-"9574" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1762</SUB>> ]
-"9580" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1763</SUB>> ]
-"9550" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1759</SUB>> ]
-"9575" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1762</SUB>> ]
-"9581" [label = <(GetJ,result.GetJ())<SUB>1763</SUB>> ]
-"9582" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1763</SUB>> ]
-"9556" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1760</SUB>> ]
-"9584" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1763</SUB>> ]
-"9557" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1760</SUB>> ]
-"9561" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1760</SUB>> ]
-"9568" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1760</SUB>> ]
-"9562" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1760</SUB>> ]
-"9563" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1760</SUB>> ]
-"9565" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1760</SUB>> ]
-"9539" [label = <(METHOD,CallStaticLongMethod)<SUB>1756</SUB>> ]
-"9585" [label = <(METHOD_RETURN,jlong)<SUB>1756</SUB>> ]
+"9545" [label = <(va_start,va_start(ap, mid))<SUB>1757</SUB>> ]
+"9549" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1758</SUB>> ]
+"9552" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1759</SUB>> ]
+"9571" [label = <(soa,soa(env))<SUB>1760</SUB>> ]
+"9574" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1761</SUB>> ]
+"9580" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1762</SUB>> ]
+"9550" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1758</SUB>> ]
+"9575" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1761</SUB>> ]
+"9581" [label = <(GetJ,result.GetJ())<SUB>1762</SUB>> ]
+"9582" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1762</SUB>> ]
+"9556" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1759</SUB>> ]
+"9584" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1762</SUB>> ]
+"9557" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1759</SUB>> ]
+"9561" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1759</SUB>> ]
+"9568" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1759</SUB>> ]
+"9562" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1759</SUB>> ]
+"9563" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1759</SUB>> ]
+"9565" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1759</SUB>> ]
+"9539" [label = <(METHOD,CallStaticLongMethod)<SUB>1755</SUB>> ]
+"9585" [label = <(METHOD_RETURN,jlong)<SUB>1755</SUB>> ]
   "9545" -> "9550" 
   "9549" -> "9552" 
   "9552" -> "9557" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/176-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/176-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/176-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/176-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticLongMethodV" {  
-"9593" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1767</SUB>> ]
-"9612" [label = <(soa,soa(env))<SUB>1768</SUB>> ]
-"9614" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();)<SUB>1769</SUB>> ]
-"9615" [label = <(GetJ,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ())<SUB>1769</SUB>> ]
-"9616" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ)<SUB>1769</SUB>> ]
-"9597" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1767</SUB>> ]
-"9617" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1769</SUB>> ]
-"9622" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1769</SUB>> ]
-"9598" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1767</SUB>> ]
-"9602" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1767</SUB>> ]
-"9609" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1767</SUB>> ]
-"9603" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1767</SUB>> ]
-"9604" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1767</SUB>> ]
-"9606" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1767</SUB>> ]
-"9587" [label = <(METHOD,CallStaticLongMethodV)<SUB>1766</SUB>> ]
-"9623" [label = <(METHOD_RETURN,jlong)<SUB>1766</SUB>> ]
+"9593" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1766</SUB>> ]
+"9612" [label = <(soa,soa(env))<SUB>1767</SUB>> ]
+"9614" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();)<SUB>1768</SUB>> ]
+"9615" [label = <(GetJ,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ())<SUB>1768</SUB>> ]
+"9616" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ)<SUB>1768</SUB>> ]
+"9597" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1766</SUB>> ]
+"9617" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1768</SUB>> ]
+"9622" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1768</SUB>> ]
+"9598" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1766</SUB>> ]
+"9602" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1766</SUB>> ]
+"9609" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1766</SUB>> ]
+"9603" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1766</SUB>> ]
+"9604" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1766</SUB>> ]
+"9606" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1766</SUB>> ]
+"9587" [label = <(METHOD,CallStaticLongMethodV)<SUB>1765</SUB>> ]
+"9623" [label = <(METHOD_RETURN,jlong)<SUB>1765</SUB>> ]
   "9593" -> "9598" 
   "9593" -> "9612" 
   "9612" -> "9617" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/177-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/177-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/177-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/177-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticLongMethodA" {  
-"9631" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1773</SUB>> ]
-"9650" [label = <(soa,soa(env))<SUB>1774</SUB>> ]
-"9652" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();)<SUB>1775</SUB>> ]
-"9653" [label = <(GetJ,InvokeWithJValues(soa, nullptr, mid, args).GetJ())<SUB>1775</SUB>> ]
-"9654" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetJ)<SUB>1775</SUB>> ]
-"9635" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1773</SUB>> ]
-"9655" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1775</SUB>> ]
-"9660" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1775</SUB>> ]
-"9636" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1773</SUB>> ]
-"9640" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1773</SUB>> ]
-"9647" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1773</SUB>> ]
-"9641" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1773</SUB>> ]
-"9642" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1773</SUB>> ]
-"9644" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1773</SUB>> ]
-"9625" [label = <(METHOD,CallStaticLongMethodA)<SUB>1772</SUB>> ]
-"9661" [label = <(METHOD_RETURN,jlong)<SUB>1772</SUB>> ]
+"9631" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1772</SUB>> ]
+"9650" [label = <(soa,soa(env))<SUB>1773</SUB>> ]
+"9652" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();)<SUB>1774</SUB>> ]
+"9653" [label = <(GetJ,InvokeWithJValues(soa, nullptr, mid, args).GetJ())<SUB>1774</SUB>> ]
+"9654" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetJ)<SUB>1774</SUB>> ]
+"9635" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1772</SUB>> ]
+"9655" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1774</SUB>> ]
+"9660" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1774</SUB>> ]
+"9636" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1772</SUB>> ]
+"9640" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1772</SUB>> ]
+"9647" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1772</SUB>> ]
+"9641" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1772</SUB>> ]
+"9642" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1772</SUB>> ]
+"9644" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1772</SUB>> ]
+"9625" [label = <(METHOD,CallStaticLongMethodA)<SUB>1771</SUB>> ]
+"9661" [label = <(METHOD_RETURN,jlong)<SUB>1771</SUB>> ]
   "9631" -> "9636" 
   "9631" -> "9650" 
   "9650" -> "9655" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/178-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/178-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/178-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/178-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticFloatMethod" {  
-"9669" [label = <(va_start,va_start(ap, mid))<SUB>1780</SUB>> ]
-"9673" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1781</SUB>> ]
-"9676" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1782</SUB>> ]
-"9695" [label = <(soa,soa(env))<SUB>1783</SUB>> ]
-"9698" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1784</SUB>> ]
-"9704" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1785</SUB>> ]
-"9674" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1781</SUB>> ]
-"9699" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1784</SUB>> ]
-"9705" [label = <(GetF,result.GetF())<SUB>1785</SUB>> ]
-"9706" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1785</SUB>> ]
-"9680" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1782</SUB>> ]
-"9708" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1785</SUB>> ]
-"9681" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1782</SUB>> ]
-"9685" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1782</SUB>> ]
-"9692" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1782</SUB>> ]
-"9686" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1782</SUB>> ]
-"9687" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1782</SUB>> ]
-"9689" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1782</SUB>> ]
-"9663" [label = <(METHOD,CallStaticFloatMethod)<SUB>1778</SUB>> ]
-"9709" [label = <(METHOD_RETURN,jfloat)<SUB>1778</SUB>> ]
+"9669" [label = <(va_start,va_start(ap, mid))<SUB>1779</SUB>> ]
+"9673" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1780</SUB>> ]
+"9676" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1781</SUB>> ]
+"9695" [label = <(soa,soa(env))<SUB>1782</SUB>> ]
+"9698" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1783</SUB>> ]
+"9704" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1784</SUB>> ]
+"9674" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1780</SUB>> ]
+"9699" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1783</SUB>> ]
+"9705" [label = <(GetF,result.GetF())<SUB>1784</SUB>> ]
+"9706" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1784</SUB>> ]
+"9680" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1781</SUB>> ]
+"9708" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1784</SUB>> ]
+"9681" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1781</SUB>> ]
+"9685" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1781</SUB>> ]
+"9692" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1781</SUB>> ]
+"9686" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1781</SUB>> ]
+"9687" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1781</SUB>> ]
+"9689" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1781</SUB>> ]
+"9663" [label = <(METHOD,CallStaticFloatMethod)<SUB>1777</SUB>> ]
+"9709" [label = <(METHOD_RETURN,jfloat)<SUB>1777</SUB>> ]
   "9669" -> "9674" 
   "9673" -> "9676" 
   "9676" -> "9681" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/179-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/179-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/179-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/179-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticFloatMethodV" {  
-"9717" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1789</SUB>> ]
-"9736" [label = <(soa,soa(env))<SUB>1790</SUB>> ]
-"9738" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();)<SUB>1791</SUB>> ]
-"9739" [label = <(GetF,InvokeWithVarArgs(soa, nullptr, mid, args).GetF())<SUB>1791</SUB>> ]
-"9740" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetF)<SUB>1791</SUB>> ]
-"9721" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1789</SUB>> ]
-"9741" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1791</SUB>> ]
-"9746" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1791</SUB>> ]
-"9722" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1789</SUB>> ]
-"9726" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1789</SUB>> ]
-"9733" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1789</SUB>> ]
-"9727" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1789</SUB>> ]
-"9728" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1789</SUB>> ]
-"9730" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1789</SUB>> ]
-"9711" [label = <(METHOD,CallStaticFloatMethodV)<SUB>1788</SUB>> ]
-"9747" [label = <(METHOD_RETURN,jfloat)<SUB>1788</SUB>> ]
+"9717" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1788</SUB>> ]
+"9736" [label = <(soa,soa(env))<SUB>1789</SUB>> ]
+"9738" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();)<SUB>1790</SUB>> ]
+"9739" [label = <(GetF,InvokeWithVarArgs(soa, nullptr, mid, args).GetF())<SUB>1790</SUB>> ]
+"9740" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetF)<SUB>1790</SUB>> ]
+"9721" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1788</SUB>> ]
+"9741" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1790</SUB>> ]
+"9746" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1790</SUB>> ]
+"9722" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1788</SUB>> ]
+"9726" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1788</SUB>> ]
+"9733" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1788</SUB>> ]
+"9727" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1788</SUB>> ]
+"9728" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1788</SUB>> ]
+"9730" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1788</SUB>> ]
+"9711" [label = <(METHOD,CallStaticFloatMethodV)<SUB>1787</SUB>> ]
+"9747" [label = <(METHOD_RETURN,jfloat)<SUB>1787</SUB>> ]
   "9717" -> "9722" 
   "9717" -> "9736" 
   "9736" -> "9741" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/18-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/18-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/18-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/18-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "GetClassLoader" {  
-"433" [label = <(METHOD,GetClassLoader)<SUB>348</SUB>> ]
-"436" [label = <(METHOD_RETURN,ANY)<SUB>348</SUB>> ]
+"433" [label = <(METHOD,GetClassLoader)<SUB>347</SUB>> ]
+"436" [label = <(METHOD_RETURN,ANY)<SUB>347</SUB>> ]
   "433" -> "436" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/180-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/180-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/180-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/180-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticFloatMethodA" {  
-"9755" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1795</SUB>> ]
-"9774" [label = <(soa,soa(env))<SUB>1796</SUB>> ]
-"9776" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetF();,return InvokeWithJValues(soa, nullptr, mid, args).GetF();)<SUB>1797</SUB>> ]
-"9777" [label = <(GetF,InvokeWithJValues(soa, nullptr, mid, args).GetF())<SUB>1797</SUB>> ]
-"9778" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetF)<SUB>1797</SUB>> ]
-"9759" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1795</SUB>> ]
-"9779" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1797</SUB>> ]
-"9784" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1797</SUB>> ]
-"9760" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1795</SUB>> ]
-"9764" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1795</SUB>> ]
-"9771" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1795</SUB>> ]
-"9765" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1795</SUB>> ]
-"9766" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1795</SUB>> ]
-"9768" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1795</SUB>> ]
-"9749" [label = <(METHOD,CallStaticFloatMethodA)<SUB>1794</SUB>> ]
-"9785" [label = <(METHOD_RETURN,jfloat)<SUB>1794</SUB>> ]
+"9755" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1794</SUB>> ]
+"9774" [label = <(soa,soa(env))<SUB>1795</SUB>> ]
+"9776" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetF();,return InvokeWithJValues(soa, nullptr, mid, args).GetF();)<SUB>1796</SUB>> ]
+"9777" [label = <(GetF,InvokeWithJValues(soa, nullptr, mid, args).GetF())<SUB>1796</SUB>> ]
+"9778" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetF)<SUB>1796</SUB>> ]
+"9759" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1794</SUB>> ]
+"9779" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1796</SUB>> ]
+"9784" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1796</SUB>> ]
+"9760" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1794</SUB>> ]
+"9764" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1794</SUB>> ]
+"9771" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1794</SUB>> ]
+"9765" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1794</SUB>> ]
+"9766" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1794</SUB>> ]
+"9768" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1794</SUB>> ]
+"9749" [label = <(METHOD,CallStaticFloatMethodA)<SUB>1793</SUB>> ]
+"9785" [label = <(METHOD_RETURN,jfloat)<SUB>1793</SUB>> ]
   "9755" -> "9760" 
   "9755" -> "9774" 
   "9774" -> "9779" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/181-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/181-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/181-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/181-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticDoubleMethod" {  
-"9793" [label = <(va_start,va_start(ap, mid))<SUB>1802</SUB>> ]
-"9797" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1803</SUB>> ]
-"9800" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1804</SUB>> ]
-"9819" [label = <(soa,soa(env))<SUB>1805</SUB>> ]
-"9822" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1806</SUB>> ]
-"9828" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1807</SUB>> ]
-"9798" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1803</SUB>> ]
-"9823" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1806</SUB>> ]
-"9829" [label = <(GetD,result.GetD())<SUB>1807</SUB>> ]
-"9830" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1807</SUB>> ]
-"9804" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1804</SUB>> ]
-"9832" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1807</SUB>> ]
-"9805" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1804</SUB>> ]
-"9809" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1804</SUB>> ]
-"9816" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1804</SUB>> ]
-"9810" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1804</SUB>> ]
-"9811" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1804</SUB>> ]
-"9813" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1804</SUB>> ]
-"9787" [label = <(METHOD,CallStaticDoubleMethod)<SUB>1800</SUB>> ]
-"9833" [label = <(METHOD_RETURN,jdouble)<SUB>1800</SUB>> ]
+"9793" [label = <(va_start,va_start(ap, mid))<SUB>1801</SUB>> ]
+"9797" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1802</SUB>> ]
+"9800" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1803</SUB>> ]
+"9819" [label = <(soa,soa(env))<SUB>1804</SUB>> ]
+"9822" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1805</SUB>> ]
+"9828" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1806</SUB>> ]
+"9798" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1802</SUB>> ]
+"9823" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1805</SUB>> ]
+"9829" [label = <(GetD,result.GetD())<SUB>1806</SUB>> ]
+"9830" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1806</SUB>> ]
+"9804" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1803</SUB>> ]
+"9832" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1806</SUB>> ]
+"9805" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1803</SUB>> ]
+"9809" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1803</SUB>> ]
+"9816" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1803</SUB>> ]
+"9810" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1803</SUB>> ]
+"9811" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1803</SUB>> ]
+"9813" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1803</SUB>> ]
+"9787" [label = <(METHOD,CallStaticDoubleMethod)<SUB>1799</SUB>> ]
+"9833" [label = <(METHOD_RETURN,jdouble)<SUB>1799</SUB>> ]
   "9793" -> "9798" 
   "9797" -> "9800" 
   "9800" -> "9805" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/182-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/182-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/182-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/182-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticDoubleMethodV" {  
-"9841" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1811</SUB>> ]
-"9860" [label = <(soa,soa(env))<SUB>1812</SUB>> ]
-"9862" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();)<SUB>1813</SUB>> ]
-"9863" [label = <(GetD,InvokeWithVarArgs(soa, nullptr, mid, args).GetD())<SUB>1813</SUB>> ]
-"9864" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetD)<SUB>1813</SUB>> ]
-"9845" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1811</SUB>> ]
-"9865" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1813</SUB>> ]
-"9870" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1813</SUB>> ]
-"9846" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1811</SUB>> ]
-"9850" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1811</SUB>> ]
-"9857" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1811</SUB>> ]
-"9851" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1811</SUB>> ]
-"9852" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1811</SUB>> ]
-"9854" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1811</SUB>> ]
-"9835" [label = <(METHOD,CallStaticDoubleMethodV)<SUB>1810</SUB>> ]
-"9871" [label = <(METHOD_RETURN,jdouble)<SUB>1810</SUB>> ]
+"9841" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1810</SUB>> ]
+"9860" [label = <(soa,soa(env))<SUB>1811</SUB>> ]
+"9862" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();)<SUB>1812</SUB>> ]
+"9863" [label = <(GetD,InvokeWithVarArgs(soa, nullptr, mid, args).GetD())<SUB>1812</SUB>> ]
+"9864" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetD)<SUB>1812</SUB>> ]
+"9845" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1810</SUB>> ]
+"9865" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1812</SUB>> ]
+"9870" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1812</SUB>> ]
+"9846" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1810</SUB>> ]
+"9850" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1810</SUB>> ]
+"9857" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1810</SUB>> ]
+"9851" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1810</SUB>> ]
+"9852" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1810</SUB>> ]
+"9854" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1810</SUB>> ]
+"9835" [label = <(METHOD,CallStaticDoubleMethodV)<SUB>1809</SUB>> ]
+"9871" [label = <(METHOD_RETURN,jdouble)<SUB>1809</SUB>> ]
   "9841" -> "9846" 
   "9841" -> "9860" 
   "9860" -> "9865" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/183-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/183-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/183-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/183-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticDoubleMethodA" {  
-"9879" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1817</SUB>> ]
-"9898" [label = <(soa,soa(env))<SUB>1818</SUB>> ]
-"9900" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetD();,return InvokeWithJValues(soa, nullptr, mid, args).GetD();)<SUB>1819</SUB>> ]
-"9901" [label = <(GetD,InvokeWithJValues(soa, nullptr, mid, args).GetD())<SUB>1819</SUB>> ]
-"9902" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetD)<SUB>1819</SUB>> ]
-"9883" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1817</SUB>> ]
-"9903" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1819</SUB>> ]
-"9908" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1819</SUB>> ]
-"9884" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1817</SUB>> ]
-"9888" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1817</SUB>> ]
-"9895" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1817</SUB>> ]
-"9889" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1817</SUB>> ]
-"9890" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1817</SUB>> ]
-"9892" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1817</SUB>> ]
-"9873" [label = <(METHOD,CallStaticDoubleMethodA)<SUB>1816</SUB>> ]
-"9909" [label = <(METHOD_RETURN,jdouble)<SUB>1816</SUB>> ]
+"9879" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1816</SUB>> ]
+"9898" [label = <(soa,soa(env))<SUB>1817</SUB>> ]
+"9900" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetD();,return InvokeWithJValues(soa, nullptr, mid, args).GetD();)<SUB>1818</SUB>> ]
+"9901" [label = <(GetD,InvokeWithJValues(soa, nullptr, mid, args).GetD())<SUB>1818</SUB>> ]
+"9902" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetD)<SUB>1818</SUB>> ]
+"9883" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1816</SUB>> ]
+"9903" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1818</SUB>> ]
+"9908" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1818</SUB>> ]
+"9884" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1816</SUB>> ]
+"9888" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1816</SUB>> ]
+"9895" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1816</SUB>> ]
+"9889" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1816</SUB>> ]
+"9890" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1816</SUB>> ]
+"9892" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1816</SUB>> ]
+"9873" [label = <(METHOD,CallStaticDoubleMethodA)<SUB>1815</SUB>> ]
+"9909" [label = <(METHOD_RETURN,jdouble)<SUB>1815</SUB>> ]
   "9879" -> "9884" 
   "9879" -> "9898" 
   "9898" -> "9903" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/184-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/184-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/184-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/184-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,19 +1,19 @@
 digraph "CallStaticVoidMethod" {  
-"9917" [label = <(va_start,va_start(ap, mid))<SUB>1824</SUB>> ]
-"9921" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1825</SUB>> ]
-"9924" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1826</SUB>> ]
-"9942" [label = <(soa,soa(env))<SUB>1827</SUB>> ]
-"9944" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1828</SUB>> ]
-"9922" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1825</SUB>> ]
-"9928" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1826</SUB>> ]
-"9929" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1826</SUB>> ]
-"9933" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1826</SUB>> ]
-"9940" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1826</SUB>> ]
-"9934" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1826</SUB>> ]
-"9935" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1826</SUB>> ]
-"9937" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1826</SUB>> ]
-"9911" [label = <(METHOD,CallStaticVoidMethod)<SUB>1822</SUB>> ]
-"9949" [label = <(METHOD_RETURN,void)<SUB>1822</SUB>> ]
+"9917" [label = <(va_start,va_start(ap, mid))<SUB>1823</SUB>> ]
+"9921" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1824</SUB>> ]
+"9924" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1825</SUB>> ]
+"9942" [label = <(soa,soa(env))<SUB>1826</SUB>> ]
+"9944" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1827</SUB>> ]
+"9922" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1824</SUB>> ]
+"9928" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1825</SUB>> ]
+"9929" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1825</SUB>> ]
+"9933" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1825</SUB>> ]
+"9940" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1825</SUB>> ]
+"9934" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1825</SUB>> ]
+"9935" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1825</SUB>> ]
+"9937" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1825</SUB>> ]
+"9911" [label = <(METHOD,CallStaticVoidMethod)<SUB>1821</SUB>> ]
+"9949" [label = <(METHOD_RETURN,void)<SUB>1821</SUB>> ]
   "9917" -> "9922" 
   "9921" -> "9924" 
   "9924" -> "9929" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/185-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/185-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/185-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/185-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,16 +1,16 @@
 digraph "CallStaticVoidMethodV" {  
-"9957" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1832</SUB>> ]
-"9975" [label = <(soa,soa(env))<SUB>1833</SUB>> ]
-"9977" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1834</SUB>> ]
-"9961" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1832</SUB>> ]
-"9962" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1832</SUB>> ]
-"9966" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1832</SUB>> ]
-"9973" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1832</SUB>> ]
-"9967" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1832</SUB>> ]
-"9968" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1832</SUB>> ]
-"9970" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1832</SUB>> ]
-"9951" [label = <(METHOD,CallStaticVoidMethodV)<SUB>1831</SUB>> ]
-"9982" [label = <(METHOD_RETURN,void)<SUB>1831</SUB>> ]
+"9957" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1831</SUB>> ]
+"9975" [label = <(soa,soa(env))<SUB>1832</SUB>> ]
+"9977" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1833</SUB>> ]
+"9961" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1831</SUB>> ]
+"9962" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1831</SUB>> ]
+"9966" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1831</SUB>> ]
+"9973" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1831</SUB>> ]
+"9967" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1831</SUB>> ]
+"9968" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1831</SUB>> ]
+"9970" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1831</SUB>> ]
+"9951" [label = <(METHOD,CallStaticVoidMethodV)<SUB>1830</SUB>> ]
+"9982" [label = <(METHOD_RETURN,void)<SUB>1830</SUB>> ]
   "9957" -> "9962" 
   "9957" -> "9975" 
   "9975" -> "9977" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/186-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/186-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/186-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/186-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,16 +1,16 @@
 digraph "CallStaticVoidMethodA" {  
-"9990" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1838</SUB>> ]
-"10008" [label = <(soa,soa(env))<SUB>1839</SUB>> ]
-"10010" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1840</SUB>> ]
-"9994" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1838</SUB>> ]
-"9995" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1838</SUB>> ]
-"9999" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1838</SUB>> ]
-"10006" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1838</SUB>> ]
-"10000" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1838</SUB>> ]
-"10001" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1838</SUB>> ]
-"10003" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1838</SUB>> ]
-"9984" [label = <(METHOD,CallStaticVoidMethodA)<SUB>1837</SUB>> ]
-"10015" [label = <(METHOD_RETURN,void)<SUB>1837</SUB>> ]
+"9990" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1837</SUB>> ]
+"10008" [label = <(soa,soa(env))<SUB>1838</SUB>> ]
+"10010" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1839</SUB>> ]
+"9994" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1837</SUB>> ]
+"9995" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1837</SUB>> ]
+"9999" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1837</SUB>> ]
+"10006" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1837</SUB>> ]
+"10000" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1837</SUB>> ]
+"10001" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1837</SUB>> ]
+"10003" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1837</SUB>> ]
+"9984" [label = <(METHOD,CallStaticVoidMethodA)<SUB>1836</SUB>> ]
+"10015" [label = <(METHOD_RETURN,void)<SUB>1836</SUB>> ]
   "9990" -> "9995" 
   "9990" -> "10008" 
   "10008" -> "10010" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/187-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/187-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/187-cfg.dot	2023-06-07 19:34:35.157389615 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/187-cfg.dot	2023-06-07 19:34:41.687389011 +0330
@@ -1,36 +1,36 @@
 digraph "NewString" {  
-"10058" [label = <(soa,soa(env))<SUB>1852</SUB>> ]
-"10061" [label = <(&lt;operator&gt;.assignment,* result = mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1853</SUB>> ]
-"10075" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1854</SUB>> ]
-"10023" [label = <(UNLIKELY,UNLIKELY(char_count &lt; 0))<SUB>1844</SUB>> ]
-"10039" [label = <(UNLIKELY,UNLIKELY(chars == nullptr &amp;&amp; char_count &gt; 0))<SUB>1848</SUB>> ]
-"10063" [label = <(mirror::String::AllocFromUtf16,mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1853</SUB>> ]
-"10076" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1854</SUB>> ]
-"10024" [label = <(&lt;operator&gt;.lessThan,char_count &lt; 0)<SUB>1844</SUB>> ]
-"10028" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;char_count &lt; 0: %d&quot;, char_count))<SUB>1845</SUB>> ]
-"10036" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1846</SUB>> ]
-"10040" [label = <(&lt;operator&gt;.logicalAnd,chars == nullptr &amp;&amp; char_count &gt; 0)<SUB>1848</SUB>> ]
-"10048" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;chars == null &amp;&amp; char_count &gt; 0&quot;))<SUB>1849</SUB>> ]
-"10055" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1850</SUB>> ]
-"10064" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromUtf16)<SUB>1853</SUB>> ]
-"10069" [label = <(Self,soa.Self())<SUB>1853</SUB>> ]
-"10077" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1854</SUB>> ]
-"10029" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1845</SUB>> ]
-"10041" [label = <(&lt;operator&gt;.equals,chars == nullptr)<SUB>1848</SUB>> ]
-"10044" [label = <(&lt;operator&gt;.greaterThan,char_count &gt; 0)<SUB>1848</SUB>> ]
-"10049" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1849</SUB>> ]
-"10065" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1853</SUB>> ]
-"10068" [label = <(FIELD_IDENTIFIER,AllocFromUtf16,AllocFromUtf16)<SUB>1853</SUB>> ]
-"10070" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1853</SUB>> ]
-"10078" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1854</SUB>> ]
-"10030" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1845</SUB>> ]
-"10032" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1845</SUB>> ]
-"10050" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1849</SUB>> ]
-"10052" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1849</SUB>> ]
-"10072" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1853</SUB>> ]
-"10080" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1854</SUB>> ]
-"10017" [label = <(METHOD,NewString)<SUB>1843</SUB>> ]
-"10083" [label = <(METHOD_RETURN,jstring)<SUB>1843</SUB>> ]
+"10058" [label = <(soa,soa(env))<SUB>1851</SUB>> ]
+"10061" [label = <(&lt;operator&gt;.assignment,* result = mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1852</SUB>> ]
+"10075" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1853</SUB>> ]
+"10023" [label = <(UNLIKELY,UNLIKELY(char_count &lt; 0))<SUB>1843</SUB>> ]
+"10039" [label = <(UNLIKELY,UNLIKELY(chars == nullptr &amp;&amp; char_count &gt; 0))<SUB>1847</SUB>> ]
+"10063" [label = <(mirror::String::AllocFromUtf16,mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>1852</SUB>> ]
+"10076" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1853</SUB>> ]
+"10024" [label = <(&lt;operator&gt;.lessThan,char_count &lt; 0)<SUB>1843</SUB>> ]
+"10028" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;char_count &lt; 0: %d&quot;, char_count))<SUB>1844</SUB>> ]
+"10036" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1845</SUB>> ]
+"10040" [label = <(&lt;operator&gt;.logicalAnd,chars == nullptr &amp;&amp; char_count &gt; 0)<SUB>1847</SUB>> ]
+"10048" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;chars == null &amp;&amp; char_count &gt; 0&quot;))<SUB>1848</SUB>> ]
+"10055" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1849</SUB>> ]
+"10064" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromUtf16)<SUB>1852</SUB>> ]
+"10069" [label = <(Self,soa.Self())<SUB>1852</SUB>> ]
+"10077" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1853</SUB>> ]
+"10029" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1844</SUB>> ]
+"10041" [label = <(&lt;operator&gt;.equals,chars == nullptr)<SUB>1847</SUB>> ]
+"10044" [label = <(&lt;operator&gt;.greaterThan,char_count &gt; 0)<SUB>1847</SUB>> ]
+"10049" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>1848</SUB>> ]
+"10065" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1852</SUB>> ]
+"10068" [label = <(FIELD_IDENTIFIER,AllocFromUtf16,AllocFromUtf16)<SUB>1852</SUB>> ]
+"10070" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1852</SUB>> ]
+"10078" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1853</SUB>> ]
+"10030" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1844</SUB>> ]
+"10032" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1844</SUB>> ]
+"10050" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1848</SUB>> ]
+"10052" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>1848</SUB>> ]
+"10072" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1852</SUB>> ]
+"10080" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1853</SUB>> ]
+"10017" [label = <(METHOD,NewString)<SUB>1842</SUB>> ]
+"10083" [label = <(METHOD_RETURN,jstring)<SUB>1842</SUB>> ]
   "10058" -> "10065" 
   "10061" -> "10080" 
   "10075" -> "10083" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/188-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/188-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/188-cfg.dot	2023-06-07 19:34:35.167389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/188-cfg.dot	2023-06-07 19:34:41.697389012 +0330
@@ -1,156 +1,154 @@
 digraph "NewStringUTF" {  
-"10097" [label = <(&lt;operator&gt;.assignment,utf8_length = strlen(utf))<SUB>1866</SUB>> ]
-"10147" [label = <(&lt;operator&gt;.assignment,replacement_utf_pos = 0u)<SUB>1878</SUB>> ]
-"10151" [label = <(UNKNOWN,t,t)<SUB>1879</SUB>> ]
-"10152" [label = <(UNKNOWN,utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {},utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {})<SUB>1879</SUB>> ]
-"10153" [label = <(UNKNOWN,,\012 /*bad=*/ []() { return true; },,\012 /*bad=*/ []() { return true; })<SUB>1882</SUB>> ]
-"10154" [label = <(UNKNOWN,);,);)<SUB>1883</SUB>> ]
-"10246" [label = <(DCHECK_LE,DCHECK_LE(utf16_length, utf8_length))<SUB>1919</SUB>> ]
-"10249" [label = <(DCHECK_LE,DCHECK_LE(utf8_length, static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1920</SUB>> ]
-"10264" [label = <(soa,soa(env))<SUB>1922</SUB>> ]
-"10267" [label = <(&lt;operator&gt;.assignment,* result =\012        mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1923</SUB>> ]
-"10282" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1925</SUB>> ]
-"10090" [label = <(&lt;operator&gt;.equals,utf == nullptr)<SUB>1858</SUB>> ]
-"10099" [label = <(strlen,strlen(utf))<SUB>1866</SUB>> ]
-"10102" [label = <(UNLIKELY,UNLIKELY(utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1867</SUB>> ]
-"10156" [label = <(UNLIKELY,UNLIKELY(utf8_length != 0u &amp;&amp; utf16_length == 0u))<SUB>1884</SUB>> ]
-"10251" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1920</SUB>> ]
-"10269" [label = <(mirror::String::AllocFromModifiedUtf8,mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1924</SUB>> ]
-"10283" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1925</SUB>> ]
-"10094" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1859</SUB>> ]
-"10103" [label = <(&lt;operator&gt;.greaterThan,utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1867</SUB>> ]
-"10119" [label = <(&lt;operator&gt;.assignment,error =\012          android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1871</SUB>> ]
-"10130" [label = <(soa,soa(env))<SUB>1873</SUB>> ]
-"10132" [label = <(ThrowOutOfMemoryError,soa.Self()-&gt;ThrowOutOfMemoryError(error.c_str()))<SUB>1874</SUB>> ]
-"10143" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1875</SUB>> ]
-"10157" [label = <(&lt;operator&gt;.logicalAnd,utf8_length != 0u &amp;&amp; utf16_length == 0u)<SUB>1884</SUB>> ]
-"10165" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;172655291&quot;))<SUB>1886</SUB>> ]
-"10169" [label = <(&lt;operator&gt;.assignment,kMinDelay = UINT64_C(10000000000))<SUB>1888</SUB>> ]
-"10174" [label = <(prev_bad_input_time,prev_bad_input_time(UINT64_C(0)))<SUB>1889</SUB>> ]
-"10178" [label = <(&lt;operator&gt;.assignment,prev_time = prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1890</SUB>> ]
-"10188" [label = <(&lt;operator&gt;.assignment,now = NanoTime())<SUB>1891</SUB>> ]
-"10216" [label = <(reset,replacement_utf.reset(new char[utf8_length + 1u]))<SUB>1897</SUB>> ]
-"10222" [label = <(&lt;operator&gt;.assignment,utf16_length = VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1898</SUB>> ]
-"10229" [label = <(DCHECK_LE,DCHECK_LE(replacement_utf_pos, utf8_length))<SUB>1914</SUB>> ]
-"10232" [label = <(&lt;operator&gt;.assignment,replacement_utf[replacement_utf_pos] = 0)<SUB>1915</SUB>> ]
-"10237" [label = <(&lt;operator&gt;.assignment,utf = replacement_utf.get())<SUB>1916</SUB>> ]
-"10243" [label = <(&lt;operator&gt;.assignment,utf8_length = replacement_utf_pos)<SUB>1917</SUB>> ]
-"10252" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1920</SUB>> ]
-"10253" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1920</SUB>> ]
-"10270" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromModifiedUtf8)<SUB>1924</SUB>> ]
-"10275" [label = <(Self,soa.Self())<SUB>1924</SUB>> ]
-"10284" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1925</SUB>> ]
-"10105" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1867</SUB>> ]
-"10121" [label = <(android::base::StringPrintf,android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1872</SUB>> ]
-"10133" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowOutOfMemoryError)<SUB>1874</SUB>> ]
-"10139" [label = <(c_str,error.c_str())<SUB>1874</SUB>> ]
-"10158" [label = <(&lt;operator&gt;.notEquals,utf8_length != 0u)<SUB>1884</SUB>> ]
-"10161" [label = <(&lt;operator&gt;.equals,utf16_length == 0u)<SUB>1884</SUB>> ]
-"10171" [label = <(UINT64_C,UINT64_C(10000000000))<SUB>1888</SUB>> ]
-"10175" [label = <(UINT64_C,UINT64_C(0))<SUB>1889</SUB>> ]
-"10180" [label = <(load,prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1890</SUB>> ]
-"10190" [label = <(NanoTime,NanoTime())<SUB>1891</SUB>> ]
-"10192" [label = <(&lt;operator&gt;.logicalAnd,(prev_time == 0u || now - prev_time &gt;= kMinDelay) &amp;&amp;\012          prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1892</SUB>> ]
-"10217" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.reset)<SUB>1897</SUB>> ]
-"10220" [label = <(&lt;operator&gt;.new,new char[utf8_length + 1u])<SUB>1897</SUB>> ]
-"10224" [label = <(VisitModifiedUtf8Chars,VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1898</SUB>> ]
-"10233" [label = <(&lt;operator&gt;.indirectIndexAccess,replacement_utf[replacement_utf_pos])<SUB>1915</SUB>> ]
-"10239" [label = <(get,replacement_utf.get())<SUB>1916</SUB>> ]
-"10254" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1920</SUB>> ]
-"10259" [label = <(::max,::max())<SUB>1920</SUB>> ]
-"10271" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1924</SUB>> ]
-"10274" [label = <(FIELD_IDENTIFIER,AllocFromModifiedUtf8,AllocFromModifiedUtf8)<SUB>1924</SUB>> ]
-"10276" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1924</SUB>> ]
-"10285" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1925</SUB>> ]
-"10106" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1867</SUB>> ]
-"10107" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1867</SUB>> ]
-"10122" [label = <(&lt;operator&gt;.fieldAccess,android::base::StringPrintf)<SUB>1872</SUB>> ]
-"10134" [label = <(Self,soa.Self())<SUB>1874</SUB>> ]
-"10138" [label = <(FIELD_IDENTIFIER,ThrowOutOfMemoryError,ThrowOutOfMemoryError)<SUB>1874</SUB>> ]
-"10140" [label = <(&lt;operator&gt;.fieldAccess,error.c_str)<SUB>1874</SUB>> ]
-"10181" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.load)<SUB>1890</SUB>> ]
-"10184" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1890</SUB>> ]
-"10193" [label = <(&lt;operator&gt;.logicalOr,prev_time == 0u || now - prev_time &gt;= kMinDelay)<SUB>1892</SUB>> ]
-"10202" [label = <(compare_exchange_strong,prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1893</SUB>> ]
-"10212" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Invalid UTF-8 input to JNI::NewStringUTF()&quot;)<SUB>1894</SUB>> ]
-"10219" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>1897</SUB>> ]
-"10227" [label = <(METHOD_REF,ANY anonymous_lambda_9 (const char* ptr,size_t length),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1901</SUB>> ]
-"10228" [label = <(METHOD_REF,ANY anonymous_lambda_10 (),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1906</SUB>> ]
-"10240" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.get)<SUB>1916</SUB>> ]
-"10255" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1920</SUB>> ]
-"10260" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1920</SUB>> ]
-"10278" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1924</SUB>> ]
-"10287" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1925</SUB>> ]
-"10108" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1867</SUB>> ]
-"10113" [label = <(::max,::max())<SUB>1867</SUB>> ]
-"10123" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>1872</SUB>> ]
-"10126" [label = <(FIELD_IDENTIFIER,StringPrintf,StringPrintf)<SUB>1872</SUB>> ]
-"10135" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1874</SUB>> ]
-"10142" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1874</SUB>> ]
-"10183" [label = <(FIELD_IDENTIFIER,load,load)<SUB>1890</SUB>> ]
-"10186" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1890</SUB>> ]
-"10194" [label = <(&lt;operator&gt;.equals,prev_time == 0u)<SUB>1892</SUB>> ]
-"10197" [label = <(&lt;operator&gt;.greaterEqualsThan,now - prev_time &gt;= kMinDelay)<SUB>1892</SUB>> ]
-"10203" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.compare_exchange_strong)<SUB>1893</SUB>> ]
-"10208" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1893</SUB>> ]
-"10213" [label = <(LOG,LOG(ERROR))<SUB>1894</SUB>> ]
-"10242" [label = <(FIELD_IDENTIFIER,get,get)<SUB>1916</SUB>> ]
-"10257" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1920</SUB>> ]
-"10262" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1920</SUB>> ]
-"10109" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1867</SUB>> ]
-"10114" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1867</SUB>> ]
-"10137" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1874</SUB>> ]
-"10198" [label = <(&lt;operator&gt;.subtraction,now - prev_time)<SUB>1892</SUB>> ]
-"10205" [label = <(FIELD_IDENTIFIER,compare_exchange_strong,compare_exchange_strong)<SUB>1893</SUB>> ]
-"10210" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1893</SUB>> ]
-"10111" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1867</SUB>> ]
-"10116" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1867</SUB>> ]
-"10085" [label = <(METHOD,NewStringUTF)<SUB>1857</SUB>> ]
-"10290" [label = <(METHOD_RETURN,jstring)<SUB>1857</SUB>> ]
+"10097" [label = <(&lt;operator&gt;.assignment,utf8_length = strlen(utf))<SUB>1865</SUB>> ]
+"10147" [label = <(&lt;operator&gt;.assignment,replacement_utf_pos = 0u)<SUB>1877</SUB>> ]
+"10151" [label = <(UNKNOWN,t,t)<SUB>1878</SUB>> ]
+"10152" [label = <(UNKNOWN,utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {},utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {})<SUB>1878</SUB>> ]
+"10153" [label = <(UNKNOWN,,\012 /*bad=*/ []() { return true; },,\012 /*bad=*/ []() { return true; })<SUB>1881</SUB>> ]
+"10154" [label = <(UNKNOWN,);,);)<SUB>1882</SUB>> ]
+"10243" [label = <(DCHECK_LE,DCHECK_LE(utf16_length, utf8_length))<SUB>1917</SUB>> ]
+"10246" [label = <(DCHECK_LE,DCHECK_LE(utf8_length, static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1918</SUB>> ]
+"10261" [label = <(soa,soa(env))<SUB>1920</SUB>> ]
+"10264" [label = <(&lt;operator&gt;.assignment,* result =\012        mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1921</SUB>> ]
+"10279" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>1923</SUB>> ]
+"10090" [label = <(&lt;operator&gt;.equals,utf == nullptr)<SUB>1857</SUB>> ]
+"10099" [label = <(strlen,strlen(utf))<SUB>1865</SUB>> ]
+"10102" [label = <(UNLIKELY,UNLIKELY(utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>1866</SUB>> ]
+"10156" [label = <(UNLIKELY,UNLIKELY(utf8_length != 0u &amp;&amp; utf16_length == 0u))<SUB>1883</SUB>> ]
+"10248" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1918</SUB>> ]
+"10266" [label = <(mirror::String::AllocFromModifiedUtf8,mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>1922</SUB>> ]
+"10280" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>1923</SUB>> ]
+"10094" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1858</SUB>> ]
+"10103" [label = <(&lt;operator&gt;.greaterThan,utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1866</SUB>> ]
+"10119" [label = <(&lt;operator&gt;.assignment,error =\012          android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1870</SUB>> ]
+"10130" [label = <(soa,soa(env))<SUB>1872</SUB>> ]
+"10132" [label = <(ThrowOutOfMemoryError,soa.Self()-&gt;ThrowOutOfMemoryError(error.c_str()))<SUB>1873</SUB>> ]
+"10143" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1874</SUB>> ]
+"10157" [label = <(&lt;operator&gt;.logicalAnd,utf8_length != 0u &amp;&amp; utf16_length == 0u)<SUB>1883</SUB>> ]
+"10166" [label = <(&lt;operator&gt;.assignment,kMinDelay = UINT64_C(10000000000))<SUB>1886</SUB>> ]
+"10171" [label = <(prev_bad_input_time,prev_bad_input_time(UINT64_C(0)))<SUB>1887</SUB>> ]
+"10175" [label = <(&lt;operator&gt;.assignment,prev_time = prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1888</SUB>> ]
+"10185" [label = <(&lt;operator&gt;.assignment,now = NanoTime())<SUB>1889</SUB>> ]
+"10213" [label = <(reset,replacement_utf.reset(new char[utf8_length + 1u]))<SUB>1895</SUB>> ]
+"10219" [label = <(&lt;operator&gt;.assignment,utf16_length = VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1896</SUB>> ]
+"10226" [label = <(DCHECK_LE,DCHECK_LE(replacement_utf_pos, utf8_length))<SUB>1912</SUB>> ]
+"10229" [label = <(&lt;operator&gt;.assignment,replacement_utf[replacement_utf_pos] = 0)<SUB>1913</SUB>> ]
+"10234" [label = <(&lt;operator&gt;.assignment,utf = replacement_utf.get())<SUB>1914</SUB>> ]
+"10240" [label = <(&lt;operator&gt;.assignment,utf8_length = replacement_utf_pos)<SUB>1915</SUB>> ]
+"10249" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1918</SUB>> ]
+"10250" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1918</SUB>> ]
+"10267" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromModifiedUtf8)<SUB>1922</SUB>> ]
+"10272" [label = <(Self,soa.Self())<SUB>1922</SUB>> ]
+"10281" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>1923</SUB>> ]
+"10105" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>1866</SUB>> ]
+"10121" [label = <(android::base::StringPrintf,android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>1871</SUB>> ]
+"10133" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowOutOfMemoryError)<SUB>1873</SUB>> ]
+"10139" [label = <(c_str,error.c_str())<SUB>1873</SUB>> ]
+"10158" [label = <(&lt;operator&gt;.notEquals,utf8_length != 0u)<SUB>1883</SUB>> ]
+"10161" [label = <(&lt;operator&gt;.equals,utf16_length == 0u)<SUB>1883</SUB>> ]
+"10168" [label = <(UINT64_C,UINT64_C(10000000000))<SUB>1886</SUB>> ]
+"10172" [label = <(UINT64_C,UINT64_C(0))<SUB>1887</SUB>> ]
+"10177" [label = <(load,prev_bad_input_time.load(std::memory_order_relaxed))<SUB>1888</SUB>> ]
+"10187" [label = <(NanoTime,NanoTime())<SUB>1889</SUB>> ]
+"10189" [label = <(&lt;operator&gt;.logicalAnd,(prev_time == 0u || now - prev_time &gt;= kMinDelay) &amp;&amp;\012          prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1890</SUB>> ]
+"10214" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.reset)<SUB>1895</SUB>> ]
+"10217" [label = <(&lt;operator&gt;.new,new char[utf8_length + 1u])<SUB>1895</SUB>> ]
+"10221" [label = <(VisitModifiedUtf8Chars,VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1896</SUB>> ]
+"10230" [label = <(&lt;operator&gt;.indirectIndexAccess,replacement_utf[replacement_utf_pos])<SUB>1913</SUB>> ]
+"10236" [label = <(get,replacement_utf.get())<SUB>1914</SUB>> ]
+"10251" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1918</SUB>> ]
+"10256" [label = <(::max,::max())<SUB>1918</SUB>> ]
+"10268" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1922</SUB>> ]
+"10271" [label = <(FIELD_IDENTIFIER,AllocFromModifiedUtf8,AllocFromModifiedUtf8)<SUB>1922</SUB>> ]
+"10273" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1922</SUB>> ]
+"10282" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1923</SUB>> ]
+"10106" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>1866</SUB>> ]
+"10107" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>1866</SUB>> ]
+"10122" [label = <(&lt;operator&gt;.fieldAccess,android::base::StringPrintf)<SUB>1871</SUB>> ]
+"10134" [label = <(Self,soa.Self())<SUB>1873</SUB>> ]
+"10138" [label = <(FIELD_IDENTIFIER,ThrowOutOfMemoryError,ThrowOutOfMemoryError)<SUB>1873</SUB>> ]
+"10140" [label = <(&lt;operator&gt;.fieldAccess,error.c_str)<SUB>1873</SUB>> ]
+"10178" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.load)<SUB>1888</SUB>> ]
+"10181" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1888</SUB>> ]
+"10190" [label = <(&lt;operator&gt;.logicalOr,prev_time == 0u || now - prev_time &gt;= kMinDelay)<SUB>1890</SUB>> ]
+"10199" [label = <(compare_exchange_strong,prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>1891</SUB>> ]
+"10209" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Invalid UTF-8 input to JNI::NewStringUTF()&quot;)<SUB>1892</SUB>> ]
+"10216" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>1895</SUB>> ]
+"10224" [label = <(METHOD_REF,ANY anonymous_lambda_9 (const char* ptr,size_t length),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1899</SUB>> ]
+"10225" [label = <(METHOD_REF,ANY anonymous_lambda_10 (),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            DCHECK_GE(utf8_length - replacement_utf_pos, length);\012            memcpy(&amp;replacement_utf[replacement_utf_pos], ptr, length);\012            replacement_utf_pos += length;\012 },\012 /*bad=*/ [&amp;]() {\012            DCHECK_GE(utf8_length - replacement_utf_pos, sizeof(kBadUtf8ReplacementChar) - 1u);\012            memcpy(&amp;replacement_utf[replacement_utf_pos],\012                   kBadUtf8ReplacementChar,\012 sizeof(kBadUtf8ReplacementChar) - 1u);\012            replacement_utf_pos += sizeof(kBadUtf8ReplacementChar) - 1u;\012 return false; // Continue processing.\012 }))<SUB>1904</SUB>> ]
+"10237" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.get)<SUB>1914</SUB>> ]
+"10252" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1918</SUB>> ]
+"10257" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1918</SUB>> ]
+"10275" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1922</SUB>> ]
+"10284" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1923</SUB>> ]
+"10108" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>1866</SUB>> ]
+"10113" [label = <(::max,::max())<SUB>1866</SUB>> ]
+"10123" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>1871</SUB>> ]
+"10126" [label = <(FIELD_IDENTIFIER,StringPrintf,StringPrintf)<SUB>1871</SUB>> ]
+"10135" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1873</SUB>> ]
+"10142" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1873</SUB>> ]
+"10180" [label = <(FIELD_IDENTIFIER,load,load)<SUB>1888</SUB>> ]
+"10183" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1888</SUB>> ]
+"10191" [label = <(&lt;operator&gt;.equals,prev_time == 0u)<SUB>1890</SUB>> ]
+"10194" [label = <(&lt;operator&gt;.greaterEqualsThan,now - prev_time &gt;= kMinDelay)<SUB>1890</SUB>> ]
+"10200" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.compare_exchange_strong)<SUB>1891</SUB>> ]
+"10205" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>1891</SUB>> ]
+"10210" [label = <(LOG,LOG(ERROR))<SUB>1892</SUB>> ]
+"10239" [label = <(FIELD_IDENTIFIER,get,get)<SUB>1914</SUB>> ]
+"10254" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1918</SUB>> ]
+"10259" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1918</SUB>> ]
+"10109" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>1866</SUB>> ]
+"10114" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>1866</SUB>> ]
+"10137" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1873</SUB>> ]
+"10195" [label = <(&lt;operator&gt;.subtraction,now - prev_time)<SUB>1890</SUB>> ]
+"10202" [label = <(FIELD_IDENTIFIER,compare_exchange_strong,compare_exchange_strong)<SUB>1891</SUB>> ]
+"10207" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>1891</SUB>> ]
+"10111" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>1866</SUB>> ]
+"10116" [label = <(FIELD_IDENTIFIER,max,max)<SUB>1866</SUB>> ]
+"10085" [label = <(METHOD,NewStringUTF)<SUB>1856</SUB>> ]
+"10287" [label = <(METHOD_RETURN,jstring)<SUB>1856</SUB>> ]
   "10097" -> "10106" 
   "10147" -> "10151" 
   "10151" -> "10152" 
   "10152" -> "10153" 
   "10153" -> "10154" 
   "10154" -> "10158" 
-  "10246" -> "10252" 
-  "10249" -> "10264" 
-  "10264" -> "10271" 
-  "10267" -> "10287" 
-  "10282" -> "10290" 
+  "10243" -> "10249" 
+  "10246" -> "10261" 
+  "10261" -> "10268" 
+  "10264" -> "10284" 
+  "10279" -> "10287" 
   "10090" -> "10094" 
   "10090" -> "10099" 
   "10099" -> "10097" 
   "10102" -> "10123" 
   "10102" -> "10147" 
-  "10156" -> "10165" 
-  "10156" -> "10246" 
-  "10251" -> "10249" 
-  "10269" -> "10267" 
-  "10283" -> "10282" 
-  "10094" -> "10290" 
+  "10156" -> "10168" 
+  "10156" -> "10243" 
+  "10248" -> "10246" 
+  "10266" -> "10264" 
+  "10280" -> "10279" 
+  "10094" -> "10287" 
   "10103" -> "10102" 
   "10119" -> "10130" 
   "10130" -> "10137" 
   "10132" -> "10143" 
-  "10143" -> "10290" 
+  "10143" -> "10287" 
   "10157" -> "10156" 
-  "10165" -> "10171" 
-  "10169" -> "10175" 
-  "10174" -> "10183" 
-  "10178" -> "10190" 
-  "10188" -> "10194" 
-  "10216" -> "10227" 
-  "10222" -> "10229" 
-  "10229" -> "10233" 
-  "10232" -> "10242" 
-  "10237" -> "10243" 
-  "10243" -> "10246" 
-  "10252" -> "10257" 
-  "10253" -> "10251" 
-  "10270" -> "10278" 
-  "10275" -> "10269" 
-  "10284" -> "10283" 
+  "10166" -> "10172" 
+  "10171" -> "10180" 
+  "10175" -> "10187" 
+  "10185" -> "10191" 
+  "10213" -> "10224" 
+  "10219" -> "10226" 
+  "10226" -> "10230" 
+  "10229" -> "10239" 
+  "10234" -> "10240" 
+  "10240" -> "10243" 
+  "10249" -> "10254" 
+  "10250" -> "10248" 
+  "10267" -> "10275" 
+  "10272" -> "10266" 
+  "10281" -> "10280" 
   "10105" -> "10103" 
   "10121" -> "10119" 
   "10133" -> "10142" 
@@ -158,66 +156,66 @@
   "10158" -> "10157" 
   "10158" -> "10161" 
   "10161" -> "10157" 
-  "10171" -> "10169" 
-  "10175" -> "10174" 
-  "10180" -> "10178" 
-  "10190" -> "10188" 
-  "10192" -> "10213" 
-  "10192" -> "10219" 
-  "10217" -> "10220" 
-  "10220" -> "10216" 
-  "10224" -> "10222" 
-  "10233" -> "10232" 
-  "10239" -> "10237" 
-  "10254" -> "10262" 
-  "10259" -> "10253" 
-  "10271" -> "10274" 
-  "10274" -> "10270" 
-  "10276" -> "10275" 
-  "10285" -> "10284" 
+  "10168" -> "10166" 
+  "10172" -> "10171" 
+  "10177" -> "10175" 
+  "10187" -> "10185" 
+  "10189" -> "10210" 
+  "10189" -> "10216" 
+  "10214" -> "10217" 
+  "10217" -> "10213" 
+  "10221" -> "10219" 
+  "10230" -> "10229" 
+  "10236" -> "10234" 
+  "10251" -> "10259" 
+  "10256" -> "10250" 
+  "10268" -> "10271" 
+  "10271" -> "10267" 
+  "10273" -> "10272" 
+  "10282" -> "10281" 
   "10106" -> "10111" 
   "10107" -> "10105" 
   "10122" -> "10121" 
   "10134" -> "10138" 
   "10138" -> "10133" 
   "10140" -> "10139" 
-  "10181" -> "10186" 
-  "10184" -> "10180" 
-  "10193" -> "10192" 
-  "10193" -> "10205" 
-  "10202" -> "10192" 
-  "10212" -> "10219" 
-  "10219" -> "10217" 
-  "10227" -> "10228" 
-  "10228" -> "10224" 
-  "10240" -> "10239" 
-  "10255" -> "10254" 
-  "10260" -> "10259" 
-  "10278" -> "10276" 
-  "10287" -> "10285" 
+  "10178" -> "10183" 
+  "10181" -> "10177" 
+  "10190" -> "10189" 
+  "10190" -> "10202" 
+  "10199" -> "10189" 
+  "10209" -> "10216" 
+  "10216" -> "10214" 
+  "10224" -> "10225" 
+  "10225" -> "10221" 
+  "10237" -> "10236" 
+  "10252" -> "10251" 
+  "10257" -> "10256" 
+  "10275" -> "10273" 
+  "10284" -> "10282" 
   "10108" -> "10116" 
   "10113" -> "10107" 
   "10123" -> "10126" 
   "10126" -> "10122" 
   "10135" -> "10134" 
   "10142" -> "10140" 
+  "10180" -> "10178" 
   "10183" -> "10181" 
-  "10186" -> "10184" 
-  "10194" -> "10193" 
-  "10194" -> "10198" 
-  "10197" -> "10193" 
-  "10203" -> "10210" 
-  "10208" -> "10202" 
-  "10213" -> "10212" 
-  "10242" -> "10240" 
-  "10257" -> "10255" 
-  "10262" -> "10260" 
+  "10191" -> "10190" 
+  "10191" -> "10195" 
+  "10194" -> "10190" 
+  "10200" -> "10207" 
+  "10205" -> "10199" 
+  "10210" -> "10209" 
+  "10239" -> "10237" 
+  "10254" -> "10252" 
+  "10259" -> "10257" 
   "10109" -> "10108" 
   "10114" -> "10113" 
   "10137" -> "10135" 
-  "10198" -> "10197" 
-  "10205" -> "10203" 
-  "10210" -> "10208" 
+  "10195" -> "10194" 
+  "10202" -> "10200" 
+  "10207" -> "10205" 
   "10111" -> "10109" 
   "10116" -> "10114" 
   "10085" -> "10090" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/189-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/189-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/189-cfg.dot	2023-06-07 19:34:35.167389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/189-cfg.dot	2023-06-07 19:34:41.697389012 +0330
@@ -1,45 +1,45 @@
 digraph "GetStringLength" {  
-"10296" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1929</SUB>> ]
-"10315" [label = <(soa,soa(env))<SUB>1930</SUB>> ]
-"10317" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();)<SUB>1931</SUB>> ]
-"10318" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength())<SUB>1931</SUB>> ]
-"10319" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1931</SUB>> ]
-"10326" [label = <(GetLength,(java_string)-&gt;GetLength())<SUB>1931</SUB>> ]
-"10300" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1929</SUB>> ]
-"10320" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1931</SUB>> ]
-"10323" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1931</SUB>> ]
-"10327" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetLength)<SUB>1931</SUB>> ]
-"10301" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1929</SUB>> ]
-"10305" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1929</SUB>> ]
-"10312" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1929</SUB>> ]
-"10322" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1931</SUB>> ]
-"10325" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1931</SUB>> ]
-"10329" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1931</SUB>> ]
-"10306" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1929</SUB>> ]
-"10307" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1929</SUB>> ]
-"10309" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1929</SUB>> ]
-"10292" [label = <(METHOD,GetStringLength)<SUB>1928</SUB>> ]
-"10330" [label = <(METHOD_RETURN,jsize)<SUB>1928</SUB>> ]
-  "10296" -> "10301" 
-  "10296" -> "10315" 
-  "10315" -> "10322" 
-  "10317" -> "10330" 
-  "10318" -> "10317" 
-  "10319" -> "10329" 
-  "10326" -> "10318" 
-  "10300" -> "10307" 
-  "10300" -> "10315" 
-  "10320" -> "10325" 
-  "10323" -> "10319" 
-  "10327" -> "10326" 
-  "10301" -> "10300" 
-  "10305" -> "10312" 
-  "10312" -> "10330" 
+"10293" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1927</SUB>> ]
+"10312" [label = <(soa,soa(env))<SUB>1928</SUB>> ]
+"10314" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();)<SUB>1929</SUB>> ]
+"10315" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength())<SUB>1929</SUB>> ]
+"10316" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1929</SUB>> ]
+"10323" [label = <(GetLength,(java_string)-&gt;GetLength())<SUB>1929</SUB>> ]
+"10297" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1927</SUB>> ]
+"10317" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1929</SUB>> ]
+"10320" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1929</SUB>> ]
+"10324" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetLength)<SUB>1929</SUB>> ]
+"10298" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1927</SUB>> ]
+"10302" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1927</SUB>> ]
+"10309" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1927</SUB>> ]
+"10319" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1929</SUB>> ]
+"10322" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1929</SUB>> ]
+"10326" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1929</SUB>> ]
+"10303" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1927</SUB>> ]
+"10304" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1927</SUB>> ]
+"10306" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1927</SUB>> ]
+"10289" [label = <(METHOD,GetStringLength)<SUB>1926</SUB>> ]
+"10327" [label = <(METHOD_RETURN,jsize)<SUB>1926</SUB>> ]
+  "10293" -> "10298" 
+  "10293" -> "10312" 
+  "10312" -> "10319" 
+  "10314" -> "10327" 
+  "10315" -> "10314" 
+  "10316" -> "10326" 
+  "10323" -> "10315" 
+  "10297" -> "10304" 
+  "10297" -> "10312" 
+  "10317" -> "10322" 
+  "10320" -> "10316" 
+  "10324" -> "10323" 
+  "10298" -> "10297" 
+  "10302" -> "10309" 
+  "10309" -> "10327" 
+  "10319" -> "10317" 
   "10322" -> "10320" 
-  "10325" -> "10323" 
-  "10329" -> "10327" 
-  "10306" -> "10305" 
-  "10307" -> "10309" 
-  "10309" -> "10306" 
-  "10292" -> "10296" 
+  "10326" -> "10324" 
+  "10303" -> "10302" 
+  "10304" -> "10306" 
+  "10306" -> "10303" 
+  "10289" -> "10293" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/19-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/19-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/19-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/19-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "FindFieldID" {  
-"465" [label = <(METHOD,FindFieldID)<SUB>378</SUB>> ]
-"472" [label = <(METHOD_RETURN,jfieldID)<SUB>378</SUB>> ]
+"465" [label = <(METHOD,FindFieldID)<SUB>377</SUB>> ]
+"472" [label = <(METHOD_RETURN,jfieldID)<SUB>377</SUB>> ]
   "465" -> "472" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/190-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/190-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/190-cfg.dot	2023-06-07 19:34:35.167389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/190-cfg.dot	2023-06-07 19:34:41.697389012 +0330
@@ -1,45 +1,45 @@
 digraph "GetStringUTFLength" {  
-"10336" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1935</SUB>> ]
-"10355" [label = <(soa,soa(env))<SUB>1936</SUB>> ]
-"10357" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();)<SUB>1937</SUB>> ]
-"10358" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength())<SUB>1937</SUB>> ]
-"10359" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1937</SUB>> ]
-"10366" [label = <(GetUtfLength,(java_string)-&gt;GetUtfLength())<SUB>1937</SUB>> ]
-"10340" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1935</SUB>> ]
-"10360" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1937</SUB>> ]
-"10363" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1937</SUB>> ]
-"10367" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetUtfLength)<SUB>1937</SUB>> ]
-"10341" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1935</SUB>> ]
-"10345" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1935</SUB>> ]
-"10352" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1935</SUB>> ]
-"10362" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1937</SUB>> ]
-"10365" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1937</SUB>> ]
-"10369" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>1937</SUB>> ]
-"10346" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1935</SUB>> ]
-"10347" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1935</SUB>> ]
-"10349" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1935</SUB>> ]
-"10332" [label = <(METHOD,GetStringUTFLength)<SUB>1934</SUB>> ]
-"10370" [label = <(METHOD_RETURN,jsize)<SUB>1934</SUB>> ]
-  "10336" -> "10341" 
-  "10336" -> "10355" 
-  "10355" -> "10362" 
-  "10357" -> "10370" 
-  "10358" -> "10357" 
-  "10359" -> "10369" 
-  "10366" -> "10358" 
-  "10340" -> "10347" 
-  "10340" -> "10355" 
-  "10360" -> "10365" 
-  "10363" -> "10359" 
-  "10367" -> "10366" 
-  "10341" -> "10340" 
-  "10345" -> "10352" 
-  "10352" -> "10370" 
+"10333" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1933</SUB>> ]
+"10352" [label = <(soa,soa(env))<SUB>1934</SUB>> ]
+"10354" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();)<SUB>1935</SUB>> ]
+"10355" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength())<SUB>1935</SUB>> ]
+"10356" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1935</SUB>> ]
+"10363" [label = <(GetUtfLength,(java_string)-&gt;GetUtfLength())<SUB>1935</SUB>> ]
+"10337" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1933</SUB>> ]
+"10357" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1935</SUB>> ]
+"10360" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1935</SUB>> ]
+"10364" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetUtfLength)<SUB>1935</SUB>> ]
+"10338" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1933</SUB>> ]
+"10342" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1933</SUB>> ]
+"10349" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>1933</SUB>> ]
+"10359" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1935</SUB>> ]
+"10362" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1935</SUB>> ]
+"10366" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>1935</SUB>> ]
+"10343" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1933</SUB>> ]
+"10344" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1933</SUB>> ]
+"10346" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1933</SUB>> ]
+"10329" [label = <(METHOD,GetStringUTFLength)<SUB>1932</SUB>> ]
+"10367" [label = <(METHOD_RETURN,jsize)<SUB>1932</SUB>> ]
+  "10333" -> "10338" 
+  "10333" -> "10352" 
+  "10352" -> "10359" 
+  "10354" -> "10367" 
+  "10355" -> "10354" 
+  "10356" -> "10366" 
+  "10363" -> "10355" 
+  "10337" -> "10344" 
+  "10337" -> "10352" 
+  "10357" -> "10362" 
+  "10360" -> "10356" 
+  "10364" -> "10363" 
+  "10338" -> "10337" 
+  "10342" -> "10349" 
+  "10349" -> "10367" 
+  "10359" -> "10357" 
   "10362" -> "10360" 
-  "10365" -> "10363" 
-  "10369" -> "10367" 
-  "10346" -> "10345" 
-  "10347" -> "10349" 
-  "10349" -> "10346" 
-  "10332" -> "10336" 
+  "10366" -> "10364" 
+  "10343" -> "10342" 
+  "10344" -> "10346" 
+  "10346" -> "10343" 
+  "10329" -> "10333" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/191-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/191-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/191-cfg.dot	2023-06-07 19:34:35.167389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/191-cfg.dot	2023-06-07 19:34:41.697389012 +0330
@@ -1,149 +1,149 @@
 digraph "GetStringRegion" {  
-"10379" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1942</SUB>> ]
-"10397" [label = <(soa,soa(env))<SUB>1943</SUB>> ]
-"10399" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1944</SUB>> ]
-"10400" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1944</SUB>> ]
-"10407" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1944</SUB>> ]
-"10417" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1945</SUB>> ]
-"10401" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1944</SUB>> ]
-"10408" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1944</SUB>> ]
-"10418" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1945</SUB>> ]
-"10425" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1945</SUB>> ]
-"10434" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1946</SUB>> ]
-"10383" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1942</SUB>> ]
-"10403" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1944</SUB>> ]
-"10409" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1944</SUB>> ]
-"10412" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1944</SUB>> ]
-"10419" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1945</SUB>> ]
-"10422" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1945</SUB>> ]
-"10427" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1945</SUB>> ]
-"10438" [label = <(GetLength,s-&gt;GetLength())<SUB>1946</SUB>> ]
-"10444" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1948</SUB>> ]
-"10384" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1942</SUB>> ]
-"10388" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1942</SUB>> ]
-"10395" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1942</SUB>> ]
-"10405" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1944</SUB>> ]
-"10411" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1944</SUB>> ]
-"10414" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1944</SUB>> ]
-"10428" [label = <(GetLength,s-&gt;GetLength())<SUB>1945</SUB>> ]
-"10439" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1946</SUB>> ]
-"10467" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1949</SUB>> ]
-"10389" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1942</SUB>> ]
-"10429" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1945</SUB>> ]
-"10441" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1946</SUB>> ]
-"10468" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1949</SUB>> ]
-"10390" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1942</SUB>> ]
-"10392" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1942</SUB>> ]
-"10431" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1945</SUB>> ]
-"10449" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1948</SUB>> ]
-"10470" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1949</SUB>> ]
-"10478" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1950</SUB>> ]
-"10481" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1950</SUB>> ]
-"10500" [label = <(&lt;operator&gt;.assignment,* chars = static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1954</SUB>> ]
-"10508" [label = <(memcpy,memcpy(buf, chars + start, length * sizeof(jchar)))<SUB>1955</SUB>> ]
-"10450" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1948</SUB>> ]
-"10458" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>1948</SUB>> ]
-"10465" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1948</SUB>> ]
-"10475" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1950</SUB>> ]
-"10484" [label = <(&lt;operator&gt;.assignment,buf[i] = static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1951</SUB>> ]
-"10502" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1954</SUB>> ]
-"10510" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1955</SUB>> ]
-"10513" [label = <(&lt;operator&gt;.multiplication,length * sizeof(jchar))<SUB>1955</SUB>> ]
-"10451" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1948</SUB>> ]
-"10454" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1948</SUB>> ]
-"10459" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1948</SUB>> ]
-"10485" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1951</SUB>> ]
-"10488" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1951</SUB>> ]
-"10503" [label = <(UNKNOWN,jchar*,jchar*)<SUB>1954</SUB>> ]
-"10504" [label = <(GetValue,s-&gt;GetValue())<SUB>1954</SUB>> ]
-"10515" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>1955</SUB>> ]
-"10460" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1948</SUB>> ]
-"10462" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1948</SUB>> ]
-"10489" [label = <(UNKNOWN,jchar,jchar)<SUB>1951</SUB>> ]
-"10490" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1951</SUB>> ]
-"10505" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1954</SUB>> ]
-"10491" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1951</SUB>> ]
-"10494" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1951</SUB>> ]
-"10507" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1954</SUB>> ]
-"10493" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1951</SUB>> ]
-"10372" [label = <(METHOD,GetStringRegion)<SUB>1940</SUB>> ]
-"10517" [label = <(METHOD_RETURN,void)<SUB>1940</SUB>> ]
-  "10379" -> "10384" 
-  "10379" -> "10397" 
-  "10397" -> "10405" 
-  "10399" -> "10419" 
-  "10400" -> "10411" 
-  "10407" -> "10399" 
-  "10417" -> "10441" 
-  "10417" -> "10444" 
-  "10401" -> "10400" 
-  "10408" -> "10407" 
-  "10418" -> "10417" 
-  "10418" -> "10431" 
-  "10425" -> "10417" 
-  "10434" -> "10517" 
-  "10383" -> "10390" 
-  "10383" -> "10397" 
-  "10403" -> "10401" 
-  "10409" -> "10414" 
-  "10412" -> "10408" 
-  "10419" -> "10418" 
-  "10419" -> "10422" 
-  "10422" -> "10418" 
-  "10427" -> "10425" 
-  "10438" -> "10434" 
-  "10444" -> "10451" 
-  "10444" -> "10470" 
-  "10384" -> "10383" 
-  "10388" -> "10395" 
-  "10395" -> "10517" 
-  "10405" -> "10403" 
+"10376" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1940</SUB>> ]
+"10394" [label = <(soa,soa(env))<SUB>1941</SUB>> ]
+"10396" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1942</SUB>> ]
+"10397" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1942</SUB>> ]
+"10404" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1942</SUB>> ]
+"10414" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1943</SUB>> ]
+"10398" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1942</SUB>> ]
+"10405" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1942</SUB>> ]
+"10415" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1943</SUB>> ]
+"10422" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1943</SUB>> ]
+"10431" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1944</SUB>> ]
+"10380" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1940</SUB>> ]
+"10400" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1942</SUB>> ]
+"10406" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1942</SUB>> ]
+"10409" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1942</SUB>> ]
+"10416" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1943</SUB>> ]
+"10419" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1943</SUB>> ]
+"10424" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1943</SUB>> ]
+"10435" [label = <(GetLength,s-&gt;GetLength())<SUB>1944</SUB>> ]
+"10441" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1946</SUB>> ]
+"10381" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1940</SUB>> ]
+"10385" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1940</SUB>> ]
+"10392" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1940</SUB>> ]
+"10402" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1942</SUB>> ]
+"10408" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1942</SUB>> ]
+"10411" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1942</SUB>> ]
+"10425" [label = <(GetLength,s-&gt;GetLength())<SUB>1943</SUB>> ]
+"10436" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1944</SUB>> ]
+"10464" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1947</SUB>> ]
+"10386" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1940</SUB>> ]
+"10426" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1943</SUB>> ]
+"10438" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1944</SUB>> ]
+"10465" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1947</SUB>> ]
+"10387" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1940</SUB>> ]
+"10389" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1940</SUB>> ]
+"10428" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1943</SUB>> ]
+"10446" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1946</SUB>> ]
+"10467" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1947</SUB>> ]
+"10475" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1948</SUB>> ]
+"10478" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1948</SUB>> ]
+"10497" [label = <(&lt;operator&gt;.assignment,* chars = static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1952</SUB>> ]
+"10505" [label = <(memcpy,memcpy(buf, chars + start, length * sizeof(jchar)))<SUB>1953</SUB>> ]
+"10447" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1946</SUB>> ]
+"10455" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>1946</SUB>> ]
+"10462" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1946</SUB>> ]
+"10472" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1948</SUB>> ]
+"10481" [label = <(&lt;operator&gt;.assignment,buf[i] = static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1949</SUB>> ]
+"10499" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>1952</SUB>> ]
+"10507" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1953</SUB>> ]
+"10510" [label = <(&lt;operator&gt;.multiplication,length * sizeof(jchar))<SUB>1953</SUB>> ]
+"10448" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1946</SUB>> ]
+"10451" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1946</SUB>> ]
+"10456" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1946</SUB>> ]
+"10482" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1949</SUB>> ]
+"10485" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>1949</SUB>> ]
+"10500" [label = <(UNKNOWN,jchar*,jchar*)<SUB>1952</SUB>> ]
+"10501" [label = <(GetValue,s-&gt;GetValue())<SUB>1952</SUB>> ]
+"10512" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>1953</SUB>> ]
+"10457" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1946</SUB>> ]
+"10459" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1946</SUB>> ]
+"10486" [label = <(UNKNOWN,jchar,jchar)<SUB>1949</SUB>> ]
+"10487" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1949</SUB>> ]
+"10502" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1952</SUB>> ]
+"10488" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1949</SUB>> ]
+"10491" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1949</SUB>> ]
+"10504" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1952</SUB>> ]
+"10490" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1949</SUB>> ]
+"10369" [label = <(METHOD,GetStringRegion)<SUB>1938</SUB>> ]
+"10514" [label = <(METHOD_RETURN,void)<SUB>1938</SUB>> ]
+  "10376" -> "10381" 
+  "10376" -> "10394" 
+  "10394" -> "10402" 
+  "10396" -> "10416" 
+  "10397" -> "10408" 
+  "10404" -> "10396" 
+  "10414" -> "10438" 
+  "10414" -> "10441" 
+  "10398" -> "10397" 
+  "10405" -> "10404" 
+  "10415" -> "10414" 
+  "10415" -> "10428" 
+  "10422" -> "10414" 
+  "10431" -> "10514" 
+  "10380" -> "10387" 
+  "10380" -> "10394" 
+  "10400" -> "10398" 
+  "10406" -> "10411" 
+  "10409" -> "10405" 
+  "10416" -> "10415" 
+  "10416" -> "10419" 
+  "10419" -> "10415" 
+  "10424" -> "10422" 
+  "10435" -> "10431" 
+  "10441" -> "10448" 
+  "10441" -> "10467" 
+  "10381" -> "10380" 
+  "10385" -> "10392" 
+  "10392" -> "10514" 
+  "10402" -> "10400" 
+  "10408" -> "10406" 
   "10411" -> "10409" 
-  "10414" -> "10412" 
-  "10428" -> "10427" 
-  "10439" -> "10438" 
-  "10467" -> "10475" 
-  "10467" -> "10503" 
-  "10389" -> "10388" 
-  "10429" -> "10428" 
-  "10441" -> "10439" 
-  "10468" -> "10467" 
-  "10390" -> "10392" 
-  "10392" -> "10389" 
-  "10431" -> "10429" 
-  "10449" -> "10460" 
-  "10449" -> "10470" 
-  "10470" -> "10468" 
-  "10478" -> "10517" 
-  "10478" -> "10485" 
+  "10425" -> "10424" 
+  "10436" -> "10435" 
+  "10464" -> "10472" 
+  "10464" -> "10500" 
+  "10386" -> "10385" 
+  "10426" -> "10425" 
+  "10438" -> "10436" 
+  "10465" -> "10464" 
+  "10387" -> "10389" 
+  "10389" -> "10386" 
+  "10428" -> "10426" 
+  "10446" -> "10457" 
+  "10446" -> "10467" 
+  "10467" -> "10465" 
+  "10475" -> "10514" 
+  "10475" -> "10482" 
+  "10478" -> "10475" 
+  "10497" -> "10507" 
+  "10505" -> "10514" 
+  "10447" -> "10446" 
+  "10455" -> "10462" 
+  "10462" -> "10514" 
+  "10472" -> "10475" 
   "10481" -> "10478" 
-  "10500" -> "10510" 
-  "10508" -> "10517" 
-  "10450" -> "10449" 
-  "10458" -> "10465" 
-  "10465" -> "10517" 
-  "10475" -> "10478" 
-  "10484" -> "10481" 
-  "10502" -> "10500" 
-  "10510" -> "10515" 
-  "10513" -> "10508" 
-  "10451" -> "10450" 
-  "10451" -> "10454" 
-  "10454" -> "10450" 
-  "10459" -> "10458" 
-  "10485" -> "10489" 
-  "10488" -> "10484" 
-  "10503" -> "10507" 
+  "10499" -> "10497" 
+  "10507" -> "10512" 
+  "10510" -> "10505" 
+  "10448" -> "10447" 
+  "10448" -> "10451" 
+  "10451" -> "10447" 
+  "10456" -> "10455" 
+  "10482" -> "10486" 
+  "10485" -> "10481" 
+  "10500" -> "10504" 
+  "10501" -> "10499" 
+  "10512" -> "10510" 
+  "10457" -> "10459" 
+  "10459" -> "10456" 
+  "10486" -> "10490" 
+  "10487" -> "10485" 
+  "10502" -> "10501" 
+  "10488" -> "10491" 
+  "10491" -> "10487" 
   "10504" -> "10502" 
-  "10515" -> "10513" 
-  "10460" -> "10462" 
-  "10462" -> "10459" 
-  "10489" -> "10493" 
   "10490" -> "10488" 
-  "10505" -> "10504" 
-  "10491" -> "10494" 
-  "10494" -> "10490" 
-  "10507" -> "10505" 
-  "10493" -> "10491" 
-  "10372" -> "10379" 
+  "10369" -> "10376" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/192-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/192-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/192-cfg.dot	2023-06-07 19:34:35.167389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/192-cfg.dot	2023-06-07 19:34:41.697389012 +0330
@@ -1,143 +1,143 @@
 digraph "GetStringUTFRegion" {  
-"10526" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1962</SUB>> ]
-"10544" [label = <(soa,soa(env))<SUB>1963</SUB>> ]
-"10546" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1964</SUB>> ]
-"10547" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1964</SUB>> ]
-"10554" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1964</SUB>> ]
-"10564" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1965</SUB>> ]
-"10548" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1964</SUB>> ]
-"10555" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1964</SUB>> ]
-"10565" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1965</SUB>> ]
-"10572" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1965</SUB>> ]
-"10581" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1966</SUB>> ]
-"10530" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1962</SUB>> ]
-"10550" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1964</SUB>> ]
-"10556" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1964</SUB>> ]
-"10559" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1964</SUB>> ]
-"10566" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1965</SUB>> ]
-"10569" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1965</SUB>> ]
-"10574" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1965</SUB>> ]
-"10585" [label = <(GetLength,s-&gt;GetLength())<SUB>1966</SUB>> ]
-"10591" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1968</SUB>> ]
-"10531" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1962</SUB>> ]
-"10535" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1962</SUB>> ]
-"10542" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1962</SUB>> ]
-"10552" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1964</SUB>> ]
-"10558" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1964</SUB>> ]
-"10561" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1964</SUB>> ]
-"10575" [label = <(GetLength,s-&gt;GetLength())<SUB>1965</SUB>> ]
-"10586" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1966</SUB>> ]
-"10614" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1969</SUB>> ]
-"10536" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1962</SUB>> ]
-"10576" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1965</SUB>> ]
-"10588" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1966</SUB>> ]
-"10615" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1969</SUB>> ]
-"10537" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1962</SUB>> ]
-"10539" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1962</SUB>> ]
-"10578" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1965</SUB>> ]
-"10596" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1968</SUB>> ]
-"10617" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1969</SUB>> ]
-"10625" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1970</SUB>> ]
-"10628" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1970</SUB>> ]
-"10645" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>1974</SUB>> ]
-"10652" [label = <(&lt;operator&gt;.assignment,bytes = CountUtf8Bytes(chars + start, length))<SUB>1975</SUB>> ]
-"10659" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(buf, bytes, chars + start, length))<SUB>1976</SUB>> ]
-"10597" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1968</SUB>> ]
-"10605" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>1968</SUB>> ]
-"10612" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1968</SUB>> ]
-"10622" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1970</SUB>> ]
-"10631" [label = <(&lt;operator&gt;.assignment,buf[i] = s-&gt;CharAt(start+i))<SUB>1971</SUB>> ]
-"10647" [label = <(GetValue,s-&gt;GetValue())<SUB>1974</SUB>> ]
-"10654" [label = <(CountUtf8Bytes,CountUtf8Bytes(chars + start, length))<SUB>1975</SUB>> ]
-"10662" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1976</SUB>> ]
-"10598" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1968</SUB>> ]
-"10601" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1968</SUB>> ]
-"10606" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1968</SUB>> ]
-"10632" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1971</SUB>> ]
-"10635" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1971</SUB>> ]
-"10648" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1974</SUB>> ]
-"10655" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1975</SUB>> ]
-"10607" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1968</SUB>> ]
-"10609" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1968</SUB>> ]
-"10636" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1971</SUB>> ]
-"10639" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1971</SUB>> ]
-"10650" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1974</SUB>> ]
-"10638" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1971</SUB>> ]
-"10519" [label = <(METHOD,GetStringUTFRegion)<SUB>1960</SUB>> ]
-"10666" [label = <(METHOD_RETURN,void)<SUB>1960</SUB>> ]
-  "10526" -> "10531" 
-  "10526" -> "10544" 
-  "10544" -> "10552" 
-  "10546" -> "10566" 
-  "10547" -> "10558" 
-  "10554" -> "10546" 
-  "10564" -> "10588" 
-  "10564" -> "10591" 
-  "10548" -> "10547" 
-  "10555" -> "10554" 
-  "10565" -> "10564" 
-  "10565" -> "10578" 
-  "10572" -> "10564" 
-  "10581" -> "10666" 
-  "10530" -> "10537" 
-  "10530" -> "10544" 
-  "10550" -> "10548" 
-  "10556" -> "10561" 
-  "10559" -> "10555" 
-  "10566" -> "10565" 
-  "10566" -> "10569" 
-  "10569" -> "10565" 
-  "10574" -> "10572" 
-  "10585" -> "10581" 
-  "10591" -> "10598" 
-  "10591" -> "10617" 
-  "10531" -> "10530" 
-  "10535" -> "10542" 
-  "10542" -> "10666" 
-  "10552" -> "10550" 
+"10523" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1960</SUB>> ]
+"10541" [label = <(soa,soa(env))<SUB>1961</SUB>> ]
+"10543" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1962</SUB>> ]
+"10544" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1962</SUB>> ]
+"10551" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1962</SUB>> ]
+"10561" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>1963</SUB>> ]
+"10545" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1962</SUB>> ]
+"10552" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1962</SUB>> ]
+"10562" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>1963</SUB>> ]
+"10569" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>1963</SUB>> ]
+"10578" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>1964</SUB>> ]
+"10527" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1960</SUB>> ]
+"10547" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1962</SUB>> ]
+"10553" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1962</SUB>> ]
+"10556" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1962</SUB>> ]
+"10563" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>1963</SUB>> ]
+"10566" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>1963</SUB>> ]
+"10571" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>1963</SUB>> ]
+"10582" [label = <(GetLength,s-&gt;GetLength())<SUB>1964</SUB>> ]
+"10588" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1966</SUB>> ]
+"10528" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1960</SUB>> ]
+"10532" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1960</SUB>> ]
+"10539" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>1960</SUB>> ]
+"10549" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1962</SUB>> ]
+"10555" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1962</SUB>> ]
+"10558" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1962</SUB>> ]
+"10572" [label = <(GetLength,s-&gt;GetLength())<SUB>1963</SUB>> ]
+"10583" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1964</SUB>> ]
+"10611" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1967</SUB>> ]
+"10533" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1960</SUB>> ]
+"10573" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1963</SUB>> ]
+"10585" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1964</SUB>> ]
+"10612" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1967</SUB>> ]
+"10534" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1960</SUB>> ]
+"10536" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1960</SUB>> ]
+"10575" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1963</SUB>> ]
+"10593" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>1966</SUB>> ]
+"10614" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1967</SUB>> ]
+"10622" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1968</SUB>> ]
+"10625" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1968</SUB>> ]
+"10642" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>1972</SUB>> ]
+"10649" [label = <(&lt;operator&gt;.assignment,bytes = CountUtf8Bytes(chars + start, length))<SUB>1973</SUB>> ]
+"10656" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(buf, bytes, chars + start, length))<SUB>1974</SUB>> ]
+"10594" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>1966</SUB>> ]
+"10602" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>1966</SUB>> ]
+"10609" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>1966</SUB>> ]
+"10619" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1968</SUB>> ]
+"10628" [label = <(&lt;operator&gt;.assignment,buf[i] = s-&gt;CharAt(start+i))<SUB>1969</SUB>> ]
+"10644" [label = <(GetValue,s-&gt;GetValue())<SUB>1972</SUB>> ]
+"10651" [label = <(CountUtf8Bytes,CountUtf8Bytes(chars + start, length))<SUB>1973</SUB>> ]
+"10659" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1974</SUB>> ]
+"10595" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>1966</SUB>> ]
+"10598" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>1966</SUB>> ]
+"10603" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1966</SUB>> ]
+"10629" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>1969</SUB>> ]
+"10632" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>1969</SUB>> ]
+"10645" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1972</SUB>> ]
+"10652" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>1973</SUB>> ]
+"10604" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1966</SUB>> ]
+"10606" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1966</SUB>> ]
+"10633" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1969</SUB>> ]
+"10636" [label = <(&lt;operator&gt;.addition,start+i)<SUB>1969</SUB>> ]
+"10647" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1972</SUB>> ]
+"10635" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1969</SUB>> ]
+"10516" [label = <(METHOD,GetStringUTFRegion)<SUB>1958</SUB>> ]
+"10663" [label = <(METHOD_RETURN,void)<SUB>1958</SUB>> ]
+  "10523" -> "10528" 
+  "10523" -> "10541" 
+  "10541" -> "10549" 
+  "10543" -> "10563" 
+  "10544" -> "10555" 
+  "10551" -> "10543" 
+  "10561" -> "10585" 
+  "10561" -> "10588" 
+  "10545" -> "10544" 
+  "10552" -> "10551" 
+  "10562" -> "10561" 
+  "10562" -> "10575" 
+  "10569" -> "10561" 
+  "10578" -> "10663" 
+  "10527" -> "10534" 
+  "10527" -> "10541" 
+  "10547" -> "10545" 
+  "10553" -> "10558" 
+  "10556" -> "10552" 
+  "10563" -> "10562" 
+  "10563" -> "10566" 
+  "10566" -> "10562" 
+  "10571" -> "10569" 
+  "10582" -> "10578" 
+  "10588" -> "10595" 
+  "10588" -> "10614" 
+  "10528" -> "10527" 
+  "10532" -> "10539" 
+  "10539" -> "10663" 
+  "10549" -> "10547" 
+  "10555" -> "10553" 
   "10558" -> "10556" 
-  "10561" -> "10559" 
-  "10575" -> "10574" 
-  "10586" -> "10585" 
-  "10614" -> "10622" 
-  "10614" -> "10650" 
-  "10536" -> "10535" 
-  "10576" -> "10575" 
-  "10588" -> "10586" 
-  "10615" -> "10614" 
-  "10537" -> "10539" 
-  "10539" -> "10536" 
-  "10578" -> "10576" 
-  "10596" -> "10607" 
-  "10596" -> "10617" 
-  "10617" -> "10615" 
-  "10625" -> "10666" 
-  "10625" -> "10632" 
+  "10572" -> "10571" 
+  "10583" -> "10582" 
+  "10611" -> "10619" 
+  "10611" -> "10647" 
+  "10533" -> "10532" 
+  "10573" -> "10572" 
+  "10585" -> "10583" 
+  "10612" -> "10611" 
+  "10534" -> "10536" 
+  "10536" -> "10533" 
+  "10575" -> "10573" 
+  "10593" -> "10604" 
+  "10593" -> "10614" 
+  "10614" -> "10612" 
+  "10622" -> "10663" 
+  "10622" -> "10629" 
+  "10625" -> "10622" 
+  "10642" -> "10652" 
+  "10649" -> "10659" 
+  "10656" -> "10663" 
+  "10594" -> "10593" 
+  "10602" -> "10609" 
+  "10609" -> "10663" 
+  "10619" -> "10622" 
   "10628" -> "10625" 
-  "10645" -> "10655" 
-  "10652" -> "10662" 
-  "10659" -> "10666" 
-  "10597" -> "10596" 
-  "10605" -> "10612" 
-  "10612" -> "10666" 
-  "10622" -> "10625" 
-  "10631" -> "10628" 
+  "10644" -> "10642" 
+  "10651" -> "10649" 
+  "10659" -> "10656" 
+  "10595" -> "10594" 
+  "10595" -> "10598" 
+  "10598" -> "10594" 
+  "10603" -> "10602" 
+  "10629" -> "10635" 
+  "10632" -> "10628" 
+  "10645" -> "10644" 
+  "10652" -> "10651" 
+  "10604" -> "10606" 
+  "10606" -> "10603" 
+  "10633" -> "10636" 
+  "10636" -> "10632" 
   "10647" -> "10645" 
-  "10654" -> "10652" 
-  "10662" -> "10659" 
-  "10598" -> "10597" 
-  "10598" -> "10601" 
-  "10601" -> "10597" 
-  "10606" -> "10605" 
-  "10632" -> "10638" 
-  "10635" -> "10631" 
-  "10648" -> "10647" 
-  "10655" -> "10654" 
-  "10607" -> "10609" 
-  "10609" -> "10606" 
-  "10636" -> "10639" 
-  "10639" -> "10635" 
-  "10650" -> "10648" 
-  "10638" -> "10636" 
-  "10519" -> "10526" 
+  "10635" -> "10633" 
+  "10516" -> "10523" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/193-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/193-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/193-cfg.dot	2023-06-07 19:34:35.167389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/193-cfg.dot	2023-06-07 19:34:41.697389012 +0330
@@ -1,159 +1,159 @@
 digraph "GetStringChars" {  
-"10673" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1982</SUB>> ]
-"10692" [label = <(soa,soa(env))<SUB>1983</SUB>> ]
-"10694" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1984</SUB>> ]
-"10712" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>1985</SUB>> ]
-"10807" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2004</SUB>> ]
-"10695" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1984</SUB>> ]
-"10702" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1984</SUB>> ]
-"10714" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>1985</SUB>> ]
-"10722" [label = <(&lt;operator&gt;.logicalOr,heap-&gt;IsMovableObject(s) || s-&gt;IsCompressed())<SUB>1986</SUB>> ]
-"10799" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2001</SUB>> ]
-"10808" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2004</SUB>> ]
-"10696" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1984</SUB>> ]
-"10703" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1984</SUB>> ]
-"10715" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>1985</SUB>> ]
-"10723" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>1986</SUB>> ]
-"10728" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1986</SUB>> ]
-"10734" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[s-&gt;GetLength()])<SUB>1987</SUB>> ]
-"10796" [label = <(RETURN,return chars;,return chars;)<SUB>1999</SUB>> ]
-"10803" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2002</SUB>> ]
-"10809" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2004</SUB>> ]
-"10810" [label = <(GetValue,s-&gt;GetValue())<SUB>2004</SUB>> ]
-"10677" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1982</SUB>> ]
-"10698" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1984</SUB>> ]
-"10704" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1984</SUB>> ]
-"10707" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1984</SUB>> ]
-"10716" [label = <(Runtime::Current,Runtime::Current())<SUB>1985</SUB>> ]
-"10720" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>1985</SUB>> ]
-"10724" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>1986</SUB>> ]
-"10729" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1986</SUB>> ]
-"10736" [label = <(&lt;operator&gt;.new,new jchar[s-&gt;GetLength()])<SUB>1987</SUB>> ]
-"10739" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1988</SUB>> ]
-"10788" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1996</SUB>> ]
-"10804" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2002</SUB>> ]
-"10811" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2004</SUB>> ]
-"10678" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1982</SUB>> ]
-"10682" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1982</SUB>> ]
-"10689" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1982</SUB>> ]
-"10700" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1984</SUB>> ]
-"10706" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1984</SUB>> ]
-"10709" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1984</SUB>> ]
-"10717" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>1985</SUB>> ]
-"10726" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>1986</SUB>> ]
-"10731" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1986</SUB>> ]
-"10740" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1988</SUB>> ]
-"10745" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>1989</SUB>> ]
-"10792" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>1997</SUB>> ]
-"10813" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2004</SUB>> ]
-"10683" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1982</SUB>> ]
-"10719" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>1985</SUB>> ]
-"10742" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1988</SUB>> ]
-"10747" [label = <(GetLength,s-&gt;GetLength())<SUB>1989</SUB>> ]
-"10757" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1990</SUB>> ]
-"10760" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1990</SUB>> ]
-"10774" [label = <(memcpy,memcpy(chars, s-&gt;GetValue(), sizeof(jchar) * s-&gt;GetLength()))<SUB>1994</SUB>> ]
-"10793" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1997</SUB>> ]
-"10684" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1982</SUB>> ]
-"10686" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1982</SUB>> ]
-"10748" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1989</SUB>> ]
-"10754" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1990</SUB>> ]
-"10763" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>1991</SUB>> ]
-"10776" [label = <(GetValue,s-&gt;GetValue())<SUB>1994</SUB>> ]
-"10780" [label = <(&lt;operator&gt;.multiplication,sizeof(jchar) * s-&gt;GetLength())<SUB>1994</SUB>> ]
-"10750" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1989</SUB>> ]
-"10764" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>1991</SUB>> ]
-"10767" [label = <(CharAt,s-&gt;CharAt(i))<SUB>1991</SUB>> ]
-"10777" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1994</SUB>> ]
-"10781" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>1994</SUB>> ]
-"10783" [label = <(GetLength,s-&gt;GetLength())<SUB>1994</SUB>> ]
-"10768" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1991</SUB>> ]
-"10779" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1994</SUB>> ]
-"10784" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1994</SUB>> ]
-"10770" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1991</SUB>> ]
-"10786" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1994</SUB>> ]
-"10668" [label = <(METHOD,GetStringChars)<SUB>1981</SUB>> ]
-"10814" [label = <(METHOD_RETURN,jchar)<SUB>1981</SUB>> ]
-  "10673" -> "10678" 
-  "10673" -> "10692" 
-  "10692" -> "10700" 
-  "10694" -> "10719" 
-  "10712" -> "10726" 
-  "10807" -> "10814" 
-  "10695" -> "10706" 
-  "10702" -> "10694" 
-  "10714" -> "10712" 
-  "10722" -> "10736" 
-  "10722" -> "10799" 
-  "10799" -> "10809" 
-  "10799" -> "10804" 
+"10670" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1980</SUB>> ]
+"10689" [label = <(soa,soa(env))<SUB>1981</SUB>> ]
+"10691" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1982</SUB>> ]
+"10709" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>1983</SUB>> ]
+"10804" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2002</SUB>> ]
+"10692" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>1982</SUB>> ]
+"10699" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>1982</SUB>> ]
+"10711" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>1983</SUB>> ]
+"10719" [label = <(&lt;operator&gt;.logicalOr,heap-&gt;IsMovableObject(s) || s-&gt;IsCompressed())<SUB>1984</SUB>> ]
+"10796" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1999</SUB>> ]
+"10805" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2002</SUB>> ]
+"10693" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>1982</SUB>> ]
+"10700" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>1982</SUB>> ]
+"10712" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>1983</SUB>> ]
+"10720" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>1984</SUB>> ]
+"10725" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1984</SUB>> ]
+"10731" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[s-&gt;GetLength()])<SUB>1985</SUB>> ]
+"10793" [label = <(RETURN,return chars;,return chars;)<SUB>1997</SUB>> ]
+"10800" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2000</SUB>> ]
+"10806" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2002</SUB>> ]
+"10807" [label = <(GetValue,s-&gt;GetValue())<SUB>2002</SUB>> ]
+"10674" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>1980</SUB>> ]
+"10695" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1982</SUB>> ]
+"10701" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1982</SUB>> ]
+"10704" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>1982</SUB>> ]
+"10713" [label = <(Runtime::Current,Runtime::Current())<SUB>1983</SUB>> ]
+"10717" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>1983</SUB>> ]
+"10721" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>1984</SUB>> ]
+"10726" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1984</SUB>> ]
+"10733" [label = <(&lt;operator&gt;.new,new jchar[s-&gt;GetLength()])<SUB>1985</SUB>> ]
+"10736" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>1986</SUB>> ]
+"10785" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>1994</SUB>> ]
+"10801" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2000</SUB>> ]
+"10808" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2002</SUB>> ]
+"10675" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>1980</SUB>> ]
+"10679" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>1980</SUB>> ]
+"10686" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>1980</SUB>> ]
+"10697" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1982</SUB>> ]
+"10703" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1982</SUB>> ]
+"10706" [label = <(FIELD_IDENTIFIER,String,String)<SUB>1982</SUB>> ]
+"10714" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>1983</SUB>> ]
+"10723" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>1984</SUB>> ]
+"10728" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1984</SUB>> ]
+"10737" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>1986</SUB>> ]
+"10742" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>1987</SUB>> ]
+"10789" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>1995</SUB>> ]
+"10810" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2002</SUB>> ]
+"10680" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1980</SUB>> ]
+"10716" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>1983</SUB>> ]
+"10739" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>1986</SUB>> ]
+"10744" [label = <(GetLength,s-&gt;GetLength())<SUB>1987</SUB>> ]
+"10754" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>1988</SUB>> ]
+"10757" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>1988</SUB>> ]
+"10771" [label = <(memcpy,memcpy(chars, s-&gt;GetValue(), sizeof(jchar) * s-&gt;GetLength()))<SUB>1992</SUB>> ]
+"10790" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>1995</SUB>> ]
+"10681" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1980</SUB>> ]
+"10683" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1980</SUB>> ]
+"10745" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1987</SUB>> ]
+"10751" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1988</SUB>> ]
+"10760" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>1989</SUB>> ]
+"10773" [label = <(GetValue,s-&gt;GetValue())<SUB>1992</SUB>> ]
+"10777" [label = <(&lt;operator&gt;.multiplication,sizeof(jchar) * s-&gt;GetLength())<SUB>1992</SUB>> ]
+"10747" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1987</SUB>> ]
+"10761" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>1989</SUB>> ]
+"10764" [label = <(CharAt,s-&gt;CharAt(i))<SUB>1989</SUB>> ]
+"10774" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>1992</SUB>> ]
+"10778" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>1992</SUB>> ]
+"10780" [label = <(GetLength,s-&gt;GetLength())<SUB>1992</SUB>> ]
+"10765" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>1989</SUB>> ]
+"10776" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>1992</SUB>> ]
+"10781" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>1992</SUB>> ]
+"10767" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>1989</SUB>> ]
+"10783" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>1992</SUB>> ]
+"10665" [label = <(METHOD,GetStringChars)<SUB>1979</SUB>> ]
+"10811" [label = <(METHOD_RETURN,jchar)<SUB>1979</SUB>> ]
+  "10670" -> "10675" 
+  "10670" -> "10689" 
+  "10689" -> "10697" 
+  "10691" -> "10716" 
+  "10709" -> "10723" 
+  "10804" -> "10811" 
+  "10692" -> "10703" 
+  "10699" -> "10691" 
+  "10711" -> "10709" 
+  "10719" -> "10733" 
+  "10719" -> "10796" 
+  "10796" -> "10806" 
+  "10796" -> "10801" 
+  "10805" -> "10804" 
+  "10693" -> "10692" 
+  "10700" -> "10699" 
+  "10712" -> "10711" 
+  "10720" -> "10719" 
+  "10720" -> "10728" 
+  "10725" -> "10719" 
+  "10731" -> "10739" 
+  "10793" -> "10811" 
+  "10800" -> "10806" 
+  "10806" -> "10810" 
+  "10807" -> "10805" 
+  "10674" -> "10681" 
+  "10674" -> "10689" 
+  "10695" -> "10693" 
+  "10701" -> "10706" 
+  "10704" -> "10700" 
+  "10713" -> "10717" 
+  "10717" -> "10712" 
+  "10721" -> "10720" 
+  "10726" -> "10725" 
+  "10733" -> "10731" 
+  "10736" -> "10747" 
+  "10736" -> "10776" 
+  "10785" -> "10790" 
+  "10785" -> "10793" 
+  "10801" -> "10800" 
   "10808" -> "10807" 
-  "10696" -> "10695" 
-  "10703" -> "10702" 
-  "10715" -> "10714" 
-  "10723" -> "10722" 
-  "10723" -> "10731" 
-  "10728" -> "10722" 
-  "10734" -> "10742" 
-  "10796" -> "10814" 
-  "10803" -> "10809" 
-  "10809" -> "10813" 
-  "10810" -> "10808" 
-  "10677" -> "10684" 
-  "10677" -> "10692" 
-  "10698" -> "10696" 
-  "10704" -> "10709" 
-  "10707" -> "10703" 
-  "10716" -> "10720" 
-  "10720" -> "10715" 
-  "10724" -> "10723" 
-  "10729" -> "10728" 
-  "10736" -> "10734" 
-  "10739" -> "10750" 
-  "10739" -> "10779" 
-  "10788" -> "10793" 
-  "10788" -> "10796" 
-  "10804" -> "10803" 
-  "10811" -> "10810" 
-  "10678" -> "10677" 
-  "10682" -> "10689" 
-  "10689" -> "10814" 
-  "10700" -> "10698" 
+  "10675" -> "10674" 
+  "10679" -> "10686" 
+  "10686" -> "10811" 
+  "10697" -> "10695" 
+  "10703" -> "10701" 
   "10706" -> "10704" 
-  "10709" -> "10707" 
-  "10717" -> "10716" 
-  "10726" -> "10724" 
-  "10731" -> "10729" 
-  "10740" -> "10739" 
-  "10745" -> "10754" 
-  "10792" -> "10796" 
-  "10813" -> "10811" 
-  "10683" -> "10682" 
-  "10719" -> "10717" 
-  "10742" -> "10740" 
-  "10747" -> "10745" 
-  "10757" -> "10764" 
-  "10757" -> "10788" 
+  "10714" -> "10713" 
+  "10723" -> "10721" 
+  "10728" -> "10726" 
+  "10737" -> "10736" 
+  "10742" -> "10751" 
+  "10789" -> "10793" 
+  "10810" -> "10808" 
+  "10680" -> "10679" 
+  "10716" -> "10714" 
+  "10739" -> "10737" 
+  "10744" -> "10742" 
+  "10754" -> "10761" 
+  "10754" -> "10785" 
+  "10757" -> "10754" 
+  "10771" -> "10785" 
+  "10790" -> "10789" 
+  "10681" -> "10683" 
+  "10683" -> "10680" 
+  "10745" -> "10744" 
+  "10751" -> "10754" 
   "10760" -> "10757" 
-  "10774" -> "10788" 
-  "10793" -> "10792" 
-  "10684" -> "10686" 
-  "10686" -> "10683" 
-  "10748" -> "10747" 
-  "10754" -> "10757" 
-  "10763" -> "10760" 
-  "10776" -> "10781" 
-  "10780" -> "10774" 
-  "10750" -> "10748" 
-  "10764" -> "10770" 
-  "10767" -> "10763" 
-  "10777" -> "10776" 
-  "10781" -> "10786" 
-  "10783" -> "10780" 
-  "10768" -> "10767" 
-  "10779" -> "10777" 
-  "10784" -> "10783" 
-  "10770" -> "10768" 
-  "10786" -> "10784" 
-  "10668" -> "10673" 
+  "10773" -> "10778" 
+  "10777" -> "10771" 
+  "10747" -> "10745" 
+  "10761" -> "10767" 
+  "10764" -> "10760" 
+  "10774" -> "10773" 
+  "10778" -> "10783" 
+  "10780" -> "10777" 
+  "10765" -> "10764" 
+  "10776" -> "10774" 
+  "10781" -> "10780" 
+  "10767" -> "10765" 
+  "10783" -> "10781" 
+  "10665" -> "10670" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/194-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/194-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/194-cfg.dot	2023-06-07 19:34:35.167389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/194-cfg.dot	2023-06-07 19:34:41.697389012 +0330
@@ -1,78 +1,78 @@
 digraph "ReleaseStringChars" {  
-"10821" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2008</SUB>> ]
-"10839" [label = <(soa,soa(env))<SUB>2009</SUB>> ]
-"10841" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2010</SUB>> ]
-"10842" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2010</SUB>> ]
-"10849" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2010</SUB>> ]
-"10859" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue()))<SUB>2011</SUB>> ]
-"10843" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2010</SUB>> ]
-"10850" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2010</SUB>> ]
-"10860" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2011</SUB>> ]
-"10864" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue())<SUB>2011</SUB>> ]
-"10878" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2012</SUB>> ]
-"10825" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2008</SUB>> ]
-"10845" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2010</SUB>> ]
-"10851" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2010</SUB>> ]
-"10854" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2010</SUB>> ]
-"10861" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2011</SUB>> ]
-"10865" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2011</SUB>> ]
-"10871" [label = <(&lt;operator&gt;.notEquals,chars != s-&gt;GetValue())<SUB>2011</SUB>> ]
-"10826" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2008</SUB>> ]
-"10830" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2008</SUB>> ]
-"10837" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2008</SUB>> ]
-"10847" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2010</SUB>> ]
-"10853" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2010</SUB>> ]
-"10856" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2010</SUB>> ]
-"10863" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2011</SUB>> ]
-"10866" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2011</SUB>> ]
-"10873" [label = <(GetValue,s-&gt;GetValue())<SUB>2011</SUB>> ]
-"10831" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2008</SUB>> ]
-"10867" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2011</SUB>> ]
-"10874" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2011</SUB>> ]
-"10832" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2008</SUB>> ]
-"10834" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2008</SUB>> ]
-"10869" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2011</SUB>> ]
-"10876" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2011</SUB>> ]
-"10816" [label = <(METHOD,ReleaseStringChars)<SUB>2007</SUB>> ]
-"10880" [label = <(METHOD_RETURN,void)<SUB>2007</SUB>> ]
-  "10821" -> "10826" 
-  "10821" -> "10839" 
-  "10839" -> "10847" 
-  "10841" -> "10863" 
-  "10842" -> "10853" 
-  "10849" -> "10841" 
-  "10859" -> "10880" 
-  "10859" -> "10878" 
-  "10843" -> "10842" 
-  "10850" -> "10849" 
-  "10860" -> "10859" 
-  "10860" -> "10869" 
-  "10864" -> "10859" 
-  "10878" -> "10880" 
-  "10825" -> "10832" 
-  "10825" -> "10839" 
-  "10845" -> "10843" 
-  "10851" -> "10856" 
-  "10854" -> "10850" 
-  "10861" -> "10860" 
-  "10865" -> "10864" 
-  "10865" -> "10876" 
-  "10871" -> "10864" 
-  "10826" -> "10825" 
-  "10830" -> "10837" 
-  "10837" -> "10880" 
-  "10847" -> "10845" 
+"10818" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2006</SUB>> ]
+"10836" [label = <(soa,soa(env))<SUB>2007</SUB>> ]
+"10838" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2008</SUB>> ]
+"10839" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2008</SUB>> ]
+"10846" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2008</SUB>> ]
+"10856" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue()))<SUB>2009</SUB>> ]
+"10840" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2008</SUB>> ]
+"10847" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2008</SUB>> ]
+"10857" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2009</SUB>> ]
+"10861" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue())<SUB>2009</SUB>> ]
+"10875" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2010</SUB>> ]
+"10822" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2006</SUB>> ]
+"10842" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2008</SUB>> ]
+"10848" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2008</SUB>> ]
+"10851" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2008</SUB>> ]
+"10858" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2009</SUB>> ]
+"10862" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2009</SUB>> ]
+"10868" [label = <(&lt;operator&gt;.notEquals,chars != s-&gt;GetValue())<SUB>2009</SUB>> ]
+"10823" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2006</SUB>> ]
+"10827" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2006</SUB>> ]
+"10834" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2006</SUB>> ]
+"10844" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2008</SUB>> ]
+"10850" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2008</SUB>> ]
+"10853" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2008</SUB>> ]
+"10860" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2009</SUB>> ]
+"10863" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2009</SUB>> ]
+"10870" [label = <(GetValue,s-&gt;GetValue())<SUB>2009</SUB>> ]
+"10828" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2006</SUB>> ]
+"10864" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2009</SUB>> ]
+"10871" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2009</SUB>> ]
+"10829" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2006</SUB>> ]
+"10831" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2006</SUB>> ]
+"10866" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2009</SUB>> ]
+"10873" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2009</SUB>> ]
+"10813" [label = <(METHOD,ReleaseStringChars)<SUB>2005</SUB>> ]
+"10877" [label = <(METHOD_RETURN,void)<SUB>2005</SUB>> ]
+  "10818" -> "10823" 
+  "10818" -> "10836" 
+  "10836" -> "10844" 
+  "10838" -> "10860" 
+  "10839" -> "10850" 
+  "10846" -> "10838" 
+  "10856" -> "10877" 
+  "10856" -> "10875" 
+  "10840" -> "10839" 
+  "10847" -> "10846" 
+  "10857" -> "10856" 
+  "10857" -> "10866" 
+  "10861" -> "10856" 
+  "10875" -> "10877" 
+  "10822" -> "10829" 
+  "10822" -> "10836" 
+  "10842" -> "10840" 
+  "10848" -> "10853" 
+  "10851" -> "10847" 
+  "10858" -> "10857" 
+  "10862" -> "10861" 
+  "10862" -> "10873" 
+  "10868" -> "10861" 
+  "10823" -> "10822" 
+  "10827" -> "10834" 
+  "10834" -> "10877" 
+  "10844" -> "10842" 
+  "10850" -> "10848" 
   "10853" -> "10851" 
-  "10856" -> "10854" 
-  "10863" -> "10861" 
-  "10866" -> "10865" 
+  "10860" -> "10858" 
+  "10863" -> "10862" 
+  "10870" -> "10868" 
+  "10828" -> "10827" 
+  "10864" -> "10863" 
+  "10871" -> "10870" 
+  "10829" -> "10831" 
+  "10831" -> "10828" 
+  "10866" -> "10864" 
   "10873" -> "10871" 
-  "10831" -> "10830" 
-  "10867" -> "10866" 
-  "10874" -> "10873" 
-  "10832" -> "10834" 
-  "10834" -> "10831" 
-  "10869" -> "10867" 
-  "10876" -> "10874" 
-  "10816" -> "10821" 
+  "10813" -> "10818" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/195-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/195-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/195-cfg.dot	2023-06-07 19:34:35.167389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/195-cfg.dot	2023-06-07 19:34:41.697389012 +0330
@@ -1,189 +1,189 @@
 digraph "GetStringCritical" {  
-"10887" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2017</SUB>> ]
-"10906" [label = <(soa,soa(env))<SUB>2018</SUB>> ]
-"10908" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2019</SUB>> ]
-"10926" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2020</SUB>> ]
-"10909" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2019</SUB>> ]
-"10916" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2019</SUB>> ]
-"10928" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2020</SUB>> ]
-"10936" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2021</SUB>> ]
-"10987" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2032</SUB>> ]
-"10910" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2019</SUB>> ]
-"10917" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2019</SUB>> ]
-"10929" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2020</SUB>> ]
-"10937" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2021</SUB>> ]
-"10942" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2022</SUB>> ]
-"10951" [label = <(&lt;operator&gt;.greaterThan,HandleWrapperObjPtr&lt;mirror::String&gt; h(hs.NewHandleWrapper(&amp;s)))<SUB>2023</SUB>> ]
-"10988" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2032</SUB>> ]
-"11002" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>2036</SUB>> ]
-"11009" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[length])<SUB>2037</SUB>> ]
-"11034" [label = <(RETURN,return chars;,return chars;)<SUB>2041</SUB>> ]
-"10891" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2017</SUB>> ]
-"10912" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2019</SUB>> ]
-"10918" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2019</SUB>> ]
-"10921" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2019</SUB>> ]
-"10930" [label = <(Runtime::Current,Runtime::Current())<SUB>2020</SUB>> ]
-"10934" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2020</SUB>> ]
-"10939" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2021</SUB>> ]
-"10943" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2022</SUB>> ]
-"10946" [label = <(hs,hs(soa.Self()))<SUB>2022</SUB>> ]
-"10952" [label = <(&lt;operator&gt;.lessThan,HandleWrapperObjPtr&lt;mirror::String)<SUB>2023</SUB>> ]
-"10957" [label = <(h,h(hs.NewHandleWrapper(&amp;s)))<SUB>2023</SUB>> ]
-"10965" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2024</SUB>> ]
-"10990" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2032</SUB>> ]
-"10993" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2033</SUB>> ]
-"11004" [label = <(GetLength,s-&gt;GetLength())<SUB>2036</SUB>> ]
-"11011" [label = <(&lt;operator&gt;.new,new jchar[length])<SUB>2037</SUB>> ]
-"11019" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2038</SUB>> ]
-"11022" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2038</SUB>> ]
-"11047" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2046</SUB>> ]
-"10892" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2017</SUB>> ]
-"10896" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2017</SUB>> ]
-"10903" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2017</SUB>> ]
-"10914" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2019</SUB>> ]
-"10920" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2019</SUB>> ]
-"10923" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2019</SUB>> ]
-"10931" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2020</SUB>> ]
-"10947" [label = <(Self,soa.Self())<SUB>2022</SUB>> ]
-"10954" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2023</SUB>> ]
-"10958" [label = <(NewHandleWrapper,hs.NewHandleWrapper(&amp;s))<SUB>2023</SUB>> ]
-"10968" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2025</SUB>> ]
-"10997" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2034</SUB>> ]
-"11005" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2036</SUB>> ]
-"11016" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2038</SUB>> ]
-"11025" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>2039</SUB>> ]
-"11039" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2043</SUB>> ]
-"11048" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2046</SUB>> ]
-"10897" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2017</SUB>> ]
-"10933" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2020</SUB>> ]
-"10948" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2022</SUB>> ]
-"10956" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2023</SUB>> ]
-"10959" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandleWrapper)<SUB>2023</SUB>> ]
-"10962" [label = <(&lt;operator&gt;.addressOf,&amp;s)<SUB>2023</SUB>> ]
-"10969" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2025</SUB>> ]
-"10972" [label = <(Self,soa.Self())<SUB>2025</SUB>> ]
-"10978" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2029</SUB>> ]
-"10998" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2034</SUB>> ]
-"11007" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2036</SUB>> ]
-"11026" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>2039</SUB>> ]
-"11029" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2039</SUB>> ]
-"11043" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2044</SUB>> ]
-"11049" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2046</SUB>> ]
-"11050" [label = <(GetValue,s-&gt;GetValue())<SUB>2046</SUB>> ]
-"10898" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2017</SUB>> ]
-"10900" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2017</SUB>> ]
-"10950" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2022</SUB>> ]
-"10961" [label = <(FIELD_IDENTIFIER,NewHandleWrapper,NewHandleWrapper)<SUB>2023</SUB>> ]
-"10971" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2025</SUB>> ]
-"10973" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2025</SUB>> ]
-"10979" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2029</SUB>> ]
-"10982" [label = <(Self,soa.Self())<SUB>2029</SUB>> ]
-"11030" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2039</SUB>> ]
-"11044" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2044</SUB>> ]
-"11051" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2046</SUB>> ]
-"10975" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2025</SUB>> ]
-"10981" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2029</SUB>> ]
-"10983" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2029</SUB>> ]
-"11032" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2039</SUB>> ]
-"11053" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2046</SUB>> ]
-"10985" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2029</SUB>> ]
-"10882" [label = <(METHOD,GetStringCritical)<SUB>2016</SUB>> ]
-"11054" [label = <(METHOD_RETURN,jchar)<SUB>2016</SUB>> ]
-  "10887" -> "10892" 
-  "10887" -> "10906" 
-  "10906" -> "10914" 
-  "10908" -> "10933" 
-  "10926" -> "10939" 
-  "10909" -> "10920" 
-  "10916" -> "10908" 
-  "10928" -> "10926" 
-  "10936" -> "10943" 
-  "10936" -> "10990" 
-  "10987" -> "10993" 
-  "10987" -> "11039" 
-  "10910" -> "10909" 
-  "10917" -> "10916" 
-  "10929" -> "10928" 
-  "10937" -> "10936" 
-  "10942" -> "10956" 
-  "10951" -> "10965" 
-  "10988" -> "10987" 
-  "11002" -> "11011" 
-  "11009" -> "11016" 
-  "11034" -> "11054" 
-  "10891" -> "10898" 
-  "10891" -> "10906" 
-  "10912" -> "10910" 
-  "10918" -> "10923" 
-  "10921" -> "10917" 
-  "10930" -> "10934" 
-  "10934" -> "10929" 
-  "10939" -> "10937" 
-  "10943" -> "10950" 
-  "10946" -> "10942" 
-  "10952" -> "10961" 
-  "10957" -> "10951" 
-  "10965" -> "10971" 
-  "10965" -> "10981" 
-  "10990" -> "10988" 
-  "10993" -> "10998" 
-  "10993" -> "11007" 
-  "11004" -> "11002" 
-  "11011" -> "11009" 
-  "11019" -> "11026" 
-  "11019" -> "11034" 
-  "11022" -> "11019" 
-  "11047" -> "11054" 
-  "10892" -> "10891" 
-  "10896" -> "10903" 
-  "10903" -> "11054" 
-  "10914" -> "10912" 
+"10884" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2015</SUB>> ]
+"10903" [label = <(soa,soa(env))<SUB>2016</SUB>> ]
+"10905" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2017</SUB>> ]
+"10923" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2018</SUB>> ]
+"10906" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2017</SUB>> ]
+"10913" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2017</SUB>> ]
+"10925" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2018</SUB>> ]
+"10933" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2019</SUB>> ]
+"10984" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2030</SUB>> ]
+"10907" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2017</SUB>> ]
+"10914" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2017</SUB>> ]
+"10926" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2018</SUB>> ]
+"10934" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2019</SUB>> ]
+"10939" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2020</SUB>> ]
+"10948" [label = <(&lt;operator&gt;.greaterThan,HandleWrapperObjPtr&lt;mirror::String&gt; h(hs.NewHandleWrapper(&amp;s)))<SUB>2021</SUB>> ]
+"10985" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2030</SUB>> ]
+"10999" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>2034</SUB>> ]
+"11006" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[length])<SUB>2035</SUB>> ]
+"11031" [label = <(RETURN,return chars;,return chars;)<SUB>2039</SUB>> ]
+"10888" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2015</SUB>> ]
+"10909" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2017</SUB>> ]
+"10915" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2017</SUB>> ]
+"10918" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2017</SUB>> ]
+"10927" [label = <(Runtime::Current,Runtime::Current())<SUB>2018</SUB>> ]
+"10931" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2018</SUB>> ]
+"10936" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2019</SUB>> ]
+"10940" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2020</SUB>> ]
+"10943" [label = <(hs,hs(soa.Self()))<SUB>2020</SUB>> ]
+"10949" [label = <(&lt;operator&gt;.lessThan,HandleWrapperObjPtr&lt;mirror::String)<SUB>2021</SUB>> ]
+"10954" [label = <(h,h(hs.NewHandleWrapper(&amp;s)))<SUB>2021</SUB>> ]
+"10962" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2022</SUB>> ]
+"10987" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2030</SUB>> ]
+"10990" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2031</SUB>> ]
+"11001" [label = <(GetLength,s-&gt;GetLength())<SUB>2034</SUB>> ]
+"11008" [label = <(&lt;operator&gt;.new,new jchar[length])<SUB>2035</SUB>> ]
+"11016" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2036</SUB>> ]
+"11019" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2036</SUB>> ]
+"11044" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2044</SUB>> ]
+"10889" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2015</SUB>> ]
+"10893" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2015</SUB>> ]
+"10900" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2015</SUB>> ]
+"10911" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2017</SUB>> ]
+"10917" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2017</SUB>> ]
+"10920" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2017</SUB>> ]
+"10928" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2018</SUB>> ]
+"10944" [label = <(Self,soa.Self())<SUB>2020</SUB>> ]
+"10951" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2021</SUB>> ]
+"10955" [label = <(NewHandleWrapper,hs.NewHandleWrapper(&amp;s))<SUB>2021</SUB>> ]
+"10965" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2023</SUB>> ]
+"10994" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2032</SUB>> ]
+"11002" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2034</SUB>> ]
+"11013" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2036</SUB>> ]
+"11022" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>2037</SUB>> ]
+"11036" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2041</SUB>> ]
+"11045" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2044</SUB>> ]
+"10894" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2015</SUB>> ]
+"10930" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2018</SUB>> ]
+"10945" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2020</SUB>> ]
+"10953" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2021</SUB>> ]
+"10956" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandleWrapper)<SUB>2021</SUB>> ]
+"10959" [label = <(&lt;operator&gt;.addressOf,&amp;s)<SUB>2021</SUB>> ]
+"10966" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2023</SUB>> ]
+"10969" [label = <(Self,soa.Self())<SUB>2023</SUB>> ]
+"10975" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2027</SUB>> ]
+"10995" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2032</SUB>> ]
+"11004" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2034</SUB>> ]
+"11023" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>2037</SUB>> ]
+"11026" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2037</SUB>> ]
+"11040" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2042</SUB>> ]
+"11046" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2044</SUB>> ]
+"11047" [label = <(GetValue,s-&gt;GetValue())<SUB>2044</SUB>> ]
+"10895" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2015</SUB>> ]
+"10897" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2015</SUB>> ]
+"10947" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2020</SUB>> ]
+"10958" [label = <(FIELD_IDENTIFIER,NewHandleWrapper,NewHandleWrapper)<SUB>2021</SUB>> ]
+"10968" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2023</SUB>> ]
+"10970" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2023</SUB>> ]
+"10976" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2027</SUB>> ]
+"10979" [label = <(Self,soa.Self())<SUB>2027</SUB>> ]
+"11027" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2037</SUB>> ]
+"11041" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2042</SUB>> ]
+"11048" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2044</SUB>> ]
+"10972" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2023</SUB>> ]
+"10978" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2027</SUB>> ]
+"10980" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2027</SUB>> ]
+"11029" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2037</SUB>> ]
+"11050" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2044</SUB>> ]
+"10982" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2027</SUB>> ]
+"10879" [label = <(METHOD,GetStringCritical)<SUB>2014</SUB>> ]
+"11051" [label = <(METHOD_RETURN,jchar)<SUB>2014</SUB>> ]
+  "10884" -> "10889" 
+  "10884" -> "10903" 
+  "10903" -> "10911" 
+  "10905" -> "10930" 
+  "10923" -> "10936" 
+  "10906" -> "10917" 
+  "10913" -> "10905" 
+  "10925" -> "10923" 
+  "10933" -> "10940" 
+  "10933" -> "10987" 
+  "10984" -> "10990" 
+  "10984" -> "11036" 
+  "10907" -> "10906" 
+  "10914" -> "10913" 
+  "10926" -> "10925" 
+  "10934" -> "10933" 
+  "10939" -> "10953" 
+  "10948" -> "10962" 
+  "10985" -> "10984" 
+  "10999" -> "11008" 
+  "11006" -> "11013" 
+  "11031" -> "11051" 
+  "10888" -> "10895" 
+  "10888" -> "10903" 
+  "10909" -> "10907" 
+  "10915" -> "10920" 
+  "10918" -> "10914" 
+  "10927" -> "10931" 
+  "10931" -> "10926" 
+  "10936" -> "10934" 
+  "10940" -> "10947" 
+  "10943" -> "10939" 
+  "10949" -> "10958" 
+  "10954" -> "10948" 
+  "10962" -> "10968" 
+  "10962" -> "10978" 
+  "10987" -> "10985" 
+  "10990" -> "10995" 
+  "10990" -> "11004" 
+  "11001" -> "10999" 
+  "11008" -> "11006" 
+  "11016" -> "11023" 
+  "11016" -> "11031" 
+  "11019" -> "11016" 
+  "11044" -> "11051" 
+  "10889" -> "10888" 
+  "10893" -> "10900" 
+  "10900" -> "11051" 
+  "10911" -> "10909" 
+  "10917" -> "10915" 
   "10920" -> "10918" 
-  "10923" -> "10921" 
-  "10931" -> "10930" 
-  "10947" -> "10946" 
-  "10954" -> "10952" 
-  "10958" -> "10957" 
-  "10968" -> "10990" 
-  "10997" -> "11007" 
-  "11005" -> "11004" 
-  "11016" -> "11019" 
-  "11025" -> "11022" 
-  "11039" -> "11049" 
-  "11039" -> "11044" 
+  "10928" -> "10927" 
+  "10944" -> "10943" 
+  "10951" -> "10949" 
+  "10955" -> "10954" 
+  "10965" -> "10987" 
+  "10994" -> "11004" 
+  "11002" -> "11001" 
+  "11013" -> "11016" 
+  "11022" -> "11019" 
+  "11036" -> "11046" 
+  "11036" -> "11041" 
+  "11045" -> "11044" 
+  "10894" -> "10893" 
+  "10930" -> "10928" 
+  "10945" -> "10944" 
+  "10953" -> "10951" 
+  "10956" -> "10959" 
+  "10959" -> "10955" 
+  "10966" -> "10972" 
+  "10969" -> "10965" 
+  "10975" -> "10987" 
+  "10995" -> "10994" 
+  "11004" -> "11002" 
+  "11023" -> "11029" 
+  "11026" -> "11022" 
+  "11040" -> "11046" 
+  "11046" -> "11050" 
+  "11047" -> "11045" 
+  "10895" -> "10897" 
+  "10897" -> "10894" 
+  "10947" -> "10945" 
+  "10958" -> "10956" 
+  "10968" -> "10966" 
+  "10970" -> "10969" 
+  "10976" -> "10982" 
+  "10979" -> "10975" 
+  "11027" -> "11026" 
+  "11041" -> "11040" 
   "11048" -> "11047" 
-  "10897" -> "10896" 
-  "10933" -> "10931" 
-  "10948" -> "10947" 
-  "10956" -> "10954" 
-  "10959" -> "10962" 
-  "10962" -> "10958" 
-  "10969" -> "10975" 
-  "10972" -> "10968" 
-  "10978" -> "10990" 
-  "10998" -> "10997" 
-  "11007" -> "11005" 
-  "11026" -> "11032" 
-  "11029" -> "11025" 
-  "11043" -> "11049" 
-  "11049" -> "11053" 
+  "10972" -> "10970" 
+  "10978" -> "10976" 
+  "10980" -> "10979" 
+  "11029" -> "11027" 
   "11050" -> "11048" 
-  "10898" -> "10900" 
-  "10900" -> "10897" 
-  "10950" -> "10948" 
-  "10961" -> "10959" 
-  "10971" -> "10969" 
-  "10973" -> "10972" 
-  "10979" -> "10985" 
-  "10982" -> "10978" 
-  "11030" -> "11029" 
-  "11044" -> "11043" 
-  "11051" -> "11050" 
-  "10975" -> "10973" 
-  "10981" -> "10979" 
-  "10983" -> "10982" 
-  "11032" -> "11030" 
-  "11053" -> "11051" 
-  "10985" -> "10983" 
-  "10882" -> "10887" 
+  "10982" -> "10980" 
+  "10879" -> "10884" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/196-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/196-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/196-cfg.dot	2023-06-07 19:34:35.167389614 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/196-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,126 +1,126 @@
 digraph "ReleaseStringCritical" {  
-"11061" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2053</SUB>> ]
-"11079" [label = <(soa,soa(env))<SUB>2054</SUB>> ]
-"11082" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2055</SUB>> ]
-"11091" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2056</SUB>> ]
-"11084" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2055</SUB>> ]
-"11092" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2056</SUB>> ]
-"11099" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2056</SUB>> ]
-"11109" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2057</SUB>> ]
-"11138" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars))<SUB>2064</SUB>> ]
-"11085" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2055</SUB>> ]
-"11093" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2056</SUB>> ]
-"11100" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2056</SUB>> ]
-"11110" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2057</SUB>> ]
-"11139" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2064</SUB>> ]
-"11143" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars)<SUB>2064</SUB>> ]
-"11157" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2065</SUB>> ]
-"11065" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2053</SUB>> ]
-"11086" [label = <(Runtime::Current,Runtime::Current())<SUB>2055</SUB>> ]
-"11090" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2055</SUB>> ]
-"11095" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2056</SUB>> ]
-"11101" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2056</SUB>> ]
-"11104" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2056</SUB>> ]
-"11112" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2057</SUB>> ]
-"11116" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2058</SUB>> ]
-"11140" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2064</SUB>> ]
-"11144" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2064</SUB>> ]
-"11150" [label = <(&lt;operator&gt;.notEquals,s-&gt;GetValue() != chars)<SUB>2064</SUB>> ]
-"11066" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2053</SUB>> ]
-"11070" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2053</SUB>> ]
-"11077" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2053</SUB>> ]
-"11087" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2055</SUB>> ]
-"11097" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2056</SUB>> ]
-"11103" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2056</SUB>> ]
-"11106" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2056</SUB>> ]
-"11119" [label = <(DecrementDisableMovingGC,heap-&gt;DecrementDisableMovingGC(soa.Self()))<SUB>2059</SUB>> ]
-"11142" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2064</SUB>> ]
-"11145" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2064</SUB>> ]
-"11151" [label = <(GetValue,s-&gt;GetValue())<SUB>2064</SUB>> ]
-"11071" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2053</SUB>> ]
-"11089" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2055</SUB>> ]
-"11120" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableMovingGC)<SUB>2059</SUB>> ]
-"11123" [label = <(Self,soa.Self())<SUB>2059</SUB>> ]
-"11129" [label = <(DecrementDisableThreadFlip,heap-&gt;DecrementDisableThreadFlip(soa.Self()))<SUB>2061</SUB>> ]
-"11146" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2064</SUB>> ]
-"11152" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2064</SUB>> ]
-"11072" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2053</SUB>> ]
-"11074" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2053</SUB>> ]
-"11122" [label = <(FIELD_IDENTIFIER,DecrementDisableMovingGC,DecrementDisableMovingGC)<SUB>2059</SUB>> ]
-"11124" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2059</SUB>> ]
-"11130" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableThreadFlip)<SUB>2061</SUB>> ]
-"11133" [label = <(Self,soa.Self())<SUB>2061</SUB>> ]
-"11148" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2064</SUB>> ]
-"11154" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2064</SUB>> ]
-"11126" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2059</SUB>> ]
-"11132" [label = <(FIELD_IDENTIFIER,DecrementDisableThreadFlip,DecrementDisableThreadFlip)<SUB>2061</SUB>> ]
-"11134" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2061</SUB>> ]
-"11136" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2061</SUB>> ]
-"11056" [label = <(METHOD,ReleaseStringCritical)<SUB>2050</SUB>> ]
-"11159" [label = <(METHOD_RETURN,void)<SUB>2050</SUB>> ]
-  "11061" -> "11066" 
-  "11061" -> "11079" 
-  "11079" -> "11089" 
-  "11082" -> "11097" 
-  "11091" -> "11112" 
-  "11084" -> "11082" 
-  "11092" -> "11103" 
-  "11099" -> "11091" 
-  "11109" -> "11116" 
-  "11109" -> "11142" 
-  "11138" -> "11159" 
-  "11138" -> "11157" 
-  "11085" -> "11084" 
-  "11093" -> "11092" 
-  "11100" -> "11099" 
-  "11110" -> "11109" 
-  "11139" -> "11138" 
-  "11139" -> "11148" 
-  "11143" -> "11138" 
-  "11157" -> "11159" 
-  "11065" -> "11072" 
-  "11065" -> "11079" 
-  "11086" -> "11090" 
-  "11090" -> "11085" 
-  "11095" -> "11093" 
-  "11101" -> "11106" 
-  "11104" -> "11100" 
-  "11112" -> "11110" 
-  "11116" -> "11122" 
-  "11116" -> "11132" 
-  "11140" -> "11139" 
-  "11144" -> "11143" 
-  "11144" -> "11154" 
-  "11150" -> "11143" 
-  "11066" -> "11065" 
-  "11070" -> "11077" 
-  "11077" -> "11159" 
-  "11087" -> "11086" 
-  "11097" -> "11095" 
+"11058" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2051</SUB>> ]
+"11076" [label = <(soa,soa(env))<SUB>2052</SUB>> ]
+"11079" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2053</SUB>> ]
+"11088" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2054</SUB>> ]
+"11081" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2053</SUB>> ]
+"11089" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2054</SUB>> ]
+"11096" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2054</SUB>> ]
+"11106" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2055</SUB>> ]
+"11135" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars))<SUB>2062</SUB>> ]
+"11082" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2053</SUB>> ]
+"11090" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2054</SUB>> ]
+"11097" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2054</SUB>> ]
+"11107" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2055</SUB>> ]
+"11136" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2062</SUB>> ]
+"11140" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars)<SUB>2062</SUB>> ]
+"11154" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2063</SUB>> ]
+"11062" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2051</SUB>> ]
+"11083" [label = <(Runtime::Current,Runtime::Current())<SUB>2053</SUB>> ]
+"11087" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2053</SUB>> ]
+"11092" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2054</SUB>> ]
+"11098" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2054</SUB>> ]
+"11101" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2054</SUB>> ]
+"11109" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2055</SUB>> ]
+"11113" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2056</SUB>> ]
+"11137" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2062</SUB>> ]
+"11141" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2062</SUB>> ]
+"11147" [label = <(&lt;operator&gt;.notEquals,s-&gt;GetValue() != chars)<SUB>2062</SUB>> ]
+"11063" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2051</SUB>> ]
+"11067" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2051</SUB>> ]
+"11074" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2051</SUB>> ]
+"11084" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2053</SUB>> ]
+"11094" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2054</SUB>> ]
+"11100" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2054</SUB>> ]
+"11103" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2054</SUB>> ]
+"11116" [label = <(DecrementDisableMovingGC,heap-&gt;DecrementDisableMovingGC(soa.Self()))<SUB>2057</SUB>> ]
+"11139" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2062</SUB>> ]
+"11142" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2062</SUB>> ]
+"11148" [label = <(GetValue,s-&gt;GetValue())<SUB>2062</SUB>> ]
+"11068" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2051</SUB>> ]
+"11086" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2053</SUB>> ]
+"11117" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableMovingGC)<SUB>2057</SUB>> ]
+"11120" [label = <(Self,soa.Self())<SUB>2057</SUB>> ]
+"11126" [label = <(DecrementDisableThreadFlip,heap-&gt;DecrementDisableThreadFlip(soa.Self()))<SUB>2059</SUB>> ]
+"11143" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2062</SUB>> ]
+"11149" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2062</SUB>> ]
+"11069" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2051</SUB>> ]
+"11071" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2051</SUB>> ]
+"11119" [label = <(FIELD_IDENTIFIER,DecrementDisableMovingGC,DecrementDisableMovingGC)<SUB>2057</SUB>> ]
+"11121" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2057</SUB>> ]
+"11127" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableThreadFlip)<SUB>2059</SUB>> ]
+"11130" [label = <(Self,soa.Self())<SUB>2059</SUB>> ]
+"11145" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2062</SUB>> ]
+"11151" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2062</SUB>> ]
+"11123" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2057</SUB>> ]
+"11129" [label = <(FIELD_IDENTIFIER,DecrementDisableThreadFlip,DecrementDisableThreadFlip)<SUB>2059</SUB>> ]
+"11131" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2059</SUB>> ]
+"11133" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2059</SUB>> ]
+"11053" [label = <(METHOD,ReleaseStringCritical)<SUB>2048</SUB>> ]
+"11156" [label = <(METHOD_RETURN,void)<SUB>2048</SUB>> ]
+  "11058" -> "11063" 
+  "11058" -> "11076" 
+  "11076" -> "11086" 
+  "11079" -> "11094" 
+  "11088" -> "11109" 
+  "11081" -> "11079" 
+  "11089" -> "11100" 
+  "11096" -> "11088" 
+  "11106" -> "11113" 
+  "11106" -> "11139" 
+  "11135" -> "11156" 
+  "11135" -> "11154" 
+  "11082" -> "11081" 
+  "11090" -> "11089" 
+  "11097" -> "11096" 
+  "11107" -> "11106" 
+  "11136" -> "11135" 
+  "11136" -> "11145" 
+  "11140" -> "11135" 
+  "11154" -> "11156" 
+  "11062" -> "11069" 
+  "11062" -> "11076" 
+  "11083" -> "11087" 
+  "11087" -> "11082" 
+  "11092" -> "11090" 
+  "11098" -> "11103" 
+  "11101" -> "11097" 
+  "11109" -> "11107" 
+  "11113" -> "11119" 
+  "11113" -> "11129" 
+  "11137" -> "11136" 
+  "11141" -> "11140" 
+  "11141" -> "11151" 
+  "11147" -> "11140" 
+  "11063" -> "11062" 
+  "11067" -> "11074" 
+  "11074" -> "11156" 
+  "11084" -> "11083" 
+  "11094" -> "11092" 
+  "11100" -> "11098" 
   "11103" -> "11101" 
-  "11106" -> "11104" 
-  "11119" -> "11142" 
-  "11142" -> "11140" 
-  "11145" -> "11144" 
-  "11151" -> "11150" 
-  "11071" -> "11070" 
-  "11089" -> "11087" 
-  "11120" -> "11126" 
-  "11123" -> "11119" 
-  "11129" -> "11142" 
-  "11146" -> "11145" 
-  "11152" -> "11151" 
-  "11072" -> "11074" 
-  "11074" -> "11071" 
-  "11122" -> "11120" 
-  "11124" -> "11123" 
-  "11130" -> "11136" 
-  "11133" -> "11129" 
-  "11148" -> "11146" 
-  "11154" -> "11152" 
-  "11126" -> "11124" 
-  "11132" -> "11130" 
-  "11134" -> "11133" 
-  "11136" -> "11134" 
-  "11056" -> "11061" 
+  "11116" -> "11139" 
+  "11139" -> "11137" 
+  "11142" -> "11141" 
+  "11148" -> "11147" 
+  "11068" -> "11067" 
+  "11086" -> "11084" 
+  "11117" -> "11123" 
+  "11120" -> "11116" 
+  "11126" -> "11139" 
+  "11143" -> "11142" 
+  "11149" -> "11148" 
+  "11069" -> "11071" 
+  "11071" -> "11068" 
+  "11119" -> "11117" 
+  "11121" -> "11120" 
+  "11127" -> "11133" 
+  "11130" -> "11126" 
+  "11145" -> "11143" 
+  "11151" -> "11149" 
+  "11123" -> "11121" 
+  "11129" -> "11127" 
+  "11131" -> "11130" 
+  "11133" -> "11131" 
+  "11053" -> "11058" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/197-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/197-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/197-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/197-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,103 +1,103 @@
 digraph "GetStringUTFChars" {  
-"11183" [label = <(soa,soa(env))<SUB>2076</SUB>> ]
-"11185" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2077</SUB>> ]
-"11203" [label = <(&lt;operator&gt;.assignment,byte_count = s-&gt;GetUtfLength())<SUB>2078</SUB>> ]
-"11210" [label = <(&lt;operator&gt;.assignment,* bytes = new char[byte_count + 1])<SUB>2079</SUB>> ]
-"11214" [label = <(CHECK,CHECK(bytes != nullptr))<SUB>2080</SUB>> ]
-"11262" [label = <(&lt;operator&gt;.assignment,bytes[byte_count] = '\0')<SUB>2089</SUB>> ]
-"11267" [label = <(RETURN,return bytes;,return bytes;)<SUB>2090</SUB>> ]
-"11167" [label = <(&lt;operator&gt;.equals,java_string == nullptr)<SUB>2070</SUB>> ]
-"11174" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2073</SUB>> ]
-"11186" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2077</SUB>> ]
-"11193" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2077</SUB>> ]
-"11205" [label = <(GetUtfLength,s-&gt;GetUtfLength())<SUB>2078</SUB>> ]
-"11212" [label = <(&lt;operator&gt;.new,new char[byte_count + 1])<SUB>2079</SUB>> ]
-"11215" [label = <(&lt;operator&gt;.notEquals,bytes != nullptr)<SUB>2080</SUB>> ]
-"11219" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2081</SUB>> ]
-"11263" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[byte_count])<SUB>2089</SUB>> ]
-"11171" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2071</SUB>> ]
-"11178" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2074</SUB>> ]
-"11187" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2077</SUB>> ]
-"11194" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2077</SUB>> ]
-"11206" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetUtfLength)<SUB>2078</SUB>> ]
-"11220" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2081</SUB>> ]
-"11179" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2074</SUB>> ]
-"11189" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2077</SUB>> ]
-"11195" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2077</SUB>> ]
-"11198" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2077</SUB>> ]
-"11208" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>2078</SUB>> ]
-"11222" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2081</SUB>> ]
-"11230" [label = <(&lt;operator&gt;.lessThan,i &lt; byte_count)<SUB>2082</SUB>> ]
-"11233" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2082</SUB>> ]
-"11248" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>2086</SUB>> ]
-"11254" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(bytes, byte_count, chars, s-&gt;GetLength()))<SUB>2087</SUB>> ]
-"11191" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2077</SUB>> ]
-"11197" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2077</SUB>> ]
-"11200" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2077</SUB>> ]
-"11227" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2082</SUB>> ]
-"11236" [label = <(&lt;operator&gt;.assignment,bytes[i] = s-&gt;CharAt(i))<SUB>2083</SUB>> ]
-"11250" [label = <(GetValue,s-&gt;GetValue())<SUB>2086</SUB>> ]
-"11258" [label = <(GetLength,s-&gt;GetLength())<SUB>2087</SUB>> ]
-"11237" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[i])<SUB>2083</SUB>> ]
-"11240" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2083</SUB>> ]
-"11251" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2086</SUB>> ]
-"11259" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2087</SUB>> ]
-"11241" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2083</SUB>> ]
-"11253" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2086</SUB>> ]
-"11261" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2087</SUB>> ]
-"11243" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2083</SUB>> ]
-"11161" [label = <(METHOD,GetStringUTFChars)<SUB>2069</SUB>> ]
-"11269" [label = <(METHOD_RETURN,const char*)<SUB>2069</SUB>> ]
-  "11183" -> "11191" 
-  "11185" -> "11208" 
-  "11203" -> "11212" 
-  "11210" -> "11215" 
-  "11214" -> "11222" 
-  "11262" -> "11267" 
-  "11267" -> "11269" 
-  "11167" -> "11171" 
-  "11167" -> "11174" 
-  "11174" -> "11179" 
-  "11174" -> "11183" 
-  "11186" -> "11197" 
-  "11193" -> "11185" 
+"11180" [label = <(soa,soa(env))<SUB>2074</SUB>> ]
+"11182" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2075</SUB>> ]
+"11200" [label = <(&lt;operator&gt;.assignment,byte_count = s-&gt;GetUtfLength())<SUB>2076</SUB>> ]
+"11207" [label = <(&lt;operator&gt;.assignment,* bytes = new char[byte_count + 1])<SUB>2077</SUB>> ]
+"11211" [label = <(CHECK,CHECK(bytes != nullptr))<SUB>2078</SUB>> ]
+"11259" [label = <(&lt;operator&gt;.assignment,bytes[byte_count] = '\0')<SUB>2087</SUB>> ]
+"11264" [label = <(RETURN,return bytes;,return bytes;)<SUB>2088</SUB>> ]
+"11164" [label = <(&lt;operator&gt;.equals,java_string == nullptr)<SUB>2068</SUB>> ]
+"11171" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2071</SUB>> ]
+"11183" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2075</SUB>> ]
+"11190" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2075</SUB>> ]
+"11202" [label = <(GetUtfLength,s-&gt;GetUtfLength())<SUB>2076</SUB>> ]
+"11209" [label = <(&lt;operator&gt;.new,new char[byte_count + 1])<SUB>2077</SUB>> ]
+"11212" [label = <(&lt;operator&gt;.notEquals,bytes != nullptr)<SUB>2078</SUB>> ]
+"11216" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2079</SUB>> ]
+"11260" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[byte_count])<SUB>2087</SUB>> ]
+"11168" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2069</SUB>> ]
+"11175" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2072</SUB>> ]
+"11184" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2075</SUB>> ]
+"11191" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2075</SUB>> ]
+"11203" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetUtfLength)<SUB>2076</SUB>> ]
+"11217" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2079</SUB>> ]
+"11176" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2072</SUB>> ]
+"11186" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2075</SUB>> ]
+"11192" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2075</SUB>> ]
+"11195" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2075</SUB>> ]
+"11205" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>2076</SUB>> ]
+"11219" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2079</SUB>> ]
+"11227" [label = <(&lt;operator&gt;.lessThan,i &lt; byte_count)<SUB>2080</SUB>> ]
+"11230" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2080</SUB>> ]
+"11245" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>2084</SUB>> ]
+"11251" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(bytes, byte_count, chars, s-&gt;GetLength()))<SUB>2085</SUB>> ]
+"11188" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2075</SUB>> ]
+"11194" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2075</SUB>> ]
+"11197" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2075</SUB>> ]
+"11224" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2080</SUB>> ]
+"11233" [label = <(&lt;operator&gt;.assignment,bytes[i] = s-&gt;CharAt(i))<SUB>2081</SUB>> ]
+"11247" [label = <(GetValue,s-&gt;GetValue())<SUB>2084</SUB>> ]
+"11255" [label = <(GetLength,s-&gt;GetLength())<SUB>2085</SUB>> ]
+"11234" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[i])<SUB>2081</SUB>> ]
+"11237" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2081</SUB>> ]
+"11248" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2084</SUB>> ]
+"11256" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2085</SUB>> ]
+"11238" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2081</SUB>> ]
+"11250" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2084</SUB>> ]
+"11258" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2085</SUB>> ]
+"11240" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2081</SUB>> ]
+"11158" [label = <(METHOD,GetStringUTFChars)<SUB>2067</SUB>> ]
+"11266" [label = <(METHOD_RETURN,const char*)<SUB>2067</SUB>> ]
+  "11180" -> "11188" 
+  "11182" -> "11205" 
+  "11200" -> "11209" 
+  "11207" -> "11212" 
+  "11211" -> "11219" 
+  "11259" -> "11264" 
+  "11264" -> "11266" 
+  "11164" -> "11168" 
+  "11164" -> "11171" 
+  "11171" -> "11176" 
+  "11171" -> "11180" 
+  "11183" -> "11194" 
+  "11190" -> "11182" 
+  "11202" -> "11200" 
+  "11209" -> "11207" 
+  "11212" -> "11211" 
+  "11216" -> "11224" 
+  "11216" -> "11250" 
+  "11260" -> "11259" 
+  "11168" -> "11266" 
+  "11175" -> "11180" 
+  "11184" -> "11183" 
+  "11191" -> "11190" 
+  "11203" -> "11202" 
+  "11217" -> "11216" 
+  "11176" -> "11175" 
+  "11186" -> "11184" 
+  "11192" -> "11197" 
+  "11195" -> "11191" 
   "11205" -> "11203" 
-  "11212" -> "11210" 
-  "11215" -> "11214" 
-  "11219" -> "11227" 
-  "11219" -> "11253" 
-  "11263" -> "11262" 
-  "11171" -> "11269" 
-  "11178" -> "11183" 
-  "11187" -> "11186" 
-  "11194" -> "11193" 
-  "11206" -> "11205" 
-  "11220" -> "11219" 
-  "11179" -> "11178" 
-  "11189" -> "11187" 
-  "11195" -> "11200" 
-  "11198" -> "11194" 
-  "11208" -> "11206" 
-  "11222" -> "11220" 
-  "11230" -> "11237" 
-  "11230" -> "11263" 
-  "11233" -> "11230" 
-  "11248" -> "11261" 
-  "11254" -> "11263" 
-  "11191" -> "11189" 
+  "11219" -> "11217" 
+  "11227" -> "11234" 
+  "11227" -> "11260" 
+  "11230" -> "11227" 
+  "11245" -> "11258" 
+  "11251" -> "11260" 
+  "11188" -> "11186" 
+  "11194" -> "11192" 
   "11197" -> "11195" 
-  "11200" -> "11198" 
-  "11227" -> "11230" 
-  "11236" -> "11233" 
+  "11224" -> "11227" 
+  "11233" -> "11230" 
+  "11247" -> "11245" 
+  "11255" -> "11251" 
+  "11234" -> "11240" 
+  "11237" -> "11233" 
+  "11248" -> "11247" 
+  "11256" -> "11255" 
+  "11238" -> "11237" 
   "11250" -> "11248" 
-  "11258" -> "11254" 
-  "11237" -> "11243" 
-  "11240" -> "11236" 
-  "11251" -> "11250" 
-  "11259" -> "11258" 
-  "11241" -> "11240" 
-  "11253" -> "11251" 
-  "11261" -> "11259" 
-  "11243" -> "11241" 
-  "11161" -> "11167" 
+  "11258" -> "11256" 
+  "11240" -> "11238" 
+  "11158" -> "11164" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/198-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/198-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/198-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/198-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseStringUTFChars" {  
-"11276" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2094</SUB>> ]
-"11271" [label = <(METHOD,ReleaseStringUTFChars)<SUB>2093</SUB>> ]
-"11278" [label = <(METHOD_RETURN,void)<SUB>2093</SUB>> ]
-  "11276" -> "11278" 
-  "11271" -> "11276" 
+"11273" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2092</SUB>> ]
+"11268" [label = <(METHOD,ReleaseStringUTFChars)<SUB>2091</SUB>> ]
+"11275" [label = <(METHOD_RETURN,void)<SUB>2091</SUB>> ]
+  "11273" -> "11275" 
+  "11268" -> "11273" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/199-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/199-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/199-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/199-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,100 +1,100 @@
 digraph "GetArrayLength" {  
-"11284" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2098</SUB>> ]
-"11303" [label = <(soa,soa(env))<SUB>2099</SUB>> ]
-"11305" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2100</SUB>> ]
-"11349" [label = <(&lt;operator&gt;.assignment,* array = obj-&gt;AsArray())<SUB>2105</SUB>> ]
-"11355" [label = <(RETURN,return array-&gt;GetLength();,return array-&gt;GetLength();)<SUB>2106</SUB>> ]
-"11306" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>2100</SUB>> ]
-"11313" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2100</SUB>> ]
-"11323" [label = <(UNLIKELY,UNLIKELY(!obj-&gt;IsArrayInstance()))<SUB>2101</SUB>> ]
-"11351" [label = <(AsArray,obj-&gt;AsArray())<SUB>2105</SUB>> ]
-"11356" [label = <(GetLength,array-&gt;GetLength())<SUB>2106</SUB>> ]
-"11307" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2100</SUB>> ]
-"11314" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2100</SUB>> ]
-"11324" [label = <(&lt;operator&gt;.logicalNot,!obj-&gt;IsArrayInstance())<SUB>2101</SUB>> ]
-"11330" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetArrayLength&quot;, &quot;not an array: %s&quot;, obj-&gt;PrettyTypeOf().c_str()))<SUB>2102</SUB>> ]
-"11346" [label = <(RETURN,return 0;,return 0;)<SUB>2103</SUB>> ]
-"11352" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;AsArray)<SUB>2105</SUB>> ]
-"11357" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2106</SUB>> ]
-"11288" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2098</SUB>> ]
-"11309" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2100</SUB>> ]
-"11315" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2100</SUB>> ]
-"11318" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2100</SUB>> ]
-"11325" [label = <(IsArrayInstance,obj-&gt;IsArrayInstance())<SUB>2101</SUB>> ]
-"11331" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2102</SUB>> ]
-"11339" [label = <(c_str,obj-&gt;PrettyTypeOf().c_str())<SUB>2102</SUB>> ]
-"11354" [label = <(FIELD_IDENTIFIER,AsArray,AsArray)<SUB>2105</SUB>> ]
-"11359" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2106</SUB>> ]
-"11289" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2098</SUB>> ]
-"11293" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2098</SUB>> ]
-"11300" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2098</SUB>> ]
-"11311" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2100</SUB>> ]
-"11317" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2100</SUB>> ]
-"11320" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2100</SUB>> ]
-"11326" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;IsArrayInstance)<SUB>2101</SUB>> ]
-"11332" [label = <(Vm,soa.Vm())<SUB>2102</SUB>> ]
-"11336" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2102</SUB>> ]
-"11340" [label = <(&lt;operator&gt;.fieldAccess,obj-&gt;PrettyTypeOf().c_str)<SUB>2102</SUB>> ]
-"11294" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2098</SUB>> ]
-"11328" [label = <(FIELD_IDENTIFIER,IsArrayInstance,IsArrayInstance)<SUB>2101</SUB>> ]
-"11333" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2102</SUB>> ]
-"11341" [label = <(PrettyTypeOf,obj-&gt;PrettyTypeOf())<SUB>2102</SUB>> ]
-"11345" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2102</SUB>> ]
-"11295" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2098</SUB>> ]
-"11297" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2098</SUB>> ]
-"11335" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2102</SUB>> ]
-"11342" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;PrettyTypeOf)<SUB>2102</SUB>> ]
-"11344" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>2102</SUB>> ]
-"11280" [label = <(METHOD,GetArrayLength)<SUB>2097</SUB>> ]
-"11360" [label = <(METHOD_RETURN,jsize)<SUB>2097</SUB>> ]
-  "11284" -> "11289" 
-  "11284" -> "11303" 
-  "11303" -> "11311" 
-  "11305" -> "11328" 
-  "11349" -> "11359" 
-  "11355" -> "11360" 
-  "11306" -> "11317" 
-  "11313" -> "11305" 
-  "11323" -> "11335" 
-  "11323" -> "11354" 
+"11281" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2096</SUB>> ]
+"11300" [label = <(soa,soa(env))<SUB>2097</SUB>> ]
+"11302" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2098</SUB>> ]
+"11346" [label = <(&lt;operator&gt;.assignment,* array = obj-&gt;AsArray())<SUB>2103</SUB>> ]
+"11352" [label = <(RETURN,return array-&gt;GetLength();,return array-&gt;GetLength();)<SUB>2104</SUB>> ]
+"11303" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>2098</SUB>> ]
+"11310" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2098</SUB>> ]
+"11320" [label = <(UNLIKELY,UNLIKELY(!obj-&gt;IsArrayInstance()))<SUB>2099</SUB>> ]
+"11348" [label = <(AsArray,obj-&gt;AsArray())<SUB>2103</SUB>> ]
+"11353" [label = <(GetLength,array-&gt;GetLength())<SUB>2104</SUB>> ]
+"11304" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2098</SUB>> ]
+"11311" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2098</SUB>> ]
+"11321" [label = <(&lt;operator&gt;.logicalNot,!obj-&gt;IsArrayInstance())<SUB>2099</SUB>> ]
+"11327" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetArrayLength&quot;, &quot;not an array: %s&quot;, obj-&gt;PrettyTypeOf().c_str()))<SUB>2100</SUB>> ]
+"11343" [label = <(RETURN,return 0;,return 0;)<SUB>2101</SUB>> ]
+"11349" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;AsArray)<SUB>2103</SUB>> ]
+"11354" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2104</SUB>> ]
+"11285" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2096</SUB>> ]
+"11306" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2098</SUB>> ]
+"11312" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2098</SUB>> ]
+"11315" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2098</SUB>> ]
+"11322" [label = <(IsArrayInstance,obj-&gt;IsArrayInstance())<SUB>2099</SUB>> ]
+"11328" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2100</SUB>> ]
+"11336" [label = <(c_str,obj-&gt;PrettyTypeOf().c_str())<SUB>2100</SUB>> ]
+"11351" [label = <(FIELD_IDENTIFIER,AsArray,AsArray)<SUB>2103</SUB>> ]
+"11356" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2104</SUB>> ]
+"11286" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2096</SUB>> ]
+"11290" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2096</SUB>> ]
+"11297" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2096</SUB>> ]
+"11308" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2098</SUB>> ]
+"11314" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2098</SUB>> ]
+"11317" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2098</SUB>> ]
+"11323" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;IsArrayInstance)<SUB>2099</SUB>> ]
+"11329" [label = <(Vm,soa.Vm())<SUB>2100</SUB>> ]
+"11333" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2100</SUB>> ]
+"11337" [label = <(&lt;operator&gt;.fieldAccess,obj-&gt;PrettyTypeOf().c_str)<SUB>2100</SUB>> ]
+"11291" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2096</SUB>> ]
+"11325" [label = <(FIELD_IDENTIFIER,IsArrayInstance,IsArrayInstance)<SUB>2099</SUB>> ]
+"11330" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2100</SUB>> ]
+"11338" [label = <(PrettyTypeOf,obj-&gt;PrettyTypeOf())<SUB>2100</SUB>> ]
+"11342" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2100</SUB>> ]
+"11292" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2096</SUB>> ]
+"11294" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2096</SUB>> ]
+"11332" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2100</SUB>> ]
+"11339" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;PrettyTypeOf)<SUB>2100</SUB>> ]
+"11341" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>2100</SUB>> ]
+"11277" [label = <(METHOD,GetArrayLength)<SUB>2095</SUB>> ]
+"11357" [label = <(METHOD_RETURN,jsize)<SUB>2095</SUB>> ]
+  "11281" -> "11286" 
+  "11281" -> "11300" 
+  "11300" -> "11308" 
+  "11302" -> "11325" 
+  "11346" -> "11356" 
+  "11352" -> "11357" 
+  "11303" -> "11314" 
+  "11310" -> "11302" 
+  "11320" -> "11332" 
+  "11320" -> "11351" 
+  "11348" -> "11346" 
+  "11353" -> "11352" 
+  "11304" -> "11303" 
+  "11311" -> "11310" 
+  "11321" -> "11320" 
+  "11327" -> "11343" 
+  "11343" -> "11357" 
+  "11349" -> "11348" 
+  "11354" -> "11353" 
+  "11285" -> "11292" 
+  "11285" -> "11300" 
+  "11306" -> "11304" 
+  "11312" -> "11317" 
+  "11315" -> "11311" 
+  "11322" -> "11321" 
+  "11328" -> "11341" 
+  "11336" -> "11327" 
   "11351" -> "11349" 
-  "11356" -> "11355" 
-  "11307" -> "11306" 
-  "11314" -> "11313" 
-  "11324" -> "11323" 
-  "11330" -> "11346" 
-  "11346" -> "11360" 
-  "11352" -> "11351" 
-  "11357" -> "11356" 
-  "11288" -> "11295" 
-  "11288" -> "11303" 
-  "11309" -> "11307" 
-  "11315" -> "11320" 
-  "11318" -> "11314" 
-  "11325" -> "11324" 
-  "11331" -> "11344" 
-  "11339" -> "11330" 
-  "11354" -> "11352" 
-  "11359" -> "11357" 
-  "11289" -> "11288" 
-  "11293" -> "11300" 
-  "11300" -> "11360" 
-  "11311" -> "11309" 
+  "11356" -> "11354" 
+  "11286" -> "11285" 
+  "11290" -> "11297" 
+  "11297" -> "11357" 
+  "11308" -> "11306" 
+  "11314" -> "11312" 
   "11317" -> "11315" 
-  "11320" -> "11318" 
-  "11326" -> "11325" 
-  "11332" -> "11336" 
-  "11336" -> "11331" 
-  "11340" -> "11339" 
-  "11294" -> "11293" 
-  "11328" -> "11326" 
-  "11333" -> "11332" 
-  "11341" -> "11345" 
-  "11345" -> "11340" 
-  "11295" -> "11297" 
-  "11297" -> "11294" 
-  "11335" -> "11333" 
-  "11342" -> "11341" 
-  "11344" -> "11342" 
-  "11280" -> "11284" 
+  "11323" -> "11322" 
+  "11329" -> "11333" 
+  "11333" -> "11328" 
+  "11337" -> "11336" 
+  "11291" -> "11290" 
+  "11325" -> "11323" 
+  "11330" -> "11329" 
+  "11338" -> "11342" 
+  "11342" -> "11337" 
+  "11292" -> "11294" 
+  "11294" -> "11291" 
+  "11332" -> "11330" 
+  "11339" -> "11338" 
+  "11341" -> "11339" 
+  "11277" -> "11281" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/2-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/2-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/2-cfg.dot	2023-06-07 19:34:34.807389646 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/2-cfg.dot	2023-06-07 19:34:41.337389044 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_10" {  
-"15" [label = <(METHOD,anonymous_lambda_10)<SUB>1906</SUB>> ]
-"17" [label = <(METHOD_RETURN,ANY)<SUB>1906</SUB>> ]
+"15" [label = <(METHOD,anonymous_lambda_10)<SUB>1904</SUB>> ]
+"17" [label = <(METHOD_RETURN,ANY)<SUB>1904</SUB>> ]
   "15" -> "17" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/20-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/20-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/20-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/20-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowAIOOBE" {  
-"522" [label = <(METHOD,ThrowAIOOBE)<SUB>429</SUB>> ]
-"529" [label = <(METHOD_RETURN,void)<SUB>429</SUB>> ]
+"522" [label = <(METHOD,ThrowAIOOBE)<SUB>428</SUB>> ]
+"529" [label = <(METHOD_RETURN,void)<SUB>428</SUB>> ]
   "522" -> "529" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/200-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/200-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/200-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/200-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,75 +1,75 @@
 digraph "GetObjectArrayElement" {  
-"11367" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2110</SUB>> ]
-"11386" [label = <(soa,soa(env))<SUB>2111</SUB>> ]
-"11388" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2112</SUB>> ]
-"11413" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));)<SUB>2114</SUB>> ]
-"11389" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2112</SUB>> ]
-"11400" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2113</SUB>> ]
-"11414" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index)))<SUB>2114</SUB>> ]
-"11390" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2112</SUB>> ]
-"11395" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2112</SUB>> ]
-"11401" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2113</SUB>> ]
-"11408" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2113</SUB>> ]
-"11415" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>2114</SUB>> ]
-"11420" [label = <(Get,array-&gt;Get(index))<SUB>2114</SUB>> ]
-"11371" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2110</SUB>> ]
-"11392" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2112</SUB>> ]
-"11396" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2112</SUB>> ]
-"11402" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2113</SUB>> ]
-"11405" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2113</SUB>> ]
-"11409" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2113</SUB>> ]
-"11416" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2114</SUB>> ]
-"11421" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Get)<SUB>2114</SUB>> ]
-"11372" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2110</SUB>> ]
-"11376" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2110</SUB>> ]
-"11383" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2110</SUB>> ]
-"11394" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2112</SUB>> ]
-"11398" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2112</SUB>> ]
-"11404" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2113</SUB>> ]
-"11407" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2113</SUB>> ]
-"11411" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2113</SUB>> ]
-"11418" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2114</SUB>> ]
-"11423" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2114</SUB>> ]
-"11377" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2110</SUB>> ]
-"11378" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2110</SUB>> ]
-"11380" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2110</SUB>> ]
-"11362" [label = <(METHOD,GetObjectArrayElement)<SUB>2109</SUB>> ]
-"11425" [label = <(METHOD_RETURN,jobject)<SUB>2109</SUB>> ]
-  "11367" -> "11372" 
-  "11367" -> "11386" 
-  "11386" -> "11394" 
-  "11388" -> "11418" 
-  "11413" -> "11425" 
-  "11389" -> "11404" 
-  "11400" -> "11388" 
-  "11414" -> "11413" 
-  "11390" -> "11398" 
-  "11395" -> "11389" 
-  "11401" -> "11411" 
-  "11408" -> "11400" 
-  "11415" -> "11423" 
-  "11420" -> "11414" 
-  "11371" -> "11378" 
-  "11371" -> "11386" 
-  "11392" -> "11390" 
-  "11396" -> "11395" 
-  "11402" -> "11407" 
-  "11405" -> "11401" 
-  "11409" -> "11408" 
-  "11416" -> "11415" 
-  "11421" -> "11420" 
-  "11372" -> "11371" 
-  "11376" -> "11383" 
-  "11383" -> "11425" 
-  "11394" -> "11392" 
-  "11398" -> "11396" 
+"11364" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2108</SUB>> ]
+"11383" [label = <(soa,soa(env))<SUB>2109</SUB>> ]
+"11385" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2110</SUB>> ]
+"11410" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));)<SUB>2112</SUB>> ]
+"11386" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2110</SUB>> ]
+"11397" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2111</SUB>> ]
+"11411" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index)))<SUB>2112</SUB>> ]
+"11387" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2110</SUB>> ]
+"11392" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2110</SUB>> ]
+"11398" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2111</SUB>> ]
+"11405" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2111</SUB>> ]
+"11412" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>2112</SUB>> ]
+"11417" [label = <(Get,array-&gt;Get(index))<SUB>2112</SUB>> ]
+"11368" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2108</SUB>> ]
+"11389" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2110</SUB>> ]
+"11393" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2110</SUB>> ]
+"11399" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2111</SUB>> ]
+"11402" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2111</SUB>> ]
+"11406" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2111</SUB>> ]
+"11413" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2112</SUB>> ]
+"11418" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Get)<SUB>2112</SUB>> ]
+"11369" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2108</SUB>> ]
+"11373" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2108</SUB>> ]
+"11380" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2108</SUB>> ]
+"11391" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2110</SUB>> ]
+"11395" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2110</SUB>> ]
+"11401" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2111</SUB>> ]
+"11404" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2111</SUB>> ]
+"11408" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2111</SUB>> ]
+"11415" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2112</SUB>> ]
+"11420" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2112</SUB>> ]
+"11374" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2108</SUB>> ]
+"11375" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2108</SUB>> ]
+"11377" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2108</SUB>> ]
+"11359" [label = <(METHOD,GetObjectArrayElement)<SUB>2107</SUB>> ]
+"11422" [label = <(METHOD_RETURN,jobject)<SUB>2107</SUB>> ]
+  "11364" -> "11369" 
+  "11364" -> "11383" 
+  "11383" -> "11391" 
+  "11385" -> "11415" 
+  "11410" -> "11422" 
+  "11386" -> "11401" 
+  "11397" -> "11385" 
+  "11411" -> "11410" 
+  "11387" -> "11395" 
+  "11392" -> "11386" 
+  "11398" -> "11408" 
+  "11405" -> "11397" 
+  "11412" -> "11420" 
+  "11417" -> "11411" 
+  "11368" -> "11375" 
+  "11368" -> "11383" 
+  "11389" -> "11387" 
+  "11393" -> "11392" 
+  "11399" -> "11404" 
+  "11402" -> "11398" 
+  "11406" -> "11405" 
+  "11413" -> "11412" 
+  "11418" -> "11417" 
+  "11369" -> "11368" 
+  "11373" -> "11380" 
+  "11380" -> "11422" 
+  "11391" -> "11389" 
+  "11395" -> "11393" 
+  "11401" -> "11399" 
   "11404" -> "11402" 
-  "11407" -> "11405" 
-  "11411" -> "11409" 
-  "11418" -> "11416" 
-  "11423" -> "11421" 
-  "11377" -> "11376" 
-  "11378" -> "11380" 
-  "11380" -> "11377" 
-  "11362" -> "11367" 
+  "11408" -> "11406" 
+  "11415" -> "11413" 
+  "11420" -> "11418" 
+  "11374" -> "11373" 
+  "11375" -> "11377" 
+  "11377" -> "11374" 
+  "11359" -> "11364" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/201-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/201-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/201-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/201-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,99 +1,99 @@
 digraph "SetObjectArrayElement" {  
-"11433" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2119</SUB>> ]
-"11451" [label = <(soa,soa(env))<SUB>2120</SUB>> ]
-"11453" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2121</SUB>> ]
-"11478" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; value = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2123</SUB>> ]
-"11495" [label = <(&lt;operator&gt;.greaterThan,array-&gt;Set&lt;false&gt;(index, value.Ptr()))<SUB>2124</SUB>> ]
-"11454" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2121</SUB>> ]
-"11465" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2122</SUB>> ]
-"11479" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; value)<SUB>2123</SUB>> ]
-"11486" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2123</SUB>> ]
-"11496" [label = <(&lt;operator&gt;.lessThan,array-&gt;Set&lt;false)<SUB>2124</SUB>> ]
-"11501" [label = <(&lt;operator&gt;.bracketedPrimary,(index, value.Ptr()))<SUB>2124</SUB>> ]
-"11455" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2121</SUB>> ]
-"11460" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2121</SUB>> ]
-"11466" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2122</SUB>> ]
-"11473" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2122</SUB>> ]
-"11480" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2123</SUB>> ]
-"11487" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2123</SUB>> ]
-"11497" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Set)<SUB>2124</SUB>> ]
-"11502" [label = <(&lt;operator&gt;.expressionList,index, value.Ptr())<SUB>2124</SUB>> ]
-"11437" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2119</SUB>> ]
-"11457" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2121</SUB>> ]
-"11461" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2121</SUB>> ]
-"11467" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2122</SUB>> ]
-"11470" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2122</SUB>> ]
-"11474" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2122</SUB>> ]
-"11482" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2123</SUB>> ]
-"11488" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2123</SUB>> ]
-"11491" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2123</SUB>> ]
-"11499" [label = <(FIELD_IDENTIFIER,Set,Set)<SUB>2124</SUB>> ]
-"11504" [label = <(Ptr,value.Ptr())<SUB>2124</SUB>> ]
-"11438" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2119</SUB>> ]
-"11442" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2119</SUB>> ]
-"11449" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2119</SUB>> ]
-"11459" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2121</SUB>> ]
-"11463" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2121</SUB>> ]
-"11469" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2122</SUB>> ]
-"11472" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2122</SUB>> ]
-"11476" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2122</SUB>> ]
-"11484" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2123</SUB>> ]
-"11490" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2123</SUB>> ]
-"11493" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2123</SUB>> ]
-"11505" [label = <(&lt;operator&gt;.fieldAccess,value.Ptr)<SUB>2124</SUB>> ]
-"11443" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2119</SUB>> ]
-"11507" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2124</SUB>> ]
-"11444" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2119</SUB>> ]
-"11446" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2119</SUB>> ]
-"11427" [label = <(METHOD,SetObjectArrayElement)<SUB>2117</SUB>> ]
-"11508" [label = <(METHOD_RETURN,void)<SUB>2117</SUB>> ]
-  "11433" -> "11438" 
-  "11433" -> "11451" 
-  "11451" -> "11459" 
-  "11453" -> "11484" 
-  "11478" -> "11499" 
-  "11495" -> "11508" 
-  "11454" -> "11469" 
-  "11465" -> "11453" 
-  "11479" -> "11490" 
-  "11486" -> "11478" 
-  "11496" -> "11507" 
-  "11501" -> "11495" 
-  "11455" -> "11463" 
-  "11460" -> "11454" 
-  "11466" -> "11476" 
-  "11473" -> "11465" 
-  "11480" -> "11479" 
-  "11487" -> "11486" 
-  "11497" -> "11496" 
-  "11502" -> "11501" 
-  "11437" -> "11444" 
-  "11437" -> "11451" 
-  "11457" -> "11455" 
-  "11461" -> "11460" 
-  "11467" -> "11472" 
-  "11470" -> "11466" 
-  "11474" -> "11473" 
-  "11482" -> "11480" 
-  "11488" -> "11493" 
-  "11491" -> "11487" 
-  "11499" -> "11497" 
-  "11504" -> "11502" 
-  "11438" -> "11437" 
-  "11442" -> "11449" 
-  "11449" -> "11508" 
-  "11459" -> "11457" 
-  "11463" -> "11461" 
+"11430" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2117</SUB>> ]
+"11448" [label = <(soa,soa(env))<SUB>2118</SUB>> ]
+"11450" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2119</SUB>> ]
+"11475" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; value = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2121</SUB>> ]
+"11492" [label = <(&lt;operator&gt;.greaterThan,array-&gt;Set&lt;false&gt;(index, value.Ptr()))<SUB>2122</SUB>> ]
+"11451" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2119</SUB>> ]
+"11462" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2120</SUB>> ]
+"11476" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; value)<SUB>2121</SUB>> ]
+"11483" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2121</SUB>> ]
+"11493" [label = <(&lt;operator&gt;.lessThan,array-&gt;Set&lt;false)<SUB>2122</SUB>> ]
+"11498" [label = <(&lt;operator&gt;.bracketedPrimary,(index, value.Ptr()))<SUB>2122</SUB>> ]
+"11452" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2119</SUB>> ]
+"11457" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2119</SUB>> ]
+"11463" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2120</SUB>> ]
+"11470" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2120</SUB>> ]
+"11477" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2121</SUB>> ]
+"11484" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2121</SUB>> ]
+"11494" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Set)<SUB>2122</SUB>> ]
+"11499" [label = <(&lt;operator&gt;.expressionList,index, value.Ptr())<SUB>2122</SUB>> ]
+"11434" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2117</SUB>> ]
+"11454" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2119</SUB>> ]
+"11458" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2119</SUB>> ]
+"11464" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2120</SUB>> ]
+"11467" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2120</SUB>> ]
+"11471" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2120</SUB>> ]
+"11479" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2121</SUB>> ]
+"11485" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2121</SUB>> ]
+"11488" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2121</SUB>> ]
+"11496" [label = <(FIELD_IDENTIFIER,Set,Set)<SUB>2122</SUB>> ]
+"11501" [label = <(Ptr,value.Ptr())<SUB>2122</SUB>> ]
+"11435" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2117</SUB>> ]
+"11439" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2117</SUB>> ]
+"11446" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2117</SUB>> ]
+"11456" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2119</SUB>> ]
+"11460" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2119</SUB>> ]
+"11466" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2120</SUB>> ]
+"11469" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2120</SUB>> ]
+"11473" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2120</SUB>> ]
+"11481" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2121</SUB>> ]
+"11487" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2121</SUB>> ]
+"11490" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2121</SUB>> ]
+"11502" [label = <(&lt;operator&gt;.fieldAccess,value.Ptr)<SUB>2122</SUB>> ]
+"11440" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2117</SUB>> ]
+"11504" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2122</SUB>> ]
+"11441" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2117</SUB>> ]
+"11443" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2117</SUB>> ]
+"11424" [label = <(METHOD,SetObjectArrayElement)<SUB>2115</SUB>> ]
+"11505" [label = <(METHOD_RETURN,void)<SUB>2115</SUB>> ]
+  "11430" -> "11435" 
+  "11430" -> "11448" 
+  "11448" -> "11456" 
+  "11450" -> "11481" 
+  "11475" -> "11496" 
+  "11492" -> "11505" 
+  "11451" -> "11466" 
+  "11462" -> "11450" 
+  "11476" -> "11487" 
+  "11483" -> "11475" 
+  "11493" -> "11504" 
+  "11498" -> "11492" 
+  "11452" -> "11460" 
+  "11457" -> "11451" 
+  "11463" -> "11473" 
+  "11470" -> "11462" 
+  "11477" -> "11476" 
+  "11484" -> "11483" 
+  "11494" -> "11493" 
+  "11499" -> "11498" 
+  "11434" -> "11441" 
+  "11434" -> "11448" 
+  "11454" -> "11452" 
+  "11458" -> "11457" 
+  "11464" -> "11469" 
+  "11467" -> "11463" 
+  "11471" -> "11470" 
+  "11479" -> "11477" 
+  "11485" -> "11490" 
+  "11488" -> "11484" 
+  "11496" -> "11494" 
+  "11501" -> "11499" 
+  "11435" -> "11434" 
+  "11439" -> "11446" 
+  "11446" -> "11505" 
+  "11456" -> "11454" 
+  "11460" -> "11458" 
+  "11466" -> "11464" 
   "11469" -> "11467" 
-  "11472" -> "11470" 
-  "11476" -> "11474" 
-  "11484" -> "11482" 
+  "11473" -> "11471" 
+  "11481" -> "11479" 
+  "11487" -> "11485" 
   "11490" -> "11488" 
-  "11493" -> "11491" 
-  "11505" -> "11504" 
-  "11443" -> "11442" 
-  "11507" -> "11505" 
-  "11444" -> "11446" 
-  "11446" -> "11443" 
-  "11427" -> "11433" 
+  "11502" -> "11501" 
+  "11440" -> "11439" 
+  "11504" -> "11502" 
+  "11441" -> "11443" 
+  "11443" -> "11440" 
+  "11424" -> "11430" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/202-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/202-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/202-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/202-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,9 +1,9 @@
 digraph "NewBooleanArray" {  
-"11514" [label = <(RETURN,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);)<SUB>2128</SUB>> ]
-"11515" [label = <(NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;,NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length))<SUB>2128</SUB>> ]
-"11510" [label = <(METHOD,NewBooleanArray)<SUB>2127</SUB>> ]
-"11518" [label = <(METHOD_RETURN,jbooleanArray)<SUB>2127</SUB>> ]
-  "11514" -> "11518" 
-  "11515" -> "11514" 
-  "11510" -> "11515" 
+"11511" [label = <(RETURN,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);)<SUB>2126</SUB>> ]
+"11512" [label = <(NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;,NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length))<SUB>2126</SUB>> ]
+"11507" [label = <(METHOD,NewBooleanArray)<SUB>2125</SUB>> ]
+"11515" [label = <(METHOD_RETURN,jbooleanArray)<SUB>2125</SUB>> ]
+  "11511" -> "11515" 
+  "11512" -> "11511" 
+  "11507" -> "11512" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/203-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/203-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/203-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/203-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,9 +1,9 @@
 digraph "NewByteArray" {  
-"11524" [label = <(RETURN,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);)<SUB>2132</SUB>> ]
-"11525" [label = <(NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;,NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length))<SUB>2132</SUB>> ]
-"11520" [label = <(METHOD,NewByteArray)<SUB>2131</SUB>> ]
-"11528" [label = <(METHOD_RETURN,jbyteArray)<SUB>2131</SUB>> ]
-  "11524" -> "11528" 
-  "11525" -> "11524" 
-  "11520" -> "11525" 
+"11521" [label = <(RETURN,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);)<SUB>2130</SUB>> ]
+"11522" [label = <(NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;,NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length))<SUB>2130</SUB>> ]
+"11517" [label = <(METHOD,NewByteArray)<SUB>2129</SUB>> ]
+"11525" [label = <(METHOD_RETURN,jbyteArray)<SUB>2129</SUB>> ]
+  "11521" -> "11525" 
+  "11522" -> "11521" 
+  "11517" -> "11522" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/204-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/204-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/204-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/204-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,9 +1,9 @@
 digraph "NewCharArray" {  
-"11534" [label = <(RETURN,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);)<SUB>2136</SUB>> ]
-"11535" [label = <(NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;,NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length))<SUB>2136</SUB>> ]
-"11530" [label = <(METHOD,NewCharArray)<SUB>2135</SUB>> ]
-"11538" [label = <(METHOD_RETURN,jcharArray)<SUB>2135</SUB>> ]
-  "11534" -> "11538" 
-  "11535" -> "11534" 
-  "11530" -> "11535" 
+"11531" [label = <(RETURN,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);)<SUB>2134</SUB>> ]
+"11532" [label = <(NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;,NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length))<SUB>2134</SUB>> ]
+"11527" [label = <(METHOD,NewCharArray)<SUB>2133</SUB>> ]
+"11535" [label = <(METHOD_RETURN,jcharArray)<SUB>2133</SUB>> ]
+  "11531" -> "11535" 
+  "11532" -> "11531" 
+  "11527" -> "11532" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/205-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/205-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/205-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/205-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,9 +1,9 @@
 digraph "NewDoubleArray" {  
-"11544" [label = <(RETURN,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);)<SUB>2140</SUB>> ]
-"11545" [label = <(NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;,NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length))<SUB>2140</SUB>> ]
-"11540" [label = <(METHOD,NewDoubleArray)<SUB>2139</SUB>> ]
-"11548" [label = <(METHOD_RETURN,jdoubleArray)<SUB>2139</SUB>> ]
-  "11544" -> "11548" 
-  "11545" -> "11544" 
-  "11540" -> "11545" 
+"11541" [label = <(RETURN,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);)<SUB>2138</SUB>> ]
+"11542" [label = <(NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;,NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length))<SUB>2138</SUB>> ]
+"11537" [label = <(METHOD,NewDoubleArray)<SUB>2137</SUB>> ]
+"11545" [label = <(METHOD_RETURN,jdoubleArray)<SUB>2137</SUB>> ]
+  "11541" -> "11545" 
+  "11542" -> "11541" 
+  "11537" -> "11542" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/206-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/206-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/206-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/206-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,9 +1,9 @@
 digraph "NewFloatArray" {  
-"11554" [label = <(RETURN,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);)<SUB>2144</SUB>> ]
-"11555" [label = <(NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;,NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length))<SUB>2144</SUB>> ]
-"11550" [label = <(METHOD,NewFloatArray)<SUB>2143</SUB>> ]
-"11558" [label = <(METHOD_RETURN,jfloatArray)<SUB>2143</SUB>> ]
-  "11554" -> "11558" 
-  "11555" -> "11554" 
-  "11550" -> "11555" 
+"11551" [label = <(RETURN,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);)<SUB>2142</SUB>> ]
+"11552" [label = <(NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;,NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length))<SUB>2142</SUB>> ]
+"11547" [label = <(METHOD,NewFloatArray)<SUB>2141</SUB>> ]
+"11555" [label = <(METHOD_RETURN,jfloatArray)<SUB>2141</SUB>> ]
+  "11551" -> "11555" 
+  "11552" -> "11551" 
+  "11547" -> "11552" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/207-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/207-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/207-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/207-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,9 +1,9 @@
 digraph "NewIntArray" {  
-"11564" [label = <(RETURN,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);)<SUB>2148</SUB>> ]
-"11565" [label = <(NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;,NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length))<SUB>2148</SUB>> ]
-"11560" [label = <(METHOD,NewIntArray)<SUB>2147</SUB>> ]
-"11568" [label = <(METHOD_RETURN,jintArray)<SUB>2147</SUB>> ]
-  "11564" -> "11568" 
-  "11565" -> "11564" 
-  "11560" -> "11565" 
+"11561" [label = <(RETURN,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);)<SUB>2146</SUB>> ]
+"11562" [label = <(NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;,NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length))<SUB>2146</SUB>> ]
+"11557" [label = <(METHOD,NewIntArray)<SUB>2145</SUB>> ]
+"11565" [label = <(METHOD_RETURN,jintArray)<SUB>2145</SUB>> ]
+  "11561" -> "11565" 
+  "11562" -> "11561" 
+  "11557" -> "11562" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/208-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/208-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/208-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/208-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,9 +1,9 @@
 digraph "NewLongArray" {  
-"11574" [label = <(RETURN,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);)<SUB>2152</SUB>> ]
-"11575" [label = <(NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;,NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length))<SUB>2152</SUB>> ]
-"11570" [label = <(METHOD,NewLongArray)<SUB>2151</SUB>> ]
-"11578" [label = <(METHOD_RETURN,jlongArray)<SUB>2151</SUB>> ]
-  "11574" -> "11578" 
-  "11575" -> "11574" 
-  "11570" -> "11575" 
+"11571" [label = <(RETURN,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);)<SUB>2150</SUB>> ]
+"11572" [label = <(NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;,NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length))<SUB>2150</SUB>> ]
+"11567" [label = <(METHOD,NewLongArray)<SUB>2149</SUB>> ]
+"11575" [label = <(METHOD_RETURN,jlongArray)<SUB>2149</SUB>> ]
+  "11571" -> "11575" 
+  "11572" -> "11571" 
+  "11567" -> "11572" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/209-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/209-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/209-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/209-cfg.dot	2023-06-07 19:34:41.707389010 +0330
@@ -1,333 +1,333 @@
 digraph "NewObjectArray" {  
-"11602" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2161</SUB>> ]
-"11621" [label = <(soa,soa(env))<SUB>2164</SUB>> ]
-"11623" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; array_class)<SUB>2165</SUB>> ]
-"11706" [label = <(&lt;operator&gt;.assignment,mirror::ObjectArray&lt;mirror::Object&gt;* result =\012        mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2182</SUB>> ]
-"11846" [label = <(RETURN,return soa.AddLocalReference&lt;jobjectArray&gt;(result);,return soa.AddLocalReference&lt;jobjectArray&gt;(result);)<SUB>2201</SUB>> ]
-"11587" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2157</SUB>> ]
-"11624" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2165</SUB>> ]
-"11631" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = soa.Decode&lt;mirror::Class&gt;(element_jclass).Ptr())<SUB>2167</SUB>> ]
-"11677" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>2174</SUB>> ]
-"11686" [label = <(&lt;operator&gt;.assignment,array_class = class_linker-&gt;FindArrayClass(soa.Self(), &amp;element_class))<SUB>2175</SUB>> ]
-"11707" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;* result)<SUB>2182</SUB>> ]
-"11717" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2183</SUB>> ]
-"11736" [label = <(&lt;operator&gt;.logicalAnd,result != nullptr &amp;&amp; initial_element != nullptr)<SUB>2184</SUB>> ]
-"11847" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>2201</SUB>> ]
-"11588" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2157</SUB>> ]
-"11592" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2158</SUB>> ]
-"11600" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2159</SUB>> ]
-"11626" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2165</SUB>> ]
-"11632" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2167</SUB>> ]
-"11639" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(element_jclass).Ptr())<SUB>2167</SUB>> ]
-"11652" [label = <(UNLIKELY,UNLIKELY(element_class-&gt;IsPrimitive()))<SUB>2168</SUB>> ]
-"11679" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2174</SUB>> ]
-"11688" [label = <(FindArrayClass,class_linker-&gt;FindArrayClass(soa.Self(), &amp;element_class))<SUB>2175</SUB>> ]
-"11699" [label = <(UNLIKELY,UNLIKELY(array_class == nullptr))<SUB>2176</SUB>> ]
-"11708" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2182</SUB>> ]
-"11715" [label = <(&lt;operator&gt;.indirection,* result)<SUB>2182</SUB>> ]
-"11718" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2183</SUB>> ]
-"11725" [label = <(::Alloc,::Alloc(soa.Self(), array_class, length))<SUB>2183</SUB>> ]
-"11737" [label = <(&lt;operator&gt;.notEquals,result != nullptr)<SUB>2184</SUB>> ]
-"11740" [label = <(&lt;operator&gt;.notEquals,initial_element != nullptr)<SUB>2184</SUB>> ]
-"11744" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; initial_object = soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2185</SUB>> ]
-"11848" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>2201</SUB>> ]
-"11593" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2158</SUB>> ]
-"11606" [label = <(UNLIKELY,UNLIKELY((element_jclass) == nullptr))<SUB>2161</SUB>> ]
-"11628" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2165</SUB>> ]
-"11633" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2167</SUB>> ]
-"11640" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2167</SUB>> ]
-"11647" [label = <(Ptr,(element_jclass).Ptr())<SUB>2167</SUB>> ]
-"11653" [label = <(IsPrimitive,element_class-&gt;IsPrimitive())<SUB>2168</SUB>> ]
-"11658" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;,\012 &quot;not an object type: %s&quot;,\012                            element_class-&gt;PrettyDescriptor().c_str()))<SUB>2169</SUB>> ]
-"11674" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2172</SUB>> ]
-"11680" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2174</SUB>> ]
-"11689" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindArrayClass)<SUB>2175</SUB>> ]
-"11692" [label = <(Self,soa.Self())<SUB>2175</SUB>> ]
-"11696" [label = <(&lt;operator&gt;.addressOf,&amp;element_class)<SUB>2175</SUB>> ]
-"11700" [label = <(&lt;operator&gt;.equals,array_class == nullptr)<SUB>2176</SUB>> ]
-"11704" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2177</SUB>> ]
-"11709" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2182</SUB>> ]
-"11712" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2182</SUB>> ]
-"11719" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2183</SUB>> ]
-"11722" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2183</SUB>> ]
-"11726" [label = <(&lt;operator&gt;.fieldAccess,::Alloc)<SUB>2183</SUB>> ]
-"11729" [label = <(Self,soa.Self())<SUB>2183</SUB>> ]
-"11745" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; initial_object)<SUB>2185</SUB>> ]
-"11752" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2185</SUB>> ]
-"11762" [label = <(&lt;operator&gt;.notEquals,initial_object != nullptr)<SUB>2186</SUB>> ]
-"11849" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2201</SUB>> ]
-"11594" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2158</SUB>> ]
-"11596" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2158</SUB>> ]
-"11607" [label = <(&lt;operator&gt;.equals,(element_jclass) == nullptr)<SUB>2161</SUB>> ]
-"11611" [label = <(CHECK_NON_NULL_ARGUMENT(element_jclass),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;element_jclass == null&quot;))<SUB>2161</SUB>> ]
-"11618" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(element_jclass),CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2161</SUB>> ]
-"11635" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2167</SUB>> ]
-"11641" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2167</SUB>> ]
-"11644" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2167</SUB>> ]
-"11648" [label = <(&lt;operator&gt;.fieldAccess,(element_jclass).Ptr)<SUB>2167</SUB>> ]
-"11654" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsPrimitive)<SUB>2168</SUB>> ]
-"11659" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2169</SUB>> ]
-"11667" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2171</SUB>> ]
-"11681" [label = <(Runtime::Current,Runtime::Current())<SUB>2174</SUB>> ]
-"11685" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2174</SUB>> ]
-"11691" [label = <(FIELD_IDENTIFIER,FindArrayClass,FindArrayClass)<SUB>2175</SUB>> ]
-"11693" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2175</SUB>> ]
-"11711" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2182</SUB>> ]
-"11714" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2182</SUB>> ]
-"11721" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2183</SUB>> ]
-"11724" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2183</SUB>> ]
-"11728" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2183</SUB>> ]
-"11730" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2183</SUB>> ]
-"11746" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2185</SUB>> ]
-"11753" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2185</SUB>> ]
-"11767" [label = <(&lt;operator&gt;.assignment,* element_class = result-&gt;GetClass()-&gt;GetComponentType())<SUB>2187</SUB>> ]
-"11851" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2201</SUB>> ]
-"11612" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2161</SUB>> ]
-"11637" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2167</SUB>> ]
-"11643" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2167</SUB>> ]
-"11646" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2167</SUB>> ]
-"11650" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2167</SUB>> ]
-"11656" [label = <(FIELD_IDENTIFIER,IsPrimitive,IsPrimitive)<SUB>2168</SUB>> ]
-"11660" [label = <(Vm,soa.Vm())<SUB>2169</SUB>> ]
-"11664" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2169</SUB>> ]
-"11668" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2171</SUB>> ]
-"11682" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2174</SUB>> ]
-"11695" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2175</SUB>> ]
-"11732" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2183</SUB>> ]
-"11748" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2185</SUB>> ]
-"11754" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2185</SUB>> ]
-"11757" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2185</SUB>> ]
-"11769" [label = <(GetComponentType,result-&gt;GetClass()-&gt;GetComponentType())<SUB>2187</SUB>> ]
-"11777" [label = <(UNLIKELY,UNLIKELY(!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass())))<SUB>2188</SUB>> ]
-"11613" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2161</SUB>> ]
-"11615" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2161</SUB>> ]
-"11661" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2169</SUB>> ]
-"11669" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2171</SUB>> ]
-"11673" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2171</SUB>> ]
-"11684" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2174</SUB>> ]
-"11750" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2185</SUB>> ]
-"11756" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2185</SUB>> ]
-"11759" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2185</SUB>> ]
-"11770" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass()-&gt;GetComponentType)<SUB>2187</SUB>> ]
-"11778" [label = <(&lt;operator&gt;.logicalNot,!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2188</SUB>> ]
-"11788" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;cannot assign object of type '%s' to array with &quot;\012 &quot;element type of '%s'&quot;,\012                              mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str(),\012                              element_class-&gt;PrettyDescriptor().c_str()))<SUB>2189</SUB>> ]
-"11817" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2193</SUB>> ]
-"11663" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2169</SUB>> ]
-"11670" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2171</SUB>> ]
-"11771" [label = <(GetClass,result-&gt;GetClass())<SUB>2187</SUB>> ]
-"11775" [label = <(FIELD_IDENTIFIER,GetComponentType,GetComponentType)<SUB>2187</SUB>> ]
-"11779" [label = <(IsAssignableFrom,element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2188</SUB>> ]
-"11789" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2189</SUB>> ]
-"11797" [label = <(c_str,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str())<SUB>2191</SUB>> ]
-"11810" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2192</SUB>> ]
-"11672" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2171</SUB>> ]
-"11772" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass)<SUB>2187</SUB>> ]
-"11780" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsAssignableFrom)<SUB>2188</SUB>> ]
-"11783" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2188</SUB>> ]
-"11790" [label = <(Vm,soa.Vm())<SUB>2189</SUB>> ]
-"11794" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2189</SUB>> ]
-"11798" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str)<SUB>2191</SUB>> ]
-"11811" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2192</SUB>> ]
-"11827" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2195</SUB>> ]
-"11830" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2195</SUB>> ]
-"11774" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2187</SUB>> ]
-"11782" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2188</SUB>> ]
-"11784" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2188</SUB>> ]
-"11791" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2189</SUB>> ]
-"11799" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()))<SUB>2191</SUB>> ]
-"11809" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2191</SUB>> ]
-"11812" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2192</SUB>> ]
-"11816" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2192</SUB>> ]
-"11824" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2195</SUB>> ]
-"11833" [label = <(&lt;operator&gt;.greaterThan,result-&gt;SetWithoutChecks&lt;false&gt;(i, initial_object.Ptr()))<SUB>2196</SUB>> ]
-"11786" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2188</SUB>> ]
-"11793" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2189</SUB>> ]
-"11800" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2191</SUB>> ]
-"11805" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2191</SUB>> ]
-"11813" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2192</SUB>> ]
-"11834" [label = <(&lt;operator&gt;.lessThan,result-&gt;SetWithoutChecks&lt;false)<SUB>2196</SUB>> ]
-"11839" [label = <(&lt;operator&gt;.bracketedPrimary,(i, initial_object.Ptr()))<SUB>2196</SUB>> ]
-"11801" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2191</SUB>> ]
-"11804" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2191</SUB>> ]
-"11806" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2191</SUB>> ]
-"11815" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2192</SUB>> ]
-"11835" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;SetWithoutChecks)<SUB>2196</SUB>> ]
-"11840" [label = <(&lt;operator&gt;.expressionList,i, initial_object.Ptr())<SUB>2196</SUB>> ]
-"11808" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2191</SUB>> ]
-"11837" [label = <(FIELD_IDENTIFIER,SetWithoutChecks,SetWithoutChecks)<SUB>2196</SUB>> ]
-"11842" [label = <(Ptr,initial_object.Ptr())<SUB>2196</SUB>> ]
-"11843" [label = <(&lt;operator&gt;.fieldAccess,initial_object.Ptr)<SUB>2196</SUB>> ]
-"11845" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2196</SUB>> ]
-"11580" [label = <(METHOD,NewObjectArray)<SUB>2155</SUB>> ]
-"11854" [label = <(METHOD_RETURN,jobjectArray)<SUB>2155</SUB>> ]
-  "11602" -> "11607" 
-  "11602" -> "11621" 
-  "11621" -> "11628" 
-  "11623" -> "11637" 
-  "11706" -> "11737" 
-  "11846" -> "11854" 
-  "11587" -> "11594" 
-  "11587" -> "11602" 
-  "11624" -> "11623" 
-  "11631" -> "11656" 
-  "11677" -> "11691" 
-  "11686" -> "11700" 
-  "11707" -> "11721" 
-  "11717" -> "11706" 
-  "11736" -> "11750" 
-  "11736" -> "11851" 
-  "11847" -> "11846" 
-  "11588" -> "11587" 
-  "11592" -> "11600" 
-  "11600" -> "11854" 
-  "11626" -> "11624" 
-  "11632" -> "11643" 
-  "11639" -> "11631" 
-  "11652" -> "11663" 
-  "11652" -> "11684" 
-  "11679" -> "11677" 
+"11599" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2159</SUB>> ]
+"11618" [label = <(soa,soa(env))<SUB>2162</SUB>> ]
+"11620" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; array_class)<SUB>2163</SUB>> ]
+"11703" [label = <(&lt;operator&gt;.assignment,mirror::ObjectArray&lt;mirror::Object&gt;* result =\012        mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2180</SUB>> ]
+"11843" [label = <(RETURN,return soa.AddLocalReference&lt;jobjectArray&gt;(result);,return soa.AddLocalReference&lt;jobjectArray&gt;(result);)<SUB>2199</SUB>> ]
+"11584" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2155</SUB>> ]
+"11621" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2163</SUB>> ]
+"11628" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = soa.Decode&lt;mirror::Class&gt;(element_jclass).Ptr())<SUB>2165</SUB>> ]
+"11674" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>2172</SUB>> ]
+"11683" [label = <(&lt;operator&gt;.assignment,array_class = class_linker-&gt;FindArrayClass(soa.Self(), &amp;element_class))<SUB>2173</SUB>> ]
+"11704" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;* result)<SUB>2180</SUB>> ]
+"11714" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2181</SUB>> ]
+"11733" [label = <(&lt;operator&gt;.logicalAnd,result != nullptr &amp;&amp; initial_element != nullptr)<SUB>2182</SUB>> ]
+"11844" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>2199</SUB>> ]
+"11585" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2155</SUB>> ]
+"11589" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2156</SUB>> ]
+"11597" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2157</SUB>> ]
+"11623" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2163</SUB>> ]
+"11629" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2165</SUB>> ]
+"11636" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(element_jclass).Ptr())<SUB>2165</SUB>> ]
+"11649" [label = <(UNLIKELY,UNLIKELY(element_class-&gt;IsPrimitive()))<SUB>2166</SUB>> ]
+"11676" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2172</SUB>> ]
+"11685" [label = <(FindArrayClass,class_linker-&gt;FindArrayClass(soa.Self(), &amp;element_class))<SUB>2173</SUB>> ]
+"11696" [label = <(UNLIKELY,UNLIKELY(array_class == nullptr))<SUB>2174</SUB>> ]
+"11705" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2180</SUB>> ]
+"11712" [label = <(&lt;operator&gt;.indirection,* result)<SUB>2180</SUB>> ]
+"11715" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2181</SUB>> ]
+"11722" [label = <(::Alloc,::Alloc(soa.Self(), array_class, length))<SUB>2181</SUB>> ]
+"11734" [label = <(&lt;operator&gt;.notEquals,result != nullptr)<SUB>2182</SUB>> ]
+"11737" [label = <(&lt;operator&gt;.notEquals,initial_element != nullptr)<SUB>2182</SUB>> ]
+"11741" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; initial_object = soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2183</SUB>> ]
+"11845" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>2199</SUB>> ]
+"11590" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2156</SUB>> ]
+"11603" [label = <(UNLIKELY,UNLIKELY((element_jclass) == nullptr))<SUB>2159</SUB>> ]
+"11625" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2163</SUB>> ]
+"11630" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2165</SUB>> ]
+"11637" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2165</SUB>> ]
+"11644" [label = <(Ptr,(element_jclass).Ptr())<SUB>2165</SUB>> ]
+"11650" [label = <(IsPrimitive,element_class-&gt;IsPrimitive())<SUB>2166</SUB>> ]
+"11655" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;,\012 &quot;not an object type: %s&quot;,\012                            element_class-&gt;PrettyDescriptor().c_str()))<SUB>2167</SUB>> ]
+"11671" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2170</SUB>> ]
+"11677" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2172</SUB>> ]
+"11686" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindArrayClass)<SUB>2173</SUB>> ]
+"11689" [label = <(Self,soa.Self())<SUB>2173</SUB>> ]
+"11693" [label = <(&lt;operator&gt;.addressOf,&amp;element_class)<SUB>2173</SUB>> ]
+"11697" [label = <(&lt;operator&gt;.equals,array_class == nullptr)<SUB>2174</SUB>> ]
+"11701" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2175</SUB>> ]
+"11706" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2180</SUB>> ]
+"11709" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2180</SUB>> ]
+"11716" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2181</SUB>> ]
+"11719" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2181</SUB>> ]
+"11723" [label = <(&lt;operator&gt;.fieldAccess,::Alloc)<SUB>2181</SUB>> ]
+"11726" [label = <(Self,soa.Self())<SUB>2181</SUB>> ]
+"11742" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; initial_object)<SUB>2183</SUB>> ]
+"11749" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2183</SUB>> ]
+"11759" [label = <(&lt;operator&gt;.notEquals,initial_object != nullptr)<SUB>2184</SUB>> ]
+"11846" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2199</SUB>> ]
+"11591" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2156</SUB>> ]
+"11593" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2156</SUB>> ]
+"11604" [label = <(&lt;operator&gt;.equals,(element_jclass) == nullptr)<SUB>2159</SUB>> ]
+"11608" [label = <(CHECK_NON_NULL_ARGUMENT(element_jclass),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;element_jclass == null&quot;))<SUB>2159</SUB>> ]
+"11615" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(element_jclass),CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2159</SUB>> ]
+"11632" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2165</SUB>> ]
+"11638" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2165</SUB>> ]
+"11641" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2165</SUB>> ]
+"11645" [label = <(&lt;operator&gt;.fieldAccess,(element_jclass).Ptr)<SUB>2165</SUB>> ]
+"11651" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsPrimitive)<SUB>2166</SUB>> ]
+"11656" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2167</SUB>> ]
+"11664" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2169</SUB>> ]
+"11678" [label = <(Runtime::Current,Runtime::Current())<SUB>2172</SUB>> ]
+"11682" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2172</SUB>> ]
+"11688" [label = <(FIELD_IDENTIFIER,FindArrayClass,FindArrayClass)<SUB>2173</SUB>> ]
+"11690" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2173</SUB>> ]
+"11708" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2180</SUB>> ]
+"11711" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2180</SUB>> ]
+"11718" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2181</SUB>> ]
+"11721" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2181</SUB>> ]
+"11725" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2181</SUB>> ]
+"11727" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2181</SUB>> ]
+"11743" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2183</SUB>> ]
+"11750" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2183</SUB>> ]
+"11764" [label = <(&lt;operator&gt;.assignment,* element_class = result-&gt;GetClass()-&gt;GetComponentType())<SUB>2185</SUB>> ]
+"11848" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2199</SUB>> ]
+"11609" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2159</SUB>> ]
+"11634" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2165</SUB>> ]
+"11640" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2165</SUB>> ]
+"11643" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2165</SUB>> ]
+"11647" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2165</SUB>> ]
+"11653" [label = <(FIELD_IDENTIFIER,IsPrimitive,IsPrimitive)<SUB>2166</SUB>> ]
+"11657" [label = <(Vm,soa.Vm())<SUB>2167</SUB>> ]
+"11661" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2167</SUB>> ]
+"11665" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2169</SUB>> ]
+"11679" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2172</SUB>> ]
+"11692" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2173</SUB>> ]
+"11729" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2181</SUB>> ]
+"11745" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2183</SUB>> ]
+"11751" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2183</SUB>> ]
+"11754" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2183</SUB>> ]
+"11766" [label = <(GetComponentType,result-&gt;GetClass()-&gt;GetComponentType())<SUB>2185</SUB>> ]
+"11774" [label = <(UNLIKELY,UNLIKELY(!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass())))<SUB>2186</SUB>> ]
+"11610" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2159</SUB>> ]
+"11612" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2159</SUB>> ]
+"11658" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2167</SUB>> ]
+"11666" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2169</SUB>> ]
+"11670" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2169</SUB>> ]
+"11681" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2172</SUB>> ]
+"11747" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2183</SUB>> ]
+"11753" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2183</SUB>> ]
+"11756" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2183</SUB>> ]
+"11767" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass()-&gt;GetComponentType)<SUB>2185</SUB>> ]
+"11775" [label = <(&lt;operator&gt;.logicalNot,!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2186</SUB>> ]
+"11785" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;cannot assign object of type '%s' to array with &quot;\012 &quot;element type of '%s'&quot;,\012                              mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str(),\012                              element_class-&gt;PrettyDescriptor().c_str()))<SUB>2187</SUB>> ]
+"11814" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2191</SUB>> ]
+"11660" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2167</SUB>> ]
+"11667" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2169</SUB>> ]
+"11768" [label = <(GetClass,result-&gt;GetClass())<SUB>2185</SUB>> ]
+"11772" [label = <(FIELD_IDENTIFIER,GetComponentType,GetComponentType)<SUB>2185</SUB>> ]
+"11776" [label = <(IsAssignableFrom,element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2186</SUB>> ]
+"11786" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2187</SUB>> ]
+"11794" [label = <(c_str,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str())<SUB>2189</SUB>> ]
+"11807" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2190</SUB>> ]
+"11669" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2169</SUB>> ]
+"11769" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass)<SUB>2185</SUB>> ]
+"11777" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsAssignableFrom)<SUB>2186</SUB>> ]
+"11780" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2186</SUB>> ]
+"11787" [label = <(Vm,soa.Vm())<SUB>2187</SUB>> ]
+"11791" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2187</SUB>> ]
+"11795" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str)<SUB>2189</SUB>> ]
+"11808" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2190</SUB>> ]
+"11824" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2193</SUB>> ]
+"11827" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2193</SUB>> ]
+"11771" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2185</SUB>> ]
+"11779" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2186</SUB>> ]
+"11781" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2186</SUB>> ]
+"11788" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2187</SUB>> ]
+"11796" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()))<SUB>2189</SUB>> ]
+"11806" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2189</SUB>> ]
+"11809" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2190</SUB>> ]
+"11813" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2190</SUB>> ]
+"11821" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2193</SUB>> ]
+"11830" [label = <(&lt;operator&gt;.greaterThan,result-&gt;SetWithoutChecks&lt;false&gt;(i, initial_object.Ptr()))<SUB>2194</SUB>> ]
+"11783" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2186</SUB>> ]
+"11790" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2187</SUB>> ]
+"11797" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2189</SUB>> ]
+"11802" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2189</SUB>> ]
+"11810" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2190</SUB>> ]
+"11831" [label = <(&lt;operator&gt;.lessThan,result-&gt;SetWithoutChecks&lt;false)<SUB>2194</SUB>> ]
+"11836" [label = <(&lt;operator&gt;.bracketedPrimary,(i, initial_object.Ptr()))<SUB>2194</SUB>> ]
+"11798" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2189</SUB>> ]
+"11801" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2189</SUB>> ]
+"11803" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2189</SUB>> ]
+"11812" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2190</SUB>> ]
+"11832" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;SetWithoutChecks)<SUB>2194</SUB>> ]
+"11837" [label = <(&lt;operator&gt;.expressionList,i, initial_object.Ptr())<SUB>2194</SUB>> ]
+"11805" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2189</SUB>> ]
+"11834" [label = <(FIELD_IDENTIFIER,SetWithoutChecks,SetWithoutChecks)<SUB>2194</SUB>> ]
+"11839" [label = <(Ptr,initial_object.Ptr())<SUB>2194</SUB>> ]
+"11840" [label = <(&lt;operator&gt;.fieldAccess,initial_object.Ptr)<SUB>2194</SUB>> ]
+"11842" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2194</SUB>> ]
+"11577" [label = <(METHOD,NewObjectArray)<SUB>2153</SUB>> ]
+"11851" [label = <(METHOD_RETURN,jobjectArray)<SUB>2153</SUB>> ]
+  "11599" -> "11604" 
+  "11599" -> "11618" 
+  "11618" -> "11625" 
+  "11620" -> "11634" 
+  "11703" -> "11734" 
+  "11843" -> "11851" 
+  "11584" -> "11591" 
+  "11584" -> "11599" 
+  "11621" -> "11620" 
+  "11628" -> "11653" 
+  "11674" -> "11688" 
+  "11683" -> "11697" 
+  "11704" -> "11718" 
+  "11714" -> "11703" 
+  "11733" -> "11747" 
+  "11733" -> "11848" 
+  "11844" -> "11843" 
+  "11585" -> "11584" 
+  "11589" -> "11597" 
+  "11597" -> "11851" 
+  "11623" -> "11621" 
+  "11629" -> "11640" 
+  "11636" -> "11628" 
+  "11649" -> "11660" 
+  "11649" -> "11681" 
+  "11676" -> "11674" 
+  "11685" -> "11683" 
+  "11696" -> "11701" 
+  "11696" -> "11708" 
+  "11705" -> "11712" 
+  "11712" -> "11704" 
+  "11715" -> "11725" 
+  "11722" -> "11714" 
+  "11734" -> "11733" 
+  "11734" -> "11737" 
+  "11737" -> "11733" 
+  "11741" -> "11759" 
+  "11845" -> "11844" 
+  "11590" -> "11589" 
+  "11603" -> "11610" 
+  "11603" -> "11618" 
+  "11625" -> "11623" 
+  "11630" -> "11629" 
+  "11637" -> "11647" 
+  "11644" -> "11636" 
+  "11650" -> "11649" 
+  "11655" -> "11671" 
+  "11671" -> "11851" 
+  "11677" -> "11676" 
+  "11686" -> "11692" 
+  "11689" -> "11693" 
+  "11693" -> "11685" 
+  "11697" -> "11696" 
+  "11701" -> "11851" 
+  "11706" -> "11711" 
+  "11709" -> "11705" 
+  "11716" -> "11721" 
+  "11719" -> "11715" 
+  "11723" -> "11729" 
+  "11726" -> "11722" 
+  "11742" -> "11753" 
+  "11749" -> "11741" 
+  "11759" -> "11771" 
+  "11759" -> "11848" 
+  "11846" -> "11845" 
+  "11591" -> "11593" 
+  "11593" -> "11590" 
+  "11604" -> "11603" 
+  "11608" -> "11615" 
+  "11615" -> "11851" 
+  "11632" -> "11630" 
+  "11638" -> "11643" 
+  "11641" -> "11637" 
+  "11645" -> "11644" 
+  "11651" -> "11650" 
+  "11656" -> "11669" 
+  "11664" -> "11655" 
+  "11678" -> "11682" 
+  "11682" -> "11677" 
   "11688" -> "11686" 
-  "11699" -> "11704" 
-  "11699" -> "11711" 
-  "11708" -> "11715" 
-  "11715" -> "11707" 
-  "11718" -> "11728" 
-  "11725" -> "11717" 
-  "11737" -> "11736" 
-  "11737" -> "11740" 
-  "11740" -> "11736" 
-  "11744" -> "11762" 
-  "11848" -> "11847" 
-  "11593" -> "11592" 
-  "11606" -> "11613" 
-  "11606" -> "11621" 
-  "11628" -> "11626" 
-  "11633" -> "11632" 
-  "11640" -> "11650" 
-  "11647" -> "11639" 
-  "11653" -> "11652" 
-  "11658" -> "11674" 
-  "11674" -> "11854" 
-  "11680" -> "11679" 
-  "11689" -> "11695" 
-  "11692" -> "11696" 
-  "11696" -> "11688" 
-  "11700" -> "11699" 
-  "11704" -> "11854" 
-  "11709" -> "11714" 
-  "11712" -> "11708" 
-  "11719" -> "11724" 
-  "11722" -> "11718" 
-  "11726" -> "11732" 
-  "11729" -> "11725" 
-  "11745" -> "11756" 
-  "11752" -> "11744" 
-  "11762" -> "11774" 
-  "11762" -> "11851" 
-  "11849" -> "11848" 
-  "11594" -> "11596" 
-  "11596" -> "11593" 
-  "11607" -> "11606" 
-  "11611" -> "11618" 
-  "11618" -> "11854" 
-  "11635" -> "11633" 
-  "11641" -> "11646" 
-  "11644" -> "11640" 
-  "11648" -> "11647" 
-  "11654" -> "11653" 
-  "11659" -> "11672" 
-  "11667" -> "11658" 
-  "11681" -> "11685" 
-  "11685" -> "11680" 
-  "11691" -> "11689" 
-  "11693" -> "11692" 
+  "11690" -> "11689" 
+  "11708" -> "11706" 
   "11711" -> "11709" 
-  "11714" -> "11712" 
+  "11718" -> "11716" 
   "11721" -> "11719" 
-  "11724" -> "11722" 
-  "11728" -> "11726" 
-  "11730" -> "11729" 
-  "11746" -> "11745" 
-  "11753" -> "11752" 
-  "11767" -> "11782" 
-  "11851" -> "11849" 
-  "11612" -> "11611" 
-  "11637" -> "11635" 
+  "11725" -> "11723" 
+  "11727" -> "11726" 
+  "11743" -> "11742" 
+  "11750" -> "11749" 
+  "11764" -> "11779" 
+  "11848" -> "11846" 
+  "11609" -> "11608" 
+  "11634" -> "11632" 
+  "11640" -> "11638" 
   "11643" -> "11641" 
-  "11646" -> "11644" 
-  "11650" -> "11648" 
-  "11656" -> "11654" 
-  "11660" -> "11664" 
-  "11664" -> "11659" 
-  "11668" -> "11667" 
-  "11682" -> "11681" 
-  "11695" -> "11693" 
-  "11732" -> "11730" 
-  "11748" -> "11746" 
-  "11754" -> "11759" 
-  "11757" -> "11753" 
-  "11769" -> "11767" 
-  "11777" -> "11793" 
-  "11777" -> "11824" 
-  "11613" -> "11615" 
-  "11615" -> "11612" 
-  "11661" -> "11660" 
-  "11669" -> "11673" 
-  "11673" -> "11668" 
-  "11684" -> "11682" 
-  "11750" -> "11748" 
+  "11647" -> "11645" 
+  "11653" -> "11651" 
+  "11657" -> "11661" 
+  "11661" -> "11656" 
+  "11665" -> "11664" 
+  "11679" -> "11678" 
+  "11692" -> "11690" 
+  "11729" -> "11727" 
+  "11745" -> "11743" 
+  "11751" -> "11756" 
+  "11754" -> "11750" 
+  "11766" -> "11764" 
+  "11774" -> "11790" 
+  "11774" -> "11821" 
+  "11610" -> "11612" 
+  "11612" -> "11609" 
+  "11658" -> "11657" 
+  "11666" -> "11670" 
+  "11670" -> "11665" 
+  "11681" -> "11679" 
+  "11747" -> "11745" 
+  "11753" -> "11751" 
   "11756" -> "11754" 
-  "11759" -> "11757" 
-  "11770" -> "11769" 
-  "11778" -> "11777" 
-  "11788" -> "11817" 
-  "11817" -> "11854" 
-  "11663" -> "11661" 
-  "11670" -> "11669" 
-  "11771" -> "11775" 
-  "11775" -> "11770" 
-  "11779" -> "11778" 
-  "11789" -> "11801" 
-  "11797" -> "11815" 
-  "11810" -> "11788" 
-  "11672" -> "11670" 
-  "11772" -> "11771" 
-  "11780" -> "11786" 
-  "11783" -> "11779" 
-  "11790" -> "11794" 
-  "11794" -> "11789" 
-  "11798" -> "11797" 
-  "11811" -> "11810" 
-  "11827" -> "11837" 
-  "11827" -> "11851" 
+  "11767" -> "11766" 
+  "11775" -> "11774" 
+  "11785" -> "11814" 
+  "11814" -> "11851" 
+  "11660" -> "11658" 
+  "11667" -> "11666" 
+  "11768" -> "11772" 
+  "11772" -> "11767" 
+  "11776" -> "11775" 
+  "11786" -> "11798" 
+  "11794" -> "11812" 
+  "11807" -> "11785" 
+  "11669" -> "11667" 
+  "11769" -> "11768" 
+  "11777" -> "11783" 
+  "11780" -> "11776" 
+  "11787" -> "11791" 
+  "11791" -> "11786" 
+  "11795" -> "11794" 
+  "11808" -> "11807" 
+  "11824" -> "11834" 
+  "11824" -> "11848" 
+  "11827" -> "11824" 
+  "11771" -> "11769" 
+  "11779" -> "11777" 
+  "11781" -> "11780" 
+  "11788" -> "11787" 
+  "11796" -> "11806" 
+  "11806" -> "11795" 
+  "11809" -> "11813" 
+  "11813" -> "11808" 
+  "11821" -> "11824" 
   "11830" -> "11827" 
-  "11774" -> "11772" 
-  "11782" -> "11780" 
-  "11784" -> "11783" 
-  "11791" -> "11790" 
-  "11799" -> "11809" 
-  "11809" -> "11798" 
-  "11812" -> "11816" 
-  "11816" -> "11811" 
-  "11824" -> "11827" 
-  "11833" -> "11830" 
-  "11786" -> "11784" 
-  "11793" -> "11791" 
-  "11800" -> "11808" 
-  "11805" -> "11799" 
-  "11813" -> "11812" 
-  "11834" -> "11845" 
-  "11839" -> "11833" 
-  "11801" -> "11804" 
-  "11804" -> "11800" 
-  "11806" -> "11805" 
-  "11815" -> "11813" 
-  "11835" -> "11834" 
+  "11783" -> "11781" 
+  "11790" -> "11788" 
+  "11797" -> "11805" 
+  "11802" -> "11796" 
+  "11810" -> "11809" 
+  "11831" -> "11842" 
+  "11836" -> "11830" 
+  "11798" -> "11801" 
+  "11801" -> "11797" 
+  "11803" -> "11802" 
+  "11812" -> "11810" 
+  "11832" -> "11831" 
+  "11837" -> "11836" 
+  "11805" -> "11803" 
+  "11834" -> "11832" 
+  "11839" -> "11837" 
   "11840" -> "11839" 
-  "11808" -> "11806" 
-  "11837" -> "11835" 
   "11842" -> "11840" 
-  "11843" -> "11842" 
-  "11845" -> "11843" 
-  "11580" -> "11588" 
+  "11577" -> "11585" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/21-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/21-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/21-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/21-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowSIOOBE" {  
-"535" [label = <(METHOD,ThrowSIOOBE)<SUB>438</SUB>> ]
-"541" [label = <(METHOD_RETURN,void)<SUB>438</SUB>> ]
+"535" [label = <(METHOD,ThrowSIOOBE)<SUB>437</SUB>> ]
+"541" [label = <(METHOD_RETURN,void)<SUB>437</SUB>> ]
   "535" -> "541" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/210-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/210-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/210-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/210-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,9 +1,9 @@
 digraph "NewShortArray" {  
-"11860" [label = <(RETURN,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);)<SUB>2205</SUB>> ]
-"11861" [label = <(NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;,NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length))<SUB>2205</SUB>> ]
-"11856" [label = <(METHOD,NewShortArray)<SUB>2204</SUB>> ]
-"11864" [label = <(METHOD_RETURN,jshortArray)<SUB>2204</SUB>> ]
-  "11860" -> "11864" 
-  "11861" -> "11860" 
-  "11856" -> "11861" 
+"11857" [label = <(RETURN,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);)<SUB>2203</SUB>> ]
+"11858" [label = <(NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;,NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length))<SUB>2203</SUB>> ]
+"11853" [label = <(METHOD,NewShortArray)<SUB>2202</SUB>> ]
+"11861" [label = <(METHOD_RETURN,jshortArray)<SUB>2202</SUB>> ]
+  "11857" -> "11861" 
+  "11858" -> "11857" 
+  "11853" -> "11858" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/211-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/211-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/211-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/211-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,185 +1,185 @@
 digraph "GetPrimitiveArrayCritical" {  
-"11871" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2209</SUB>> ]
-"11890" [label = <(soa,soa(env))<SUB>2210</SUB>> ]
-"11892" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2211</SUB>> ]
-"11942" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2217</SUB>> ]
-"12000" [label = <(RETURN,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);)<SUB>2232</SUB>> ]
-"11893" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2211</SUB>> ]
-"11900" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2211</SUB>> ]
-"11910" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2212</SUB>> ]
-"11944" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2217</SUB>> ]
-"11952" [label = <(IsMovableObject,heap-&gt;IsMovableObject(array))<SUB>2218</SUB>> ]
-"11992" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2229</SUB>> ]
-"12001" [label = <(GetRawData,array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0))<SUB>2232</SUB>> ]
-"11894" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2211</SUB>> ]
-"11901" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2211</SUB>> ]
-"11911" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2212</SUB>> ]
-"11920" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetPrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2213</SUB>> ]
-"11939" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2215</SUB>> ]
-"11945" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2217</SUB>> ]
-"11953" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2218</SUB>> ]
-"11980" [label = <(&lt;operator&gt;.assignment,array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2227</SUB>> ]
-"11996" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2230</SUB>> ]
-"12002" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetRawData)<SUB>2232</SUB>> ]
-"12005" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2232</SUB>> ]
-"11875" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2209</SUB>> ]
-"11896" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2211</SUB>> ]
-"11902" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2211</SUB>> ]
-"11905" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2211</SUB>> ]
-"11912" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2212</SUB>> ]
-"11921" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2213</SUB>> ]
-"11929" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2214</SUB>> ]
-"11946" [label = <(Runtime::Current,Runtime::Current())<SUB>2217</SUB>> ]
-"11950" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2217</SUB>> ]
-"11955" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2218</SUB>> ]
-"11959" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2219</SUB>> ]
-"11982" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2227</SUB>> ]
-"11997" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2230</SUB>> ]
-"12004" [label = <(FIELD_IDENTIFIER,GetRawData,GetRawData)<SUB>2232</SUB>> ]
-"12006" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2232</SUB>> ]
-"11876" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2209</SUB>> ]
-"11880" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2209</SUB>> ]
-"11887" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2209</SUB>> ]
-"11898" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2211</SUB>> ]
-"11904" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2211</SUB>> ]
-"11907" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2211</SUB>> ]
-"11913" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2212</SUB>> ]
-"11922" [label = <(Vm,soa.Vm())<SUB>2213</SUB>> ]
-"11926" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2213</SUB>> ]
-"11930" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2214</SUB>> ]
-"11947" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2217</SUB>> ]
-"11962" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2220</SUB>> ]
-"11983" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2227</SUB>> ]
-"12007" [label = <(GetClass,array-&gt;GetClass())<SUB>2232</SUB>> ]
-"12011" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2232</SUB>> ]
-"11881" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2209</SUB>> ]
-"11914" [label = <(GetClass,array-&gt;GetClass())<SUB>2212</SUB>> ]
-"11918" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2212</SUB>> ]
-"11923" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2213</SUB>> ]
-"11931" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2214</SUB>> ]
-"11938" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2214</SUB>> ]
-"11949" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2217</SUB>> ]
-"11963" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2220</SUB>> ]
-"11966" [label = <(Self,soa.Self())<SUB>2220</SUB>> ]
-"11972" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2224</SUB>> ]
-"11984" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2227</SUB>> ]
-"11987" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2227</SUB>> ]
-"12008" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2232</SUB>> ]
-"11882" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2209</SUB>> ]
-"11884" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2209</SUB>> ]
-"11915" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2212</SUB>> ]
-"11925" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2213</SUB>> ]
-"11932" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2214</SUB>> ]
-"11965" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2220</SUB>> ]
-"11967" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2220</SUB>> ]
-"11973" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2224</SUB>> ]
-"11976" [label = <(Self,soa.Self())<SUB>2224</SUB>> ]
-"11986" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2227</SUB>> ]
-"11989" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2227</SUB>> ]
-"12010" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2232</SUB>> ]
-"11917" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2212</SUB>> ]
-"11933" [label = <(GetClass,array-&gt;GetClass())<SUB>2214</SUB>> ]
-"11937" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2214</SUB>> ]
-"11969" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2220</SUB>> ]
-"11975" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2224</SUB>> ]
-"11977" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2224</SUB>> ]
-"11934" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2214</SUB>> ]
-"11979" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2224</SUB>> ]
-"11936" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2214</SUB>> ]
-"11866" [label = <(METHOD,GetPrimitiveArrayCritical)<SUB>2208</SUB>> ]
-"12013" [label = <(METHOD_RETURN,void*)<SUB>2208</SUB>> ]
-  "11871" -> "11876" 
-  "11871" -> "11890" 
-  "11890" -> "11898" 
-  "11892" -> "11917" 
-  "11942" -> "11955" 
-  "12000" -> "12013" 
-  "11893" -> "11904" 
-  "11900" -> "11892" 
-  "11910" -> "11925" 
-  "11910" -> "11949" 
-  "11944" -> "11942" 
-  "11952" -> "11959" 
-  "11952" -> "11992" 
-  "11992" -> "11997" 
-  "11992" -> "12004" 
-  "12001" -> "12000" 
-  "11894" -> "11893" 
-  "11901" -> "11900" 
-  "11911" -> "11910" 
-  "11920" -> "11939" 
-  "11939" -> "12013" 
-  "11945" -> "11944" 
-  "11953" -> "11952" 
-  "11980" -> "11992" 
-  "11996" -> "12004" 
-  "12002" -> "12010" 
-  "12005" -> "12001" 
-  "11875" -> "11882" 
-  "11875" -> "11890" 
-  "11896" -> "11894" 
-  "11902" -> "11907" 
-  "11905" -> "11901" 
-  "11912" -> "11911" 
-  "11921" -> "11936" 
-  "11929" -> "11920" 
-  "11946" -> "11950" 
-  "11950" -> "11945" 
-  "11955" -> "11953" 
-  "11959" -> "11965" 
-  "11959" -> "11975" 
-  "11982" -> "11980" 
-  "11997" -> "11996" 
-  "12004" -> "12002" 
-  "12006" -> "12005" 
-  "11876" -> "11875" 
-  "11880" -> "11887" 
-  "11887" -> "12013" 
-  "11898" -> "11896" 
+"11868" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2207</SUB>> ]
+"11887" [label = <(soa,soa(env))<SUB>2208</SUB>> ]
+"11889" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2209</SUB>> ]
+"11939" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2215</SUB>> ]
+"11997" [label = <(RETURN,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);)<SUB>2230</SUB>> ]
+"11890" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2209</SUB>> ]
+"11897" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2209</SUB>> ]
+"11907" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2210</SUB>> ]
+"11941" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2215</SUB>> ]
+"11949" [label = <(IsMovableObject,heap-&gt;IsMovableObject(array))<SUB>2216</SUB>> ]
+"11989" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2227</SUB>> ]
+"11998" [label = <(GetRawData,array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0))<SUB>2230</SUB>> ]
+"11891" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2209</SUB>> ]
+"11898" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2209</SUB>> ]
+"11908" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2210</SUB>> ]
+"11917" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetPrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2211</SUB>> ]
+"11936" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2213</SUB>> ]
+"11942" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2215</SUB>> ]
+"11950" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2216</SUB>> ]
+"11977" [label = <(&lt;operator&gt;.assignment,array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2225</SUB>> ]
+"11993" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2228</SUB>> ]
+"11999" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetRawData)<SUB>2230</SUB>> ]
+"12002" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2230</SUB>> ]
+"11872" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2207</SUB>> ]
+"11893" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2209</SUB>> ]
+"11899" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2209</SUB>> ]
+"11902" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2209</SUB>> ]
+"11909" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2210</SUB>> ]
+"11918" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2211</SUB>> ]
+"11926" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2212</SUB>> ]
+"11943" [label = <(Runtime::Current,Runtime::Current())<SUB>2215</SUB>> ]
+"11947" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2215</SUB>> ]
+"11952" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2216</SUB>> ]
+"11956" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2217</SUB>> ]
+"11979" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2225</SUB>> ]
+"11994" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2228</SUB>> ]
+"12001" [label = <(FIELD_IDENTIFIER,GetRawData,GetRawData)<SUB>2230</SUB>> ]
+"12003" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2230</SUB>> ]
+"11873" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2207</SUB>> ]
+"11877" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2207</SUB>> ]
+"11884" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2207</SUB>> ]
+"11895" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2209</SUB>> ]
+"11901" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2209</SUB>> ]
+"11904" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2209</SUB>> ]
+"11910" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2210</SUB>> ]
+"11919" [label = <(Vm,soa.Vm())<SUB>2211</SUB>> ]
+"11923" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2211</SUB>> ]
+"11927" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2212</SUB>> ]
+"11944" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2215</SUB>> ]
+"11959" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2218</SUB>> ]
+"11980" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2225</SUB>> ]
+"12004" [label = <(GetClass,array-&gt;GetClass())<SUB>2230</SUB>> ]
+"12008" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2230</SUB>> ]
+"11878" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2207</SUB>> ]
+"11911" [label = <(GetClass,array-&gt;GetClass())<SUB>2210</SUB>> ]
+"11915" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2210</SUB>> ]
+"11920" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2211</SUB>> ]
+"11928" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2212</SUB>> ]
+"11935" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2212</SUB>> ]
+"11946" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2215</SUB>> ]
+"11960" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2218</SUB>> ]
+"11963" [label = <(Self,soa.Self())<SUB>2218</SUB>> ]
+"11969" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2222</SUB>> ]
+"11981" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2225</SUB>> ]
+"11984" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2225</SUB>> ]
+"12005" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2230</SUB>> ]
+"11879" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2207</SUB>> ]
+"11881" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2207</SUB>> ]
+"11912" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2210</SUB>> ]
+"11922" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2211</SUB>> ]
+"11929" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2212</SUB>> ]
+"11962" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2218</SUB>> ]
+"11964" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2218</SUB>> ]
+"11970" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2222</SUB>> ]
+"11973" [label = <(Self,soa.Self())<SUB>2222</SUB>> ]
+"11983" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2225</SUB>> ]
+"11986" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2225</SUB>> ]
+"12007" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2230</SUB>> ]
+"11914" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2210</SUB>> ]
+"11930" [label = <(GetClass,array-&gt;GetClass())<SUB>2212</SUB>> ]
+"11934" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2212</SUB>> ]
+"11966" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2218</SUB>> ]
+"11972" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2222</SUB>> ]
+"11974" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2222</SUB>> ]
+"11931" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2212</SUB>> ]
+"11976" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2222</SUB>> ]
+"11933" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2212</SUB>> ]
+"11863" [label = <(METHOD,GetPrimitiveArrayCritical)<SUB>2206</SUB>> ]
+"12010" [label = <(METHOD_RETURN,void*)<SUB>2206</SUB>> ]
+  "11868" -> "11873" 
+  "11868" -> "11887" 
+  "11887" -> "11895" 
+  "11889" -> "11914" 
+  "11939" -> "11952" 
+  "11997" -> "12010" 
+  "11890" -> "11901" 
+  "11897" -> "11889" 
+  "11907" -> "11922" 
+  "11907" -> "11946" 
+  "11941" -> "11939" 
+  "11949" -> "11956" 
+  "11949" -> "11989" 
+  "11989" -> "11994" 
+  "11989" -> "12001" 
+  "11998" -> "11997" 
+  "11891" -> "11890" 
+  "11898" -> "11897" 
+  "11908" -> "11907" 
+  "11917" -> "11936" 
+  "11936" -> "12010" 
+  "11942" -> "11941" 
+  "11950" -> "11949" 
+  "11977" -> "11989" 
+  "11993" -> "12001" 
+  "11999" -> "12007" 
+  "12002" -> "11998" 
+  "11872" -> "11879" 
+  "11872" -> "11887" 
+  "11893" -> "11891" 
+  "11899" -> "11904" 
+  "11902" -> "11898" 
+  "11909" -> "11908" 
+  "11918" -> "11933" 
+  "11926" -> "11917" 
+  "11943" -> "11947" 
+  "11947" -> "11942" 
+  "11952" -> "11950" 
+  "11956" -> "11962" 
+  "11956" -> "11972" 
+  "11979" -> "11977" 
+  "11994" -> "11993" 
+  "12001" -> "11999" 
+  "12003" -> "12002" 
+  "11873" -> "11872" 
+  "11877" -> "11884" 
+  "11884" -> "12010" 
+  "11895" -> "11893" 
+  "11901" -> "11899" 
   "11904" -> "11902" 
-  "11907" -> "11905" 
-  "11913" -> "11912" 
-  "11922" -> "11926" 
-  "11926" -> "11921" 
-  "11930" -> "11929" 
-  "11947" -> "11946" 
-  "11962" -> "11986" 
-  "11983" -> "11982" 
-  "12007" -> "12011" 
-  "12011" -> "12006" 
-  "11881" -> "11880" 
-  "11914" -> "11918" 
-  "11918" -> "11913" 
-  "11923" -> "11922" 
-  "11931" -> "11938" 
-  "11938" -> "11930" 
-  "11949" -> "11947" 
-  "11963" -> "11969" 
-  "11966" -> "11962" 
-  "11972" -> "11986" 
-  "11984" -> "11989" 
-  "11987" -> "11983" 
-  "12008" -> "12007" 
-  "11882" -> "11884" 
-  "11884" -> "11881" 
-  "11915" -> "11914" 
-  "11925" -> "11923" 
-  "11932" -> "11931" 
-  "11965" -> "11963" 
-  "11967" -> "11966" 
-  "11973" -> "11979" 
-  "11976" -> "11972" 
+  "11910" -> "11909" 
+  "11919" -> "11923" 
+  "11923" -> "11918" 
+  "11927" -> "11926" 
+  "11944" -> "11943" 
+  "11959" -> "11983" 
+  "11980" -> "11979" 
+  "12004" -> "12008" 
+  "12008" -> "12003" 
+  "11878" -> "11877" 
+  "11911" -> "11915" 
+  "11915" -> "11910" 
+  "11920" -> "11919" 
+  "11928" -> "11935" 
+  "11935" -> "11927" 
+  "11946" -> "11944" 
+  "11960" -> "11966" 
+  "11963" -> "11959" 
+  "11969" -> "11983" 
+  "11981" -> "11986" 
+  "11984" -> "11980" 
+  "12005" -> "12004" 
+  "11879" -> "11881" 
+  "11881" -> "11878" 
+  "11912" -> "11911" 
+  "11922" -> "11920" 
+  "11929" -> "11928" 
+  "11962" -> "11960" 
+  "11964" -> "11963" 
+  "11970" -> "11976" 
+  "11973" -> "11969" 
+  "11983" -> "11981" 
   "11986" -> "11984" 
-  "11989" -> "11987" 
-  "12010" -> "12008" 
-  "11917" -> "11915" 
-  "11933" -> "11937" 
-  "11937" -> "11932" 
-  "11969" -> "11967" 
-  "11975" -> "11973" 
-  "11977" -> "11976" 
-  "11934" -> "11933" 
-  "11979" -> "11977" 
-  "11936" -> "11934" 
-  "11866" -> "11871" 
+  "12007" -> "12005" 
+  "11914" -> "11912" 
+  "11930" -> "11934" 
+  "11934" -> "11929" 
+  "11966" -> "11964" 
+  "11972" -> "11970" 
+  "11974" -> "11973" 
+  "11931" -> "11930" 
+  "11976" -> "11974" 
+  "11933" -> "11931" 
+  "11863" -> "11868" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/212-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/212-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/212-cfg.dot	2023-06-07 19:34:35.177389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/212-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,118 +1,118 @@
 digraph "ReleasePrimitiveArrayCritical" {  
-"12021" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2237</SUB>> ]
-"12039" [label = <(soa,soa(env))<SUB>2238</SUB>> ]
-"12041" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2239</SUB>> ]
-"12090" [label = <(&lt;operator&gt;.assignment,component_size = array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2245</SUB>> ]
-"12099" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array.Ptr(), component_size, elements, mode))<SUB>2246</SUB>> ]
-"12042" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2239</SUB>> ]
-"12049" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2239</SUB>> ]
-"12059" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2240</SUB>> ]
-"12092" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2245</SUB>> ]
-"12101" [label = <(Ptr,array.Ptr())<SUB>2246</SUB>> ]
-"12043" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2239</SUB>> ]
-"12050" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2239</SUB>> ]
-"12060" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2240</SUB>> ]
-"12069" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;ReleasePrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2241</SUB>> ]
-"12088" [label = <(RETURN,return;,return;)<SUB>2243</SUB>> ]
-"12093" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2245</SUB>> ]
-"12102" [label = <(&lt;operator&gt;.fieldAccess,array.Ptr)<SUB>2246</SUB>> ]
-"12025" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2237</SUB>> ]
-"12045" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2239</SUB>> ]
-"12051" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2239</SUB>> ]
-"12054" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2239</SUB>> ]
-"12061" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2240</SUB>> ]
-"12070" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2241</SUB>> ]
-"12078" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2242</SUB>> ]
-"12094" [label = <(GetClass,array-&gt;GetClass())<SUB>2245</SUB>> ]
-"12098" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2245</SUB>> ]
-"12104" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2246</SUB>> ]
-"12026" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2237</SUB>> ]
-"12030" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2237</SUB>> ]
-"12037" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2237</SUB>> ]
-"12047" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2239</SUB>> ]
-"12053" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2239</SUB>> ]
-"12056" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2239</SUB>> ]
-"12062" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2240</SUB>> ]
-"12071" [label = <(Vm,soa.Vm())<SUB>2241</SUB>> ]
-"12075" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2241</SUB>> ]
-"12079" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2242</SUB>> ]
-"12095" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2245</SUB>> ]
-"12031" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2237</SUB>> ]
-"12063" [label = <(GetClass,array-&gt;GetClass())<SUB>2240</SUB>> ]
-"12067" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2240</SUB>> ]
-"12072" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2241</SUB>> ]
-"12080" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2242</SUB>> ]
-"12087" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2242</SUB>> ]
-"12097" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2245</SUB>> ]
-"12032" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2237</SUB>> ]
-"12034" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2237</SUB>> ]
-"12064" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2240</SUB>> ]
-"12074" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2241</SUB>> ]
-"12081" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2242</SUB>> ]
-"12066" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2240</SUB>> ]
-"12082" [label = <(GetClass,array-&gt;GetClass())<SUB>2242</SUB>> ]
-"12086" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2242</SUB>> ]
-"12083" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2242</SUB>> ]
-"12085" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2242</SUB>> ]
-"12015" [label = <(METHOD,ReleasePrimitiveArrayCritical)<SUB>2235</SUB>> ]
-"12108" [label = <(METHOD_RETURN,void)<SUB>2235</SUB>> ]
-  "12021" -> "12026" 
-  "12021" -> "12039" 
-  "12039" -> "12047" 
-  "12041" -> "12066" 
-  "12090" -> "12104" 
-  "12099" -> "12108" 
-  "12042" -> "12053" 
-  "12049" -> "12041" 
-  "12059" -> "12074" 
-  "12059" -> "12097" 
-  "12092" -> "12090" 
+"12018" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2235</SUB>> ]
+"12036" [label = <(soa,soa(env))<SUB>2236</SUB>> ]
+"12038" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2237</SUB>> ]
+"12087" [label = <(&lt;operator&gt;.assignment,component_size = array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2243</SUB>> ]
+"12096" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array.Ptr(), component_size, elements, mode))<SUB>2244</SUB>> ]
+"12039" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2237</SUB>> ]
+"12046" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2237</SUB>> ]
+"12056" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2238</SUB>> ]
+"12089" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2243</SUB>> ]
+"12098" [label = <(Ptr,array.Ptr())<SUB>2244</SUB>> ]
+"12040" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2237</SUB>> ]
+"12047" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2237</SUB>> ]
+"12057" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2238</SUB>> ]
+"12066" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;ReleasePrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2239</SUB>> ]
+"12085" [label = <(RETURN,return;,return;)<SUB>2241</SUB>> ]
+"12090" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2243</SUB>> ]
+"12099" [label = <(&lt;operator&gt;.fieldAccess,array.Ptr)<SUB>2244</SUB>> ]
+"12022" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2235</SUB>> ]
+"12042" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2237</SUB>> ]
+"12048" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2237</SUB>> ]
+"12051" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2237</SUB>> ]
+"12058" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2238</SUB>> ]
+"12067" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2239</SUB>> ]
+"12075" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2240</SUB>> ]
+"12091" [label = <(GetClass,array-&gt;GetClass())<SUB>2243</SUB>> ]
+"12095" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2243</SUB>> ]
+"12101" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2244</SUB>> ]
+"12023" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2235</SUB>> ]
+"12027" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2235</SUB>> ]
+"12034" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2235</SUB>> ]
+"12044" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2237</SUB>> ]
+"12050" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2237</SUB>> ]
+"12053" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2237</SUB>> ]
+"12059" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2238</SUB>> ]
+"12068" [label = <(Vm,soa.Vm())<SUB>2239</SUB>> ]
+"12072" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2239</SUB>> ]
+"12076" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2240</SUB>> ]
+"12092" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2243</SUB>> ]
+"12028" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2235</SUB>> ]
+"12060" [label = <(GetClass,array-&gt;GetClass())<SUB>2238</SUB>> ]
+"12064" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2238</SUB>> ]
+"12069" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2239</SUB>> ]
+"12077" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2240</SUB>> ]
+"12084" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2240</SUB>> ]
+"12094" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2243</SUB>> ]
+"12029" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2235</SUB>> ]
+"12031" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2235</SUB>> ]
+"12061" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2238</SUB>> ]
+"12071" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2239</SUB>> ]
+"12078" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2240</SUB>> ]
+"12063" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2238</SUB>> ]
+"12079" [label = <(GetClass,array-&gt;GetClass())<SUB>2240</SUB>> ]
+"12083" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2240</SUB>> ]
+"12080" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2240</SUB>> ]
+"12082" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2240</SUB>> ]
+"12012" [label = <(METHOD,ReleasePrimitiveArrayCritical)<SUB>2233</SUB>> ]
+"12105" [label = <(METHOD_RETURN,void)<SUB>2233</SUB>> ]
+  "12018" -> "12023" 
+  "12018" -> "12036" 
+  "12036" -> "12044" 
+  "12038" -> "12063" 
+  "12087" -> "12101" 
+  "12096" -> "12105" 
+  "12039" -> "12050" 
+  "12046" -> "12038" 
+  "12056" -> "12071" 
+  "12056" -> "12094" 
+  "12089" -> "12087" 
+  "12098" -> "12096" 
+  "12040" -> "12039" 
+  "12047" -> "12046" 
+  "12057" -> "12056" 
+  "12066" -> "12085" 
+  "12085" -> "12105" 
+  "12090" -> "12089" 
+  "12099" -> "12098" 
+  "12022" -> "12029" 
+  "12022" -> "12036" 
+  "12042" -> "12040" 
+  "12048" -> "12053" 
+  "12051" -> "12047" 
+  "12058" -> "12057" 
+  "12067" -> "12082" 
+  "12075" -> "12066" 
+  "12091" -> "12095" 
+  "12095" -> "12090" 
   "12101" -> "12099" 
-  "12043" -> "12042" 
-  "12050" -> "12049" 
-  "12060" -> "12059" 
-  "12069" -> "12088" 
-  "12088" -> "12108" 
-  "12093" -> "12092" 
-  "12102" -> "12101" 
-  "12025" -> "12032" 
-  "12025" -> "12039" 
-  "12045" -> "12043" 
-  "12051" -> "12056" 
-  "12054" -> "12050" 
-  "12061" -> "12060" 
-  "12070" -> "12085" 
-  "12078" -> "12069" 
-  "12094" -> "12098" 
-  "12098" -> "12093" 
-  "12104" -> "12102" 
-  "12026" -> "12025" 
-  "12030" -> "12037" 
-  "12037" -> "12108" 
-  "12047" -> "12045" 
+  "12023" -> "12022" 
+  "12027" -> "12034" 
+  "12034" -> "12105" 
+  "12044" -> "12042" 
+  "12050" -> "12048" 
   "12053" -> "12051" 
-  "12056" -> "12054" 
-  "12062" -> "12061" 
-  "12071" -> "12075" 
-  "12075" -> "12070" 
-  "12079" -> "12078" 
-  "12095" -> "12094" 
-  "12031" -> "12030" 
-  "12063" -> "12067" 
-  "12067" -> "12062" 
-  "12072" -> "12071" 
-  "12080" -> "12087" 
-  "12087" -> "12079" 
-  "12097" -> "12095" 
-  "12032" -> "12034" 
-  "12034" -> "12031" 
-  "12064" -> "12063" 
-  "12074" -> "12072" 
-  "12081" -> "12080" 
-  "12066" -> "12064" 
-  "12082" -> "12086" 
-  "12086" -> "12081" 
-  "12083" -> "12082" 
-  "12085" -> "12083" 
-  "12015" -> "12021" 
+  "12059" -> "12058" 
+  "12068" -> "12072" 
+  "12072" -> "12067" 
+  "12076" -> "12075" 
+  "12092" -> "12091" 
+  "12028" -> "12027" 
+  "12060" -> "12064" 
+  "12064" -> "12059" 
+  "12069" -> "12068" 
+  "12077" -> "12084" 
+  "12084" -> "12076" 
+  "12094" -> "12092" 
+  "12029" -> "12031" 
+  "12031" -> "12028" 
+  "12061" -> "12060" 
+  "12071" -> "12069" 
+  "12078" -> "12077" 
+  "12063" -> "12061" 
+  "12079" -> "12083" 
+  "12083" -> "12078" 
+  "12080" -> "12079" 
+  "12082" -> "12080" 
+  "12012" -> "12018" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/213-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/213-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/213-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/213-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,9 +1,9 @@
 digraph "GetBooleanArrayElements" {  
-"12115" [label = <(RETURN,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);)<SUB>2250</SUB>> ]
-"12116" [label = <(GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy))<SUB>2250</SUB>> ]
-"12110" [label = <(METHOD,GetBooleanArrayElements)<SUB>2249</SUB>> ]
-"12120" [label = <(METHOD_RETURN,jboolean)<SUB>2249</SUB>> ]
-  "12115" -> "12120" 
-  "12116" -> "12115" 
-  "12110" -> "12116" 
+"12112" [label = <(RETURN,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);)<SUB>2248</SUB>> ]
+"12113" [label = <(GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy))<SUB>2248</SUB>> ]
+"12107" [label = <(METHOD,GetBooleanArrayElements)<SUB>2247</SUB>> ]
+"12117" [label = <(METHOD_RETURN,jboolean)<SUB>2247</SUB>> ]
+  "12112" -> "12117" 
+  "12113" -> "12112" 
+  "12107" -> "12113" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/214-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/214-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/214-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/214-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,9 +1,9 @@
 digraph "GetByteArrayElements" {  
-"12127" [label = <(RETURN,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);)<SUB>2254</SUB>> ]
-"12128" [label = <(GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy))<SUB>2254</SUB>> ]
-"12122" [label = <(METHOD,GetByteArrayElements)<SUB>2253</SUB>> ]
-"12132" [label = <(METHOD_RETURN,jbyte)<SUB>2253</SUB>> ]
-  "12127" -> "12132" 
-  "12128" -> "12127" 
-  "12122" -> "12128" 
+"12124" [label = <(RETURN,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);)<SUB>2252</SUB>> ]
+"12125" [label = <(GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy))<SUB>2252</SUB>> ]
+"12119" [label = <(METHOD,GetByteArrayElements)<SUB>2251</SUB>> ]
+"12129" [label = <(METHOD_RETURN,jbyte)<SUB>2251</SUB>> ]
+  "12124" -> "12129" 
+  "12125" -> "12124" 
+  "12119" -> "12125" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/215-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/215-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/215-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/215-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,9 +1,9 @@
 digraph "GetCharArrayElements" {  
-"12139" [label = <(RETURN,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);)<SUB>2258</SUB>> ]
-"12140" [label = <(GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy))<SUB>2258</SUB>> ]
-"12134" [label = <(METHOD,GetCharArrayElements)<SUB>2257</SUB>> ]
-"12144" [label = <(METHOD_RETURN,jchar)<SUB>2257</SUB>> ]
-  "12139" -> "12144" 
-  "12140" -> "12139" 
-  "12134" -> "12140" 
+"12136" [label = <(RETURN,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);)<SUB>2256</SUB>> ]
+"12137" [label = <(GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy))<SUB>2256</SUB>> ]
+"12131" [label = <(METHOD,GetCharArrayElements)<SUB>2255</SUB>> ]
+"12141" [label = <(METHOD_RETURN,jchar)<SUB>2255</SUB>> ]
+  "12136" -> "12141" 
+  "12137" -> "12136" 
+  "12131" -> "12137" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/216-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/216-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/216-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/216-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,9 +1,9 @@
 digraph "GetDoubleArrayElements" {  
-"12151" [label = <(RETURN,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);)<SUB>2262</SUB>> ]
-"12152" [label = <(GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy))<SUB>2262</SUB>> ]
-"12146" [label = <(METHOD,GetDoubleArrayElements)<SUB>2261</SUB>> ]
-"12156" [label = <(METHOD_RETURN,jdouble)<SUB>2261</SUB>> ]
-  "12151" -> "12156" 
-  "12152" -> "12151" 
-  "12146" -> "12152" 
+"12148" [label = <(RETURN,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);)<SUB>2260</SUB>> ]
+"12149" [label = <(GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy))<SUB>2260</SUB>> ]
+"12143" [label = <(METHOD,GetDoubleArrayElements)<SUB>2259</SUB>> ]
+"12153" [label = <(METHOD_RETURN,jdouble)<SUB>2259</SUB>> ]
+  "12148" -> "12153" 
+  "12149" -> "12148" 
+  "12143" -> "12149" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/217-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/217-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/217-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/217-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,9 +1,9 @@
 digraph "GetFloatArrayElements" {  
-"12163" [label = <(RETURN,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);)<SUB>2266</SUB>> ]
-"12164" [label = <(GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy))<SUB>2266</SUB>> ]
-"12158" [label = <(METHOD,GetFloatArrayElements)<SUB>2265</SUB>> ]
-"12168" [label = <(METHOD_RETURN,jfloat)<SUB>2265</SUB>> ]
-  "12163" -> "12168" 
-  "12164" -> "12163" 
-  "12158" -> "12164" 
+"12160" [label = <(RETURN,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);)<SUB>2264</SUB>> ]
+"12161" [label = <(GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy))<SUB>2264</SUB>> ]
+"12155" [label = <(METHOD,GetFloatArrayElements)<SUB>2263</SUB>> ]
+"12165" [label = <(METHOD_RETURN,jfloat)<SUB>2263</SUB>> ]
+  "12160" -> "12165" 
+  "12161" -> "12160" 
+  "12155" -> "12161" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/218-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/218-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/218-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/218-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,9 +1,9 @@
 digraph "GetIntArrayElements" {  
-"12175" [label = <(RETURN,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);)<SUB>2270</SUB>> ]
-"12176" [label = <(GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy))<SUB>2270</SUB>> ]
-"12170" [label = <(METHOD,GetIntArrayElements)<SUB>2269</SUB>> ]
-"12180" [label = <(METHOD_RETURN,jint)<SUB>2269</SUB>> ]
-  "12175" -> "12180" 
-  "12176" -> "12175" 
-  "12170" -> "12176" 
+"12172" [label = <(RETURN,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);)<SUB>2268</SUB>> ]
+"12173" [label = <(GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy))<SUB>2268</SUB>> ]
+"12167" [label = <(METHOD,GetIntArrayElements)<SUB>2267</SUB>> ]
+"12177" [label = <(METHOD_RETURN,jint)<SUB>2267</SUB>> ]
+  "12172" -> "12177" 
+  "12173" -> "12172" 
+  "12167" -> "12173" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/219-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/219-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/219-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/219-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,9 +1,9 @@
 digraph "GetLongArrayElements" {  
-"12187" [label = <(RETURN,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);)<SUB>2274</SUB>> ]
-"12188" [label = <(GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy))<SUB>2274</SUB>> ]
-"12182" [label = <(METHOD,GetLongArrayElements)<SUB>2273</SUB>> ]
-"12192" [label = <(METHOD_RETURN,jlong)<SUB>2273</SUB>> ]
-  "12187" -> "12192" 
-  "12188" -> "12187" 
-  "12182" -> "12188" 
+"12184" [label = <(RETURN,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);)<SUB>2272</SUB>> ]
+"12185" [label = <(GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy))<SUB>2272</SUB>> ]
+"12179" [label = <(METHOD,GetLongArrayElements)<SUB>2271</SUB>> ]
+"12189" [label = <(METHOD_RETURN,jlong)<SUB>2271</SUB>> ]
+  "12184" -> "12189" 
+  "12185" -> "12184" 
+  "12179" -> "12185" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/22-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/22-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/22-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/22-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowNewException" {  
-"546" [label = <(METHOD,ThrowNewException)<SUB>446</SUB>> ]
-"552" [label = <(METHOD_RETURN,int)<SUB>446</SUB>> ]
+"546" [label = <(METHOD,ThrowNewException)<SUB>445</SUB>> ]
+"552" [label = <(METHOD_RETURN,int)<SUB>445</SUB>> ]
   "546" -> "552" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/220-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/220-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/220-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/220-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,9 +1,9 @@
 digraph "GetShortArrayElements" {  
-"12199" [label = <(RETURN,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);)<SUB>2278</SUB>> ]
-"12200" [label = <(GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy))<SUB>2278</SUB>> ]
-"12194" [label = <(METHOD,GetShortArrayElements)<SUB>2277</SUB>> ]
-"12204" [label = <(METHOD_RETURN,jshort)<SUB>2277</SUB>> ]
-  "12199" -> "12204" 
-  "12200" -> "12199" 
-  "12194" -> "12200" 
+"12196" [label = <(RETURN,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);)<SUB>2276</SUB>> ]
+"12197" [label = <(GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy))<SUB>2276</SUB>> ]
+"12191" [label = <(METHOD,GetShortArrayElements)<SUB>2275</SUB>> ]
+"12201" [label = <(METHOD_RETURN,jshort)<SUB>2275</SUB>> ]
+  "12196" -> "12201" 
+  "12197" -> "12196" 
+  "12191" -> "12197" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/221-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/221-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/221-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/221-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseBooleanArrayElements" {  
-"12212" [label = <(ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,ReleasePrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, elements,\012                                                                         mode))<SUB>2283</SUB>> ]
-"12206" [label = <(METHOD,ReleaseBooleanArrayElements)<SUB>2281</SUB>> ]
-"12217" [label = <(METHOD_RETURN,void)<SUB>2281</SUB>> ]
-  "12212" -> "12217" 
-  "12206" -> "12212" 
+"12209" [label = <(ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,ReleasePrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, elements,\012                                                                         mode))<SUB>2281</SUB>> ]
+"12203" [label = <(METHOD,ReleaseBooleanArrayElements)<SUB>2279</SUB>> ]
+"12214" [label = <(METHOD_RETURN,void)<SUB>2279</SUB>> ]
+  "12209" -> "12214" 
+  "12203" -> "12209" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/222-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/222-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/222-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/222-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseByteArrayElements" {  
-"12225" [label = <(ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,ReleasePrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, elements, mode))<SUB>2288</SUB>> ]
-"12219" [label = <(METHOD,ReleaseByteArrayElements)<SUB>2287</SUB>> ]
-"12230" [label = <(METHOD_RETURN,void)<SUB>2287</SUB>> ]
-  "12225" -> "12230" 
-  "12219" -> "12225" 
+"12222" [label = <(ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,ReleasePrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, elements, mode))<SUB>2286</SUB>> ]
+"12216" [label = <(METHOD,ReleaseByteArrayElements)<SUB>2285</SUB>> ]
+"12227" [label = <(METHOD_RETURN,void)<SUB>2285</SUB>> ]
+  "12222" -> "12227" 
+  "12216" -> "12222" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/223-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/223-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/223-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/223-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseCharArrayElements" {  
-"12238" [label = <(ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,ReleasePrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, elements, mode))<SUB>2292</SUB>> ]
-"12232" [label = <(METHOD,ReleaseCharArrayElements)<SUB>2291</SUB>> ]
-"12243" [label = <(METHOD_RETURN,void)<SUB>2291</SUB>> ]
-  "12238" -> "12243" 
-  "12232" -> "12238" 
+"12235" [label = <(ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,ReleasePrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, elements, mode))<SUB>2290</SUB>> ]
+"12229" [label = <(METHOD,ReleaseCharArrayElements)<SUB>2289</SUB>> ]
+"12240" [label = <(METHOD_RETURN,void)<SUB>2289</SUB>> ]
+  "12235" -> "12240" 
+  "12229" -> "12235" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/224-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/224-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/224-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/224-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseDoubleArrayElements" {  
-"12251" [label = <(ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,ReleasePrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, elements, mode))<SUB>2297</SUB>> ]
-"12245" [label = <(METHOD,ReleaseDoubleArrayElements)<SUB>2295</SUB>> ]
-"12256" [label = <(METHOD_RETURN,void)<SUB>2295</SUB>> ]
-  "12251" -> "12256" 
-  "12245" -> "12251" 
+"12248" [label = <(ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,ReleasePrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, elements, mode))<SUB>2295</SUB>> ]
+"12242" [label = <(METHOD,ReleaseDoubleArrayElements)<SUB>2293</SUB>> ]
+"12253" [label = <(METHOD_RETURN,void)<SUB>2293</SUB>> ]
+  "12248" -> "12253" 
+  "12242" -> "12248" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/225-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/225-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/225-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/225-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseFloatArrayElements" {  
-"12264" [label = <(ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,ReleasePrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, elements, mode))<SUB>2302</SUB>> ]
-"12258" [label = <(METHOD,ReleaseFloatArrayElements)<SUB>2300</SUB>> ]
-"12269" [label = <(METHOD_RETURN,void)<SUB>2300</SUB>> ]
-  "12264" -> "12269" 
-  "12258" -> "12264" 
+"12261" [label = <(ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,ReleasePrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, elements, mode))<SUB>2300</SUB>> ]
+"12255" [label = <(METHOD,ReleaseFloatArrayElements)<SUB>2298</SUB>> ]
+"12266" [label = <(METHOD_RETURN,void)<SUB>2298</SUB>> ]
+  "12261" -> "12266" 
+  "12255" -> "12261" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/226-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/226-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/226-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/226-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseIntArrayElements" {  
-"12277" [label = <(ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,ReleasePrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, elements, mode))<SUB>2306</SUB>> ]
-"12271" [label = <(METHOD,ReleaseIntArrayElements)<SUB>2305</SUB>> ]
-"12282" [label = <(METHOD_RETURN,void)<SUB>2305</SUB>> ]
-  "12277" -> "12282" 
-  "12271" -> "12277" 
+"12274" [label = <(ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,ReleasePrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, elements, mode))<SUB>2304</SUB>> ]
+"12268" [label = <(METHOD,ReleaseIntArrayElements)<SUB>2303</SUB>> ]
+"12279" [label = <(METHOD_RETURN,void)<SUB>2303</SUB>> ]
+  "12274" -> "12279" 
+  "12268" -> "12274" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/227-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/227-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/227-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/227-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseLongArrayElements" {  
-"12290" [label = <(ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,ReleasePrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, elements, mode))<SUB>2310</SUB>> ]
-"12284" [label = <(METHOD,ReleaseLongArrayElements)<SUB>2309</SUB>> ]
-"12295" [label = <(METHOD_RETURN,void)<SUB>2309</SUB>> ]
-  "12290" -> "12295" 
-  "12284" -> "12290" 
+"12287" [label = <(ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,ReleasePrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, elements, mode))<SUB>2308</SUB>> ]
+"12281" [label = <(METHOD,ReleaseLongArrayElements)<SUB>2307</SUB>> ]
+"12292" [label = <(METHOD_RETURN,void)<SUB>2307</SUB>> ]
+  "12287" -> "12292" 
+  "12281" -> "12287" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/228-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/228-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/228-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/228-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseShortArrayElements" {  
-"12303" [label = <(ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,ReleasePrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, elements, mode))<SUB>2315</SUB>> ]
-"12297" [label = <(METHOD,ReleaseShortArrayElements)<SUB>2313</SUB>> ]
-"12308" [label = <(METHOD_RETURN,void)<SUB>2313</SUB>> ]
-  "12303" -> "12308" 
-  "12297" -> "12303" 
+"12300" [label = <(ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,ReleasePrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, elements, mode))<SUB>2313</SUB>> ]
+"12294" [label = <(METHOD,ReleaseShortArrayElements)<SUB>2311</SUB>> ]
+"12305" [label = <(METHOD_RETURN,void)<SUB>2311</SUB>> ]
+  "12300" -> "12305" 
+  "12294" -> "12300" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/229-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/229-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/229-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/229-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "GetBooleanArrayRegion" {  
-"12317" [label = <(GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2320</SUB>> ]
-"12310" [label = <(METHOD,GetBooleanArrayRegion)<SUB>2318</SUB>> ]
-"12323" [label = <(METHOD_RETURN,void)<SUB>2318</SUB>> ]
-  "12317" -> "12323" 
-  "12310" -> "12317" 
+"12314" [label = <(GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2318</SUB>> ]
+"12307" [label = <(METHOD,GetBooleanArrayRegion)<SUB>2316</SUB>> ]
+"12320" [label = <(METHOD_RETURN,void)<SUB>2316</SUB>> ]
+  "12314" -> "12320" 
+  "12307" -> "12314" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/23-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/23-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/23-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/23-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,12 +1,12 @@
 digraph "JavaVmExtFromEnv" {  
-"559" [label = <(RETURN,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();)<SUB>489</SUB>> ]
-"560" [label = <(GetVm,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>489</SUB>> ]
-"561" [label = <(&lt;operator&gt;.indirectFieldAccess,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>489</SUB>> ]
-"562" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNIEnvExt*&gt;(env))<SUB>489</SUB>> ]
-"565" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>489</SUB>> ]
-"563" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>489</SUB>> ]
-"556" [label = <(METHOD,JavaVmExtFromEnv)<SUB>488</SUB>> ]
-"566" [label = <(METHOD_RETURN,JavaVMExt)<SUB>488</SUB>> ]
+"559" [label = <(RETURN,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();)<SUB>488</SUB>> ]
+"560" [label = <(GetVm,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>488</SUB>> ]
+"561" [label = <(&lt;operator&gt;.indirectFieldAccess,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>488</SUB>> ]
+"562" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNIEnvExt*&gt;(env))<SUB>488</SUB>> ]
+"565" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>488</SUB>> ]
+"563" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>488</SUB>> ]
+"556" [label = <(METHOD,JavaVmExtFromEnv)<SUB>487</SUB>> ]
+"566" [label = <(METHOD_RETURN,JavaVMExt)<SUB>487</SUB>> ]
   "559" -> "566" 
   "560" -> "559" 
   "561" -> "560" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/230-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/230-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/230-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/230-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "GetByteArrayRegion" {  
-"12332" [label = <(GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2326</SUB>> ]
-"12325" [label = <(METHOD,GetByteArrayRegion)<SUB>2324</SUB>> ]
-"12338" [label = <(METHOD_RETURN,void)<SUB>2324</SUB>> ]
-  "12332" -> "12338" 
-  "12325" -> "12332" 
+"12329" [label = <(GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2324</SUB>> ]
+"12322" [label = <(METHOD,GetByteArrayRegion)<SUB>2322</SUB>> ]
+"12335" [label = <(METHOD_RETURN,void)<SUB>2322</SUB>> ]
+  "12329" -> "12335" 
+  "12322" -> "12329" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/231-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/231-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/231-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/231-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "GetCharArrayRegion" {  
-"12347" [label = <(GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2331</SUB>> ]
-"12340" [label = <(METHOD,GetCharArrayRegion)<SUB>2329</SUB>> ]
-"12353" [label = <(METHOD_RETURN,void)<SUB>2329</SUB>> ]
-  "12347" -> "12353" 
-  "12340" -> "12347" 
+"12344" [label = <(GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2329</SUB>> ]
+"12337" [label = <(METHOD,GetCharArrayRegion)<SUB>2327</SUB>> ]
+"12350" [label = <(METHOD_RETURN,void)<SUB>2327</SUB>> ]
+  "12344" -> "12350" 
+  "12337" -> "12344" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/232-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/232-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/232-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/232-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "GetDoubleArrayRegion" {  
-"12362" [label = <(GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2336</SUB>> ]
-"12355" [label = <(METHOD,GetDoubleArrayRegion)<SUB>2334</SUB>> ]
-"12368" [label = <(METHOD_RETURN,void)<SUB>2334</SUB>> ]
-  "12362" -> "12368" 
-  "12355" -> "12362" 
+"12359" [label = <(GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2334</SUB>> ]
+"12352" [label = <(METHOD,GetDoubleArrayRegion)<SUB>2332</SUB>> ]
+"12365" [label = <(METHOD_RETURN,void)<SUB>2332</SUB>> ]
+  "12359" -> "12365" 
+  "12352" -> "12359" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/233-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/233-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/233-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/233-cfg.dot	2023-06-07 19:34:41.717389008 +0330
@@ -1,7 +1,7 @@
 digraph "GetFloatArrayRegion" {  
-"12377" [label = <(GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2342</SUB>> ]
-"12370" [label = <(METHOD,GetFloatArrayRegion)<SUB>2340</SUB>> ]
-"12383" [label = <(METHOD_RETURN,void)<SUB>2340</SUB>> ]
-  "12377" -> "12383" 
-  "12370" -> "12377" 
+"12374" [label = <(GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2340</SUB>> ]
+"12367" [label = <(METHOD,GetFloatArrayRegion)<SUB>2338</SUB>> ]
+"12380" [label = <(METHOD_RETURN,void)<SUB>2338</SUB>> ]
+  "12374" -> "12380" 
+  "12367" -> "12374" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/234-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/234-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/234-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/234-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,7 +1,7 @@
 digraph "GetIntArrayRegion" {  
-"12392" [label = <(GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2348</SUB>> ]
-"12385" [label = <(METHOD,GetIntArrayRegion)<SUB>2346</SUB>> ]
-"12398" [label = <(METHOD_RETURN,void)<SUB>2346</SUB>> ]
-  "12392" -> "12398" 
-  "12385" -> "12392" 
+"12389" [label = <(GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2346</SUB>> ]
+"12382" [label = <(METHOD,GetIntArrayRegion)<SUB>2344</SUB>> ]
+"12395" [label = <(METHOD_RETURN,void)<SUB>2344</SUB>> ]
+  "12389" -> "12395" 
+  "12382" -> "12389" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/235-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/235-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/235-cfg.dot	2023-06-07 19:34:35.187389613 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/235-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,7 +1,7 @@
 digraph "GetLongArrayRegion" {  
-"12407" [label = <(GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2353</SUB>> ]
-"12400" [label = <(METHOD,GetLongArrayRegion)<SUB>2351</SUB>> ]
-"12413" [label = <(METHOD_RETURN,void)<SUB>2351</SUB>> ]
-  "12407" -> "12413" 
-  "12400" -> "12407" 
+"12404" [label = <(GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2351</SUB>> ]
+"12397" [label = <(METHOD,GetLongArrayRegion)<SUB>2349</SUB>> ]
+"12410" [label = <(METHOD_RETURN,void)<SUB>2349</SUB>> ]
+  "12404" -> "12410" 
+  "12397" -> "12404" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/236-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/236-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/236-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/236-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,7 +1,7 @@
 digraph "GetShortArrayRegion" {  
-"12422" [label = <(GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2358</SUB>> ]
-"12415" [label = <(METHOD,GetShortArrayRegion)<SUB>2356</SUB>> ]
-"12428" [label = <(METHOD_RETURN,void)<SUB>2356</SUB>> ]
-  "12422" -> "12428" 
-  "12415" -> "12422" 
+"12419" [label = <(GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2356</SUB>> ]
+"12412" [label = <(METHOD,GetShortArrayRegion)<SUB>2354</SUB>> ]
+"12425" [label = <(METHOD_RETURN,void)<SUB>2354</SUB>> ]
+  "12419" -> "12425" 
+  "12412" -> "12419" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/237-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/237-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/237-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/237-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,7 +1,7 @@
 digraph "SetBooleanArrayRegion" {  
-"12437" [label = <(SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,SetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2364</SUB>> ]
-"12430" [label = <(METHOD,SetBooleanArrayRegion)<SUB>2362</SUB>> ]
-"12443" [label = <(METHOD_RETURN,void)<SUB>2362</SUB>> ]
-  "12437" -> "12443" 
-  "12430" -> "12437" 
+"12434" [label = <(SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,SetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2362</SUB>> ]
+"12427" [label = <(METHOD,SetBooleanArrayRegion)<SUB>2360</SUB>> ]
+"12440" [label = <(METHOD_RETURN,void)<SUB>2360</SUB>> ]
+  "12434" -> "12440" 
+  "12427" -> "12434" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/238-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/238-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/238-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/238-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,7 +1,7 @@
 digraph "SetByteArrayRegion" {  
-"12452" [label = <(SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,SetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2370</SUB>> ]
-"12445" [label = <(METHOD,SetByteArrayRegion)<SUB>2368</SUB>> ]
-"12458" [label = <(METHOD_RETURN,void)<SUB>2368</SUB>> ]
-  "12452" -> "12458" 
-  "12445" -> "12452" 
+"12449" [label = <(SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,SetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2368</SUB>> ]
+"12442" [label = <(METHOD,SetByteArrayRegion)<SUB>2366</SUB>> ]
+"12455" [label = <(METHOD_RETURN,void)<SUB>2366</SUB>> ]
+  "12449" -> "12455" 
+  "12442" -> "12449" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/239-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/239-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/239-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/239-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,7 +1,7 @@
 digraph "SetCharArrayRegion" {  
-"12467" [label = <(SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,SetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2375</SUB>> ]
-"12460" [label = <(METHOD,SetCharArrayRegion)<SUB>2373</SUB>> ]
-"12473" [label = <(METHOD_RETURN,void)<SUB>2373</SUB>> ]
-  "12467" -> "12473" 
-  "12460" -> "12467" 
+"12464" [label = <(SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,SetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2373</SUB>> ]
+"12457" [label = <(METHOD,SetCharArrayRegion)<SUB>2371</SUB>> ]
+"12470" [label = <(METHOD_RETURN,void)<SUB>2371</SUB>> ]
+  "12464" -> "12470" 
+  "12457" -> "12464" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/24-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/24-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/24-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/24-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "FindMethod" {  
-"568" [label = <(METHOD,FindMethod)<SUB>517</SUB>> ]
-"573" [label = <(METHOD_RETURN,ArtMethod*)<SUB>517</SUB>> ]
+"568" [label = <(METHOD,FindMethod)<SUB>516</SUB>> ]
+"573" [label = <(METHOD_RETURN,ArtMethod*)<SUB>516</SUB>> ]
   "568" -> "573" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/240-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/240-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/240-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/240-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,7 +1,7 @@
 digraph "SetDoubleArrayRegion" {  
-"12482" [label = <(SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,SetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2380</SUB>> ]
-"12475" [label = <(METHOD,SetDoubleArrayRegion)<SUB>2378</SUB>> ]
-"12488" [label = <(METHOD_RETURN,void)<SUB>2378</SUB>> ]
-  "12482" -> "12488" 
-  "12475" -> "12482" 
+"12479" [label = <(SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,SetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2378</SUB>> ]
+"12472" [label = <(METHOD,SetDoubleArrayRegion)<SUB>2376</SUB>> ]
+"12485" [label = <(METHOD_RETURN,void)<SUB>2376</SUB>> ]
+  "12479" -> "12485" 
+  "12472" -> "12479" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/241-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/241-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/241-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/241-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,7 +1,7 @@
 digraph "SetFloatArrayRegion" {  
-"12497" [label = <(SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,SetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2386</SUB>> ]
-"12490" [label = <(METHOD,SetFloatArrayRegion)<SUB>2384</SUB>> ]
-"12503" [label = <(METHOD_RETURN,void)<SUB>2384</SUB>> ]
-  "12497" -> "12503" 
-  "12490" -> "12497" 
+"12494" [label = <(SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,SetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2384</SUB>> ]
+"12487" [label = <(METHOD,SetFloatArrayRegion)<SUB>2382</SUB>> ]
+"12500" [label = <(METHOD_RETURN,void)<SUB>2382</SUB>> ]
+  "12494" -> "12500" 
+  "12487" -> "12494" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/242-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/242-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/242-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/242-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,7 +1,7 @@
 digraph "SetIntArrayRegion" {  
-"12512" [label = <(SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,SetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2392</SUB>> ]
-"12505" [label = <(METHOD,SetIntArrayRegion)<SUB>2390</SUB>> ]
-"12518" [label = <(METHOD_RETURN,void)<SUB>2390</SUB>> ]
-  "12512" -> "12518" 
-  "12505" -> "12512" 
+"12509" [label = <(SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,SetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2390</SUB>> ]
+"12502" [label = <(METHOD,SetIntArrayRegion)<SUB>2388</SUB>> ]
+"12515" [label = <(METHOD_RETURN,void)<SUB>2388</SUB>> ]
+  "12509" -> "12515" 
+  "12502" -> "12509" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/243-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/243-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/243-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/243-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,7 +1,7 @@
 digraph "SetLongArrayRegion" {  
-"12527" [label = <(SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,SetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2397</SUB>> ]
-"12520" [label = <(METHOD,SetLongArrayRegion)<SUB>2395</SUB>> ]
-"12533" [label = <(METHOD_RETURN,void)<SUB>2395</SUB>> ]
-  "12527" -> "12533" 
-  "12520" -> "12527" 
+"12524" [label = <(SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,SetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2395</SUB>> ]
+"12517" [label = <(METHOD,SetLongArrayRegion)<SUB>2393</SUB>> ]
+"12530" [label = <(METHOD_RETURN,void)<SUB>2393</SUB>> ]
+  "12524" -> "12530" 
+  "12517" -> "12524" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/244-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/244-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/244-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/244-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,7 +1,7 @@
 digraph "SetShortArrayRegion" {  
-"12542" [label = <(SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,SetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2402</SUB>> ]
-"12535" [label = <(METHOD,SetShortArrayRegion)<SUB>2400</SUB>> ]
-"12548" [label = <(METHOD_RETURN,void)<SUB>2400</SUB>> ]
-  "12542" -> "12548" 
-  "12535" -> "12542" 
+"12539" [label = <(SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,SetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2400</SUB>> ]
+"12532" [label = <(METHOD,SetShortArrayRegion)<SUB>2398</SUB>> ]
+"12545" [label = <(METHOD_RETURN,void)<SUB>2398</SUB>> ]
+  "12539" -> "12545" 
+  "12532" -> "12539" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/245-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/245-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/245-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/245-cfg.dot	2023-06-07 19:34:41.727389009 +0330
@@ -1,449 +1,449 @@
 digraph "RegisterNatives" {  
-"12572" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2415</SUB>> ]
-"12593" [label = <(soa,soa(env))<SUB>2416</SUB>> ]
-"12595" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2417</SUB>> ]
-"12604" [label = <(&lt;operator&gt;.assignment,Handle&lt;mirror::Class&gt; c = hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2418</SUB>> ]
-"12642" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2424</SUB>> ]
-"12989" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2535</SUB>> ]
-"12557" [label = <(UNLIKELY,UNLIKELY(method_count &lt; 0))<SUB>2410</SUB>> ]
-"12596" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2417</SUB>> ]
-"12599" [label = <(hs,hs(soa.Self()))<SUB>2417</SUB>> ]
-"12605" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Class&gt; c)<SUB>2418</SUB>> ]
-"12612" [label = <(NewHandle,hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2418</SUB>> ]
-"12626" [label = <(UNLIKELY,UNLIKELY(method_count == 0))<SUB>2419</SUB>> ]
-"12668" [label = <(&lt;operator&gt;.lessThan,i &lt; method_count)<SUB>2425</SUB>> ]
-"12671" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2425</SUB>> ]
-"12558" [label = <(&lt;operator&gt;.lessThan,method_count &lt; 0)<SUB>2410</SUB>> ]
-"12562" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;negative method count: %d&quot;,\012                                       method_count))<SUB>2411</SUB>> ]
-"12570" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2413</SUB>> ]
-"12600" [label = <(Self,soa.Self())<SUB>2417</SUB>> ]
-"12606" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Class)<SUB>2418</SUB>> ]
-"12613" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>2418</SUB>> ]
-"12616" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2418</SUB>> ]
-"12627" [label = <(&lt;operator&gt;.equals,method_count == 0)<SUB>2419</SUB>> ]
-"12631" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2420</SUB>> ]
-"12640" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2422</SUB>> ]
-"12665" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2425</SUB>> ]
-"12675" [label = <(&lt;operator&gt;.assignment,* name = methods[i].name)<SUB>2426</SUB>> ]
-"12683" [label = <(&lt;operator&gt;.assignment,* sig = methods[i].signature)<SUB>2427</SUB>> ]
-"12691" [label = <(&lt;operator&gt;.assignment,* fnPtr = methods[i].fnPtr)<SUB>2428</SUB>> ]
-"12751" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2439</SUB>> ]
-"12766" [label = <(&lt;operator&gt;.assignment,* m = nullptr)<SUB>2477</SUB>> ]
-"12770" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2478</SUB>> ]
-"12952" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod() &lt;&lt; &quot;]&quot;)<SUB>2518</SUB>> ]
-"12980" [label = <(&lt;operator&gt;.assignment,* final_function_ptr = m-&gt;RegisterNative(fnPtr))<SUB>2532</SUB>> ]
-"12987" [label = <(UNUSED,UNUSED(final_function_ptr))<SUB>2533</SUB>> ]
-"12563" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2411</SUB>> ]
-"12578" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2415</SUB>> ]
-"12601" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2417</SUB>> ]
-"12608" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2418</SUB>> ]
-"12615" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>2418</SUB>> ]
-"12617" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2418</SUB>> ]
-"12632" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;)<SUB>2420</SUB>> ]
-"12636" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2421</SUB>> ]
-"12648" [label = <(UNLIKELY,UNLIKELY((methods) == nullptr))<SUB>2424</SUB>> ]
-"12677" [label = <(&lt;operator&gt;.fieldAccess,methods[i].name)<SUB>2426</SUB>> ]
-"12685" [label = <(&lt;operator&gt;.fieldAccess,methods[i].signature)<SUB>2427</SUB>> ]
-"12693" [label = <(&lt;operator&gt;.fieldAccess,methods[i].fnPtr)<SUB>2428</SUB>> ]
-"12699" [label = <(UNLIKELY,UNLIKELY(name == nullptr))<SUB>2429</SUB>> ]
-"12755" [label = <(&lt;operator&gt;.equals,*sig == '!')<SUB>2469</SUB>> ]
-"12772" [label = <(IsCheckJniEnabled,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2478</SUB>> ]
-"12794" [label = <(&lt;operator&gt;.notEquals,current_class != nullptr)<SUB>2480</SUB>> ]
-"12797" [label = <(&lt;operator&gt;.assignment,current_class = current_class-&gt;GetSuperClass())<SUB>2481</SUB>> ]
-"12861" [label = <(&lt;operator&gt;.equals,m == nullptr)<SUB>2501</SUB>> ]
-"12953" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2518</SUB>> ]
-"12964" [label = <(UNLIKELY,UNLIKELY(is_fast))<SUB>2520</SUB>> ]
-"12982" [label = <(RegisterNative,m-&gt;RegisterNative(fnPtr))<SUB>2532</SUB>> ]
-"12564" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2411</SUB>> ]
-"12566" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2411</SUB>> ]
-"12579" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2415</SUB>> ]
-"12583" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;java_class == null&quot;))<SUB>2415</SUB>> ]
-"12590" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2415</SUB>> ]
-"12603" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2417</SUB>> ]
-"12610" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2418</SUB>> ]
-"12618" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2418</SUB>> ]
-"12621" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2418</SUB>> ]
-"12633" [label = <(LOG,LOG(WARNING))<SUB>2420</SUB>> ]
-"12637" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2421</SUB>> ]
-"12649" [label = <(&lt;operator&gt;.equals,(methods) == nullptr)<SUB>2424</SUB>> ]
-"12653" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;methods == null&quot;))<SUB>2424</SUB>> ]
-"12660" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2424</SUB>> ]
-"12678" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2426</SUB>> ]
-"12681" [label = <(FIELD_IDENTIFIER,name,name)<SUB>2426</SUB>> ]
-"12686" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2427</SUB>> ]
-"12689" [label = <(FIELD_IDENTIFIER,signature,signature)<SUB>2427</SUB>> ]
-"12694" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2428</SUB>> ]
-"12697" [label = <(FIELD_IDENTIFIER,fnPtr,fnPtr)<SUB>2428</SUB>> ]
-"12700" [label = <(&lt;operator&gt;.equals,name == nullptr)<SUB>2429</SUB>> ]
-"12704" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method name&quot;, i))<SUB>2430</SUB>> ]
-"12712" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2431</SUB>> ]
-"12756" [label = <(&lt;operator&gt;.indirection,*sig)<SUB>2469</SUB>> ]
-"12760" [label = <(&lt;operator&gt;.assignment,is_fast = true)<SUB>2470</SUB>> ]
-"12763" [label = <(&lt;operator&gt;.preIncrement,++sig)<SUB>2471</SUB>> ]
-"12773" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled)<SUB>2478</SUB>> ]
-"12782" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; current_class = c.Get())<SUB>2479</SUB>> ]
-"12799" [label = <(GetSuperClass,current_class-&gt;GetSuperClass())<SUB>2481</SUB>> ]
-"12804" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;true&gt;(current_class.Ptr(), name, sig))<SUB>2483</SUB>> ]
-"12824" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;false&gt;(current_class.Ptr(), name, sig))<SUB>2489</SUB>> ]
-"12865" [label = <(DumpClass,c-&gt;DumpClass(LOG_STREAM(ERROR), mirror::Class::kDumpClassFullDetail))<SUB>2502</SUB>> ]
-"12876" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;\012 &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2503</SUB>> ]
-"12904" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;static or non-static&quot;))<SUB>2507</SUB>> ]
-"12913" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2508</SUB>> ]
-"12954" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot;)<SUB>2518</SUB>> ]
-"12958" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2518</SUB>> ]
-"12967" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2527</SUB>> ]
-"12976" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2528</SUB>> ]
-"12983" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;RegisterNative)<SUB>2532</SUB>> ]
-"12584" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2415</SUB>> ]
-"12620" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2418</SUB>> ]
-"12623" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2418</SUB>> ]
-"12639" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2421</SUB>> ]
-"12654" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2424</SUB>> ]
-"12706" [label = <(Get,c.Get())<SUB>2430</SUB>> ]
-"12774" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>2478</SUB>> ]
-"12779" [label = <(FIELD_IDENTIFIER,IsCheckJniEnabled,IsCheckJniEnabled)<SUB>2478</SUB>> ]
-"12783" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; current_class)<SUB>2479</SUB>> ]
-"12790" [label = <(Get,c.Get())<SUB>2479</SUB>> ]
-"12800" [label = <(&lt;operator&gt;.indirectFieldAccess,current_class-&gt;GetSuperClass)<SUB>2481</SUB>> ]
-"12806" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;true&gt;(current_class.Ptr(), name, sig))<SUB>2483</SUB>> ]
-"12819" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2484</SUB>> ]
-"12826" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;false&gt;(current_class.Ptr(), name, sig))<SUB>2489</SUB>> ]
-"12839" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2490</SUB>> ]
-"12866" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;DumpClass)<SUB>2502</SUB>> ]
-"12869" [label = <(LOG_STREAM,LOG_STREAM(ERROR))<SUB>2502</SUB>> ]
-"12871" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::kDumpClassFullDetail)<SUB>2502</SUB>> ]
-"12877" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;)<SUB>2503</SUB>> ]
-"12894" [label = <(ToModifiedUtf8,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2506</SUB>> ]
-"12906" [label = <(Get,c.Get())<SUB>2507</SUB>> ]
-"12955" [label = <(VLOG,VLOG(jni))<SUB>2518</SUB>> ]
-"12959" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2518</SUB>> ]
-"12968" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot;)<SUB>2527</SUB>> ]
-"12972" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2527</SUB>> ]
-"12985" [label = <(FIELD_IDENTIFIER,RegisterNative,RegisterNative)<SUB>2532</SUB>> ]
-"12585" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2415</SUB>> ]
-"12587" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2415</SUB>> ]
-"12655" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2424</SUB>> ]
-"12657" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2424</SUB>> ]
-"12707" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2430</SUB>> ]
-"12717" [label = <(UNLIKELY,UNLIKELY(sig == nullptr))<SUB>2432</SUB>> ]
-"12775" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>2478</SUB>> ]
-"12784" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2479</SUB>> ]
-"12791" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2479</SUB>> ]
-"12802" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>2481</SUB>> ]
-"12807" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;true)<SUB>2483</SUB>> ]
-"12810" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class.Ptr(), name, sig))<SUB>2483</SUB>> ]
-"12827" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;false)<SUB>2489</SUB>> ]
-"12830" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class.Ptr(), name, sig))<SUB>2489</SUB>> ]
-"12847" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;\012 &lt;&lt; &quot;This is slow, consider changing your RegisterNatives calls.&quot;)<SUB>2495</SUB>> ]
-"12857" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = false)<SUB>2497</SUB>> ]
-"12868" [label = <(FIELD_IDENTIFIER,DumpClass,DumpClass)<SUB>2502</SUB>> ]
-"12872" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2502</SUB>> ]
-"12875" [label = <(FIELD_IDENTIFIER,kDumpClassFullDetail,kDumpClassFullDetail)<SUB>2502</SUB>> ]
-"12878" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2503</SUB>> ]
-"12895" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8)<SUB>2506</SUB>> ]
-"12907" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2507</SUB>> ]
-"12918" [label = <(&lt;operator&gt;.logicalNot,!m-&gt;IsNative())<SUB>2509</SUB>> ]
-"12961" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2518</SUB>> ]
-"12969" [label = <(LOG,LOG(WARNING))<SUB>2527</SUB>> ]
-"12973" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2527</SUB>> ]
-"12709" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2430</SUB>> ]
-"12718" [label = <(&lt;operator&gt;.equals,sig == nullptr)<SUB>2432</SUB>> ]
-"12722" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method signature&quot;, i))<SUB>2433</SUB>> ]
-"12730" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2434</SUB>> ]
-"12776" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>2478</SUB>> ]
-"12778" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>2478</SUB>> ]
-"12786" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2479</SUB>> ]
-"12793" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2479</SUB>> ]
-"12811" [label = <(&lt;operator&gt;.expressionList,current_class.Ptr(), name, sig)<SUB>2483</SUB>> ]
-"12831" [label = <(&lt;operator&gt;.expressionList,current_class.Ptr(), name, sig)<SUB>2489</SUB>> ]
-"12848" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;)<SUB>2495</SUB>> ]
-"12879" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2503</SUB>> ]
-"12896" [label = <(GetLocation,c-&gt;GetDexCache()-&gt;GetLocation())<SUB>2506</SUB>> ]
-"12903" [label = <(FIELD_IDENTIFIER,ToModifiedUtf8,ToModifiedUtf8)<SUB>2506</SUB>> ]
-"12909" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2507</SUB>> ]
-"12919" [label = <(IsNative,m-&gt;IsNative())<SUB>2509</SUB>> ]
-"12924" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig\012 &lt;&lt; &quot; as native&quot;)<SUB>2510</SUB>> ]
-"12941" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;native&quot;))<SUB>2514</SUB>> ]
-"12950" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2515</SUB>> ]
-"12975" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2527</SUB>> ]
-"12724" [label = <(Get,c.Get())<SUB>2433</SUB>> ]
-"12788" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2479</SUB>> ]
-"12812" [label = <(Ptr,current_class.Ptr())<SUB>2483</SUB>> ]
-"12832" [label = <(Ptr,current_class.Ptr())<SUB>2489</SUB>> ]
-"12849" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name)<SUB>2495</SUB>> ]
-"12880" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2503</SUB>> ]
-"12897" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation)<SUB>2506</SUB>> ]
-"12920" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsNative)<SUB>2509</SUB>> ]
-"12925" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2510</SUB>> ]
-"12943" [label = <(Get,c.Get())<SUB>2514</SUB>> ]
-"12725" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2433</SUB>> ]
-"12735" [label = <(UNLIKELY,UNLIKELY(fnPtr == nullptr))<SUB>2435</SUB>> ]
-"12813" [label = <(&lt;operator&gt;.fieldAccess,current_class.Ptr)<SUB>2483</SUB>> ]
-"12833" [label = <(&lt;operator&gt;.fieldAccess,current_class.Ptr)<SUB>2489</SUB>> ]
-"12850" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot;)<SUB>2495</SUB>> ]
-"12881" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2503</SUB>> ]
-"12898" [label = <(GetDexCache,c-&gt;GetDexCache())<SUB>2506</SUB>> ]
-"12902" [label = <(FIELD_IDENTIFIER,GetLocation,GetLocation)<SUB>2506</SUB>> ]
-"12922" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2509</SUB>> ]
-"12926" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2510</SUB>> ]
-"12944" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2514</SUB>> ]
-"12727" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2433</SUB>> ]
-"12736" [label = <(&lt;operator&gt;.equals,fnPtr == nullptr)<SUB>2435</SUB>> ]
-"12740" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;native function&quot;, i))<SUB>2436</SUB>> ]
-"12748" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2437</SUB>> ]
-"12815" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2483</SUB>> ]
-"12835" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2489</SUB>> ]
-"12851" [label = <(LOG,LOG(WARNING))<SUB>2495</SUB>> ]
-"12882" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;)<SUB>2503</SUB>> ]
-"12886" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2505</SUB>> ]
-"12899" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache)<SUB>2506</SUB>> ]
-"12927" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2510</SUB>> ]
-"12946" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2514</SUB>> ]
-"12742" [label = <(Get,c.Get())<SUB>2436</SUB>> ]
-"12883" [label = <(LOG,LOG(ERROR))<SUB>2503</SUB>> ]
-"12887" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2505</SUB>> ]
-"12901" [label = <(FIELD_IDENTIFIER,GetDexCache,GetDexCache)<SUB>2506</SUB>> ]
-"12928" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2510</SUB>> ]
-"12743" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2436</SUB>> ]
-"12889" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2505</SUB>> ]
-"12929" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;)<SUB>2510</SUB>> ]
-"12933" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2512</SUB>> ]
-"12745" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2436</SUB>> ]
-"12930" [label = <(LOG,LOG(ERROR))<SUB>2510</SUB>> ]
-"12934" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2512</SUB>> ]
-"12936" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2512</SUB>> ]
-"12550" [label = <(METHOD,RegisterNatives)<SUB>2406</SUB>> ]
-"12991" [label = <(METHOD_RETURN,jint)<SUB>2406</SUB>> ]
-  "12572" -> "12579" 
-  "12572" -> "12593" 
-  "12593" -> "12596" 
-  "12595" -> "12610" 
-  "12604" -> "12627" 
-  "12642" -> "12649" 
-  "12642" -> "12665" 
-  "12989" -> "12991" 
-  "12557" -> "12564" 
-  "12557" -> "12572" 
-  "12596" -> "12603" 
-  "12599" -> "12595" 
-  "12605" -> "12615" 
-  "12612" -> "12604" 
-  "12626" -> "12633" 
-  "12626" -> "12642" 
-  "12668" -> "12678" 
-  "12668" -> "12989" 
-  "12671" -> "12668" 
-  "12558" -> "12557" 
-  "12562" -> "12570" 
-  "12570" -> "12991" 
-  "12600" -> "12599" 
-  "12606" -> "12605" 
-  "12613" -> "12620" 
-  "12616" -> "12612" 
-  "12627" -> "12626" 
-  "12631" -> "12640" 
-  "12640" -> "12991" 
-  "12665" -> "12668" 
-  "12675" -> "12686" 
-  "12683" -> "12694" 
-  "12691" -> "12700" 
-  "12751" -> "12756" 
-  "12766" -> "12776" 
-  "12770" -> "12788" 
-  "12952" -> "12964" 
-  "12980" -> "12987" 
-  "12987" -> "12671" 
-  "12563" -> "12562" 
-  "12578" -> "12585" 
-  "12578" -> "12593" 
-  "12601" -> "12600" 
-  "12608" -> "12606" 
-  "12615" -> "12613" 
-  "12617" -> "12616" 
-  "12632" -> "12639" 
-  "12636" -> "12631" 
-  "12648" -> "12655" 
-  "12648" -> "12665" 
-  "12677" -> "12675" 
-  "12685" -> "12683" 
-  "12693" -> "12691" 
-  "12699" -> "12709" 
-  "12699" -> "12718" 
-  "12755" -> "12760" 
-  "12755" -> "12766" 
-  "12772" -> "12770" 
-  "12794" -> "12807" 
-  "12794" -> "12861" 
-  "12797" -> "12794" 
-  "12861" -> "12868" 
-  "12861" -> "12922" 
-  "12953" -> "12952" 
-  "12964" -> "12969" 
-  "12964" -> "12985" 
-  "12982" -> "12980" 
-  "12564" -> "12566" 
-  "12566" -> "12563" 
-  "12579" -> "12578" 
-  "12583" -> "12590" 
-  "12590" -> "12991" 
-  "12603" -> "12601" 
-  "12610" -> "12608" 
-  "12618" -> "12623" 
-  "12621" -> "12617" 
-  "12633" -> "12632" 
-  "12637" -> "12636" 
-  "12649" -> "12648" 
-  "12653" -> "12660" 
-  "12660" -> "12991" 
-  "12678" -> "12681" 
-  "12681" -> "12677" 
-  "12686" -> "12689" 
-  "12689" -> "12685" 
-  "12694" -> "12697" 
-  "12697" -> "12693" 
-  "12700" -> "12699" 
-  "12704" -> "12712" 
-  "12712" -> "12991" 
-  "12756" -> "12755" 
+"12569" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2413</SUB>> ]
+"12590" [label = <(soa,soa(env))<SUB>2414</SUB>> ]
+"12592" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2415</SUB>> ]
+"12601" [label = <(&lt;operator&gt;.assignment,Handle&lt;mirror::Class&gt; c = hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2416</SUB>> ]
+"12639" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2422</SUB>> ]
+"12986" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2533</SUB>> ]
+"12554" [label = <(UNLIKELY,UNLIKELY(method_count &lt; 0))<SUB>2408</SUB>> ]
+"12593" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2415</SUB>> ]
+"12596" [label = <(hs,hs(soa.Self()))<SUB>2415</SUB>> ]
+"12602" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Class&gt; c)<SUB>2416</SUB>> ]
+"12609" [label = <(NewHandle,hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2416</SUB>> ]
+"12623" [label = <(UNLIKELY,UNLIKELY(method_count == 0))<SUB>2417</SUB>> ]
+"12665" [label = <(&lt;operator&gt;.lessThan,i &lt; method_count)<SUB>2423</SUB>> ]
+"12668" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2423</SUB>> ]
+"12555" [label = <(&lt;operator&gt;.lessThan,method_count &lt; 0)<SUB>2408</SUB>> ]
+"12559" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;negative method count: %d&quot;,\012                                       method_count))<SUB>2409</SUB>> ]
+"12567" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2411</SUB>> ]
+"12597" [label = <(Self,soa.Self())<SUB>2415</SUB>> ]
+"12603" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Class)<SUB>2416</SUB>> ]
+"12610" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>2416</SUB>> ]
+"12613" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2416</SUB>> ]
+"12624" [label = <(&lt;operator&gt;.equals,method_count == 0)<SUB>2417</SUB>> ]
+"12628" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2418</SUB>> ]
+"12637" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2420</SUB>> ]
+"12662" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2423</SUB>> ]
+"12672" [label = <(&lt;operator&gt;.assignment,* name = methods[i].name)<SUB>2424</SUB>> ]
+"12680" [label = <(&lt;operator&gt;.assignment,* sig = methods[i].signature)<SUB>2425</SUB>> ]
+"12688" [label = <(&lt;operator&gt;.assignment,* fnPtr = methods[i].fnPtr)<SUB>2426</SUB>> ]
+"12748" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2437</SUB>> ]
+"12763" [label = <(&lt;operator&gt;.assignment,* m = nullptr)<SUB>2475</SUB>> ]
+"12767" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2476</SUB>> ]
+"12949" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod() &lt;&lt; &quot;]&quot;)<SUB>2516</SUB>> ]
+"12977" [label = <(&lt;operator&gt;.assignment,* final_function_ptr = m-&gt;RegisterNative(fnPtr))<SUB>2530</SUB>> ]
+"12984" [label = <(UNUSED,UNUSED(final_function_ptr))<SUB>2531</SUB>> ]
+"12560" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2409</SUB>> ]
+"12575" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2413</SUB>> ]
+"12598" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2415</SUB>> ]
+"12605" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2416</SUB>> ]
+"12612" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>2416</SUB>> ]
+"12614" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2416</SUB>> ]
+"12629" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;)<SUB>2418</SUB>> ]
+"12633" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2419</SUB>> ]
+"12645" [label = <(UNLIKELY,UNLIKELY((methods) == nullptr))<SUB>2422</SUB>> ]
+"12674" [label = <(&lt;operator&gt;.fieldAccess,methods[i].name)<SUB>2424</SUB>> ]
+"12682" [label = <(&lt;operator&gt;.fieldAccess,methods[i].signature)<SUB>2425</SUB>> ]
+"12690" [label = <(&lt;operator&gt;.fieldAccess,methods[i].fnPtr)<SUB>2426</SUB>> ]
+"12696" [label = <(UNLIKELY,UNLIKELY(name == nullptr))<SUB>2427</SUB>> ]
+"12752" [label = <(&lt;operator&gt;.equals,*sig == '!')<SUB>2467</SUB>> ]
+"12769" [label = <(IsCheckJniEnabled,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2476</SUB>> ]
+"12791" [label = <(&lt;operator&gt;.notEquals,current_class != nullptr)<SUB>2478</SUB>> ]
+"12794" [label = <(&lt;operator&gt;.assignment,current_class = current_class-&gt;GetSuperClass())<SUB>2479</SUB>> ]
+"12858" [label = <(&lt;operator&gt;.equals,m == nullptr)<SUB>2499</SUB>> ]
+"12950" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2516</SUB>> ]
+"12961" [label = <(UNLIKELY,UNLIKELY(is_fast))<SUB>2518</SUB>> ]
+"12979" [label = <(RegisterNative,m-&gt;RegisterNative(fnPtr))<SUB>2530</SUB>> ]
+"12561" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2409</SUB>> ]
+"12563" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2409</SUB>> ]
+"12576" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2413</SUB>> ]
+"12580" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;java_class == null&quot;))<SUB>2413</SUB>> ]
+"12587" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2413</SUB>> ]
+"12600" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2415</SUB>> ]
+"12607" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2416</SUB>> ]
+"12615" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2416</SUB>> ]
+"12618" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2416</SUB>> ]
+"12630" [label = <(LOG,LOG(WARNING))<SUB>2418</SUB>> ]
+"12634" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2419</SUB>> ]
+"12646" [label = <(&lt;operator&gt;.equals,(methods) == nullptr)<SUB>2422</SUB>> ]
+"12650" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;methods == null&quot;))<SUB>2422</SUB>> ]
+"12657" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2422</SUB>> ]
+"12675" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2424</SUB>> ]
+"12678" [label = <(FIELD_IDENTIFIER,name,name)<SUB>2424</SUB>> ]
+"12683" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2425</SUB>> ]
+"12686" [label = <(FIELD_IDENTIFIER,signature,signature)<SUB>2425</SUB>> ]
+"12691" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2426</SUB>> ]
+"12694" [label = <(FIELD_IDENTIFIER,fnPtr,fnPtr)<SUB>2426</SUB>> ]
+"12697" [label = <(&lt;operator&gt;.equals,name == nullptr)<SUB>2427</SUB>> ]
+"12701" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method name&quot;, i))<SUB>2428</SUB>> ]
+"12709" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2429</SUB>> ]
+"12753" [label = <(&lt;operator&gt;.indirection,*sig)<SUB>2467</SUB>> ]
+"12757" [label = <(&lt;operator&gt;.assignment,is_fast = true)<SUB>2468</SUB>> ]
+"12760" [label = <(&lt;operator&gt;.preIncrement,++sig)<SUB>2469</SUB>> ]
+"12770" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled)<SUB>2476</SUB>> ]
+"12779" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; current_class = c.Get())<SUB>2477</SUB>> ]
+"12796" [label = <(GetSuperClass,current_class-&gt;GetSuperClass())<SUB>2479</SUB>> ]
+"12801" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;true&gt;(current_class.Ptr(), name, sig))<SUB>2481</SUB>> ]
+"12821" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;false&gt;(current_class.Ptr(), name, sig))<SUB>2487</SUB>> ]
+"12862" [label = <(DumpClass,c-&gt;DumpClass(LOG_STREAM(ERROR), mirror::Class::kDumpClassFullDetail))<SUB>2500</SUB>> ]
+"12873" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;\012 &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2501</SUB>> ]
+"12901" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;static or non-static&quot;))<SUB>2505</SUB>> ]
+"12910" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2506</SUB>> ]
+"12951" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot;)<SUB>2516</SUB>> ]
+"12955" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2516</SUB>> ]
+"12964" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2525</SUB>> ]
+"12973" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2526</SUB>> ]
+"12980" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;RegisterNative)<SUB>2530</SUB>> ]
+"12581" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2413</SUB>> ]
+"12617" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2416</SUB>> ]
+"12620" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2416</SUB>> ]
+"12636" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2419</SUB>> ]
+"12651" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2422</SUB>> ]
+"12703" [label = <(Get,c.Get())<SUB>2428</SUB>> ]
+"12771" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>2476</SUB>> ]
+"12776" [label = <(FIELD_IDENTIFIER,IsCheckJniEnabled,IsCheckJniEnabled)<SUB>2476</SUB>> ]
+"12780" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; current_class)<SUB>2477</SUB>> ]
+"12787" [label = <(Get,c.Get())<SUB>2477</SUB>> ]
+"12797" [label = <(&lt;operator&gt;.indirectFieldAccess,current_class-&gt;GetSuperClass)<SUB>2479</SUB>> ]
+"12803" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;true&gt;(current_class.Ptr(), name, sig))<SUB>2481</SUB>> ]
+"12816" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2482</SUB>> ]
+"12823" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;false&gt;(current_class.Ptr(), name, sig))<SUB>2487</SUB>> ]
+"12836" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2488</SUB>> ]
+"12863" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;DumpClass)<SUB>2500</SUB>> ]
+"12866" [label = <(LOG_STREAM,LOG_STREAM(ERROR))<SUB>2500</SUB>> ]
+"12868" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::kDumpClassFullDetail)<SUB>2500</SUB>> ]
+"12874" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;)<SUB>2501</SUB>> ]
+"12891" [label = <(ToModifiedUtf8,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2504</SUB>> ]
+"12903" [label = <(Get,c.Get())<SUB>2505</SUB>> ]
+"12952" [label = <(VLOG,VLOG(jni))<SUB>2516</SUB>> ]
+"12956" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2516</SUB>> ]
+"12965" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot;)<SUB>2525</SUB>> ]
+"12969" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2525</SUB>> ]
+"12982" [label = <(FIELD_IDENTIFIER,RegisterNative,RegisterNative)<SUB>2530</SUB>> ]
+"12582" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2413</SUB>> ]
+"12584" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2413</SUB>> ]
+"12652" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2422</SUB>> ]
+"12654" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2422</SUB>> ]
+"12704" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2428</SUB>> ]
+"12714" [label = <(UNLIKELY,UNLIKELY(sig == nullptr))<SUB>2430</SUB>> ]
+"12772" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>2476</SUB>> ]
+"12781" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2477</SUB>> ]
+"12788" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2477</SUB>> ]
+"12799" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>2479</SUB>> ]
+"12804" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;true)<SUB>2481</SUB>> ]
+"12807" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class.Ptr(), name, sig))<SUB>2481</SUB>> ]
+"12824" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;false)<SUB>2487</SUB>> ]
+"12827" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class.Ptr(), name, sig))<SUB>2487</SUB>> ]
+"12844" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;\012 &lt;&lt; &quot;This is slow, consider changing your RegisterNatives calls.&quot;)<SUB>2493</SUB>> ]
+"12854" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = false)<SUB>2495</SUB>> ]
+"12865" [label = <(FIELD_IDENTIFIER,DumpClass,DumpClass)<SUB>2500</SUB>> ]
+"12869" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2500</SUB>> ]
+"12872" [label = <(FIELD_IDENTIFIER,kDumpClassFullDetail,kDumpClassFullDetail)<SUB>2500</SUB>> ]
+"12875" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2501</SUB>> ]
+"12892" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8)<SUB>2504</SUB>> ]
+"12904" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2505</SUB>> ]
+"12915" [label = <(&lt;operator&gt;.logicalNot,!m-&gt;IsNative())<SUB>2507</SUB>> ]
+"12958" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2516</SUB>> ]
+"12966" [label = <(LOG,LOG(WARNING))<SUB>2525</SUB>> ]
+"12970" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2525</SUB>> ]
+"12706" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2428</SUB>> ]
+"12715" [label = <(&lt;operator&gt;.equals,sig == nullptr)<SUB>2430</SUB>> ]
+"12719" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method signature&quot;, i))<SUB>2431</SUB>> ]
+"12727" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2432</SUB>> ]
+"12773" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>2476</SUB>> ]
+"12775" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>2476</SUB>> ]
+"12783" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2477</SUB>> ]
+"12790" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2477</SUB>> ]
+"12808" [label = <(&lt;operator&gt;.expressionList,current_class.Ptr(), name, sig)<SUB>2481</SUB>> ]
+"12828" [label = <(&lt;operator&gt;.expressionList,current_class.Ptr(), name, sig)<SUB>2487</SUB>> ]
+"12845" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;)<SUB>2493</SUB>> ]
+"12876" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2501</SUB>> ]
+"12893" [label = <(GetLocation,c-&gt;GetDexCache()-&gt;GetLocation())<SUB>2504</SUB>> ]
+"12900" [label = <(FIELD_IDENTIFIER,ToModifiedUtf8,ToModifiedUtf8)<SUB>2504</SUB>> ]
+"12906" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2505</SUB>> ]
+"12916" [label = <(IsNative,m-&gt;IsNative())<SUB>2507</SUB>> ]
+"12921" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig\012 &lt;&lt; &quot; as native&quot;)<SUB>2508</SUB>> ]
+"12938" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;native&quot;))<SUB>2512</SUB>> ]
+"12947" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2513</SUB>> ]
+"12972" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2525</SUB>> ]
+"12721" [label = <(Get,c.Get())<SUB>2431</SUB>> ]
+"12785" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2477</SUB>> ]
+"12809" [label = <(Ptr,current_class.Ptr())<SUB>2481</SUB>> ]
+"12829" [label = <(Ptr,current_class.Ptr())<SUB>2487</SUB>> ]
+"12846" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name)<SUB>2493</SUB>> ]
+"12877" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2501</SUB>> ]
+"12894" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation)<SUB>2504</SUB>> ]
+"12917" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsNative)<SUB>2507</SUB>> ]
+"12922" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2508</SUB>> ]
+"12940" [label = <(Get,c.Get())<SUB>2512</SUB>> ]
+"12722" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2431</SUB>> ]
+"12732" [label = <(UNLIKELY,UNLIKELY(fnPtr == nullptr))<SUB>2433</SUB>> ]
+"12810" [label = <(&lt;operator&gt;.fieldAccess,current_class.Ptr)<SUB>2481</SUB>> ]
+"12830" [label = <(&lt;operator&gt;.fieldAccess,current_class.Ptr)<SUB>2487</SUB>> ]
+"12847" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot;)<SUB>2493</SUB>> ]
+"12878" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2501</SUB>> ]
+"12895" [label = <(GetDexCache,c-&gt;GetDexCache())<SUB>2504</SUB>> ]
+"12899" [label = <(FIELD_IDENTIFIER,GetLocation,GetLocation)<SUB>2504</SUB>> ]
+"12919" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2507</SUB>> ]
+"12923" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2508</SUB>> ]
+"12941" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2512</SUB>> ]
+"12724" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2431</SUB>> ]
+"12733" [label = <(&lt;operator&gt;.equals,fnPtr == nullptr)<SUB>2433</SUB>> ]
+"12737" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;native function&quot;, i))<SUB>2434</SUB>> ]
+"12745" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2435</SUB>> ]
+"12812" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2481</SUB>> ]
+"12832" [label = <(FIELD_IDENTIFIER,Ptr,Ptr)<SUB>2487</SUB>> ]
+"12848" [label = <(LOG,LOG(WARNING))<SUB>2493</SUB>> ]
+"12879" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;)<SUB>2501</SUB>> ]
+"12883" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2503</SUB>> ]
+"12896" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache)<SUB>2504</SUB>> ]
+"12924" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2508</SUB>> ]
+"12943" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2512</SUB>> ]
+"12739" [label = <(Get,c.Get())<SUB>2434</SUB>> ]
+"12880" [label = <(LOG,LOG(ERROR))<SUB>2501</SUB>> ]
+"12884" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2503</SUB>> ]
+"12898" [label = <(FIELD_IDENTIFIER,GetDexCache,GetDexCache)<SUB>2504</SUB>> ]
+"12925" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2508</SUB>> ]
+"12740" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2434</SUB>> ]
+"12886" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2503</SUB>> ]
+"12926" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;)<SUB>2508</SUB>> ]
+"12930" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2510</SUB>> ]
+"12742" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2434</SUB>> ]
+"12927" [label = <(LOG,LOG(ERROR))<SUB>2508</SUB>> ]
+"12931" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2510</SUB>> ]
+"12933" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2510</SUB>> ]
+"12547" [label = <(METHOD,RegisterNatives)<SUB>2404</SUB>> ]
+"12988" [label = <(METHOD_RETURN,jint)<SUB>2404</SUB>> ]
+  "12569" -> "12576" 
+  "12569" -> "12590" 
+  "12590" -> "12593" 
+  "12592" -> "12607" 
+  "12601" -> "12624" 
+  "12639" -> "12646" 
+  "12639" -> "12662" 
+  "12986" -> "12988" 
+  "12554" -> "12561" 
+  "12554" -> "12569" 
+  "12593" -> "12600" 
+  "12596" -> "12592" 
+  "12602" -> "12612" 
+  "12609" -> "12601" 
+  "12623" -> "12630" 
+  "12623" -> "12639" 
+  "12665" -> "12675" 
+  "12665" -> "12986" 
+  "12668" -> "12665" 
+  "12555" -> "12554" 
+  "12559" -> "12567" 
+  "12567" -> "12988" 
+  "12597" -> "12596" 
+  "12603" -> "12602" 
+  "12610" -> "12617" 
+  "12613" -> "12609" 
+  "12624" -> "12623" 
+  "12628" -> "12637" 
+  "12637" -> "12988" 
+  "12662" -> "12665" 
+  "12672" -> "12683" 
+  "12680" -> "12691" 
+  "12688" -> "12697" 
+  "12748" -> "12753" 
+  "12763" -> "12773" 
+  "12767" -> "12785" 
+  "12949" -> "12961" 
+  "12977" -> "12984" 
+  "12984" -> "12668" 
+  "12560" -> "12559" 
+  "12575" -> "12582" 
+  "12575" -> "12590" 
+  "12598" -> "12597" 
+  "12605" -> "12603" 
+  "12612" -> "12610" 
+  "12614" -> "12613" 
+  "12629" -> "12636" 
+  "12633" -> "12628" 
+  "12645" -> "12652" 
+  "12645" -> "12662" 
+  "12674" -> "12672" 
+  "12682" -> "12680" 
+  "12690" -> "12688" 
+  "12696" -> "12706" 
+  "12696" -> "12715" 
+  "12752" -> "12757" 
+  "12752" -> "12763" 
+  "12769" -> "12767" 
+  "12791" -> "12804" 
+  "12791" -> "12858" 
+  "12794" -> "12791" 
+  "12858" -> "12865" 
+  "12858" -> "12919" 
+  "12950" -> "12949" 
+  "12961" -> "12966" 
+  "12961" -> "12982" 
+  "12979" -> "12977" 
+  "12561" -> "12563" 
+  "12563" -> "12560" 
+  "12576" -> "12575" 
+  "12580" -> "12587" 
+  "12587" -> "12988" 
+  "12600" -> "12598" 
+  "12607" -> "12605" 
+  "12615" -> "12620" 
+  "12618" -> "12614" 
+  "12630" -> "12629" 
+  "12634" -> "12633" 
+  "12646" -> "12645" 
+  "12650" -> "12657" 
+  "12657" -> "12988" 
+  "12675" -> "12678" 
+  "12678" -> "12674" 
+  "12683" -> "12686" 
+  "12686" -> "12682" 
+  "12691" -> "12694" 
+  "12694" -> "12690" 
+  "12697" -> "12696" 
+  "12701" -> "12709" 
+  "12709" -> "12988" 
+  "12753" -> "12752" 
+  "12757" -> "12760" 
   "12760" -> "12763" 
-  "12763" -> "12766" 
-  "12773" -> "12772" 
-  "12782" -> "12794" 
-  "12799" -> "12797" 
-  "12804" -> "12819" 
-  "12824" -> "12839" 
-  "12865" -> "12883" 
-  "12876" -> "12909" 
-  "12904" -> "12913" 
-  "12913" -> "12991" 
-  "12954" -> "12961" 
-  "12958" -> "12953" 
-  "12967" -> "12976" 
-  "12976" -> "12985" 
-  "12983" -> "12982" 
-  "12584" -> "12583" 
+  "12770" -> "12769" 
+  "12779" -> "12791" 
+  "12796" -> "12794" 
+  "12801" -> "12816" 
+  "12821" -> "12836" 
+  "12862" -> "12880" 
+  "12873" -> "12906" 
+  "12901" -> "12910" 
+  "12910" -> "12988" 
+  "12951" -> "12958" 
+  "12955" -> "12950" 
+  "12964" -> "12973" 
+  "12973" -> "12982" 
+  "12980" -> "12979" 
+  "12581" -> "12580" 
+  "12617" -> "12615" 
   "12620" -> "12618" 
-  "12623" -> "12621" 
-  "12639" -> "12637" 
-  "12654" -> "12653" 
-  "12706" -> "12704" 
-  "12774" -> "12779" 
-  "12779" -> "12773" 
-  "12783" -> "12793" 
-  "12790" -> "12782" 
-  "12800" -> "12799" 
-  "12806" -> "12804" 
-  "12819" -> "12861" 
-  "12819" -> "12827" 
-  "12826" -> "12824" 
-  "12839" -> "12861" 
-  "12839" -> "12851" 
-  "12839" -> "12802" 
+  "12636" -> "12634" 
+  "12651" -> "12650" 
+  "12703" -> "12701" 
+  "12771" -> "12776" 
+  "12776" -> "12770" 
+  "12780" -> "12790" 
+  "12787" -> "12779" 
+  "12797" -> "12796" 
+  "12803" -> "12801" 
+  "12816" -> "12858" 
+  "12816" -> "12824" 
+  "12823" -> "12821" 
+  "12836" -> "12858" 
+  "12836" -> "12848" 
+  "12836" -> "12799" 
+  "12863" -> "12866" 
   "12866" -> "12869" 
+  "12868" -> "12862" 
+  "12874" -> "12898" 
+  "12891" -> "12873" 
+  "12903" -> "12901" 
+  "12952" -> "12951" 
+  "12956" -> "12955" 
+  "12965" -> "12972" 
+  "12969" -> "12964" 
+  "12982" -> "12980" 
+  "12582" -> "12584" 
+  "12584" -> "12581" 
+  "12652" -> "12654" 
+  "12654" -> "12651" 
+  "12704" -> "12703" 
+  "12714" -> "12724" 
+  "12714" -> "12733" 
+  "12772" -> "12771" 
+  "12781" -> "12780" 
+  "12788" -> "12787" 
+  "12799" -> "12797" 
+  "12804" -> "12812" 
+  "12807" -> "12803" 
+  "12824" -> "12832" 
+  "12827" -> "12823" 
+  "12844" -> "12854" 
+  "12854" -> "12799" 
+  "12865" -> "12863" 
   "12869" -> "12872" 
-  "12871" -> "12865" 
-  "12877" -> "12901" 
-  "12894" -> "12876" 
+  "12872" -> "12868" 
+  "12875" -> "12874" 
+  "12892" -> "12891" 
+  "12904" -> "12903" 
+  "12915" -> "12927" 
+  "12915" -> "12952" 
+  "12958" -> "12956" 
+  "12966" -> "12965" 
+  "12970" -> "12969" 
+  "12706" -> "12704" 
+  "12715" -> "12714" 
+  "12719" -> "12727" 
+  "12727" -> "12988" 
+  "12773" -> "12775" 
+  "12775" -> "12772" 
+  "12783" -> "12781" 
+  "12790" -> "12788" 
+  "12808" -> "12807" 
+  "12828" -> "12827" 
+  "12845" -> "12844" 
+  "12876" -> "12875" 
+  "12893" -> "12900" 
+  "12900" -> "12892" 
   "12906" -> "12904" 
-  "12955" -> "12954" 
-  "12959" -> "12958" 
-  "12968" -> "12975" 
-  "12972" -> "12967" 
-  "12985" -> "12983" 
-  "12585" -> "12587" 
-  "12587" -> "12584" 
-  "12655" -> "12657" 
-  "12657" -> "12654" 
-  "12707" -> "12706" 
-  "12717" -> "12727" 
-  "12717" -> "12736" 
-  "12775" -> "12774" 
-  "12784" -> "12783" 
-  "12791" -> "12790" 
-  "12802" -> "12800" 
-  "12807" -> "12815" 
-  "12810" -> "12806" 
-  "12827" -> "12835" 
-  "12830" -> "12826" 
-  "12847" -> "12857" 
-  "12857" -> "12802" 
-  "12868" -> "12866" 
-  "12872" -> "12875" 
-  "12875" -> "12871" 
+  "12916" -> "12915" 
+  "12921" -> "12943" 
+  "12938" -> "12947" 
+  "12947" -> "12988" 
+  "12972" -> "12970" 
+  "12721" -> "12719" 
+  "12785" -> "12783" 
+  "12809" -> "12808" 
+  "12829" -> "12828" 
+  "12846" -> "12845" 
+  "12877" -> "12876" 
+  "12894" -> "12893" 
+  "12917" -> "12916" 
+  "12922" -> "12921" 
+  "12940" -> "12938" 
+  "12722" -> "12721" 
+  "12732" -> "12742" 
+  "12732" -> "12748" 
+  "12810" -> "12809" 
+  "12830" -> "12829" 
+  "12847" -> "12846" 
   "12878" -> "12877" 
-  "12895" -> "12894" 
-  "12907" -> "12906" 
-  "12918" -> "12930" 
-  "12918" -> "12955" 
-  "12961" -> "12959" 
-  "12969" -> "12968" 
-  "12973" -> "12972" 
-  "12709" -> "12707" 
-  "12718" -> "12717" 
-  "12722" -> "12730" 
-  "12730" -> "12991" 
-  "12776" -> "12778" 
-  "12778" -> "12775" 
-  "12786" -> "12784" 
-  "12793" -> "12791" 
-  "12811" -> "12810" 
-  "12831" -> "12830" 
-  "12848" -> "12847" 
-  "12879" -> "12878" 
-  "12896" -> "12903" 
-  "12903" -> "12895" 
-  "12909" -> "12907" 
-  "12919" -> "12918" 
-  "12924" -> "12946" 
-  "12941" -> "12950" 
-  "12950" -> "12991" 
-  "12975" -> "12973" 
+  "12895" -> "12899" 
+  "12899" -> "12894" 
+  "12919" -> "12917" 
+  "12923" -> "12922" 
+  "12941" -> "12940" 
   "12724" -> "12722" 
-  "12788" -> "12786" 
-  "12812" -> "12811" 
-  "12832" -> "12831" 
-  "12849" -> "12848" 
+  "12733" -> "12732" 
+  "12737" -> "12745" 
+  "12745" -> "12988" 
+  "12812" -> "12810" 
+  "12832" -> "12830" 
+  "12848" -> "12847" 
+  "12879" -> "12886" 
+  "12883" -> "12878" 
+  "12896" -> "12895" 
+  "12924" -> "12923" 
+  "12943" -> "12941" 
+  "12739" -> "12737" 
   "12880" -> "12879" 
-  "12897" -> "12896" 
-  "12920" -> "12919" 
+  "12884" -> "12883" 
+  "12898" -> "12896" 
   "12925" -> "12924" 
-  "12943" -> "12941" 
-  "12725" -> "12724" 
-  "12735" -> "12745" 
-  "12735" -> "12751" 
-  "12813" -> "12812" 
-  "12833" -> "12832" 
-  "12850" -> "12849" 
-  "12881" -> "12880" 
-  "12898" -> "12902" 
-  "12902" -> "12897" 
-  "12922" -> "12920" 
-  "12926" -> "12925" 
-  "12944" -> "12943" 
-  "12727" -> "12725" 
-  "12736" -> "12735" 
-  "12740" -> "12748" 
-  "12748" -> "12991" 
-  "12815" -> "12813" 
-  "12835" -> "12833" 
-  "12851" -> "12850" 
-  "12882" -> "12889" 
-  "12886" -> "12881" 
-  "12899" -> "12898" 
-  "12927" -> "12926" 
-  "12946" -> "12944" 
+  "12740" -> "12739" 
+  "12886" -> "12884" 
+  "12926" -> "12933" 
+  "12930" -> "12925" 
   "12742" -> "12740" 
-  "12883" -> "12882" 
-  "12887" -> "12886" 
-  "12901" -> "12899" 
-  "12928" -> "12927" 
-  "12743" -> "12742" 
-  "12889" -> "12887" 
-  "12929" -> "12936" 
-  "12933" -> "12928" 
-  "12745" -> "12743" 
-  "12930" -> "12929" 
-  "12934" -> "12933" 
-  "12936" -> "12934" 
-  "12550" -> "12558" 
+  "12927" -> "12926" 
+  "12931" -> "12930" 
+  "12933" -> "12931" 
+  "12547" -> "12555" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/246-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/246-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/246-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/246-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,123 +1,123 @@
 digraph "UnregisterNatives" {  
-"12997" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2539</SUB>> ]
-"13017" [label = <(soa,soa(env))<SUB>2540</SUB>> ]
-"13019" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2541</SUB>> ]
-"13036" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c) &lt;&lt; &quot;]&quot;)<SUB>2543</SUB>> ]
-"13051" [label = <(&lt;operator&gt;.assignment,unregistered_count = 0)<SUB>2545</SUB>> ]
-"13055" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2546</SUB>> ]
-"13106" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2558</SUB>> ]
-"13020" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>2541</SUB>> ]
-"13027" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2541</SUB>> ]
-"13037" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c))<SUB>2543</SUB>> ]
-"13057" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2546</SUB>> ]
-"13088" [label = <(&lt;operator&gt;.equals,unregistered_count == 0)<SUB>2554</SUB>> ]
-"13021" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2541</SUB>> ]
-"13028" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2541</SUB>> ]
-"13038" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot;)<SUB>2543</SUB>> ]
-"13042" [label = <(mirror::Class::PrettyClass,mirror::Class::PrettyClass(c))<SUB>2543</SUB>> ]
-"13058" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>2546</SUB>> ]
-"13092" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c) &lt;&lt; &quot;' that contains no native methods&quot;)<SUB>2555</SUB>> ]
-"13002" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2539</SUB>> ]
-"13023" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2541</SUB>> ]
-"13029" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2541</SUB>> ]
-"13032" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2541</SUB>> ]
-"13039" [label = <(VLOG,VLOG(jni))<SUB>2543</SUB>> ]
-"13043" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyClass)<SUB>2543</SUB>> ]
-"13059" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2546</SUB>> ]
-"13066" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>2546</SUB>> ]
-"13076" [label = <(IsNative,m.IsNative())<SUB>2548</SUB>> ]
-"13093" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c))<SUB>2555</SUB>> ]
-"13003" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2539</SUB>> ]
-"13007" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>2539</SUB>> ]
-"13014" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2539</SUB>> ]
-"13025" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2541</SUB>> ]
-"13031" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2541</SUB>> ]
-"13034" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2541</SUB>> ]
-"13044" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2543</SUB>> ]
-"13047" [label = <(FIELD_IDENTIFIER,PrettyClass,PrettyClass)<SUB>2543</SUB>> ]
-"13060" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2546</SUB>> ]
-"13077" [label = <(&lt;operator&gt;.fieldAccess,m.IsNative)<SUB>2548</SUB>> ]
-"13081" [label = <(UnregisterNative,m.UnregisterNative())<SUB>2549</SUB>> ]
-"13085" [label = <(&lt;operator&gt;.postIncrement,unregistered_count++)<SUB>2550</SUB>> ]
-"13094" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;)<SUB>2555</SUB>> ]
-"13098" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(c))<SUB>2556</SUB>> ]
-"13008" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2539</SUB>> ]
-"13061" [label = <(Runtime::Current,Runtime::Current())<SUB>2546</SUB>> ]
-"13065" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2546</SUB>> ]
-"13079" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2548</SUB>> ]
-"13082" [label = <(&lt;operator&gt;.fieldAccess,m.UnregisterNative)<SUB>2549</SUB>> ]
-"13095" [label = <(LOG,LOG(WARNING))<SUB>2555</SUB>> ]
-"13099" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2556</SUB>> ]
-"13009" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2539</SUB>> ]
-"13011" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2539</SUB>> ]
-"13062" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2546</SUB>> ]
-"13084" [label = <(FIELD_IDENTIFIER,UnregisterNative,UnregisterNative)<SUB>2549</SUB>> ]
-"13100" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2556</SUB>> ]
-"13103" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2556</SUB>> ]
-"13064" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2546</SUB>> ]
-"12993" [label = <(METHOD,UnregisterNatives)<SUB>2538</SUB>> ]
-"13108" [label = <(METHOD_RETURN,jint)<SUB>2538</SUB>> ]
-  "12997" -> "13003" 
-  "12997" -> "13017" 
-  "13017" -> "13025" 
-  "13019" -> "13039" 
-  "13036" -> "13051" 
-  "13051" -> "13064" 
-  "13055" -> "13079" 
-  "13106" -> "13108" 
-  "13020" -> "13031" 
-  "13027" -> "13019" 
-  "13037" -> "13036" 
-  "13057" -> "13055" 
-  "13088" -> "13095" 
-  "13088" -> "13106" 
-  "13021" -> "13020" 
-  "13028" -> "13027" 
-  "13038" -> "13044" 
-  "13042" -> "13037" 
-  "13058" -> "13057" 
-  "13092" -> "13106" 
-  "13002" -> "13009" 
-  "13002" -> "13017" 
-  "13023" -> "13021" 
-  "13029" -> "13034" 
-  "13032" -> "13028" 
-  "13039" -> "13038" 
-  "13043" -> "13042" 
-  "13059" -> "13066" 
-  "13066" -> "13058" 
-  "13076" -> "13079" 
-  "13076" -> "13084" 
-  "13076" -> "13088" 
-  "13093" -> "13092" 
-  "13003" -> "13002" 
-  "13007" -> "13014" 
-  "13014" -> "13108" 
-  "13025" -> "13023" 
+"12994" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2537</SUB>> ]
+"13014" [label = <(soa,soa(env))<SUB>2538</SUB>> ]
+"13016" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2539</SUB>> ]
+"13033" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c) &lt;&lt; &quot;]&quot;)<SUB>2541</SUB>> ]
+"13048" [label = <(&lt;operator&gt;.assignment,unregistered_count = 0)<SUB>2543</SUB>> ]
+"13052" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2544</SUB>> ]
+"13103" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2556</SUB>> ]
+"13017" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>2539</SUB>> ]
+"13024" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2539</SUB>> ]
+"13034" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c))<SUB>2541</SUB>> ]
+"13054" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2544</SUB>> ]
+"13085" [label = <(&lt;operator&gt;.equals,unregistered_count == 0)<SUB>2552</SUB>> ]
+"13018" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2539</SUB>> ]
+"13025" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2539</SUB>> ]
+"13035" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot;)<SUB>2541</SUB>> ]
+"13039" [label = <(mirror::Class::PrettyClass,mirror::Class::PrettyClass(c))<SUB>2541</SUB>> ]
+"13055" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>2544</SUB>> ]
+"13089" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c) &lt;&lt; &quot;' that contains no native methods&quot;)<SUB>2553</SUB>> ]
+"12999" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2537</SUB>> ]
+"13020" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2539</SUB>> ]
+"13026" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2539</SUB>> ]
+"13029" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2539</SUB>> ]
+"13036" [label = <(VLOG,VLOG(jni))<SUB>2541</SUB>> ]
+"13040" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyClass)<SUB>2541</SUB>> ]
+"13056" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2544</SUB>> ]
+"13063" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>2544</SUB>> ]
+"13073" [label = <(IsNative,m.IsNative())<SUB>2546</SUB>> ]
+"13090" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c))<SUB>2553</SUB>> ]
+"13000" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2537</SUB>> ]
+"13004" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>2537</SUB>> ]
+"13011" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2537</SUB>> ]
+"13022" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2539</SUB>> ]
+"13028" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2539</SUB>> ]
+"13031" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2539</SUB>> ]
+"13041" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2541</SUB>> ]
+"13044" [label = <(FIELD_IDENTIFIER,PrettyClass,PrettyClass)<SUB>2541</SUB>> ]
+"13057" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2544</SUB>> ]
+"13074" [label = <(&lt;operator&gt;.fieldAccess,m.IsNative)<SUB>2546</SUB>> ]
+"13078" [label = <(UnregisterNative,m.UnregisterNative())<SUB>2547</SUB>> ]
+"13082" [label = <(&lt;operator&gt;.postIncrement,unregistered_count++)<SUB>2548</SUB>> ]
+"13091" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;)<SUB>2553</SUB>> ]
+"13095" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(c))<SUB>2554</SUB>> ]
+"13005" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2537</SUB>> ]
+"13058" [label = <(Runtime::Current,Runtime::Current())<SUB>2544</SUB>> ]
+"13062" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2544</SUB>> ]
+"13076" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2546</SUB>> ]
+"13079" [label = <(&lt;operator&gt;.fieldAccess,m.UnregisterNative)<SUB>2547</SUB>> ]
+"13092" [label = <(LOG,LOG(WARNING))<SUB>2553</SUB>> ]
+"13096" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2554</SUB>> ]
+"13006" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2537</SUB>> ]
+"13008" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2537</SUB>> ]
+"13059" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2544</SUB>> ]
+"13081" [label = <(FIELD_IDENTIFIER,UnregisterNative,UnregisterNative)<SUB>2547</SUB>> ]
+"13097" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2554</SUB>> ]
+"13100" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2554</SUB>> ]
+"13061" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2544</SUB>> ]
+"12990" [label = <(METHOD,UnregisterNatives)<SUB>2536</SUB>> ]
+"13105" [label = <(METHOD_RETURN,jint)<SUB>2536</SUB>> ]
+  "12994" -> "13000" 
+  "12994" -> "13014" 
+  "13014" -> "13022" 
+  "13016" -> "13036" 
+  "13033" -> "13048" 
+  "13048" -> "13061" 
+  "13052" -> "13076" 
+  "13103" -> "13105" 
+  "13017" -> "13028" 
+  "13024" -> "13016" 
+  "13034" -> "13033" 
+  "13054" -> "13052" 
+  "13085" -> "13092" 
+  "13085" -> "13103" 
+  "13018" -> "13017" 
+  "13025" -> "13024" 
+  "13035" -> "13041" 
+  "13039" -> "13034" 
+  "13055" -> "13054" 
+  "13089" -> "13103" 
+  "12999" -> "13006" 
+  "12999" -> "13014" 
+  "13020" -> "13018" 
+  "13026" -> "13031" 
+  "13029" -> "13025" 
+  "13036" -> "13035" 
+  "13040" -> "13039" 
+  "13056" -> "13063" 
+  "13063" -> "13055" 
+  "13073" -> "13076" 
+  "13073" -> "13081" 
+  "13073" -> "13085" 
+  "13090" -> "13089" 
+  "13000" -> "12999" 
+  "13004" -> "13011" 
+  "13011" -> "13105" 
+  "13022" -> "13020" 
+  "13028" -> "13026" 
   "13031" -> "13029" 
-  "13034" -> "13032" 
-  "13044" -> "13047" 
-  "13047" -> "13043" 
-  "13060" -> "13059" 
-  "13077" -> "13076" 
-  "13081" -> "13085" 
-  "13085" -> "13079" 
-  "13085" -> "13088" 
-  "13094" -> "13100" 
-  "13098" -> "13093" 
-  "13008" -> "13007" 
-  "13061" -> "13065" 
-  "13065" -> "13060" 
-  "13079" -> "13077" 
-  "13082" -> "13081" 
-  "13095" -> "13094" 
-  "13099" -> "13098" 
-  "13009" -> "13011" 
-  "13011" -> "13008" 
-  "13062" -> "13061" 
-  "13084" -> "13082" 
-  "13100" -> "13103" 
-  "13103" -> "13099" 
-  "13064" -> "13062" 
-  "12993" -> "12997" 
+  "13041" -> "13044" 
+  "13044" -> "13040" 
+  "13057" -> "13056" 
+  "13074" -> "13073" 
+  "13078" -> "13082" 
+  "13082" -> "13076" 
+  "13082" -> "13085" 
+  "13091" -> "13097" 
+  "13095" -> "13090" 
+  "13005" -> "13004" 
+  "13058" -> "13062" 
+  "13062" -> "13057" 
+  "13076" -> "13074" 
+  "13079" -> "13078" 
+  "13092" -> "13091" 
+  "13096" -> "13095" 
+  "13006" -> "13008" 
+  "13008" -> "13005" 
+  "13059" -> "13058" 
+  "13081" -> "13079" 
+  "13097" -> "13100" 
+  "13100" -> "13096" 
+  "13061" -> "13059" 
+  "12990" -> "12994" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/247-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/247-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/247-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/247-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,5 +1,5 @@
 digraph "MonitorEnter" {  
-"13110" [label = <(METHOD,MonitorEnter)<SUB>2561</SUB>> ]
-"13114" [label = <(METHOD_RETURN,jint)<SUB>2561</SUB>> ]
-  "13110" -> "13114" 
+"13107" [label = <(METHOD,MonitorEnter)<SUB>2559</SUB>> ]
+"13111" [label = <(METHOD_RETURN,jint)<SUB>2559</SUB>> ]
+  "13107" -> "13111" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/248-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/248-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/248-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/248-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,5 +1,5 @@
 digraph "MonitorExit" {  
-"13118" [label = <(METHOD,MonitorExit)<SUB>2575</SUB>> ]
-"13122" [label = <(METHOD_RETURN,jint)<SUB>2575</SUB>> ]
-  "13118" -> "13122" 
+"13115" [label = <(METHOD,MonitorExit)<SUB>2573</SUB>> ]
+"13119" [label = <(METHOD_RETURN,jint)<SUB>2573</SUB>> ]
+  "13115" -> "13119" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/249-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/249-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/249-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/249-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,56 +1,56 @@
 digraph "GetJavaVM" {  
-"13130" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2591</SUB>> ]
-"13150" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>2592</SUB>> ]
-"13174" [label = <(RETURN,return (*vm != nullptr) ? JNI_OK : JNI_ERR;,return (*vm != nullptr) ? JNI_OK : JNI_ERR;)<SUB>2598</SUB>> ]
-"13152" [label = <(Runtime::Current,Runtime::Current())<SUB>2592</SUB>> ]
-"13157" [label = <(&lt;operator&gt;.notEquals,runtime != nullptr)<SUB>2593</SUB>> ]
-"13175" [label = <(&lt;operator&gt;.conditional,(*vm != nullptr) ? JNI_OK : JNI_ERR)<SUB>2598</SUB>> ]
-"13153" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2592</SUB>> ]
-"13161" [label = <(&lt;operator&gt;.assignment,*vm = runtime-&gt;GetJavaVM())<SUB>2594</SUB>> ]
-"13176" [label = <(&lt;operator&gt;.notEquals,*vm != nullptr)<SUB>2598</SUB>> ]
-"13135" [label = <(UNLIKELY,UNLIKELY((vm) == nullptr))<SUB>2591</SUB>> ]
-"13155" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2592</SUB>> ]
-"13162" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2594</SUB>> ]
-"13164" [label = <(GetJavaVM,runtime-&gt;GetJavaVM())<SUB>2594</SUB>> ]
-"13170" [label = <(&lt;operator&gt;.assignment,*vm = nullptr)<SUB>2596</SUB>> ]
-"13177" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2598</SUB>> ]
-"13136" [label = <(&lt;operator&gt;.equals,(vm) == nullptr)<SUB>2591</SUB>> ]
-"13140" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;vm == null&quot;))<SUB>2591</SUB>> ]
-"13147" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2591</SUB>> ]
-"13165" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetJavaVM)<SUB>2594</SUB>> ]
-"13171" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2596</SUB>> ]
-"13141" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2591</SUB>> ]
-"13167" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>2594</SUB>> ]
-"13142" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2591</SUB>> ]
-"13144" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2591</SUB>> ]
-"13126" [label = <(METHOD,GetJavaVM)<SUB>2590</SUB>> ]
-"13182" [label = <(METHOD_RETURN,jint)<SUB>2590</SUB>> ]
-  "13130" -> "13136" 
-  "13130" -> "13155" 
-  "13150" -> "13157" 
-  "13174" -> "13182" 
+"13127" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2589</SUB>> ]
+"13147" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>2590</SUB>> ]
+"13171" [label = <(RETURN,return (*vm != nullptr) ? JNI_OK : JNI_ERR;,return (*vm != nullptr) ? JNI_OK : JNI_ERR;)<SUB>2596</SUB>> ]
+"13149" [label = <(Runtime::Current,Runtime::Current())<SUB>2590</SUB>> ]
+"13154" [label = <(&lt;operator&gt;.notEquals,runtime != nullptr)<SUB>2591</SUB>> ]
+"13172" [label = <(&lt;operator&gt;.conditional,(*vm != nullptr) ? JNI_OK : JNI_ERR)<SUB>2596</SUB>> ]
+"13150" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2590</SUB>> ]
+"13158" [label = <(&lt;operator&gt;.assignment,*vm = runtime-&gt;GetJavaVM())<SUB>2592</SUB>> ]
+"13173" [label = <(&lt;operator&gt;.notEquals,*vm != nullptr)<SUB>2596</SUB>> ]
+"13132" [label = <(UNLIKELY,UNLIKELY((vm) == nullptr))<SUB>2589</SUB>> ]
+"13152" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2590</SUB>> ]
+"13159" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2592</SUB>> ]
+"13161" [label = <(GetJavaVM,runtime-&gt;GetJavaVM())<SUB>2592</SUB>> ]
+"13167" [label = <(&lt;operator&gt;.assignment,*vm = nullptr)<SUB>2594</SUB>> ]
+"13174" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2596</SUB>> ]
+"13133" [label = <(&lt;operator&gt;.equals,(vm) == nullptr)<SUB>2589</SUB>> ]
+"13137" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;vm == null&quot;))<SUB>2589</SUB>> ]
+"13144" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2589</SUB>> ]
+"13162" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetJavaVM)<SUB>2592</SUB>> ]
+"13168" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2594</SUB>> ]
+"13138" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2589</SUB>> ]
+"13164" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>2592</SUB>> ]
+"13139" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2589</SUB>> ]
+"13141" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2589</SUB>> ]
+"13123" [label = <(METHOD,GetJavaVM)<SUB>2588</SUB>> ]
+"13179" [label = <(METHOD_RETURN,jint)<SUB>2588</SUB>> ]
+  "13127" -> "13133" 
+  "13127" -> "13152" 
+  "13147" -> "13154" 
+  "13171" -> "13179" 
+  "13149" -> "13147" 
+  "13154" -> "13159" 
+  "13154" -> "13168" 
+  "13172" -> "13171" 
+  "13150" -> "13149" 
+  "13158" -> "13174" 
+  "13173" -> "13172" 
+  "13132" -> "13139" 
+  "13132" -> "13152" 
   "13152" -> "13150" 
-  "13157" -> "13162" 
-  "13157" -> "13171" 
-  "13175" -> "13174" 
-  "13153" -> "13152" 
-  "13161" -> "13177" 
-  "13176" -> "13175" 
-  "13135" -> "13142" 
-  "13135" -> "13155" 
-  "13155" -> "13153" 
-  "13162" -> "13167" 
-  "13164" -> "13161" 
-  "13170" -> "13177" 
-  "13177" -> "13176" 
-  "13136" -> "13135" 
-  "13140" -> "13147" 
-  "13147" -> "13182" 
-  "13165" -> "13164" 
-  "13171" -> "13170" 
-  "13141" -> "13140" 
-  "13167" -> "13165" 
-  "13142" -> "13144" 
-  "13144" -> "13141" 
-  "13126" -> "13130" 
+  "13159" -> "13164" 
+  "13161" -> "13158" 
+  "13167" -> "13174" 
+  "13174" -> "13173" 
+  "13133" -> "13132" 
+  "13137" -> "13144" 
+  "13144" -> "13179" 
+  "13162" -> "13161" 
+  "13168" -> "13167" 
+  "13138" -> "13137" 
+  "13164" -> "13162" 
+  "13139" -> "13141" 
+  "13141" -> "13138" 
+  "13123" -> "13127" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/25-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/25-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/25-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/25-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,7 +1,7 @@
 digraph "GetVersion" {  
-"583" [label = <(RETURN,return JNI_VERSION_1_6;,return JNI_VERSION_1_6;)<SUB>531</SUB>> ]
-"580" [label = <(METHOD,GetVersion)<SUB>530</SUB>> ]
-"585" [label = <(METHOD_RETURN,jint)<SUB>530</SUB>> ]
+"583" [label = <(RETURN,return JNI_VERSION_1_6;,return JNI_VERSION_1_6;)<SUB>530</SUB>> ]
+"580" [label = <(METHOD,GetVersion)<SUB>529</SUB>> ]
+"585" [label = <(METHOD_RETURN,jint)<SUB>529</SUB>> ]
   "583" -> "585" 
   "580" -> "583" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/250-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/250-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/250-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/250-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,83 +1,83 @@
 digraph "NewDirectByteBuffer" {  
-"13224" [label = <(&lt;operator&gt;.assignment,address_arg = reinterpret_cast&lt;jlong&gt;(address))<SUB>2620</SUB>> ]
-"13230" [label = <(&lt;operator&gt;.assignment,capacity_arg = static_cast&lt;jint&gt;(capacity))<SUB>2621</SUB>> ]
-"13236" [label = <(&lt;operator&gt;.assignment,result = env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2623</SUB>> ]
-"13250" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;)<SUB>2626</SUB>> ]
-"13190" [label = <(&lt;operator&gt;.lessThan,capacity &lt; 0)<SUB>2602</SUB>> ]
-"13200" [label = <(&lt;operator&gt;.logicalAnd,address == nullptr &amp;&amp; capacity != 0)<SUB>2607</SUB>> ]
-"13214" [label = <(&lt;operator&gt;.greaterThan,capacity &gt; INT_MAX)<SUB>2614</SUB>> ]
-"13226" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;jlong&gt;(address))<SUB>2620</SUB>> ]
-"13232" [label = <(&lt;operator&gt;.cast,static_cast&lt;jint&gt;(capacity))<SUB>2621</SUB>> ]
-"13238" [label = <(NewObject,env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2623</SUB>> ]
-"13251" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result)<SUB>2626</SUB>> ]
-"13195" [label = <(UNKNOWN,),))<SUB>2603</SUB>> ]
-"13196" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);)<SUB>2603</SUB>> ]
-"13197" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2605</SUB>> ]
-"13201" [label = <(&lt;operator&gt;.equals,address == nullptr)<SUB>2607</SUB>> ]
-"13204" [label = <(&lt;operator&gt;.notEquals,capacity != 0)<SUB>2607</SUB>> ]
-"13209" [label = <(UNKNOWN,),))<SUB>2608</SUB>> ]
-"13210" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);)<SUB>2608</SUB>> ]
-"13211" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2610</SUB>> ]
-"13219" [label = <(UNKNOWN,),))<SUB>2615</SUB>> ]
-"13220" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);)<SUB>2615</SUB>> ]
-"13221" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2618</SUB>> ]
-"13227" [label = <(UNKNOWN,jlong,jlong)<SUB>2620</SUB>> ]
-"13233" [label = <(UNKNOWN,jint,jint)<SUB>2621</SUB>> ]
-"13239" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;NewObject)<SUB>2623</SUB>> ]
-"13242" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer)<SUB>2623</SUB>> ]
-"13245" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_init)<SUB>2624</SUB>> ]
-"13252" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>2626</SUB>> ]
-"13241" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2623</SUB>> ]
-"13244" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer,java_nio_DirectByteBuffer)<SUB>2623</SUB>> ]
-"13247" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_init,java_nio_DirectByteBuffer_init)<SUB>2624</SUB>> ]
-"13253" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>2626</SUB>> ]
-"13254" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>2626</SUB>> ]
-"13259" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>2626</SUB>> ]
-"13255" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>2626</SUB>> ]
-"13258" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>2626</SUB>> ]
-"13256" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>2626</SUB>> ]
-"13184" [label = <(METHOD,NewDirectByteBuffer)<SUB>2601</SUB>> ]
-"13262" [label = <(METHOD_RETURN,jobject)<SUB>2601</SUB>> ]
-  "13224" -> "13233" 
-  "13230" -> "13241" 
-  "13236" -> "13256" 
-  "13250" -> "13262" 
-  "13190" -> "13195" 
-  "13190" -> "13201" 
-  "13200" -> "13209" 
-  "13200" -> "13214" 
-  "13214" -> "13219" 
-  "13214" -> "13227" 
-  "13226" -> "13224" 
-  "13232" -> "13230" 
-  "13238" -> "13236" 
-  "13251" -> "13250" 
-  "13195" -> "13196" 
-  "13196" -> "13197" 
-  "13197" -> "13262" 
-  "13201" -> "13200" 
-  "13201" -> "13204" 
-  "13204" -> "13200" 
-  "13209" -> "13210" 
-  "13210" -> "13211" 
-  "13211" -> "13262" 
-  "13219" -> "13220" 
-  "13220" -> "13221" 
-  "13221" -> "13262" 
-  "13227" -> "13226" 
-  "13233" -> "13232" 
+"13221" [label = <(&lt;operator&gt;.assignment,address_arg = reinterpret_cast&lt;jlong&gt;(address))<SUB>2618</SUB>> ]
+"13227" [label = <(&lt;operator&gt;.assignment,capacity_arg = static_cast&lt;jint&gt;(capacity))<SUB>2619</SUB>> ]
+"13233" [label = <(&lt;operator&gt;.assignment,result = env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2621</SUB>> ]
+"13247" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;)<SUB>2624</SUB>> ]
+"13187" [label = <(&lt;operator&gt;.lessThan,capacity &lt; 0)<SUB>2600</SUB>> ]
+"13197" [label = <(&lt;operator&gt;.logicalAnd,address == nullptr &amp;&amp; capacity != 0)<SUB>2605</SUB>> ]
+"13211" [label = <(&lt;operator&gt;.greaterThan,capacity &gt; INT_MAX)<SUB>2612</SUB>> ]
+"13223" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;jlong&gt;(address))<SUB>2618</SUB>> ]
+"13229" [label = <(&lt;operator&gt;.cast,static_cast&lt;jint&gt;(capacity))<SUB>2619</SUB>> ]
+"13235" [label = <(NewObject,env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2621</SUB>> ]
+"13248" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result)<SUB>2624</SUB>> ]
+"13192" [label = <(UNKNOWN,),))<SUB>2601</SUB>> ]
+"13193" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);)<SUB>2601</SUB>> ]
+"13194" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2603</SUB>> ]
+"13198" [label = <(&lt;operator&gt;.equals,address == nullptr)<SUB>2605</SUB>> ]
+"13201" [label = <(&lt;operator&gt;.notEquals,capacity != 0)<SUB>2605</SUB>> ]
+"13206" [label = <(UNKNOWN,),))<SUB>2606</SUB>> ]
+"13207" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);)<SUB>2606</SUB>> ]
+"13208" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2608</SUB>> ]
+"13216" [label = <(UNKNOWN,),))<SUB>2613</SUB>> ]
+"13217" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);)<SUB>2613</SUB>> ]
+"13218" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2616</SUB>> ]
+"13224" [label = <(UNKNOWN,jlong,jlong)<SUB>2618</SUB>> ]
+"13230" [label = <(UNKNOWN,jint,jint)<SUB>2619</SUB>> ]
+"13236" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;NewObject)<SUB>2621</SUB>> ]
+"13239" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer)<SUB>2621</SUB>> ]
+"13242" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_init)<SUB>2622</SUB>> ]
+"13249" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>2624</SUB>> ]
+"13238" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2621</SUB>> ]
+"13241" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer,java_nio_DirectByteBuffer)<SUB>2621</SUB>> ]
+"13244" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_init,java_nio_DirectByteBuffer_init)<SUB>2622</SUB>> ]
+"13250" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>2624</SUB>> ]
+"13251" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>2624</SUB>> ]
+"13256" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>2624</SUB>> ]
+"13252" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>2624</SUB>> ]
+"13255" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>2624</SUB>> ]
+"13253" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>2624</SUB>> ]
+"13181" [label = <(METHOD,NewDirectByteBuffer)<SUB>2599</SUB>> ]
+"13259" [label = <(METHOD_RETURN,jobject)<SUB>2599</SUB>> ]
+  "13221" -> "13230" 
+  "13227" -> "13238" 
+  "13233" -> "13253" 
+  "13247" -> "13259" 
+  "13187" -> "13192" 
+  "13187" -> "13198" 
+  "13197" -> "13206" 
+  "13197" -> "13211" 
+  "13211" -> "13216" 
+  "13211" -> "13224" 
+  "13223" -> "13221" 
+  "13229" -> "13227" 
+  "13235" -> "13233" 
+  "13248" -> "13247" 
+  "13192" -> "13193" 
+  "13193" -> "13194" 
+  "13194" -> "13259" 
+  "13198" -> "13197" 
+  "13198" -> "13201" 
+  "13201" -> "13197" 
+  "13206" -> "13207" 
+  "13207" -> "13208" 
+  "13208" -> "13259" 
+  "13216" -> "13217" 
+  "13217" -> "13218" 
+  "13218" -> "13259" 
+  "13224" -> "13223" 
+  "13230" -> "13229" 
+  "13236" -> "13241" 
   "13239" -> "13244" 
-  "13242" -> "13247" 
-  "13245" -> "13238" 
-  "13252" -> "13251" 
+  "13242" -> "13235" 
+  "13249" -> "13248" 
+  "13238" -> "13236" 
   "13241" -> "13239" 
   "13244" -> "13242" 
-  "13247" -> "13245" 
+  "13250" -> "13249" 
+  "13251" -> "13256" 
+  "13256" -> "13250" 
+  "13252" -> "13255" 
+  "13255" -> "13251" 
   "13253" -> "13252" 
-  "13254" -> "13259" 
-  "13259" -> "13253" 
-  "13255" -> "13258" 
-  "13258" -> "13254" 
-  "13256" -> "13255" 
-  "13184" -> "13190" 
+  "13181" -> "13187" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/251-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/251-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/251-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/251-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,21 +1,21 @@
 digraph "GetDirectBufferAddress" {  
-"13268" [label = <(RETURN,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));)<SUB>2630</SUB>> ]
-"13269" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)))<SUB>2630</SUB>> ]
-"13270" [label = <(UNKNOWN,void*,void*)<SUB>2630</SUB>> ]
-"13271" [label = <(GetLongField,env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress))<SUB>2630</SUB>> ]
-"13272" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetLongField)<SUB>2630</SUB>> ]
-"13276" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2631</SUB>> ]
-"13274" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2630</SUB>> ]
-"13278" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_effectiveDirectAddress,java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2631</SUB>> ]
-"13264" [label = <(METHOD,GetDirectBufferAddress)<SUB>2629</SUB>> ]
-"13279" [label = <(METHOD_RETURN,void*)<SUB>2629</SUB>> ]
-  "13268" -> "13279" 
-  "13269" -> "13268" 
-  "13270" -> "13274" 
+"13265" [label = <(RETURN,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));)<SUB>2628</SUB>> ]
+"13266" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)))<SUB>2628</SUB>> ]
+"13267" [label = <(UNKNOWN,void*,void*)<SUB>2628</SUB>> ]
+"13268" [label = <(GetLongField,env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress))<SUB>2628</SUB>> ]
+"13269" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetLongField)<SUB>2628</SUB>> ]
+"13273" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2629</SUB>> ]
+"13271" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2628</SUB>> ]
+"13275" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_effectiveDirectAddress,java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2629</SUB>> ]
+"13261" [label = <(METHOD,GetDirectBufferAddress)<SUB>2627</SUB>> ]
+"13276" [label = <(METHOD_RETURN,void*)<SUB>2627</SUB>> ]
+  "13265" -> "13276" 
+  "13266" -> "13265" 
+  "13267" -> "13271" 
+  "13268" -> "13266" 
+  "13269" -> "13275" 
+  "13273" -> "13268" 
   "13271" -> "13269" 
-  "13272" -> "13278" 
-  "13276" -> "13271" 
-  "13274" -> "13272" 
-  "13278" -> "13276" 
-  "13264" -> "13270" 
+  "13275" -> "13273" 
+  "13261" -> "13267" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/252-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/252-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/252-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/252-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,21 +1,21 @@
 digraph "GetDirectBufferCapacity" {  
-"13285" [label = <(RETURN,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));)<SUB>2635</SUB>> ]
-"13286" [label = <(&lt;operator&gt;.cast,static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity)))<SUB>2635</SUB>> ]
-"13287" [label = <(UNKNOWN,jlong,jlong)<SUB>2635</SUB>> ]
-"13288" [label = <(GetIntField,env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity))<SUB>2635</SUB>> ]
-"13289" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetIntField)<SUB>2635</SUB>> ]
-"13293" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_capacity)<SUB>2636</SUB>> ]
-"13291" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2635</SUB>> ]
-"13295" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_capacity,java_nio_DirectByteBuffer_capacity)<SUB>2636</SUB>> ]
-"13281" [label = <(METHOD,GetDirectBufferCapacity)<SUB>2634</SUB>> ]
-"13296" [label = <(METHOD_RETURN,jlong)<SUB>2634</SUB>> ]
-  "13285" -> "13296" 
-  "13286" -> "13285" 
-  "13287" -> "13291" 
+"13282" [label = <(RETURN,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));)<SUB>2633</SUB>> ]
+"13283" [label = <(&lt;operator&gt;.cast,static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity)))<SUB>2633</SUB>> ]
+"13284" [label = <(UNKNOWN,jlong,jlong)<SUB>2633</SUB>> ]
+"13285" [label = <(GetIntField,env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity))<SUB>2633</SUB>> ]
+"13286" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetIntField)<SUB>2633</SUB>> ]
+"13290" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_capacity)<SUB>2634</SUB>> ]
+"13288" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2633</SUB>> ]
+"13292" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_capacity,java_nio_DirectByteBuffer_capacity)<SUB>2634</SUB>> ]
+"13278" [label = <(METHOD,GetDirectBufferCapacity)<SUB>2632</SUB>> ]
+"13293" [label = <(METHOD_RETURN,jlong)<SUB>2632</SUB>> ]
+  "13282" -> "13293" 
+  "13283" -> "13282" 
+  "13284" -> "13288" 
+  "13285" -> "13283" 
+  "13286" -> "13292" 
+  "13290" -> "13285" 
   "13288" -> "13286" 
-  "13289" -> "13295" 
-  "13293" -> "13288" 
-  "13291" -> "13289" 
-  "13295" -> "13293" 
-  "13281" -> "13287" 
+  "13292" -> "13290" 
+  "13278" -> "13284" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/253-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/253-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/253-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/253-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureLocalCapacityInternal" {  
-"13299" [label = <(METHOD,EnsureLocalCapacityInternal)<SUB>2663</SUB>> ]
-"13304" [label = <(METHOD_RETURN,jint)<SUB>2663</SUB>> ]
-  "13299" -> "13304" 
+"13296" [label = <(METHOD,EnsureLocalCapacityInternal)<SUB>2661</SUB>> ]
+"13301" [label = <(METHOD_RETURN,jint)<SUB>2661</SUB>> ]
+  "13296" -> "13301" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/254-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/254-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/254-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/254-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,50 +1,50 @@
 digraph "NewPrimitiveArray" {  
-"13317" [label = <(soa,soa(env))<SUB>2682</SUB>> ]
-"13338" [label = <(&lt;operator&gt;.assignment,* result = ArtT::Alloc(soa.Self(), length))<SUB>2687</SUB>> ]
-"13349" [label = <(RETURN,return soa.AddLocalReference&lt;JniT&gt;(result);,return soa.AddLocalReference&lt;JniT&gt;(result);)<SUB>2688</SUB>> ]
-"13320" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2683</SUB>> ]
-"13340" [label = <(ArtT::Alloc,ArtT::Alloc(soa.Self(), length))<SUB>2687</SUB>> ]
-"13350" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;JniT&gt;(result))<SUB>2688</SUB>> ]
-"13321" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2683</SUB>> ]
-"13325" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewPrimitiveArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2684</SUB>> ]
-"13335" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2685</SUB>> ]
-"13341" [label = <(&lt;operator&gt;.fieldAccess,ArtT::Alloc)<SUB>2687</SUB>> ]
-"13344" [label = <(Self,soa.Self())<SUB>2687</SUB>> ]
-"13351" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;JniT)<SUB>2688</SUB>> ]
-"13326" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2684</SUB>> ]
-"13343" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2687</SUB>> ]
-"13345" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2687</SUB>> ]
-"13352" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2688</SUB>> ]
-"13327" [label = <(Vm,soa.Vm())<SUB>2684</SUB>> ]
-"13331" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2684</SUB>> ]
-"13347" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2687</SUB>> ]
-"13354" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2688</SUB>> ]
-"13328" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2684</SUB>> ]
-"13330" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2684</SUB>> ]
-"13312" [label = <(METHOD,NewPrimitiveArray)<SUB>2681</SUB>> ]
-"13357" [label = <(METHOD_RETURN,JniT)<SUB>2681</SUB>> ]
-  "13317" -> "13321" 
-  "13338" -> "13354" 
-  "13349" -> "13357" 
-  "13320" -> "13330" 
-  "13320" -> "13343" 
+"13314" [label = <(soa,soa(env))<SUB>2680</SUB>> ]
+"13335" [label = <(&lt;operator&gt;.assignment,* result = ArtT::Alloc(soa.Self(), length))<SUB>2685</SUB>> ]
+"13346" [label = <(RETURN,return soa.AddLocalReference&lt;JniT&gt;(result);,return soa.AddLocalReference&lt;JniT&gt;(result);)<SUB>2686</SUB>> ]
+"13317" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2681</SUB>> ]
+"13337" [label = <(ArtT::Alloc,ArtT::Alloc(soa.Self(), length))<SUB>2685</SUB>> ]
+"13347" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;JniT&gt;(result))<SUB>2686</SUB>> ]
+"13318" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2681</SUB>> ]
+"13322" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewPrimitiveArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2682</SUB>> ]
+"13332" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2683</SUB>> ]
+"13338" [label = <(&lt;operator&gt;.fieldAccess,ArtT::Alloc)<SUB>2685</SUB>> ]
+"13341" [label = <(Self,soa.Self())<SUB>2685</SUB>> ]
+"13348" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;JniT)<SUB>2686</SUB>> ]
+"13323" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2682</SUB>> ]
+"13340" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2685</SUB>> ]
+"13342" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2685</SUB>> ]
+"13349" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2686</SUB>> ]
+"13324" [label = <(Vm,soa.Vm())<SUB>2682</SUB>> ]
+"13328" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2682</SUB>> ]
+"13344" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2685</SUB>> ]
+"13351" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2686</SUB>> ]
+"13325" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2682</SUB>> ]
+"13327" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2682</SUB>> ]
+"13309" [label = <(METHOD,NewPrimitiveArray)<SUB>2679</SUB>> ]
+"13354" [label = <(METHOD_RETURN,JniT)<SUB>2679</SUB>> ]
+  "13314" -> "13318" 
+  "13335" -> "13351" 
+  "13346" -> "13354" 
+  "13317" -> "13327" 
+  "13317" -> "13340" 
+  "13337" -> "13335" 
+  "13347" -> "13346" 
+  "13318" -> "13317" 
+  "13322" -> "13332" 
+  "13332" -> "13354" 
+  "13338" -> "13344" 
+  "13341" -> "13337" 
+  "13348" -> "13347" 
+  "13323" -> "13322" 
   "13340" -> "13338" 
-  "13350" -> "13349" 
-  "13321" -> "13320" 
-  "13325" -> "13335" 
-  "13335" -> "13357" 
-  "13341" -> "13347" 
-  "13344" -> "13340" 
-  "13351" -> "13350" 
-  "13326" -> "13325" 
-  "13343" -> "13341" 
-  "13345" -> "13344" 
-  "13352" -> "13351" 
-  "13327" -> "13331" 
-  "13331" -> "13326" 
-  "13347" -> "13345" 
-  "13354" -> "13352" 
-  "13328" -> "13327" 
-  "13330" -> "13328" 
-  "13312" -> "13317" 
+  "13342" -> "13341" 
+  "13349" -> "13348" 
+  "13324" -> "13328" 
+  "13328" -> "13323" 
+  "13344" -> "13342" 
+  "13351" -> "13349" 
+  "13325" -> "13324" 
+  "13327" -> "13325" 
+  "13309" -> "13314" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/255-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/255-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/255-cfg.dot	2023-06-07 19:34:35.197389611 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/255-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,5 +1,5 @@
 digraph "DecodeAndCheckArrayType" {  
-"13359" [label = <(METHOD,DecodeAndCheckArrayType)<SUB>2692</SUB>> ]
-"13365" [label = <(METHOD_RETURN,ArtArrayT*)<SUB>2692</SUB>> ]
-  "13359" -> "13365" 
+"13356" [label = <(METHOD,DecodeAndCheckArrayType)<SUB>2690</SUB>> ]
+"13362" [label = <(METHOD_RETURN,ArtArrayT*)<SUB>2690</SUB>> ]
+  "13356" -> "13362" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/256-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/256-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/256-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/256-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,113 +1,113 @@
 digraph "GetPrimitiveArray" {  
-"13378" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2711</SUB>> ]
-"13397" [label = <(soa,soa(env))<SUB>2712</SUB>> ]
-"13400" [label = <(&lt;operator&gt;.assignment,* array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetArrayElements&quot;,\012 &quot;get&quot;))<SUB>2713</SUB>> ]
-"13402" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetArrayElements&quot;,\012 &quot;get&quot;))<SUB>2713</SUB>> ]
-"13408" [label = <(UNLIKELY,UNLIKELY(array == nullptr))<SUB>2716</SUB>> ]
-"13416" [label = <(IsMovableObject,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject(array))<SUB>2720</SUB>> ]
-"13409" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2716</SUB>> ]
-"13413" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2717</SUB>> ]
-"13417" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject)<SUB>2720</SUB>> ]
-"13438" [label = <(&lt;operator&gt;.assignment,component_size = sizeof(ElementT))<SUB>2724</SUB>> ]
-"13443" [label = <(&lt;operator&gt;.assignment,size = array-&gt;GetLength() * component_size)<SUB>2725</SUB>> ]
-"13452" [label = <(&lt;operator&gt;.assignment,* data = new uint64_t[RoundUp(size, 8) / 8])<SUB>2726</SUB>> ]
-"13456" [label = <(memcpy,memcpy(data, array-&gt;GetData(), size))<SUB>2727</SUB>> ]
-"13463" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(data);,return reinterpret_cast&lt;ElementT*&gt;(data);)<SUB>2728</SUB>> ]
-"13382" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2711</SUB>> ]
-"13418" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2720</SUB>> ]
-"13425" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2720</SUB>> ]
-"13429" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2721</SUB>> ]
-"13440" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2724</SUB>> ]
-"13445" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2725</SUB>> ]
-"13454" [label = <(&lt;operator&gt;.new,new uint64_t[RoundUp(size, 8) / 8])<SUB>2726</SUB>> ]
-"13458" [label = <(GetData,array-&gt;GetData())<SUB>2727</SUB>> ]
-"13464" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(data))<SUB>2728</SUB>> ]
-"13478" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());)<SUB>2733</SUB>> ]
-"13383" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2711</SUB>> ]
-"13387" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2711</SUB>> ]
-"13394" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2711</SUB>> ]
-"13419" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2720</SUB>> ]
-"13433" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2722</SUB>> ]
-"13446" [label = <(GetLength,array-&gt;GetLength())<SUB>2725</SUB>> ]
-"13459" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2727</SUB>> ]
-"13465" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2728</SUB>> ]
-"13470" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2730</SUB>> ]
-"13479" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData()))<SUB>2733</SUB>> ]
-"13388" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2711</SUB>> ]
-"13420" [label = <(Runtime::Current,Runtime::Current())<SUB>2720</SUB>> ]
-"13424" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2720</SUB>> ]
-"13434" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2722</SUB>> ]
-"13447" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2725</SUB>> ]
-"13461" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2727</SUB>> ]
-"13474" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2731</SUB>> ]
-"13480" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2733</SUB>> ]
-"13481" [label = <(GetData,array-&gt;GetData())<SUB>2733</SUB>> ]
-"13389" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2711</SUB>> ]
-"13391" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2711</SUB>> ]
-"13421" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2720</SUB>> ]
-"13449" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2725</SUB>> ]
-"13475" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2731</SUB>> ]
-"13482" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2733</SUB>> ]
-"13423" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2720</SUB>> ]
-"13484" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2733</SUB>> ]
-"13373" [label = <(METHOD,GetPrimitiveArray)<SUB>2710</SUB>> ]
-"13485" [label = <(METHOD_RETURN,ElementT)<SUB>2710</SUB>> ]
-  "13378" -> "13383" 
-  "13378" -> "13397" 
-  "13397" -> "13402" 
-  "13400" -> "13409" 
-  "13402" -> "13400" 
-  "13408" -> "13413" 
-  "13408" -> "13423" 
-  "13416" -> "13429" 
-  "13416" -> "13470" 
-  "13409" -> "13408" 
-  "13413" -> "13485" 
-  "13417" -> "13416" 
-  "13438" -> "13449" 
-  "13443" -> "13454" 
-  "13452" -> "13461" 
-  "13456" -> "13465" 
-  "13463" -> "13485" 
-  "13382" -> "13389" 
-  "13382" -> "13397" 
-  "13418" -> "13425" 
-  "13425" -> "13417" 
-  "13429" -> "13434" 
-  "13429" -> "13440" 
-  "13440" -> "13438" 
-  "13445" -> "13443" 
-  "13454" -> "13452" 
+"13375" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2709</SUB>> ]
+"13394" [label = <(soa,soa(env))<SUB>2710</SUB>> ]
+"13397" [label = <(&lt;operator&gt;.assignment,* array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetArrayElements&quot;,\012 &quot;get&quot;))<SUB>2711</SUB>> ]
+"13399" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetArrayElements&quot;,\012 &quot;get&quot;))<SUB>2711</SUB>> ]
+"13405" [label = <(UNLIKELY,UNLIKELY(array == nullptr))<SUB>2714</SUB>> ]
+"13413" [label = <(IsMovableObject,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject(array))<SUB>2718</SUB>> ]
+"13406" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2714</SUB>> ]
+"13410" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2715</SUB>> ]
+"13414" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject)<SUB>2718</SUB>> ]
+"13435" [label = <(&lt;operator&gt;.assignment,component_size = sizeof(ElementT))<SUB>2722</SUB>> ]
+"13440" [label = <(&lt;operator&gt;.assignment,size = array-&gt;GetLength() * component_size)<SUB>2723</SUB>> ]
+"13449" [label = <(&lt;operator&gt;.assignment,* data = new uint64_t[RoundUp(size, 8) / 8])<SUB>2724</SUB>> ]
+"13453" [label = <(memcpy,memcpy(data, array-&gt;GetData(), size))<SUB>2725</SUB>> ]
+"13460" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(data);,return reinterpret_cast&lt;ElementT*&gt;(data);)<SUB>2726</SUB>> ]
+"13379" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2709</SUB>> ]
+"13415" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2718</SUB>> ]
+"13422" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2718</SUB>> ]
+"13426" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2719</SUB>> ]
+"13437" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2722</SUB>> ]
+"13442" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2723</SUB>> ]
+"13451" [label = <(&lt;operator&gt;.new,new uint64_t[RoundUp(size, 8) / 8])<SUB>2724</SUB>> ]
+"13455" [label = <(GetData,array-&gt;GetData())<SUB>2725</SUB>> ]
+"13461" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(data))<SUB>2726</SUB>> ]
+"13475" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());)<SUB>2731</SUB>> ]
+"13380" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2709</SUB>> ]
+"13384" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2709</SUB>> ]
+"13391" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2709</SUB>> ]
+"13416" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2718</SUB>> ]
+"13430" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2720</SUB>> ]
+"13443" [label = <(GetLength,array-&gt;GetLength())<SUB>2723</SUB>> ]
+"13456" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2725</SUB>> ]
+"13462" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2726</SUB>> ]
+"13467" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2728</SUB>> ]
+"13476" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData()))<SUB>2731</SUB>> ]
+"13385" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2709</SUB>> ]
+"13417" [label = <(Runtime::Current,Runtime::Current())<SUB>2718</SUB>> ]
+"13421" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2718</SUB>> ]
+"13431" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2720</SUB>> ]
+"13444" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2723</SUB>> ]
+"13458" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2725</SUB>> ]
+"13471" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2729</SUB>> ]
+"13477" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2731</SUB>> ]
+"13478" [label = <(GetData,array-&gt;GetData())<SUB>2731</SUB>> ]
+"13386" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2709</SUB>> ]
+"13388" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2709</SUB>> ]
+"13418" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2718</SUB>> ]
+"13446" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2723</SUB>> ]
+"13472" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2729</SUB>> ]
+"13479" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2731</SUB>> ]
+"13420" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2718</SUB>> ]
+"13481" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2731</SUB>> ]
+"13370" [label = <(METHOD,GetPrimitiveArray)<SUB>2708</SUB>> ]
+"13482" [label = <(METHOD_RETURN,ElementT)<SUB>2708</SUB>> ]
+  "13375" -> "13380" 
+  "13375" -> "13394" 
+  "13394" -> "13399" 
+  "13397" -> "13406" 
+  "13399" -> "13397" 
+  "13405" -> "13410" 
+  "13405" -> "13420" 
+  "13413" -> "13426" 
+  "13413" -> "13467" 
+  "13406" -> "13405" 
+  "13410" -> "13482" 
+  "13414" -> "13413" 
+  "13435" -> "13446" 
+  "13440" -> "13451" 
+  "13449" -> "13458" 
+  "13453" -> "13462" 
+  "13460" -> "13482" 
+  "13379" -> "13386" 
+  "13379" -> "13394" 
+  "13415" -> "13422" 
+  "13422" -> "13414" 
+  "13426" -> "13431" 
+  "13426" -> "13437" 
+  "13437" -> "13435" 
+  "13442" -> "13440" 
+  "13451" -> "13449" 
+  "13455" -> "13453" 
+  "13461" -> "13460" 
+  "13475" -> "13482" 
+  "13380" -> "13379" 
+  "13384" -> "13391" 
+  "13391" -> "13482" 
+  "13416" -> "13415" 
+  "13430" -> "13437" 
+  "13443" -> "13442" 
+  "13456" -> "13455" 
+  "13462" -> "13461" 
+  "13467" -> "13477" 
+  "13467" -> "13472" 
+  "13476" -> "13475" 
+  "13385" -> "13384" 
+  "13417" -> "13421" 
+  "13421" -> "13416" 
+  "13431" -> "13430" 
+  "13444" -> "13443" 
   "13458" -> "13456" 
-  "13464" -> "13463" 
-  "13478" -> "13485" 
-  "13383" -> "13382" 
-  "13387" -> "13394" 
-  "13394" -> "13485" 
-  "13419" -> "13418" 
-  "13433" -> "13440" 
-  "13446" -> "13445" 
-  "13459" -> "13458" 
-  "13465" -> "13464" 
-  "13470" -> "13480" 
-  "13470" -> "13475" 
+  "13471" -> "13477" 
+  "13477" -> "13481" 
+  "13478" -> "13476" 
+  "13386" -> "13388" 
+  "13388" -> "13385" 
+  "13418" -> "13417" 
+  "13446" -> "13444" 
+  "13472" -> "13471" 
   "13479" -> "13478" 
-  "13388" -> "13387" 
-  "13420" -> "13424" 
-  "13424" -> "13419" 
-  "13434" -> "13433" 
-  "13447" -> "13446" 
-  "13461" -> "13459" 
-  "13474" -> "13480" 
-  "13480" -> "13484" 
+  "13420" -> "13418" 
   "13481" -> "13479" 
-  "13389" -> "13391" 
-  "13391" -> "13388" 
-  "13421" -> "13420" 
-  "13449" -> "13447" 
-  "13475" -> "13474" 
-  "13482" -> "13481" 
-  "13423" -> "13421" 
-  "13484" -> "13482" 
-  "13373" -> "13378" 
+  "13370" -> "13375" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/257-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/257-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/257-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/257-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,38 +1,38 @@
 digraph "ReleasePrimitiveArray" {  
-"13493" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2739</SUB>> ]
-"13511" [label = <(soa,soa(env))<SUB>2740</SUB>> ]
-"13514" [label = <(&lt;operator&gt;.assignment,* array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;ReleaseArrayElements&quot;,\012 &quot;release&quot;))<SUB>2741</SUB>> ]
-"13527" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, sizeof(ElementT), elements, mode))<SUB>2747</SUB>> ]
-"13516" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;ReleaseArrayElements&quot;,\012 &quot;release&quot;))<SUB>2741</SUB>> ]
-"13522" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2744</SUB>> ]
-"13530" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2747</SUB>> ]
-"13526" [label = <(RETURN,return;,return;)<SUB>2745</SUB>> ]
-"13497" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2739</SUB>> ]
-"13498" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2739</SUB>> ]
-"13502" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2739</SUB>> ]
-"13509" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2739</SUB>> ]
-"13503" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2739</SUB>> ]
-"13504" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2739</SUB>> ]
-"13506" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2739</SUB>> ]
-"13487" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2738</SUB>> ]
-"13534" [label = <(METHOD_RETURN,void)<SUB>2738</SUB>> ]
-  "13493" -> "13498" 
-  "13493" -> "13511" 
-  "13511" -> "13516" 
-  "13514" -> "13522" 
-  "13527" -> "13534" 
-  "13516" -> "13514" 
-  "13522" -> "13526" 
-  "13522" -> "13530" 
-  "13530" -> "13527" 
-  "13526" -> "13534" 
-  "13497" -> "13504" 
-  "13497" -> "13511" 
-  "13498" -> "13497" 
-  "13502" -> "13509" 
-  "13509" -> "13534" 
-  "13503" -> "13502" 
-  "13504" -> "13506" 
-  "13506" -> "13503" 
-  "13487" -> "13493" 
+"13490" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2737</SUB>> ]
+"13508" [label = <(soa,soa(env))<SUB>2738</SUB>> ]
+"13511" [label = <(&lt;operator&gt;.assignment,* array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;ReleaseArrayElements&quot;,\012 &quot;release&quot;))<SUB>2739</SUB>> ]
+"13524" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, sizeof(ElementT), elements, mode))<SUB>2745</SUB>> ]
+"13513" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;ReleaseArrayElements&quot;,\012 &quot;release&quot;))<SUB>2739</SUB>> ]
+"13519" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2742</SUB>> ]
+"13527" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2745</SUB>> ]
+"13523" [label = <(RETURN,return;,return;)<SUB>2743</SUB>> ]
+"13494" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2737</SUB>> ]
+"13495" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2737</SUB>> ]
+"13499" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2737</SUB>> ]
+"13506" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2737</SUB>> ]
+"13500" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2737</SUB>> ]
+"13501" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2737</SUB>> ]
+"13503" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2737</SUB>> ]
+"13484" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2736</SUB>> ]
+"13531" [label = <(METHOD_RETURN,void)<SUB>2736</SUB>> ]
+  "13490" -> "13495" 
+  "13490" -> "13508" 
+  "13508" -> "13513" 
+  "13511" -> "13519" 
+  "13524" -> "13531" 
+  "13513" -> "13511" 
+  "13519" -> "13523" 
+  "13519" -> "13527" 
+  "13527" -> "13524" 
+  "13523" -> "13531" 
+  "13494" -> "13501" 
+  "13494" -> "13508" 
+  "13495" -> "13494" 
+  "13499" -> "13506" 
+  "13506" -> "13531" 
+  "13500" -> "13499" 
+  "13501" -> "13503" 
+  "13503" -> "13500" 
+  "13484" -> "13490" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/258-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/258-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/258-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/258-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,5 +1,5 @@
 digraph "ReleasePrimitiveArray" {  
-"13536" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2750</SUB>> ]
-"13543" [label = <(METHOD_RETURN,void)<SUB>2750</SUB>> ]
-  "13536" -> "13543" 
+"13533" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2748</SUB>> ]
+"13540" [label = <(METHOD_RETURN,void)<SUB>2748</SUB>> ]
+  "13533" -> "13540" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/259-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/259-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/259-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/259-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,94 +1,94 @@
 digraph "GetPrimitiveArrayRegion" {  
-"13582" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2792</SUB>> ]
-"13600" [label = <(soa,soa(env))<SUB>2793</SUB>> ]
-"13603" [label = <(&lt;operator&gt;.assignment,* array =\012 DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetPrimitiveArrayRegion&quot;,\012 &quot;get region of&quot;))<SUB>2794</SUB>> ]
-"13605" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetPrimitiveArrayRegion&quot;,\012 &quot;get region of&quot;))<SUB>2795</SUB>> ]
-"13611" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2798</SUB>> ]
-"13586" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2792</SUB>> ]
-"13616" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2799</SUB>> ]
-"13587" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2792</SUB>> ]
-"13591" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2792</SUB>> ]
-"13598" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2792</SUB>> ]
-"13617" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2799</SUB>> ]
-"13624" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2799</SUB>> ]
-"13633" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;src&quot;))<SUB>2800</SUB>> ]
-"13592" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2792</SUB>> ]
-"13618" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2799</SUB>> ]
-"13621" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2799</SUB>> ]
-"13626" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2799</SUB>> ]
-"13641" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2802</SUB>> ]
-"13664" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2803</SUB>> ]
-"13670" [label = <(memcpy,memcpy(buf, data + start, length * sizeof(ElementT)))<SUB>2804</SUB>> ]
-"13593" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2792</SUB>> ]
-"13595" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2792</SUB>> ]
-"13627" [label = <(GetLength,array-&gt;GetLength())<SUB>2799</SUB>> ]
-"13666" [label = <(GetData,array-&gt;GetData())<SUB>2803</SUB>> ]
-"13672" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2804</SUB>> ]
-"13675" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2804</SUB>> ]
-"13628" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2799</SUB>> ]
-"13667" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2803</SUB>> ]
-"13677" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2804</SUB>> ]
-"13630" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2799</SUB>> ]
-"13646" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2802</SUB>> ]
-"13669" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2803</SUB>> ]
-"13647" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2802</SUB>> ]
-"13655" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2802</SUB>> ]
-"13662" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2802</SUB>> ]
-"13648" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2802</SUB>> ]
-"13651" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2802</SUB>> ]
-"13656" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2802</SUB>> ]
-"13657" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2802</SUB>> ]
-"13659" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2802</SUB>> ]
-"13575" [label = <(METHOD,GetPrimitiveArrayRegion)<SUB>2790</SUB>> ]
-"13679" [label = <(METHOD_RETURN,void)<SUB>2790</SUB>> ]
-  "13582" -> "13587" 
-  "13582" -> "13600" 
-  "13600" -> "13605" 
-  "13603" -> "13611" 
-  "13605" -> "13603" 
-  "13611" -> "13679" 
-  "13611" -> "13618" 
-  "13586" -> "13593" 
-  "13586" -> "13600" 
-  "13616" -> "13633" 
-  "13616" -> "13641" 
-  "13587" -> "13586" 
-  "13591" -> "13598" 
-  "13598" -> "13679" 
-  "13617" -> "13616" 
-  "13617" -> "13630" 
-  "13624" -> "13616" 
-  "13633" -> "13679" 
-  "13592" -> "13591" 
-  "13618" -> "13617" 
-  "13618" -> "13621" 
-  "13621" -> "13617" 
-  "13626" -> "13624" 
-  "13641" -> "13648" 
-  "13641" -> "13669" 
-  "13664" -> "13672" 
-  "13670" -> "13679" 
-  "13593" -> "13595" 
-  "13595" -> "13592" 
-  "13627" -> "13626" 
+"13579" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2790</SUB>> ]
+"13597" [label = <(soa,soa(env))<SUB>2791</SUB>> ]
+"13600" [label = <(&lt;operator&gt;.assignment,* array =\012 DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetPrimitiveArrayRegion&quot;,\012 &quot;get region of&quot;))<SUB>2792</SUB>> ]
+"13602" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;GetPrimitiveArrayRegion&quot;,\012 &quot;get region of&quot;))<SUB>2793</SUB>> ]
+"13608" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2796</SUB>> ]
+"13583" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2790</SUB>> ]
+"13613" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2797</SUB>> ]
+"13584" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2790</SUB>> ]
+"13588" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2790</SUB>> ]
+"13595" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2790</SUB>> ]
+"13614" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2797</SUB>> ]
+"13621" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2797</SUB>> ]
+"13630" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;src&quot;))<SUB>2798</SUB>> ]
+"13589" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2790</SUB>> ]
+"13615" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2797</SUB>> ]
+"13618" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2797</SUB>> ]
+"13623" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2797</SUB>> ]
+"13638" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2800</SUB>> ]
+"13661" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2801</SUB>> ]
+"13667" [label = <(memcpy,memcpy(buf, data + start, length * sizeof(ElementT)))<SUB>2802</SUB>> ]
+"13590" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2790</SUB>> ]
+"13592" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2790</SUB>> ]
+"13624" [label = <(GetLength,array-&gt;GetLength())<SUB>2797</SUB>> ]
+"13663" [label = <(GetData,array-&gt;GetData())<SUB>2801</SUB>> ]
+"13669" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2802</SUB>> ]
+"13672" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2802</SUB>> ]
+"13625" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2797</SUB>> ]
+"13664" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2801</SUB>> ]
+"13674" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2802</SUB>> ]
+"13627" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2797</SUB>> ]
+"13643" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2800</SUB>> ]
+"13666" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2801</SUB>> ]
+"13644" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2800</SUB>> ]
+"13652" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2800</SUB>> ]
+"13659" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2800</SUB>> ]
+"13645" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2800</SUB>> ]
+"13648" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2800</SUB>> ]
+"13653" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2800</SUB>> ]
+"13654" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2800</SUB>> ]
+"13656" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2800</SUB>> ]
+"13572" [label = <(METHOD,GetPrimitiveArrayRegion)<SUB>2788</SUB>> ]
+"13676" [label = <(METHOD_RETURN,void)<SUB>2788</SUB>> ]
+  "13579" -> "13584" 
+  "13579" -> "13597" 
+  "13597" -> "13602" 
+  "13600" -> "13608" 
+  "13602" -> "13600" 
+  "13608" -> "13676" 
+  "13608" -> "13615" 
+  "13583" -> "13590" 
+  "13583" -> "13597" 
+  "13613" -> "13630" 
+  "13613" -> "13638" 
+  "13584" -> "13583" 
+  "13588" -> "13595" 
+  "13595" -> "13676" 
+  "13614" -> "13613" 
+  "13614" -> "13627" 
+  "13621" -> "13613" 
+  "13630" -> "13676" 
+  "13589" -> "13588" 
+  "13615" -> "13614" 
+  "13615" -> "13618" 
+  "13618" -> "13614" 
+  "13623" -> "13621" 
+  "13638" -> "13645" 
+  "13638" -> "13666" 
+  "13661" -> "13669" 
+  "13667" -> "13676" 
+  "13590" -> "13592" 
+  "13592" -> "13589" 
+  "13624" -> "13623" 
+  "13663" -> "13661" 
+  "13669" -> "13674" 
+  "13672" -> "13667" 
+  "13625" -> "13624" 
+  "13664" -> "13663" 
+  "13674" -> "13672" 
+  "13627" -> "13625" 
+  "13643" -> "13654" 
+  "13643" -> "13666" 
   "13666" -> "13664" 
-  "13672" -> "13677" 
-  "13675" -> "13670" 
-  "13628" -> "13627" 
-  "13667" -> "13666" 
-  "13677" -> "13675" 
-  "13630" -> "13628" 
-  "13646" -> "13657" 
-  "13646" -> "13669" 
-  "13669" -> "13667" 
-  "13647" -> "13646" 
-  "13655" -> "13662" 
-  "13662" -> "13679" 
-  "13648" -> "13647" 
-  "13648" -> "13651" 
-  "13651" -> "13647" 
-  "13656" -> "13655" 
-  "13657" -> "13659" 
-  "13659" -> "13656" 
-  "13575" -> "13582" 
+  "13644" -> "13643" 
+  "13652" -> "13659" 
+  "13659" -> "13676" 
+  "13645" -> "13644" 
+  "13645" -> "13648" 
+  "13648" -> "13644" 
+  "13653" -> "13652" 
+  "13654" -> "13656" 
+  "13656" -> "13653" 
+  "13572" -> "13579" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/26-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/26-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/26-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/26-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,9 +1,9 @@
 digraph "DefineClass" {  
-"594" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI DefineClass is not supported&quot;)<SUB>535</SUB>> ]
-"598" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>536</SUB>> ]
-"595" [label = <(LOG,LOG(WARNING))<SUB>535</SUB>> ]
-"587" [label = <(METHOD,DefineClass)<SUB>534</SUB>> ]
-"600" [label = <(METHOD_RETURN,jclass)<SUB>534</SUB>> ]
+"594" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI DefineClass is not supported&quot;)<SUB>534</SUB>> ]
+"598" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>535</SUB>> ]
+"595" [label = <(LOG,LOG(WARNING))<SUB>534</SUB>> ]
+"587" [label = <(METHOD,DefineClass)<SUB>533</SUB>> ]
+"600" [label = <(METHOD_RETURN,jclass)<SUB>533</SUB>> ]
   "594" -> "598" 
   "598" -> "600" 
   "595" -> "594" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/260-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/260-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/260-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/260-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,94 +1,94 @@
 digraph "SetPrimitiveArrayRegion" {  
-"13688" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2812</SUB>> ]
-"13706" [label = <(soa,soa(env))<SUB>2813</SUB>> ]
-"13709" [label = <(&lt;operator&gt;.assignment,* array =\012 DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;SetPrimitiveArrayRegion&quot;,\012 &quot;set region of&quot;))<SUB>2814</SUB>> ]
-"13711" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;SetPrimitiveArrayRegion&quot;,\012 &quot;set region of&quot;))<SUB>2815</SUB>> ]
-"13717" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2818</SUB>> ]
-"13692" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2812</SUB>> ]
-"13722" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2819</SUB>> ]
-"13693" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2812</SUB>> ]
-"13697" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2812</SUB>> ]
-"13704" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2812</SUB>> ]
-"13723" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2819</SUB>> ]
-"13730" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2819</SUB>> ]
-"13739" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;dst&quot;))<SUB>2820</SUB>> ]
-"13698" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2812</SUB>> ]
-"13724" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2819</SUB>> ]
-"13727" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2819</SUB>> ]
-"13732" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2819</SUB>> ]
-"13747" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2822</SUB>> ]
-"13770" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2823</SUB>> ]
-"13776" [label = <(memcpy,memcpy(data + start, buf, length * sizeof(ElementT)))<SUB>2824</SUB>> ]
-"13699" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2812</SUB>> ]
-"13701" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2812</SUB>> ]
-"13733" [label = <(GetLength,array-&gt;GetLength())<SUB>2819</SUB>> ]
-"13772" [label = <(GetData,array-&gt;GetData())<SUB>2823</SUB>> ]
-"13777" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2824</SUB>> ]
-"13781" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2824</SUB>> ]
-"13734" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2819</SUB>> ]
-"13773" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2823</SUB>> ]
-"13783" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2824</SUB>> ]
-"13736" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2819</SUB>> ]
-"13752" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2822</SUB>> ]
-"13775" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2823</SUB>> ]
-"13753" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2822</SUB>> ]
-"13761" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2822</SUB>> ]
-"13768" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2822</SUB>> ]
-"13754" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2822</SUB>> ]
-"13757" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2822</SUB>> ]
-"13762" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2822</SUB>> ]
-"13763" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2822</SUB>> ]
-"13765" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2822</SUB>> ]
-"13681" [label = <(METHOD,SetPrimitiveArrayRegion)<SUB>2810</SUB>> ]
-"13785" [label = <(METHOD_RETURN,void)<SUB>2810</SUB>> ]
-  "13688" -> "13693" 
-  "13688" -> "13706" 
-  "13706" -> "13711" 
-  "13709" -> "13717" 
-  "13711" -> "13709" 
-  "13717" -> "13785" 
-  "13717" -> "13724" 
-  "13692" -> "13699" 
-  "13692" -> "13706" 
-  "13722" -> "13739" 
-  "13722" -> "13747" 
-  "13693" -> "13692" 
-  "13697" -> "13704" 
-  "13704" -> "13785" 
-  "13723" -> "13722" 
-  "13723" -> "13736" 
-  "13730" -> "13722" 
-  "13739" -> "13785" 
-  "13698" -> "13697" 
-  "13724" -> "13723" 
-  "13724" -> "13727" 
-  "13727" -> "13723" 
-  "13732" -> "13730" 
-  "13747" -> "13754" 
-  "13747" -> "13775" 
-  "13770" -> "13777" 
-  "13776" -> "13785" 
-  "13699" -> "13701" 
-  "13701" -> "13698" 
-  "13733" -> "13732" 
+"13685" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2810</SUB>> ]
+"13703" [label = <(soa,soa(env))<SUB>2811</SUB>> ]
+"13706" [label = <(&lt;operator&gt;.assignment,* array =\012 DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;SetPrimitiveArrayRegion&quot;,\012 &quot;set region of&quot;))<SUB>2812</SUB>> ]
+"13708" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(soa, java_array,\012 &quot;SetPrimitiveArrayRegion&quot;,\012 &quot;set region of&quot;))<SUB>2813</SUB>> ]
+"13714" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2816</SUB>> ]
+"13689" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2810</SUB>> ]
+"13719" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2817</SUB>> ]
+"13690" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2810</SUB>> ]
+"13694" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2810</SUB>> ]
+"13701" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2810</SUB>> ]
+"13720" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2817</SUB>> ]
+"13727" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2817</SUB>> ]
+"13736" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;dst&quot;))<SUB>2818</SUB>> ]
+"13695" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2810</SUB>> ]
+"13721" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2817</SUB>> ]
+"13724" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2817</SUB>> ]
+"13729" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2817</SUB>> ]
+"13744" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2820</SUB>> ]
+"13767" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2821</SUB>> ]
+"13773" [label = <(memcpy,memcpy(data + start, buf, length * sizeof(ElementT)))<SUB>2822</SUB>> ]
+"13696" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2810</SUB>> ]
+"13698" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2810</SUB>> ]
+"13730" [label = <(GetLength,array-&gt;GetLength())<SUB>2817</SUB>> ]
+"13769" [label = <(GetData,array-&gt;GetData())<SUB>2821</SUB>> ]
+"13774" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2822</SUB>> ]
+"13778" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2822</SUB>> ]
+"13731" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2817</SUB>> ]
+"13770" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2821</SUB>> ]
+"13780" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2822</SUB>> ]
+"13733" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2817</SUB>> ]
+"13749" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2820</SUB>> ]
+"13772" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2821</SUB>> ]
+"13750" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2820</SUB>> ]
+"13758" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2820</SUB>> ]
+"13765" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2820</SUB>> ]
+"13751" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2820</SUB>> ]
+"13754" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2820</SUB>> ]
+"13759" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2820</SUB>> ]
+"13760" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2820</SUB>> ]
+"13762" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2820</SUB>> ]
+"13678" [label = <(METHOD,SetPrimitiveArrayRegion)<SUB>2808</SUB>> ]
+"13782" [label = <(METHOD_RETURN,void)<SUB>2808</SUB>> ]
+  "13685" -> "13690" 
+  "13685" -> "13703" 
+  "13703" -> "13708" 
+  "13706" -> "13714" 
+  "13708" -> "13706" 
+  "13714" -> "13782" 
+  "13714" -> "13721" 
+  "13689" -> "13696" 
+  "13689" -> "13703" 
+  "13719" -> "13736" 
+  "13719" -> "13744" 
+  "13690" -> "13689" 
+  "13694" -> "13701" 
+  "13701" -> "13782" 
+  "13720" -> "13719" 
+  "13720" -> "13733" 
+  "13727" -> "13719" 
+  "13736" -> "13782" 
+  "13695" -> "13694" 
+  "13721" -> "13720" 
+  "13721" -> "13724" 
+  "13724" -> "13720" 
+  "13729" -> "13727" 
+  "13744" -> "13751" 
+  "13744" -> "13772" 
+  "13767" -> "13774" 
+  "13773" -> "13782" 
+  "13696" -> "13698" 
+  "13698" -> "13695" 
+  "13730" -> "13729" 
+  "13769" -> "13767" 
+  "13774" -> "13780" 
+  "13778" -> "13773" 
+  "13731" -> "13730" 
+  "13770" -> "13769" 
+  "13780" -> "13778" 
+  "13733" -> "13731" 
+  "13749" -> "13760" 
+  "13749" -> "13772" 
   "13772" -> "13770" 
-  "13777" -> "13783" 
-  "13781" -> "13776" 
-  "13734" -> "13733" 
-  "13773" -> "13772" 
-  "13783" -> "13781" 
-  "13736" -> "13734" 
-  "13752" -> "13763" 
-  "13752" -> "13775" 
-  "13775" -> "13773" 
-  "13753" -> "13752" 
-  "13761" -> "13768" 
-  "13768" -> "13785" 
-  "13754" -> "13753" 
-  "13754" -> "13757" 
-  "13757" -> "13753" 
-  "13762" -> "13761" 
-  "13763" -> "13765" 
-  "13765" -> "13762" 
-  "13681" -> "13688" 
+  "13750" -> "13749" 
+  "13758" -> "13765" 
+  "13765" -> "13782" 
+  "13751" -> "13750" 
+  "13751" -> "13754" 
+  "13754" -> "13750" 
+  "13759" -> "13758" 
+  "13760" -> "13762" 
+  "13762" -> "13759" 
+  "13678" -> "13685" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/261-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/261-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/261-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/261-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,9 +1,9 @@
 digraph "GetJniNativeInterface" {  
-"14485" [label = <(RETURN,return &amp;gJniNativeInterface;,return &amp;gJniNativeInterface;)<SUB>3067</SUB>> ]
-"14486" [label = <(&lt;operator&gt;.addressOf,&amp;gJniNativeInterface)<SUB>3067</SUB>> ]
-"14483" [label = <(METHOD,GetJniNativeInterface)<SUB>3066</SUB>> ]
-"14488" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3066</SUB>> ]
-  "14485" -> "14488" 
-  "14486" -> "14485" 
-  "14483" -> "14486" 
+"14482" [label = <(RETURN,return &amp;gJniNativeInterface;,return &amp;gJniNativeInterface;)<SUB>3065</SUB>> ]
+"14483" [label = <(&lt;operator&gt;.addressOf,&amp;gJniNativeInterface)<SUB>3065</SUB>> ]
+"14480" [label = <(METHOD,GetJniNativeInterface)<SUB>3064</SUB>> ]
+"14485" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3064</SUB>> ]
+  "14482" -> "14485" 
+  "14483" -> "14482" 
+  "14480" -> "14483" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/262-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/262-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/262-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/262-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,5 +1,5 @@
 digraph "gJniSleepForeverStub" {  
-"14490" [label = <(METHOD,gJniSleepForeverStub)<SUB>3070</SUB>> ]
-"14492" [label = <(METHOD_RETURN,void)<SUB>3070</SUB>> ]
-  "14490" -> "14492" 
+"14487" [label = <(METHOD,gJniSleepForeverStub)<SUB>3068</SUB>> ]
+"14489" [label = <(METHOD_RETURN,void)<SUB>3068</SUB>> ]
+  "14487" -> "14489" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/263-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/263-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/263-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/263-cfg.dot	2023-06-07 19:34:41.737389008 +0330
@@ -1,13 +1,13 @@
 digraph "GetRuntimeShutdownNativeInterface" {  
-"14732" [label = <(RETURN,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);)<SUB>3307</SUB>> ]
-"14733" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub))<SUB>3307</SUB>> ]
-"14734" [label = <(UNKNOWN,JNINativeInterface*,JNINativeInterface*)<SUB>3307</SUB>> ]
-"14735" [label = <(&lt;operator&gt;.addressOf,&amp;gJniSleepForeverStub)<SUB>3307</SUB>> ]
-"14730" [label = <(METHOD,GetRuntimeShutdownNativeInterface)<SUB>3306</SUB>> ]
-"14737" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3306</SUB>> ]
-  "14732" -> "14737" 
-  "14733" -> "14732" 
-  "14734" -> "14735" 
-  "14735" -> "14733" 
-  "14730" -> "14734" 
+"14729" [label = <(RETURN,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);)<SUB>3305</SUB>> ]
+"14730" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub))<SUB>3305</SUB>> ]
+"14731" [label = <(UNKNOWN,JNINativeInterface*,JNINativeInterface*)<SUB>3305</SUB>> ]
+"14732" [label = <(&lt;operator&gt;.addressOf,&amp;gJniSleepForeverStub)<SUB>3305</SUB>> ]
+"14727" [label = <(METHOD,GetRuntimeShutdownNativeInterface)<SUB>3304</SUB>> ]
+"14734" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3304</SUB>> ]
+  "14729" -> "14734" 
+  "14730" -> "14729" 
+  "14731" -> "14732" 
+  "14732" -> "14730" 
+  "14727" -> "14731" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/264-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/264-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/264-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/264-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,39 +1,39 @@
 digraph "operator &lt;&lt;" {  
-"14749" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIInvalidRefType&quot;)<SUB>3315</SUB>> ]
-"14752" [label = <(RETURN,return os;,return os;)<SUB>3316</SUB>> ]
-"14756" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNILocalRefType&quot;)<SUB>3318</SUB>> ]
-"14759" [label = <(RETURN,return os;,return os;)<SUB>3319</SUB>> ]
-"14763" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIGlobalRefType&quot;)<SUB>3321</SUB>> ]
-"14766" [label = <(RETURN,return os;,return os;)<SUB>3322</SUB>> ]
-"14770" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIWeakGlobalRefType&quot;)<SUB>3324</SUB>> ]
-"14773" [label = <(RETURN,return os;,return os;)<SUB>3325</SUB>> ]
-"14776" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs) &lt;&lt; &quot;]&quot;)<SUB>3327</SUB>> ]
-"14786" [label = <(UNREACHABLE,UNREACHABLE())<SUB>3328</SUB>> ]
-"14777" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs))<SUB>3327</SUB>> ]
-"14778" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot;)<SUB>3327</SUB>> ]
-"14782" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(rhs))<SUB>3327</SUB>> ]
-"14779" [label = <(LOG,LOG(FATAL))<SUB>3327</SUB>> ]
-"14783" [label = <(UNKNOWN,int,int)<SUB>3327</SUB>> ]
-"14740" [label = <(METHOD,operator &lt;&lt;)<SUB>3312</SUB>> ]
-"14787" [label = <(METHOD_RETURN,ostream)<SUB>3312</SUB>> ]
-  "14749" -> "14752" 
-  "14752" -> "14787" 
-  "14756" -> "14759" 
-  "14759" -> "14787" 
-  "14763" -> "14766" 
-  "14766" -> "14787" 
-  "14770" -> "14773" 
-  "14773" -> "14787" 
-  "14776" -> "14786" 
-  "14786" -> "14787" 
-  "14777" -> "14776" 
-  "14778" -> "14783" 
-  "14782" -> "14777" 
-  "14779" -> "14778" 
-  "14783" -> "14782" 
-  "14740" -> "14749" 
-  "14740" -> "14756" 
-  "14740" -> "14763" 
-  "14740" -> "14770" 
-  "14740" -> "14779" 
+"14746" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIInvalidRefType&quot;)<SUB>3313</SUB>> ]
+"14749" [label = <(RETURN,return os;,return os;)<SUB>3314</SUB>> ]
+"14753" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNILocalRefType&quot;)<SUB>3316</SUB>> ]
+"14756" [label = <(RETURN,return os;,return os;)<SUB>3317</SUB>> ]
+"14760" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIGlobalRefType&quot;)<SUB>3319</SUB>> ]
+"14763" [label = <(RETURN,return os;,return os;)<SUB>3320</SUB>> ]
+"14767" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIWeakGlobalRefType&quot;)<SUB>3322</SUB>> ]
+"14770" [label = <(RETURN,return os;,return os;)<SUB>3323</SUB>> ]
+"14773" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs) &lt;&lt; &quot;]&quot;)<SUB>3325</SUB>> ]
+"14783" [label = <(UNREACHABLE,UNREACHABLE())<SUB>3326</SUB>> ]
+"14774" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs))<SUB>3325</SUB>> ]
+"14775" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot;)<SUB>3325</SUB>> ]
+"14779" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(rhs))<SUB>3325</SUB>> ]
+"14776" [label = <(LOG,LOG(FATAL))<SUB>3325</SUB>> ]
+"14780" [label = <(UNKNOWN,int,int)<SUB>3325</SUB>> ]
+"14737" [label = <(METHOD,operator &lt;&lt;)<SUB>3310</SUB>> ]
+"14784" [label = <(METHOD_RETURN,ostream)<SUB>3310</SUB>> ]
+  "14746" -> "14749" 
+  "14749" -> "14784" 
+  "14753" -> "14756" 
+  "14756" -> "14784" 
+  "14760" -> "14763" 
+  "14763" -> "14784" 
+  "14767" -> "14770" 
+  "14770" -> "14784" 
+  "14773" -> "14783" 
+  "14783" -> "14784" 
+  "14774" -> "14773" 
+  "14775" -> "14780" 
+  "14779" -> "14774" 
+  "14776" -> "14775" 
+  "14780" -> "14779" 
+  "14737" -> "14746" 
+  "14737" -> "14753" 
+  "14737" -> "14760" 
+  "14737" -> "14767" 
+  "14737" -> "14776" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/265-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/265-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/265-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/265-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "va_end" {  
-"15037" [label = <(METHOD,va_end)> ]
-"15040" [label = <(METHOD_RETURN,ANY)> ]
-  "15037" -> "15040" 
+"15034" [label = <(METHOD,va_end)> ]
+"15037" [label = <(METHOD_RETURN,ANY)> ]
+  "15034" -> "15037" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/266-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/266-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/266-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/266-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirection" {  
-"15041" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
-"15044" [label = <(METHOD_RETURN,ANY)> ]
-  "15041" -> "15044" 
+"15038" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
+"15041" [label = <(METHOD_RETURN,ANY)> ]
+  "15038" -> "15041" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/267-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/267-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/267-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/267-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignment" {  
-"15045" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
-"15049" [label = <(METHOD_RETURN,ANY)> ]
-  "15045" -> "15049" 
+"15042" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
+"15046" [label = <(METHOD_RETURN,ANY)> ]
+  "15042" -> "15046" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/268-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/268-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/268-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/268-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK_LE" {  
-"15050" [label = <(METHOD,DCHECK_LE)> ]
-"15054" [label = <(METHOD_RETURN,ANY)> ]
-  "15050" -> "15054" 
+"15047" [label = <(METHOD,DCHECK_LE)> ]
+"15051" [label = <(METHOD_RETURN,ANY)> ]
+  "15047" -> "15051" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/269-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/269-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/269-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/269-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "strlen" {  
-"15055" [label = <(METHOD,strlen)> ]
-"15058" [label = <(METHOD_RETURN,ANY)> ]
-  "15055" -> "15058" 
+"15052" [label = <(METHOD,strlen)> ]
+"15055" [label = <(METHOD_RETURN,ANY)> ]
+  "15052" -> "15055" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/27-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/27-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/27-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/27-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,69 +1,69 @@
 digraph "FindClass" {  
-"606" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>540</SUB>> ]
-"625" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>541</SUB>> ]
-"632" [label = <(&lt;operator&gt;.assignment,* class_linker = runtime-&gt;GetClassLinker())<SUB>542</SUB>> ]
-"639" [label = <(descriptor,descriptor(NormalizeJniClassDescriptor(name)))<SUB>543</SUB>> ]
-"643" [label = <(soa,soa(env))<SUB>544</SUB>> ]
-"646" [label = <(&lt;operator&gt;.assignment,* c = nullptr)<SUB>545</SUB>> ]
-"708" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c);,return soa.AddLocalReference&lt;jclass&gt;(c);)<SUB>553</SUB>> ]
-"627" [label = <(Runtime::Current,Runtime::Current())<SUB>541</SUB>> ]
-"634" [label = <(GetClassLinker,runtime-&gt;GetClassLinker())<SUB>542</SUB>> ]
-"640" [label = <(NormalizeJniClassDescriptor,NormalizeJniClassDescriptor(name))<SUB>543</SUB>> ]
-"650" [label = <(IsStarted,runtime-&gt;IsStarted())<SUB>546</SUB>> ]
-"709" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c))<SUB>553</SUB>> ]
-"628" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>541</SUB>> ]
-"635" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetClassLinker)<SUB>542</SUB>> ]
-"651" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;IsStarted)<SUB>546</SUB>> ]
-"655" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>547</SUB>> ]
-"664" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>548</SUB>> ]
-"677" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>549</SUB>> ]
-"710" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>553</SUB>> ]
-"610" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>540</SUB>> ]
-"630" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>541</SUB>> ]
-"637" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>542</SUB>> ]
-"653" [label = <(FIELD_IDENTIFIER,IsStarted,IsStarted)<SUB>546</SUB>> ]
-"656" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>547</SUB>> ]
-"659" [label = <(hs,hs(soa.Self()))<SUB>547</SUB>> ]
-"665" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::ClassLoader)<SUB>548</SUB>> ]
-"670" [label = <(class_loader,class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>548</SUB>> ]
-"679" [label = <(FindClass,class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>549</SUB>> ]
-"694" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>551</SUB>> ]
-"711" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>553</SUB>> ]
-"611" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>540</SUB>> ]
-"615" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>540</SUB>> ]
-"622" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>540</SUB>> ]
-"660" [label = <(Self,soa.Self())<SUB>547</SUB>> ]
-"667" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>548</SUB>> ]
-"671" [label = <(NewHandle,hs.NewHandle(GetClassLoader(soa)))<SUB>548</SUB>> ]
-"680" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindClass)<SUB>549</SUB>> ]
-"683" [label = <(Self,soa.Self())<SUB>549</SUB>> ]
-"687" [label = <(c_str,descriptor.c_str())<SUB>549</SUB>> ]
-"696" [label = <(FindSystemClass,class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>551</SUB>> ]
-"713" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>553</SUB>> ]
-"616" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>540</SUB>> ]
-"661" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>547</SUB>> ]
-"669" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>548</SUB>> ]
-"672" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>548</SUB>> ]
-"675" [label = <(GetClassLoader,GetClassLoader(soa))<SUB>548</SUB>> ]
-"682" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>549</SUB>> ]
-"684" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>549</SUB>> ]
-"688" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>549</SUB>> ]
-"697" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindSystemClass)<SUB>551</SUB>> ]
-"700" [label = <(Self,soa.Self())<SUB>551</SUB>> ]
-"704" [label = <(c_str,descriptor.c_str())<SUB>551</SUB>> ]
-"617" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>540</SUB>> ]
-"619" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>540</SUB>> ]
-"663" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>547</SUB>> ]
-"674" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>548</SUB>> ]
-"686" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>549</SUB>> ]
-"690" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>549</SUB>> ]
-"699" [label = <(FIELD_IDENTIFIER,FindSystemClass,FindSystemClass)<SUB>551</SUB>> ]
-"701" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>551</SUB>> ]
-"705" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>551</SUB>> ]
-"703" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>551</SUB>> ]
-"707" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>551</SUB>> ]
-"602" [label = <(METHOD,FindClass)<SUB>539</SUB>> ]
-"716" [label = <(METHOD_RETURN,jclass)<SUB>539</SUB>> ]
+"606" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>539</SUB>> ]
+"625" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>540</SUB>> ]
+"632" [label = <(&lt;operator&gt;.assignment,* class_linker = runtime-&gt;GetClassLinker())<SUB>541</SUB>> ]
+"639" [label = <(descriptor,descriptor(NormalizeJniClassDescriptor(name)))<SUB>542</SUB>> ]
+"643" [label = <(soa,soa(env))<SUB>543</SUB>> ]
+"646" [label = <(&lt;operator&gt;.assignment,* c = nullptr)<SUB>544</SUB>> ]
+"708" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c);,return soa.AddLocalReference&lt;jclass&gt;(c);)<SUB>552</SUB>> ]
+"627" [label = <(Runtime::Current,Runtime::Current())<SUB>540</SUB>> ]
+"634" [label = <(GetClassLinker,runtime-&gt;GetClassLinker())<SUB>541</SUB>> ]
+"640" [label = <(NormalizeJniClassDescriptor,NormalizeJniClassDescriptor(name))<SUB>542</SUB>> ]
+"650" [label = <(IsStarted,runtime-&gt;IsStarted())<SUB>545</SUB>> ]
+"709" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c))<SUB>552</SUB>> ]
+"628" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>540</SUB>> ]
+"635" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetClassLinker)<SUB>541</SUB>> ]
+"651" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;IsStarted)<SUB>545</SUB>> ]
+"655" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>546</SUB>> ]
+"664" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>547</SUB>> ]
+"677" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>548</SUB>> ]
+"710" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>552</SUB>> ]
+"610" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>539</SUB>> ]
+"630" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>540</SUB>> ]
+"637" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>541</SUB>> ]
+"653" [label = <(FIELD_IDENTIFIER,IsStarted,IsStarted)<SUB>545</SUB>> ]
+"656" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>546</SUB>> ]
+"659" [label = <(hs,hs(soa.Self()))<SUB>546</SUB>> ]
+"665" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::ClassLoader)<SUB>547</SUB>> ]
+"670" [label = <(class_loader,class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>547</SUB>> ]
+"679" [label = <(FindClass,class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>548</SUB>> ]
+"694" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>550</SUB>> ]
+"711" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>552</SUB>> ]
+"611" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>539</SUB>> ]
+"615" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>539</SUB>> ]
+"622" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>539</SUB>> ]
+"660" [label = <(Self,soa.Self())<SUB>546</SUB>> ]
+"667" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>547</SUB>> ]
+"671" [label = <(NewHandle,hs.NewHandle(GetClassLoader(soa)))<SUB>547</SUB>> ]
+"680" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindClass)<SUB>548</SUB>> ]
+"683" [label = <(Self,soa.Self())<SUB>548</SUB>> ]
+"687" [label = <(c_str,descriptor.c_str())<SUB>548</SUB>> ]
+"696" [label = <(FindSystemClass,class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>550</SUB>> ]
+"713" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>552</SUB>> ]
+"616" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>539</SUB>> ]
+"661" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>546</SUB>> ]
+"669" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>547</SUB>> ]
+"672" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>547</SUB>> ]
+"675" [label = <(GetClassLoader,GetClassLoader(soa))<SUB>547</SUB>> ]
+"682" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>548</SUB>> ]
+"684" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>548</SUB>> ]
+"688" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>548</SUB>> ]
+"697" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindSystemClass)<SUB>550</SUB>> ]
+"700" [label = <(Self,soa.Self())<SUB>550</SUB>> ]
+"704" [label = <(c_str,descriptor.c_str())<SUB>550</SUB>> ]
+"617" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>539</SUB>> ]
+"619" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>539</SUB>> ]
+"663" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>546</SUB>> ]
+"674" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>547</SUB>> ]
+"686" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>548</SUB>> ]
+"690" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>548</SUB>> ]
+"699" [label = <(FIELD_IDENTIFIER,FindSystemClass,FindSystemClass)<SUB>550</SUB>> ]
+"701" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>550</SUB>> ]
+"705" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>550</SUB>> ]
+"703" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>550</SUB>> ]
+"707" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>550</SUB>> ]
+"602" [label = <(METHOD,FindClass)<SUB>538</SUB>> ]
+"716" [label = <(METHOD_RETURN,jclass)<SUB>538</SUB>> ]
   "606" -> "611" 
   "606" -> "630" 
   "625" -> "637" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/270-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/270-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/270-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/270-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addition" {  
-"15059" [label = <(METHOD,&lt;operator&gt;.addition)> ]
-"15063" [label = <(METHOD_RETURN,ANY)> ]
-  "15059" -> "15063" 
+"15056" [label = <(METHOD,&lt;operator&gt;.addition)> ]
+"15060" [label = <(METHOD_RETURN,ANY)> ]
+  "15056" -> "15060" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/271-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/271-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/271-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/271-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.notEquals" {  
-"15064" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
-"15068" [label = <(METHOD_RETURN,ANY)> ]
-  "15064" -> "15068" 
+"15061" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
+"15065" [label = <(METHOD_RETURN,ANY)> ]
+  "15061" -> "15065" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/272-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/272-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/272-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/272-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "LIKELY" {  
-"15069" [label = <(METHOD,LIKELY)> ]
-"15072" [label = <(METHOD_RETURN,ANY)> ]
-  "15069" -> "15072" 
+"15066" [label = <(METHOD,LIKELY)> ]
+"15069" [label = <(METHOD_RETURN,ANY)> ]
+  "15066" -> "15069" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/273-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/273-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/273-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/273-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.equals" {  
-"15073" [label = <(METHOD,&lt;operator&gt;.equals)> ]
-"15077" [label = <(METHOD_RETURN,ANY)> ]
-  "15073" -> "15077" 
+"15070" [label = <(METHOD,&lt;operator&gt;.equals)> ]
+"15074" [label = <(METHOD_RETURN,ANY)> ]
+  "15070" -> "15074" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/274-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/274-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/274-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/274-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.and" {  
-"15078" [label = <(METHOD,&lt;operator&gt;.and)> ]
-"15082" [label = <(METHOD_RETURN,ANY)> ]
-  "15078" -> "15082" 
+"15075" [label = <(METHOD,&lt;operator&gt;.and)> ]
+"15079" [label = <(METHOD_RETURN,ANY)> ]
+  "15075" -> "15079" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/275-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/275-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/275-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/275-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "good" {  
-"15083" [label = <(METHOD,good)> ]
-"15087" [label = <(METHOD_RETURN,ANY)> ]
-  "15083" -> "15087" 
+"15080" [label = <(METHOD,good)> ]
+"15084" [label = <(METHOD_RETURN,ANY)> ]
+  "15080" -> "15084" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/276-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/276-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/276-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/276-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentPlus" {  
-"15088" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
-"15092" [label = <(METHOD_RETURN,ANY)> ]
-  "15088" -> "15092" 
+"15085" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
+"15089" [label = <(METHOD_RETURN,ANY)> ]
+  "15085" -> "15089" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/277-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/277-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/277-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/277-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessThan" {  
-"15093" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
-"15097" [label = <(METHOD_RETURN,ANY)> ]
-  "15093" -> "15097" 
+"15090" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
+"15094" [label = <(METHOD_RETURN,ANY)> ]
+  "15090" -> "15094" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/278-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/278-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/278-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/278-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.cast" {  
-"15098" [label = <(METHOD,&lt;operator&gt;.cast)> ]
-"15102" [label = <(METHOD_RETURN,ANY)> ]
-  "15098" -> "15102" 
+"15095" [label = <(METHOD,&lt;operator&gt;.cast)> ]
+"15099" [label = <(METHOD_RETURN,ANY)> ]
+  "15095" -> "15099" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/279-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/279-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/279-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/279-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.subtraction" {  
-"15103" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
-"15107" [label = <(METHOD_RETURN,ANY)> ]
-  "15103" -> "15107" 
+"15100" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
+"15104" [label = <(METHOD_RETURN,ANY)> ]
+  "15100" -> "15104" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/28-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/28-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/28-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/28-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,22 +1,22 @@
 digraph "FromReflectedMethod" {  
-"722" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>557</SUB>> ]
-"741" [label = <(soa,soa(env))<SUB>558</SUB>> ]
-"743" [label = <(RETURN,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));)<SUB>559</SUB>> ]
-"744" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method)))<SUB>559</SUB>> ]
-"745" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>559</SUB>> ]
-"748" [label = <(ArtMethod::FromReflectedMethod,ArtMethod::FromReflectedMethod(soa, jlr_method))<SUB>559</SUB>> ]
-"726" [label = <(UNLIKELY,UNLIKELY((jlr_method) == nullptr))<SUB>557</SUB>> ]
-"747" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>559</SUB>> ]
-"749" [label = <(&lt;operator&gt;.fieldAccess,ArtMethod::FromReflectedMethod)<SUB>559</SUB>> ]
-"727" [label = <(&lt;operator&gt;.equals,(jlr_method) == nullptr)<SUB>557</SUB>> ]
-"731" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_method),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_method == null&quot;))<SUB>557</SUB>> ]
-"738" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_method),CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>557</SUB>> ]
-"751" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>559</SUB>> ]
-"732" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>557</SUB>> ]
-"733" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>557</SUB>> ]
-"735" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>557</SUB>> ]
-"718" [label = <(METHOD,FromReflectedMethod)<SUB>556</SUB>> ]
-"754" [label = <(METHOD_RETURN,jmethodID)<SUB>556</SUB>> ]
+"722" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>556</SUB>> ]
+"741" [label = <(soa,soa(env))<SUB>557</SUB>> ]
+"743" [label = <(RETURN,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));)<SUB>558</SUB>> ]
+"744" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method)))<SUB>558</SUB>> ]
+"745" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>558</SUB>> ]
+"748" [label = <(ArtMethod::FromReflectedMethod,ArtMethod::FromReflectedMethod(soa, jlr_method))<SUB>558</SUB>> ]
+"726" [label = <(UNLIKELY,UNLIKELY((jlr_method) == nullptr))<SUB>556</SUB>> ]
+"747" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>558</SUB>> ]
+"749" [label = <(&lt;operator&gt;.fieldAccess,ArtMethod::FromReflectedMethod)<SUB>558</SUB>> ]
+"727" [label = <(&lt;operator&gt;.equals,(jlr_method) == nullptr)<SUB>556</SUB>> ]
+"731" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_method),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_method == null&quot;))<SUB>556</SUB>> ]
+"738" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_method),CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>556</SUB>> ]
+"751" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>558</SUB>> ]
+"732" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>556</SUB>> ]
+"733" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>556</SUB>> ]
+"735" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>556</SUB>> ]
+"718" [label = <(METHOD,FromReflectedMethod)<SUB>555</SUB>> ]
+"754" [label = <(METHOD_RETURN,jmethodID)<SUB>555</SUB>> ]
   "722" -> "727" 
   "722" -> "741" 
   "741" -> "747" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/280-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/280-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/280-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/280-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.conditional" {  
-"15108" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
-"15113" [label = <(METHOD_RETURN,ANY)> ]
-  "15108" -> "15113" 
+"15105" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
+"15110" [label = <(METHOD_RETURN,ANY)> ]
+  "15105" -> "15110" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/281-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/281-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/281-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/281-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "bad" {  
-"15114" [label = <(METHOD,bad)> ]
-"15116" [label = <(METHOD_RETURN,ANY)> ]
-  "15114" -> "15116" 
+"15111" [label = <(METHOD,bad)> ]
+"15113" [label = <(METHOD_RETURN,ANY)> ]
+  "15111" -> "15113" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/282-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/282-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/282-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/282-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalAnd" {  
-"15117" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
-"15121" [label = <(METHOD_RETURN,ANY)> ]
-  "15117" -> "15121" 
+"15114" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
+"15118" [label = <(METHOD_RETURN,ANY)> ]
+  "15114" -> "15118" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/283-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/283-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/283-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/283-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.fieldAccess" {  
-"15122" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
-"15126" [label = <(METHOD_RETURN,ANY)> ]
-  "15122" -> "15126" 
+"15119" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
+"15123" [label = <(METHOD_RETURN,ANY)> ]
+  "15119" -> "15123" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/284-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/284-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/284-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/284-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "is_ascii" {  
-"15127" [label = <(METHOD,is_ascii)> ]
-"15129" [label = <(METHOD_RETURN,ANY)> ]
-  "15127" -> "15129" 
+"15124" [label = <(METHOD,is_ascii)> ]
+"15126" [label = <(METHOD_RETURN,ANY)> ]
+  "15124" -> "15126" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/285-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/285-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/285-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/285-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "GetInstrumentation" {  
-"15130" [label = <(METHOD,GetInstrumentation)> ]
-"15133" [label = <(METHOD_RETURN,ANY)> ]
-  "15130" -> "15133" 
+"15127" [label = <(METHOD,GetInstrumentation)> ]
+"15130" [label = <(METHOD_RETURN,ANY)> ]
+  "15127" -> "15130" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/286-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/286-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/286-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/286-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectFieldAccess" {  
-"15134" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
-"15138" [label = <(METHOD_RETURN,ANY)> ]
-  "15134" -> "15138" 
+"15131" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
+"15135" [label = <(METHOD_RETURN,ANY)> ]
+  "15131" -> "15135" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/287-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/287-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/287-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/287-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "Runtime::Current" {  
-"15139" [label = <(METHOD,Runtime::Current)> ]
-"15142" [label = <(METHOD_RETURN,ANY)> ]
-  "15139" -> "15142" 
+"15136" [label = <(METHOD,Runtime::Current)> ]
+"15139" [label = <(METHOD_RETURN,ANY)> ]
+  "15136" -> "15139" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/288-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/288-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/288-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/288-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectIndexAccess" {  
-"15143" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
-"15147" [label = <(METHOD_RETURN,ANY)> ]
-  "15143" -> "15147" 
+"15140" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
+"15144" [label = <(METHOD_RETURN,ANY)> ]
+  "15140" -> "15144" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/289-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/289-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/289-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/289-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "find" {  
-"15148" [label = <(METHOD,find)> ]
-"15152" [label = <(METHOD_RETURN,ANY)> ]
-  "15148" -> "15152" 
+"15145" [label = <(METHOD,find)> ]
+"15149" [label = <(METHOD_RETURN,ANY)> ]
+  "15145" -> "15149" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/29-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/29-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/29-cfg.dot	2023-06-07 19:34:35.047389625 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/29-cfg.dot	2023-06-07 19:34:41.567389024 +0330
@@ -1,54 +1,54 @@
 digraph "FromReflectedField" {  
-"760" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>563</SUB>> ]
-"779" [label = <(soa,soa(env))<SUB>564</SUB>> ]
-"781" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj_field = soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>565</SUB>> ]
-"813" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Field&gt; field = ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>570</SUB>> ]
-"832" [label = <(RETURN,return jni::EncodeArtField(field-&gt;GetArtField());,return jni::EncodeArtField(field-&gt;GetArtField());)<SUB>571</SUB>> ]
-"782" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj_field)<SUB>565</SUB>> ]
-"789" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>565</SUB>> ]
-"799" [label = <(&lt;operator&gt;.notEquals,obj_field-&gt;GetClass() != mirror::Field::StaticClass())<SUB>566</SUB>> ]
-"814" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt; field)<SUB>570</SUB>> ]
-"821" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>570</SUB>> ]
-"833" [label = <(jni::EncodeArtField,jni::EncodeArtField(field-&gt;GetArtField()))<SUB>571</SUB>> ]
-"783" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>565</SUB>> ]
-"790" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>565</SUB>> ]
-"800" [label = <(GetClass,obj_field-&gt;GetClass())<SUB>566</SUB>> ]
-"804" [label = <(mirror::Field::StaticClass,mirror::Field::StaticClass())<SUB>566</SUB>> ]
-"811" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>568</SUB>> ]
-"815" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>570</SUB>> ]
-"822" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>570</SUB>> ]
-"827" [label = <(::DownCast,::DownCast(obj_field))<SUB>570</SUB>> ]
-"834" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtField)<SUB>571</SUB>> ]
-"837" [label = <(GetArtField,field-&gt;GetArtField())<SUB>571</SUB>> ]
-"764" [label = <(UNLIKELY,UNLIKELY((jlr_field) == nullptr))<SUB>563</SUB>> ]
-"785" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>565</SUB>> ]
-"791" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>565</SUB>> ]
-"794" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>565</SUB>> ]
-"801" [label = <(&lt;operator&gt;.indirectFieldAccess,obj_field-&gt;GetClass)<SUB>566</SUB>> ]
-"805" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::StaticClass)<SUB>566</SUB>> ]
-"817" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>570</SUB>> ]
-"824" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>570</SUB>> ]
-"828" [label = <(&lt;operator&gt;.fieldAccess,::DownCast)<SUB>570</SUB>> ]
-"836" [label = <(FIELD_IDENTIFIER,EncodeArtField,EncodeArtField)<SUB>571</SUB>> ]
-"838" [label = <(&lt;operator&gt;.indirectFieldAccess,field-&gt;GetArtField)<SUB>571</SUB>> ]
-"765" [label = <(&lt;operator&gt;.equals,(jlr_field) == nullptr)<SUB>563</SUB>> ]
-"769" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_field),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_field == null&quot;))<SUB>563</SUB>> ]
-"776" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_field),CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>563</SUB>> ]
-"787" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>565</SUB>> ]
-"793" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>565</SUB>> ]
-"796" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>565</SUB>> ]
-"803" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>566</SUB>> ]
-"806" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>566</SUB>> ]
-"809" [label = <(FIELD_IDENTIFIER,StaticClass,StaticClass)<SUB>566</SUB>> ]
-"819" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>570</SUB>> ]
-"826" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>570</SUB>> ]
-"830" [label = <(FIELD_IDENTIFIER,DownCast,DownCast)<SUB>570</SUB>> ]
-"840" [label = <(FIELD_IDENTIFIER,GetArtField,GetArtField)<SUB>571</SUB>> ]
-"770" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>563</SUB>> ]
-"771" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>563</SUB>> ]
-"773" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>563</SUB>> ]
-"756" [label = <(METHOD,FromReflectedField)<SUB>562</SUB>> ]
-"841" [label = <(METHOD_RETURN,jfieldID)<SUB>562</SUB>> ]
+"760" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>562</SUB>> ]
+"779" [label = <(soa,soa(env))<SUB>563</SUB>> ]
+"781" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj_field = soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>564</SUB>> ]
+"813" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Field&gt; field = ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>569</SUB>> ]
+"832" [label = <(RETURN,return jni::EncodeArtField(field-&gt;GetArtField());,return jni::EncodeArtField(field-&gt;GetArtField());)<SUB>570</SUB>> ]
+"782" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj_field)<SUB>564</SUB>> ]
+"789" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>564</SUB>> ]
+"799" [label = <(&lt;operator&gt;.notEquals,obj_field-&gt;GetClass() != mirror::Field::StaticClass())<SUB>565</SUB>> ]
+"814" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt; field)<SUB>569</SUB>> ]
+"821" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>569</SUB>> ]
+"833" [label = <(jni::EncodeArtField,jni::EncodeArtField(field-&gt;GetArtField()))<SUB>570</SUB>> ]
+"783" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>564</SUB>> ]
+"790" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>564</SUB>> ]
+"800" [label = <(GetClass,obj_field-&gt;GetClass())<SUB>565</SUB>> ]
+"804" [label = <(mirror::Field::StaticClass,mirror::Field::StaticClass())<SUB>565</SUB>> ]
+"811" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>567</SUB>> ]
+"815" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>569</SUB>> ]
+"822" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>569</SUB>> ]
+"827" [label = <(::DownCast,::DownCast(obj_field))<SUB>569</SUB>> ]
+"834" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtField)<SUB>570</SUB>> ]
+"837" [label = <(GetArtField,field-&gt;GetArtField())<SUB>570</SUB>> ]
+"764" [label = <(UNLIKELY,UNLIKELY((jlr_field) == nullptr))<SUB>562</SUB>> ]
+"785" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>564</SUB>> ]
+"791" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>564</SUB>> ]
+"794" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>564</SUB>> ]
+"801" [label = <(&lt;operator&gt;.indirectFieldAccess,obj_field-&gt;GetClass)<SUB>565</SUB>> ]
+"805" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::StaticClass)<SUB>565</SUB>> ]
+"817" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>569</SUB>> ]
+"824" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>569</SUB>> ]
+"828" [label = <(&lt;operator&gt;.fieldAccess,::DownCast)<SUB>569</SUB>> ]
+"836" [label = <(FIELD_IDENTIFIER,EncodeArtField,EncodeArtField)<SUB>570</SUB>> ]
+"838" [label = <(&lt;operator&gt;.indirectFieldAccess,field-&gt;GetArtField)<SUB>570</SUB>> ]
+"765" [label = <(&lt;operator&gt;.equals,(jlr_field) == nullptr)<SUB>562</SUB>> ]
+"769" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_field),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_field == null&quot;))<SUB>562</SUB>> ]
+"776" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_field),CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>562</SUB>> ]
+"787" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>564</SUB>> ]
+"793" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>564</SUB>> ]
+"796" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>564</SUB>> ]
+"803" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>565</SUB>> ]
+"806" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>565</SUB>> ]
+"809" [label = <(FIELD_IDENTIFIER,StaticClass,StaticClass)<SUB>565</SUB>> ]
+"819" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>569</SUB>> ]
+"826" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>569</SUB>> ]
+"830" [label = <(FIELD_IDENTIFIER,DownCast,DownCast)<SUB>569</SUB>> ]
+"840" [label = <(FIELD_IDENTIFIER,GetArtField,GetArtField)<SUB>570</SUB>> ]
+"770" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>562</SUB>> ]
+"771" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>562</SUB>> ]
+"773" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>562</SUB>> ]
+"756" [label = <(METHOD,FromReflectedField)<SUB>561</SUB>> ]
+"841" [label = <(METHOD_RETURN,jfieldID)<SUB>561</SUB>> ]
   "760" -> "765" 
   "760" -> "779" 
   "779" -> "787" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/290-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/290-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/290-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/290-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.shiftLeft" {  
-"15153" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
-"15157" [label = <(METHOD_RETURN,ANY)> ]
-  "15153" -> "15157" 
+"15150" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
+"15154" [label = <(METHOD_RETURN,ANY)> ]
+  "15150" -> "15154" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/291-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/291-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/291-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/291-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "LOG" {  
-"15158" [label = <(METHOD,LOG)> ]
-"15161" [label = <(METHOD_RETURN,ANY)> ]
-  "15158" -> "15161" 
+"15155" [label = <(METHOD,LOG)> ]
+"15158" [label = <(METHOD_RETURN,ANY)> ]
+  "15155" -> "15158" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/292-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/292-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/292-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/292-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "std::replace" {  
-"15162" [label = <(METHOD,std::replace)> ]
-"15169" [label = <(METHOD_RETURN,ANY)> ]
-  "15162" -> "15169" 
+"15159" [label = <(METHOD,std::replace)> ]
+"15166" [label = <(METHOD_RETURN,ANY)> ]
+  "15159" -> "15166" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/293-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/293-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/293-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/293-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "begin" {  
-"15170" [label = <(METHOD,begin)> ]
-"15173" [label = <(METHOD_RETURN,ANY)> ]
-  "15170" -> "15173" 
+"15167" [label = <(METHOD,begin)> ]
+"15170" [label = <(METHOD_RETURN,ANY)> ]
+  "15167" -> "15170" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/294-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/294-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/294-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/294-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "end" {  
-"15174" [label = <(METHOD,end)> ]
-"15177" [label = <(METHOD_RETURN,ANY)> ]
-  "15174" -> "15177" 
+"15171" [label = <(METHOD,end)> ]
+"15174" [label = <(METHOD_RETURN,ANY)> ]
+  "15171" -> "15174" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/295-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/295-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/295-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/295-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "h_klass" {  
-"15178" [label = <(METHOD,h_klass)> ]
-"15181" [label = <(METHOD_RETURN,ANY)> ]
-  "15178" -> "15181" 
+"15175" [label = <(METHOD,h_klass)> ]
+"15178" [label = <(METHOD_RETURN,ANY)> ]
+  "15175" -> "15178" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/296-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/296-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/296-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/296-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "NewHandle" {  
-"15182" [label = <(METHOD,NewHandle)> ]
-"15186" [label = <(METHOD_RETURN,ANY)> ]
-  "15182" -> "15186" 
+"15179" [label = <(METHOD,NewHandle)> ]
+"15183" [label = <(METHOD_RETURN,ANY)> ]
+  "15179" -> "15183" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/297-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/297-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/297-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/297-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "GetImagePointerSize" {  
-"15187" [label = <(METHOD,GetImagePointerSize)> ]
-"15190" [label = <(METHOD_RETURN,ANY)> ]
-  "15187" -> "15190" 
+"15184" [label = <(METHOD,GetImagePointerSize)> ]
+"15187" [label = <(METHOD_RETURN,ANY)> ]
+  "15184" -> "15187" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/298-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/298-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/298-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/298-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "GetClassLinker" {  
-"15191" [label = <(METHOD,GetClassLinker)> ]
-"15194" [label = <(METHOD_RETURN,ANY)> ]
-  "15191" -> "15194" 
+"15188" [label = <(METHOD,GetClassLinker)> ]
+"15191" [label = <(METHOD_RETURN,ANY)> ]
+  "15188" -> "15191" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/299-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/299-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/299-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/299-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterThan" {  
-"15195" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
-"15199" [label = <(METHOD_RETURN,ANY)> ]
-  "15195" -> "15199" 
+"15192" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
+"15196" [label = <(METHOD_RETURN,ANY)> ]
+  "15192" -> "15196" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/3-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/3-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/3-cfg.dot	2023-06-07 19:34:35.027389628 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/3-cfg.dot	2023-06-07 19:34:41.547389025 +0330
@@ -1,632 +1,632 @@
 digraph "&lt;global&gt;" {  
-"260" [label = <(UNKNOWN,),))<SUB>209</SUB>> ]
-"261" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>210</SUB>> ]
-"263" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>212</SUB>> ]
-"272" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>213</SUB>> ]
-"273" [label = <(UNKNOWN,},})<SUB>232</SUB>> ]
-"280" [label = <(UNKNOWN,),))<SUB>234</SUB>> ]
-"281" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();)<SUB>235</SUB>> ]
-"282" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj).Ptr(),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj).Ptr(),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 })<SUB>237</SUB>> ]
-"283" [label = <(UNKNOWN,},})<SUB>255</SUB>> ]
-"359" [label = <(UNKNOWN,),))<SUB>285</SUB>> ]
-"360" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;)<SUB>286</SUB>> ]
-"361" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);)<SUB>288</SUB>> ]
-"362" [label = <(UNKNOWN,},})<SUB>294</SUB>> ]
-"371" [label = <(UNKNOWN,),))<SUB>299</SUB>> ]
-"372" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;)<SUB>300</SUB>> ]
-"373" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);)<SUB>305</SUB>> ]
-"374" [label = <(UNKNOWN,},})<SUB>309</SUB>> ]
-"381" [label = <(UNKNOWN,),))<SUB>311</SUB>> ]
-"382" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 },REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 })<SUB>312</SUB>> ]
-"389" [label = <(h_klass,h_klass(hs.NewHandle(klass)))<SUB>317</SUB>> ]
-"395" [label = <(UNKNOWN,if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 },if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 })<SUB>318</SUB>> ]
-"396" [label = <(UNKNOWN,return h_klass.Get();,return h_klass.Get();)<SUB>321</SUB>> ]
-"397" [label = <(UNKNOWN,},})<SUB>322</SUB>> ]
-"407" [label = <(UNKNOWN,),))<SUB>325</SUB>> ]
-"408" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));)<SUB>326</SUB>> ]
-"409" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>328</SUB>> ]
-"411" [label = <(&lt;operator&gt;.assignment,* method = nullptr)<SUB>331</SUB>> ]
-"415" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>332</SUB>> ]
-"427" [label = <(UNKNOWN,if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 },if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 })<SUB>333</SUB>> ]
-"428" [label = <(UNKNOWN,else {\012    method = c-&gt;FindClassMethod(name, sig, pointer_size);\012 },else {\012    method = c-&gt;FindClassMethod(name, sig, pointer_size);\012 })<SUB>335</SUB>> ]
-"429" [label = <(UNKNOWN,if (method != nullptr &amp;&amp; ShouldBlockAccessToMember(method, soa.Self())) {\012    method = nullptr;\012 },if (method != nullptr &amp;&amp; ShouldBlockAccessToMember(method, soa.Self())) {\012    method = nullptr;\012 })<SUB>338</SUB>> ]
-"430" [label = <(UNKNOWN,if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 },if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 })<SUB>341</SUB>> ]
-"431" [label = <(UNKNOWN,return jni::EncodeArtMethod(method);,return jni::EncodeArtMethod(method);)<SUB>345</SUB>> ]
-"432" [label = <(UNKNOWN,},})<SUB>346</SUB>> ]
-"438" [label = <(UNKNOWN,),))<SUB>348</SUB>> ]
-"439" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);)<SUB>349</SUB>> ]
-"440" [label = <(UNKNOWN,if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 },if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 })<SUB>352</SUB>> ]
-"441" [label = <(UNKNOWN,if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 },if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 })<SUB>356</SUB>> ]
-"443" [label = <(&lt;operator&gt;.assignment,class_loader =\012      soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>360</SUB>> ]
-"460" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 return class_loader;\012 },if (class_loader != nullptr) {\012 return class_loader;\012 })<SUB>362</SUB>> ]
-"461" [label = <(UNKNOWN,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());)<SUB>366</SUB>> ]
-"462" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 },if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 })<SUB>367</SUB>> ]
-"463" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>375</SUB>> ]
-"464" [label = <(UNKNOWN,},})<SUB>376</SUB>> ]
-"474" [label = <(UNKNOWN,),))<SUB>379</SUB>> ]
-"475" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());)<SUB>380</SUB>> ]
-"477" [label = <(c,c(\012      hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))))<SUB>382</SUB>> ]
-"496" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>384</SUB>> ]
-"498" [label = <(&lt;operator&gt;.assignment,* field = nullptr)<SUB>387</SUB>> ]
-"503" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>389</SUB>> ]
-"512" [label = <(UNKNOWN,if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 },if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 })<SUB>390</SUB>> ]
-"513" [label = <(UNKNOWN,else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 },else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 })<SUB>393</SUB>> ]
-"514" [label = <(UNKNOWN,if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012    soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 return nullptr;\012 },if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012    soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 return nullptr;\012 })<SUB>396</SUB>> ]
-"516" [label = <(UNKNOWN,if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 },if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>411</SUB>> ]
-"517" [label = <(UNKNOWN,else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 },else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>414</SUB>> ]
-"518" [label = <(UNKNOWN,if (field != nullptr &amp;&amp; ShouldBlockAccessToMember(field, soa.Self())) {\012    field = nullptr;\012 },if (field != nullptr &amp;&amp; ShouldBlockAccessToMember(field, soa.Self())) {\012    field = nullptr;\012 })<SUB>417</SUB>> ]
-"519" [label = <(UNKNOWN,if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 },if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 })<SUB>420</SUB>> ]
-"520" [label = <(UNKNOWN,return jni::EncodeArtField(field);,return jni::EncodeArtField(field);)<SUB>426</SUB>> ]
-"521" [label = <(UNKNOWN,},})<SUB>427</SUB>> ]
-"531" [label = <(UNKNOWN,),))<SUB>430</SUB>> ]
-"532" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());)<SUB>431</SUB>> ]
-"533" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());)<SUB>433</SUB>> ]
-"534" [label = <(UNKNOWN,},})<SUB>436</SUB>> ]
-"543" [label = <(UNKNOWN,),))<SUB>439</SUB>> ]
-"544" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);)<SUB>440</SUB>> ]
-"545" [label = <(UNKNOWN,},})<SUB>444</SUB>> ]
-"554" [label = <(UNKNOWN,),))<SUB>446</SUB>> ]
-"555" [label = <(UNKNOWN,REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012},REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012})<SUB>447</SUB>> ]
-"575" [label = <(UNKNOWN,),))<SUB>517</SUB>> ]
-"576" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();)<SUB>518</SUB>> ]
-"577" [label = <(UNKNOWN,for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 },for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 })<SUB>520</SUB>> ]
-"578" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>525</SUB>> ]
-"579" [label = <(UNKNOWN,},})<SUB>526</SUB>> ]
-"13311" [label = <(UNKNOWN,},})<SUB>2678</SUB>> ]
-"13367" [label = <(UNKNOWN,),))<SUB>2693</SUB>> ]
-"13368" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);)<SUB>2694</SUB>> ]
-"13369" [label = <(UNKNOWN,if (UNLIKELY(ArtArrayT::GetArrayClass() != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012 ArtArrayT::GetArrayClass()-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 },if (UNLIKELY(ArtArrayT::GetArrayClass() != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012 ArtArrayT::GetArrayClass()-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 })<SUB>2696</SUB>> ]
-"13370" [label = <(UNKNOWN,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());)<SUB>2705</SUB>> ]
-"13371" [label = <(UNKNOWN,return array.Ptr();,return array.Ptr();)<SUB>2706</SUB>> ]
-"13372" [label = <(UNKNOWN,},})<SUB>2707</SUB>> ]
-"13545" [label = <(UNKNOWN,),))<SUB>2751</SUB>> ]
-"13546" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);)<SUB>2752</SUB>> ]
-"13548" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2754</SUB>> ]
-"13558" [label = <(&lt;operator&gt;.assignment,is_copy = array_data != elements)<SUB>2755</SUB>> ]
-"13564" [label = <(&lt;operator&gt;.assignment,bytes = array-&gt;GetLength() * component_size)<SUB>2756</SUB>> ]
-"13572" [label = <(UNKNOWN,if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 },if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 })<SUB>2757</SUB>> ]
-"13573" [label = <(UNKNOWN,if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 },if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 })<SUB>2775</SUB>> ]
-"13574" [label = <(UNKNOWN,},})<SUB>2787</SUB>> ]
-"13787" [label = <(UNKNOWN,};,};)<SUB>2828</SUB>> ]
-"13789" [label = <(&lt;operator&gt;.assignment,gJniNativeInterface = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>2830</SUB>> ]
-"14494" [label = <(&lt;operator&gt;.assignment,(*gJniSleepForeverStub[])() = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3070</SUB>> ]
-"14739" [label = <(UNKNOWN,},})<SUB>3310</SUB>> ]
-"228" [label = <(&lt;operator&gt;.assignment,kWarnJniAbort = false)<SUB>161</SUB>> ]
-"231" [label = <(UNKNOWN,static bool IsCallerTrusted(Thread* self) REQUIRES_SHARED(Locks::mutator_lock_) {\012 return hiddenapi::IsCallerTrusted(GetCallingClass(self, /* num_frames */ 1));\012},static bool IsCallerTrusted(Thread* self) REQUIRES_SHARED(Locks::mutator_lock_) {\012 return hiddenapi::IsCallerTrusted(GetCallingClass(self, /* num_frames */ 1));\012})<SUB>163</SUB>> ]
-"232" [label = <(UNKNOWN,template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldBlockAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012  hiddenapi::Action action = hiddenapi::GetMemberAction(\012      member, self, IsCallerTrusted, hiddenapi::kJNI);\012 if (action != hiddenapi::kAllow) {\012    hiddenapi::NotifyHiddenApiListener(member);\012 }\012\012 return action == hiddenapi::kDeny;\012},template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldBlockAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012  hiddenapi::Action action = hiddenapi::GetMemberAction(\012      member, self, IsCallerTrusted, hiddenapi::kJNI);\012 if (action != hiddenapi::kAllow) {\012    hiddenapi::NotifyHiddenApiListener(member);\012 }\012\012 return action == hiddenapi::kDeny;\012})<SUB>167</SUB>> ]
-"240" [label = <(UNKNOWN,),))<SUB>182</SUB>> ]
-"241" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>183</SUB>> ]
-"243" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>185</SUB>> ]
-"252" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>186</SUB>> ]
-"265" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>212</SUB>> ]
-"390" [label = <(NewHandle,hs.NewHandle(klass))<SUB>317</SUB>> ]
-"417" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>332</SUB>> ]
-"445" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>361</SUB>> ]
-"478" [label = <(NewHandle,hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class))))<SUB>383</SUB>> ]
-"505" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>389</SUB>> ]
-"13550" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2754</SUB>> ]
-"13560" [label = <(&lt;operator&gt;.notEquals,array_data != elements)<SUB>2755</SUB>> ]
-"13566" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2756</SUB>> ]
-"13791" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>2830</SUB>> ]
-"14496" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3070</SUB>> ]
-"49" [label = <(&lt;operator&gt;.assignment,kBadUtf8ReplacementChar[] = &quot;?&quot;)<SUB>81</SUB>> ]
-"245" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>185</SUB>> ]
-"266" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>212</SUB>> ]
-"391" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>317</SUB>> ]
-"418" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>332</SUB>> ]
-"446" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ClassLoader)<SUB>361</SUB>> ]
-"453" [label = <(GetSystemClassLoader,Runtime::Current()-&gt;GetSystemClassLoader())<SUB>361</SUB>> ]
-"479" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>383</SUB>> ]
-"482" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>383</SUB>> ]
-"506" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>389</SUB>> ]
-"13551" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2754</SUB>> ]
-"13567" [label = <(GetLength,array-&gt;GetLength())<SUB>2756</SUB>> ]
-"13796" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetVersion)<SUB>2835</SUB>> ]
-"13799" [label = <(&lt;operator&gt;.fieldAccess,JNI::DefineClass)<SUB>2836</SUB>> ]
-"13802" [label = <(&lt;operator&gt;.fieldAccess,JNI::FindClass)<SUB>2837</SUB>> ]
-"13805" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedMethod)<SUB>2838</SUB>> ]
-"13808" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedField)<SUB>2839</SUB>> ]
-"13811" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedMethod)<SUB>2840</SUB>> ]
-"13814" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetSuperclass)<SUB>2841</SUB>> ]
-"13817" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsAssignableFrom)<SUB>2842</SUB>> ]
-"13820" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedField)<SUB>2843</SUB>> ]
-"13823" [label = <(&lt;operator&gt;.fieldAccess,JNI::Throw)<SUB>2844</SUB>> ]
-"13826" [label = <(&lt;operator&gt;.fieldAccess,JNI::ThrowNew)<SUB>2845</SUB>> ]
-"13829" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionOccurred)<SUB>2846</SUB>> ]
-"13832" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionDescribe)<SUB>2847</SUB>> ]
-"13835" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionClear)<SUB>2848</SUB>> ]
-"13838" [label = <(&lt;operator&gt;.fieldAccess,JNI::FatalError)<SUB>2849</SUB>> ]
-"13841" [label = <(&lt;operator&gt;.fieldAccess,JNI::PushLocalFrame)<SUB>2850</SUB>> ]
-"13844" [label = <(&lt;operator&gt;.fieldAccess,JNI::PopLocalFrame)<SUB>2851</SUB>> ]
-"13847" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewGlobalRef)<SUB>2852</SUB>> ]
-"13850" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteGlobalRef)<SUB>2853</SUB>> ]
-"13853" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteLocalRef)<SUB>2854</SUB>> ]
-"13856" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsSameObject)<SUB>2855</SUB>> ]
-"13859" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLocalRef)<SUB>2856</SUB>> ]
-"13862" [label = <(&lt;operator&gt;.fieldAccess,JNI::EnsureLocalCapacity)<SUB>2857</SUB>> ]
-"13865" [label = <(&lt;operator&gt;.fieldAccess,JNI::AllocObject)<SUB>2858</SUB>> ]
-"13868" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObject)<SUB>2859</SUB>> ]
-"13871" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectV)<SUB>2860</SUB>> ]
-"13874" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectA)<SUB>2861</SUB>> ]
-"13877" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectClass)<SUB>2862</SUB>> ]
-"13880" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsInstanceOf)<SUB>2863</SUB>> ]
-"13883" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetMethodID)<SUB>2864</SUB>> ]
-"13886" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethod)<SUB>2865</SUB>> ]
-"13889" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodV)<SUB>2866</SUB>> ]
-"13892" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodA)<SUB>2867</SUB>> ]
-"13895" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethod)<SUB>2868</SUB>> ]
-"13898" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodV)<SUB>2869</SUB>> ]
-"13901" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodA)<SUB>2870</SUB>> ]
-"13904" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethod)<SUB>2871</SUB>> ]
-"13907" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodV)<SUB>2872</SUB>> ]
-"13910" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodA)<SUB>2873</SUB>> ]
-"13913" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethod)<SUB>2874</SUB>> ]
-"13916" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodV)<SUB>2875</SUB>> ]
-"13919" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodA)<SUB>2876</SUB>> ]
-"13922" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethod)<SUB>2877</SUB>> ]
-"13925" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodV)<SUB>2878</SUB>> ]
-"13928" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodA)<SUB>2879</SUB>> ]
-"13931" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethod)<SUB>2880</SUB>> ]
-"13934" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodV)<SUB>2881</SUB>> ]
-"13937" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodA)<SUB>2882</SUB>> ]
-"13940" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethod)<SUB>2883</SUB>> ]
-"13943" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodV)<SUB>2884</SUB>> ]
-"13946" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodA)<SUB>2885</SUB>> ]
-"13949" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethod)<SUB>2886</SUB>> ]
-"13952" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodV)<SUB>2887</SUB>> ]
-"13955" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodA)<SUB>2888</SUB>> ]
-"13958" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethod)<SUB>2889</SUB>> ]
-"13961" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodV)<SUB>2890</SUB>> ]
-"13964" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodA)<SUB>2891</SUB>> ]
-"13967" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethod)<SUB>2892</SUB>> ]
-"13970" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodV)<SUB>2893</SUB>> ]
-"13973" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodA)<SUB>2894</SUB>> ]
-"13976" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethod)<SUB>2895</SUB>> ]
-"13979" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodV)<SUB>2896</SUB>> ]
-"13982" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodA)<SUB>2897</SUB>> ]
-"13985" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethod)<SUB>2898</SUB>> ]
-"13988" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodV)<SUB>2899</SUB>> ]
-"13991" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodA)<SUB>2900</SUB>> ]
-"13994" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethod)<SUB>2901</SUB>> ]
-"13997" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodV)<SUB>2902</SUB>> ]
-"14000" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodA)<SUB>2903</SUB>> ]
-"14003" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethod)<SUB>2904</SUB>> ]
-"14006" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodV)<SUB>2905</SUB>> ]
-"14009" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodA)<SUB>2906</SUB>> ]
-"14012" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethod)<SUB>2907</SUB>> ]
-"14015" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodV)<SUB>2908</SUB>> ]
-"14018" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodA)<SUB>2909</SUB>> ]
-"14021" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethod)<SUB>2910</SUB>> ]
-"14024" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodV)<SUB>2911</SUB>> ]
-"14027" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodA)<SUB>2912</SUB>> ]
-"14030" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethod)<SUB>2913</SUB>> ]
-"14033" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodV)<SUB>2914</SUB>> ]
-"14036" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodA)<SUB>2915</SUB>> ]
-"14039" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethod)<SUB>2916</SUB>> ]
-"14042" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodV)<SUB>2917</SUB>> ]
-"14045" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodA)<SUB>2918</SUB>> ]
-"14048" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethod)<SUB>2919</SUB>> ]
-"14051" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodV)<SUB>2920</SUB>> ]
-"14054" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodA)<SUB>2921</SUB>> ]
-"14057" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethod)<SUB>2922</SUB>> ]
-"14060" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodV)<SUB>2923</SUB>> ]
-"14063" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodA)<SUB>2924</SUB>> ]
-"14066" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFieldID)<SUB>2925</SUB>> ]
-"14069" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectField)<SUB>2926</SUB>> ]
-"14072" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanField)<SUB>2927</SUB>> ]
-"14075" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteField)<SUB>2928</SUB>> ]
-"14078" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharField)<SUB>2929</SUB>> ]
-"14081" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortField)<SUB>2930</SUB>> ]
-"14084" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntField)<SUB>2931</SUB>> ]
-"14087" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongField)<SUB>2932</SUB>> ]
-"14090" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatField)<SUB>2933</SUB>> ]
-"14093" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleField)<SUB>2934</SUB>> ]
-"14096" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectField)<SUB>2935</SUB>> ]
-"14099" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanField)<SUB>2936</SUB>> ]
-"14102" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteField)<SUB>2937</SUB>> ]
-"14105" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharField)<SUB>2938</SUB>> ]
-"14108" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortField)<SUB>2939</SUB>> ]
-"14111" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntField)<SUB>2940</SUB>> ]
-"14114" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongField)<SUB>2941</SUB>> ]
-"14117" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatField)<SUB>2942</SUB>> ]
-"14120" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleField)<SUB>2943</SUB>> ]
-"14123" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticMethodID)<SUB>2944</SUB>> ]
-"14126" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethod)<SUB>2945</SUB>> ]
-"14129" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodV)<SUB>2946</SUB>> ]
-"14132" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodA)<SUB>2947</SUB>> ]
-"14135" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethod)<SUB>2948</SUB>> ]
-"14138" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodV)<SUB>2949</SUB>> ]
-"14141" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodA)<SUB>2950</SUB>> ]
-"14144" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethod)<SUB>2951</SUB>> ]
-"14147" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodV)<SUB>2952</SUB>> ]
-"14150" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodA)<SUB>2953</SUB>> ]
-"14153" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethod)<SUB>2954</SUB>> ]
-"14156" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodV)<SUB>2955</SUB>> ]
-"14159" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodA)<SUB>2956</SUB>> ]
-"14162" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethod)<SUB>2957</SUB>> ]
-"14165" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodV)<SUB>2958</SUB>> ]
-"14168" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodA)<SUB>2959</SUB>> ]
-"14171" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethod)<SUB>2960</SUB>> ]
-"14174" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodV)<SUB>2961</SUB>> ]
-"14177" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodA)<SUB>2962</SUB>> ]
-"14180" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethod)<SUB>2963</SUB>> ]
-"14183" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodV)<SUB>2964</SUB>> ]
-"14186" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodA)<SUB>2965</SUB>> ]
-"14189" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethod)<SUB>2966</SUB>> ]
-"14192" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodV)<SUB>2967</SUB>> ]
-"14195" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodA)<SUB>2968</SUB>> ]
-"14198" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethod)<SUB>2969</SUB>> ]
-"14201" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodV)<SUB>2970</SUB>> ]
-"14204" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodA)<SUB>2971</SUB>> ]
-"14207" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethod)<SUB>2972</SUB>> ]
-"14210" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodV)<SUB>2973</SUB>> ]
-"14213" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodA)<SUB>2974</SUB>> ]
-"14216" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFieldID)<SUB>2975</SUB>> ]
-"14219" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticObjectField)<SUB>2976</SUB>> ]
-"14222" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticBooleanField)<SUB>2977</SUB>> ]
-"14225" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticByteField)<SUB>2978</SUB>> ]
-"14228" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticCharField)<SUB>2979</SUB>> ]
-"14231" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticShortField)<SUB>2980</SUB>> ]
-"14234" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticIntField)<SUB>2981</SUB>> ]
-"14237" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticLongField)<SUB>2982</SUB>> ]
-"14240" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFloatField)<SUB>2983</SUB>> ]
-"14243" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticDoubleField)<SUB>2984</SUB>> ]
-"14246" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticObjectField)<SUB>2985</SUB>> ]
-"14249" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticBooleanField)<SUB>2986</SUB>> ]
-"14252" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticByteField)<SUB>2987</SUB>> ]
-"14255" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticCharField)<SUB>2988</SUB>> ]
-"14258" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticShortField)<SUB>2989</SUB>> ]
-"14261" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticIntField)<SUB>2990</SUB>> ]
-"14264" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticLongField)<SUB>2991</SUB>> ]
-"14267" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticFloatField)<SUB>2992</SUB>> ]
-"14270" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticDoubleField)<SUB>2993</SUB>> ]
-"14273" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewString)<SUB>2994</SUB>> ]
-"14276" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringLength)<SUB>2995</SUB>> ]
-"14279" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringChars)<SUB>2996</SUB>> ]
-"14282" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringChars)<SUB>2997</SUB>> ]
-"14285" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewStringUTF)<SUB>2998</SUB>> ]
-"14288" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFLength)<SUB>2999</SUB>> ]
-"14291" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFChars)<SUB>3000</SUB>> ]
-"14294" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringUTFChars)<SUB>3001</SUB>> ]
-"14297" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetArrayLength)<SUB>3002</SUB>> ]
-"14300" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectArray)<SUB>3003</SUB>> ]
-"14303" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectArrayElement)<SUB>3004</SUB>> ]
-"14306" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectArrayElement)<SUB>3005</SUB>> ]
-"14309" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewBooleanArray)<SUB>3006</SUB>> ]
-"14312" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewByteArray)<SUB>3007</SUB>> ]
-"14315" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewCharArray)<SUB>3008</SUB>> ]
-"14318" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewShortArray)<SUB>3009</SUB>> ]
-"14321" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewIntArray)<SUB>3010</SUB>> ]
-"14324" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLongArray)<SUB>3011</SUB>> ]
-"14327" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewFloatArray)<SUB>3012</SUB>> ]
-"14330" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDoubleArray)<SUB>3013</SUB>> ]
-"14333" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayElements)<SUB>3014</SUB>> ]
-"14336" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayElements)<SUB>3015</SUB>> ]
-"14339" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayElements)<SUB>3016</SUB>> ]
-"14342" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayElements)<SUB>3017</SUB>> ]
-"14345" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayElements)<SUB>3018</SUB>> ]
-"14348" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayElements)<SUB>3019</SUB>> ]
-"14351" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayElements)<SUB>3020</SUB>> ]
-"14354" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayElements)<SUB>3021</SUB>> ]
-"14357" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseBooleanArrayElements)<SUB>3022</SUB>> ]
-"14360" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseByteArrayElements)<SUB>3023</SUB>> ]
-"14363" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseCharArrayElements)<SUB>3024</SUB>> ]
-"14366" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseShortArrayElements)<SUB>3025</SUB>> ]
-"14369" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseIntArrayElements)<SUB>3026</SUB>> ]
-"14372" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseLongArrayElements)<SUB>3027</SUB>> ]
-"14375" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseFloatArrayElements)<SUB>3028</SUB>> ]
-"14378" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseDoubleArrayElements)<SUB>3029</SUB>> ]
-"14381" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayRegion)<SUB>3030</SUB>> ]
-"14384" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayRegion)<SUB>3031</SUB>> ]
-"14387" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayRegion)<SUB>3032</SUB>> ]
-"14390" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayRegion)<SUB>3033</SUB>> ]
-"14393" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayRegion)<SUB>3034</SUB>> ]
-"14396" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayRegion)<SUB>3035</SUB>> ]
-"14399" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayRegion)<SUB>3036</SUB>> ]
-"14402" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayRegion)<SUB>3037</SUB>> ]
-"14405" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanArrayRegion)<SUB>3038</SUB>> ]
-"14408" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteArrayRegion)<SUB>3039</SUB>> ]
-"14411" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharArrayRegion)<SUB>3040</SUB>> ]
-"14414" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortArrayRegion)<SUB>3041</SUB>> ]
-"14417" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntArrayRegion)<SUB>3042</SUB>> ]
-"14420" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongArrayRegion)<SUB>3043</SUB>> ]
-"14423" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatArrayRegion)<SUB>3044</SUB>> ]
-"14426" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleArrayRegion)<SUB>3045</SUB>> ]
-"14429" [label = <(&lt;operator&gt;.fieldAccess,JNI::RegisterNatives)<SUB>3046</SUB>> ]
-"14432" [label = <(&lt;operator&gt;.fieldAccess,JNI::UnregisterNatives)<SUB>3047</SUB>> ]
-"14435" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorEnter)<SUB>3048</SUB>> ]
-"14438" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorExit)<SUB>3049</SUB>> ]
-"14441" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetJavaVM)<SUB>3050</SUB>> ]
-"14444" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringRegion)<SUB>3051</SUB>> ]
-"14447" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFRegion)<SUB>3052</SUB>> ]
-"14450" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetPrimitiveArrayCritical)<SUB>3053</SUB>> ]
-"14453" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleasePrimitiveArrayCritical)<SUB>3054</SUB>> ]
-"14456" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringCritical)<SUB>3055</SUB>> ]
-"14459" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringCritical)<SUB>3056</SUB>> ]
-"14462" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewWeakGlobalRef)<SUB>3057</SUB>> ]
-"14465" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteWeakGlobalRef)<SUB>3058</SUB>> ]
-"14468" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionCheck)<SUB>3059</SUB>> ]
-"14471" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDirectByteBuffer)<SUB>3060</SUB>> ]
-"14474" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferAddress)<SUB>3061</SUB>> ]
-"14477" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferCapacity)<SUB>3062</SUB>> ]
-"14480" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectRefType)<SUB>3063</SUB>> ]
-"246" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>185</SUB>> ]
-"267" [label = <(Runtime::Current,Runtime::Current())<SUB>212</SUB>> ]
-"271" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>212</SUB>> ]
-"393" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>317</SUB>> ]
-"419" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>332</SUB>> ]
-"426" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>332</SUB>> ]
-"447" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>361</SUB>> ]
-"450" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>361</SUB>> ]
-"454" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetSystemClassLoader)<SUB>361</SUB>> ]
-"481" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>383</SUB>> ]
-"483" [label = <(Self,soa.Self())<SUB>383</SUB>> ]
-"487" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(jni_class))<SUB>383</SUB>> ]
-"507" [label = <(Runtime::Current,Runtime::Current())<SUB>389</SUB>> ]
-"511" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>389</SUB>> ]
-"13552" [label = <(Runtime::Current,Runtime::Current())<SUB>2754</SUB>> ]
-"13556" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2754</SUB>> ]
-"13568" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2756</SUB>> ]
-"13798" [label = <(FIELD_IDENTIFIER,GetVersion,GetVersion)<SUB>2835</SUB>> ]
-"13801" [label = <(FIELD_IDENTIFIER,DefineClass,DefineClass)<SUB>2836</SUB>> ]
-"13804" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>2837</SUB>> ]
-"13807" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>2838</SUB>> ]
-"13810" [label = <(FIELD_IDENTIFIER,FromReflectedField,FromReflectedField)<SUB>2839</SUB>> ]
-"13813" [label = <(FIELD_IDENTIFIER,ToReflectedMethod,ToReflectedMethod)<SUB>2840</SUB>> ]
-"13816" [label = <(FIELD_IDENTIFIER,GetSuperclass,GetSuperclass)<SUB>2841</SUB>> ]
-"13819" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2842</SUB>> ]
-"13822" [label = <(FIELD_IDENTIFIER,ToReflectedField,ToReflectedField)<SUB>2843</SUB>> ]
-"13825" [label = <(FIELD_IDENTIFIER,Throw,Throw)<SUB>2844</SUB>> ]
-"13828" [label = <(FIELD_IDENTIFIER,ThrowNew,ThrowNew)<SUB>2845</SUB>> ]
-"13831" [label = <(FIELD_IDENTIFIER,ExceptionOccurred,ExceptionOccurred)<SUB>2846</SUB>> ]
-"13834" [label = <(FIELD_IDENTIFIER,ExceptionDescribe,ExceptionDescribe)<SUB>2847</SUB>> ]
-"13837" [label = <(FIELD_IDENTIFIER,ExceptionClear,ExceptionClear)<SUB>2848</SUB>> ]
-"13840" [label = <(FIELD_IDENTIFIER,FatalError,FatalError)<SUB>2849</SUB>> ]
-"13843" [label = <(FIELD_IDENTIFIER,PushLocalFrame,PushLocalFrame)<SUB>2850</SUB>> ]
-"13846" [label = <(FIELD_IDENTIFIER,PopLocalFrame,PopLocalFrame)<SUB>2851</SUB>> ]
-"13849" [label = <(FIELD_IDENTIFIER,NewGlobalRef,NewGlobalRef)<SUB>2852</SUB>> ]
-"13852" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>2853</SUB>> ]
-"13855" [label = <(FIELD_IDENTIFIER,DeleteLocalRef,DeleteLocalRef)<SUB>2854</SUB>> ]
-"13858" [label = <(FIELD_IDENTIFIER,IsSameObject,IsSameObject)<SUB>2855</SUB>> ]
-"13861" [label = <(FIELD_IDENTIFIER,NewLocalRef,NewLocalRef)<SUB>2856</SUB>> ]
-"13864" [label = <(FIELD_IDENTIFIER,EnsureLocalCapacity,EnsureLocalCapacity)<SUB>2857</SUB>> ]
-"13867" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>2858</SUB>> ]
-"13870" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2859</SUB>> ]
-"13873" [label = <(FIELD_IDENTIFIER,NewObjectV,NewObjectV)<SUB>2860</SUB>> ]
-"13876" [label = <(FIELD_IDENTIFIER,NewObjectA,NewObjectA)<SUB>2861</SUB>> ]
-"13879" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>2862</SUB>> ]
-"13882" [label = <(FIELD_IDENTIFIER,IsInstanceOf,IsInstanceOf)<SUB>2863</SUB>> ]
-"13885" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>2864</SUB>> ]
-"13888" [label = <(FIELD_IDENTIFIER,CallObjectMethod,CallObjectMethod)<SUB>2865</SUB>> ]
-"13891" [label = <(FIELD_IDENTIFIER,CallObjectMethodV,CallObjectMethodV)<SUB>2866</SUB>> ]
-"13894" [label = <(FIELD_IDENTIFIER,CallObjectMethodA,CallObjectMethodA)<SUB>2867</SUB>> ]
-"13897" [label = <(FIELD_IDENTIFIER,CallBooleanMethod,CallBooleanMethod)<SUB>2868</SUB>> ]
-"13900" [label = <(FIELD_IDENTIFIER,CallBooleanMethodV,CallBooleanMethodV)<SUB>2869</SUB>> ]
-"13903" [label = <(FIELD_IDENTIFIER,CallBooleanMethodA,CallBooleanMethodA)<SUB>2870</SUB>> ]
-"13906" [label = <(FIELD_IDENTIFIER,CallByteMethod,CallByteMethod)<SUB>2871</SUB>> ]
-"13909" [label = <(FIELD_IDENTIFIER,CallByteMethodV,CallByteMethodV)<SUB>2872</SUB>> ]
-"13912" [label = <(FIELD_IDENTIFIER,CallByteMethodA,CallByteMethodA)<SUB>2873</SUB>> ]
-"13915" [label = <(FIELD_IDENTIFIER,CallCharMethod,CallCharMethod)<SUB>2874</SUB>> ]
-"13918" [label = <(FIELD_IDENTIFIER,CallCharMethodV,CallCharMethodV)<SUB>2875</SUB>> ]
-"13921" [label = <(FIELD_IDENTIFIER,CallCharMethodA,CallCharMethodA)<SUB>2876</SUB>> ]
-"13924" [label = <(FIELD_IDENTIFIER,CallShortMethod,CallShortMethod)<SUB>2877</SUB>> ]
-"13927" [label = <(FIELD_IDENTIFIER,CallShortMethodV,CallShortMethodV)<SUB>2878</SUB>> ]
-"13930" [label = <(FIELD_IDENTIFIER,CallShortMethodA,CallShortMethodA)<SUB>2879</SUB>> ]
-"13933" [label = <(FIELD_IDENTIFIER,CallIntMethod,CallIntMethod)<SUB>2880</SUB>> ]
-"13936" [label = <(FIELD_IDENTIFIER,CallIntMethodV,CallIntMethodV)<SUB>2881</SUB>> ]
-"13939" [label = <(FIELD_IDENTIFIER,CallIntMethodA,CallIntMethodA)<SUB>2882</SUB>> ]
-"13942" [label = <(FIELD_IDENTIFIER,CallLongMethod,CallLongMethod)<SUB>2883</SUB>> ]
-"13945" [label = <(FIELD_IDENTIFIER,CallLongMethodV,CallLongMethodV)<SUB>2884</SUB>> ]
-"13948" [label = <(FIELD_IDENTIFIER,CallLongMethodA,CallLongMethodA)<SUB>2885</SUB>> ]
-"13951" [label = <(FIELD_IDENTIFIER,CallFloatMethod,CallFloatMethod)<SUB>2886</SUB>> ]
-"13954" [label = <(FIELD_IDENTIFIER,CallFloatMethodV,CallFloatMethodV)<SUB>2887</SUB>> ]
-"13957" [label = <(FIELD_IDENTIFIER,CallFloatMethodA,CallFloatMethodA)<SUB>2888</SUB>> ]
-"13960" [label = <(FIELD_IDENTIFIER,CallDoubleMethod,CallDoubleMethod)<SUB>2889</SUB>> ]
-"13963" [label = <(FIELD_IDENTIFIER,CallDoubleMethodV,CallDoubleMethodV)<SUB>2890</SUB>> ]
-"13966" [label = <(FIELD_IDENTIFIER,CallDoubleMethodA,CallDoubleMethodA)<SUB>2891</SUB>> ]
-"13969" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>2892</SUB>> ]
-"13972" [label = <(FIELD_IDENTIFIER,CallVoidMethodV,CallVoidMethodV)<SUB>2893</SUB>> ]
-"13975" [label = <(FIELD_IDENTIFIER,CallVoidMethodA,CallVoidMethodA)<SUB>2894</SUB>> ]
-"13978" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethod,CallNonvirtualObjectMethod)<SUB>2895</SUB>> ]
-"13981" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodV,CallNonvirtualObjectMethodV)<SUB>2896</SUB>> ]
-"13984" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodA,CallNonvirtualObjectMethodA)<SUB>2897</SUB>> ]
-"13987" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethod,CallNonvirtualBooleanMethod)<SUB>2898</SUB>> ]
-"13990" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodV,CallNonvirtualBooleanMethodV)<SUB>2899</SUB>> ]
-"13993" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodA,CallNonvirtualBooleanMethodA)<SUB>2900</SUB>> ]
-"13996" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethod,CallNonvirtualByteMethod)<SUB>2901</SUB>> ]
-"13999" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodV,CallNonvirtualByteMethodV)<SUB>2902</SUB>> ]
-"14002" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodA,CallNonvirtualByteMethodA)<SUB>2903</SUB>> ]
-"14005" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethod,CallNonvirtualCharMethod)<SUB>2904</SUB>> ]
-"14008" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodV,CallNonvirtualCharMethodV)<SUB>2905</SUB>> ]
-"14011" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodA,CallNonvirtualCharMethodA)<SUB>2906</SUB>> ]
-"14014" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethod,CallNonvirtualShortMethod)<SUB>2907</SUB>> ]
-"14017" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodV,CallNonvirtualShortMethodV)<SUB>2908</SUB>> ]
-"14020" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodA,CallNonvirtualShortMethodA)<SUB>2909</SUB>> ]
-"14023" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethod,CallNonvirtualIntMethod)<SUB>2910</SUB>> ]
-"14026" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodV,CallNonvirtualIntMethodV)<SUB>2911</SUB>> ]
-"14029" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodA,CallNonvirtualIntMethodA)<SUB>2912</SUB>> ]
-"14032" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethod,CallNonvirtualLongMethod)<SUB>2913</SUB>> ]
-"14035" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodV,CallNonvirtualLongMethodV)<SUB>2914</SUB>> ]
-"14038" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodA,CallNonvirtualLongMethodA)<SUB>2915</SUB>> ]
-"14041" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethod,CallNonvirtualFloatMethod)<SUB>2916</SUB>> ]
-"14044" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodV,CallNonvirtualFloatMethodV)<SUB>2917</SUB>> ]
-"14047" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodA,CallNonvirtualFloatMethodA)<SUB>2918</SUB>> ]
-"14050" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethod,CallNonvirtualDoubleMethod)<SUB>2919</SUB>> ]
-"14053" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodV,CallNonvirtualDoubleMethodV)<SUB>2920</SUB>> ]
-"14056" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodA,CallNonvirtualDoubleMethodA)<SUB>2921</SUB>> ]
-"14059" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethod,CallNonvirtualVoidMethod)<SUB>2922</SUB>> ]
-"14062" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV)<SUB>2923</SUB>> ]
-"14065" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA)<SUB>2924</SUB>> ]
-"14068" [label = <(FIELD_IDENTIFIER,GetFieldID,GetFieldID)<SUB>2925</SUB>> ]
-"14071" [label = <(FIELD_IDENTIFIER,GetObjectField,GetObjectField)<SUB>2926</SUB>> ]
-"14074" [label = <(FIELD_IDENTIFIER,GetBooleanField,GetBooleanField)<SUB>2927</SUB>> ]
-"14077" [label = <(FIELD_IDENTIFIER,GetByteField,GetByteField)<SUB>2928</SUB>> ]
-"14080" [label = <(FIELD_IDENTIFIER,GetCharField,GetCharField)<SUB>2929</SUB>> ]
-"14083" [label = <(FIELD_IDENTIFIER,GetShortField,GetShortField)<SUB>2930</SUB>> ]
-"14086" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2931</SUB>> ]
-"14089" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2932</SUB>> ]
-"14092" [label = <(FIELD_IDENTIFIER,GetFloatField,GetFloatField)<SUB>2933</SUB>> ]
-"14095" [label = <(FIELD_IDENTIFIER,GetDoubleField,GetDoubleField)<SUB>2934</SUB>> ]
-"14098" [label = <(FIELD_IDENTIFIER,SetObjectField,SetObjectField)<SUB>2935</SUB>> ]
-"14101" [label = <(FIELD_IDENTIFIER,SetBooleanField,SetBooleanField)<SUB>2936</SUB>> ]
-"14104" [label = <(FIELD_IDENTIFIER,SetByteField,SetByteField)<SUB>2937</SUB>> ]
-"14107" [label = <(FIELD_IDENTIFIER,SetCharField,SetCharField)<SUB>2938</SUB>> ]
-"14110" [label = <(FIELD_IDENTIFIER,SetShortField,SetShortField)<SUB>2939</SUB>> ]
-"14113" [label = <(FIELD_IDENTIFIER,SetIntField,SetIntField)<SUB>2940</SUB>> ]
-"14116" [label = <(FIELD_IDENTIFIER,SetLongField,SetLongField)<SUB>2941</SUB>> ]
-"14119" [label = <(FIELD_IDENTIFIER,SetFloatField,SetFloatField)<SUB>2942</SUB>> ]
-"14122" [label = <(FIELD_IDENTIFIER,SetDoubleField,SetDoubleField)<SUB>2943</SUB>> ]
-"14125" [label = <(FIELD_IDENTIFIER,GetStaticMethodID,GetStaticMethodID)<SUB>2944</SUB>> ]
-"14128" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethod,CallStaticObjectMethod)<SUB>2945</SUB>> ]
-"14131" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodV,CallStaticObjectMethodV)<SUB>2946</SUB>> ]
-"14134" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodA,CallStaticObjectMethodA)<SUB>2947</SUB>> ]
-"14137" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethod,CallStaticBooleanMethod)<SUB>2948</SUB>> ]
-"14140" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodV,CallStaticBooleanMethodV)<SUB>2949</SUB>> ]
-"14143" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodA,CallStaticBooleanMethodA)<SUB>2950</SUB>> ]
-"14146" [label = <(FIELD_IDENTIFIER,CallStaticByteMethod,CallStaticByteMethod)<SUB>2951</SUB>> ]
-"14149" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodV,CallStaticByteMethodV)<SUB>2952</SUB>> ]
-"14152" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodA,CallStaticByteMethodA)<SUB>2953</SUB>> ]
-"14155" [label = <(FIELD_IDENTIFIER,CallStaticCharMethod,CallStaticCharMethod)<SUB>2954</SUB>> ]
-"14158" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodV,CallStaticCharMethodV)<SUB>2955</SUB>> ]
-"14161" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodA,CallStaticCharMethodA)<SUB>2956</SUB>> ]
-"14164" [label = <(FIELD_IDENTIFIER,CallStaticShortMethod,CallStaticShortMethod)<SUB>2957</SUB>> ]
-"14167" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodV,CallStaticShortMethodV)<SUB>2958</SUB>> ]
-"14170" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodA,CallStaticShortMethodA)<SUB>2959</SUB>> ]
-"14173" [label = <(FIELD_IDENTIFIER,CallStaticIntMethod,CallStaticIntMethod)<SUB>2960</SUB>> ]
-"14176" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodV,CallStaticIntMethodV)<SUB>2961</SUB>> ]
-"14179" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodA,CallStaticIntMethodA)<SUB>2962</SUB>> ]
-"14182" [label = <(FIELD_IDENTIFIER,CallStaticLongMethod,CallStaticLongMethod)<SUB>2963</SUB>> ]
-"14185" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodV,CallStaticLongMethodV)<SUB>2964</SUB>> ]
-"14188" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodA,CallStaticLongMethodA)<SUB>2965</SUB>> ]
-"14191" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethod,CallStaticFloatMethod)<SUB>2966</SUB>> ]
-"14194" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodV,CallStaticFloatMethodV)<SUB>2967</SUB>> ]
-"14197" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodA,CallStaticFloatMethodA)<SUB>2968</SUB>> ]
-"14200" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethod,CallStaticDoubleMethod)<SUB>2969</SUB>> ]
-"14203" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodV,CallStaticDoubleMethodV)<SUB>2970</SUB>> ]
-"14206" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodA,CallStaticDoubleMethodA)<SUB>2971</SUB>> ]
-"14209" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethod,CallStaticVoidMethod)<SUB>2972</SUB>> ]
-"14212" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodV,CallStaticVoidMethodV)<SUB>2973</SUB>> ]
-"14215" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodA,CallStaticVoidMethodA)<SUB>2974</SUB>> ]
-"14218" [label = <(FIELD_IDENTIFIER,GetStaticFieldID,GetStaticFieldID)<SUB>2975</SUB>> ]
-"14221" [label = <(FIELD_IDENTIFIER,GetStaticObjectField,GetStaticObjectField)<SUB>2976</SUB>> ]
-"14224" [label = <(FIELD_IDENTIFIER,GetStaticBooleanField,GetStaticBooleanField)<SUB>2977</SUB>> ]
-"14227" [label = <(FIELD_IDENTIFIER,GetStaticByteField,GetStaticByteField)<SUB>2978</SUB>> ]
-"14230" [label = <(FIELD_IDENTIFIER,GetStaticCharField,GetStaticCharField)<SUB>2979</SUB>> ]
-"14233" [label = <(FIELD_IDENTIFIER,GetStaticShortField,GetStaticShortField)<SUB>2980</SUB>> ]
-"14236" [label = <(FIELD_IDENTIFIER,GetStaticIntField,GetStaticIntField)<SUB>2981</SUB>> ]
-"14239" [label = <(FIELD_IDENTIFIER,GetStaticLongField,GetStaticLongField)<SUB>2982</SUB>> ]
-"14242" [label = <(FIELD_IDENTIFIER,GetStaticFloatField,GetStaticFloatField)<SUB>2983</SUB>> ]
-"14245" [label = <(FIELD_IDENTIFIER,GetStaticDoubleField,GetStaticDoubleField)<SUB>2984</SUB>> ]
-"14248" [label = <(FIELD_IDENTIFIER,SetStaticObjectField,SetStaticObjectField)<SUB>2985</SUB>> ]
-"14251" [label = <(FIELD_IDENTIFIER,SetStaticBooleanField,SetStaticBooleanField)<SUB>2986</SUB>> ]
-"14254" [label = <(FIELD_IDENTIFIER,SetStaticByteField,SetStaticByteField)<SUB>2987</SUB>> ]
-"14257" [label = <(FIELD_IDENTIFIER,SetStaticCharField,SetStaticCharField)<SUB>2988</SUB>> ]
-"14260" [label = <(FIELD_IDENTIFIER,SetStaticShortField,SetStaticShortField)<SUB>2989</SUB>> ]
-"14263" [label = <(FIELD_IDENTIFIER,SetStaticIntField,SetStaticIntField)<SUB>2990</SUB>> ]
-"14266" [label = <(FIELD_IDENTIFIER,SetStaticLongField,SetStaticLongField)<SUB>2991</SUB>> ]
-"14269" [label = <(FIELD_IDENTIFIER,SetStaticFloatField,SetStaticFloatField)<SUB>2992</SUB>> ]
-"14272" [label = <(FIELD_IDENTIFIER,SetStaticDoubleField,SetStaticDoubleField)<SUB>2993</SUB>> ]
-"14275" [label = <(FIELD_IDENTIFIER,NewString,NewString)<SUB>2994</SUB>> ]
-"14278" [label = <(FIELD_IDENTIFIER,GetStringLength,GetStringLength)<SUB>2995</SUB>> ]
-"14281" [label = <(FIELD_IDENTIFIER,GetStringChars,GetStringChars)<SUB>2996</SUB>> ]
-"14284" [label = <(FIELD_IDENTIFIER,ReleaseStringChars,ReleaseStringChars)<SUB>2997</SUB>> ]
-"14287" [label = <(FIELD_IDENTIFIER,NewStringUTF,NewStringUTF)<SUB>2998</SUB>> ]
-"14290" [label = <(FIELD_IDENTIFIER,GetStringUTFLength,GetStringUTFLength)<SUB>2999</SUB>> ]
-"14293" [label = <(FIELD_IDENTIFIER,GetStringUTFChars,GetStringUTFChars)<SUB>3000</SUB>> ]
-"14296" [label = <(FIELD_IDENTIFIER,ReleaseStringUTFChars,ReleaseStringUTFChars)<SUB>3001</SUB>> ]
-"14299" [label = <(FIELD_IDENTIFIER,GetArrayLength,GetArrayLength)<SUB>3002</SUB>> ]
-"14302" [label = <(FIELD_IDENTIFIER,NewObjectArray,NewObjectArray)<SUB>3003</SUB>> ]
-"14305" [label = <(FIELD_IDENTIFIER,GetObjectArrayElement,GetObjectArrayElement)<SUB>3004</SUB>> ]
-"14308" [label = <(FIELD_IDENTIFIER,SetObjectArrayElement,SetObjectArrayElement)<SUB>3005</SUB>> ]
-"14311" [label = <(FIELD_IDENTIFIER,NewBooleanArray,NewBooleanArray)<SUB>3006</SUB>> ]
-"14314" [label = <(FIELD_IDENTIFIER,NewByteArray,NewByteArray)<SUB>3007</SUB>> ]
-"14317" [label = <(FIELD_IDENTIFIER,NewCharArray,NewCharArray)<SUB>3008</SUB>> ]
-"14320" [label = <(FIELD_IDENTIFIER,NewShortArray,NewShortArray)<SUB>3009</SUB>> ]
-"14323" [label = <(FIELD_IDENTIFIER,NewIntArray,NewIntArray)<SUB>3010</SUB>> ]
-"14326" [label = <(FIELD_IDENTIFIER,NewLongArray,NewLongArray)<SUB>3011</SUB>> ]
-"14329" [label = <(FIELD_IDENTIFIER,NewFloatArray,NewFloatArray)<SUB>3012</SUB>> ]
-"14332" [label = <(FIELD_IDENTIFIER,NewDoubleArray,NewDoubleArray)<SUB>3013</SUB>> ]
-"14335" [label = <(FIELD_IDENTIFIER,GetBooleanArrayElements,GetBooleanArrayElements)<SUB>3014</SUB>> ]
-"14338" [label = <(FIELD_IDENTIFIER,GetByteArrayElements,GetByteArrayElements)<SUB>3015</SUB>> ]
-"14341" [label = <(FIELD_IDENTIFIER,GetCharArrayElements,GetCharArrayElements)<SUB>3016</SUB>> ]
-"14344" [label = <(FIELD_IDENTIFIER,GetShortArrayElements,GetShortArrayElements)<SUB>3017</SUB>> ]
-"14347" [label = <(FIELD_IDENTIFIER,GetIntArrayElements,GetIntArrayElements)<SUB>3018</SUB>> ]
-"14350" [label = <(FIELD_IDENTIFIER,GetLongArrayElements,GetLongArrayElements)<SUB>3019</SUB>> ]
-"14353" [label = <(FIELD_IDENTIFIER,GetFloatArrayElements,GetFloatArrayElements)<SUB>3020</SUB>> ]
-"14356" [label = <(FIELD_IDENTIFIER,GetDoubleArrayElements,GetDoubleArrayElements)<SUB>3021</SUB>> ]
-"14359" [label = <(FIELD_IDENTIFIER,ReleaseBooleanArrayElements,ReleaseBooleanArrayElements)<SUB>3022</SUB>> ]
-"14362" [label = <(FIELD_IDENTIFIER,ReleaseByteArrayElements,ReleaseByteArrayElements)<SUB>3023</SUB>> ]
-"14365" [label = <(FIELD_IDENTIFIER,ReleaseCharArrayElements,ReleaseCharArrayElements)<SUB>3024</SUB>> ]
-"14368" [label = <(FIELD_IDENTIFIER,ReleaseShortArrayElements,ReleaseShortArrayElements)<SUB>3025</SUB>> ]
-"14371" [label = <(FIELD_IDENTIFIER,ReleaseIntArrayElements,ReleaseIntArrayElements)<SUB>3026</SUB>> ]
-"14374" [label = <(FIELD_IDENTIFIER,ReleaseLongArrayElements,ReleaseLongArrayElements)<SUB>3027</SUB>> ]
-"14377" [label = <(FIELD_IDENTIFIER,ReleaseFloatArrayElements,ReleaseFloatArrayElements)<SUB>3028</SUB>> ]
-"14380" [label = <(FIELD_IDENTIFIER,ReleaseDoubleArrayElements,ReleaseDoubleArrayElements)<SUB>3029</SUB>> ]
-"14383" [label = <(FIELD_IDENTIFIER,GetBooleanArrayRegion,GetBooleanArrayRegion)<SUB>3030</SUB>> ]
-"14386" [label = <(FIELD_IDENTIFIER,GetByteArrayRegion,GetByteArrayRegion)<SUB>3031</SUB>> ]
-"14389" [label = <(FIELD_IDENTIFIER,GetCharArrayRegion,GetCharArrayRegion)<SUB>3032</SUB>> ]
-"14392" [label = <(FIELD_IDENTIFIER,GetShortArrayRegion,GetShortArrayRegion)<SUB>3033</SUB>> ]
-"14395" [label = <(FIELD_IDENTIFIER,GetIntArrayRegion,GetIntArrayRegion)<SUB>3034</SUB>> ]
-"14398" [label = <(FIELD_IDENTIFIER,GetLongArrayRegion,GetLongArrayRegion)<SUB>3035</SUB>> ]
-"14401" [label = <(FIELD_IDENTIFIER,GetFloatArrayRegion,GetFloatArrayRegion)<SUB>3036</SUB>> ]
-"14404" [label = <(FIELD_IDENTIFIER,GetDoubleArrayRegion,GetDoubleArrayRegion)<SUB>3037</SUB>> ]
-"14407" [label = <(FIELD_IDENTIFIER,SetBooleanArrayRegion,SetBooleanArrayRegion)<SUB>3038</SUB>> ]
-"14410" [label = <(FIELD_IDENTIFIER,SetByteArrayRegion,SetByteArrayRegion)<SUB>3039</SUB>> ]
-"14413" [label = <(FIELD_IDENTIFIER,SetCharArrayRegion,SetCharArrayRegion)<SUB>3040</SUB>> ]
-"14416" [label = <(FIELD_IDENTIFIER,SetShortArrayRegion,SetShortArrayRegion)<SUB>3041</SUB>> ]
-"14419" [label = <(FIELD_IDENTIFIER,SetIntArrayRegion,SetIntArrayRegion)<SUB>3042</SUB>> ]
-"14422" [label = <(FIELD_IDENTIFIER,SetLongArrayRegion,SetLongArrayRegion)<SUB>3043</SUB>> ]
-"14425" [label = <(FIELD_IDENTIFIER,SetFloatArrayRegion,SetFloatArrayRegion)<SUB>3044</SUB>> ]
-"14428" [label = <(FIELD_IDENTIFIER,SetDoubleArrayRegion,SetDoubleArrayRegion)<SUB>3045</SUB>> ]
-"14431" [label = <(FIELD_IDENTIFIER,RegisterNatives,RegisterNatives)<SUB>3046</SUB>> ]
-"14434" [label = <(FIELD_IDENTIFIER,UnregisterNatives,UnregisterNatives)<SUB>3047</SUB>> ]
-"14437" [label = <(FIELD_IDENTIFIER,MonitorEnter,MonitorEnter)<SUB>3048</SUB>> ]
-"14440" [label = <(FIELD_IDENTIFIER,MonitorExit,MonitorExit)<SUB>3049</SUB>> ]
-"14443" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>3050</SUB>> ]
-"14446" [label = <(FIELD_IDENTIFIER,GetStringRegion,GetStringRegion)<SUB>3051</SUB>> ]
-"14449" [label = <(FIELD_IDENTIFIER,GetStringUTFRegion,GetStringUTFRegion)<SUB>3052</SUB>> ]
-"14452" [label = <(FIELD_IDENTIFIER,GetPrimitiveArrayCritical,GetPrimitiveArrayCritical)<SUB>3053</SUB>> ]
-"14455" [label = <(FIELD_IDENTIFIER,ReleasePrimitiveArrayCritical,ReleasePrimitiveArrayCritical)<SUB>3054</SUB>> ]
-"14458" [label = <(FIELD_IDENTIFIER,GetStringCritical,GetStringCritical)<SUB>3055</SUB>> ]
-"14461" [label = <(FIELD_IDENTIFIER,ReleaseStringCritical,ReleaseStringCritical)<SUB>3056</SUB>> ]
-"14464" [label = <(FIELD_IDENTIFIER,NewWeakGlobalRef,NewWeakGlobalRef)<SUB>3057</SUB>> ]
-"14467" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>3058</SUB>> ]
-"14470" [label = <(FIELD_IDENTIFIER,ExceptionCheck,ExceptionCheck)<SUB>3059</SUB>> ]
-"14473" [label = <(FIELD_IDENTIFIER,NewDirectByteBuffer,NewDirectByteBuffer)<SUB>3060</SUB>> ]
-"14476" [label = <(FIELD_IDENTIFIER,GetDirectBufferAddress,GetDirectBufferAddress)<SUB>3061</SUB>> ]
-"14479" [label = <(FIELD_IDENTIFIER,GetDirectBufferCapacity,GetDirectBufferCapacity)<SUB>3062</SUB>> ]
-"14482" [label = <(FIELD_IDENTIFIER,GetObjectRefType,GetObjectRefType)<SUB>3063</SUB>> ]
-"247" [label = <(Runtime::Current,Runtime::Current())<SUB>185</SUB>> ]
-"251" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>185</SUB>> ]
-"268" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>212</SUB>> ]
-"420" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>332</SUB>> ]
-"449" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>361</SUB>> ]
-"452" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>361</SUB>> ]
-"455" [label = <(Runtime::Current,Runtime::Current())<SUB>361</SUB>> ]
-"459" [label = <(FIELD_IDENTIFIER,GetSystemClassLoader,GetSystemClassLoader)<SUB>361</SUB>> ]
-"484" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>383</SUB>> ]
-"488" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>383</SUB>> ]
-"508" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>389</SUB>> ]
-"13553" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2754</SUB>> ]
-"13570" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2756</SUB>> ]
-"248" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>185</SUB>> ]
-"270" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>212</SUB>> ]
-"421" [label = <(Runtime::Current,Runtime::Current())<SUB>332</SUB>> ]
-"425" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>332</SUB>> ]
-"456" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>361</SUB>> ]
-"486" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>383</SUB>> ]
-"489" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>383</SUB>> ]
-"492" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>383</SUB>> ]
-"510" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>389</SUB>> ]
-"13555" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2754</SUB>> ]
-"250" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>185</SUB>> ]
-"422" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>332</SUB>> ]
-"458" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>361</SUB>> ]
-"491" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>383</SUB>> ]
-"494" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>383</SUB>> ]
-"424" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>332</SUB>> ]
+"260" [label = <(UNKNOWN,),))<SUB>208</SUB>> ]
+"261" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>209</SUB>> ]
+"263" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>211</SUB>> ]
+"272" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>212</SUB>> ]
+"273" [label = <(UNKNOWN,},})<SUB>231</SUB>> ]
+"280" [label = <(UNKNOWN,),))<SUB>233</SUB>> ]
+"281" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();)<SUB>234</SUB>> ]
+"282" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj).Ptr(),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj).Ptr(),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 })<SUB>236</SUB>> ]
+"283" [label = <(UNKNOWN,},})<SUB>254</SUB>> ]
+"359" [label = <(UNKNOWN,),))<SUB>284</SUB>> ]
+"360" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;)<SUB>285</SUB>> ]
+"361" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);)<SUB>287</SUB>> ]
+"362" [label = <(UNKNOWN,},})<SUB>293</SUB>> ]
+"371" [label = <(UNKNOWN,),))<SUB>298</SUB>> ]
+"372" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;)<SUB>299</SUB>> ]
+"373" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);)<SUB>304</SUB>> ]
+"374" [label = <(UNKNOWN,},})<SUB>308</SUB>> ]
+"381" [label = <(UNKNOWN,),))<SUB>310</SUB>> ]
+"382" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 },REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 })<SUB>311</SUB>> ]
+"389" [label = <(h_klass,h_klass(hs.NewHandle(klass)))<SUB>316</SUB>> ]
+"395" [label = <(UNKNOWN,if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 },if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 })<SUB>317</SUB>> ]
+"396" [label = <(UNKNOWN,return h_klass.Get();,return h_klass.Get();)<SUB>320</SUB>> ]
+"397" [label = <(UNKNOWN,},})<SUB>321</SUB>> ]
+"407" [label = <(UNKNOWN,),))<SUB>324</SUB>> ]
+"408" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));)<SUB>325</SUB>> ]
+"409" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>327</SUB>> ]
+"411" [label = <(&lt;operator&gt;.assignment,* method = nullptr)<SUB>330</SUB>> ]
+"415" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>331</SUB>> ]
+"427" [label = <(UNKNOWN,if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 },if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 })<SUB>332</SUB>> ]
+"428" [label = <(UNKNOWN,else {\012    method = c-&gt;FindClassMethod(name, sig, pointer_size);\012 },else {\012    method = c-&gt;FindClassMethod(name, sig, pointer_size);\012 })<SUB>334</SUB>> ]
+"429" [label = <(UNKNOWN,if (method != nullptr &amp;&amp; ShouldBlockAccessToMember(method, soa.Self())) {\012    method = nullptr;\012 },if (method != nullptr &amp;&amp; ShouldBlockAccessToMember(method, soa.Self())) {\012    method = nullptr;\012 })<SUB>337</SUB>> ]
+"430" [label = <(UNKNOWN,if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 },if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 })<SUB>340</SUB>> ]
+"431" [label = <(UNKNOWN,return jni::EncodeArtMethod(method);,return jni::EncodeArtMethod(method);)<SUB>344</SUB>> ]
+"432" [label = <(UNKNOWN,},})<SUB>345</SUB>> ]
+"438" [label = <(UNKNOWN,),))<SUB>347</SUB>> ]
+"439" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);)<SUB>348</SUB>> ]
+"440" [label = <(UNKNOWN,if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 },if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 })<SUB>351</SUB>> ]
+"441" [label = <(UNKNOWN,if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 },if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 })<SUB>355</SUB>> ]
+"443" [label = <(&lt;operator&gt;.assignment,class_loader =\012      soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>359</SUB>> ]
+"460" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 return class_loader;\012 },if (class_loader != nullptr) {\012 return class_loader;\012 })<SUB>361</SUB>> ]
+"461" [label = <(UNKNOWN,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());)<SUB>365</SUB>> ]
+"462" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 },if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 })<SUB>366</SUB>> ]
+"463" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>374</SUB>> ]
+"464" [label = <(UNKNOWN,},})<SUB>375</SUB>> ]
+"474" [label = <(UNKNOWN,),))<SUB>378</SUB>> ]
+"475" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());)<SUB>379</SUB>> ]
+"477" [label = <(c,c(\012      hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))))<SUB>381</SUB>> ]
+"496" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>383</SUB>> ]
+"498" [label = <(&lt;operator&gt;.assignment,* field = nullptr)<SUB>386</SUB>> ]
+"503" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>388</SUB>> ]
+"512" [label = <(UNKNOWN,if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 },if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 })<SUB>389</SUB>> ]
+"513" [label = <(UNKNOWN,else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 },else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 })<SUB>392</SUB>> ]
+"514" [label = <(UNKNOWN,if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012    soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 return nullptr;\012 },if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012    soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 return nullptr;\012 })<SUB>395</SUB>> ]
+"516" [label = <(UNKNOWN,if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 },if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>410</SUB>> ]
+"517" [label = <(UNKNOWN,else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 },else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>413</SUB>> ]
+"518" [label = <(UNKNOWN,if (field != nullptr &amp;&amp; ShouldBlockAccessToMember(field, soa.Self())) {\012    field = nullptr;\012 },if (field != nullptr &amp;&amp; ShouldBlockAccessToMember(field, soa.Self())) {\012    field = nullptr;\012 })<SUB>416</SUB>> ]
+"519" [label = <(UNKNOWN,if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 },if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 })<SUB>419</SUB>> ]
+"520" [label = <(UNKNOWN,return jni::EncodeArtField(field);,return jni::EncodeArtField(field);)<SUB>425</SUB>> ]
+"521" [label = <(UNKNOWN,},})<SUB>426</SUB>> ]
+"531" [label = <(UNKNOWN,),))<SUB>429</SUB>> ]
+"532" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());)<SUB>430</SUB>> ]
+"533" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());)<SUB>432</SUB>> ]
+"534" [label = <(UNKNOWN,},})<SUB>435</SUB>> ]
+"543" [label = <(UNKNOWN,),))<SUB>438</SUB>> ]
+"544" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);)<SUB>439</SUB>> ]
+"545" [label = <(UNKNOWN,},})<SUB>443</SUB>> ]
+"554" [label = <(UNKNOWN,),))<SUB>445</SUB>> ]
+"555" [label = <(UNKNOWN,REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012},REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012})<SUB>446</SUB>> ]
+"575" [label = <(UNKNOWN,),))<SUB>516</SUB>> ]
+"576" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();)<SUB>517</SUB>> ]
+"577" [label = <(UNKNOWN,for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 },for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 })<SUB>519</SUB>> ]
+"578" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>524</SUB>> ]
+"579" [label = <(UNKNOWN,},})<SUB>525</SUB>> ]
+"13308" [label = <(UNKNOWN,},})<SUB>2676</SUB>> ]
+"13364" [label = <(UNKNOWN,),))<SUB>2691</SUB>> ]
+"13365" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);)<SUB>2692</SUB>> ]
+"13366" [label = <(UNKNOWN,if (UNLIKELY(ArtArrayT::GetArrayClass() != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012 ArtArrayT::GetArrayClass()-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 },if (UNLIKELY(ArtArrayT::GetArrayClass() != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012 ArtArrayT::GetArrayClass()-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 })<SUB>2694</SUB>> ]
+"13367" [label = <(UNKNOWN,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());)<SUB>2703</SUB>> ]
+"13368" [label = <(UNKNOWN,return array.Ptr();,return array.Ptr();)<SUB>2704</SUB>> ]
+"13369" [label = <(UNKNOWN,},})<SUB>2705</SUB>> ]
+"13542" [label = <(UNKNOWN,),))<SUB>2749</SUB>> ]
+"13543" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);)<SUB>2750</SUB>> ]
+"13545" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2752</SUB>> ]
+"13555" [label = <(&lt;operator&gt;.assignment,is_copy = array_data != elements)<SUB>2753</SUB>> ]
+"13561" [label = <(&lt;operator&gt;.assignment,bytes = array-&gt;GetLength() * component_size)<SUB>2754</SUB>> ]
+"13569" [label = <(UNKNOWN,if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 },if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 })<SUB>2755</SUB>> ]
+"13570" [label = <(UNKNOWN,if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 },if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 })<SUB>2773</SUB>> ]
+"13571" [label = <(UNKNOWN,},})<SUB>2785</SUB>> ]
+"13784" [label = <(UNKNOWN,};,};)<SUB>2826</SUB>> ]
+"13786" [label = <(&lt;operator&gt;.assignment,gJniNativeInterface = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>2828</SUB>> ]
+"14491" [label = <(&lt;operator&gt;.assignment,(*gJniSleepForeverStub[])() = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3068</SUB>> ]
+"14736" [label = <(UNKNOWN,},})<SUB>3308</SUB>> ]
+"228" [label = <(&lt;operator&gt;.assignment,kWarnJniAbort = false)<SUB>160</SUB>> ]
+"231" [label = <(UNKNOWN,static bool IsCallerTrusted(Thread* self) REQUIRES_SHARED(Locks::mutator_lock_) {\012 return hiddenapi::IsCallerTrusted(GetCallingClass(self, /* num_frames */ 1));\012},static bool IsCallerTrusted(Thread* self) REQUIRES_SHARED(Locks::mutator_lock_) {\012 return hiddenapi::IsCallerTrusted(GetCallingClass(self, /* num_frames */ 1));\012})<SUB>162</SUB>> ]
+"232" [label = <(UNKNOWN,template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldBlockAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012  hiddenapi::Action action = hiddenapi::GetMemberAction(\012      member, self, IsCallerTrusted, hiddenapi::kJNI);\012 if (action != hiddenapi::kAllow) {\012    hiddenapi::NotifyHiddenApiListener(member);\012 }\012\012 return action == hiddenapi::kDeny;\012},template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldBlockAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012  hiddenapi::Action action = hiddenapi::GetMemberAction(\012      member, self, IsCallerTrusted, hiddenapi::kJNI);\012 if (action != hiddenapi::kAllow) {\012    hiddenapi::NotifyHiddenApiListener(member);\012 }\012\012 return action == hiddenapi::kDeny;\012})<SUB>166</SUB>> ]
+"240" [label = <(UNKNOWN,),))<SUB>181</SUB>> ]
+"241" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>182</SUB>> ]
+"243" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>184</SUB>> ]
+"252" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc*/ nullptr,\012 /*check_suspended*/ true,\012 /*abort_on_error*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>185</SUB>> ]
+"265" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>211</SUB>> ]
+"390" [label = <(NewHandle,hs.NewHandle(klass))<SUB>316</SUB>> ]
+"417" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>331</SUB>> ]
+"445" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>360</SUB>> ]
+"478" [label = <(NewHandle,hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class))))<SUB>382</SUB>> ]
+"505" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>388</SUB>> ]
+"13547" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2752</SUB>> ]
+"13557" [label = <(&lt;operator&gt;.notEquals,array_data != elements)<SUB>2753</SUB>> ]
+"13563" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2754</SUB>> ]
+"13788" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>2828</SUB>> ]
+"14493" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3068</SUB>> ]
+"49" [label = <(&lt;operator&gt;.assignment,kBadUtf8ReplacementChar[] = &quot;?&quot;)<SUB>80</SUB>> ]
+"245" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>184</SUB>> ]
+"266" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>211</SUB>> ]
+"391" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>316</SUB>> ]
+"418" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>331</SUB>> ]
+"446" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ClassLoader)<SUB>360</SUB>> ]
+"453" [label = <(GetSystemClassLoader,Runtime::Current()-&gt;GetSystemClassLoader())<SUB>360</SUB>> ]
+"479" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>382</SUB>> ]
+"482" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>382</SUB>> ]
+"506" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>388</SUB>> ]
+"13548" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2752</SUB>> ]
+"13564" [label = <(GetLength,array-&gt;GetLength())<SUB>2754</SUB>> ]
+"13793" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetVersion)<SUB>2833</SUB>> ]
+"13796" [label = <(&lt;operator&gt;.fieldAccess,JNI::DefineClass)<SUB>2834</SUB>> ]
+"13799" [label = <(&lt;operator&gt;.fieldAccess,JNI::FindClass)<SUB>2835</SUB>> ]
+"13802" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedMethod)<SUB>2836</SUB>> ]
+"13805" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedField)<SUB>2837</SUB>> ]
+"13808" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedMethod)<SUB>2838</SUB>> ]
+"13811" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetSuperclass)<SUB>2839</SUB>> ]
+"13814" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsAssignableFrom)<SUB>2840</SUB>> ]
+"13817" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedField)<SUB>2841</SUB>> ]
+"13820" [label = <(&lt;operator&gt;.fieldAccess,JNI::Throw)<SUB>2842</SUB>> ]
+"13823" [label = <(&lt;operator&gt;.fieldAccess,JNI::ThrowNew)<SUB>2843</SUB>> ]
+"13826" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionOccurred)<SUB>2844</SUB>> ]
+"13829" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionDescribe)<SUB>2845</SUB>> ]
+"13832" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionClear)<SUB>2846</SUB>> ]
+"13835" [label = <(&lt;operator&gt;.fieldAccess,JNI::FatalError)<SUB>2847</SUB>> ]
+"13838" [label = <(&lt;operator&gt;.fieldAccess,JNI::PushLocalFrame)<SUB>2848</SUB>> ]
+"13841" [label = <(&lt;operator&gt;.fieldAccess,JNI::PopLocalFrame)<SUB>2849</SUB>> ]
+"13844" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewGlobalRef)<SUB>2850</SUB>> ]
+"13847" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteGlobalRef)<SUB>2851</SUB>> ]
+"13850" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteLocalRef)<SUB>2852</SUB>> ]
+"13853" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsSameObject)<SUB>2853</SUB>> ]
+"13856" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLocalRef)<SUB>2854</SUB>> ]
+"13859" [label = <(&lt;operator&gt;.fieldAccess,JNI::EnsureLocalCapacity)<SUB>2855</SUB>> ]
+"13862" [label = <(&lt;operator&gt;.fieldAccess,JNI::AllocObject)<SUB>2856</SUB>> ]
+"13865" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObject)<SUB>2857</SUB>> ]
+"13868" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectV)<SUB>2858</SUB>> ]
+"13871" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectA)<SUB>2859</SUB>> ]
+"13874" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectClass)<SUB>2860</SUB>> ]
+"13877" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsInstanceOf)<SUB>2861</SUB>> ]
+"13880" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetMethodID)<SUB>2862</SUB>> ]
+"13883" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethod)<SUB>2863</SUB>> ]
+"13886" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodV)<SUB>2864</SUB>> ]
+"13889" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodA)<SUB>2865</SUB>> ]
+"13892" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethod)<SUB>2866</SUB>> ]
+"13895" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodV)<SUB>2867</SUB>> ]
+"13898" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodA)<SUB>2868</SUB>> ]
+"13901" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethod)<SUB>2869</SUB>> ]
+"13904" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodV)<SUB>2870</SUB>> ]
+"13907" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodA)<SUB>2871</SUB>> ]
+"13910" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethod)<SUB>2872</SUB>> ]
+"13913" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodV)<SUB>2873</SUB>> ]
+"13916" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodA)<SUB>2874</SUB>> ]
+"13919" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethod)<SUB>2875</SUB>> ]
+"13922" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodV)<SUB>2876</SUB>> ]
+"13925" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodA)<SUB>2877</SUB>> ]
+"13928" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethod)<SUB>2878</SUB>> ]
+"13931" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodV)<SUB>2879</SUB>> ]
+"13934" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodA)<SUB>2880</SUB>> ]
+"13937" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethod)<SUB>2881</SUB>> ]
+"13940" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodV)<SUB>2882</SUB>> ]
+"13943" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodA)<SUB>2883</SUB>> ]
+"13946" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethod)<SUB>2884</SUB>> ]
+"13949" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodV)<SUB>2885</SUB>> ]
+"13952" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodA)<SUB>2886</SUB>> ]
+"13955" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethod)<SUB>2887</SUB>> ]
+"13958" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodV)<SUB>2888</SUB>> ]
+"13961" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodA)<SUB>2889</SUB>> ]
+"13964" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethod)<SUB>2890</SUB>> ]
+"13967" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodV)<SUB>2891</SUB>> ]
+"13970" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodA)<SUB>2892</SUB>> ]
+"13973" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethod)<SUB>2893</SUB>> ]
+"13976" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodV)<SUB>2894</SUB>> ]
+"13979" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodA)<SUB>2895</SUB>> ]
+"13982" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethod)<SUB>2896</SUB>> ]
+"13985" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodV)<SUB>2897</SUB>> ]
+"13988" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodA)<SUB>2898</SUB>> ]
+"13991" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethod)<SUB>2899</SUB>> ]
+"13994" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodV)<SUB>2900</SUB>> ]
+"13997" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodA)<SUB>2901</SUB>> ]
+"14000" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethod)<SUB>2902</SUB>> ]
+"14003" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodV)<SUB>2903</SUB>> ]
+"14006" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodA)<SUB>2904</SUB>> ]
+"14009" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethod)<SUB>2905</SUB>> ]
+"14012" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodV)<SUB>2906</SUB>> ]
+"14015" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodA)<SUB>2907</SUB>> ]
+"14018" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethod)<SUB>2908</SUB>> ]
+"14021" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodV)<SUB>2909</SUB>> ]
+"14024" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodA)<SUB>2910</SUB>> ]
+"14027" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethod)<SUB>2911</SUB>> ]
+"14030" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodV)<SUB>2912</SUB>> ]
+"14033" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodA)<SUB>2913</SUB>> ]
+"14036" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethod)<SUB>2914</SUB>> ]
+"14039" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodV)<SUB>2915</SUB>> ]
+"14042" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodA)<SUB>2916</SUB>> ]
+"14045" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethod)<SUB>2917</SUB>> ]
+"14048" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodV)<SUB>2918</SUB>> ]
+"14051" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodA)<SUB>2919</SUB>> ]
+"14054" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethod)<SUB>2920</SUB>> ]
+"14057" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodV)<SUB>2921</SUB>> ]
+"14060" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodA)<SUB>2922</SUB>> ]
+"14063" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFieldID)<SUB>2923</SUB>> ]
+"14066" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectField)<SUB>2924</SUB>> ]
+"14069" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanField)<SUB>2925</SUB>> ]
+"14072" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteField)<SUB>2926</SUB>> ]
+"14075" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharField)<SUB>2927</SUB>> ]
+"14078" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortField)<SUB>2928</SUB>> ]
+"14081" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntField)<SUB>2929</SUB>> ]
+"14084" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongField)<SUB>2930</SUB>> ]
+"14087" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatField)<SUB>2931</SUB>> ]
+"14090" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleField)<SUB>2932</SUB>> ]
+"14093" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectField)<SUB>2933</SUB>> ]
+"14096" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanField)<SUB>2934</SUB>> ]
+"14099" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteField)<SUB>2935</SUB>> ]
+"14102" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharField)<SUB>2936</SUB>> ]
+"14105" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortField)<SUB>2937</SUB>> ]
+"14108" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntField)<SUB>2938</SUB>> ]
+"14111" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongField)<SUB>2939</SUB>> ]
+"14114" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatField)<SUB>2940</SUB>> ]
+"14117" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleField)<SUB>2941</SUB>> ]
+"14120" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticMethodID)<SUB>2942</SUB>> ]
+"14123" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethod)<SUB>2943</SUB>> ]
+"14126" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodV)<SUB>2944</SUB>> ]
+"14129" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodA)<SUB>2945</SUB>> ]
+"14132" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethod)<SUB>2946</SUB>> ]
+"14135" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodV)<SUB>2947</SUB>> ]
+"14138" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodA)<SUB>2948</SUB>> ]
+"14141" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethod)<SUB>2949</SUB>> ]
+"14144" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodV)<SUB>2950</SUB>> ]
+"14147" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodA)<SUB>2951</SUB>> ]
+"14150" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethod)<SUB>2952</SUB>> ]
+"14153" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodV)<SUB>2953</SUB>> ]
+"14156" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodA)<SUB>2954</SUB>> ]
+"14159" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethod)<SUB>2955</SUB>> ]
+"14162" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodV)<SUB>2956</SUB>> ]
+"14165" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodA)<SUB>2957</SUB>> ]
+"14168" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethod)<SUB>2958</SUB>> ]
+"14171" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodV)<SUB>2959</SUB>> ]
+"14174" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodA)<SUB>2960</SUB>> ]
+"14177" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethod)<SUB>2961</SUB>> ]
+"14180" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodV)<SUB>2962</SUB>> ]
+"14183" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodA)<SUB>2963</SUB>> ]
+"14186" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethod)<SUB>2964</SUB>> ]
+"14189" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodV)<SUB>2965</SUB>> ]
+"14192" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodA)<SUB>2966</SUB>> ]
+"14195" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethod)<SUB>2967</SUB>> ]
+"14198" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodV)<SUB>2968</SUB>> ]
+"14201" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodA)<SUB>2969</SUB>> ]
+"14204" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethod)<SUB>2970</SUB>> ]
+"14207" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodV)<SUB>2971</SUB>> ]
+"14210" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodA)<SUB>2972</SUB>> ]
+"14213" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFieldID)<SUB>2973</SUB>> ]
+"14216" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticObjectField)<SUB>2974</SUB>> ]
+"14219" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticBooleanField)<SUB>2975</SUB>> ]
+"14222" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticByteField)<SUB>2976</SUB>> ]
+"14225" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticCharField)<SUB>2977</SUB>> ]
+"14228" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticShortField)<SUB>2978</SUB>> ]
+"14231" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticIntField)<SUB>2979</SUB>> ]
+"14234" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticLongField)<SUB>2980</SUB>> ]
+"14237" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFloatField)<SUB>2981</SUB>> ]
+"14240" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticDoubleField)<SUB>2982</SUB>> ]
+"14243" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticObjectField)<SUB>2983</SUB>> ]
+"14246" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticBooleanField)<SUB>2984</SUB>> ]
+"14249" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticByteField)<SUB>2985</SUB>> ]
+"14252" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticCharField)<SUB>2986</SUB>> ]
+"14255" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticShortField)<SUB>2987</SUB>> ]
+"14258" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticIntField)<SUB>2988</SUB>> ]
+"14261" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticLongField)<SUB>2989</SUB>> ]
+"14264" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticFloatField)<SUB>2990</SUB>> ]
+"14267" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticDoubleField)<SUB>2991</SUB>> ]
+"14270" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewString)<SUB>2992</SUB>> ]
+"14273" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringLength)<SUB>2993</SUB>> ]
+"14276" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringChars)<SUB>2994</SUB>> ]
+"14279" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringChars)<SUB>2995</SUB>> ]
+"14282" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewStringUTF)<SUB>2996</SUB>> ]
+"14285" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFLength)<SUB>2997</SUB>> ]
+"14288" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFChars)<SUB>2998</SUB>> ]
+"14291" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringUTFChars)<SUB>2999</SUB>> ]
+"14294" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetArrayLength)<SUB>3000</SUB>> ]
+"14297" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectArray)<SUB>3001</SUB>> ]
+"14300" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectArrayElement)<SUB>3002</SUB>> ]
+"14303" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectArrayElement)<SUB>3003</SUB>> ]
+"14306" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewBooleanArray)<SUB>3004</SUB>> ]
+"14309" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewByteArray)<SUB>3005</SUB>> ]
+"14312" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewCharArray)<SUB>3006</SUB>> ]
+"14315" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewShortArray)<SUB>3007</SUB>> ]
+"14318" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewIntArray)<SUB>3008</SUB>> ]
+"14321" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLongArray)<SUB>3009</SUB>> ]
+"14324" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewFloatArray)<SUB>3010</SUB>> ]
+"14327" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDoubleArray)<SUB>3011</SUB>> ]
+"14330" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayElements)<SUB>3012</SUB>> ]
+"14333" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayElements)<SUB>3013</SUB>> ]
+"14336" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayElements)<SUB>3014</SUB>> ]
+"14339" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayElements)<SUB>3015</SUB>> ]
+"14342" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayElements)<SUB>3016</SUB>> ]
+"14345" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayElements)<SUB>3017</SUB>> ]
+"14348" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayElements)<SUB>3018</SUB>> ]
+"14351" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayElements)<SUB>3019</SUB>> ]
+"14354" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseBooleanArrayElements)<SUB>3020</SUB>> ]
+"14357" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseByteArrayElements)<SUB>3021</SUB>> ]
+"14360" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseCharArrayElements)<SUB>3022</SUB>> ]
+"14363" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseShortArrayElements)<SUB>3023</SUB>> ]
+"14366" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseIntArrayElements)<SUB>3024</SUB>> ]
+"14369" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseLongArrayElements)<SUB>3025</SUB>> ]
+"14372" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseFloatArrayElements)<SUB>3026</SUB>> ]
+"14375" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseDoubleArrayElements)<SUB>3027</SUB>> ]
+"14378" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayRegion)<SUB>3028</SUB>> ]
+"14381" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayRegion)<SUB>3029</SUB>> ]
+"14384" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayRegion)<SUB>3030</SUB>> ]
+"14387" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayRegion)<SUB>3031</SUB>> ]
+"14390" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayRegion)<SUB>3032</SUB>> ]
+"14393" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayRegion)<SUB>3033</SUB>> ]
+"14396" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayRegion)<SUB>3034</SUB>> ]
+"14399" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayRegion)<SUB>3035</SUB>> ]
+"14402" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanArrayRegion)<SUB>3036</SUB>> ]
+"14405" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteArrayRegion)<SUB>3037</SUB>> ]
+"14408" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharArrayRegion)<SUB>3038</SUB>> ]
+"14411" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortArrayRegion)<SUB>3039</SUB>> ]
+"14414" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntArrayRegion)<SUB>3040</SUB>> ]
+"14417" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongArrayRegion)<SUB>3041</SUB>> ]
+"14420" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatArrayRegion)<SUB>3042</SUB>> ]
+"14423" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleArrayRegion)<SUB>3043</SUB>> ]
+"14426" [label = <(&lt;operator&gt;.fieldAccess,JNI::RegisterNatives)<SUB>3044</SUB>> ]
+"14429" [label = <(&lt;operator&gt;.fieldAccess,JNI::UnregisterNatives)<SUB>3045</SUB>> ]
+"14432" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorEnter)<SUB>3046</SUB>> ]
+"14435" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorExit)<SUB>3047</SUB>> ]
+"14438" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetJavaVM)<SUB>3048</SUB>> ]
+"14441" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringRegion)<SUB>3049</SUB>> ]
+"14444" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFRegion)<SUB>3050</SUB>> ]
+"14447" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetPrimitiveArrayCritical)<SUB>3051</SUB>> ]
+"14450" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleasePrimitiveArrayCritical)<SUB>3052</SUB>> ]
+"14453" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringCritical)<SUB>3053</SUB>> ]
+"14456" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringCritical)<SUB>3054</SUB>> ]
+"14459" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewWeakGlobalRef)<SUB>3055</SUB>> ]
+"14462" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteWeakGlobalRef)<SUB>3056</SUB>> ]
+"14465" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionCheck)<SUB>3057</SUB>> ]
+"14468" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDirectByteBuffer)<SUB>3058</SUB>> ]
+"14471" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferAddress)<SUB>3059</SUB>> ]
+"14474" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferCapacity)<SUB>3060</SUB>> ]
+"14477" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectRefType)<SUB>3061</SUB>> ]
+"246" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>184</SUB>> ]
+"267" [label = <(Runtime::Current,Runtime::Current())<SUB>211</SUB>> ]
+"271" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>211</SUB>> ]
+"393" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>316</SUB>> ]
+"419" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>331</SUB>> ]
+"426" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>331</SUB>> ]
+"447" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>360</SUB>> ]
+"450" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>360</SUB>> ]
+"454" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetSystemClassLoader)<SUB>360</SUB>> ]
+"481" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>382</SUB>> ]
+"483" [label = <(Self,soa.Self())<SUB>382</SUB>> ]
+"487" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(jni_class))<SUB>382</SUB>> ]
+"507" [label = <(Runtime::Current,Runtime::Current())<SUB>388</SUB>> ]
+"511" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>388</SUB>> ]
+"13549" [label = <(Runtime::Current,Runtime::Current())<SUB>2752</SUB>> ]
+"13553" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2752</SUB>> ]
+"13565" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2754</SUB>> ]
+"13795" [label = <(FIELD_IDENTIFIER,GetVersion,GetVersion)<SUB>2833</SUB>> ]
+"13798" [label = <(FIELD_IDENTIFIER,DefineClass,DefineClass)<SUB>2834</SUB>> ]
+"13801" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>2835</SUB>> ]
+"13804" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>2836</SUB>> ]
+"13807" [label = <(FIELD_IDENTIFIER,FromReflectedField,FromReflectedField)<SUB>2837</SUB>> ]
+"13810" [label = <(FIELD_IDENTIFIER,ToReflectedMethod,ToReflectedMethod)<SUB>2838</SUB>> ]
+"13813" [label = <(FIELD_IDENTIFIER,GetSuperclass,GetSuperclass)<SUB>2839</SUB>> ]
+"13816" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2840</SUB>> ]
+"13819" [label = <(FIELD_IDENTIFIER,ToReflectedField,ToReflectedField)<SUB>2841</SUB>> ]
+"13822" [label = <(FIELD_IDENTIFIER,Throw,Throw)<SUB>2842</SUB>> ]
+"13825" [label = <(FIELD_IDENTIFIER,ThrowNew,ThrowNew)<SUB>2843</SUB>> ]
+"13828" [label = <(FIELD_IDENTIFIER,ExceptionOccurred,ExceptionOccurred)<SUB>2844</SUB>> ]
+"13831" [label = <(FIELD_IDENTIFIER,ExceptionDescribe,ExceptionDescribe)<SUB>2845</SUB>> ]
+"13834" [label = <(FIELD_IDENTIFIER,ExceptionClear,ExceptionClear)<SUB>2846</SUB>> ]
+"13837" [label = <(FIELD_IDENTIFIER,FatalError,FatalError)<SUB>2847</SUB>> ]
+"13840" [label = <(FIELD_IDENTIFIER,PushLocalFrame,PushLocalFrame)<SUB>2848</SUB>> ]
+"13843" [label = <(FIELD_IDENTIFIER,PopLocalFrame,PopLocalFrame)<SUB>2849</SUB>> ]
+"13846" [label = <(FIELD_IDENTIFIER,NewGlobalRef,NewGlobalRef)<SUB>2850</SUB>> ]
+"13849" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>2851</SUB>> ]
+"13852" [label = <(FIELD_IDENTIFIER,DeleteLocalRef,DeleteLocalRef)<SUB>2852</SUB>> ]
+"13855" [label = <(FIELD_IDENTIFIER,IsSameObject,IsSameObject)<SUB>2853</SUB>> ]
+"13858" [label = <(FIELD_IDENTIFIER,NewLocalRef,NewLocalRef)<SUB>2854</SUB>> ]
+"13861" [label = <(FIELD_IDENTIFIER,EnsureLocalCapacity,EnsureLocalCapacity)<SUB>2855</SUB>> ]
+"13864" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>2856</SUB>> ]
+"13867" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2857</SUB>> ]
+"13870" [label = <(FIELD_IDENTIFIER,NewObjectV,NewObjectV)<SUB>2858</SUB>> ]
+"13873" [label = <(FIELD_IDENTIFIER,NewObjectA,NewObjectA)<SUB>2859</SUB>> ]
+"13876" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>2860</SUB>> ]
+"13879" [label = <(FIELD_IDENTIFIER,IsInstanceOf,IsInstanceOf)<SUB>2861</SUB>> ]
+"13882" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>2862</SUB>> ]
+"13885" [label = <(FIELD_IDENTIFIER,CallObjectMethod,CallObjectMethod)<SUB>2863</SUB>> ]
+"13888" [label = <(FIELD_IDENTIFIER,CallObjectMethodV,CallObjectMethodV)<SUB>2864</SUB>> ]
+"13891" [label = <(FIELD_IDENTIFIER,CallObjectMethodA,CallObjectMethodA)<SUB>2865</SUB>> ]
+"13894" [label = <(FIELD_IDENTIFIER,CallBooleanMethod,CallBooleanMethod)<SUB>2866</SUB>> ]
+"13897" [label = <(FIELD_IDENTIFIER,CallBooleanMethodV,CallBooleanMethodV)<SUB>2867</SUB>> ]
+"13900" [label = <(FIELD_IDENTIFIER,CallBooleanMethodA,CallBooleanMethodA)<SUB>2868</SUB>> ]
+"13903" [label = <(FIELD_IDENTIFIER,CallByteMethod,CallByteMethod)<SUB>2869</SUB>> ]
+"13906" [label = <(FIELD_IDENTIFIER,CallByteMethodV,CallByteMethodV)<SUB>2870</SUB>> ]
+"13909" [label = <(FIELD_IDENTIFIER,CallByteMethodA,CallByteMethodA)<SUB>2871</SUB>> ]
+"13912" [label = <(FIELD_IDENTIFIER,CallCharMethod,CallCharMethod)<SUB>2872</SUB>> ]
+"13915" [label = <(FIELD_IDENTIFIER,CallCharMethodV,CallCharMethodV)<SUB>2873</SUB>> ]
+"13918" [label = <(FIELD_IDENTIFIER,CallCharMethodA,CallCharMethodA)<SUB>2874</SUB>> ]
+"13921" [label = <(FIELD_IDENTIFIER,CallShortMethod,CallShortMethod)<SUB>2875</SUB>> ]
+"13924" [label = <(FIELD_IDENTIFIER,CallShortMethodV,CallShortMethodV)<SUB>2876</SUB>> ]
+"13927" [label = <(FIELD_IDENTIFIER,CallShortMethodA,CallShortMethodA)<SUB>2877</SUB>> ]
+"13930" [label = <(FIELD_IDENTIFIER,CallIntMethod,CallIntMethod)<SUB>2878</SUB>> ]
+"13933" [label = <(FIELD_IDENTIFIER,CallIntMethodV,CallIntMethodV)<SUB>2879</SUB>> ]
+"13936" [label = <(FIELD_IDENTIFIER,CallIntMethodA,CallIntMethodA)<SUB>2880</SUB>> ]
+"13939" [label = <(FIELD_IDENTIFIER,CallLongMethod,CallLongMethod)<SUB>2881</SUB>> ]
+"13942" [label = <(FIELD_IDENTIFIER,CallLongMethodV,CallLongMethodV)<SUB>2882</SUB>> ]
+"13945" [label = <(FIELD_IDENTIFIER,CallLongMethodA,CallLongMethodA)<SUB>2883</SUB>> ]
+"13948" [label = <(FIELD_IDENTIFIER,CallFloatMethod,CallFloatMethod)<SUB>2884</SUB>> ]
+"13951" [label = <(FIELD_IDENTIFIER,CallFloatMethodV,CallFloatMethodV)<SUB>2885</SUB>> ]
+"13954" [label = <(FIELD_IDENTIFIER,CallFloatMethodA,CallFloatMethodA)<SUB>2886</SUB>> ]
+"13957" [label = <(FIELD_IDENTIFIER,CallDoubleMethod,CallDoubleMethod)<SUB>2887</SUB>> ]
+"13960" [label = <(FIELD_IDENTIFIER,CallDoubleMethodV,CallDoubleMethodV)<SUB>2888</SUB>> ]
+"13963" [label = <(FIELD_IDENTIFIER,CallDoubleMethodA,CallDoubleMethodA)<SUB>2889</SUB>> ]
+"13966" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>2890</SUB>> ]
+"13969" [label = <(FIELD_IDENTIFIER,CallVoidMethodV,CallVoidMethodV)<SUB>2891</SUB>> ]
+"13972" [label = <(FIELD_IDENTIFIER,CallVoidMethodA,CallVoidMethodA)<SUB>2892</SUB>> ]
+"13975" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethod,CallNonvirtualObjectMethod)<SUB>2893</SUB>> ]
+"13978" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodV,CallNonvirtualObjectMethodV)<SUB>2894</SUB>> ]
+"13981" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodA,CallNonvirtualObjectMethodA)<SUB>2895</SUB>> ]
+"13984" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethod,CallNonvirtualBooleanMethod)<SUB>2896</SUB>> ]
+"13987" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodV,CallNonvirtualBooleanMethodV)<SUB>2897</SUB>> ]
+"13990" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodA,CallNonvirtualBooleanMethodA)<SUB>2898</SUB>> ]
+"13993" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethod,CallNonvirtualByteMethod)<SUB>2899</SUB>> ]
+"13996" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodV,CallNonvirtualByteMethodV)<SUB>2900</SUB>> ]
+"13999" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodA,CallNonvirtualByteMethodA)<SUB>2901</SUB>> ]
+"14002" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethod,CallNonvirtualCharMethod)<SUB>2902</SUB>> ]
+"14005" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodV,CallNonvirtualCharMethodV)<SUB>2903</SUB>> ]
+"14008" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodA,CallNonvirtualCharMethodA)<SUB>2904</SUB>> ]
+"14011" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethod,CallNonvirtualShortMethod)<SUB>2905</SUB>> ]
+"14014" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodV,CallNonvirtualShortMethodV)<SUB>2906</SUB>> ]
+"14017" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodA,CallNonvirtualShortMethodA)<SUB>2907</SUB>> ]
+"14020" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethod,CallNonvirtualIntMethod)<SUB>2908</SUB>> ]
+"14023" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodV,CallNonvirtualIntMethodV)<SUB>2909</SUB>> ]
+"14026" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodA,CallNonvirtualIntMethodA)<SUB>2910</SUB>> ]
+"14029" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethod,CallNonvirtualLongMethod)<SUB>2911</SUB>> ]
+"14032" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodV,CallNonvirtualLongMethodV)<SUB>2912</SUB>> ]
+"14035" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodA,CallNonvirtualLongMethodA)<SUB>2913</SUB>> ]
+"14038" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethod,CallNonvirtualFloatMethod)<SUB>2914</SUB>> ]
+"14041" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodV,CallNonvirtualFloatMethodV)<SUB>2915</SUB>> ]
+"14044" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodA,CallNonvirtualFloatMethodA)<SUB>2916</SUB>> ]
+"14047" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethod,CallNonvirtualDoubleMethod)<SUB>2917</SUB>> ]
+"14050" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodV,CallNonvirtualDoubleMethodV)<SUB>2918</SUB>> ]
+"14053" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodA,CallNonvirtualDoubleMethodA)<SUB>2919</SUB>> ]
+"14056" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethod,CallNonvirtualVoidMethod)<SUB>2920</SUB>> ]
+"14059" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV)<SUB>2921</SUB>> ]
+"14062" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA)<SUB>2922</SUB>> ]
+"14065" [label = <(FIELD_IDENTIFIER,GetFieldID,GetFieldID)<SUB>2923</SUB>> ]
+"14068" [label = <(FIELD_IDENTIFIER,GetObjectField,GetObjectField)<SUB>2924</SUB>> ]
+"14071" [label = <(FIELD_IDENTIFIER,GetBooleanField,GetBooleanField)<SUB>2925</SUB>> ]
+"14074" [label = <(FIELD_IDENTIFIER,GetByteField,GetByteField)<SUB>2926</SUB>> ]
+"14077" [label = <(FIELD_IDENTIFIER,GetCharField,GetCharField)<SUB>2927</SUB>> ]
+"14080" [label = <(FIELD_IDENTIFIER,GetShortField,GetShortField)<SUB>2928</SUB>> ]
+"14083" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2929</SUB>> ]
+"14086" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2930</SUB>> ]
+"14089" [label = <(FIELD_IDENTIFIER,GetFloatField,GetFloatField)<SUB>2931</SUB>> ]
+"14092" [label = <(FIELD_IDENTIFIER,GetDoubleField,GetDoubleField)<SUB>2932</SUB>> ]
+"14095" [label = <(FIELD_IDENTIFIER,SetObjectField,SetObjectField)<SUB>2933</SUB>> ]
+"14098" [label = <(FIELD_IDENTIFIER,SetBooleanField,SetBooleanField)<SUB>2934</SUB>> ]
+"14101" [label = <(FIELD_IDENTIFIER,SetByteField,SetByteField)<SUB>2935</SUB>> ]
+"14104" [label = <(FIELD_IDENTIFIER,SetCharField,SetCharField)<SUB>2936</SUB>> ]
+"14107" [label = <(FIELD_IDENTIFIER,SetShortField,SetShortField)<SUB>2937</SUB>> ]
+"14110" [label = <(FIELD_IDENTIFIER,SetIntField,SetIntField)<SUB>2938</SUB>> ]
+"14113" [label = <(FIELD_IDENTIFIER,SetLongField,SetLongField)<SUB>2939</SUB>> ]
+"14116" [label = <(FIELD_IDENTIFIER,SetFloatField,SetFloatField)<SUB>2940</SUB>> ]
+"14119" [label = <(FIELD_IDENTIFIER,SetDoubleField,SetDoubleField)<SUB>2941</SUB>> ]
+"14122" [label = <(FIELD_IDENTIFIER,GetStaticMethodID,GetStaticMethodID)<SUB>2942</SUB>> ]
+"14125" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethod,CallStaticObjectMethod)<SUB>2943</SUB>> ]
+"14128" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodV,CallStaticObjectMethodV)<SUB>2944</SUB>> ]
+"14131" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodA,CallStaticObjectMethodA)<SUB>2945</SUB>> ]
+"14134" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethod,CallStaticBooleanMethod)<SUB>2946</SUB>> ]
+"14137" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodV,CallStaticBooleanMethodV)<SUB>2947</SUB>> ]
+"14140" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodA,CallStaticBooleanMethodA)<SUB>2948</SUB>> ]
+"14143" [label = <(FIELD_IDENTIFIER,CallStaticByteMethod,CallStaticByteMethod)<SUB>2949</SUB>> ]
+"14146" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodV,CallStaticByteMethodV)<SUB>2950</SUB>> ]
+"14149" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodA,CallStaticByteMethodA)<SUB>2951</SUB>> ]
+"14152" [label = <(FIELD_IDENTIFIER,CallStaticCharMethod,CallStaticCharMethod)<SUB>2952</SUB>> ]
+"14155" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodV,CallStaticCharMethodV)<SUB>2953</SUB>> ]
+"14158" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodA,CallStaticCharMethodA)<SUB>2954</SUB>> ]
+"14161" [label = <(FIELD_IDENTIFIER,CallStaticShortMethod,CallStaticShortMethod)<SUB>2955</SUB>> ]
+"14164" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodV,CallStaticShortMethodV)<SUB>2956</SUB>> ]
+"14167" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodA,CallStaticShortMethodA)<SUB>2957</SUB>> ]
+"14170" [label = <(FIELD_IDENTIFIER,CallStaticIntMethod,CallStaticIntMethod)<SUB>2958</SUB>> ]
+"14173" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodV,CallStaticIntMethodV)<SUB>2959</SUB>> ]
+"14176" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodA,CallStaticIntMethodA)<SUB>2960</SUB>> ]
+"14179" [label = <(FIELD_IDENTIFIER,CallStaticLongMethod,CallStaticLongMethod)<SUB>2961</SUB>> ]
+"14182" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodV,CallStaticLongMethodV)<SUB>2962</SUB>> ]
+"14185" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodA,CallStaticLongMethodA)<SUB>2963</SUB>> ]
+"14188" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethod,CallStaticFloatMethod)<SUB>2964</SUB>> ]
+"14191" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodV,CallStaticFloatMethodV)<SUB>2965</SUB>> ]
+"14194" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodA,CallStaticFloatMethodA)<SUB>2966</SUB>> ]
+"14197" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethod,CallStaticDoubleMethod)<SUB>2967</SUB>> ]
+"14200" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodV,CallStaticDoubleMethodV)<SUB>2968</SUB>> ]
+"14203" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodA,CallStaticDoubleMethodA)<SUB>2969</SUB>> ]
+"14206" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethod,CallStaticVoidMethod)<SUB>2970</SUB>> ]
+"14209" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodV,CallStaticVoidMethodV)<SUB>2971</SUB>> ]
+"14212" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodA,CallStaticVoidMethodA)<SUB>2972</SUB>> ]
+"14215" [label = <(FIELD_IDENTIFIER,GetStaticFieldID,GetStaticFieldID)<SUB>2973</SUB>> ]
+"14218" [label = <(FIELD_IDENTIFIER,GetStaticObjectField,GetStaticObjectField)<SUB>2974</SUB>> ]
+"14221" [label = <(FIELD_IDENTIFIER,GetStaticBooleanField,GetStaticBooleanField)<SUB>2975</SUB>> ]
+"14224" [label = <(FIELD_IDENTIFIER,GetStaticByteField,GetStaticByteField)<SUB>2976</SUB>> ]
+"14227" [label = <(FIELD_IDENTIFIER,GetStaticCharField,GetStaticCharField)<SUB>2977</SUB>> ]
+"14230" [label = <(FIELD_IDENTIFIER,GetStaticShortField,GetStaticShortField)<SUB>2978</SUB>> ]
+"14233" [label = <(FIELD_IDENTIFIER,GetStaticIntField,GetStaticIntField)<SUB>2979</SUB>> ]
+"14236" [label = <(FIELD_IDENTIFIER,GetStaticLongField,GetStaticLongField)<SUB>2980</SUB>> ]
+"14239" [label = <(FIELD_IDENTIFIER,GetStaticFloatField,GetStaticFloatField)<SUB>2981</SUB>> ]
+"14242" [label = <(FIELD_IDENTIFIER,GetStaticDoubleField,GetStaticDoubleField)<SUB>2982</SUB>> ]
+"14245" [label = <(FIELD_IDENTIFIER,SetStaticObjectField,SetStaticObjectField)<SUB>2983</SUB>> ]
+"14248" [label = <(FIELD_IDENTIFIER,SetStaticBooleanField,SetStaticBooleanField)<SUB>2984</SUB>> ]
+"14251" [label = <(FIELD_IDENTIFIER,SetStaticByteField,SetStaticByteField)<SUB>2985</SUB>> ]
+"14254" [label = <(FIELD_IDENTIFIER,SetStaticCharField,SetStaticCharField)<SUB>2986</SUB>> ]
+"14257" [label = <(FIELD_IDENTIFIER,SetStaticShortField,SetStaticShortField)<SUB>2987</SUB>> ]
+"14260" [label = <(FIELD_IDENTIFIER,SetStaticIntField,SetStaticIntField)<SUB>2988</SUB>> ]
+"14263" [label = <(FIELD_IDENTIFIER,SetStaticLongField,SetStaticLongField)<SUB>2989</SUB>> ]
+"14266" [label = <(FIELD_IDENTIFIER,SetStaticFloatField,SetStaticFloatField)<SUB>2990</SUB>> ]
+"14269" [label = <(FIELD_IDENTIFIER,SetStaticDoubleField,SetStaticDoubleField)<SUB>2991</SUB>> ]
+"14272" [label = <(FIELD_IDENTIFIER,NewString,NewString)<SUB>2992</SUB>> ]
+"14275" [label = <(FIELD_IDENTIFIER,GetStringLength,GetStringLength)<SUB>2993</SUB>> ]
+"14278" [label = <(FIELD_IDENTIFIER,GetStringChars,GetStringChars)<SUB>2994</SUB>> ]
+"14281" [label = <(FIELD_IDENTIFIER,ReleaseStringChars,ReleaseStringChars)<SUB>2995</SUB>> ]
+"14284" [label = <(FIELD_IDENTIFIER,NewStringUTF,NewStringUTF)<SUB>2996</SUB>> ]
+"14287" [label = <(FIELD_IDENTIFIER,GetStringUTFLength,GetStringUTFLength)<SUB>2997</SUB>> ]
+"14290" [label = <(FIELD_IDENTIFIER,GetStringUTFChars,GetStringUTFChars)<SUB>2998</SUB>> ]
+"14293" [label = <(FIELD_IDENTIFIER,ReleaseStringUTFChars,ReleaseStringUTFChars)<SUB>2999</SUB>> ]
+"14296" [label = <(FIELD_IDENTIFIER,GetArrayLength,GetArrayLength)<SUB>3000</SUB>> ]
+"14299" [label = <(FIELD_IDENTIFIER,NewObjectArray,NewObjectArray)<SUB>3001</SUB>> ]
+"14302" [label = <(FIELD_IDENTIFIER,GetObjectArrayElement,GetObjectArrayElement)<SUB>3002</SUB>> ]
+"14305" [label = <(FIELD_IDENTIFIER,SetObjectArrayElement,SetObjectArrayElement)<SUB>3003</SUB>> ]
+"14308" [label = <(FIELD_IDENTIFIER,NewBooleanArray,NewBooleanArray)<SUB>3004</SUB>> ]
+"14311" [label = <(FIELD_IDENTIFIER,NewByteArray,NewByteArray)<SUB>3005</SUB>> ]
+"14314" [label = <(FIELD_IDENTIFIER,NewCharArray,NewCharArray)<SUB>3006</SUB>> ]
+"14317" [label = <(FIELD_IDENTIFIER,NewShortArray,NewShortArray)<SUB>3007</SUB>> ]
+"14320" [label = <(FIELD_IDENTIFIER,NewIntArray,NewIntArray)<SUB>3008</SUB>> ]
+"14323" [label = <(FIELD_IDENTIFIER,NewLongArray,NewLongArray)<SUB>3009</SUB>> ]
+"14326" [label = <(FIELD_IDENTIFIER,NewFloatArray,NewFloatArray)<SUB>3010</SUB>> ]
+"14329" [label = <(FIELD_IDENTIFIER,NewDoubleArray,NewDoubleArray)<SUB>3011</SUB>> ]
+"14332" [label = <(FIELD_IDENTIFIER,GetBooleanArrayElements,GetBooleanArrayElements)<SUB>3012</SUB>> ]
+"14335" [label = <(FIELD_IDENTIFIER,GetByteArrayElements,GetByteArrayElements)<SUB>3013</SUB>> ]
+"14338" [label = <(FIELD_IDENTIFIER,GetCharArrayElements,GetCharArrayElements)<SUB>3014</SUB>> ]
+"14341" [label = <(FIELD_IDENTIFIER,GetShortArrayElements,GetShortArrayElements)<SUB>3015</SUB>> ]
+"14344" [label = <(FIELD_IDENTIFIER,GetIntArrayElements,GetIntArrayElements)<SUB>3016</SUB>> ]
+"14347" [label = <(FIELD_IDENTIFIER,GetLongArrayElements,GetLongArrayElements)<SUB>3017</SUB>> ]
+"14350" [label = <(FIELD_IDENTIFIER,GetFloatArrayElements,GetFloatArrayElements)<SUB>3018</SUB>> ]
+"14353" [label = <(FIELD_IDENTIFIER,GetDoubleArrayElements,GetDoubleArrayElements)<SUB>3019</SUB>> ]
+"14356" [label = <(FIELD_IDENTIFIER,ReleaseBooleanArrayElements,ReleaseBooleanArrayElements)<SUB>3020</SUB>> ]
+"14359" [label = <(FIELD_IDENTIFIER,ReleaseByteArrayElements,ReleaseByteArrayElements)<SUB>3021</SUB>> ]
+"14362" [label = <(FIELD_IDENTIFIER,ReleaseCharArrayElements,ReleaseCharArrayElements)<SUB>3022</SUB>> ]
+"14365" [label = <(FIELD_IDENTIFIER,ReleaseShortArrayElements,ReleaseShortArrayElements)<SUB>3023</SUB>> ]
+"14368" [label = <(FIELD_IDENTIFIER,ReleaseIntArrayElements,ReleaseIntArrayElements)<SUB>3024</SUB>> ]
+"14371" [label = <(FIELD_IDENTIFIER,ReleaseLongArrayElements,ReleaseLongArrayElements)<SUB>3025</SUB>> ]
+"14374" [label = <(FIELD_IDENTIFIER,ReleaseFloatArrayElements,ReleaseFloatArrayElements)<SUB>3026</SUB>> ]
+"14377" [label = <(FIELD_IDENTIFIER,ReleaseDoubleArrayElements,ReleaseDoubleArrayElements)<SUB>3027</SUB>> ]
+"14380" [label = <(FIELD_IDENTIFIER,GetBooleanArrayRegion,GetBooleanArrayRegion)<SUB>3028</SUB>> ]
+"14383" [label = <(FIELD_IDENTIFIER,GetByteArrayRegion,GetByteArrayRegion)<SUB>3029</SUB>> ]
+"14386" [label = <(FIELD_IDENTIFIER,GetCharArrayRegion,GetCharArrayRegion)<SUB>3030</SUB>> ]
+"14389" [label = <(FIELD_IDENTIFIER,GetShortArrayRegion,GetShortArrayRegion)<SUB>3031</SUB>> ]
+"14392" [label = <(FIELD_IDENTIFIER,GetIntArrayRegion,GetIntArrayRegion)<SUB>3032</SUB>> ]
+"14395" [label = <(FIELD_IDENTIFIER,GetLongArrayRegion,GetLongArrayRegion)<SUB>3033</SUB>> ]
+"14398" [label = <(FIELD_IDENTIFIER,GetFloatArrayRegion,GetFloatArrayRegion)<SUB>3034</SUB>> ]
+"14401" [label = <(FIELD_IDENTIFIER,GetDoubleArrayRegion,GetDoubleArrayRegion)<SUB>3035</SUB>> ]
+"14404" [label = <(FIELD_IDENTIFIER,SetBooleanArrayRegion,SetBooleanArrayRegion)<SUB>3036</SUB>> ]
+"14407" [label = <(FIELD_IDENTIFIER,SetByteArrayRegion,SetByteArrayRegion)<SUB>3037</SUB>> ]
+"14410" [label = <(FIELD_IDENTIFIER,SetCharArrayRegion,SetCharArrayRegion)<SUB>3038</SUB>> ]
+"14413" [label = <(FIELD_IDENTIFIER,SetShortArrayRegion,SetShortArrayRegion)<SUB>3039</SUB>> ]
+"14416" [label = <(FIELD_IDENTIFIER,SetIntArrayRegion,SetIntArrayRegion)<SUB>3040</SUB>> ]
+"14419" [label = <(FIELD_IDENTIFIER,SetLongArrayRegion,SetLongArrayRegion)<SUB>3041</SUB>> ]
+"14422" [label = <(FIELD_IDENTIFIER,SetFloatArrayRegion,SetFloatArrayRegion)<SUB>3042</SUB>> ]
+"14425" [label = <(FIELD_IDENTIFIER,SetDoubleArrayRegion,SetDoubleArrayRegion)<SUB>3043</SUB>> ]
+"14428" [label = <(FIELD_IDENTIFIER,RegisterNatives,RegisterNatives)<SUB>3044</SUB>> ]
+"14431" [label = <(FIELD_IDENTIFIER,UnregisterNatives,UnregisterNatives)<SUB>3045</SUB>> ]
+"14434" [label = <(FIELD_IDENTIFIER,MonitorEnter,MonitorEnter)<SUB>3046</SUB>> ]
+"14437" [label = <(FIELD_IDENTIFIER,MonitorExit,MonitorExit)<SUB>3047</SUB>> ]
+"14440" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>3048</SUB>> ]
+"14443" [label = <(FIELD_IDENTIFIER,GetStringRegion,GetStringRegion)<SUB>3049</SUB>> ]
+"14446" [label = <(FIELD_IDENTIFIER,GetStringUTFRegion,GetStringUTFRegion)<SUB>3050</SUB>> ]
+"14449" [label = <(FIELD_IDENTIFIER,GetPrimitiveArrayCritical,GetPrimitiveArrayCritical)<SUB>3051</SUB>> ]
+"14452" [label = <(FIELD_IDENTIFIER,ReleasePrimitiveArrayCritical,ReleasePrimitiveArrayCritical)<SUB>3052</SUB>> ]
+"14455" [label = <(FIELD_IDENTIFIER,GetStringCritical,GetStringCritical)<SUB>3053</SUB>> ]
+"14458" [label = <(FIELD_IDENTIFIER,ReleaseStringCritical,ReleaseStringCritical)<SUB>3054</SUB>> ]
+"14461" [label = <(FIELD_IDENTIFIER,NewWeakGlobalRef,NewWeakGlobalRef)<SUB>3055</SUB>> ]
+"14464" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>3056</SUB>> ]
+"14467" [label = <(FIELD_IDENTIFIER,ExceptionCheck,ExceptionCheck)<SUB>3057</SUB>> ]
+"14470" [label = <(FIELD_IDENTIFIER,NewDirectByteBuffer,NewDirectByteBuffer)<SUB>3058</SUB>> ]
+"14473" [label = <(FIELD_IDENTIFIER,GetDirectBufferAddress,GetDirectBufferAddress)<SUB>3059</SUB>> ]
+"14476" [label = <(FIELD_IDENTIFIER,GetDirectBufferCapacity,GetDirectBufferCapacity)<SUB>3060</SUB>> ]
+"14479" [label = <(FIELD_IDENTIFIER,GetObjectRefType,GetObjectRefType)<SUB>3061</SUB>> ]
+"247" [label = <(Runtime::Current,Runtime::Current())<SUB>184</SUB>> ]
+"251" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>184</SUB>> ]
+"268" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>211</SUB>> ]
+"420" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>331</SUB>> ]
+"449" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>360</SUB>> ]
+"452" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>360</SUB>> ]
+"455" [label = <(Runtime::Current,Runtime::Current())<SUB>360</SUB>> ]
+"459" [label = <(FIELD_IDENTIFIER,GetSystemClassLoader,GetSystemClassLoader)<SUB>360</SUB>> ]
+"484" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>382</SUB>> ]
+"488" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>382</SUB>> ]
+"508" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>388</SUB>> ]
+"13550" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2752</SUB>> ]
+"13567" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2754</SUB>> ]
+"248" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>184</SUB>> ]
+"270" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>211</SUB>> ]
+"421" [label = <(Runtime::Current,Runtime::Current())<SUB>331</SUB>> ]
+"425" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>331</SUB>> ]
+"456" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>360</SUB>> ]
+"486" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>382</SUB>> ]
+"489" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>382</SUB>> ]
+"492" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>382</SUB>> ]
+"510" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>388</SUB>> ]
+"13552" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2752</SUB>> ]
+"250" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>184</SUB>> ]
+"422" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>331</SUB>> ]
+"458" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>360</SUB>> ]
+"491" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>382</SUB>> ]
+"494" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>382</SUB>> ]
+"424" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>331</SUB>> ]
 "20" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"14789" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+"14786" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
   "260" -> "261" 
   "261" -> "270" 
   "263" -> "272" 
@@ -699,26 +699,26 @@
   "576" -> "577" 
   "577" -> "578" 
   "578" -> "579" 
-  "579" -> "13311" 
-  "13311" -> "13367" 
+  "579" -> "13308" 
+  "13308" -> "13364" 
+  "13364" -> "13365" 
+  "13365" -> "13366" 
+  "13366" -> "13367" 
   "13367" -> "13368" 
   "13368" -> "13369" 
-  "13369" -> "13370" 
-  "13370" -> "13371" 
-  "13371" -> "13372" 
-  "13372" -> "13545" 
-  "13545" -> "13546" 
-  "13546" -> "13555" 
-  "13548" -> "13560" 
-  "13558" -> "13570" 
-  "13564" -> "13572" 
-  "13572" -> "13573" 
-  "13573" -> "13574" 
-  "13574" -> "13787" 
-  "13787" -> "13798" 
-  "13789" -> "14496" 
-  "14494" -> "14739" 
-  "14739" -> "14789" 
+  "13369" -> "13542" 
+  "13542" -> "13543" 
+  "13543" -> "13552" 
+  "13545" -> "13557" 
+  "13555" -> "13567" 
+  "13561" -> "13569" 
+  "13569" -> "13570" 
+  "13570" -> "13571" 
+  "13571" -> "13784" 
+  "13784" -> "13795" 
+  "13786" -> "14493" 
+  "14491" -> "14736" 
+  "14736" -> "14786" 
   "228" -> "231" 
   "231" -> "232" 
   "232" -> "240" 
@@ -732,11 +732,11 @@
   "445" -> "443" 
   "478" -> "477" 
   "505" -> "503" 
-  "13550" -> "13548" 
-  "13560" -> "13558" 
-  "13566" -> "13564" 
-  "13791" -> "13789" 
-  "14496" -> "14494" 
+  "13547" -> "13545" 
+  "13557" -> "13555" 
+  "13563" -> "13561" 
+  "13788" -> "13786" 
+  "14493" -> "14491" 
   "49" -> "228" 
   "245" -> "243" 
   "266" -> "265" 
@@ -747,8 +747,9 @@
   "479" -> "486" 
   "482" -> "478" 
   "506" -> "505" 
-  "13551" -> "13550" 
-  "13567" -> "13566" 
+  "13548" -> "13547" 
+  "13564" -> "13563" 
+  "13793" -> "13798" 
   "13796" -> "13801" 
   "13799" -> "13804" 
   "13802" -> "13807" 
@@ -976,8 +977,7 @@
   "14468" -> "14473" 
   "14471" -> "14476" 
   "14474" -> "14479" 
-  "14477" -> "14482" 
-  "14480" -> "13791" 
+  "14477" -> "13788" 
   "246" -> "245" 
   "267" -> "271" 
   "271" -> "266" 
@@ -992,9 +992,10 @@
   "487" -> "482" 
   "507" -> "511" 
   "511" -> "506" 
-  "13552" -> "13556" 
-  "13556" -> "13551" 
-  "13568" -> "13567" 
+  "13549" -> "13553" 
+  "13553" -> "13548" 
+  "13565" -> "13564" 
+  "13795" -> "13793" 
   "13798" -> "13796" 
   "13801" -> "13799" 
   "13804" -> "13802" 
@@ -1223,7 +1224,6 @@
   "14473" -> "14471" 
   "14476" -> "14474" 
   "14479" -> "14477" 
-  "14482" -> "14480" 
   "247" -> "251" 
   "251" -> "246" 
   "268" -> "267" 
@@ -1235,8 +1235,8 @@
   "484" -> "483" 
   "488" -> "487" 
   "508" -> "507" 
-  "13553" -> "13552" 
-  "13570" -> "13568" 
+  "13550" -> "13549" 
+  "13567" -> "13565" 
   "248" -> "247" 
   "270" -> "268" 
   "421" -> "425" 
@@ -1246,7 +1246,7 @@
   "489" -> "494" 
   "492" -> "488" 
   "510" -> "508" 
-  "13555" -> "13553" 
+  "13552" -> "13550" 
   "250" -> "248" 
   "422" -> "421" 
   "458" -> "456" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/30-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/30-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/30-cfg.dot	2023-06-07 19:34:35.047389625 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/30-cfg.dot	2023-06-07 19:34:41.567389024 +0330
@@ -1,64 +1,64 @@
 digraph "ToReflectedMethod" {  
-"849" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>575</SUB>> ]
-"868" [label = <(soa,soa(env))<SUB>576</SUB>> ]
-"871" [label = <(&lt;operator&gt;.assignment,* m = jni::DecodeArtMethod(mid))<SUB>577</SUB>> ]
-"878" [label = <(&lt;operator&gt;.multiplication,mirror::Executable* method)<SUB>578</SUB>> ]
-"883" [label = <(DCHECK_EQ,DCHECK_EQ(Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize(), kRuntimePointerSize))<SUB>579</SUB>> ]
-"895" [label = <(DCHECK,DCHECK(!Runtime::Current()-&gt;IsActiveTransaction()))<SUB>580</SUB>> ]
-"938" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(method);,return soa.AddLocalReference&lt;jobject&gt;(method);)<SUB>586</SUB>> ]
-"873" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>577</SUB>> ]
-"879" [label = <(&lt;operator&gt;.fieldAccess,mirror::Executable)<SUB>578</SUB>> ]
-"884" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>579</SUB>> ]
-"896" [label = <(&lt;operator&gt;.logicalNot,!Runtime::Current()-&gt;IsActiveTransaction())<SUB>580</SUB>> ]
-"905" [label = <(IsConstructor,m-&gt;IsConstructor())<SUB>581</SUB>> ]
-"939" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(method))<SUB>586</SUB>> ]
-"874" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>577</SUB>> ]
-"881" [label = <(FIELD_IDENTIFIER,Executable,Executable)<SUB>578</SUB>> ]
-"885" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>579</SUB>> ]
-"897" [label = <(IsActiveTransaction,Runtime::Current()-&gt;IsActiveTransaction())<SUB>580</SUB>> ]
-"906" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsConstructor)<SUB>581</SUB>> ]
-"910" [label = <(&lt;operator&gt;.assignment,method = mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>582</SUB>> ]
-"940" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>586</SUB>> ]
-"853" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>575</SUB>> ]
-"876" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>577</SUB>> ]
-"886" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>579</SUB>> ]
-"893" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>579</SUB>> ]
-"898" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;IsActiveTransaction)<SUB>580</SUB>> ]
-"908" [label = <(FIELD_IDENTIFIER,IsConstructor,IsConstructor)<SUB>581</SUB>> ]
-"912" [label = <(mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>582</SUB>> ]
-"925" [label = <(&lt;operator&gt;.assignment,method = mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>584</SUB>> ]
-"941" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>586</SUB>> ]
-"854" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>575</SUB>> ]
-"858" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>575</SUB>> ]
-"865" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>575</SUB>> ]
-"887" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>579</SUB>> ]
-"899" [label = <(Runtime::Current,Runtime::Current())<SUB>580</SUB>> ]
-"903" [label = <(FIELD_IDENTIFIER,IsActiveTransaction,IsActiveTransaction)<SUB>580</SUB>> ]
-"913" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>582</SUB>> ]
-"918" [label = <(Self,soa.Self())<SUB>582</SUB>> ]
-"927" [label = <(mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>584</SUB>> ]
-"943" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>586</SUB>> ]
-"859" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>575</SUB>> ]
-"888" [label = <(Runtime::Current,Runtime::Current())<SUB>579</SUB>> ]
-"892" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>579</SUB>> ]
-"900" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>580</SUB>> ]
-"914" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor)<SUB>582</SUB>> ]
-"917" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>582</SUB>> ]
-"919" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>582</SUB>> ]
-"928" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>584</SUB>> ]
-"933" [label = <(Self,soa.Self())<SUB>584</SUB>> ]
-"860" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>575</SUB>> ]
-"862" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>575</SUB>> ]
-"889" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>579</SUB>> ]
-"902" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>580</SUB>> ]
-"921" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>582</SUB>> ]
-"929" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method)<SUB>584</SUB>> ]
-"932" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>584</SUB>> ]
-"934" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>584</SUB>> ]
-"891" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>579</SUB>> ]
-"936" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>584</SUB>> ]
-"843" [label = <(METHOD,ToReflectedMethod)<SUB>574</SUB>> ]
-"946" [label = <(METHOD_RETURN,jobject)<SUB>574</SUB>> ]
+"849" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>574</SUB>> ]
+"868" [label = <(soa,soa(env))<SUB>575</SUB>> ]
+"871" [label = <(&lt;operator&gt;.assignment,* m = jni::DecodeArtMethod(mid))<SUB>576</SUB>> ]
+"878" [label = <(&lt;operator&gt;.multiplication,mirror::Executable* method)<SUB>577</SUB>> ]
+"883" [label = <(DCHECK_EQ,DCHECK_EQ(Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize(), kRuntimePointerSize))<SUB>578</SUB>> ]
+"895" [label = <(DCHECK,DCHECK(!Runtime::Current()-&gt;IsActiveTransaction()))<SUB>579</SUB>> ]
+"938" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(method);,return soa.AddLocalReference&lt;jobject&gt;(method);)<SUB>585</SUB>> ]
+"873" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>576</SUB>> ]
+"879" [label = <(&lt;operator&gt;.fieldAccess,mirror::Executable)<SUB>577</SUB>> ]
+"884" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>578</SUB>> ]
+"896" [label = <(&lt;operator&gt;.logicalNot,!Runtime::Current()-&gt;IsActiveTransaction())<SUB>579</SUB>> ]
+"905" [label = <(IsConstructor,m-&gt;IsConstructor())<SUB>580</SUB>> ]
+"939" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(method))<SUB>585</SUB>> ]
+"874" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>576</SUB>> ]
+"881" [label = <(FIELD_IDENTIFIER,Executable,Executable)<SUB>577</SUB>> ]
+"885" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>578</SUB>> ]
+"897" [label = <(IsActiveTransaction,Runtime::Current()-&gt;IsActiveTransaction())<SUB>579</SUB>> ]
+"906" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsConstructor)<SUB>580</SUB>> ]
+"910" [label = <(&lt;operator&gt;.assignment,method = mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>581</SUB>> ]
+"940" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>585</SUB>> ]
+"853" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>574</SUB>> ]
+"876" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>576</SUB>> ]
+"886" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>578</SUB>> ]
+"893" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>578</SUB>> ]
+"898" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;IsActiveTransaction)<SUB>579</SUB>> ]
+"908" [label = <(FIELD_IDENTIFIER,IsConstructor,IsConstructor)<SUB>580</SUB>> ]
+"912" [label = <(mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>581</SUB>> ]
+"925" [label = <(&lt;operator&gt;.assignment,method = mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>583</SUB>> ]
+"941" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>585</SUB>> ]
+"854" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>574</SUB>> ]
+"858" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>574</SUB>> ]
+"865" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>574</SUB>> ]
+"887" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>578</SUB>> ]
+"899" [label = <(Runtime::Current,Runtime::Current())<SUB>579</SUB>> ]
+"903" [label = <(FIELD_IDENTIFIER,IsActiveTransaction,IsActiveTransaction)<SUB>579</SUB>> ]
+"913" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>581</SUB>> ]
+"918" [label = <(Self,soa.Self())<SUB>581</SUB>> ]
+"927" [label = <(mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>583</SUB>> ]
+"943" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>585</SUB>> ]
+"859" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>574</SUB>> ]
+"888" [label = <(Runtime::Current,Runtime::Current())<SUB>578</SUB>> ]
+"892" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>578</SUB>> ]
+"900" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>579</SUB>> ]
+"914" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor)<SUB>581</SUB>> ]
+"917" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>581</SUB>> ]
+"919" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>581</SUB>> ]
+"928" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>583</SUB>> ]
+"933" [label = <(Self,soa.Self())<SUB>583</SUB>> ]
+"860" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>574</SUB>> ]
+"862" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>574</SUB>> ]
+"889" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>578</SUB>> ]
+"902" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>579</SUB>> ]
+"921" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>581</SUB>> ]
+"929" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method)<SUB>583</SUB>> ]
+"932" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>583</SUB>> ]
+"934" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>583</SUB>> ]
+"891" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>578</SUB>> ]
+"936" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>583</SUB>> ]
+"843" [label = <(METHOD,ToReflectedMethod)<SUB>573</SUB>> ]
+"946" [label = <(METHOD_RETURN,jobject)<SUB>573</SUB>> ]
   "849" -> "854" 
   "849" -> "868" 
   "868" -> "876" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/300-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/300-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/300-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/300-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "GetSystemClassLoader" {  
-"15200" [label = <(METHOD,GetSystemClassLoader)> ]
-"15203" [label = <(METHOD_RETURN,ANY)> ]
-  "15200" -> "15203" 
+"15197" [label = <(METHOD,GetSystemClassLoader)> ]
+"15200" [label = <(METHOD_RETURN,ANY)> ]
+  "15197" -> "15200" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/301-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/301-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/301-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/301-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "c" {  
-"15204" [label = <(METHOD,c)> ]
-"15207" [label = <(METHOD_RETURN,ANY)> ]
-  "15204" -> "15207" 
+"15201" [label = <(METHOD,c)> ]
+"15204" [label = <(METHOD_RETURN,ANY)> ]
+  "15201" -> "15204" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/302-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/302-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/302-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/302-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "Self" {  
-"15208" [label = <(METHOD,Self)> ]
-"15211" [label = <(METHOD_RETURN,ANY)> ]
-  "15208" -> "15211" 
+"15205" [label = <(METHOD,Self)> ]
+"15208" [label = <(METHOD_RETURN,ANY)> ]
+  "15205" -> "15208" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/303-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/303-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/303-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/303-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "GetVm" {  
-"15212" [label = <(METHOD,GetVm)> ]
-"15215" [label = <(METHOD_RETURN,ANY)> ]
-  "15212" -> "15215" 
+"15209" [label = <(METHOD,GetVm)> ]
+"15212" [label = <(METHOD_RETURN,ANY)> ]
+  "15209" -> "15212" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/304-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/304-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/304-cfg.dot	2023-06-07 19:34:35.207389609 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/304-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT" {  
-"15216" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT)<SUB>492</SUB>> ]
-"15219" [label = <(METHOD_RETURN,ANY)> ]
-  "15216" -> "15219" 
+"15213" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT)<SUB>491</SUB>> ]
+"15216" [label = <(METHOD_RETURN,ANY)> ]
+  "15213" -> "15216" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/305-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/305-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/305-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/305-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "UNLIKELY" {  
-"15220" [label = <(METHOD,UNLIKELY)> ]
-"15223" [label = <(METHOD_RETURN,ANY)> ]
-  "15220" -> "15223" 
+"15217" [label = <(METHOD,UNLIKELY)> ]
+"15220" [label = <(METHOD_RETURN,ANY)> ]
+  "15217" -> "15220" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/306-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/306-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/306-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/306-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(name)" {  
-"15224" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(name))> ]
-"15229" [label = <(METHOD_RETURN,ANY)> ]
-  "15224" -> "15229" 
+"15221" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(name))> ]
+"15226" [label = <(METHOD_RETURN,ANY)> ]
+  "15221" -> "15226" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/307-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/307-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/307-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/307-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "descriptor" {  
-"15230" [label = <(METHOD,descriptor)> ]
-"15233" [label = <(METHOD_RETURN,ANY)> ]
-  "15230" -> "15233" 
+"15227" [label = <(METHOD,descriptor)> ]
+"15230" [label = <(METHOD_RETURN,ANY)> ]
+  "15227" -> "15230" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/308-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/308-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/308-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/308-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "soa" {  
-"15234" [label = <(METHOD,soa)> ]
-"15237" [label = <(METHOD_RETURN,ANY)> ]
-  "15234" -> "15237" 
+"15231" [label = <(METHOD,soa)> ]
+"15234" [label = <(METHOD_RETURN,ANY)> ]
+  "15231" -> "15234" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/309-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/309-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/309-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/309-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "IsStarted" {  
-"15238" [label = <(METHOD,IsStarted)> ]
-"15241" [label = <(METHOD_RETURN,ANY)> ]
-  "15238" -> "15241" 
+"15235" [label = <(METHOD,IsStarted)> ]
+"15238" [label = <(METHOD_RETURN,ANY)> ]
+  "15235" -> "15238" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/31-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/31-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/31-cfg.dot	2023-06-07 19:34:35.047389625 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/31-cfg.dot	2023-06-07 19:34:41.567389024 +0330
@@ -1,34 +1,34 @@
 digraph "ToReflectedField" {  
-"954" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>590</SUB>> ]
-"973" [label = <(soa,soa(env))<SUB>591</SUB>> ]
-"976" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>592</SUB>> ]
-"983" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));)<SUB>593</SUB>> ]
-"978" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>592</SUB>> ]
-"984" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true)))<SUB>593</SUB>> ]
-"979" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>592</SUB>> ]
-"985" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>593</SUB>> ]
-"990" [label = <(&lt;operator&gt;.greaterThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true))<SUB>594</SUB>> ]
-"958" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>590</SUB>> ]
-"981" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>592</SUB>> ]
-"986" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>593</SUB>> ]
-"991" [label = <(&lt;operator&gt;.lessThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize)<SUB>594</SUB>> ]
-"998" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(), f, true))<SUB>594</SUB>> ]
-"959" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>590</SUB>> ]
-"963" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>590</SUB>> ]
-"970" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>590</SUB>> ]
-"988" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>593</SUB>> ]
-"992" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::CreateFromArtField)<SUB>594</SUB>> ]
-"999" [label = <(&lt;operator&gt;.expressionList,soa.Self(), f, true)<SUB>594</SUB>> ]
-"964" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>590</SUB>> ]
-"993" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>594</SUB>> ]
-"996" [label = <(FIELD_IDENTIFIER,CreateFromArtField,CreateFromArtField)<SUB>594</SUB>> ]
-"1000" [label = <(Self,soa.Self())<SUB>594</SUB>> ]
-"965" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>590</SUB>> ]
-"967" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>590</SUB>> ]
-"1001" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>594</SUB>> ]
-"1003" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>594</SUB>> ]
-"948" [label = <(METHOD,ToReflectedField)<SUB>589</SUB>> ]
-"1006" [label = <(METHOD_RETURN,jobject)<SUB>589</SUB>> ]
+"954" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>589</SUB>> ]
+"973" [label = <(soa,soa(env))<SUB>590</SUB>> ]
+"976" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>591</SUB>> ]
+"983" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));)<SUB>592</SUB>> ]
+"978" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>591</SUB>> ]
+"984" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true)))<SUB>592</SUB>> ]
+"979" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>591</SUB>> ]
+"985" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>592</SUB>> ]
+"990" [label = <(&lt;operator&gt;.greaterThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true))<SUB>593</SUB>> ]
+"958" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>589</SUB>> ]
+"981" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>591</SUB>> ]
+"986" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>592</SUB>> ]
+"991" [label = <(&lt;operator&gt;.lessThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize)<SUB>593</SUB>> ]
+"998" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(), f, true))<SUB>593</SUB>> ]
+"959" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>589</SUB>> ]
+"963" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>589</SUB>> ]
+"970" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>589</SUB>> ]
+"988" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>592</SUB>> ]
+"992" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::CreateFromArtField)<SUB>593</SUB>> ]
+"999" [label = <(&lt;operator&gt;.expressionList,soa.Self(), f, true)<SUB>593</SUB>> ]
+"964" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>589</SUB>> ]
+"993" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>593</SUB>> ]
+"996" [label = <(FIELD_IDENTIFIER,CreateFromArtField,CreateFromArtField)<SUB>593</SUB>> ]
+"1000" [label = <(Self,soa.Self())<SUB>593</SUB>> ]
+"965" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>589</SUB>> ]
+"967" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>589</SUB>> ]
+"1001" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>593</SUB>> ]
+"1003" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>593</SUB>> ]
+"948" [label = <(METHOD,ToReflectedField)<SUB>588</SUB>> ]
+"1006" [label = <(METHOD_RETURN,jobject)<SUB>588</SUB>> ]
   "954" -> "959" 
   "954" -> "973" 
   "973" -> "981" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/310-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/310-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/310-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/310-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "class_loader" {  
-"15242" [label = <(METHOD,class_loader)> ]
-"15245" [label = <(METHOD_RETURN,ANY)> ]
-  "15242" -> "15245" 
+"15239" [label = <(METHOD,class_loader)> ]
+"15242" [label = <(METHOD_RETURN,ANY)> ]
+  "15239" -> "15242" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/311-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/311-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/311-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/311-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "FindClass" {  
-"15246" [label = <(METHOD,FindClass)> ]
-"15252" [label = <(METHOD_RETURN,ANY)> ]
-  "15246" -> "15252" 
+"15243" [label = <(METHOD,FindClass)> ]
+"15249" [label = <(METHOD_RETURN,ANY)> ]
+  "15243" -> "15249" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/312-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/312-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/312-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/312-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "c_str" {  
-"15253" [label = <(METHOD,c_str)> ]
-"15256" [label = <(METHOD_RETURN,ANY)> ]
-  "15253" -> "15256" 
+"15250" [label = <(METHOD,c_str)> ]
+"15253" [label = <(METHOD_RETURN,ANY)> ]
+  "15250" -> "15253" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/313-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/313-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/313-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/313-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "FindSystemClass" {  
-"15257" [label = <(METHOD,FindSystemClass)> ]
-"15262" [label = <(METHOD_RETURN,ANY)> ]
-  "15257" -> "15262" 
+"15254" [label = <(METHOD,FindSystemClass)> ]
+"15259" [label = <(METHOD_RETURN,ANY)> ]
+  "15254" -> "15259" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/314-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/314-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/314-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/314-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(jlr_method)" {  
-"15263" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_method))> ]
-"15268" [label = <(METHOD_RETURN,ANY)> ]
-  "15263" -> "15268" 
+"15260" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_method))> ]
+"15265" [label = <(METHOD_RETURN,ANY)> ]
+  "15260" -> "15265" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/315-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/315-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/315-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/315-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "jni::EncodeArtMethod" {  
-"15269" [label = <(METHOD,jni::EncodeArtMethod)> ]
-"15273" [label = <(METHOD_RETURN,ANY)> ]
-  "15269" -> "15273" 
+"15266" [label = <(METHOD,jni::EncodeArtMethod)> ]
+"15270" [label = <(METHOD_RETURN,ANY)> ]
+  "15266" -> "15270" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/316-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/316-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/316-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/316-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "ArtMethod::FromReflectedMethod" {  
-"15274" [label = <(METHOD,ArtMethod::FromReflectedMethod)> ]
-"15279" [label = <(METHOD_RETURN,ANY)> ]
-  "15274" -> "15279" 
+"15271" [label = <(METHOD,ArtMethod::FromReflectedMethod)> ]
+"15276" [label = <(METHOD_RETURN,ANY)> ]
+  "15271" -> "15276" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/317-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/317-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/317-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/317-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(jlr_field)" {  
-"15280" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_field))> ]
-"15285" [label = <(METHOD_RETURN,ANY)> ]
-  "15280" -> "15285" 
+"15277" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_field))> ]
+"15282" [label = <(METHOD_RETURN,ANY)> ]
+  "15277" -> "15282" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/318-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/318-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/318-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/318-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "GetClass" {  
-"15286" [label = <(METHOD,GetClass)> ]
-"15289" [label = <(METHOD_RETURN,ANY)> ]
-  "15286" -> "15289" 
+"15283" [label = <(METHOD,GetClass)> ]
+"15286" [label = <(METHOD_RETURN,ANY)> ]
+  "15283" -> "15286" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/319-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/319-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/319-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/319-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Field::StaticClass" {  
-"15290" [label = <(METHOD,mirror::Field::StaticClass)> ]
-"15293" [label = <(METHOD_RETURN,ANY)> ]
-  "15290" -> "15293" 
+"15287" [label = <(METHOD,mirror::Field::StaticClass)> ]
+"15290" [label = <(METHOD_RETURN,ANY)> ]
+  "15287" -> "15290" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/32-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/32-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/32-cfg.dot	2023-06-07 19:34:35.047389625 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/32-cfg.dot	2023-06-07 19:34:41.567389024 +0330
@@ -1,34 +1,34 @@
 digraph "GetObjectClass" {  
-"1012" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_object))<SUB>598</SUB>> ]
-"1031" [label = <(soa,soa(env))<SUB>599</SUB>> ]
-"1033" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>600</SUB>> ]
-"1050" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());)<SUB>601</SUB>> ]
-"1034" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>600</SUB>> ]
-"1041" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>600</SUB>> ]
-"1051" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass()))<SUB>601</SUB>> ]
-"1035" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>600</SUB>> ]
-"1042" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>600</SUB>> ]
-"1052" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>601</SUB>> ]
-"1057" [label = <(GetClass,o-&gt;GetClass())<SUB>601</SUB>> ]
-"1016" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>598</SUB>> ]
-"1037" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>600</SUB>> ]
-"1043" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>600</SUB>> ]
-"1046" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>600</SUB>> ]
-"1053" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>601</SUB>> ]
-"1058" [label = <(&lt;operator&gt;.indirectFieldAccess,o-&gt;GetClass)<SUB>601</SUB>> ]
-"1017" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>598</SUB>> ]
-"1021" [label = <(CHECK_NON_NULL_ARGUMENT(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>598</SUB>> ]
-"1028" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_object),CHECK_NON_NULL_ARGUMENT(java_object))<SUB>598</SUB>> ]
-"1039" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>600</SUB>> ]
-"1045" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>600</SUB>> ]
-"1048" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>600</SUB>> ]
-"1055" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>601</SUB>> ]
-"1060" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>601</SUB>> ]
-"1022" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>598</SUB>> ]
-"1023" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>598</SUB>> ]
-"1025" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>598</SUB>> ]
-"1008" [label = <(METHOD,GetObjectClass)<SUB>597</SUB>> ]
-"1061" [label = <(METHOD_RETURN,jclass)<SUB>597</SUB>> ]
+"1012" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_object))<SUB>597</SUB>> ]
+"1031" [label = <(soa,soa(env))<SUB>598</SUB>> ]
+"1033" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>599</SUB>> ]
+"1050" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());)<SUB>600</SUB>> ]
+"1034" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>599</SUB>> ]
+"1041" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>599</SUB>> ]
+"1051" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass()))<SUB>600</SUB>> ]
+"1035" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>599</SUB>> ]
+"1042" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>599</SUB>> ]
+"1052" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>600</SUB>> ]
+"1057" [label = <(GetClass,o-&gt;GetClass())<SUB>600</SUB>> ]
+"1016" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>597</SUB>> ]
+"1037" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>599</SUB>> ]
+"1043" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>599</SUB>> ]
+"1046" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>599</SUB>> ]
+"1053" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>600</SUB>> ]
+"1058" [label = <(&lt;operator&gt;.indirectFieldAccess,o-&gt;GetClass)<SUB>600</SUB>> ]
+"1017" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>597</SUB>> ]
+"1021" [label = <(CHECK_NON_NULL_ARGUMENT(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>597</SUB>> ]
+"1028" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_object),CHECK_NON_NULL_ARGUMENT(java_object))<SUB>597</SUB>> ]
+"1039" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>599</SUB>> ]
+"1045" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>599</SUB>> ]
+"1048" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>599</SUB>> ]
+"1055" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>600</SUB>> ]
+"1060" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>600</SUB>> ]
+"1022" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>597</SUB>> ]
+"1023" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>597</SUB>> ]
+"1025" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>597</SUB>> ]
+"1008" [label = <(METHOD,GetObjectClass)<SUB>596</SUB>> ]
+"1061" [label = <(METHOD_RETURN,jclass)<SUB>596</SUB>> ]
   "1012" -> "1017" 
   "1012" -> "1031" 
   "1031" -> "1039" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/320-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/320-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/320-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/320-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "::DownCast" {  
-"15294" [label = <(METHOD,::DownCast)> ]
-"15298" [label = <(METHOD_RETURN,ANY)> ]
-  "15294" -> "15298" 
+"15291" [label = <(METHOD,::DownCast)> ]
+"15295" [label = <(METHOD_RETURN,ANY)> ]
+  "15291" -> "15295" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/321-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/321-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/321-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/321-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "jni::EncodeArtField" {  
-"15299" [label = <(METHOD,jni::EncodeArtField)> ]
-"15303" [label = <(METHOD_RETURN,ANY)> ]
-  "15299" -> "15303" 
+"15296" [label = <(METHOD,jni::EncodeArtField)> ]
+"15300" [label = <(METHOD_RETURN,ANY)> ]
+  "15296" -> "15300" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/322-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/322-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/322-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/322-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "GetArtField" {  
-"15304" [label = <(METHOD,GetArtField)> ]
-"15307" [label = <(METHOD_RETURN,ANY)> ]
-  "15304" -> "15307" 
+"15301" [label = <(METHOD,GetArtField)> ]
+"15304" [label = <(METHOD_RETURN,ANY)> ]
+  "15301" -> "15304" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/323-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/323-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/323-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/323-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(mid)" {  
-"15308" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(mid))> ]
-"15313" [label = <(METHOD_RETURN,ANY)> ]
-  "15308" -> "15313" 
+"15305" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(mid))> ]
+"15310" [label = <(METHOD_RETURN,ANY)> ]
+  "15305" -> "15310" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/324-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/324-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/324-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/324-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "jni::DecodeArtMethod" {  
-"15314" [label = <(METHOD,jni::DecodeArtMethod)> ]
-"15318" [label = <(METHOD_RETURN,ANY)> ]
-  "15314" -> "15318" 
+"15311" [label = <(METHOD,jni::DecodeArtMethod)> ]
+"15315" [label = <(METHOD_RETURN,ANY)> ]
+  "15311" -> "15315" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/325-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/325-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/325-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/325-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.multiplication" {  
-"15319" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
-"15323" [label = <(METHOD_RETURN,ANY)> ]
-  "15319" -> "15323" 
+"15316" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
+"15320" [label = <(METHOD_RETURN,ANY)> ]
+  "15316" -> "15320" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/326-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/326-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/326-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/326-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK_EQ" {  
-"15324" [label = <(METHOD,DCHECK_EQ)> ]
-"15328" [label = <(METHOD_RETURN,ANY)> ]
-  "15324" -> "15328" 
+"15321" [label = <(METHOD,DCHECK_EQ)> ]
+"15325" [label = <(METHOD_RETURN,ANY)> ]
+  "15321" -> "15325" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/327-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/327-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/327-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/327-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK" {  
-"15329" [label = <(METHOD,DCHECK)> ]
-"15332" [label = <(METHOD_RETURN,ANY)> ]
-  "15329" -> "15332" 
+"15326" [label = <(METHOD,DCHECK)> ]
+"15329" [label = <(METHOD_RETURN,ANY)> ]
+  "15326" -> "15329" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/328-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/328-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/328-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/328-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalNot" {  
-"15333" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
-"15336" [label = <(METHOD_RETURN,ANY)> ]
-  "15333" -> "15336" 
+"15330" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
+"15333" [label = <(METHOD_RETURN,ANY)> ]
+  "15330" -> "15333" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/329-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/329-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/329-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/329-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "IsActiveTransaction" {  
-"15337" [label = <(METHOD,IsActiveTransaction)> ]
-"15340" [label = <(METHOD_RETURN,ANY)> ]
-  "15337" -> "15340" 
+"15334" [label = <(METHOD,IsActiveTransaction)> ]
+"15337" [label = <(METHOD_RETURN,ANY)> ]
+  "15334" -> "15337" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/33-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/33-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/33-cfg.dot	2023-06-07 19:34:35.047389625 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/33-cfg.dot	2023-06-07 19:34:41.567389024 +0330
@@ -1,38 +1,38 @@
 digraph "GetSuperclass" {  
-"1067" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>605</SUB>> ]
-"1086" [label = <(soa,soa(env))<SUB>606</SUB>> ]
-"1088" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>607</SUB>> ]
-"1105" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());)<SUB>608</SUB>> ]
-"1089" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>607</SUB>> ]
-"1096" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>607</SUB>> ]
-"1106" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass()))<SUB>608</SUB>> ]
-"1090" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>607</SUB>> ]
-"1097" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>607</SUB>> ]
-"1107" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>608</SUB>> ]
-"1112" [label = <(&lt;operator&gt;.conditional,c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass())<SUB>608</SUB>> ]
-"1071" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>605</SUB>> ]
-"1092" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>607</SUB>> ]
-"1098" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>607</SUB>> ]
-"1101" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>607</SUB>> ]
-"1108" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>608</SUB>> ]
-"1113" [label = <(IsInterface,c-&gt;IsInterface())<SUB>608</SUB>> ]
-"1118" [label = <(GetSuperClass,c-&gt;GetSuperClass())<SUB>608</SUB>> ]
-"1072" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>605</SUB>> ]
-"1076" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>605</SUB>> ]
-"1083" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>605</SUB>> ]
-"1094" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>607</SUB>> ]
-"1100" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>607</SUB>> ]
-"1103" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>607</SUB>> ]
-"1110" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>608</SUB>> ]
-"1114" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsInterface)<SUB>608</SUB>> ]
-"1119" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetSuperClass)<SUB>608</SUB>> ]
-"1077" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>605</SUB>> ]
-"1116" [label = <(FIELD_IDENTIFIER,IsInterface,IsInterface)<SUB>608</SUB>> ]
-"1121" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>608</SUB>> ]
-"1078" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>605</SUB>> ]
-"1080" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>605</SUB>> ]
-"1063" [label = <(METHOD,GetSuperclass)<SUB>604</SUB>> ]
-"1122" [label = <(METHOD_RETURN,jclass)<SUB>604</SUB>> ]
+"1067" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>604</SUB>> ]
+"1086" [label = <(soa,soa(env))<SUB>605</SUB>> ]
+"1088" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>606</SUB>> ]
+"1105" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());)<SUB>607</SUB>> ]
+"1089" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>606</SUB>> ]
+"1096" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>606</SUB>> ]
+"1106" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass()))<SUB>607</SUB>> ]
+"1090" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>606</SUB>> ]
+"1097" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>606</SUB>> ]
+"1107" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>607</SUB>> ]
+"1112" [label = <(&lt;operator&gt;.conditional,c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass())<SUB>607</SUB>> ]
+"1071" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>604</SUB>> ]
+"1092" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>606</SUB>> ]
+"1098" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>606</SUB>> ]
+"1101" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>606</SUB>> ]
+"1108" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>607</SUB>> ]
+"1113" [label = <(IsInterface,c-&gt;IsInterface())<SUB>607</SUB>> ]
+"1118" [label = <(GetSuperClass,c-&gt;GetSuperClass())<SUB>607</SUB>> ]
+"1072" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>604</SUB>> ]
+"1076" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>604</SUB>> ]
+"1083" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>604</SUB>> ]
+"1094" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>606</SUB>> ]
+"1100" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>606</SUB>> ]
+"1103" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>606</SUB>> ]
+"1110" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>607</SUB>> ]
+"1114" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsInterface)<SUB>607</SUB>> ]
+"1119" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetSuperClass)<SUB>607</SUB>> ]
+"1077" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>604</SUB>> ]
+"1116" [label = <(FIELD_IDENTIFIER,IsInterface,IsInterface)<SUB>607</SUB>> ]
+"1121" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>607</SUB>> ]
+"1078" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>604</SUB>> ]
+"1080" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>604</SUB>> ]
+"1063" [label = <(METHOD,GetSuperclass)<SUB>603</SUB>> ]
+"1122" [label = <(METHOD_RETURN,jclass)<SUB>603</SUB>> ]
   "1067" -> "1072" 
   "1067" -> "1086" 
   "1086" -> "1094" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/330-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/330-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/330-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/330-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "IsConstructor" {  
-"15341" [label = <(METHOD,IsConstructor)> ]
-"15344" [label = <(METHOD_RETURN,ANY)> ]
-  "15341" -> "15344" 
+"15338" [label = <(METHOD,IsConstructor)> ]
+"15341" [label = <(METHOD_RETURN,ANY)> ]
+  "15338" -> "15341" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/331-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/331-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/331-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/331-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;" {  
-"15345" [label = <(METHOD,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
-"15350" [label = <(METHOD_RETURN,ANY)> ]
-  "15345" -> "15350" 
+"15342" [label = <(METHOD,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
+"15347" [label = <(METHOD_RETURN,ANY)> ]
+  "15342" -> "15347" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/332-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/332-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/332-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/332-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;" {  
-"15351" [label = <(METHOD,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
-"15356" [label = <(METHOD_RETURN,ANY)> ]
-  "15351" -> "15356" 
+"15348" [label = <(METHOD,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
+"15353" [label = <(METHOD_RETURN,ANY)> ]
+  "15348" -> "15353" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/333-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/333-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/333-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/333-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(fid)" {  
-"15357" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(fid))> ]
-"15362" [label = <(METHOD_RETURN,ANY)> ]
-  "15357" -> "15362" 
+"15354" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(fid))> ]
+"15359" [label = <(METHOD_RETURN,ANY)> ]
+  "15354" -> "15359" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/334-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/334-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/334-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/334-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "jni::DecodeArtField" {  
-"15363" [label = <(METHOD,jni::DecodeArtField)> ]
-"15367" [label = <(METHOD_RETURN,ANY)> ]
-  "15363" -> "15367" 
+"15360" [label = <(METHOD,jni::DecodeArtField)> ]
+"15364" [label = <(METHOD_RETURN,ANY)> ]
+  "15360" -> "15364" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/335-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/335-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/335-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/335-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.bracketedPrimary" {  
-"15368" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
-"15371" [label = <(METHOD_RETURN,ANY)> ]
-  "15368" -> "15371" 
+"15365" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
+"15368" [label = <(METHOD_RETURN,ANY)> ]
+  "15365" -> "15368" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/336-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/336-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/336-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/336-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.expressionList" {  
-"15372" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
-"15377" [label = <(METHOD_RETURN,ANY)> ]
-  "15372" -> "15377" 
+"15369" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
+"15374" [label = <(METHOD_RETURN,ANY)> ]
+  "15369" -> "15374" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/337-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/337-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/337-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/337-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(java_object)" {  
-"15378" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_object))> ]
-"15383" [label = <(METHOD_RETURN,ANY)> ]
-  "15378" -> "15383" 
+"15375" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_object))> ]
+"15380" [label = <(METHOD_RETURN,ANY)> ]
+  "15375" -> "15380" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/338-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/338-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/338-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/338-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(java_class)" {  
-"15384" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_class))> ]
-"15389" [label = <(METHOD_RETURN,ANY)> ]
-  "15384" -> "15389" 
+"15381" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_class))> ]
+"15386" [label = <(METHOD_RETURN,ANY)> ]
+  "15381" -> "15386" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/339-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/339-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/339-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/339-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "IsInterface" {  
-"15390" [label = <(METHOD,IsInterface)> ]
-"15393" [label = <(METHOD_RETURN,ANY)> ]
-  "15390" -> "15393" 
+"15387" [label = <(METHOD,IsInterface)> ]
+"15390" [label = <(METHOD_RETURN,ANY)> ]
+  "15387" -> "15390" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/34-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/34-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/34-cfg.dot	2023-06-07 19:34:35.047389625 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/34-cfg.dot	2023-06-07 19:34:41.567389024 +0330
@@ -1,50 +1,50 @@
 digraph "IsAssignableFrom" {  
-"1129" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>614</SUB>> ]
-"1148" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>615</SUB>> ]
-"1168" [label = <(soa,soa(env))<SUB>616</SUB>> ]
-"1170" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c1 = soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>617</SUB>> ]
-"1187" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c2 = soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>618</SUB>> ]
-"1204" [label = <(RETURN,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;)<SUB>619</SUB>> ]
-"1171" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c1)<SUB>617</SUB>> ]
-"1178" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>617</SUB>> ]
-"1188" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c2)<SUB>618</SUB>> ]
-"1195" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>618</SUB>> ]
-"1205" [label = <(&lt;operator&gt;.conditional,c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE)<SUB>619</SUB>> ]
-"1172" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>617</SUB>> ]
-"1179" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>617</SUB>> ]
-"1189" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>618</SUB>> ]
-"1196" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>618</SUB>> ]
-"1206" [label = <(IsAssignableFrom,c2-&gt;IsAssignableFrom(c1))<SUB>619</SUB>> ]
-"1134" [label = <(UNLIKELY,UNLIKELY((java_class1) == nullptr))<SUB>614</SUB>> ]
-"1153" [label = <(UNLIKELY,UNLIKELY((java_class2) == nullptr))<SUB>615</SUB>> ]
-"1174" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>617</SUB>> ]
-"1180" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>617</SUB>> ]
-"1183" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>617</SUB>> ]
-"1191" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>618</SUB>> ]
-"1197" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>618</SUB>> ]
-"1200" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>618</SUB>> ]
-"1207" [label = <(&lt;operator&gt;.indirectFieldAccess,c2-&gt;IsAssignableFrom)<SUB>619</SUB>> ]
-"1135" [label = <(&lt;operator&gt;.equals,(java_class1) == nullptr)<SUB>614</SUB>> ]
-"1139" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class1 == null&quot;))<SUB>614</SUB>> ]
-"1146" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>614</SUB>> ]
-"1154" [label = <(&lt;operator&gt;.equals,(java_class2) == nullptr)<SUB>615</SUB>> ]
-"1158" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class2 == null&quot;))<SUB>615</SUB>> ]
-"1165" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>615</SUB>> ]
-"1176" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>617</SUB>> ]
-"1182" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>617</SUB>> ]
-"1185" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>617</SUB>> ]
-"1193" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>618</SUB>> ]
-"1199" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>618</SUB>> ]
-"1202" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>618</SUB>> ]
-"1209" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>619</SUB>> ]
-"1140" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>614</SUB>> ]
-"1159" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>615</SUB>> ]
-"1141" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>614</SUB>> ]
-"1143" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>614</SUB>> ]
-"1160" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>615</SUB>> ]
-"1162" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>615</SUB>> ]
-"1124" [label = <(METHOD,IsAssignableFrom)<SUB>613</SUB>> ]
-"1213" [label = <(METHOD_RETURN,jboolean)<SUB>613</SUB>> ]
+"1129" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>613</SUB>> ]
+"1148" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>614</SUB>> ]
+"1168" [label = <(soa,soa(env))<SUB>615</SUB>> ]
+"1170" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c1 = soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>616</SUB>> ]
+"1187" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c2 = soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>617</SUB>> ]
+"1204" [label = <(RETURN,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;)<SUB>618</SUB>> ]
+"1171" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c1)<SUB>616</SUB>> ]
+"1178" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>616</SUB>> ]
+"1188" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c2)<SUB>617</SUB>> ]
+"1195" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>617</SUB>> ]
+"1205" [label = <(&lt;operator&gt;.conditional,c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE)<SUB>618</SUB>> ]
+"1172" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>616</SUB>> ]
+"1179" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>616</SUB>> ]
+"1189" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>617</SUB>> ]
+"1196" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>617</SUB>> ]
+"1206" [label = <(IsAssignableFrom,c2-&gt;IsAssignableFrom(c1))<SUB>618</SUB>> ]
+"1134" [label = <(UNLIKELY,UNLIKELY((java_class1) == nullptr))<SUB>613</SUB>> ]
+"1153" [label = <(UNLIKELY,UNLIKELY((java_class2) == nullptr))<SUB>614</SUB>> ]
+"1174" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>616</SUB>> ]
+"1180" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>616</SUB>> ]
+"1183" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>616</SUB>> ]
+"1191" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>617</SUB>> ]
+"1197" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>617</SUB>> ]
+"1200" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>617</SUB>> ]
+"1207" [label = <(&lt;operator&gt;.indirectFieldAccess,c2-&gt;IsAssignableFrom)<SUB>618</SUB>> ]
+"1135" [label = <(&lt;operator&gt;.equals,(java_class1) == nullptr)<SUB>613</SUB>> ]
+"1139" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class1 == null&quot;))<SUB>613</SUB>> ]
+"1146" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>613</SUB>> ]
+"1154" [label = <(&lt;operator&gt;.equals,(java_class2) == nullptr)<SUB>614</SUB>> ]
+"1158" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class2 == null&quot;))<SUB>614</SUB>> ]
+"1165" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>614</SUB>> ]
+"1176" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>616</SUB>> ]
+"1182" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>616</SUB>> ]
+"1185" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>616</SUB>> ]
+"1193" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>617</SUB>> ]
+"1199" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>617</SUB>> ]
+"1202" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>617</SUB>> ]
+"1209" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>618</SUB>> ]
+"1140" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>613</SUB>> ]
+"1159" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>614</SUB>> ]
+"1141" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>613</SUB>> ]
+"1143" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>613</SUB>> ]
+"1160" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>614</SUB>> ]
+"1162" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>614</SUB>> ]
+"1124" [label = <(METHOD,IsAssignableFrom)<SUB>612</SUB>> ]
+"1213" [label = <(METHOD_RETURN,jboolean)<SUB>612</SUB>> ]
   "1129" -> "1135" 
   "1129" -> "1148" 
   "1148" -> "1154" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/340-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/340-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/340-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/340-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "GetSuperClass" {  
-"15394" [label = <(METHOD,GetSuperClass)> ]
-"15397" [label = <(METHOD_RETURN,ANY)> ]
-  "15394" -> "15397" 
+"15391" [label = <(METHOD,GetSuperClass)> ]
+"15394" [label = <(METHOD_RETURN,ANY)> ]
+  "15391" -> "15394" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/341-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/341-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/341-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/341-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN" {  
-"15398" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN)<SUB>501</SUB>> ]
-"15402" [label = <(METHOD_RETURN,ANY)> ]
-  "15398" -> "15402" 
+"15395" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN)<SUB>500</SUB>> ]
+"15399" [label = <(METHOD_RETURN,ANY)> ]
+  "15395" -> "15399" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/342-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/342-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/342-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/342-cfg.dot	2023-06-07 19:34:41.747389005 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE)" {  
-"15403" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))> ]
-"15408" [label = <(METHOD_RETURN,ANY)> ]
-  "15403" -> "15408" 
+"15400" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))> ]
+"15405" [label = <(METHOD_RETURN,ANY)> ]
+  "15400" -> "15405" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/343-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/343-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/343-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/343-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE)" {  
-"15409" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))> ]
-"15414" [label = <(METHOD_RETURN,ANY)> ]
-  "15409" -> "15414" 
+"15406" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))> ]
+"15411" [label = <(METHOD_RETURN,ANY)> ]
+  "15406" -> "15411" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/344-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/344-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/344-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/344-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "IsAssignableFrom" {  
-"15415" [label = <(METHOD,IsAssignableFrom)> ]
-"15419" [label = <(METHOD_RETURN,ANY)> ]
-  "15415" -> "15419" 
+"15412" [label = <(METHOD,IsAssignableFrom)> ]
+"15416" [label = <(METHOD_RETURN,ANY)> ]
+  "15412" -> "15416" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/345-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/345-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/345-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/345-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE)" {  
-"15420" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))> ]
-"15425" [label = <(METHOD_RETURN,ANY)> ]
-  "15420" -> "15425" 
+"15417" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))> ]
+"15422" [label = <(METHOD_RETURN,ANY)> ]
+  "15417" -> "15422" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/346-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/346-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/346-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/346-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "InstanceOf" {  
-"15426" [label = <(METHOD,InstanceOf)> ]
-"15430" [label = <(METHOD_RETURN,ANY)> ]
-  "15426" -> "15430" 
+"15423" [label = <(METHOD,InstanceOf)> ]
+"15427" [label = <(METHOD_RETURN,ANY)> ]
+  "15423" -> "15427" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/347-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/347-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/347-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/347-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "SetException" {  
-"15431" [label = <(METHOD,SetException)> ]
-"15435" [label = <(METHOD_RETURN,ANY)> ]
-  "15431" -> "15435" 
+"15428" [label = <(METHOD,SetException)> ]
+"15432" [label = <(METHOD_RETURN,ANY)> ]
+  "15428" -> "15432" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/348-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/348-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/348-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/348-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR)" {  
-"15436" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))> ]
-"15441" [label = <(METHOD_RETURN,ANY)> ]
-  "15436" -> "15441" 
+"15433" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))> ]
+"15438" [label = <(METHOD_RETURN,ANY)> ]
+  "15433" -> "15438" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/349-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/349-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/349-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/349-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "IsExceptionPending" {  
-"15442" [label = <(METHOD,IsExceptionPending)> ]
-"15445" [label = <(METHOD_RETURN,ANY)> ]
-  "15442" -> "15445" 
+"15439" [label = <(METHOD,IsExceptionPending)> ]
+"15442" [label = <(METHOD_RETURN,ANY)> ]
+  "15439" -> "15442" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/35-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/35-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/35-cfg.dot	2023-06-07 19:34:35.047389625 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/35-cfg.dot	2023-06-07 19:34:41.567389024 +0330
@@ -1,44 +1,44 @@
 digraph "IsInstanceOf" {  
-"1220" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>623</SUB>> ]
-"1240" [label = <(&lt;operator&gt;.equals,jobj == nullptr)<SUB>624</SUB>> ]
-"1244" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>626</SUB>> ]
-"1225" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>623</SUB>> ]
-"1249" [label = <(soa,soa(env))<SUB>628</SUB>> ]
-"1251" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>629</SUB>> ]
-"1268" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>630</SUB>> ]
-"1285" [label = <(RETURN,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;)<SUB>631</SUB>> ]
-"1226" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>623</SUB>> ]
-"1230" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>623</SUB>> ]
-"1237" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>623</SUB>> ]
-"1252" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>629</SUB>> ]
-"1259" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>629</SUB>> ]
-"1269" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>630</SUB>> ]
-"1276" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>630</SUB>> ]
-"1286" [label = <(&lt;operator&gt;.conditional,obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE)<SUB>631</SUB>> ]
-"1231" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>623</SUB>> ]
-"1253" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>629</SUB>> ]
-"1260" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>629</SUB>> ]
-"1270" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>630</SUB>> ]
-"1277" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>630</SUB>> ]
-"1287" [label = <(InstanceOf,obj-&gt;InstanceOf(c))<SUB>631</SUB>> ]
-"1232" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>623</SUB>> ]
-"1234" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>623</SUB>> ]
-"1255" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>629</SUB>> ]
-"1261" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>629</SUB>> ]
-"1264" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>629</SUB>> ]
-"1272" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>630</SUB>> ]
-"1278" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>630</SUB>> ]
-"1281" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>630</SUB>> ]
-"1288" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;InstanceOf)<SUB>631</SUB>> ]
-"1257" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>629</SUB>> ]
-"1263" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>629</SUB>> ]
-"1266" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>629</SUB>> ]
-"1274" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>630</SUB>> ]
-"1280" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>630</SUB>> ]
-"1283" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>630</SUB>> ]
-"1290" [label = <(FIELD_IDENTIFIER,InstanceOf,InstanceOf)<SUB>631</SUB>> ]
-"1215" [label = <(METHOD,IsInstanceOf)<SUB>622</SUB>> ]
-"1294" [label = <(METHOD_RETURN,jboolean)<SUB>622</SUB>> ]
+"1220" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>622</SUB>> ]
+"1240" [label = <(&lt;operator&gt;.equals,jobj == nullptr)<SUB>623</SUB>> ]
+"1244" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>625</SUB>> ]
+"1225" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>622</SUB>> ]
+"1249" [label = <(soa,soa(env))<SUB>627</SUB>> ]
+"1251" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>628</SUB>> ]
+"1268" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>629</SUB>> ]
+"1285" [label = <(RETURN,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;)<SUB>630</SUB>> ]
+"1226" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>622</SUB>> ]
+"1230" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>622</SUB>> ]
+"1237" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>622</SUB>> ]
+"1252" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>628</SUB>> ]
+"1259" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>628</SUB>> ]
+"1269" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>629</SUB>> ]
+"1276" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>629</SUB>> ]
+"1286" [label = <(&lt;operator&gt;.conditional,obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE)<SUB>630</SUB>> ]
+"1231" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>622</SUB>> ]
+"1253" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>628</SUB>> ]
+"1260" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>628</SUB>> ]
+"1270" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>629</SUB>> ]
+"1277" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>629</SUB>> ]
+"1287" [label = <(InstanceOf,obj-&gt;InstanceOf(c))<SUB>630</SUB>> ]
+"1232" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>622</SUB>> ]
+"1234" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>622</SUB>> ]
+"1255" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>628</SUB>> ]
+"1261" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>628</SUB>> ]
+"1264" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>628</SUB>> ]
+"1272" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>629</SUB>> ]
+"1278" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>629</SUB>> ]
+"1281" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>629</SUB>> ]
+"1288" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;InstanceOf)<SUB>630</SUB>> ]
+"1257" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>628</SUB>> ]
+"1263" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>628</SUB>> ]
+"1266" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>628</SUB>> ]
+"1274" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>629</SUB>> ]
+"1280" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>629</SUB>> ]
+"1283" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>629</SUB>> ]
+"1290" [label = <(FIELD_IDENTIFIER,InstanceOf,InstanceOf)<SUB>630</SUB>> ]
+"1215" [label = <(METHOD,IsInstanceOf)<SUB>621</SUB>> ]
+"1294" [label = <(METHOD_RETURN,jboolean)<SUB>621</SUB>> ]
   "1220" -> "1226" 
   "1220" -> "1240" 
   "1240" -> "1244" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/350-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/350-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/350-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/350-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "ClearException" {  
-"15446" [label = <(METHOD,ClearException)> ]
-"15449" [label = <(METHOD_RETURN,ANY)> ]
-  "15446" -> "15449" 
+"15443" [label = <(METHOD,ClearException)> ]
+"15446" [label = <(METHOD_RETURN,ANY)> ]
+  "15443" -> "15446" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/351-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/351-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/351-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/351-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetException" {  
-"15450" [label = <(METHOD,GetException)> ]
-"15453" [label = <(METHOD_RETURN,ANY)> ]
-  "15450" -> "15453" 
+"15447" [label = <(METHOD,GetException)> ]
+"15450" [label = <(METHOD_RETURN,ANY)> ]
+  "15447" -> "15450" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/352-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/352-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/352-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/352-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "old_exception" {  
-"15454" [label = <(METHOD,old_exception)> ]
-"15457" [label = <(METHOD_RETURN,ANY)> ]
-  "15454" -> "15457" 
+"15451" [label = <(METHOD,old_exception)> ]
+"15454" [label = <(METHOD_RETURN,ANY)> ]
+  "15451" -> "15454" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/353-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/353-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/353-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/353-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "exception" {  
-"15458" [label = <(METHOD,exception)> ]
-"15462" [label = <(METHOD_RETURN,ANY)> ]
-  "15458" -> "15462" 
+"15455" [label = <(METHOD,exception)> ]
+"15459" [label = <(METHOD_RETURN,ANY)> ]
+  "15455" -> "15459" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/354-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/354-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/354-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/354-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "Get" {  
-"15463" [label = <(METHOD,Get)> ]
-"15466" [label = <(METHOD_RETURN,ANY)> ]
-  "15463" -> "15466" 
+"15460" [label = <(METHOD,Get)> ]
+"15463" [label = <(METHOD_RETURN,ANY)> ]
+  "15460" -> "15463" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/355-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/355-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/355-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/355-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "exception_class" {  
-"15467" [label = <(METHOD,exception_class)> ]
-"15471" [label = <(METHOD_RETURN,ANY)> ]
-  "15467" -> "15471" 
+"15464" [label = <(METHOD,exception_class)> ]
+"15468" [label = <(METHOD_RETURN,ANY)> ]
+  "15464" -> "15468" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/356-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/356-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/356-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/356-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetObjectClass" {  
-"15472" [label = <(METHOD,GetObjectClass)> ]
-"15476" [label = <(METHOD_RETURN,ANY)> ]
-  "15472" -> "15476" 
+"15469" [label = <(METHOD,GetObjectClass)> ]
+"15473" [label = <(METHOD_RETURN,ANY)> ]
+  "15469" -> "15473" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/357-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/357-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/357-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/357-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "get" {  
-"15477" [label = <(METHOD,get)> ]
-"15480" [label = <(METHOD_RETURN,ANY)> ]
-  "15477" -> "15480" 
+"15474" [label = <(METHOD,get)> ]
+"15477" [label = <(METHOD_RETURN,ANY)> ]
+  "15474" -> "15477" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/358-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/358-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/358-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/358-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetMethodID" {  
-"15481" [label = <(METHOD,GetMethodID)> ]
-"15487" [label = <(METHOD_RETURN,ANY)> ]
-  "15481" -> "15487" 
+"15478" [label = <(METHOD,GetMethodID)> ]
+"15484" [label = <(METHOD_RETURN,ANY)> ]
+  "15478" -> "15484" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/359-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/359-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/359-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/359-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Object::PrettyTypeOf" {  
-"15488" [label = <(METHOD,mirror::Object::PrettyTypeOf)> ]
-"15492" [label = <(METHOD_RETURN,ANY)> ]
-  "15488" -> "15492" 
+"15485" [label = <(METHOD,mirror::Object::PrettyTypeOf)> ]
+"15489" [label = <(METHOD_RETURN,ANY)> ]
+  "15485" -> "15489" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/36-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/36-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/36-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/36-cfg.dot	2023-06-07 19:34:41.567389024 +0330
@@ -1,27 +1,27 @@
 digraph "Throw" {  
-"1301" [label = <(soa,soa(env))<SUB>636</SUB>> ]
-"1303" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Throwable&gt; exception = soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>637</SUB>> ]
-"1327" [label = <(SetException,soa.Self()-&gt;SetException(exception))<SUB>641</SUB>> ]
-"1335" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>642</SUB>> ]
-"1304" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Throwable&gt; exception)<SUB>637</SUB>> ]
-"1311" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>637</SUB>> ]
-"1321" [label = <(&lt;operator&gt;.equals,exception == nullptr)<SUB>638</SUB>> ]
-"1328" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>641</SUB>> ]
-"1305" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Throwable)<SUB>637</SUB>> ]
-"1312" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Throwable)<SUB>637</SUB>> ]
-"1325" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>639</SUB>> ]
-"1329" [label = <(Self,soa.Self())<SUB>641</SUB>> ]
-"1333" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>641</SUB>> ]
-"1307" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>637</SUB>> ]
-"1313" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>637</SUB>> ]
-"1316" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>637</SUB>> ]
-"1330" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>641</SUB>> ]
-"1309" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>637</SUB>> ]
-"1315" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>637</SUB>> ]
-"1318" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>637</SUB>> ]
-"1332" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>641</SUB>> ]
-"1296" [label = <(METHOD,Throw)<SUB>635</SUB>> ]
-"1337" [label = <(METHOD_RETURN,jint)<SUB>635</SUB>> ]
+"1301" [label = <(soa,soa(env))<SUB>635</SUB>> ]
+"1303" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Throwable&gt; exception = soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>636</SUB>> ]
+"1327" [label = <(SetException,soa.Self()-&gt;SetException(exception))<SUB>640</SUB>> ]
+"1335" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>641</SUB>> ]
+"1304" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Throwable&gt; exception)<SUB>636</SUB>> ]
+"1311" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>636</SUB>> ]
+"1321" [label = <(&lt;operator&gt;.equals,exception == nullptr)<SUB>637</SUB>> ]
+"1328" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>640</SUB>> ]
+"1305" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Throwable)<SUB>636</SUB>> ]
+"1312" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Throwable)<SUB>636</SUB>> ]
+"1325" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>638</SUB>> ]
+"1329" [label = <(Self,soa.Self())<SUB>640</SUB>> ]
+"1333" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>640</SUB>> ]
+"1307" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>636</SUB>> ]
+"1313" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>636</SUB>> ]
+"1316" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>636</SUB>> ]
+"1330" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>640</SUB>> ]
+"1309" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>636</SUB>> ]
+"1315" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>636</SUB>> ]
+"1318" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>636</SUB>> ]
+"1332" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>640</SUB>> ]
+"1296" [label = <(METHOD,Throw)<SUB>634</SUB>> ]
+"1337" [label = <(METHOD_RETURN,jint)<SUB>634</SUB>> ]
   "1301" -> "1309" 
   "1303" -> "1321" 
   "1327" -> "1335" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/360-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/360-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/360-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/360-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CallVoidMethod" {  
-"15493" [label = <(METHOD,CallVoidMethod)> ]
-"15498" [label = <(METHOD_RETURN,ANY)> ]
-  "15493" -> "15498" 
+"15490" [label = <(METHOD,CallVoidMethod)> ]
+"15495" [label = <(METHOD_RETURN,ANY)> ]
+  "15490" -> "15495" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/361-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/361-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/361-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/361-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureLocalCapacityInternal" {  
-"15499" [label = <(METHOD,EnsureLocalCapacityInternal)> ]
-"15504" [label = <(METHOD_RETURN,ANY)> ]
-  "15499" -> "15504" 
+"15496" [label = <(METHOD,EnsureLocalCapacityInternal)> ]
+"15501" [label = <(METHOD_RETURN,ANY)> ]
+  "15496" -> "15501" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/362-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/362-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/362-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/362-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "PushFrame" {  
-"15505" [label = <(METHOD,PushFrame)> ]
-"15509" [label = <(METHOD_RETURN,ANY)> ]
-  "15505" -> "15509" 
+"15502" [label = <(METHOD,PushFrame)> ]
+"15506" [label = <(METHOD_RETURN,ANY)> ]
+  "15502" -> "15506" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/363-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/363-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/363-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/363-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "down_cast&lt;JNIEnvExt*&gt;" {  
-"15510" [label = <(METHOD,down_cast&lt;JNIEnvExt*&gt;)> ]
-"15513" [label = <(METHOD_RETURN,ANY)> ]
-  "15510" -> "15513" 
+"15507" [label = <(METHOD,down_cast&lt;JNIEnvExt*&gt;)> ]
+"15510" [label = <(METHOD_RETURN,ANY)> ]
+  "15507" -> "15510" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/364-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/364-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/364-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/364-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "PopFrame" {  
-"15514" [label = <(METHOD,PopFrame)> ]
-"15517" [label = <(METHOD_RETURN,ANY)> ]
-  "15514" -> "15517" 
+"15511" [label = <(METHOD,PopFrame)> ]
+"15514" [label = <(METHOD_RETURN,ANY)> ]
+  "15511" -> "15514" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/365-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/365-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/365-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/365-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "Env" {  
-"15518" [label = <(METHOD,Env)> ]
-"15521" [label = <(METHOD_RETURN,ANY)> ]
-  "15518" -> "15521" 
+"15515" [label = <(METHOD,Env)> ]
+"15518" [label = <(METHOD_RETURN,ANY)> ]
+  "15515" -> "15518" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/366-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/366-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/366-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/366-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "AddGlobalRef" {  
-"15522" [label = <(METHOD,AddGlobalRef)> ]
-"15527" [label = <(METHOD_RETURN,ANY)> ]
-  "15522" -> "15527" 
+"15519" [label = <(METHOD,AddGlobalRef)> ]
+"15524" [label = <(METHOD_RETURN,ANY)> ]
+  "15519" -> "15524" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/367-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/367-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/367-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/367-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "Vm" {  
-"15528" [label = <(METHOD,Vm)> ]
-"15531" [label = <(METHOD_RETURN,ANY)> ]
-  "15528" -> "15531" 
+"15525" [label = <(METHOD,Vm)> ]
+"15528" [label = <(METHOD_RETURN,ANY)> ]
+  "15525" -> "15528" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/368-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/368-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/368-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/368-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteGlobalRef" {  
-"15532" [label = <(METHOD,DeleteGlobalRef)> ]
-"15537" [label = <(METHOD_RETURN,ANY)> ]
-  "15532" -> "15537" 
+"15529" [label = <(METHOD,DeleteGlobalRef)> ]
+"15534" [label = <(METHOD_RETURN,ANY)> ]
+  "15529" -> "15534" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/369-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/369-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/369-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/369-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "AddWeakGlobalRef" {  
-"15538" [label = <(METHOD,AddWeakGlobalRef)> ]
-"15543" [label = <(METHOD_RETURN,ANY)> ]
-  "15538" -> "15543" 
+"15535" [label = <(METHOD,AddWeakGlobalRef)> ]
+"15540" [label = <(METHOD_RETURN,ANY)> ]
+  "15535" -> "15540" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/37-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/37-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/37-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/37-cfg.dot	2023-06-07 19:34:41.567389024 +0330
@@ -1,16 +1,16 @@
 digraph "ThrowNew" {  
-"1344" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>646</SUB>> ]
-"1363" [label = <(RETURN,return ThrowNewException(env, c, msg, nullptr);,return ThrowNewException(env, c, msg, nullptr);)<SUB>647</SUB>> ]
-"1364" [label = <(ThrowNewException,ThrowNewException(env, c, msg, nullptr))<SUB>647</SUB>> ]
-"1349" [label = <(UNLIKELY,UNLIKELY((c) == nullptr))<SUB>646</SUB>> ]
-"1350" [label = <(&lt;operator&gt;.equals,(c) == nullptr)<SUB>646</SUB>> ]
-"1354" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;c == null&quot;))<SUB>646</SUB>> ]
-"1361" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>646</SUB>> ]
-"1355" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>646</SUB>> ]
-"1356" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>646</SUB>> ]
-"1358" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>646</SUB>> ]
-"1339" [label = <(METHOD,ThrowNew)<SUB>645</SUB>> ]
-"1369" [label = <(METHOD_RETURN,jint)<SUB>645</SUB>> ]
+"1344" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>645</SUB>> ]
+"1363" [label = <(RETURN,return ThrowNewException(env, c, msg, nullptr);,return ThrowNewException(env, c, msg, nullptr);)<SUB>646</SUB>> ]
+"1364" [label = <(ThrowNewException,ThrowNewException(env, c, msg, nullptr))<SUB>646</SUB>> ]
+"1349" [label = <(UNLIKELY,UNLIKELY((c) == nullptr))<SUB>645</SUB>> ]
+"1350" [label = <(&lt;operator&gt;.equals,(c) == nullptr)<SUB>645</SUB>> ]
+"1354" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;c == null&quot;))<SUB>645</SUB>> ]
+"1361" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>645</SUB>> ]
+"1355" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>645</SUB>> ]
+"1356" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>645</SUB>> ]
+"1358" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>645</SUB>> ]
+"1339" [label = <(METHOD,ThrowNew)<SUB>644</SUB>> ]
+"1369" [label = <(METHOD_RETURN,jint)<SUB>644</SUB>> ]
   "1344" -> "1350" 
   "1344" -> "1364" 
   "1363" -> "1369" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/370-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/370-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/370-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/370-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteWeakGlobalRef" {  
-"15544" [label = <(METHOD,DeleteWeakGlobalRef)> ]
-"15549" [label = <(METHOD_RETURN,ANY)> ]
-  "15544" -> "15549" 
+"15541" [label = <(METHOD,DeleteWeakGlobalRef)> ]
+"15546" [label = <(METHOD_RETURN,ANY)> ]
+  "15541" -> "15546" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/371-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/371-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/371-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/371-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "Remove" {  
-"15550" [label = <(METHOD,Remove)> ]
-"15555" [label = <(METHOD_RETURN,ANY)> ]
-  "15550" -> "15555" 
+"15547" [label = <(METHOD,Remove)> ]
+"15552" [label = <(METHOD_RETURN,ANY)> ]
+  "15547" -> "15552" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/372-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/372-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/372-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/372-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "IsStringClass" {  
-"15556" [label = <(METHOD,IsStringClass)> ]
-"15559" [label = <(METHOD_RETURN,ANY)> ]
-  "15556" -> "15559" 
+"15553" [label = <(METHOD,IsStringClass)> ]
+"15556" [label = <(METHOD_RETURN,ANY)> ]
+  "15553" -> "15556" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/373-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/373-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/373-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/373-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetCurrentAllocator" {  
-"15560" [label = <(METHOD,GetCurrentAllocator)> ]
-"15563" [label = <(METHOD_RETURN,ANY)> ]
-  "15560" -> "15563" 
+"15557" [label = <(METHOD,GetCurrentAllocator)> ]
+"15560" [label = <(METHOD_RETURN,ANY)> ]
+  "15557" -> "15560" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/374-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/374-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/374-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/374-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetHeap" {  
-"15564" [label = <(METHOD,GetHeap)> ]
-"15567" [label = <(METHOD_RETURN,ANY)> ]
-  "15564" -> "15567" 
+"15561" [label = <(METHOD,GetHeap)> ]
+"15564" [label = <(METHOD_RETURN,ANY)> ]
+  "15561" -> "15564" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/375-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/375-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/375-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/375-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "AllocObject" {  
-"15568" [label = <(METHOD,AllocObject)> ]
-"15572" [label = <(METHOD_RETURN,ANY)> ]
-  "15568" -> "15572" 
+"15565" [label = <(METHOD,AllocObject)> ]
+"15569" [label = <(METHOD_RETURN,ANY)> ]
+  "15565" -> "15569" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/376-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/376-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/376-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/376-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "va_start" {  
-"15573" [label = <(METHOD,va_start)> ]
-"15577" [label = <(METHOD_RETURN,ANY)> ]
-  "15573" -> "15577" 
+"15570" [label = <(METHOD,va_start)> ]
+"15574" [label = <(METHOD_RETURN,ANY)> ]
+  "15570" -> "15574" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/377-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/377-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/377-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/377-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "free_args_later" {  
-"15578" [label = <(METHOD,free_args_later)> ]
-"15581" [label = <(METHOD_RETURN,ANY)> ]
-  "15578" -> "15581" 
+"15575" [label = <(METHOD,free_args_later)> ]
+"15578" [label = <(METHOD_RETURN,ANY)> ]
+  "15575" -> "15578" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/378-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/378-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/378-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/378-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addressOf" {  
-"15582" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
-"15585" [label = <(METHOD_RETURN,ANY)> ]
-  "15582" -> "15585" 
+"15579" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
+"15582" [label = <(METHOD_RETURN,ANY)> ]
+  "15579" -> "15582" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/379-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/379-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/379-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/379-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "NewObjectV" {  
-"15586" [label = <(METHOD,NewObjectV)> ]
-"15592" [label = <(METHOD_RETURN,ANY)> ]
-  "15586" -> "15592" 
+"15583" [label = <(METHOD,NewObjectV)> ]
+"15589" [label = <(METHOD_RETURN,ANY)> ]
+  "15583" -> "15589" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/38-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/38-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/38-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/38-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,15 +1,15 @@
 digraph "ExceptionCheck" {  
-"1374" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;)<SUB>651</SUB>> ]
-"1375" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE)<SUB>651</SUB>> ]
-"1376" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>651</SUB>> ]
-"1377" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>651</SUB>> ]
-"1378" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>651</SUB>> ]
-"1383" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>651</SUB>> ]
-"1379" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>651</SUB>> ]
-"1382" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>651</SUB>> ]
-"1380" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>651</SUB>> ]
-"1371" [label = <(METHOD,ExceptionCheck)<SUB>650</SUB>> ]
-"1386" [label = <(METHOD_RETURN,jboolean)<SUB>650</SUB>> ]
+"1374" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;)<SUB>650</SUB>> ]
+"1375" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE)<SUB>650</SUB>> ]
+"1376" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>650</SUB>> ]
+"1377" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>650</SUB>> ]
+"1378" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>650</SUB>> ]
+"1383" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>650</SUB>> ]
+"1379" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>650</SUB>> ]
+"1382" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>650</SUB>> ]
+"1380" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>650</SUB>> ]
+"1371" [label = <(METHOD,ExceptionCheck)<SUB>649</SUB>> ]
+"1386" [label = <(METHOD_RETURN,jboolean)<SUB>649</SUB>> ]
   "1374" -> "1386" 
   "1375" -> "1374" 
   "1376" -> "1375" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/380-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/380-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/380-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/380-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "WellKnownClasses::StringInitToStringFactory" {  
-"15593" [label = <(METHOD,WellKnownClasses::StringInitToStringFactory)> ]
-"15597" [label = <(METHOD_RETURN,ANY)> ]
-  "15593" -> "15597" 
+"15590" [label = <(METHOD,WellKnownClasses::StringInitToStringFactory)> ]
+"15594" [label = <(METHOD_RETURN,ANY)> ]
+  "15590" -> "15594" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/381-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/381-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/381-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/381-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CallStaticObjectMethodV" {  
-"15598" [label = <(METHOD,CallStaticObjectMethodV)> ]
-"15604" [label = <(METHOD_RETURN,ANY)> ]
-  "15598" -> "15604" 
+"15595" [label = <(METHOD,CallStaticObjectMethodV)> ]
+"15601" [label = <(METHOD_RETURN,ANY)> ]
+  "15595" -> "15601" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/382-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/382-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/382-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/382-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CallNonvirtualVoidMethodV" {  
-"15605" [label = <(METHOD,CallNonvirtualVoidMethodV)> ]
-"15612" [label = <(METHOD_RETURN,ANY)> ]
-  "15605" -> "15612" 
+"15602" [label = <(METHOD,CallNonvirtualVoidMethodV)> ]
+"15609" [label = <(METHOD_RETURN,ANY)> ]
+  "15602" -> "15609" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/383-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/383-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/383-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/383-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CallStaticObjectMethodA" {  
-"15613" [label = <(METHOD,CallStaticObjectMethodA)> ]
-"15619" [label = <(METHOD_RETURN,ANY)> ]
-  "15613" -> "15619" 
+"15610" [label = <(METHOD,CallStaticObjectMethodA)> ]
+"15616" [label = <(METHOD_RETURN,ANY)> ]
+  "15610" -> "15616" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/384-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/384-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/384-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/384-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CallNonvirtualVoidMethodA" {  
-"15620" [label = <(METHOD,CallNonvirtualVoidMethodA)> ]
-"15627" [label = <(METHOD_RETURN,ANY)> ]
-  "15620" -> "15627" 
+"15617" [label = <(METHOD,CallNonvirtualVoidMethodA)> ]
+"15624" [label = <(METHOD_RETURN,ANY)> ]
+  "15617" -> "15624" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/385-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/385-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/385-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/385-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(sig)" {  
-"15628" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(sig))> ]
-"15633" [label = <(METHOD_RETURN,ANY)> ]
-  "15628" -> "15633" 
+"15625" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(sig))> ]
+"15630" [label = <(METHOD_RETURN,ANY)> ]
+  "15625" -> "15630" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/386-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/386-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/386-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/386-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(obj)" {  
-"15634" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(obj))> ]
-"15639" [label = <(METHOD_RETURN,ANY)> ]
-  "15634" -> "15639" 
+"15631" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(obj))> ]
+"15636" [label = <(METHOD_RETURN,ANY)> ]
+  "15631" -> "15636" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/387-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/387-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/387-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/387-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "result" {  
-"15640" [label = <(METHOD,result)> ]
-"15643" [label = <(METHOD_RETURN,ANY)> ]
-  "15640" -> "15643" 
+"15637" [label = <(METHOD,result)> ]
+"15640" [label = <(METHOD_RETURN,ANY)> ]
+  "15637" -> "15640" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/388-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/388-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/388-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/388-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeVirtualOrInterfaceWithVarArgs" {  
-"15644" [label = <(METHOD,InvokeVirtualOrInterfaceWithVarArgs)> ]
-"15650" [label = <(METHOD_RETURN,ANY)> ]
-  "15644" -> "15650" 
+"15641" [label = <(METHOD,InvokeVirtualOrInterfaceWithVarArgs)> ]
+"15647" [label = <(METHOD_RETURN,ANY)> ]
+  "15641" -> "15647" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/389-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/389-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/389-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/389-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetL" {  
-"15651" [label = <(METHOD,GetL)> ]
-"15654" [label = <(METHOD_RETURN,ANY)> ]
-  "15651" -> "15654" 
+"15648" [label = <(METHOD,GetL)> ]
+"15651" [label = <(METHOD_RETURN,ANY)> ]
+  "15648" -> "15651" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/39-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/39-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/39-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/39-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,13 +1,13 @@
 digraph "ExceptionClear" {  
-"1392" [label = <(soa,soa(env))<SUB>655</SUB>> ]
-"1394" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>656</SUB>> ]
-"1395" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>656</SUB>> ]
-"1396" [label = <(Self,soa.Self())<SUB>656</SUB>> ]
-"1400" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>656</SUB>> ]
-"1397" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>656</SUB>> ]
-"1399" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>656</SUB>> ]
-"1388" [label = <(METHOD,ExceptionClear)<SUB>654</SUB>> ]
-"1401" [label = <(METHOD_RETURN,void)<SUB>654</SUB>> ]
+"1392" [label = <(soa,soa(env))<SUB>654</SUB>> ]
+"1394" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>655</SUB>> ]
+"1395" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>655</SUB>> ]
+"1396" [label = <(Self,soa.Self())<SUB>655</SUB>> ]
+"1400" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>655</SUB>> ]
+"1397" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>655</SUB>> ]
+"1399" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>655</SUB>> ]
+"1388" [label = <(METHOD,ExceptionClear)<SUB>653</SUB>> ]
+"1401" [label = <(METHOD_RETURN,void)<SUB>653</SUB>> ]
   "1392" -> "1399" 
   "1394" -> "1401" 
   "1395" -> "1394" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/390-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/390-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/390-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/390-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeVirtualOrInterfaceWithJValues" {  
-"15655" [label = <(METHOD,InvokeVirtualOrInterfaceWithJValues)> ]
-"15661" [label = <(METHOD_RETURN,ANY)> ]
-  "15655" -> "15661" 
+"15652" [label = <(METHOD,InvokeVirtualOrInterfaceWithJValues)> ]
+"15658" [label = <(METHOD_RETURN,ANY)> ]
+  "15652" -> "15658" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/391-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/391-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/391-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/391-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO" {  
-"15662" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO)<SUB>498</SUB>> ]
-"15665" [label = <(METHOD_RETURN,ANY)> ]
-  "15662" -> "15665" 
+"15659" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO)<SUB>497</SUB>> ]
+"15662" [label = <(METHOD_RETURN,ANY)> ]
+  "15659" -> "15662" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/392-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/392-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/392-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/392-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj)" {  
-"15666" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))> ]
-"15671" [label = <(METHOD_RETURN,ANY)> ]
-  "15666" -> "15671" 
+"15663" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))> ]
+"15668" [label = <(METHOD_RETURN,ANY)> ]
+  "15663" -> "15668" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/393-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/393-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/393-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/393-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid)" {  
-"15672" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))> ]
-"15677" [label = <(METHOD_RETURN,ANY)> ]
-  "15672" -> "15677" 
+"15669" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))> ]
+"15674" [label = <(METHOD_RETURN,ANY)> ]
+  "15669" -> "15674" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/394-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/394-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/394-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/394-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetZ" {  
-"15678" [label = <(METHOD,GetZ)> ]
-"15681" [label = <(METHOD_RETURN,ANY)> ]
-  "15678" -> "15681" 
+"15675" [label = <(METHOD,GetZ)> ]
+"15678" [label = <(METHOD_RETURN,ANY)> ]
+  "15675" -> "15678" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/395-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/395-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/395-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/395-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetB" {  
-"15682" [label = <(METHOD,GetB)> ]
-"15685" [label = <(METHOD_RETURN,ANY)> ]
-  "15682" -> "15685" 
+"15679" [label = <(METHOD,GetB)> ]
+"15682" [label = <(METHOD_RETURN,ANY)> ]
+  "15679" -> "15682" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/396-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/396-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/396-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/396-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetC" {  
-"15686" [label = <(METHOD,GetC)> ]
-"15689" [label = <(METHOD_RETURN,ANY)> ]
-  "15686" -> "15689" 
+"15683" [label = <(METHOD,GetC)> ]
+"15686" [label = <(METHOD_RETURN,ANY)> ]
+  "15683" -> "15686" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/397-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/397-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/397-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/397-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetD" {  
-"15690" [label = <(METHOD,GetD)> ]
-"15693" [label = <(METHOD_RETURN,ANY)> ]
-  "15690" -> "15693" 
+"15687" [label = <(METHOD,GetD)> ]
+"15690" [label = <(METHOD_RETURN,ANY)> ]
+  "15687" -> "15690" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/398-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/398-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/398-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/398-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetF" {  
-"15694" [label = <(METHOD,GetF)> ]
-"15697" [label = <(METHOD_RETURN,ANY)> ]
-  "15694" -> "15697" 
+"15691" [label = <(METHOD,GetF)> ]
+"15694" [label = <(METHOD_RETURN,ANY)> ]
+  "15691" -> "15694" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/399-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/399-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/399-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/399-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetI" {  
-"15698" [label = <(METHOD,GetI)> ]
-"15701" [label = <(METHOD_RETURN,ANY)> ]
-  "15698" -> "15701" 
+"15695" [label = <(METHOD,GetI)> ]
+"15698" [label = <(METHOD_RETURN,ANY)> ]
+  "15695" -> "15698" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/4-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/4-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/4-cfg.dot	2023-06-07 19:34:35.027389628 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/4-cfg.dot	2023-06-07 19:34:41.547389025 +0330
@@ -1,5 +1,5 @@
 digraph "ScopedVAArgs" {  
-"25" [label = <(METHOD,ScopedVAArgs)<SUB>72</SUB>> ]
-"28" [label = <(METHOD_RETURN,ANY)<SUB>72</SUB>> ]
+"25" [label = <(METHOD,ScopedVAArgs)<SUB>71</SUB>> ]
+"28" [label = <(METHOD_RETURN,ANY)<SUB>71</SUB>> ]
   "25" -> "28" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/40-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/40-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/40-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/40-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,122 +1,122 @@
 digraph "ExceptionDescribe" {  
-"1407" [label = <(soa,soa(env))<SUB>660</SUB>> ]
-"1420" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>667</SUB>> ]
-"1429" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Throwable&gt; old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>668</SUB>> ]
-"1451" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>670</SUB>> ]
-"1458" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jthrowable&gt; exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>671</SUB>> ]
-"1474" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jclass&gt; exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>673</SUB>> ]
-"1489" [label = <(&lt;operator&gt;.assignment,mid = env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>674</SUB>> ]
-"1568" [label = <(SetException,soa.Self()-&gt;SetException(old_exception.Get()))<SUB>686</SUB>> ]
-"1410" [label = <(&lt;operator&gt;.logicalNot,!soa.Self()-&gt;GetException())<SUB>663</SUB>> ]
-"1421" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>667</SUB>> ]
-"1424" [label = <(hs,hs(soa.Self()))<SUB>667</SUB>> ]
-"1430" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Throwable)<SUB>668</SUB>> ]
-"1435" [label = <(old_exception,old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>668</SUB>> ]
-"1452" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>670</SUB>> ]
-"1459" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jthrowable)<SUB>671</SUB>> ]
-"1462" [label = <(exception,exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>671</SUB>> ]
-"1475" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jclass)<SUB>673</SUB>> ]
-"1478" [label = <(exception_class,exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>673</SUB>> ]
-"1491" [label = <(GetMethodID,env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>674</SUB>> ]
-"1502" [label = <(&lt;operator&gt;.equals,mid == nullptr)<SUB>675</SUB>> ]
-"1569" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>686</SUB>> ]
-"1575" [label = <(Get,old_exception.Get())<SUB>686</SUB>> ]
-"1411" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>663</SUB>> ]
-"1419" [label = <(RETURN,return;,return;)<SUB>664</SUB>> ]
-"1425" [label = <(Self,soa.Self())<SUB>667</SUB>> ]
-"1432" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>668</SUB>> ]
-"1436" [label = <(&lt;operator&gt;.greaterThan,hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException()))<SUB>669</SUB>> ]
-"1453" [label = <(Self,soa.Self())<SUB>670</SUB>> ]
-"1457" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>670</SUB>> ]
-"1464" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get()))<SUB>672</SUB>> ]
-"1480" [label = <(GetObjectClass,env-&gt;GetObjectClass(exception.get()))<SUB>673</SUB>> ]
-"1492" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetMethodID)<SUB>674</SUB>> ]
-"1495" [label = <(get,exception_class.get())<SUB>674</SUB>> ]
-"1506" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;\012 &lt;&lt; mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>676</SUB>> ]
-"1570" [label = <(Self,soa.Self())<SUB>686</SUB>> ]
-"1574" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>686</SUB>> ]
-"1576" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>686</SUB>> ]
-"1412" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>663</SUB>> ]
-"1426" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>667</SUB>> ]
-"1434" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>668</SUB>> ]
-"1437" [label = <(&lt;operator&gt;.lessThan,hs.NewHandle&lt;mirror::Throwable)<SUB>669</SUB>> ]
-"1444" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>669</SUB>> ]
-"1454" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>670</SUB>> ]
-"1465" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>672</SUB>> ]
-"1470" [label = <(Get,old_exception.Get())<SUB>672</SUB>> ]
-"1481" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetObjectClass)<SUB>673</SUB>> ]
-"1484" [label = <(get,exception.get())<SUB>673</SUB>> ]
-"1494" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>674</SUB>> ]
-"1496" [label = <(&lt;operator&gt;.fieldAccess,exception_class.get)<SUB>674</SUB>> ]
-"1507" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;)<SUB>676</SUB>> ]
-"1511" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>677</SUB>> ]
-"1523" [label = <(CallVoidMethod,env-&gt;CallVoidMethod(exception.get(), mid))<SUB>679</SUB>> ]
-"1571" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>686</SUB>> ]
-"1578" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>686</SUB>> ]
-"1413" [label = <(Self,soa.Self())<SUB>663</SUB>> ]
-"1417" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>663</SUB>> ]
-"1428" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>667</SUB>> ]
-"1438" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>669</SUB>> ]
-"1441" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>669</SUB>> ]
-"1445" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>669</SUB>> ]
-"1456" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>670</SUB>> ]
-"1466" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>672</SUB>> ]
-"1471" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>672</SUB>> ]
-"1483" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>673</SUB>> ]
-"1485" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>673</SUB>> ]
-"1498" [label = <(FIELD_IDENTIFIER,get,get)<SUB>674</SUB>> ]
-"1508" [label = <(LOG,LOG(WARNING))<SUB>676</SUB>> ]
-"1512" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>677</SUB>> ]
-"1517" [label = <(Get,old_exception.Get())<SUB>677</SUB>> ]
-"1524" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;CallVoidMethod)<SUB>679</SUB>> ]
-"1527" [label = <(get,exception.get())<SUB>679</SUB>> ]
-"1533" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>680</SUB>> ]
-"1573" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>686</SUB>> ]
-"1414" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>663</SUB>> ]
-"1440" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>669</SUB>> ]
-"1443" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>669</SUB>> ]
-"1446" [label = <(Self,soa.Self())<SUB>669</SUB>> ]
-"1450" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>669</SUB>> ]
-"1468" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>672</SUB>> ]
-"1473" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>672</SUB>> ]
-"1487" [label = <(FIELD_IDENTIFIER,get,get)<SUB>673</SUB>> ]
-"1513" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>677</SUB>> ]
-"1516" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>677</SUB>> ]
-"1518" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>677</SUB>> ]
-"1526" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>679</SUB>> ]
-"1528" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>679</SUB>> ]
-"1534" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>680</SUB>> ]
-"1541" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException())\012 &lt;&lt; &quot; thrown while calling printStackTrace&quot;)<SUB>681</SUB>> ]
-"1561" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>683</SUB>> ]
-"1416" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>663</SUB>> ]
-"1447" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>669</SUB>> ]
-"1520" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>677</SUB>> ]
-"1530" [label = <(FIELD_IDENTIFIER,get,get)<SUB>679</SUB>> ]
-"1535" [label = <(Self,soa.Self())<SUB>680</SUB>> ]
-"1539" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>680</SUB>> ]
-"1542" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>681</SUB>> ]
-"1562" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>683</SUB>> ]
-"1449" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>669</SUB>> ]
-"1536" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>680</SUB>> ]
-"1543" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot;)<SUB>681</SUB>> ]
-"1547" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>681</SUB>> ]
-"1563" [label = <(Self,soa.Self())<SUB>683</SUB>> ]
-"1567" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>683</SUB>> ]
-"1538" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>680</SUB>> ]
-"1544" [label = <(LOG,LOG(WARNING))<SUB>681</SUB>> ]
-"1548" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>681</SUB>> ]
-"1553" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>681</SUB>> ]
-"1564" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>683</SUB>> ]
-"1549" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>681</SUB>> ]
-"1552" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>681</SUB>> ]
-"1554" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>681</SUB>> ]
-"1566" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>683</SUB>> ]
-"1555" [label = <(Self,soa.Self())<SUB>681</SUB>> ]
-"1559" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>681</SUB>> ]
-"1556" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>681</SUB>> ]
-"1558" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>681</SUB>> ]
-"1403" [label = <(METHOD,ExceptionDescribe)<SUB>659</SUB>> ]
-"1579" [label = <(METHOD_RETURN,void)<SUB>659</SUB>> ]
+"1407" [label = <(soa,soa(env))<SUB>659</SUB>> ]
+"1420" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>666</SUB>> ]
+"1429" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Throwable&gt; old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>667</SUB>> ]
+"1451" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>669</SUB>> ]
+"1458" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jthrowable&gt; exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>670</SUB>> ]
+"1474" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jclass&gt; exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>672</SUB>> ]
+"1489" [label = <(&lt;operator&gt;.assignment,mid = env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>673</SUB>> ]
+"1568" [label = <(SetException,soa.Self()-&gt;SetException(old_exception.Get()))<SUB>685</SUB>> ]
+"1410" [label = <(&lt;operator&gt;.logicalNot,!soa.Self()-&gt;GetException())<SUB>662</SUB>> ]
+"1421" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>666</SUB>> ]
+"1424" [label = <(hs,hs(soa.Self()))<SUB>666</SUB>> ]
+"1430" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Throwable)<SUB>667</SUB>> ]
+"1435" [label = <(old_exception,old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>667</SUB>> ]
+"1452" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>669</SUB>> ]
+"1459" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jthrowable)<SUB>670</SUB>> ]
+"1462" [label = <(exception,exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>670</SUB>> ]
+"1475" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jclass)<SUB>672</SUB>> ]
+"1478" [label = <(exception_class,exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>672</SUB>> ]
+"1491" [label = <(GetMethodID,env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>673</SUB>> ]
+"1502" [label = <(&lt;operator&gt;.equals,mid == nullptr)<SUB>674</SUB>> ]
+"1569" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>685</SUB>> ]
+"1575" [label = <(Get,old_exception.Get())<SUB>685</SUB>> ]
+"1411" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>662</SUB>> ]
+"1419" [label = <(RETURN,return;,return;)<SUB>663</SUB>> ]
+"1425" [label = <(Self,soa.Self())<SUB>666</SUB>> ]
+"1432" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>667</SUB>> ]
+"1436" [label = <(&lt;operator&gt;.greaterThan,hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException()))<SUB>668</SUB>> ]
+"1453" [label = <(Self,soa.Self())<SUB>669</SUB>> ]
+"1457" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>669</SUB>> ]
+"1464" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get()))<SUB>671</SUB>> ]
+"1480" [label = <(GetObjectClass,env-&gt;GetObjectClass(exception.get()))<SUB>672</SUB>> ]
+"1492" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetMethodID)<SUB>673</SUB>> ]
+"1495" [label = <(get,exception_class.get())<SUB>673</SUB>> ]
+"1506" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;\012 &lt;&lt; mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>675</SUB>> ]
+"1570" [label = <(Self,soa.Self())<SUB>685</SUB>> ]
+"1574" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>685</SUB>> ]
+"1576" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>685</SUB>> ]
+"1412" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>662</SUB>> ]
+"1426" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>666</SUB>> ]
+"1434" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>667</SUB>> ]
+"1437" [label = <(&lt;operator&gt;.lessThan,hs.NewHandle&lt;mirror::Throwable)<SUB>668</SUB>> ]
+"1444" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>668</SUB>> ]
+"1454" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>669</SUB>> ]
+"1465" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>671</SUB>> ]
+"1470" [label = <(Get,old_exception.Get())<SUB>671</SUB>> ]
+"1481" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetObjectClass)<SUB>672</SUB>> ]
+"1484" [label = <(get,exception.get())<SUB>672</SUB>> ]
+"1494" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>673</SUB>> ]
+"1496" [label = <(&lt;operator&gt;.fieldAccess,exception_class.get)<SUB>673</SUB>> ]
+"1507" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;)<SUB>675</SUB>> ]
+"1511" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>676</SUB>> ]
+"1523" [label = <(CallVoidMethod,env-&gt;CallVoidMethod(exception.get(), mid))<SUB>678</SUB>> ]
+"1571" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>685</SUB>> ]
+"1578" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>685</SUB>> ]
+"1413" [label = <(Self,soa.Self())<SUB>662</SUB>> ]
+"1417" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>662</SUB>> ]
+"1428" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>666</SUB>> ]
+"1438" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>668</SUB>> ]
+"1441" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>668</SUB>> ]
+"1445" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>668</SUB>> ]
+"1456" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>669</SUB>> ]
+"1466" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>671</SUB>> ]
+"1471" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>671</SUB>> ]
+"1483" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>672</SUB>> ]
+"1485" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>672</SUB>> ]
+"1498" [label = <(FIELD_IDENTIFIER,get,get)<SUB>673</SUB>> ]
+"1508" [label = <(LOG,LOG(WARNING))<SUB>675</SUB>> ]
+"1512" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>676</SUB>> ]
+"1517" [label = <(Get,old_exception.Get())<SUB>676</SUB>> ]
+"1524" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;CallVoidMethod)<SUB>678</SUB>> ]
+"1527" [label = <(get,exception.get())<SUB>678</SUB>> ]
+"1533" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>679</SUB>> ]
+"1573" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>685</SUB>> ]
+"1414" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>662</SUB>> ]
+"1440" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>668</SUB>> ]
+"1443" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>668</SUB>> ]
+"1446" [label = <(Self,soa.Self())<SUB>668</SUB>> ]
+"1450" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>668</SUB>> ]
+"1468" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>671</SUB>> ]
+"1473" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>671</SUB>> ]
+"1487" [label = <(FIELD_IDENTIFIER,get,get)<SUB>672</SUB>> ]
+"1513" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>676</SUB>> ]
+"1516" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>676</SUB>> ]
+"1518" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>676</SUB>> ]
+"1526" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>678</SUB>> ]
+"1528" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>678</SUB>> ]
+"1534" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>679</SUB>> ]
+"1541" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException())\012 &lt;&lt; &quot; thrown while calling printStackTrace&quot;)<SUB>680</SUB>> ]
+"1561" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>682</SUB>> ]
+"1416" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>662</SUB>> ]
+"1447" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>668</SUB>> ]
+"1520" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>676</SUB>> ]
+"1530" [label = <(FIELD_IDENTIFIER,get,get)<SUB>678</SUB>> ]
+"1535" [label = <(Self,soa.Self())<SUB>679</SUB>> ]
+"1539" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>679</SUB>> ]
+"1542" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>680</SUB>> ]
+"1562" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>682</SUB>> ]
+"1449" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>668</SUB>> ]
+"1536" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>679</SUB>> ]
+"1543" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot;)<SUB>680</SUB>> ]
+"1547" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>680</SUB>> ]
+"1563" [label = <(Self,soa.Self())<SUB>682</SUB>> ]
+"1567" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>682</SUB>> ]
+"1538" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>679</SUB>> ]
+"1544" [label = <(LOG,LOG(WARNING))<SUB>680</SUB>> ]
+"1548" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>680</SUB>> ]
+"1553" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>680</SUB>> ]
+"1564" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>682</SUB>> ]
+"1549" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>680</SUB>> ]
+"1552" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>680</SUB>> ]
+"1554" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>680</SUB>> ]
+"1566" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>682</SUB>> ]
+"1555" [label = <(Self,soa.Self())<SUB>680</SUB>> ]
+"1559" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>680</SUB>> ]
+"1556" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>680</SUB>> ]
+"1558" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>680</SUB>> ]
+"1403" [label = <(METHOD,ExceptionDescribe)<SUB>658</SUB>> ]
+"1579" [label = <(METHOD_RETURN,void)<SUB>658</SUB>> ]
   "1407" -> "1416" 
   "1420" -> "1434" 
   "1429" -> "1456" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/400-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/400-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/400-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/400-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetJ" {  
-"15702" [label = <(METHOD,GetJ)> ]
-"15705" [label = <(METHOD_RETURN,ANY)> ]
-  "15702" -> "15705" 
+"15699" [label = <(METHOD,GetJ)> ]
+"15702" [label = <(METHOD_RETURN,ANY)> ]
+  "15699" -> "15702" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/401-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/401-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/401-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/401-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetS" {  
-"15706" [label = <(METHOD,GetS)> ]
-"15709" [label = <(METHOD_RETURN,ANY)> ]
-  "15706" -> "15709" 
+"15703" [label = <(METHOD,GetS)> ]
+"15706" [label = <(METHOD_RETURN,ANY)> ]
+  "15703" -> "15706" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/402-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/402-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/402-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/402-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID" {  
-"15710" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID)<SUB>495</SUB>> ]
-"15713" [label = <(METHOD_RETURN,ANY)> ]
-  "15710" -> "15713" 
+"15707" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID)<SUB>494</SUB>> ]
+"15710" [label = <(METHOD_RETURN,ANY)> ]
+  "15707" -> "15710" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/403-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/403-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/403-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/403-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj)" {  
-"15714" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))> ]
-"15719" [label = <(METHOD_RETURN,ANY)> ]
-  "15714" -> "15719" 
+"15711" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))> ]
+"15716" [label = <(METHOD_RETURN,ANY)> ]
+  "15711" -> "15716" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/404-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/404-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/404-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/404-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid)" {  
-"15720" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))> ]
-"15725" [label = <(METHOD_RETURN,ANY)> ]
-  "15720" -> "15725" 
+"15717" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))> ]
+"15722" [label = <(METHOD_RETURN,ANY)> ]
+  "15717" -> "15722" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/405-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/405-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/405-cfg.dot	2023-06-07 19:34:35.217389610 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/405-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeWithVarArgs" {  
-"15726" [label = <(METHOD,InvokeWithVarArgs)> ]
-"15732" [label = <(METHOD_RETURN,ANY)> ]
-  "15726" -> "15732" 
+"15723" [label = <(METHOD,InvokeWithVarArgs)> ]
+"15729" [label = <(METHOD_RETURN,ANY)> ]
+  "15723" -> "15729" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/406-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/406-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/406-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/406-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeWithJValues" {  
-"15733" [label = <(METHOD,InvokeWithJValues)> ]
-"15739" [label = <(METHOD_RETURN,ANY)> ]
-  "15733" -> "15739" 
+"15730" [label = <(METHOD,InvokeWithJValues)> ]
+"15736" [label = <(METHOD_RETURN,ANY)> ]
+  "15730" -> "15736" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/407-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/407-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/407-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/407-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetObject" {  
-"15740" [label = <(METHOD,GetObject)> ]
-"15744" [label = <(METHOD_RETURN,ANY)> ]
-  "15740" -> "15744" 
+"15737" [label = <(METHOD,GetObject)> ]
+"15741" [label = <(METHOD_RETURN,ANY)> ]
+  "15737" -> "15741" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/408-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/408-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/408-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/408-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GetDeclaringClass" {  
-"15745" [label = <(METHOD,GetDeclaringClass)> ]
-"15748" [label = <(METHOD_RETURN,ANY)> ]
-  "15745" -> "15748" 
+"15742" [label = <(METHOD,GetDeclaringClass)> ]
+"15745" [label = <(METHOD_RETURN,ANY)> ]
+  "15742" -> "15745" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/409-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/409-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/409-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/409-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object)" {  
-"15749" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))> ]
-"15754" [label = <(METHOD_RETURN,ANY)> ]
-  "15749" -> "15754" 
+"15746" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))> ]
+"15751" [label = <(METHOD_RETURN,ANY)> ]
+  "15746" -> "15751" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/41-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/41-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/41-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/41-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,19 +1,19 @@
 digraph "ExceptionOccurred" {  
-"1585" [label = <(soa,soa(env))<SUB>690</SUB>> ]
-"1588" [label = <(&lt;operator&gt;.assignment,* exception = soa.Self()-&gt;GetException())<SUB>691</SUB>> ]
-"1597" [label = <(RETURN,return soa.AddLocalReference&lt;jthrowable&gt;(exception);,return soa.AddLocalReference&lt;jthrowable&gt;(exception);)<SUB>692</SUB>> ]
-"1590" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>691</SUB>> ]
-"1598" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(exception))<SUB>692</SUB>> ]
-"1591" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>691</SUB>> ]
-"1599" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>692</SUB>> ]
-"1592" [label = <(Self,soa.Self())<SUB>691</SUB>> ]
-"1596" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>691</SUB>> ]
-"1600" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>692</SUB>> ]
-"1593" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>691</SUB>> ]
-"1602" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>692</SUB>> ]
-"1595" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>691</SUB>> ]
-"1581" [label = <(METHOD,ExceptionOccurred)<SUB>689</SUB>> ]
-"1605" [label = <(METHOD_RETURN,jthrowable)<SUB>689</SUB>> ]
+"1585" [label = <(soa,soa(env))<SUB>689</SUB>> ]
+"1588" [label = <(&lt;operator&gt;.assignment,* exception = soa.Self()-&gt;GetException())<SUB>690</SUB>> ]
+"1597" [label = <(RETURN,return soa.AddLocalReference&lt;jthrowable&gt;(exception);,return soa.AddLocalReference&lt;jthrowable&gt;(exception);)<SUB>691</SUB>> ]
+"1590" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>690</SUB>> ]
+"1598" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(exception))<SUB>691</SUB>> ]
+"1591" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>690</SUB>> ]
+"1599" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>691</SUB>> ]
+"1592" [label = <(Self,soa.Self())<SUB>690</SUB>> ]
+"1596" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>690</SUB>> ]
+"1600" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>691</SUB>> ]
+"1593" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>690</SUB>> ]
+"1602" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>691</SUB>> ]
+"1595" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>690</SUB>> ]
+"1581" [label = <(METHOD,ExceptionOccurred)<SUB>688</SUB>> ]
+"1605" [label = <(METHOD_RETURN,jthrowable)<SUB>688</SUB>> ]
   "1585" -> "1595" 
   "1588" -> "1602" 
   "1597" -> "1605" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/410-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/410-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/410-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/410-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid)" {  
-"15755" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))> ]
-"15760" [label = <(METHOD_RETURN,ANY)> ]
-  "15755" -> "15760" 
+"15752" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))> ]
+"15757" [label = <(METHOD_RETURN,ANY)> ]
+  "15752" -> "15757" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/411-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/411-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/411-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/411-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "NotifySetObjectField" {  
-"15761" [label = <(METHOD,NotifySetObjectField)> ]
-"15766" [label = <(METHOD_RETURN,ANY)> ]
-  "15761" -> "15766" 
+"15758" [label = <(METHOD,NotifySetObjectField)> ]
+"15763" [label = <(METHOD_RETURN,ANY)> ]
+  "15758" -> "15763" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/412-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/412-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/412-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/412-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD" {  
-"15767" [label = <(METHOD,GET_PRIMITIVE_FIELD)<SUB>1461</SUB>> ]
-"15770" [label = <(METHOD_RETURN,ANY)> ]
-  "15767" -> "15770" 
+"15764" [label = <(METHOD,GET_PRIMITIVE_FIELD)<SUB>1460</SUB>> ]
+"15767" [label = <(METHOD_RETURN,ANY)> ]
+  "15764" -> "15767" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/413-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/413-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/413-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/413-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Boolean, obj)" {  
-"15771" [label = <(METHOD,GET_PRIMITIVE_FIELD(Boolean, obj))> ]
-"15775" [label = <(METHOD_RETURN,ANY)> ]
-  "15771" -> "15775" 
+"15768" [label = <(METHOD,GET_PRIMITIVE_FIELD(Boolean, obj))> ]
+"15772" [label = <(METHOD_RETURN,ANY)> ]
+  "15768" -> "15772" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/414-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/414-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/414-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/414-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Byte, obj)" {  
-"15776" [label = <(METHOD,GET_PRIMITIVE_FIELD(Byte, obj))> ]
-"15780" [label = <(METHOD_RETURN,ANY)> ]
-  "15776" -> "15780" 
+"15773" [label = <(METHOD,GET_PRIMITIVE_FIELD(Byte, obj))> ]
+"15777" [label = <(METHOD_RETURN,ANY)> ]
+  "15773" -> "15777" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/415-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/415-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/415-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/415-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Char, obj)" {  
-"15781" [label = <(METHOD,GET_PRIMITIVE_FIELD(Char, obj))> ]
-"15785" [label = <(METHOD_RETURN,ANY)> ]
-  "15781" -> "15785" 
+"15778" [label = <(METHOD,GET_PRIMITIVE_FIELD(Char, obj))> ]
+"15782" [label = <(METHOD_RETURN,ANY)> ]
+  "15778" -> "15782" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/416-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/416-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/416-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/416-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Short, obj)" {  
-"15786" [label = <(METHOD,GET_PRIMITIVE_FIELD(Short, obj))> ]
-"15790" [label = <(METHOD_RETURN,ANY)> ]
-  "15786" -> "15790" 
+"15783" [label = <(METHOD,GET_PRIMITIVE_FIELD(Short, obj))> ]
+"15787" [label = <(METHOD_RETURN,ANY)> ]
+  "15783" -> "15787" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/417-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/417-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/417-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/417-cfg.dot	2023-06-07 19:34:41.757389006 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Int, obj)" {  
-"15791" [label = <(METHOD,GET_PRIMITIVE_FIELD(Int, obj))> ]
-"15795" [label = <(METHOD_RETURN,ANY)> ]
-  "15791" -> "15795" 
+"15788" [label = <(METHOD,GET_PRIMITIVE_FIELD(Int, obj))> ]
+"15792" [label = <(METHOD_RETURN,ANY)> ]
+  "15788" -> "15792" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/418-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/418-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/418-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/418-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Long, obj)" {  
-"15796" [label = <(METHOD,GET_PRIMITIVE_FIELD(Long, obj))> ]
-"15800" [label = <(METHOD_RETURN,ANY)> ]
-  "15796" -> "15800" 
+"15793" [label = <(METHOD,GET_PRIMITIVE_FIELD(Long, obj))> ]
+"15797" [label = <(METHOD_RETURN,ANY)> ]
+  "15793" -> "15797" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/419-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/419-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/419-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/419-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Float, obj)" {  
-"15801" [label = <(METHOD,GET_PRIMITIVE_FIELD(Float, obj))> ]
-"15805" [label = <(METHOD_RETURN,ANY)> ]
-  "15801" -> "15805" 
+"15798" [label = <(METHOD,GET_PRIMITIVE_FIELD(Float, obj))> ]
+"15802" [label = <(METHOD_RETURN,ANY)> ]
+  "15798" -> "15802" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/42-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/42-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/42-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/42-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,9 +1,9 @@
 digraph "FatalError" {  
-"1611" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot; &lt;&lt; msg)<SUB>696</SUB>> ]
-"1612" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot;)<SUB>696</SUB>> ]
-"1613" [label = <(LOG,LOG(FATAL))<SUB>696</SUB>> ]
-"1607" [label = <(METHOD,FatalError)<SUB>695</SUB>> ]
-"1617" [label = <(METHOD_RETURN,void)<SUB>695</SUB>> ]
+"1611" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot; &lt;&lt; msg)<SUB>695</SUB>> ]
+"1612" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot;)<SUB>695</SUB>> ]
+"1613" [label = <(LOG,LOG(FATAL))<SUB>695</SUB>> ]
+"1607" [label = <(METHOD,FatalError)<SUB>694</SUB>> ]
+"1617" [label = <(METHOD_RETURN,void)<SUB>694</SUB>> ]
   "1611" -> "1617" 
   "1612" -> "1611" 
   "1613" -> "1612" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/420-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/420-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/420-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/420-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Double, obj)" {  
-"15806" [label = <(METHOD,GET_PRIMITIVE_FIELD(Double, obj))> ]
-"15810" [label = <(METHOD_RETURN,ANY)> ]
-  "15806" -> "15810" 
+"15803" [label = <(METHOD,GET_PRIMITIVE_FIELD(Double, obj))> ]
+"15807" [label = <(METHOD_RETURN,ANY)> ]
+  "15803" -> "15807" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/421-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/421-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/421-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/421-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD" {  
-"15811" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD)<SUB>1470</SUB>> ]
-"15813" [label = <(METHOD_RETURN,ANY)> ]
-  "15811" -> "15813" 
+"15808" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD)<SUB>1469</SUB>> ]
+"15810" [label = <(METHOD_RETURN,ANY)> ]
+  "15808" -> "15810" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/422-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/422-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/422-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/422-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Boolean)" {  
-"15814" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Boolean))> ]
-"15817" [label = <(METHOD_RETURN,ANY)> ]
-  "15814" -> "15817" 
+"15811" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Boolean))> ]
+"15814" [label = <(METHOD_RETURN,ANY)> ]
+  "15811" -> "15814" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/423-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/423-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/423-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/423-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Byte)" {  
-"15818" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Byte))> ]
-"15821" [label = <(METHOD_RETURN,ANY)> ]
-  "15818" -> "15821" 
+"15815" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Byte))> ]
+"15818" [label = <(METHOD_RETURN,ANY)> ]
+  "15815" -> "15818" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/424-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/424-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/424-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/424-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Char)" {  
-"15822" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Char))> ]
-"15825" [label = <(METHOD_RETURN,ANY)> ]
-  "15822" -> "15825" 
+"15819" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Char))> ]
+"15822" [label = <(METHOD_RETURN,ANY)> ]
+  "15819" -> "15822" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/425-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/425-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/425-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/425-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Short)" {  
-"15826" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Short))> ]
-"15829" [label = <(METHOD_RETURN,ANY)> ]
-  "15826" -> "15829" 
+"15823" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Short))> ]
+"15826" [label = <(METHOD_RETURN,ANY)> ]
+  "15823" -> "15826" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/426-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/426-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/426-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/426-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Int)" {  
-"15830" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Int))> ]
-"15833" [label = <(METHOD_RETURN,ANY)> ]
-  "15830" -> "15833" 
+"15827" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Int))> ]
+"15830" [label = <(METHOD_RETURN,ANY)> ]
+  "15827" -> "15830" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/427-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/427-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/427-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/427-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Long)" {  
-"15834" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Long))> ]
-"15837" [label = <(METHOD_RETURN,ANY)> ]
-  "15834" -> "15837" 
+"15831" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Long))> ]
+"15834" [label = <(METHOD_RETURN,ANY)> ]
+  "15831" -> "15834" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/428-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/428-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/428-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/428-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Float)" {  
-"15838" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Float))> ]
-"15841" [label = <(METHOD_RETURN,ANY)> ]
-  "15838" -> "15841" 
+"15835" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Float))> ]
+"15838" [label = <(METHOD_RETURN,ANY)> ]
+  "15835" -> "15838" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/429-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/429-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/429-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/429-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Double)" {  
-"15842" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Double))> ]
-"15845" [label = <(METHOD_RETURN,ANY)> ]
-  "15842" -> "15845" 
+"15839" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Double))> ]
+"15842" [label = <(METHOD_RETURN,ANY)> ]
+  "15839" -> "15842" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/43-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/43-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/43-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/43-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,15 +1,15 @@
 digraph "PushLocalFrame" {  
-"1624" [label = <(soa,soa(env))<SUB>701</SUB>> ]
-"1636" [label = <(PushFrame,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame(capacity))<SUB>705</SUB>> ]
-"1642" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>706</SUB>> ]
-"1627" [label = <(&lt;operator&gt;.notEquals,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;) != JNI_OK)<SUB>702</SUB>> ]
-"1637" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame)<SUB>705</SUB>> ]
-"1628" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;))<SUB>702</SUB>> ]
-"1634" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>703</SUB>> ]
-"1638" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>705</SUB>> ]
-"1640" [label = <(FIELD_IDENTIFIER,PushFrame,PushFrame)<SUB>705</SUB>> ]
-"1619" [label = <(METHOD,PushLocalFrame)<SUB>699</SUB>> ]
-"1644" [label = <(METHOD_RETURN,jint)<SUB>699</SUB>> ]
+"1624" [label = <(soa,soa(env))<SUB>700</SUB>> ]
+"1636" [label = <(PushFrame,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame(capacity))<SUB>704</SUB>> ]
+"1642" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>705</SUB>> ]
+"1627" [label = <(&lt;operator&gt;.notEquals,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;) != JNI_OK)<SUB>701</SUB>> ]
+"1637" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame)<SUB>704</SUB>> ]
+"1628" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;))<SUB>701</SUB>> ]
+"1634" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>702</SUB>> ]
+"1638" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>704</SUB>> ]
+"1640" [label = <(FIELD_IDENTIFIER,PushFrame,PushFrame)<SUB>704</SUB>> ]
+"1619" [label = <(METHOD,PushLocalFrame)<SUB>698</SUB>> ]
+"1644" [label = <(METHOD_RETURN,jint)<SUB>698</SUB>> ]
   "1624" -> "1628" 
   "1636" -> "1642" 
   "1642" -> "1644" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/430-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/430-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/430-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/430-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD" {  
-"15846" [label = <(METHOD,SET_PRIMITIVE_FIELD)<SUB>1477</SUB>> ]
-"15849" [label = <(METHOD_RETURN,ANY)> ]
-  "15846" -> "15849" 
+"15843" [label = <(METHOD,SET_PRIMITIVE_FIELD)<SUB>1476</SUB>> ]
+"15846" [label = <(METHOD_RETURN,ANY)> ]
+  "15843" -> "15846" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/431-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/431-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/431-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/431-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Boolean, obj, v)" {  
-"15850" [label = <(METHOD,SET_PRIMITIVE_FIELD(Boolean, obj, v))> ]
-"15854" [label = <(METHOD_RETURN,ANY)> ]
-  "15850" -> "15854" 
+"15847" [label = <(METHOD,SET_PRIMITIVE_FIELD(Boolean, obj, v))> ]
+"15851" [label = <(METHOD_RETURN,ANY)> ]
+  "15847" -> "15851" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/432-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/432-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/432-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/432-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Byte, obj, v)" {  
-"15855" [label = <(METHOD,SET_PRIMITIVE_FIELD(Byte, obj, v))> ]
-"15859" [label = <(METHOD_RETURN,ANY)> ]
-  "15855" -> "15859" 
+"15852" [label = <(METHOD,SET_PRIMITIVE_FIELD(Byte, obj, v))> ]
+"15856" [label = <(METHOD_RETURN,ANY)> ]
+  "15852" -> "15856" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/433-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/433-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/433-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/433-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Char, obj, v)" {  
-"15860" [label = <(METHOD,SET_PRIMITIVE_FIELD(Char, obj, v))> ]
-"15864" [label = <(METHOD_RETURN,ANY)> ]
-  "15860" -> "15864" 
+"15857" [label = <(METHOD,SET_PRIMITIVE_FIELD(Char, obj, v))> ]
+"15861" [label = <(METHOD_RETURN,ANY)> ]
+  "15857" -> "15861" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/434-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/434-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/434-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/434-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Float, obj, v)" {  
-"15865" [label = <(METHOD,SET_PRIMITIVE_FIELD(Float, obj, v))> ]
-"15869" [label = <(METHOD_RETURN,ANY)> ]
-  "15865" -> "15869" 
+"15862" [label = <(METHOD,SET_PRIMITIVE_FIELD(Float, obj, v))> ]
+"15866" [label = <(METHOD_RETURN,ANY)> ]
+  "15862" -> "15866" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/435-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/435-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/435-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/435-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Double, obj, v)" {  
-"15870" [label = <(METHOD,SET_PRIMITIVE_FIELD(Double, obj, v))> ]
-"15874" [label = <(METHOD_RETURN,ANY)> ]
-  "15870" -> "15874" 
+"15867" [label = <(METHOD,SET_PRIMITIVE_FIELD(Double, obj, v))> ]
+"15871" [label = <(METHOD_RETURN,ANY)> ]
+  "15867" -> "15871" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/436-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/436-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/436-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/436-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Int, obj, v)" {  
-"15875" [label = <(METHOD,SET_PRIMITIVE_FIELD(Int, obj, v))> ]
-"15879" [label = <(METHOD_RETURN,ANY)> ]
-  "15875" -> "15879" 
+"15872" [label = <(METHOD,SET_PRIMITIVE_FIELD(Int, obj, v))> ]
+"15876" [label = <(METHOD_RETURN,ANY)> ]
+  "15872" -> "15876" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/437-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/437-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/437-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/437-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Long, obj, v)" {  
-"15880" [label = <(METHOD,SET_PRIMITIVE_FIELD(Long, obj, v))> ]
-"15884" [label = <(METHOD_RETURN,ANY)> ]
-  "15880" -> "15884" 
+"15877" [label = <(METHOD,SET_PRIMITIVE_FIELD(Long, obj, v))> ]
+"15881" [label = <(METHOD_RETURN,ANY)> ]
+  "15877" -> "15881" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/438-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/438-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/438-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/438-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Short, obj, v)" {  
-"15885" [label = <(METHOD,SET_PRIMITIVE_FIELD(Short, obj, v))> ]
-"15889" [label = <(METHOD_RETURN,ANY)> ]
-  "15885" -> "15889" 
+"15882" [label = <(METHOD,SET_PRIMITIVE_FIELD(Short, obj, v))> ]
+"15886" [label = <(METHOD_RETURN,ANY)> ]
+  "15882" -> "15886" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/439-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/439-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/439-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/439-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD" {  
-"15890" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD)<SUB>1486</SUB>> ]
-"15892" [label = <(METHOD_RETURN,ANY)> ]
-  "15890" -> "15892" 
+"15887" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD)<SUB>1485</SUB>> ]
+"15889" [label = <(METHOD_RETURN,ANY)> ]
+  "15887" -> "15889" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/44-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/44-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/44-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/44-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,29 +1,29 @@
 digraph "PopLocalFrame" {  
-"1651" [label = <(soa,soa(env))<SUB>710</SUB>> ]
-"1653" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; survivor = soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>711</SUB>> ]
-"1670" [label = <(PopFrame,soa.Env()-&gt;PopFrame())<SUB>712</SUB>> ]
-"1677" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(survivor);,return soa.AddLocalReference&lt;jobject&gt;(survivor);)<SUB>713</SUB>> ]
-"1654" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; survivor)<SUB>711</SUB>> ]
-"1661" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>711</SUB>> ]
-"1671" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Env()-&gt;PopFrame)<SUB>712</SUB>> ]
-"1678" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(survivor))<SUB>713</SUB>> ]
-"1655" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>711</SUB>> ]
-"1662" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>711</SUB>> ]
-"1672" [label = <(Env,soa.Env())<SUB>712</SUB>> ]
-"1676" [label = <(FIELD_IDENTIFIER,PopFrame,PopFrame)<SUB>712</SUB>> ]
-"1679" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>713</SUB>> ]
-"1657" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>711</SUB>> ]
-"1663" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>711</SUB>> ]
-"1666" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>711</SUB>> ]
-"1673" [label = <(&lt;operator&gt;.fieldAccess,soa.Env)<SUB>712</SUB>> ]
-"1680" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>713</SUB>> ]
-"1659" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>711</SUB>> ]
-"1665" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>711</SUB>> ]
-"1668" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>711</SUB>> ]
-"1675" [label = <(FIELD_IDENTIFIER,Env,Env)<SUB>712</SUB>> ]
-"1682" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>713</SUB>> ]
-"1646" [label = <(METHOD,PopLocalFrame)<SUB>709</SUB>> ]
-"1685" [label = <(METHOD_RETURN,jobject)<SUB>709</SUB>> ]
+"1651" [label = <(soa,soa(env))<SUB>709</SUB>> ]
+"1653" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; survivor = soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>710</SUB>> ]
+"1670" [label = <(PopFrame,soa.Env()-&gt;PopFrame())<SUB>711</SUB>> ]
+"1677" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(survivor);,return soa.AddLocalReference&lt;jobject&gt;(survivor);)<SUB>712</SUB>> ]
+"1654" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; survivor)<SUB>710</SUB>> ]
+"1661" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>710</SUB>> ]
+"1671" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Env()-&gt;PopFrame)<SUB>711</SUB>> ]
+"1678" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(survivor))<SUB>712</SUB>> ]
+"1655" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>710</SUB>> ]
+"1662" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>710</SUB>> ]
+"1672" [label = <(Env,soa.Env())<SUB>711</SUB>> ]
+"1676" [label = <(FIELD_IDENTIFIER,PopFrame,PopFrame)<SUB>711</SUB>> ]
+"1679" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>712</SUB>> ]
+"1657" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>710</SUB>> ]
+"1663" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>710</SUB>> ]
+"1666" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>710</SUB>> ]
+"1673" [label = <(&lt;operator&gt;.fieldAccess,soa.Env)<SUB>711</SUB>> ]
+"1680" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>712</SUB>> ]
+"1659" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>710</SUB>> ]
+"1665" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>710</SUB>> ]
+"1668" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>710</SUB>> ]
+"1675" [label = <(FIELD_IDENTIFIER,Env,Env)<SUB>711</SUB>> ]
+"1682" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>712</SUB>> ]
+"1646" [label = <(METHOD,PopLocalFrame)<SUB>708</SUB>> ]
+"1685" [label = <(METHOD_RETURN,jobject)<SUB>708</SUB>> ]
   "1651" -> "1659" 
   "1653" -> "1675" 
   "1670" -> "1682" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/440-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/440-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/440-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/440-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Boolean, v)" {  
-"15893" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))> ]
-"15896" [label = <(METHOD_RETURN,ANY)> ]
-  "15893" -> "15896" 
+"15890" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))> ]
+"15893" [label = <(METHOD_RETURN,ANY)> ]
+  "15890" -> "15893" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/441-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/441-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/441-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/441-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Byte, v)" {  
-"15897" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))> ]
-"15900" [label = <(METHOD_RETURN,ANY)> ]
-  "15897" -> "15900" 
+"15894" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))> ]
+"15897" [label = <(METHOD_RETURN,ANY)> ]
+  "15894" -> "15897" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/442-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/442-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/442-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/442-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Char, v)" {  
-"15901" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Char, v))> ]
-"15904" [label = <(METHOD_RETURN,ANY)> ]
-  "15901" -> "15904" 
+"15898" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Char, v))> ]
+"15901" [label = <(METHOD_RETURN,ANY)> ]
+  "15898" -> "15901" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/443-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/443-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/443-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/443-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Float, v)" {  
-"15905" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Float, v))> ]
-"15908" [label = <(METHOD_RETURN,ANY)> ]
-  "15905" -> "15908" 
+"15902" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Float, v))> ]
+"15905" [label = <(METHOD_RETURN,ANY)> ]
+  "15902" -> "15905" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/444-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/444-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/444-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/444-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Double, v)" {  
-"15909" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Double, v))> ]
-"15912" [label = <(METHOD_RETURN,ANY)> ]
-  "15909" -> "15912" 
+"15906" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Double, v))> ]
+"15909" [label = <(METHOD_RETURN,ANY)> ]
+  "15906" -> "15909" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/445-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/445-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/445-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/445-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Int, v)" {  
-"15913" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Int, v))> ]
-"15916" [label = <(METHOD_RETURN,ANY)> ]
-  "15913" -> "15916" 
+"15910" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Int, v))> ]
+"15913" [label = <(METHOD_RETURN,ANY)> ]
+  "15910" -> "15913" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/446-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/446-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/446-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/446-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Long, v)" {  
-"15917" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Long, v))> ]
-"15920" [label = <(METHOD_RETURN,ANY)> ]
-  "15917" -> "15920" 
+"15914" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Long, v))> ]
+"15917" [label = <(METHOD_RETURN,ANY)> ]
+  "15914" -> "15917" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/447-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/447-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/447-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/447-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Short, v)" {  
-"15921" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Short, v))> ]
-"15924" [label = <(METHOD_RETURN,ANY)> ]
-  "15921" -> "15924" 
+"15918" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Short, v))> ]
+"15921" [label = <(METHOD_RETURN,ANY)> ]
+  "15918" -> "15921" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/448-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/448-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/448-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/448-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "JniAbortF" {  
-"15925" [label = <(METHOD,JniAbortF)> ]
-"15931" [label = <(METHOD_RETURN,ANY)> ]
-  "15925" -> "15931" 
+"15922" [label = <(METHOD,JniAbortF)> ]
+"15928" [label = <(METHOD_RETURN,ANY)> ]
+  "15922" -> "15928" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/449-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/449-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/449-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/449-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::String::AllocFromUtf16" {  
-"15932" [label = <(METHOD,mirror::String::AllocFromUtf16)> ]
-"15938" [label = <(METHOD_RETURN,ANY)> ]
-  "15932" -> "15938" 
+"15929" [label = <(METHOD,mirror::String::AllocFromUtf16)> ]
+"15935" [label = <(METHOD_RETURN,ANY)> ]
+  "15929" -> "15935" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/45-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/45-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/45-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/45-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,9 +1,9 @@
 digraph "EnsureLocalCapacity" {  
-"1692" [label = <(soa,soa(env))<SUB>718</SUB>> ]
-"1694" [label = <(RETURN,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);)<SUB>719</SUB>> ]
-"1695" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;))<SUB>719</SUB>> ]
-"1687" [label = <(METHOD,EnsureLocalCapacity)<SUB>716</SUB>> ]
-"1699" [label = <(METHOD_RETURN,jint)<SUB>716</SUB>> ]
+"1692" [label = <(soa,soa(env))<SUB>717</SUB>> ]
+"1694" [label = <(RETURN,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);)<SUB>718</SUB>> ]
+"1695" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;))<SUB>718</SUB>> ]
+"1687" [label = <(METHOD,EnsureLocalCapacity)<SUB>715</SUB>> ]
+"1699" [label = <(METHOD_RETURN,jint)<SUB>715</SUB>> ]
   "1692" -> "1695" 
   "1694" -> "1699" 
   "1695" -> "1694" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/450-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/450-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/450-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/450-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "::max" {  
-"15939" [label = <(METHOD,::max)> ]
-"15942" [label = <(METHOD_RETURN,ANY)> ]
-  "15939" -> "15942" 
+"15936" [label = <(METHOD,::max)> ]
+"15939" [label = <(METHOD_RETURN,ANY)> ]
+  "15936" -> "15939" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/451-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/451-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/451-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/451-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "android::base::StringPrintf" {  
-"15943" [label = <(METHOD,android::base::StringPrintf)> ]
-"15948" [label = <(METHOD_RETURN,ANY)> ]
-  "15943" -> "15948" 
+"15940" [label = <(METHOD,android::base::StringPrintf)> ]
+"15945" [label = <(METHOD_RETURN,ANY)> ]
+  "15940" -> "15945" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/452-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/452-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/452-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/452-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowOutOfMemoryError" {  
-"15949" [label = <(METHOD,ThrowOutOfMemoryError)> ]
-"15953" [label = <(METHOD_RETURN,ANY)> ]
-  "15949" -> "15953" 
+"15946" [label = <(METHOD,ThrowOutOfMemoryError)> ]
+"15950" [label = <(METHOD_RETURN,ANY)> ]
+  "15946" -> "15950" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/453-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/453-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/453-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/453-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "android_errorWriteLog" {  
-"15954" [label = <(METHOD,android_errorWriteLog)> ]
-"15958" [label = <(METHOD_RETURN,ANY)> ]
-  "15954" -> "15958" 
+digraph "UINT64_C" {  
+"15951" [label = <(METHOD,UINT64_C)> ]
+"15954" [label = <(METHOD_RETURN,ANY)> ]
+  "15951" -> "15954" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/454-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/454-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/454-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/454-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "UINT64_C" {  
-"15959" [label = <(METHOD,UINT64_C)> ]
-"15962" [label = <(METHOD_RETURN,ANY)> ]
-  "15959" -> "15962" 
+digraph "prev_bad_input_time" {  
+"15955" [label = <(METHOD,prev_bad_input_time)> ]
+"15958" [label = <(METHOD_RETURN,ANY)> ]
+  "15955" -> "15958" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/455-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/455-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/455-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/455-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "prev_bad_input_time" {  
-"15963" [label = <(METHOD,prev_bad_input_time)> ]
-"15966" [label = <(METHOD_RETURN,ANY)> ]
-  "15963" -> "15966" 
+digraph "load" {  
+"15959" [label = <(METHOD,load)> ]
+"15963" [label = <(METHOD_RETURN,ANY)> ]
+  "15959" -> "15963" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/456-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/456-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/456-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/456-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "load" {  
-"15967" [label = <(METHOD,load)> ]
-"15971" [label = <(METHOD_RETURN,ANY)> ]
-  "15967" -> "15971" 
+digraph "NanoTime" {  
+"15964" [label = <(METHOD,NanoTime)> ]
+"15966" [label = <(METHOD_RETURN,ANY)> ]
+  "15964" -> "15966" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/457-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/457-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/457-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/457-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "NanoTime" {  
-"15972" [label = <(METHOD,NanoTime)> ]
-"15974" [label = <(METHOD_RETURN,ANY)> ]
-  "15972" -> "15974" 
+digraph "&lt;operator&gt;.logicalOr" {  
+"15967" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
+"15971" [label = <(METHOD_RETURN,ANY)> ]
+  "15967" -> "15971" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/458-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/458-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/458-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/458-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.logicalOr" {  
-"15975" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
-"15979" [label = <(METHOD_RETURN,ANY)> ]
-  "15975" -> "15979" 
+digraph "&lt;operator&gt;.greaterEqualsThan" {  
+"15972" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
+"15976" [label = <(METHOD_RETURN,ANY)> ]
+  "15972" -> "15976" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/459-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/459-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/459-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/459-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.greaterEqualsThan" {  
-"15980" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
-"15984" [label = <(METHOD_RETURN,ANY)> ]
-  "15980" -> "15984" 
+digraph "compare_exchange_strong" {  
+"15977" [label = <(METHOD,compare_exchange_strong)> ]
+"15983" [label = <(METHOD_RETURN,ANY)> ]
+  "15977" -> "15983" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/46-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/46-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/46-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/46-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,28 +1,28 @@
 digraph "NewGlobalRef" {  
-"1706" [label = <(soa,soa(env))<SUB>723</SUB>> ]
-"1708" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>724</SUB>> ]
-"1725" [label = <(RETURN,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);)<SUB>725</SUB>> ]
-"1709" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>724</SUB>> ]
-"1716" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>724</SUB>> ]
-"1726" [label = <(AddGlobalRef,soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj))<SUB>725</SUB>> ]
-"1710" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>724</SUB>> ]
-"1717" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>724</SUB>> ]
-"1727" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddGlobalRef)<SUB>725</SUB>> ]
-"1733" [label = <(Self,soa.Self())<SUB>725</SUB>> ]
-"1712" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>724</SUB>> ]
-"1718" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>724</SUB>> ]
-"1721" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>724</SUB>> ]
-"1728" [label = <(Vm,soa.Vm())<SUB>725</SUB>> ]
-"1732" [label = <(FIELD_IDENTIFIER,AddGlobalRef,AddGlobalRef)<SUB>725</SUB>> ]
-"1734" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>725</SUB>> ]
-"1714" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>724</SUB>> ]
-"1720" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>724</SUB>> ]
-"1723" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>724</SUB>> ]
-"1729" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>725</SUB>> ]
-"1736" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>725</SUB>> ]
-"1731" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>725</SUB>> ]
-"1701" [label = <(METHOD,NewGlobalRef)<SUB>722</SUB>> ]
-"1738" [label = <(METHOD_RETURN,jobject)<SUB>722</SUB>> ]
+"1706" [label = <(soa,soa(env))<SUB>722</SUB>> ]
+"1708" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>723</SUB>> ]
+"1725" [label = <(RETURN,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);)<SUB>724</SUB>> ]
+"1709" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>723</SUB>> ]
+"1716" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>723</SUB>> ]
+"1726" [label = <(AddGlobalRef,soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj))<SUB>724</SUB>> ]
+"1710" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>723</SUB>> ]
+"1717" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>723</SUB>> ]
+"1727" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddGlobalRef)<SUB>724</SUB>> ]
+"1733" [label = <(Self,soa.Self())<SUB>724</SUB>> ]
+"1712" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>723</SUB>> ]
+"1718" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>723</SUB>> ]
+"1721" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>723</SUB>> ]
+"1728" [label = <(Vm,soa.Vm())<SUB>724</SUB>> ]
+"1732" [label = <(FIELD_IDENTIFIER,AddGlobalRef,AddGlobalRef)<SUB>724</SUB>> ]
+"1734" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>724</SUB>> ]
+"1714" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>723</SUB>> ]
+"1720" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>723</SUB>> ]
+"1723" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>723</SUB>> ]
+"1729" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>724</SUB>> ]
+"1736" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>724</SUB>> ]
+"1731" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>724</SUB>> ]
+"1701" [label = <(METHOD,NewGlobalRef)<SUB>721</SUB>> ]
+"1738" [label = <(METHOD_RETURN,jobject)<SUB>721</SUB>> ]
   "1706" -> "1714" 
   "1708" -> "1731" 
   "1725" -> "1738" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/460-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/460-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/460-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/460-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "compare_exchange_strong" {  
-"15985" [label = <(METHOD,compare_exchange_strong)> ]
-"15991" [label = <(METHOD_RETURN,ANY)> ]
-  "15985" -> "15991" 
+digraph "reset" {  
+"15984" [label = <(METHOD,reset)> ]
+"15988" [label = <(METHOD_RETURN,ANY)> ]
+  "15984" -> "15988" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/461-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/461-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/461-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/461-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "reset" {  
-"15992" [label = <(METHOD,reset)> ]
-"15996" [label = <(METHOD_RETURN,ANY)> ]
-  "15992" -> "15996" 
+digraph "&lt;operator&gt;.new" {  
+"15989" [label = <(METHOD,&lt;operator&gt;.new)> ]
+"15992" [label = <(METHOD_RETURN,ANY)> ]
+  "15989" -> "15992" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/462-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/462-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/462-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/462-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.new" {  
-"15997" [label = <(METHOD,&lt;operator&gt;.new)> ]
-"16000" [label = <(METHOD_RETURN,ANY)> ]
-  "15997" -> "16000" 
+digraph "VisitModifiedUtf8Chars" {  
+"15993" [label = <(METHOD,VisitModifiedUtf8Chars)> ]
+"15999" [label = <(METHOD_RETURN,ANY)> ]
+  "15993" -> "15999" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/463-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/463-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/463-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/463-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "VisitModifiedUtf8Chars" {  
-"16001" [label = <(METHOD,VisitModifiedUtf8Chars)> ]
+digraph "mirror::String::AllocFromModifiedUtf8" {  
+"16000" [label = <(METHOD,mirror::String::AllocFromModifiedUtf8)> ]
 "16007" [label = <(METHOD_RETURN,ANY)> ]
-  "16001" -> "16007" 
+  "16000" -> "16007" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/464-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/464-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/464-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/464-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::String::AllocFromModifiedUtf8" {  
-"16008" [label = <(METHOD,mirror::String::AllocFromModifiedUtf8)> ]
-"16015" [label = <(METHOD_RETURN,ANY)> ]
-  "16008" -> "16015" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string)" {  
+"16008" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))> ]
+"16013" [label = <(METHOD_RETURN,ANY)> ]
+  "16008" -> "16013" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/465-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/465-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/465-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/465-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string)" {  
-"16016" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))> ]
-"16021" [label = <(METHOD_RETURN,ANY)> ]
-  "16016" -> "16021" 
+digraph "GetLength" {  
+"16014" [label = <(METHOD,GetLength)> ]
+"16017" [label = <(METHOD_RETURN,ANY)> ]
+  "16014" -> "16017" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/466-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/466-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/466-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/466-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetLength" {  
-"16022" [label = <(METHOD,GetLength)> ]
-"16025" [label = <(METHOD_RETURN,ANY)> ]
-  "16022" -> "16025" 
+digraph "GetUtfLength" {  
+"16018" [label = <(METHOD,GetUtfLength)> ]
+"16021" [label = <(METHOD_RETURN,ANY)> ]
+  "16018" -> "16021" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/467-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/467-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/467-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/467-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetUtfLength" {  
-"16026" [label = <(METHOD,GetUtfLength)> ]
-"16029" [label = <(METHOD_RETURN,ANY)> ]
-  "16026" -> "16029" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string)" {  
+"16022" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))> ]
+"16027" [label = <(METHOD_RETURN,ANY)> ]
+  "16022" -> "16027" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/468-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/468-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/468-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/468-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string)" {  
-"16030" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))> ]
-"16035" [label = <(METHOD_RETURN,ANY)> ]
-  "16030" -> "16035" 
+digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT" {  
+"16028" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT)<SUB>509</SUB>> ]
+"16032" [label = <(METHOD_RETURN,ANY)> ]
+  "16028" -> "16032" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/469-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/469-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/469-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/469-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT" {  
-"16036" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT)<SUB>510</SUB>> ]
-"16040" [label = <(METHOD_RETURN,ANY)> ]
-  "16036" -> "16040" 
+digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf)" {  
+"16033" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))> ]
+"16038" [label = <(METHOD_RETURN,ANY)> ]
+  "16033" -> "16038" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/47-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/47-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/47-cfg.dot	2023-06-07 19:34:35.057389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/47-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,18 +1,18 @@
 digraph "DeleteGlobalRef" {  
-"1745" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>729</SUB>> ]
-"1753" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>730</SUB>> ]
-"1759" [label = <(DeleteGlobalRef,vm-&gt;DeleteGlobalRef(self, obj))<SUB>731</SUB>> ]
-"1747" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>729</SUB>> ]
-"1755" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>730</SUB>> ]
-"1760" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteGlobalRef)<SUB>731</SUB>> ]
-"1748" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>729</SUB>> ]
-"1756" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>730</SUB>> ]
-"1758" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>730</SUB>> ]
-"1762" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>731</SUB>> ]
-"1749" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>729</SUB>> ]
-"1751" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>729</SUB>> ]
-"1740" [label = <(METHOD,DeleteGlobalRef)<SUB>728</SUB>> ]
-"1765" [label = <(METHOD_RETURN,void)<SUB>728</SUB>> ]
+"1745" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>728</SUB>> ]
+"1753" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>729</SUB>> ]
+"1759" [label = <(DeleteGlobalRef,vm-&gt;DeleteGlobalRef(self, obj))<SUB>730</SUB>> ]
+"1747" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>728</SUB>> ]
+"1755" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>729</SUB>> ]
+"1760" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteGlobalRef)<SUB>730</SUB>> ]
+"1748" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>728</SUB>> ]
+"1756" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>729</SUB>> ]
+"1758" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>729</SUB>> ]
+"1762" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>730</SUB>> ]
+"1749" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>728</SUB>> ]
+"1751" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>728</SUB>> ]
+"1740" [label = <(METHOD,DeleteGlobalRef)<SUB>727</SUB>> ]
+"1765" [label = <(METHOD_RETURN,void)<SUB>727</SUB>> ]
   "1745" -> "1756" 
   "1753" -> "1762" 
   "1759" -> "1765" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/470-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/470-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/470-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/470-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf)" {  
-"16041" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))> ]
-"16046" [label = <(METHOD_RETURN,ANY)> ]
-  "16041" -> "16046" 
+digraph "IsCompressed" {  
+"16039" [label = <(METHOD,IsCompressed)> ]
+"16042" [label = <(METHOD_RETURN,ANY)> ]
+  "16039" -> "16042" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/471-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/471-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/471-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/471-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "IsCompressed" {  
-"16047" [label = <(METHOD,IsCompressed)> ]
-"16050" [label = <(METHOD_RETURN,ANY)> ]
-  "16047" -> "16050" 
+digraph "&lt;operator&gt;.preIncrement" {  
+"16043" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
+"16046" [label = <(METHOD_RETURN,ANY)> ]
+  "16043" -> "16046" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/472-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/472-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/472-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/472-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.preIncrement" {  
-"16051" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
-"16054" [label = <(METHOD_RETURN,ANY)> ]
-  "16051" -> "16054" 
+digraph "CharAt" {  
+"16047" [label = <(METHOD,CharAt)> ]
+"16051" [label = <(METHOD_RETURN,ANY)> ]
+  "16047" -> "16051" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/473-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/473-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/473-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/473-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CharAt" {  
-"16055" [label = <(METHOD,CharAt)> ]
-"16059" [label = <(METHOD_RETURN,ANY)> ]
-  "16055" -> "16059" 
+digraph "GetValue" {  
+"16052" [label = <(METHOD,GetValue)> ]
+"16055" [label = <(METHOD_RETURN,ANY)> ]
+  "16052" -> "16055" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/474-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/474-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/474-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/474-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetValue" {  
-"16060" [label = <(METHOD,GetValue)> ]
-"16063" [label = <(METHOD_RETURN,ANY)> ]
-  "16060" -> "16063" 
+digraph "memcpy" {  
+"16056" [label = <(METHOD,memcpy)> ]
+"16061" [label = <(METHOD_RETURN,ANY)> ]
+  "16056" -> "16061" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/475-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/475-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/475-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/475-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "memcpy" {  
-"16064" [label = <(METHOD,memcpy)> ]
-"16069" [label = <(METHOD_RETURN,ANY)> ]
-  "16064" -> "16069" 
+digraph "&lt;operator&gt;.sizeOf" {  
+"16062" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
+"16065" [label = <(METHOD_RETURN,ANY)> ]
+  "16062" -> "16065" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/476-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/476-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/476-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/476-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.sizeOf" {  
-"16070" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
-"16073" [label = <(METHOD_RETURN,ANY)> ]
-  "16070" -> "16073" 
+digraph "CountUtf8Bytes" {  
+"16066" [label = <(METHOD,CountUtf8Bytes)> ]
+"16070" [label = <(METHOD_RETURN,ANY)> ]
+  "16066" -> "16070" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/477-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/477-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/477-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/477-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CountUtf8Bytes" {  
-"16074" [label = <(METHOD,CountUtf8Bytes)> ]
-"16078" [label = <(METHOD_RETURN,ANY)> ]
-  "16074" -> "16078" 
+digraph "ConvertUtf16ToModifiedUtf8" {  
+"16071" [label = <(METHOD,ConvertUtf16ToModifiedUtf8)> ]
+"16077" [label = <(METHOD_RETURN,ANY)> ]
+  "16071" -> "16077" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/478-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/478-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/478-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/478-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "ConvertUtf16ToModifiedUtf8" {  
-"16079" [label = <(METHOD,ConvertUtf16ToModifiedUtf8)> ]
-"16085" [label = <(METHOD_RETURN,ANY)> ]
-  "16079" -> "16085" 
+digraph "CHECK_NON_NULL_ARGUMENT(java_string)" {  
+"16078" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_string))> ]
+"16083" [label = <(METHOD_RETURN,ANY)> ]
+  "16078" -> "16083" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/479-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/479-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/479-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/479-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(java_string)" {  
-"16086" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_string))> ]
-"16091" [label = <(METHOD_RETURN,ANY)> ]
-  "16086" -> "16091" 
+digraph "IsMovableObject" {  
+"16084" [label = <(METHOD,IsMovableObject)> ]
+"16088" [label = <(METHOD_RETURN,ANY)> ]
+  "16084" -> "16088" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/48-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/48-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/48-cfg.dot	2023-06-07 19:34:35.067389623 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/48-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,28 +1,28 @@
 digraph "NewWeakGlobalRef" {  
-"1772" [label = <(soa,soa(env))<SUB>735</SUB>> ]
-"1774" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>736</SUB>> ]
-"1791" [label = <(RETURN,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);)<SUB>737</SUB>> ]
-"1775" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>736</SUB>> ]
-"1782" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>736</SUB>> ]
-"1792" [label = <(AddWeakGlobalRef,soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj))<SUB>737</SUB>> ]
-"1776" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>736</SUB>> ]
-"1783" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>736</SUB>> ]
-"1793" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddWeakGlobalRef)<SUB>737</SUB>> ]
-"1799" [label = <(Self,soa.Self())<SUB>737</SUB>> ]
-"1778" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>736</SUB>> ]
-"1784" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>736</SUB>> ]
-"1787" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>736</SUB>> ]
-"1794" [label = <(Vm,soa.Vm())<SUB>737</SUB>> ]
-"1798" [label = <(FIELD_IDENTIFIER,AddWeakGlobalRef,AddWeakGlobalRef)<SUB>737</SUB>> ]
-"1800" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>737</SUB>> ]
-"1780" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>736</SUB>> ]
-"1786" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>736</SUB>> ]
-"1789" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>736</SUB>> ]
-"1795" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>737</SUB>> ]
-"1802" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>737</SUB>> ]
-"1797" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>737</SUB>> ]
-"1767" [label = <(METHOD,NewWeakGlobalRef)<SUB>734</SUB>> ]
-"1804" [label = <(METHOD_RETURN,jweak)<SUB>734</SUB>> ]
+"1772" [label = <(soa,soa(env))<SUB>734</SUB>> ]
+"1774" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>735</SUB>> ]
+"1791" [label = <(RETURN,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);)<SUB>736</SUB>> ]
+"1775" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>735</SUB>> ]
+"1782" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>735</SUB>> ]
+"1792" [label = <(AddWeakGlobalRef,soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj))<SUB>736</SUB>> ]
+"1776" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>735</SUB>> ]
+"1783" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>735</SUB>> ]
+"1793" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddWeakGlobalRef)<SUB>736</SUB>> ]
+"1799" [label = <(Self,soa.Self())<SUB>736</SUB>> ]
+"1778" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>735</SUB>> ]
+"1784" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>735</SUB>> ]
+"1787" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>735</SUB>> ]
+"1794" [label = <(Vm,soa.Vm())<SUB>736</SUB>> ]
+"1798" [label = <(FIELD_IDENTIFIER,AddWeakGlobalRef,AddWeakGlobalRef)<SUB>736</SUB>> ]
+"1800" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>736</SUB>> ]
+"1780" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>735</SUB>> ]
+"1786" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>735</SUB>> ]
+"1789" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>735</SUB>> ]
+"1795" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>736</SUB>> ]
+"1802" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>736</SUB>> ]
+"1797" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>736</SUB>> ]
+"1767" [label = <(METHOD,NewWeakGlobalRef)<SUB>733</SUB>> ]
+"1804" [label = <(METHOD_RETURN,jweak)<SUB>733</SUB>> ]
   "1772" -> "1780" 
   "1774" -> "1797" 
   "1791" -> "1804" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/480-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/480-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/480-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/480-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "IsMovableObject" {  
-"16092" [label = <(METHOD,IsMovableObject)> ]
-"16096" [label = <(METHOD_RETURN,ANY)> ]
-  "16092" -> "16096" 
+digraph "&lt;operator&gt;.delete" {  
+"16089" [label = <(METHOD,&lt;operator&gt;.delete)> ]
+"16092" [label = <(METHOD_RETURN,ANY)> ]
+  "16089" -> "16092" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/481-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/481-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/481-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/481-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.delete" {  
-"16097" [label = <(METHOD,&lt;operator&gt;.delete)> ]
-"16100" [label = <(METHOD_RETURN,ANY)> ]
-  "16097" -> "16100" 
+digraph "h" {  
+"16093" [label = <(METHOD,h)> ]
+"16096" [label = <(METHOD_RETURN,ANY)> ]
+  "16093" -> "16096" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/482-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/482-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/482-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/482-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "h" {  
-"16101" [label = <(METHOD,h)> ]
-"16104" [label = <(METHOD_RETURN,ANY)> ]
-  "16101" -> "16104" 
+digraph "NewHandleWrapper" {  
+"16097" [label = <(METHOD,NewHandleWrapper)> ]
+"16101" [label = <(METHOD_RETURN,ANY)> ]
+  "16097" -> "16101" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/483-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/483-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/483-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/483-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "NewHandleWrapper" {  
-"16105" [label = <(METHOD,NewHandleWrapper)> ]
-"16109" [label = <(METHOD_RETURN,ANY)> ]
-  "16105" -> "16109" 
+digraph "IncrementDisableMovingGC" {  
+"16102" [label = <(METHOD,IncrementDisableMovingGC)> ]
+"16106" [label = <(METHOD_RETURN,ANY)> ]
+  "16102" -> "16106" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/484-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/484-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/484-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/484-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "IncrementDisableMovingGC" {  
-"16110" [label = <(METHOD,IncrementDisableMovingGC)> ]
-"16114" [label = <(METHOD_RETURN,ANY)> ]
-  "16110" -> "16114" 
+digraph "IncrementDisableThreadFlip" {  
+"16107" [label = <(METHOD,IncrementDisableThreadFlip)> ]
+"16111" [label = <(METHOD_RETURN,ANY)> ]
+  "16107" -> "16111" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/485-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/485-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/485-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/485-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "IncrementDisableThreadFlip" {  
-"16115" [label = <(METHOD,IncrementDisableThreadFlip)> ]
-"16119" [label = <(METHOD_RETURN,ANY)> ]
-  "16115" -> "16119" 
+digraph "DecrementDisableMovingGC" {  
+"16112" [label = <(METHOD,DecrementDisableMovingGC)> ]
+"16116" [label = <(METHOD_RETURN,ANY)> ]
+  "16112" -> "16116" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/486-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/486-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/486-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/486-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "DecrementDisableMovingGC" {  
-"16120" [label = <(METHOD,DecrementDisableMovingGC)> ]
-"16124" [label = <(METHOD_RETURN,ANY)> ]
-  "16120" -> "16124" 
+digraph "DecrementDisableThreadFlip" {  
+"16117" [label = <(METHOD,DecrementDisableThreadFlip)> ]
+"16121" [label = <(METHOD_RETURN,ANY)> ]
+  "16117" -> "16121" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/487-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/487-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/487-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/487-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "DecrementDisableThreadFlip" {  
-"16125" [label = <(METHOD,DecrementDisableThreadFlip)> ]
-"16129" [label = <(METHOD_RETURN,ANY)> ]
-  "16125" -> "16129" 
+digraph "CHECK" {  
+"16122" [label = <(METHOD,CHECK)> ]
+"16125" [label = <(METHOD_RETURN,ANY)> ]
+  "16122" -> "16125" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/488-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/488-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/488-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/488-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK" {  
-"16130" [label = <(METHOD,CHECK)> ]
-"16133" [label = <(METHOD_RETURN,ANY)> ]
-  "16130" -> "16133" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array)" {  
+"16126" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))> ]
+"16131" [label = <(METHOD_RETURN,ANY)> ]
+  "16126" -> "16131" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/489-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/489-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/489-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/489-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array)" {  
-"16134" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))> ]
-"16139" [label = <(METHOD_RETURN,ANY)> ]
-  "16134" -> "16139" 
+digraph "IsArrayInstance" {  
+"16132" [label = <(METHOD,IsArrayInstance)> ]
+"16135" [label = <(METHOD_RETURN,ANY)> ]
+  "16132" -> "16135" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/49-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/49-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/49-cfg.dot	2023-06-07 19:34:35.067389623 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/49-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,18 +1,18 @@
 digraph "DeleteWeakGlobalRef" {  
-"1811" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>741</SUB>> ]
-"1819" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>742</SUB>> ]
-"1825" [label = <(DeleteWeakGlobalRef,vm-&gt;DeleteWeakGlobalRef(self, obj))<SUB>743</SUB>> ]
-"1813" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>741</SUB>> ]
-"1821" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>742</SUB>> ]
-"1826" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteWeakGlobalRef)<SUB>743</SUB>> ]
-"1814" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>741</SUB>> ]
-"1822" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>742</SUB>> ]
-"1824" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>742</SUB>> ]
-"1828" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>743</SUB>> ]
-"1815" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>741</SUB>> ]
-"1817" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>741</SUB>> ]
-"1806" [label = <(METHOD,DeleteWeakGlobalRef)<SUB>740</SUB>> ]
-"1831" [label = <(METHOD_RETURN,void)<SUB>740</SUB>> ]
+"1811" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>740</SUB>> ]
+"1819" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>741</SUB>> ]
+"1825" [label = <(DeleteWeakGlobalRef,vm-&gt;DeleteWeakGlobalRef(self, obj))<SUB>742</SUB>> ]
+"1813" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>740</SUB>> ]
+"1821" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>741</SUB>> ]
+"1826" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteWeakGlobalRef)<SUB>742</SUB>> ]
+"1814" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>740</SUB>> ]
+"1822" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>741</SUB>> ]
+"1824" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>741</SUB>> ]
+"1828" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>742</SUB>> ]
+"1815" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>740</SUB>> ]
+"1817" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>740</SUB>> ]
+"1806" [label = <(METHOD,DeleteWeakGlobalRef)<SUB>739</SUB>> ]
+"1831" [label = <(METHOD_RETURN,void)<SUB>739</SUB>> ]
   "1811" -> "1822" 
   "1819" -> "1828" 
   "1825" -> "1831" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/490-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/490-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/490-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/490-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "IsArrayInstance" {  
-"16140" [label = <(METHOD,IsArrayInstance)> ]
-"16143" [label = <(METHOD_RETURN,ANY)> ]
-  "16140" -> "16143" 
+digraph "PrettyTypeOf" {  
+"16136" [label = <(METHOD,PrettyTypeOf)> ]
+"16139" [label = <(METHOD_RETURN,ANY)> ]
+  "16136" -> "16139" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/491-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/491-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/491-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/491-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyTypeOf" {  
-"16144" [label = <(METHOD,PrettyTypeOf)> ]
-"16147" [label = <(METHOD_RETURN,ANY)> ]
-  "16144" -> "16147" 
+digraph "AsArray" {  
+"16140" [label = <(METHOD,AsArray)> ]
+"16143" [label = <(METHOD_RETURN,ANY)> ]
+  "16140" -> "16143" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/492-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/492-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/492-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/492-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "AsArray" {  
-"16148" [label = <(METHOD,AsArray)> ]
-"16151" [label = <(METHOD_RETURN,ANY)> ]
-  "16148" -> "16151" 
+digraph "CHECK_NON_NULL_ARGUMENT(java_array)" {  
+"16144" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_array))> ]
+"16149" [label = <(METHOD_RETURN,ANY)> ]
+  "16144" -> "16149" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/493-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/493-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/493-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/493-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(java_array)" {  
-"16152" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_array))> ]
-"16157" [label = <(METHOD_RETURN,ANY)> ]
-  "16152" -> "16157" 
+digraph "&lt;operator&gt;.arithmeticShiftRight" {  
+"16150" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
+"16154" [label = <(METHOD_RETURN,ANY)> ]
+  "16150" -> "16154" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/494-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/494-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/494-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/494-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.arithmeticShiftRight" {  
-"16158" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
-"16162" [label = <(METHOD_RETURN,ANY)> ]
-  "16158" -> "16162" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array)" {  
+"16155" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))> ]
+"16160" [label = <(METHOD_RETURN,ANY)> ]
+  "16155" -> "16160" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/495-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/495-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/495-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/495-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array)" {  
-"16163" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))> ]
-"16168" [label = <(METHOD_RETURN,ANY)> ]
-  "16163" -> "16168" 
+digraph "Ptr" {  
+"16161" [label = <(METHOD,Ptr)> ]
+"16164" [label = <(METHOD_RETURN,ANY)> ]
+  "16161" -> "16164" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/496-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/496-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/496-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/496-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "Ptr" {  
-"16169" [label = <(METHOD,Ptr)> ]
-"16172" [label = <(METHOD_RETURN,ANY)> ]
-  "16169" -> "16172" 
+digraph "NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;" {  
+"16165" [label = <(METHOD,NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;)> ]
+"16169" [label = <(METHOD_RETURN,ANY)> ]
+  "16165" -> "16169" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/497-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/497-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/497-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/497-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;" {  
-"16173" [label = <(METHOD,NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;)> ]
-"16177" [label = <(METHOD_RETURN,ANY)> ]
-  "16173" -> "16177" 
+digraph "NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;" {  
+"16170" [label = <(METHOD,NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;)> ]
+"16174" [label = <(METHOD_RETURN,ANY)> ]
+  "16170" -> "16174" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/498-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/498-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/498-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/498-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;" {  
-"16178" [label = <(METHOD,NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;)> ]
-"16182" [label = <(METHOD_RETURN,ANY)> ]
-  "16178" -> "16182" 
+digraph "NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;" {  
+"16175" [label = <(METHOD,NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;)> ]
+"16179" [label = <(METHOD_RETURN,ANY)> ]
+  "16175" -> "16179" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/499-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/499-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/499-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/499-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;" {  
-"16183" [label = <(METHOD,NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;)> ]
-"16187" [label = <(METHOD_RETURN,ANY)> ]
-  "16183" -> "16187" 
+digraph "NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;" {  
+"16180" [label = <(METHOD,NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;)> ]
+"16184" [label = <(METHOD_RETURN,ANY)> ]
+  "16180" -> "16184" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/5-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/5-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/5-cfg.dot	2023-06-07 19:34:35.027389628 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/5-cfg.dot	2023-06-07 19:34:41.547389025 +0330
@@ -1,5 +1,5 @@
 digraph "ScopedVAArgs" {  
-"30" [label = <(METHOD,ScopedVAArgs)<SUB>73</SUB>> ]
-"33" [label = <(METHOD_RETURN,ANY)<SUB>73</SUB>> ]
+"30" [label = <(METHOD,ScopedVAArgs)<SUB>72</SUB>> ]
+"33" [label = <(METHOD_RETURN,ANY)<SUB>72</SUB>> ]
   "30" -> "33" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/50-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/50-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/50-cfg.dot	2023-06-07 19:34:35.067389623 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/50-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,25 +1,25 @@
 digraph "NewLocalRef" {  
-"1838" [label = <(soa,soa(env))<SUB>747</SUB>> ]
-"1840" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>748</SUB>> ]
-"1864" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);)<SUB>753</SUB>> ]
-"1841" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>748</SUB>> ]
-"1848" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>748</SUB>> ]
-"1858" [label = <(&lt;operator&gt;.equals,decoded_obj == nullptr)<SUB>750</SUB>> ]
-"1865" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(decoded_obj))<SUB>753</SUB>> ]
-"1842" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>748</SUB>> ]
-"1849" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>748</SUB>> ]
-"1862" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>751</SUB>> ]
-"1866" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>753</SUB>> ]
-"1844" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>748</SUB>> ]
-"1850" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>748</SUB>> ]
-"1853" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>748</SUB>> ]
-"1867" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>753</SUB>> ]
-"1846" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>748</SUB>> ]
-"1852" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>748</SUB>> ]
-"1855" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>748</SUB>> ]
-"1869" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>753</SUB>> ]
-"1833" [label = <(METHOD,NewLocalRef)<SUB>746</SUB>> ]
-"1872" [label = <(METHOD_RETURN,jobject)<SUB>746</SUB>> ]
+"1838" [label = <(soa,soa(env))<SUB>746</SUB>> ]
+"1840" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>747</SUB>> ]
+"1864" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);)<SUB>752</SUB>> ]
+"1841" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>747</SUB>> ]
+"1848" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>747</SUB>> ]
+"1858" [label = <(&lt;operator&gt;.equals,decoded_obj == nullptr)<SUB>749</SUB>> ]
+"1865" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(decoded_obj))<SUB>752</SUB>> ]
+"1842" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>747</SUB>> ]
+"1849" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>747</SUB>> ]
+"1862" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>750</SUB>> ]
+"1866" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>752</SUB>> ]
+"1844" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>747</SUB>> ]
+"1850" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>747</SUB>> ]
+"1853" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>747</SUB>> ]
+"1867" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>752</SUB>> ]
+"1846" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>747</SUB>> ]
+"1852" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>747</SUB>> ]
+"1855" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>747</SUB>> ]
+"1869" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>752</SUB>> ]
+"1833" [label = <(METHOD,NewLocalRef)<SUB>745</SUB>> ]
+"1872" [label = <(METHOD_RETURN,jobject)<SUB>745</SUB>> ]
   "1838" -> "1846" 
   "1840" -> "1858" 
   "1864" -> "1872" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/500-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/500-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/500-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/500-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;" {  
-"16188" [label = <(METHOD,NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;)> ]
-"16192" [label = <(METHOD_RETURN,ANY)> ]
-  "16188" -> "16192" 
+digraph "NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;" {  
+"16185" [label = <(METHOD,NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;)> ]
+"16189" [label = <(METHOD_RETURN,ANY)> ]
+  "16185" -> "16189" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/501-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/501-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/501-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/501-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;" {  
-"16193" [label = <(METHOD,NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;)> ]
-"16197" [label = <(METHOD_RETURN,ANY)> ]
-  "16193" -> "16197" 
+digraph "NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;" {  
+"16190" [label = <(METHOD,NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;)> ]
+"16194" [label = <(METHOD_RETURN,ANY)> ]
+  "16190" -> "16194" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/502-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/502-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/502-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/502-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;" {  
-"16198" [label = <(METHOD,NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;)> ]
-"16202" [label = <(METHOD_RETURN,ANY)> ]
-  "16198" -> "16202" 
+digraph "NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;" {  
+"16195" [label = <(METHOD,NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;)> ]
+"16199" [label = <(METHOD_RETURN,ANY)> ]
+  "16195" -> "16199" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/503-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/503-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/503-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/503-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;" {  
-"16203" [label = <(METHOD,NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;)> ]
-"16207" [label = <(METHOD_RETURN,ANY)> ]
-  "16203" -> "16207" 
+digraph "CHECK_NON_NULL_ARGUMENT(element_jclass)" {  
+"16200" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(element_jclass))> ]
+"16205" [label = <(METHOD_RETURN,ANY)> ]
+  "16200" -> "16205" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/504-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/504-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/504-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/504-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(element_jclass)" {  
-"16208" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(element_jclass))> ]
-"16213" [label = <(METHOD_RETURN,ANY)> ]
-  "16208" -> "16213" 
+digraph "IsPrimitive" {  
+"16206" [label = <(METHOD,IsPrimitive)> ]
+"16209" [label = <(METHOD_RETURN,ANY)> ]
+  "16206" -> "16209" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/505-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/505-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/505-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/505-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "IsPrimitive" {  
-"16214" [label = <(METHOD,IsPrimitive)> ]
-"16217" [label = <(METHOD_RETURN,ANY)> ]
-  "16214" -> "16217" 
+digraph "PrettyDescriptor" {  
+"16210" [label = <(METHOD,PrettyDescriptor)> ]
+"16213" [label = <(METHOD_RETURN,ANY)> ]
+  "16210" -> "16213" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/506-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/506-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/506-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/506-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyDescriptor" {  
-"16218" [label = <(METHOD,PrettyDescriptor)> ]
-"16221" [label = <(METHOD_RETURN,ANY)> ]
-  "16218" -> "16221" 
+digraph "FindArrayClass" {  
+"16214" [label = <(METHOD,FindArrayClass)> ]
+"16219" [label = <(METHOD_RETURN,ANY)> ]
+  "16214" -> "16219" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/507-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/507-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/507-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/507-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "FindArrayClass" {  
-"16222" [label = <(METHOD,FindArrayClass)> ]
-"16227" [label = <(METHOD_RETURN,ANY)> ]
-  "16222" -> "16227" 
+digraph "::Alloc" {  
+"16220" [label = <(METHOD,::Alloc)> ]
+"16226" [label = <(METHOD_RETURN,ANY)> ]
+  "16220" -> "16226" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/508-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/508-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/508-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/508-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "::Alloc" {  
-"16228" [label = <(METHOD,::Alloc)> ]
-"16234" [label = <(METHOD_RETURN,ANY)> ]
-  "16228" -> "16234" 
+digraph "GetComponentType" {  
+"16227" [label = <(METHOD,GetComponentType)> ]
+"16230" [label = <(METHOD_RETURN,ANY)> ]
+  "16227" -> "16230" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/509-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/509-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/509-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/509-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetComponentType" {  
-"16235" [label = <(METHOD,GetComponentType)> ]
-"16238" [label = <(METHOD_RETURN,ANY)> ]
-  "16235" -> "16238" 
+digraph "mirror::Class::PrettyDescriptor" {  
+"16231" [label = <(METHOD,mirror::Class::PrettyDescriptor)> ]
+"16235" [label = <(METHOD_RETURN,ANY)> ]
+  "16231" -> "16235" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/51-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/51-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/51-cfg.dot	2023-06-07 19:34:35.067389623 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/51-cfg.dot	2023-06-07 19:34:41.577389023 +0330
@@ -1,24 +1,24 @@
 digraph "DeleteLocalRef" {  
-"1885" [label = <(soa,soa(env))<SUB>763</SUB>> ]
-"1888" [label = <(&lt;operator&gt;.assignment,* ext_env = down_cast&lt;JNIEnvExt*&gt;(env))<SUB>764</SUB>> ]
-"1879" [label = <(&lt;operator&gt;.equals,obj == nullptr)<SUB>757</SUB>> ]
-"1890" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>764</SUB>> ]
-"1893" [label = <(&lt;operator&gt;.logicalNot,!ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>765</SUB>> ]
-"1883" [label = <(RETURN,return;,return;)<SUB>758</SUB>> ]
-"1894" [label = <(Remove,ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>765</SUB>> ]
-"1905" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;\012 &lt;&lt; &quot;failed to find entry&quot;)<SUB>771</SUB>> ]
-"1895" [label = <(&lt;operator&gt;.fieldAccess,ext_env-&gt;locals_.Remove)<SUB>765</SUB>> ]
-"1900" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;local_ref_cookie_)<SUB>765</SUB>> ]
-"1906" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;)<SUB>771</SUB>> ]
-"1896" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;locals_)<SUB>765</SUB>> ]
-"1899" [label = <(FIELD_IDENTIFIER,Remove,Remove)<SUB>765</SUB>> ]
-"1902" [label = <(FIELD_IDENTIFIER,local_ref_cookie_,local_ref_cookie_)<SUB>765</SUB>> ]
-"1907" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj)<SUB>771</SUB>> ]
-"1898" [label = <(FIELD_IDENTIFIER,locals_,locals_)<SUB>765</SUB>> ]
-"1908" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot;)<SUB>771</SUB>> ]
-"1909" [label = <(LOG,LOG(WARNING))<SUB>771</SUB>> ]
-"1874" [label = <(METHOD,DeleteLocalRef)<SUB>756</SUB>> ]
-"1915" [label = <(METHOD_RETURN,void)<SUB>756</SUB>> ]
+"1885" [label = <(soa,soa(env))<SUB>762</SUB>> ]
+"1888" [label = <(&lt;operator&gt;.assignment,* ext_env = down_cast&lt;JNIEnvExt*&gt;(env))<SUB>763</SUB>> ]
+"1879" [label = <(&lt;operator&gt;.equals,obj == nullptr)<SUB>756</SUB>> ]
+"1890" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>763</SUB>> ]
+"1893" [label = <(&lt;operator&gt;.logicalNot,!ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>764</SUB>> ]
+"1883" [label = <(RETURN,return;,return;)<SUB>757</SUB>> ]
+"1894" [label = <(Remove,ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>764</SUB>> ]
+"1905" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;\012 &lt;&lt; &quot;failed to find entry&quot;)<SUB>770</SUB>> ]
+"1895" [label = <(&lt;operator&gt;.fieldAccess,ext_env-&gt;locals_.Remove)<SUB>764</SUB>> ]
+"1900" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;local_ref_cookie_)<SUB>764</SUB>> ]
+"1906" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;)<SUB>770</SUB>> ]
+"1896" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;locals_)<SUB>764</SUB>> ]
+"1899" [label = <(FIELD_IDENTIFIER,Remove,Remove)<SUB>764</SUB>> ]
+"1902" [label = <(FIELD_IDENTIFIER,local_ref_cookie_,local_ref_cookie_)<SUB>764</SUB>> ]
+"1907" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj)<SUB>770</SUB>> ]
+"1898" [label = <(FIELD_IDENTIFIER,locals_,locals_)<SUB>764</SUB>> ]
+"1908" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot;)<SUB>770</SUB>> ]
+"1909" [label = <(LOG,LOG(WARNING))<SUB>770</SUB>> ]
+"1874" [label = <(METHOD,DeleteLocalRef)<SUB>755</SUB>> ]
+"1915" [label = <(METHOD_RETURN,void)<SUB>755</SUB>> ]
   "1885" -> "1890" 
   "1888" -> "1898" 
   "1879" -> "1883" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/510-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/510-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/510-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/510-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::Class::PrettyDescriptor" {  
-"16239" [label = <(METHOD,mirror::Class::PrettyDescriptor)> ]
-"16243" [label = <(METHOD_RETURN,ANY)> ]
-  "16239" -> "16243" 
+digraph "NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;" {  
+"16236" [label = <(METHOD,NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;)> ]
+"16240" [label = <(METHOD_RETURN,ANY)> ]
+  "16236" -> "16240" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/511-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/511-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/511-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/511-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;" {  
-"16244" [label = <(METHOD,NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;)> ]
-"16248" [label = <(METHOD_RETURN,ANY)> ]
-  "16244" -> "16248" 
+digraph "IsPrimitiveArray" {  
+"16241" [label = <(METHOD,IsPrimitiveArray)> ]
+"16244" [label = <(METHOD_RETURN,ANY)> ]
+  "16241" -> "16244" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/512-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/512-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/512-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/512-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "IsPrimitiveArray" {  
-"16249" [label = <(METHOD,IsPrimitiveArray)> ]
-"16252" [label = <(METHOD_RETURN,ANY)> ]
-  "16249" -> "16252" 
+digraph "GetRawData" {  
+"16245" [label = <(METHOD,GetRawData)> ]
+"16250" [label = <(METHOD_RETURN,ANY)> ]
+  "16245" -> "16250" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/513-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/513-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/513-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/513-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetRawData" {  
-"16253" [label = <(METHOD,GetRawData)> ]
-"16258" [label = <(METHOD_RETURN,ANY)> ]
-  "16253" -> "16258" 
+digraph "GetComponentSize" {  
+"16251" [label = <(METHOD,GetComponentSize)> ]
+"16254" [label = <(METHOD_RETURN,ANY)> ]
+  "16251" -> "16254" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/514-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/514-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/514-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/514-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetComponentSize" {  
-"16259" [label = <(METHOD,GetComponentSize)> ]
-"16262" [label = <(METHOD_RETURN,ANY)> ]
-  "16259" -> "16262" 
+digraph "GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16255" [label = <(METHOD,GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+"16260" [label = <(METHOD_RETURN,ANY)> ]
+  "16255" -> "16260" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/515-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/515-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/515-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/515-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16263" [label = <(METHOD,GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
-"16268" [label = <(METHOD_RETURN,ANY)> ]
-  "16263" -> "16268" 
+digraph "GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16261" [label = <(METHOD,GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+"16266" [label = <(METHOD_RETURN,ANY)> ]
+  "16261" -> "16266" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/516-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/516-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/516-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/516-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16269" [label = <(METHOD,GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
-"16274" [label = <(METHOD_RETURN,ANY)> ]
-  "16269" -> "16274" 
+digraph "GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16267" [label = <(METHOD,GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+"16272" [label = <(METHOD_RETURN,ANY)> ]
+  "16267" -> "16272" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/517-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/517-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/517-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/517-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16275" [label = <(METHOD,GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
-"16280" [label = <(METHOD_RETURN,ANY)> ]
-  "16275" -> "16280" 
+digraph "GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16273" [label = <(METHOD,GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+"16278" [label = <(METHOD_RETURN,ANY)> ]
+  "16273" -> "16278" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/518-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/518-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/518-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/518-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16281" [label = <(METHOD,GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
-"16286" [label = <(METHOD_RETURN,ANY)> ]
-  "16281" -> "16286" 
+digraph "GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16279" [label = <(METHOD,GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+"16284" [label = <(METHOD_RETURN,ANY)> ]
+  "16279" -> "16284" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/519-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/519-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/519-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/519-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16287" [label = <(METHOD,GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
-"16292" [label = <(METHOD_RETURN,ANY)> ]
-  "16287" -> "16292" 
+digraph "GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16285" [label = <(METHOD,GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+"16290" [label = <(METHOD_RETURN,ANY)> ]
+  "16285" -> "16290" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/52-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/52-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/52-cfg.dot	2023-06-07 19:34:35.067389623 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/52-cfg.dot	2023-06-07 19:34:41.587389020 +0330
@@ -1,24 +1,24 @@
 digraph "IsSameObject" {  
-"1923" [label = <(&lt;operator&gt;.equals,obj1 == obj2)<SUB>777</SUB>> ]
-"1927" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>778</SUB>> ]
-"1932" [label = <(soa,soa(env))<SUB>780</SUB>> ]
-"1934" [label = <(RETURN,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;)<SUB>781</SUB>> ]
-"1935" [label = <(&lt;operator&gt;.conditional,(soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE)<SUB>781</SUB>> ]
-"1936" [label = <(&lt;operator&gt;.equals,soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>781</SUB>> ]
-"1937" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj1))<SUB>781</SUB>> ]
-"1946" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>781</SUB>> ]
-"1938" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>781</SUB>> ]
-"1947" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>781</SUB>> ]
-"1939" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>781</SUB>> ]
-"1942" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>781</SUB>> ]
-"1948" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>781</SUB>> ]
-"1951" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>781</SUB>> ]
-"1941" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>781</SUB>> ]
-"1944" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>781</SUB>> ]
-"1950" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>781</SUB>> ]
-"1953" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>781</SUB>> ]
-"1917" [label = <(METHOD,IsSameObject)<SUB>776</SUB>> ]
-"1957" [label = <(METHOD_RETURN,jboolean)<SUB>776</SUB>> ]
+"1923" [label = <(&lt;operator&gt;.equals,obj1 == obj2)<SUB>776</SUB>> ]
+"1927" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>777</SUB>> ]
+"1932" [label = <(soa,soa(env))<SUB>779</SUB>> ]
+"1934" [label = <(RETURN,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;)<SUB>780</SUB>> ]
+"1935" [label = <(&lt;operator&gt;.conditional,(soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE)<SUB>780</SUB>> ]
+"1936" [label = <(&lt;operator&gt;.equals,soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>780</SUB>> ]
+"1937" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj1))<SUB>780</SUB>> ]
+"1946" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>780</SUB>> ]
+"1938" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>780</SUB>> ]
+"1947" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>780</SUB>> ]
+"1939" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>780</SUB>> ]
+"1942" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>780</SUB>> ]
+"1948" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>780</SUB>> ]
+"1951" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>780</SUB>> ]
+"1941" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>780</SUB>> ]
+"1944" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>780</SUB>> ]
+"1950" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>780</SUB>> ]
+"1953" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>780</SUB>> ]
+"1917" [label = <(METHOD,IsSameObject)<SUB>775</SUB>> ]
+"1957" [label = <(METHOD_RETURN,jboolean)<SUB>775</SUB>> ]
   "1923" -> "1927" 
   "1923" -> "1932" 
   "1927" -> "1957" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/520-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/520-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/520-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/520-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16293" [label = <(METHOD,GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
-"16298" [label = <(METHOD_RETURN,ANY)> ]
-  "16293" -> "16298" 
+digraph "GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16291" [label = <(METHOD,GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+"16296" [label = <(METHOD_RETURN,ANY)> ]
+  "16291" -> "16296" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/521-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/521-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/521-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/521-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16299" [label = <(METHOD,GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
-"16304" [label = <(METHOD_RETURN,ANY)> ]
-  "16299" -> "16304" 
+digraph "GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16297" [label = <(METHOD,GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+"16302" [label = <(METHOD_RETURN,ANY)> ]
+  "16297" -> "16302" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/522-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/522-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/522-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/522-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16305" [label = <(METHOD,GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
-"16310" [label = <(METHOD_RETURN,ANY)> ]
-  "16305" -> "16310" 
+digraph "ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16303" [label = <(METHOD,ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+"16309" [label = <(METHOD_RETURN,ANY)> ]
+  "16303" -> "16309" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/523-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/523-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/523-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/523-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16311" [label = <(METHOD,ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
-"16317" [label = <(METHOD_RETURN,ANY)> ]
-  "16311" -> "16317" 
+digraph "ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16310" [label = <(METHOD,ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+"16316" [label = <(METHOD_RETURN,ANY)> ]
+  "16310" -> "16316" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/524-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/524-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/524-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/524-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16318" [label = <(METHOD,ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
-"16324" [label = <(METHOD_RETURN,ANY)> ]
-  "16318" -> "16324" 
+digraph "ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16317" [label = <(METHOD,ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+"16323" [label = <(METHOD_RETURN,ANY)> ]
+  "16317" -> "16323" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/525-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/525-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/525-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/525-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16325" [label = <(METHOD,ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
-"16331" [label = <(METHOD_RETURN,ANY)> ]
-  "16325" -> "16331" 
+digraph "ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16324" [label = <(METHOD,ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+"16330" [label = <(METHOD_RETURN,ANY)> ]
+  "16324" -> "16330" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/526-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/526-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/526-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/526-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16332" [label = <(METHOD,ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
-"16338" [label = <(METHOD_RETURN,ANY)> ]
-  "16332" -> "16338" 
+digraph "ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16331" [label = <(METHOD,ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+"16337" [label = <(METHOD_RETURN,ANY)> ]
+  "16331" -> "16337" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/527-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/527-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/527-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/527-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16339" [label = <(METHOD,ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
-"16345" [label = <(METHOD_RETURN,ANY)> ]
-  "16339" -> "16345" 
+digraph "ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16338" [label = <(METHOD,ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+"16344" [label = <(METHOD_RETURN,ANY)> ]
+  "16338" -> "16344" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/528-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/528-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/528-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/528-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16346" [label = <(METHOD,ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
-"16352" [label = <(METHOD_RETURN,ANY)> ]
-  "16346" -> "16352" 
+digraph "ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16345" [label = <(METHOD,ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+"16351" [label = <(METHOD_RETURN,ANY)> ]
+  "16345" -> "16351" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/529-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/529-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/529-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/529-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16353" [label = <(METHOD,ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
-"16359" [label = <(METHOD_RETURN,ANY)> ]
-  "16353" -> "16359" 
+digraph "ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16352" [label = <(METHOD,ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+"16358" [label = <(METHOD_RETURN,ANY)> ]
+  "16352" -> "16358" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/53-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/53-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/53-cfg.dot	2023-06-07 19:34:35.067389623 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/53-cfg.dot	2023-06-07 19:34:41.587389020 +0330
@@ -1,71 +1,71 @@
 digraph "AllocObject" {  
-"1963" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>787</SUB>> ]
-"1982" [label = <(soa,soa(env))<SUB>788</SUB>> ]
-"1984" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>789</SUB>> ]
-"2054" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));)<SUB>798</SUB>> ]
-"1985" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>789</SUB>> ]
-"1992" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>789</SUB>> ]
-"2007" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>790</SUB>> ]
-"2014" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>793</SUB>> ]
-"2055" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self())))<SUB>798</SUB>> ]
-"1986" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>789</SUB>> ]
-"1993" [label = <(Self,soa.Self())<SUB>789</SUB>> ]
-"1997" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>789</SUB>> ]
-"2011" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>791</SUB>> ]
-"2015" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>793</SUB>> ]
-"2020" [label = <(&lt;operator&gt;.assignment,allocator_type = Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>794</SUB>> ]
-"2032" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));)<SUB>795</SUB>> ]
-"2056" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>798</SUB>> ]
-"2061" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>798</SUB>> ]
-"1967" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>787</SUB>> ]
-"1988" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>789</SUB>> ]
-"1994" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>789</SUB>> ]
-"1998" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>789</SUB>> ]
-"2017" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>793</SUB>> ]
-"2022" [label = <(GetCurrentAllocator,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>794</SUB>> ]
-"2033" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type)))<SUB>795</SUB>> ]
-"2057" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>798</SUB>> ]
-"2062" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>798</SUB>> ]
-"2065" [label = <(Self,soa.Self())<SUB>798</SUB>> ]
-"1968" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>787</SUB>> ]
-"1972" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>787</SUB>> ]
-"1979" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>787</SUB>> ]
-"1990" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>789</SUB>> ]
-"1996" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>789</SUB>> ]
-"1999" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>789</SUB>> ]
-"2002" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>789</SUB>> ]
-"2023" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator)<SUB>794</SUB>> ]
-"2034" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>795</SUB>> ]
-"2039" [label = <(&lt;operator&gt;.greaterThan,mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type))<SUB>795</SUB>> ]
-"2059" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>798</SUB>> ]
-"2064" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>798</SUB>> ]
-"2066" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>798</SUB>> ]
-"1973" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>787</SUB>> ]
-"2001" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>789</SUB>> ]
-"2004" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>789</SUB>> ]
-"2024" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>794</SUB>> ]
-"2031" [label = <(FIELD_IDENTIFIER,GetCurrentAllocator,GetCurrentAllocator)<SUB>794</SUB>> ]
-"2035" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>795</SUB>> ]
-"2040" [label = <(&lt;operator&gt;.lessThan,mirror::String::AllocEmptyString&lt;true)<SUB>795</SUB>> ]
-"2047" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(),\012                                                                              allocator_type))<SUB>795</SUB>> ]
-"2068" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>798</SUB>> ]
-"1974" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>787</SUB>> ]
-"1976" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>787</SUB>> ]
-"2025" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>794</SUB>> ]
-"2037" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>795</SUB>> ]
-"2041" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocEmptyString)<SUB>795</SUB>> ]
-"2048" [label = <(&lt;operator&gt;.expressionList,soa.Self(),\012                                                                              allocator_type)<SUB>795</SUB>> ]
-"2026" [label = <(Runtime::Current,Runtime::Current())<SUB>794</SUB>> ]
-"2030" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>794</SUB>> ]
-"2042" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>795</SUB>> ]
-"2045" [label = <(FIELD_IDENTIFIER,AllocEmptyString,AllocEmptyString)<SUB>795</SUB>> ]
-"2049" [label = <(Self,soa.Self())<SUB>795</SUB>> ]
-"2027" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>794</SUB>> ]
-"2050" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>795</SUB>> ]
-"2029" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>794</SUB>> ]
-"2052" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>795</SUB>> ]
-"1959" [label = <(METHOD,AllocObject)<SUB>786</SUB>> ]
-"2069" [label = <(METHOD_RETURN,jobject)<SUB>786</SUB>> ]
+"1963" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>786</SUB>> ]
+"1982" [label = <(soa,soa(env))<SUB>787</SUB>> ]
+"1984" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>788</SUB>> ]
+"2054" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));)<SUB>797</SUB>> ]
+"1985" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>788</SUB>> ]
+"1992" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>788</SUB>> ]
+"2007" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>789</SUB>> ]
+"2014" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>792</SUB>> ]
+"2055" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self())))<SUB>797</SUB>> ]
+"1986" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>788</SUB>> ]
+"1993" [label = <(Self,soa.Self())<SUB>788</SUB>> ]
+"1997" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>788</SUB>> ]
+"2011" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>790</SUB>> ]
+"2015" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>792</SUB>> ]
+"2020" [label = <(&lt;operator&gt;.assignment,allocator_type = Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>793</SUB>> ]
+"2032" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));)<SUB>794</SUB>> ]
+"2056" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>797</SUB>> ]
+"2061" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>797</SUB>> ]
+"1967" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>786</SUB>> ]
+"1988" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>788</SUB>> ]
+"1994" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>788</SUB>> ]
+"1998" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>788</SUB>> ]
+"2017" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>792</SUB>> ]
+"2022" [label = <(GetCurrentAllocator,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>793</SUB>> ]
+"2033" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type)))<SUB>794</SUB>> ]
+"2057" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>797</SUB>> ]
+"2062" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>797</SUB>> ]
+"2065" [label = <(Self,soa.Self())<SUB>797</SUB>> ]
+"1968" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>786</SUB>> ]
+"1972" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>786</SUB>> ]
+"1979" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>786</SUB>> ]
+"1990" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>788</SUB>> ]
+"1996" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>788</SUB>> ]
+"1999" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>788</SUB>> ]
+"2002" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>788</SUB>> ]
+"2023" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator)<SUB>793</SUB>> ]
+"2034" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>794</SUB>> ]
+"2039" [label = <(&lt;operator&gt;.greaterThan,mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type))<SUB>794</SUB>> ]
+"2059" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>797</SUB>> ]
+"2064" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>797</SUB>> ]
+"2066" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>797</SUB>> ]
+"1973" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>786</SUB>> ]
+"2001" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>788</SUB>> ]
+"2004" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>788</SUB>> ]
+"2024" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>793</SUB>> ]
+"2031" [label = <(FIELD_IDENTIFIER,GetCurrentAllocator,GetCurrentAllocator)<SUB>793</SUB>> ]
+"2035" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>794</SUB>> ]
+"2040" [label = <(&lt;operator&gt;.lessThan,mirror::String::AllocEmptyString&lt;true)<SUB>794</SUB>> ]
+"2047" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(),\012                                                                              allocator_type))<SUB>794</SUB>> ]
+"2068" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>797</SUB>> ]
+"1974" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>786</SUB>> ]
+"1976" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>786</SUB>> ]
+"2025" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>793</SUB>> ]
+"2037" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>794</SUB>> ]
+"2041" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocEmptyString)<SUB>794</SUB>> ]
+"2048" [label = <(&lt;operator&gt;.expressionList,soa.Self(),\012                                                                              allocator_type)<SUB>794</SUB>> ]
+"2026" [label = <(Runtime::Current,Runtime::Current())<SUB>793</SUB>> ]
+"2030" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>793</SUB>> ]
+"2042" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>794</SUB>> ]
+"2045" [label = <(FIELD_IDENTIFIER,AllocEmptyString,AllocEmptyString)<SUB>794</SUB>> ]
+"2049" [label = <(Self,soa.Self())<SUB>794</SUB>> ]
+"2027" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>793</SUB>> ]
+"2050" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>794</SUB>> ]
+"2029" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>793</SUB>> ]
+"2052" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>794</SUB>> ]
+"1959" [label = <(METHOD,AllocObject)<SUB>785</SUB>> ]
+"2069" [label = <(METHOD_RETURN,jobject)<SUB>785</SUB>> ]
   "1963" -> "1968" 
   "1963" -> "1982" 
   "1982" -> "1990" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/530-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/530-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/530-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/530-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16360" [label = <(METHOD,ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16359" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
 "16366" [label = <(METHOD_RETURN,ANY)> ]
-  "16360" -> "16366" 
+  "16359" -> "16366" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/531-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/531-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/531-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/531-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16367" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16367" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
 "16374" [label = <(METHOD_RETURN,ANY)> ]
   "16367" -> "16374" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/532-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/532-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/532-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/532-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16375" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16375" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
 "16382" [label = <(METHOD_RETURN,ANY)> ]
   "16375" -> "16382" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/533-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/533-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/533-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/533-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16383" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16383" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
 "16390" [label = <(METHOD_RETURN,ANY)> ]
   "16383" -> "16390" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/534-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/534-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/534-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/534-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16391" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16391" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
 "16398" [label = <(METHOD_RETURN,ANY)> ]
   "16391" -> "16398" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/535-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/535-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/535-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/535-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16399" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16399" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
 "16406" [label = <(METHOD_RETURN,ANY)> ]
   "16399" -> "16406" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/536-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/536-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/536-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/536-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16407" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16407" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
 "16414" [label = <(METHOD_RETURN,ANY)> ]
   "16407" -> "16414" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/537-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/537-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/537-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/537-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16415" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16415" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
 "16422" [label = <(METHOD_RETURN,ANY)> ]
   "16415" -> "16422" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/538-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/538-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/538-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/538-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16423" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16423" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
 "16430" [label = <(METHOD_RETURN,ANY)> ]
   "16423" -> "16430" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/539-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/539-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/539-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/539-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16431" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16431" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
 "16438" [label = <(METHOD_RETURN,ANY)> ]
   "16431" -> "16438" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/54-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/54-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/54-cfg.dot	2023-06-07 19:34:35.067389623 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/54-cfg.dot	2023-06-07 19:34:41.587389020 +0330
@@ -1,28 +1,28 @@
 digraph "NewObject" {  
-"2077" [label = <(va_start,va_start(args, mid))<SUB>803</SUB>> ]
-"2081" [label = <(free_args_later,free_args_later(&amp;args))<SUB>804</SUB>> ]
-"2084" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>805</SUB>> ]
-"2102" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>806</SUB>> ]
-"2121" [label = <(&lt;operator&gt;.assignment,result = NewObjectV(env, java_class, mid, args))<SUB>807</SUB>> ]
-"2128" [label = <(RETURN,return result;,return result;)<SUB>808</SUB>> ]
-"2082" [label = <(&lt;operator&gt;.addressOf,&amp;args)<SUB>804</SUB>> ]
-"2123" [label = <(NewObjectV,NewObjectV(env, java_class, mid, args))<SUB>807</SUB>> ]
-"2088" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>805</SUB>> ]
-"2106" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>806</SUB>> ]
-"2089" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>805</SUB>> ]
-"2093" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>805</SUB>> ]
-"2100" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>805</SUB>> ]
-"2107" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>806</SUB>> ]
-"2111" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>806</SUB>> ]
-"2118" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>806</SUB>> ]
-"2094" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>805</SUB>> ]
-"2112" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>806</SUB>> ]
-"2095" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>805</SUB>> ]
-"2097" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>805</SUB>> ]
-"2113" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>806</SUB>> ]
-"2115" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>806</SUB>> ]
-"2071" [label = <(METHOD,NewObject)<SUB>801</SUB>> ]
-"2130" [label = <(METHOD_RETURN,jobject)<SUB>801</SUB>> ]
+"2077" [label = <(va_start,va_start(args, mid))<SUB>802</SUB>> ]
+"2081" [label = <(free_args_later,free_args_later(&amp;args))<SUB>803</SUB>> ]
+"2084" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>804</SUB>> ]
+"2102" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>805</SUB>> ]
+"2121" [label = <(&lt;operator&gt;.assignment,result = NewObjectV(env, java_class, mid, args))<SUB>806</SUB>> ]
+"2128" [label = <(RETURN,return result;,return result;)<SUB>807</SUB>> ]
+"2082" [label = <(&lt;operator&gt;.addressOf,&amp;args)<SUB>803</SUB>> ]
+"2123" [label = <(NewObjectV,NewObjectV(env, java_class, mid, args))<SUB>806</SUB>> ]
+"2088" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>804</SUB>> ]
+"2106" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>805</SUB>> ]
+"2089" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>804</SUB>> ]
+"2093" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>804</SUB>> ]
+"2100" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>804</SUB>> ]
+"2107" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>805</SUB>> ]
+"2111" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>805</SUB>> ]
+"2118" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>805</SUB>> ]
+"2094" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>804</SUB>> ]
+"2112" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>805</SUB>> ]
+"2095" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>804</SUB>> ]
+"2097" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>804</SUB>> ]
+"2113" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>805</SUB>> ]
+"2115" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>805</SUB>> ]
+"2071" [label = <(METHOD,NewObject)<SUB>800</SUB>> ]
+"2130" [label = <(METHOD_RETURN,jobject)<SUB>800</SUB>> ]
   "2077" -> "2082" 
   "2081" -> "2084" 
   "2084" -> "2089" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/540-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/540-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/540-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/540-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16439" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16439" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
 "16446" [label = <(METHOD_RETURN,ANY)> ]
   "16439" -> "16446" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/541-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/541-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/541-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/541-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16447" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16447" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
 "16454" [label = <(METHOD_RETURN,ANY)> ]
   "16447" -> "16454" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/542-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/542-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/542-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/542-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16455" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16455" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
 "16462" [label = <(METHOD_RETURN,ANY)> ]
   "16455" -> "16462" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/543-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/543-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/543-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/543-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16463" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16463" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
 "16470" [label = <(METHOD_RETURN,ANY)> ]
   "16463" -> "16470" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/544-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/544-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/544-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/544-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16471" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16471" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
 "16478" [label = <(METHOD_RETURN,ANY)> ]
   "16471" -> "16478" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/545-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/545-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/545-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/545-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16479" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16479" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
 "16486" [label = <(METHOD_RETURN,ANY)> ]
   "16479" -> "16486" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/546-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/546-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/546-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/546-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16487" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
-"16494" [label = <(METHOD_RETURN,ANY)> ]
-  "16487" -> "16494" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME" {  
+"16487" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME)<SUB>503</SUB>> ]
+"16492" [label = <(METHOD_RETURN,ANY)> ]
+  "16487" -> "16492" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/547-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/547-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/547-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/547-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME" {  
-"16495" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME)<SUB>504</SUB>> ]
-"16500" [label = <(METHOD_RETURN,ANY)> ]
-  "16495" -> "16500" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR)" {  
+"16493" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))> ]
+"16498" [label = <(METHOD_RETURN,ANY)> ]
+  "16493" -> "16498" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/548-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/548-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/548-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/548-cfg.dot	2023-06-07 19:34:41.767389005 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR)" {  
-"16501" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))> ]
-"16506" [label = <(METHOD_RETURN,ANY)> ]
-  "16501" -> "16506" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR)" {  
+"16499" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))> ]
+"16504" [label = <(METHOD_RETURN,ANY)> ]
+  "16499" -> "16504" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/549-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/549-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/549-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/549-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR)" {  
-"16507" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))> ]
-"16512" [label = <(METHOD_RETURN,ANY)> ]
-  "16507" -> "16512" 
+digraph "IsCheckJniEnabled" {  
+"16505" [label = <(METHOD,IsCheckJniEnabled)> ]
+"16508" [label = <(METHOD_RETURN,ANY)> ]
+  "16505" -> "16508" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/55-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/55-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/55-cfg.dot	2023-06-07 19:34:35.067389623 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/55-cfg.dot	2023-06-07 19:34:41.587389020 +0330
@@ -1,84 +1,84 @@
 digraph "NewObjectV" {  
-"2138" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>812</SUB>> ]
-"2156" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>813</SUB>> ]
-"2175" [label = <(soa,soa(env))<SUB>814</SUB>> ]
-"2177" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>815</SUB>> ]
-"2236" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>826</SUB>> ]
-"2260" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result))<SUB>830</SUB>> ]
-"2269" [label = <(CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV(env, local_result, java_class, mid, args))<SUB>831</SUB>> ]
-"2286" [label = <(RETURN,return local_result;,return local_result;)<SUB>835</SUB>> ]
-"2178" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>815</SUB>> ]
-"2185" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>815</SUB>> ]
-"2200" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>817</SUB>> ]
-"2207" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>820</SUB>> ]
-"2237" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>826</SUB>> ]
-"2244" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>826</SUB>> ]
-"2253" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>827</SUB>> ]
-"2262" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result))<SUB>830</SUB>> ]
-"2276" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>832</SUB>> ]
-"2179" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>815</SUB>> ]
-"2186" [label = <(Self,soa.Self())<SUB>815</SUB>> ]
-"2190" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>816</SUB>> ]
-"2204" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>818</SUB>> ]
-"2208" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>820</SUB>> ]
-"2213" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>822</SUB>> ]
-"2228" [label = <(RETURN,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>824</SUB>> ]
-"2238" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>826</SUB>> ]
-"2245" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>826</SUB>> ]
-"2248" [label = <(Self,soa.Self())<SUB>826</SUB>> ]
-"2257" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>828</SUB>> ]
-"2263" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>830</SUB>> ]
-"2277" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>832</SUB>> ]
-"2284" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>833</SUB>> ]
-"2142" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>812</SUB>> ]
-"2160" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>813</SUB>> ]
-"2181" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>815</SUB>> ]
-"2187" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>815</SUB>> ]
-"2191" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>816</SUB>> ]
-"2210" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>820</SUB>> ]
-"2215" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>822</SUB>> ]
-"2229" [label = <(CallStaticObjectMethodV,CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>824</SUB>> ]
-"2240" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>826</SUB>> ]
-"2247" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>826</SUB>> ]
-"2249" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>826</SUB>> ]
-"2264" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>830</SUB>> ]
-"2278" [label = <(Self,soa.Self())<SUB>832</SUB>> ]
-"2282" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>832</SUB>> ]
-"2143" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>812</SUB>> ]
-"2147" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>812</SUB>> ]
-"2154" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>812</SUB>> ]
-"2161" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>813</SUB>> ]
-"2165" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>813</SUB>> ]
-"2172" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>813</SUB>> ]
-"2183" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>815</SUB>> ]
-"2189" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>815</SUB>> ]
-"2192" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>816</SUB>> ]
-"2195" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>816</SUB>> ]
-"2216" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>822</SUB>> ]
-"2219" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>823</SUB>> ]
-"2231" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>824</SUB>> ]
-"2242" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>826</SUB>> ]
-"2251" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>826</SUB>> ]
-"2266" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>830</SUB>> ]
-"2279" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>832</SUB>> ]
-"2148" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>812</SUB>> ]
-"2166" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>813</SUB>> ]
-"2194" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>816</SUB>> ]
-"2197" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>816</SUB>> ]
-"2218" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>822</SUB>> ]
-"2220" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>823</SUB>> ]
-"2223" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>823</SUB>> ]
-"2233" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>824</SUB>> ]
-"2281" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>832</SUB>> ]
-"2149" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>812</SUB>> ]
-"2151" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>812</SUB>> ]
-"2167" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>813</SUB>> ]
-"2169" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>813</SUB>> ]
-"2222" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>823</SUB>> ]
-"2224" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>823</SUB>> ]
-"2226" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>823</SUB>> ]
-"2132" [label = <(METHOD,NewObjectV)<SUB>811</SUB>> ]
-"2288" [label = <(METHOD_RETURN,jobject)<SUB>811</SUB>> ]
+"2138" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>811</SUB>> ]
+"2156" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>812</SUB>> ]
+"2175" [label = <(soa,soa(env))<SUB>813</SUB>> ]
+"2177" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>814</SUB>> ]
+"2236" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>825</SUB>> ]
+"2260" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result))<SUB>829</SUB>> ]
+"2269" [label = <(CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV(env, local_result, java_class, mid, args))<SUB>830</SUB>> ]
+"2286" [label = <(RETURN,return local_result;,return local_result;)<SUB>834</SUB>> ]
+"2178" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>814</SUB>> ]
+"2185" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>814</SUB>> ]
+"2200" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>816</SUB>> ]
+"2207" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>819</SUB>> ]
+"2237" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>825</SUB>> ]
+"2244" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>825</SUB>> ]
+"2253" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>826</SUB>> ]
+"2262" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result))<SUB>829</SUB>> ]
+"2276" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>831</SUB>> ]
+"2179" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>814</SUB>> ]
+"2186" [label = <(Self,soa.Self())<SUB>814</SUB>> ]
+"2190" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>815</SUB>> ]
+"2204" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>817</SUB>> ]
+"2208" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>819</SUB>> ]
+"2213" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>821</SUB>> ]
+"2228" [label = <(RETURN,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>823</SUB>> ]
+"2238" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>825</SUB>> ]
+"2245" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>825</SUB>> ]
+"2248" [label = <(Self,soa.Self())<SUB>825</SUB>> ]
+"2257" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>827</SUB>> ]
+"2263" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>829</SUB>> ]
+"2277" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>831</SUB>> ]
+"2284" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>832</SUB>> ]
+"2142" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>811</SUB>> ]
+"2160" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>812</SUB>> ]
+"2181" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>814</SUB>> ]
+"2187" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>814</SUB>> ]
+"2191" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>815</SUB>> ]
+"2210" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>819</SUB>> ]
+"2215" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>821</SUB>> ]
+"2229" [label = <(CallStaticObjectMethodV,CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>823</SUB>> ]
+"2240" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>825</SUB>> ]
+"2247" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>825</SUB>> ]
+"2249" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>825</SUB>> ]
+"2264" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>829</SUB>> ]
+"2278" [label = <(Self,soa.Self())<SUB>831</SUB>> ]
+"2282" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>831</SUB>> ]
+"2143" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>811</SUB>> ]
+"2147" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>811</SUB>> ]
+"2154" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>811</SUB>> ]
+"2161" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>812</SUB>> ]
+"2165" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>812</SUB>> ]
+"2172" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>812</SUB>> ]
+"2183" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>814</SUB>> ]
+"2189" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>814</SUB>> ]
+"2192" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>815</SUB>> ]
+"2195" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>815</SUB>> ]
+"2216" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>821</SUB>> ]
+"2219" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>822</SUB>> ]
+"2231" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>823</SUB>> ]
+"2242" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>825</SUB>> ]
+"2251" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>825</SUB>> ]
+"2266" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>829</SUB>> ]
+"2279" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>831</SUB>> ]
+"2148" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>811</SUB>> ]
+"2166" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>812</SUB>> ]
+"2194" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>815</SUB>> ]
+"2197" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>815</SUB>> ]
+"2218" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>821</SUB>> ]
+"2220" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>822</SUB>> ]
+"2223" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>822</SUB>> ]
+"2233" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>823</SUB>> ]
+"2281" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>831</SUB>> ]
+"2149" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>811</SUB>> ]
+"2151" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>811</SUB>> ]
+"2167" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>812</SUB>> ]
+"2169" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>812</SUB>> ]
+"2222" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>822</SUB>> ]
+"2224" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>822</SUB>> ]
+"2226" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>822</SUB>> ]
+"2132" [label = <(METHOD,NewObjectV)<SUB>810</SUB>> ]
+"2288" [label = <(METHOD_RETURN,jobject)<SUB>810</SUB>> ]
   "2138" -> "2143" 
   "2138" -> "2156" 
   "2156" -> "2161" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/550-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/550-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/550-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/550-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "IsCheckJniEnabled" {  
-"16513" [label = <(METHOD,IsCheckJniEnabled)> ]
-"16516" [label = <(METHOD_RETURN,ANY)> ]
-  "16513" -> "16516" 
+digraph "DumpClass" {  
+"16509" [label = <(METHOD,DumpClass)> ]
+"16514" [label = <(METHOD_RETURN,ANY)> ]
+  "16509" -> "16514" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/551-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/551-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/551-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/551-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "DumpClass" {  
-"16517" [label = <(METHOD,DumpClass)> ]
-"16522" [label = <(METHOD_RETURN,ANY)> ]
-  "16517" -> "16522" 
+digraph "LOG_STREAM" {  
+"16515" [label = <(METHOD,LOG_STREAM)> ]
+"16518" [label = <(METHOD_RETURN,ANY)> ]
+  "16515" -> "16518" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/552-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/552-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/552-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/552-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "LOG_STREAM" {  
-"16523" [label = <(METHOD,LOG_STREAM)> ]
-"16526" [label = <(METHOD_RETURN,ANY)> ]
-  "16523" -> "16526" 
+digraph "ToModifiedUtf8" {  
+"16519" [label = <(METHOD,ToModifiedUtf8)> ]
+"16522" [label = <(METHOD_RETURN,ANY)> ]
+  "16519" -> "16522" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/553-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/553-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/553-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/553-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "ToModifiedUtf8" {  
-"16527" [label = <(METHOD,ToModifiedUtf8)> ]
-"16530" [label = <(METHOD_RETURN,ANY)> ]
-  "16527" -> "16530" 
+digraph "GetLocation" {  
+"16523" [label = <(METHOD,GetLocation)> ]
+"16526" [label = <(METHOD_RETURN,ANY)> ]
+  "16523" -> "16526" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/554-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/554-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/554-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/554-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "GetLocation" {  
-"16531" [label = <(METHOD,GetLocation)> ]
-"16534" [label = <(METHOD_RETURN,ANY)> ]
-  "16531" -> "16534" 
+digraph "GetDexCache" {  
+"16527" [label = <(METHOD,GetDexCache)> ]
+"16530" [label = <(METHOD_RETURN,ANY)> ]
+  "16527" -> "16530" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/555-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/555-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/555-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/555-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "GetDexCache" {  
-"16535" [label = <(METHOD,GetDexCache)> ]
-"16538" [label = <(METHOD_RETURN,ANY)> ]
-  "16535" -> "16538" 
+digraph "IsNative" {  
+"16531" [label = <(METHOD,IsNative)> ]
+"16534" [label = <(METHOD_RETURN,ANY)> ]
+  "16531" -> "16534" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/556-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/556-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/556-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/556-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "IsNative" {  
-"16539" [label = <(METHOD,IsNative)> ]
-"16542" [label = <(METHOD_RETURN,ANY)> ]
-  "16539" -> "16542" 
+digraph "VLOG" {  
+"16535" [label = <(METHOD,VLOG)> ]
+"16538" [label = <(METHOD_RETURN,ANY)> ]
+  "16535" -> "16538" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/557-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/557-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/557-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/557-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "VLOG" {  
-"16543" [label = <(METHOD,VLOG)> ]
-"16546" [label = <(METHOD_RETURN,ANY)> ]
-  "16543" -> "16546" 
+digraph "PrettyMethod" {  
+"16539" [label = <(METHOD,PrettyMethod)> ]
+"16542" [label = <(METHOD_RETURN,ANY)> ]
+  "16539" -> "16542" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/558-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/558-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/558-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/558-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyMethod" {  
-"16547" [label = <(METHOD,PrettyMethod)> ]
-"16550" [label = <(METHOD_RETURN,ANY)> ]
-  "16547" -> "16550" 
+digraph "RegisterNative" {  
+"16543" [label = <(METHOD,RegisterNative)> ]
+"16547" [label = <(METHOD_RETURN,ANY)> ]
+  "16543" -> "16547" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/559-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/559-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/559-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/559-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "RegisterNative" {  
-"16551" [label = <(METHOD,RegisterNative)> ]
-"16555" [label = <(METHOD_RETURN,ANY)> ]
-  "16551" -> "16555" 
+digraph "UNUSED" {  
+"16548" [label = <(METHOD,UNUSED)> ]
+"16551" [label = <(METHOD_RETURN,ANY)> ]
+  "16548" -> "16551" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/56-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/56-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/56-cfg.dot	2023-06-07 19:34:35.067389623 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/56-cfg.dot	2023-06-07 19:34:41.587389020 +0330
@@ -1,84 +1,84 @@
 digraph "NewObjectA" {  
-"2296" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>839</SUB>> ]
-"2314" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>840</SUB>> ]
-"2333" [label = <(soa,soa(env))<SUB>841</SUB>> ]
-"2335" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>842</SUB>> ]
-"2394" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>853</SUB>> ]
-"2418" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>857</SUB>> ]
-"2427" [label = <(CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA(env, local_result, java_class, mid, args))<SUB>858</SUB>> ]
-"2444" [label = <(RETURN,return local_result;,return local_result;)<SUB>862</SUB>> ]
-"2336" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>842</SUB>> ]
-"2343" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>842</SUB>> ]
-"2358" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>844</SUB>> ]
-"2365" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>847</SUB>> ]
-"2395" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>853</SUB>> ]
-"2402" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>853</SUB>> ]
-"2411" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>854</SUB>> ]
-"2420" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>857</SUB>> ]
-"2434" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>859</SUB>> ]
-"2337" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>842</SUB>> ]
-"2344" [label = <(Self,soa.Self())<SUB>842</SUB>> ]
-"2348" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>843</SUB>> ]
-"2362" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>845</SUB>> ]
-"2366" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>847</SUB>> ]
-"2371" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>849</SUB>> ]
-"2386" [label = <(RETURN,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>851</SUB>> ]
-"2396" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>853</SUB>> ]
-"2403" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>853</SUB>> ]
-"2406" [label = <(Self,soa.Self())<SUB>853</SUB>> ]
-"2415" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>855</SUB>> ]
-"2421" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>857</SUB>> ]
-"2435" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>859</SUB>> ]
-"2442" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>860</SUB>> ]
-"2300" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>839</SUB>> ]
-"2318" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>840</SUB>> ]
-"2339" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>842</SUB>> ]
-"2345" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>842</SUB>> ]
-"2349" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>843</SUB>> ]
-"2368" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>847</SUB>> ]
-"2373" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>849</SUB>> ]
-"2387" [label = <(CallStaticObjectMethodA,CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>851</SUB>> ]
-"2398" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>853</SUB>> ]
-"2405" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>853</SUB>> ]
-"2407" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>853</SUB>> ]
-"2422" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>857</SUB>> ]
-"2436" [label = <(Self,soa.Self())<SUB>859</SUB>> ]
-"2440" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>859</SUB>> ]
-"2301" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>839</SUB>> ]
-"2305" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>839</SUB>> ]
-"2312" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>839</SUB>> ]
-"2319" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>840</SUB>> ]
-"2323" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>840</SUB>> ]
-"2330" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>840</SUB>> ]
-"2341" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>842</SUB>> ]
-"2347" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>842</SUB>> ]
-"2350" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>843</SUB>> ]
-"2353" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>843</SUB>> ]
-"2374" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>849</SUB>> ]
-"2377" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>850</SUB>> ]
-"2389" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>851</SUB>> ]
-"2400" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>853</SUB>> ]
-"2409" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>853</SUB>> ]
-"2424" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>857</SUB>> ]
-"2437" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>859</SUB>> ]
-"2306" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>839</SUB>> ]
-"2324" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>840</SUB>> ]
-"2352" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>843</SUB>> ]
-"2355" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>843</SUB>> ]
-"2376" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>849</SUB>> ]
-"2378" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>850</SUB>> ]
-"2381" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>850</SUB>> ]
-"2391" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>851</SUB>> ]
-"2439" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>859</SUB>> ]
-"2307" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>839</SUB>> ]
-"2309" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>839</SUB>> ]
-"2325" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>840</SUB>> ]
-"2327" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>840</SUB>> ]
-"2380" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>850</SUB>> ]
-"2382" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>850</SUB>> ]
-"2384" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>850</SUB>> ]
-"2290" [label = <(METHOD,NewObjectA)<SUB>838</SUB>> ]
-"2446" [label = <(METHOD_RETURN,jobject)<SUB>838</SUB>> ]
+"2296" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>838</SUB>> ]
+"2314" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>839</SUB>> ]
+"2333" [label = <(soa,soa(env))<SUB>840</SUB>> ]
+"2335" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>841</SUB>> ]
+"2394" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>852</SUB>> ]
+"2418" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>856</SUB>> ]
+"2427" [label = <(CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA(env, local_result, java_class, mid, args))<SUB>857</SUB>> ]
+"2444" [label = <(RETURN,return local_result;,return local_result;)<SUB>861</SUB>> ]
+"2336" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>841</SUB>> ]
+"2343" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>841</SUB>> ]
+"2358" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>843</SUB>> ]
+"2365" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>846</SUB>> ]
+"2395" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>852</SUB>> ]
+"2402" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>852</SUB>> ]
+"2411" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>853</SUB>> ]
+"2420" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>856</SUB>> ]
+"2434" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>858</SUB>> ]
+"2337" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>841</SUB>> ]
+"2344" [label = <(Self,soa.Self())<SUB>841</SUB>> ]
+"2348" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>842</SUB>> ]
+"2362" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>844</SUB>> ]
+"2366" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>846</SUB>> ]
+"2371" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>848</SUB>> ]
+"2386" [label = <(RETURN,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>850</SUB>> ]
+"2396" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>852</SUB>> ]
+"2403" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>852</SUB>> ]
+"2406" [label = <(Self,soa.Self())<SUB>852</SUB>> ]
+"2415" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>854</SUB>> ]
+"2421" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>856</SUB>> ]
+"2435" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>858</SUB>> ]
+"2442" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>859</SUB>> ]
+"2300" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>838</SUB>> ]
+"2318" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>839</SUB>> ]
+"2339" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>841</SUB>> ]
+"2345" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>841</SUB>> ]
+"2349" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>842</SUB>> ]
+"2368" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>846</SUB>> ]
+"2373" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>848</SUB>> ]
+"2387" [label = <(CallStaticObjectMethodA,CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>850</SUB>> ]
+"2398" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>852</SUB>> ]
+"2405" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>852</SUB>> ]
+"2407" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>852</SUB>> ]
+"2422" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>856</SUB>> ]
+"2436" [label = <(Self,soa.Self())<SUB>858</SUB>> ]
+"2440" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>858</SUB>> ]
+"2301" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>838</SUB>> ]
+"2305" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>838</SUB>> ]
+"2312" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>838</SUB>> ]
+"2319" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>839</SUB>> ]
+"2323" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>839</SUB>> ]
+"2330" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>839</SUB>> ]
+"2341" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>841</SUB>> ]
+"2347" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>841</SUB>> ]
+"2350" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>842</SUB>> ]
+"2353" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>842</SUB>> ]
+"2374" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>848</SUB>> ]
+"2377" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>849</SUB>> ]
+"2389" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>850</SUB>> ]
+"2400" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>852</SUB>> ]
+"2409" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>852</SUB>> ]
+"2424" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>856</SUB>> ]
+"2437" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>858</SUB>> ]
+"2306" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>838</SUB>> ]
+"2324" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>839</SUB>> ]
+"2352" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>842</SUB>> ]
+"2355" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>842</SUB>> ]
+"2376" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>848</SUB>> ]
+"2378" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>849</SUB>> ]
+"2381" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>849</SUB>> ]
+"2391" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>850</SUB>> ]
+"2439" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>858</SUB>> ]
+"2307" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>838</SUB>> ]
+"2309" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>838</SUB>> ]
+"2325" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>839</SUB>> ]
+"2327" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>839</SUB>> ]
+"2380" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>849</SUB>> ]
+"2382" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>849</SUB>> ]
+"2384" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>849</SUB>> ]
+"2290" [label = <(METHOD,NewObjectA)<SUB>837</SUB>> ]
+"2446" [label = <(METHOD_RETURN,jobject)<SUB>837</SUB>> ]
   "2296" -> "2301" 
   "2296" -> "2314" 
   "2314" -> "2319" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/560-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/560-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/560-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/560-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "UNUSED" {  
-"16556" [label = <(METHOD,UNUSED)> ]
-"16559" [label = <(METHOD_RETURN,ANY)> ]
-  "16556" -> "16559" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR)" {  
+"16552" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))> ]
+"16557" [label = <(METHOD_RETURN,ANY)> ]
+  "16552" -> "16557" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/561-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/561-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/561-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/561-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR)" {  
-"16560" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))> ]
-"16565" [label = <(METHOD_RETURN,ANY)> ]
-  "16560" -> "16565" 
+digraph "mirror::Class::PrettyClass" {  
+"16558" [label = <(METHOD,mirror::Class::PrettyClass)> ]
+"16562" [label = <(METHOD_RETURN,ANY)> ]
+  "16558" -> "16562" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/562-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/562-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/562-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/562-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::Class::PrettyClass" {  
-"16566" [label = <(METHOD,mirror::Class::PrettyClass)> ]
-"16570" [label = <(METHOD_RETURN,ANY)> ]
-  "16566" -> "16570" 
+digraph "GetMethods" {  
+"16563" [label = <(METHOD,GetMethods)> ]
+"16567" [label = <(METHOD_RETURN,ANY)> ]
+  "16563" -> "16567" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/563-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/563-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/563-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/563-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "GetMethods" {  
-"16571" [label = <(METHOD,GetMethods)> ]
-"16575" [label = <(METHOD_RETURN,ANY)> ]
-  "16571" -> "16575" 
+digraph "UnregisterNative" {  
+"16568" [label = <(METHOD,UnregisterNative)> ]
+"16571" [label = <(METHOD_RETURN,ANY)> ]
+  "16568" -> "16571" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/564-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/564-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/564-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/564-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "UnregisterNative" {  
-"16576" [label = <(METHOD,UnregisterNative)> ]
-"16579" [label = <(METHOD_RETURN,ANY)> ]
-  "16576" -> "16579" 
+digraph "&lt;operator&gt;.postIncrement" {  
+"16572" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
+"16575" [label = <(METHOD_RETURN,ANY)> ]
+  "16572" -> "16575" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/565-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/565-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/565-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/565-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.postIncrement" {  
-"16580" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
-"16583" [label = <(METHOD_RETURN,ANY)> ]
-  "16580" -> "16583" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR)" {  
+"16576" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))> ]
+"16581" [label = <(METHOD_RETURN,ANY)> ]
+  "16576" -> "16581" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/566-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/566-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/566-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/566-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR)" {  
-"16584" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))> ]
-"16589" [label = <(METHOD_RETURN,ANY)> ]
-  "16584" -> "16589" 
+digraph "GetJavaVM" {  
+"16582" [label = <(METHOD,GetJavaVM)> ]
+"16585" [label = <(METHOD_RETURN,ANY)> ]
+  "16582" -> "16585" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/567-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/567-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/567-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/567-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "GetJavaVM" {  
-"16590" [label = <(METHOD,GetJavaVM)> ]
+digraph "NewObject" {  
+"16586" [label = <(METHOD,NewObject)> ]
 "16593" [label = <(METHOD_RETURN,ANY)> ]
-  "16590" -> "16593" 
+  "16586" -> "16593" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/568-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/568-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/568-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/568-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "NewObject" {  
-"16594" [label = <(METHOD,NewObject)> ]
-"16601" [label = <(METHOD_RETURN,ANY)> ]
-  "16594" -> "16601" 
+digraph "GetLongField" {  
+"16594" [label = <(METHOD,GetLongField)> ]
+"16599" [label = <(METHOD_RETURN,ANY)> ]
+  "16594" -> "16599" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/569-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/569-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/569-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/569-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "GetLongField" {  
-"16602" [label = <(METHOD,GetLongField)> ]
-"16607" [label = <(METHOD_RETURN,ANY)> ]
-  "16602" -> "16607" 
+digraph "GetIntField" {  
+"16600" [label = <(METHOD,GetIntField)> ]
+"16605" [label = <(METHOD_RETURN,ANY)> ]
+  "16600" -> "16605" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/57-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/57-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/57-cfg.dot	2023-06-07 19:34:35.067389623 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/57-cfg.dot	2023-06-07 19:34:41.587389020 +0330
@@ -1,33 +1,33 @@
 digraph "GetMethodID" {  
-"2454" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>866</SUB>> ]
-"2472" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>867</SUB>> ]
-"2490" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>868</SUB>> ]
-"2509" [label = <(soa,soa(env))<SUB>869</SUB>> ]
-"2511" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, false);,return FindMethodID(soa, java_class, name, sig, false);)<SUB>870</SUB>> ]
-"2512" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, false))<SUB>870</SUB>> ]
-"2458" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>866</SUB>> ]
-"2476" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>867</SUB>> ]
-"2494" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>868</SUB>> ]
-"2459" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>866</SUB>> ]
-"2463" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>866</SUB>> ]
-"2470" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>866</SUB>> ]
-"2477" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>867</SUB>> ]
-"2481" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>867</SUB>> ]
-"2488" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>867</SUB>> ]
-"2495" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>868</SUB>> ]
-"2499" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>868</SUB>> ]
-"2506" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>868</SUB>> ]
-"2464" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>866</SUB>> ]
-"2482" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>867</SUB>> ]
-"2500" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>868</SUB>> ]
-"2465" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>866</SUB>> ]
-"2467" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>866</SUB>> ]
-"2483" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>867</SUB>> ]
-"2485" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>867</SUB>> ]
-"2501" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>868</SUB>> ]
-"2503" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>868</SUB>> ]
-"2448" [label = <(METHOD,GetMethodID)<SUB>865</SUB>> ]
-"2518" [label = <(METHOD_RETURN,jmethodID)<SUB>865</SUB>> ]
+"2454" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>865</SUB>> ]
+"2472" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>866</SUB>> ]
+"2490" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>867</SUB>> ]
+"2509" [label = <(soa,soa(env))<SUB>868</SUB>> ]
+"2511" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, false);,return FindMethodID(soa, java_class, name, sig, false);)<SUB>869</SUB>> ]
+"2512" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, false))<SUB>869</SUB>> ]
+"2458" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>865</SUB>> ]
+"2476" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>866</SUB>> ]
+"2494" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>867</SUB>> ]
+"2459" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>865</SUB>> ]
+"2463" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>865</SUB>> ]
+"2470" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>865</SUB>> ]
+"2477" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>866</SUB>> ]
+"2481" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>866</SUB>> ]
+"2488" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>866</SUB>> ]
+"2495" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>867</SUB>> ]
+"2499" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>867</SUB>> ]
+"2506" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>867</SUB>> ]
+"2464" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>865</SUB>> ]
+"2482" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>866</SUB>> ]
+"2500" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>867</SUB>> ]
+"2465" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>865</SUB>> ]
+"2467" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>865</SUB>> ]
+"2483" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>866</SUB>> ]
+"2485" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>866</SUB>> ]
+"2501" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>867</SUB>> ]
+"2503" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>867</SUB>> ]
+"2448" [label = <(METHOD,GetMethodID)<SUB>864</SUB>> ]
+"2518" [label = <(METHOD_RETURN,jmethodID)<SUB>864</SUB>> ]
   "2454" -> "2459" 
   "2454" -> "2472" 
   "2472" -> "2477" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/570-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/570-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/570-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/570-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "GetIntField" {  
-"16608" [label = <(METHOD,GetIntField)> ]
-"16613" [label = <(METHOD_RETURN,ANY)> ]
-  "16608" -> "16613" 
+digraph "ArtT::Alloc" {  
+"16606" [label = <(METHOD,ArtT::Alloc)> ]
+"16611" [label = <(METHOD_RETURN,ANY)> ]
+  "16606" -> "16611" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/571-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/571-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/571-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/571-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "ArtT::Alloc" {  
-"16614" [label = <(METHOD,ArtT::Alloc)> ]
-"16619" [label = <(METHOD_RETURN,ANY)> ]
-  "16614" -> "16619" 
+digraph "DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;" {  
+"16612" [label = <(METHOD,DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;)> ]
+"16618" [label = <(METHOD_RETURN,ANY)> ]
+  "16612" -> "16618" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/572-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/572-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/572-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/572-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;" {  
-"16620" [label = <(METHOD,DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;)> ]
-"16626" [label = <(METHOD_RETURN,ANY)> ]
-  "16620" -> "16626" 
+digraph "GetData" {  
+"16619" [label = <(METHOD,GetData)> ]
+"16622" [label = <(METHOD_RETURN,ANY)> ]
+  "16619" -> "16622" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/573-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/573-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/573-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/573-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "GetData" {  
-"16627" [label = <(METHOD,GetData)> ]
-"16630" [label = <(METHOD_RETURN,ANY)> ]
-  "16627" -> "16630" 
+digraph "DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;" {  
+"16623" [label = <(METHOD,DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;)> ]
+"16629" [label = <(METHOD_RETURN,ANY)> ]
+  "16623" -> "16629" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/574-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/574-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/574-cfg.dot	2023-06-07 19:34:35.227389608 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/574-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;" {  
-"16631" [label = <(METHOD,DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;)> ]
-"16637" [label = <(METHOD_RETURN,ANY)> ]
-  "16631" -> "16637" 
+digraph "&lt;operator&gt;.arrayInitializer" {  
+"16630" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
+"16865" [label = <(METHOD_RETURN,ANY)> ]
+  "16630" -> "16865" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/575-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/575-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/575-cfg.dot	2023-06-07 19:34:35.237389606 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/575-cfg.dot	2023-06-07 19:34:41.777389003 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.arrayInitializer" {  
-"16638" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
-"16873" [label = <(METHOD_RETURN,ANY)> ]
-  "16638" -> "16873" 
+digraph "UNREACHABLE" {  
+"16866" [label = <(METHOD,UNREACHABLE)> ]
+"16868" [label = <(METHOD_RETURN,ANY)> ]
+  "16866" -> "16868" 
 }
Only in /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out: 576-cfg.dot
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/58-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/58-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/58-cfg.dot	2023-06-07 19:34:35.077389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/58-cfg.dot	2023-06-07 19:34:41.587389020 +0330
@@ -1,33 +1,33 @@
 digraph "GetStaticMethodID" {  
-"2526" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>875</SUB>> ]
-"2544" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>876</SUB>> ]
-"2562" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>877</SUB>> ]
-"2581" [label = <(soa,soa(env))<SUB>878</SUB>> ]
-"2583" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, true);,return FindMethodID(soa, java_class, name, sig, true);)<SUB>879</SUB>> ]
-"2584" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, true))<SUB>879</SUB>> ]
-"2530" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>875</SUB>> ]
-"2548" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>876</SUB>> ]
-"2566" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>877</SUB>> ]
-"2531" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>875</SUB>> ]
-"2535" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>875</SUB>> ]
-"2542" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>875</SUB>> ]
-"2549" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>876</SUB>> ]
-"2553" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>876</SUB>> ]
-"2560" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>876</SUB>> ]
-"2567" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>877</SUB>> ]
-"2571" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>877</SUB>> ]
-"2578" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>877</SUB>> ]
-"2536" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>875</SUB>> ]
-"2554" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>876</SUB>> ]
-"2572" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>877</SUB>> ]
-"2537" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>875</SUB>> ]
-"2539" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>875</SUB>> ]
-"2555" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>876</SUB>> ]
-"2557" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>876</SUB>> ]
-"2573" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>877</SUB>> ]
-"2575" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>877</SUB>> ]
-"2520" [label = <(METHOD,GetStaticMethodID)<SUB>873</SUB>> ]
-"2590" [label = <(METHOD_RETURN,jmethodID)<SUB>873</SUB>> ]
+"2526" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>874</SUB>> ]
+"2544" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>875</SUB>> ]
+"2562" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>876</SUB>> ]
+"2581" [label = <(soa,soa(env))<SUB>877</SUB>> ]
+"2583" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, true);,return FindMethodID(soa, java_class, name, sig, true);)<SUB>878</SUB>> ]
+"2584" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, true))<SUB>878</SUB>> ]
+"2530" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>874</SUB>> ]
+"2548" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>875</SUB>> ]
+"2566" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>876</SUB>> ]
+"2531" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>874</SUB>> ]
+"2535" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>874</SUB>> ]
+"2542" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>874</SUB>> ]
+"2549" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>875</SUB>> ]
+"2553" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>875</SUB>> ]
+"2560" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>875</SUB>> ]
+"2567" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>876</SUB>> ]
+"2571" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>876</SUB>> ]
+"2578" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>876</SUB>> ]
+"2536" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>874</SUB>> ]
+"2554" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>875</SUB>> ]
+"2572" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>876</SUB>> ]
+"2537" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>874</SUB>> ]
+"2539" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>874</SUB>> ]
+"2555" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>875</SUB>> ]
+"2557" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>875</SUB>> ]
+"2573" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>876</SUB>> ]
+"2575" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>876</SUB>> ]
+"2520" [label = <(METHOD,GetStaticMethodID)<SUB>872</SUB>> ]
+"2590" [label = <(METHOD_RETURN,jmethodID)<SUB>872</SUB>> ]
   "2526" -> "2531" 
   "2526" -> "2544" 
   "2544" -> "2549" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/59-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/59-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/59-cfg.dot	2023-06-07 19:34:35.077389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/59-cfg.dot	2023-06-07 19:34:41.587389020 +0330
@@ -1,36 +1,36 @@
 digraph "CallObjectMethod" {  
-"2598" [label = <(va_start,va_start(ap, mid))<SUB>884</SUB>> ]
-"2602" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>885</SUB>> ]
-"2605" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>886</SUB>> ]
-"2623" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>887</SUB>> ]
-"2642" [label = <(soa,soa(env))<SUB>888</SUB>> ]
-"2645" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>889</SUB>> ]
-"2651" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>890</SUB>> ]
-"2603" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>885</SUB>> ]
-"2646" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>889</SUB>> ]
-"2652" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>890</SUB>> ]
-"2653" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>890</SUB>> ]
-"2658" [label = <(GetL,result.GetL())<SUB>890</SUB>> ]
-"2609" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>886</SUB>> ]
-"2627" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>887</SUB>> ]
-"2654" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>890</SUB>> ]
-"2659" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>890</SUB>> ]
-"2610" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>886</SUB>> ]
-"2614" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>886</SUB>> ]
-"2621" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>886</SUB>> ]
-"2628" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>887</SUB>> ]
-"2632" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>887</SUB>> ]
-"2639" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>887</SUB>> ]
-"2656" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>890</SUB>> ]
-"2661" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>890</SUB>> ]
-"2615" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>886</SUB>> ]
-"2633" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>887</SUB>> ]
-"2616" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>886</SUB>> ]
-"2618" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>886</SUB>> ]
-"2634" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>887</SUB>> ]
-"2636" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>887</SUB>> ]
-"2592" [label = <(METHOD,CallObjectMethod)<SUB>882</SUB>> ]
-"2662" [label = <(METHOD_RETURN,jobject)<SUB>882</SUB>> ]
+"2598" [label = <(va_start,va_start(ap, mid))<SUB>883</SUB>> ]
+"2602" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>884</SUB>> ]
+"2605" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>885</SUB>> ]
+"2623" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>886</SUB>> ]
+"2642" [label = <(soa,soa(env))<SUB>887</SUB>> ]
+"2645" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>888</SUB>> ]
+"2651" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>889</SUB>> ]
+"2603" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>884</SUB>> ]
+"2646" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>888</SUB>> ]
+"2652" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>889</SUB>> ]
+"2653" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>889</SUB>> ]
+"2658" [label = <(GetL,result.GetL())<SUB>889</SUB>> ]
+"2609" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>885</SUB>> ]
+"2627" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>886</SUB>> ]
+"2654" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>889</SUB>> ]
+"2659" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>889</SUB>> ]
+"2610" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>885</SUB>> ]
+"2614" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>885</SUB>> ]
+"2621" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>885</SUB>> ]
+"2628" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>886</SUB>> ]
+"2632" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>886</SUB>> ]
+"2639" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>886</SUB>> ]
+"2656" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>889</SUB>> ]
+"2661" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>889</SUB>> ]
+"2615" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>885</SUB>> ]
+"2633" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>886</SUB>> ]
+"2616" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>885</SUB>> ]
+"2618" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>885</SUB>> ]
+"2634" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>886</SUB>> ]
+"2636" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>886</SUB>> ]
+"2592" [label = <(METHOD,CallObjectMethod)<SUB>881</SUB>> ]
+"2662" [label = <(METHOD_RETURN,jobject)<SUB>881</SUB>> ]
   "2598" -> "2603" 
   "2602" -> "2605" 
   "2605" -> "2610" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/6-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/6-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/6-cfg.dot	2023-06-07 19:34:35.027389628 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/6-cfg.dot	2023-06-07 19:34:41.547389025 +0330
@@ -1,5 +1,5 @@
 digraph "ScopedVAArgs" {  
-"35" [label = <(METHOD,ScopedVAArgs)<SUB>74</SUB>> ]
-"38" [label = <(METHOD_RETURN,ANY)<SUB>74</SUB>> ]
+"35" [label = <(METHOD,ScopedVAArgs)<SUB>73</SUB>> ]
+"38" [label = <(METHOD_RETURN,ANY)<SUB>73</SUB>> ]
   "35" -> "38" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/60-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/60-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/60-cfg.dot	2023-06-07 19:34:35.077389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/60-cfg.dot	2023-06-07 19:34:41.597389021 +0330
@@ -1,33 +1,33 @@
 digraph "CallObjectMethodV" {  
-"2670" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>894</SUB>> ]
-"2688" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>895</SUB>> ]
-"2707" [label = <(soa,soa(env))<SUB>896</SUB>> ]
-"2710" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args)))<SUB>897</SUB>> ]
-"2716" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>898</SUB>> ]
-"2711" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>897</SUB>> ]
-"2717" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>898</SUB>> ]
-"2718" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>898</SUB>> ]
-"2723" [label = <(GetL,result.GetL())<SUB>898</SUB>> ]
-"2674" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>894</SUB>> ]
-"2692" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>895</SUB>> ]
-"2719" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>898</SUB>> ]
-"2724" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>898</SUB>> ]
-"2675" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>894</SUB>> ]
-"2679" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>894</SUB>> ]
-"2686" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>894</SUB>> ]
-"2693" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>895</SUB>> ]
-"2697" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>895</SUB>> ]
-"2704" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>895</SUB>> ]
-"2721" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>898</SUB>> ]
-"2726" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>898</SUB>> ]
-"2680" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>894</SUB>> ]
-"2698" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>895</SUB>> ]
-"2681" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>894</SUB>> ]
-"2683" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>894</SUB>> ]
-"2699" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>895</SUB>> ]
-"2701" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>895</SUB>> ]
-"2664" [label = <(METHOD,CallObjectMethodV)<SUB>893</SUB>> ]
-"2727" [label = <(METHOD_RETURN,jobject)<SUB>893</SUB>> ]
+"2670" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>893</SUB>> ]
+"2688" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>894</SUB>> ]
+"2707" [label = <(soa,soa(env))<SUB>895</SUB>> ]
+"2710" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args)))<SUB>896</SUB>> ]
+"2716" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>897</SUB>> ]
+"2711" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>896</SUB>> ]
+"2717" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>897</SUB>> ]
+"2718" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>897</SUB>> ]
+"2723" [label = <(GetL,result.GetL())<SUB>897</SUB>> ]
+"2674" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>893</SUB>> ]
+"2692" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>894</SUB>> ]
+"2719" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>897</SUB>> ]
+"2724" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>897</SUB>> ]
+"2675" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>893</SUB>> ]
+"2679" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>893</SUB>> ]
+"2686" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>893</SUB>> ]
+"2693" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>894</SUB>> ]
+"2697" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>894</SUB>> ]
+"2704" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>894</SUB>> ]
+"2721" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>897</SUB>> ]
+"2726" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>897</SUB>> ]
+"2680" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>893</SUB>> ]
+"2698" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>894</SUB>> ]
+"2681" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>893</SUB>> ]
+"2683" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>893</SUB>> ]
+"2699" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>894</SUB>> ]
+"2701" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>894</SUB>> ]
+"2664" [label = <(METHOD,CallObjectMethodV)<SUB>892</SUB>> ]
+"2727" [label = <(METHOD_RETURN,jobject)<SUB>892</SUB>> ]
   "2670" -> "2675" 
   "2670" -> "2688" 
   "2688" -> "2693" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/61-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/61-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/61-cfg.dot	2023-06-07 19:34:35.077389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/61-cfg.dot	2023-06-07 19:34:41.597389021 +0330
@@ -1,33 +1,33 @@
 digraph "CallObjectMethodA" {  
-"2735" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>902</SUB>> ]
-"2753" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>903</SUB>> ]
-"2772" [label = <(soa,soa(env))<SUB>904</SUB>> ]
-"2775" [label = <(result,result(InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args)))<SUB>905</SUB>> ]
-"2781" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>906</SUB>> ]
-"2776" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>905</SUB>> ]
-"2782" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>906</SUB>> ]
-"2783" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>906</SUB>> ]
-"2788" [label = <(GetL,result.GetL())<SUB>906</SUB>> ]
-"2739" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>902</SUB>> ]
-"2757" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>903</SUB>> ]
-"2784" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>906</SUB>> ]
-"2789" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>906</SUB>> ]
-"2740" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>902</SUB>> ]
-"2744" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>902</SUB>> ]
-"2751" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>902</SUB>> ]
-"2758" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>903</SUB>> ]
-"2762" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>903</SUB>> ]
-"2769" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>903</SUB>> ]
-"2786" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>906</SUB>> ]
-"2791" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>906</SUB>> ]
-"2745" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>902</SUB>> ]
-"2763" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>903</SUB>> ]
-"2746" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>902</SUB>> ]
-"2748" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>902</SUB>> ]
-"2764" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>903</SUB>> ]
-"2766" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>903</SUB>> ]
-"2729" [label = <(METHOD,CallObjectMethodA)<SUB>901</SUB>> ]
-"2792" [label = <(METHOD_RETURN,jobject)<SUB>901</SUB>> ]
+"2735" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>901</SUB>> ]
+"2753" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>902</SUB>> ]
+"2772" [label = <(soa,soa(env))<SUB>903</SUB>> ]
+"2775" [label = <(result,result(InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args)))<SUB>904</SUB>> ]
+"2781" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>905</SUB>> ]
+"2776" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>904</SUB>> ]
+"2782" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>905</SUB>> ]
+"2783" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>905</SUB>> ]
+"2788" [label = <(GetL,result.GetL())<SUB>905</SUB>> ]
+"2739" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>901</SUB>> ]
+"2757" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>902</SUB>> ]
+"2784" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>905</SUB>> ]
+"2789" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>905</SUB>> ]
+"2740" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>901</SUB>> ]
+"2744" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>901</SUB>> ]
+"2751" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>901</SUB>> ]
+"2758" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>902</SUB>> ]
+"2762" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>902</SUB>> ]
+"2769" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>902</SUB>> ]
+"2786" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>905</SUB>> ]
+"2791" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>905</SUB>> ]
+"2745" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>901</SUB>> ]
+"2763" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>902</SUB>> ]
+"2746" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>901</SUB>> ]
+"2748" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>901</SUB>> ]
+"2764" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>902</SUB>> ]
+"2766" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>902</SUB>> ]
+"2729" [label = <(METHOD,CallObjectMethodA)<SUB>900</SUB>> ]
+"2792" [label = <(METHOD_RETURN,jobject)<SUB>900</SUB>> ]
   "2735" -> "2740" 
   "2735" -> "2753" 
   "2753" -> "2758" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/62-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/62-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/62-cfg.dot	2023-06-07 19:34:35.077389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/62-cfg.dot	2023-06-07 19:34:41.597389021 +0330
@@ -1,32 +1,32 @@
 digraph "CallBooleanMethod" {  
-"2800" [label = <(va_start,va_start(ap, mid))<SUB>911</SUB>> ]
-"2804" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>912</SUB>> ]
-"2807" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>913</SUB>> ]
-"2825" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>914</SUB>> ]
-"2844" [label = <(soa,soa(env))<SUB>915</SUB>> ]
-"2847" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>916</SUB>> ]
-"2853" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>917</SUB>> ]
-"2805" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>912</SUB>> ]
-"2848" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>916</SUB>> ]
-"2854" [label = <(GetZ,result.GetZ())<SUB>917</SUB>> ]
-"2855" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>917</SUB>> ]
-"2811" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>913</SUB>> ]
-"2829" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>914</SUB>> ]
-"2857" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>917</SUB>> ]
-"2812" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>913</SUB>> ]
-"2816" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>913</SUB>> ]
-"2823" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>913</SUB>> ]
-"2830" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>914</SUB>> ]
-"2834" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>914</SUB>> ]
-"2841" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>914</SUB>> ]
-"2817" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>913</SUB>> ]
-"2835" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>914</SUB>> ]
-"2818" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>913</SUB>> ]
-"2820" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>913</SUB>> ]
-"2836" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>914</SUB>> ]
-"2838" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>914</SUB>> ]
-"2794" [label = <(METHOD,CallBooleanMethod)<SUB>909</SUB>> ]
-"2858" [label = <(METHOD_RETURN,jboolean)<SUB>909</SUB>> ]
+"2800" [label = <(va_start,va_start(ap, mid))<SUB>910</SUB>> ]
+"2804" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>911</SUB>> ]
+"2807" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>912</SUB>> ]
+"2825" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>913</SUB>> ]
+"2844" [label = <(soa,soa(env))<SUB>914</SUB>> ]
+"2847" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>915</SUB>> ]
+"2853" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>916</SUB>> ]
+"2805" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>911</SUB>> ]
+"2848" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>915</SUB>> ]
+"2854" [label = <(GetZ,result.GetZ())<SUB>916</SUB>> ]
+"2855" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>916</SUB>> ]
+"2811" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>912</SUB>> ]
+"2829" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>913</SUB>> ]
+"2857" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>916</SUB>> ]
+"2812" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>912</SUB>> ]
+"2816" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>912</SUB>> ]
+"2823" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>912</SUB>> ]
+"2830" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>913</SUB>> ]
+"2834" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>913</SUB>> ]
+"2841" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>913</SUB>> ]
+"2817" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>912</SUB>> ]
+"2835" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>913</SUB>> ]
+"2818" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>912</SUB>> ]
+"2820" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>912</SUB>> ]
+"2836" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>913</SUB>> ]
+"2838" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>913</SUB>> ]
+"2794" [label = <(METHOD,CallBooleanMethod)<SUB>908</SUB>> ]
+"2858" [label = <(METHOD_RETURN,jboolean)<SUB>908</SUB>> ]
   "2800" -> "2805" 
   "2804" -> "2807" 
   "2807" -> "2812" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/63-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/63-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/63-cfg.dot	2023-06-07 19:34:35.077389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/63-cfg.dot	2023-06-07 19:34:41.597389021 +0330
@@ -1,28 +1,28 @@
 digraph "CallBooleanMethodV" {  
-"2866" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>921</SUB>> ]
-"2884" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>922</SUB>> ]
-"2903" [label = <(soa,soa(env))<SUB>923</SUB>> ]
-"2905" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>924</SUB>> ]
-"2906" [label = <(GetZ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ())<SUB>924</SUB>> ]
-"2907" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ)<SUB>924</SUB>> ]
-"2870" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>921</SUB>> ]
-"2888" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>922</SUB>> ]
-"2908" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>924</SUB>> ]
-"2913" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>924</SUB>> ]
-"2871" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>921</SUB>> ]
-"2875" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>921</SUB>> ]
-"2882" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>921</SUB>> ]
-"2889" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>922</SUB>> ]
-"2893" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>922</SUB>> ]
-"2900" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>922</SUB>> ]
-"2876" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>921</SUB>> ]
-"2894" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>922</SUB>> ]
-"2877" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>921</SUB>> ]
-"2879" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>921</SUB>> ]
-"2895" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>922</SUB>> ]
-"2897" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>922</SUB>> ]
-"2860" [label = <(METHOD,CallBooleanMethodV)<SUB>920</SUB>> ]
-"2914" [label = <(METHOD_RETURN,jboolean)<SUB>920</SUB>> ]
+"2866" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>920</SUB>> ]
+"2884" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>921</SUB>> ]
+"2903" [label = <(soa,soa(env))<SUB>922</SUB>> ]
+"2905" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>923</SUB>> ]
+"2906" [label = <(GetZ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ())<SUB>923</SUB>> ]
+"2907" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ)<SUB>923</SUB>> ]
+"2870" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>920</SUB>> ]
+"2888" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>921</SUB>> ]
+"2908" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>923</SUB>> ]
+"2913" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>923</SUB>> ]
+"2871" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>920</SUB>> ]
+"2875" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>920</SUB>> ]
+"2882" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>920</SUB>> ]
+"2889" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>921</SUB>> ]
+"2893" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>921</SUB>> ]
+"2900" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>921</SUB>> ]
+"2876" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>920</SUB>> ]
+"2894" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>921</SUB>> ]
+"2877" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>920</SUB>> ]
+"2879" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>920</SUB>> ]
+"2895" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>921</SUB>> ]
+"2897" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>921</SUB>> ]
+"2860" [label = <(METHOD,CallBooleanMethodV)<SUB>919</SUB>> ]
+"2914" [label = <(METHOD_RETURN,jboolean)<SUB>919</SUB>> ]
   "2866" -> "2871" 
   "2866" -> "2884" 
   "2884" -> "2889" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/64-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/64-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/64-cfg.dot	2023-06-07 19:34:35.077389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/64-cfg.dot	2023-06-07 19:34:41.597389021 +0330
@@ -1,28 +1,28 @@
 digraph "CallBooleanMethodA" {  
-"2922" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>928</SUB>> ]
-"2940" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>929</SUB>> ]
-"2959" [label = <(soa,soa(env))<SUB>930</SUB>> ]
-"2961" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();)<SUB>931</SUB>> ]
-"2962" [label = <(GetZ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ())<SUB>931</SUB>> ]
-"2963" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ)<SUB>931</SUB>> ]
-"2926" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>928</SUB>> ]
-"2944" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>929</SUB>> ]
-"2964" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>931</SUB>> ]
-"2969" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>931</SUB>> ]
-"2927" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>928</SUB>> ]
-"2931" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>928</SUB>> ]
-"2938" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>928</SUB>> ]
-"2945" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>929</SUB>> ]
-"2949" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>929</SUB>> ]
-"2956" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>929</SUB>> ]
-"2932" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>928</SUB>> ]
-"2950" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>929</SUB>> ]
-"2933" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>928</SUB>> ]
-"2935" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>928</SUB>> ]
-"2951" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>929</SUB>> ]
-"2953" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>929</SUB>> ]
-"2916" [label = <(METHOD,CallBooleanMethodA)<SUB>927</SUB>> ]
-"2970" [label = <(METHOD_RETURN,jboolean)<SUB>927</SUB>> ]
+"2922" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>927</SUB>> ]
+"2940" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>928</SUB>> ]
+"2959" [label = <(soa,soa(env))<SUB>929</SUB>> ]
+"2961" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();)<SUB>930</SUB>> ]
+"2962" [label = <(GetZ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ())<SUB>930</SUB>> ]
+"2963" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ)<SUB>930</SUB>> ]
+"2926" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>927</SUB>> ]
+"2944" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>928</SUB>> ]
+"2964" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>930</SUB>> ]
+"2969" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>930</SUB>> ]
+"2927" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>927</SUB>> ]
+"2931" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>927</SUB>> ]
+"2938" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>927</SUB>> ]
+"2945" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>928</SUB>> ]
+"2949" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>928</SUB>> ]
+"2956" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>928</SUB>> ]
+"2932" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>927</SUB>> ]
+"2950" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>928</SUB>> ]
+"2933" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>927</SUB>> ]
+"2935" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>927</SUB>> ]
+"2951" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>928</SUB>> ]
+"2953" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>928</SUB>> ]
+"2916" [label = <(METHOD,CallBooleanMethodA)<SUB>926</SUB>> ]
+"2970" [label = <(METHOD_RETURN,jboolean)<SUB>926</SUB>> ]
   "2922" -> "2927" 
   "2922" -> "2940" 
   "2940" -> "2945" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/65-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/65-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/65-cfg.dot	2023-06-07 19:34:35.077389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/65-cfg.dot	2023-06-07 19:34:41.597389021 +0330
@@ -1,32 +1,32 @@
 digraph "CallByteMethod" {  
-"2978" [label = <(va_start,va_start(ap, mid))<SUB>936</SUB>> ]
-"2982" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>937</SUB>> ]
-"2985" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>938</SUB>> ]
-"3003" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>939</SUB>> ]
-"3022" [label = <(soa,soa(env))<SUB>940</SUB>> ]
-"3025" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>941</SUB>> ]
-"3031" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>942</SUB>> ]
-"2983" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>937</SUB>> ]
-"3026" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>941</SUB>> ]
-"3032" [label = <(GetB,result.GetB())<SUB>942</SUB>> ]
-"3033" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>942</SUB>> ]
-"2989" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>938</SUB>> ]
-"3007" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>939</SUB>> ]
-"3035" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>942</SUB>> ]
-"2990" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>938</SUB>> ]
-"2994" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>938</SUB>> ]
-"3001" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>938</SUB>> ]
-"3008" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>939</SUB>> ]
-"3012" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>939</SUB>> ]
-"3019" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>939</SUB>> ]
-"2995" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>938</SUB>> ]
-"3013" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>939</SUB>> ]
-"2996" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>938</SUB>> ]
-"2998" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>938</SUB>> ]
-"3014" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>939</SUB>> ]
-"3016" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>939</SUB>> ]
-"2972" [label = <(METHOD,CallByteMethod)<SUB>934</SUB>> ]
-"3036" [label = <(METHOD_RETURN,jbyte)<SUB>934</SUB>> ]
+"2978" [label = <(va_start,va_start(ap, mid))<SUB>935</SUB>> ]
+"2982" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>936</SUB>> ]
+"2985" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>937</SUB>> ]
+"3003" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>938</SUB>> ]
+"3022" [label = <(soa,soa(env))<SUB>939</SUB>> ]
+"3025" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>940</SUB>> ]
+"3031" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>941</SUB>> ]
+"2983" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>936</SUB>> ]
+"3026" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>940</SUB>> ]
+"3032" [label = <(GetB,result.GetB())<SUB>941</SUB>> ]
+"3033" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>941</SUB>> ]
+"2989" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>937</SUB>> ]
+"3007" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>938</SUB>> ]
+"3035" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>941</SUB>> ]
+"2990" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>937</SUB>> ]
+"2994" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>937</SUB>> ]
+"3001" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>937</SUB>> ]
+"3008" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>938</SUB>> ]
+"3012" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>938</SUB>> ]
+"3019" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>938</SUB>> ]
+"2995" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>937</SUB>> ]
+"3013" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>938</SUB>> ]
+"2996" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>937</SUB>> ]
+"2998" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>937</SUB>> ]
+"3014" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>938</SUB>> ]
+"3016" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>938</SUB>> ]
+"2972" [label = <(METHOD,CallByteMethod)<SUB>933</SUB>> ]
+"3036" [label = <(METHOD_RETURN,jbyte)<SUB>933</SUB>> ]
   "2978" -> "2983" 
   "2982" -> "2985" 
   "2985" -> "2990" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/66-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/66-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/66-cfg.dot	2023-06-07 19:34:35.077389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/66-cfg.dot	2023-06-07 19:34:41.597389021 +0330
@@ -1,28 +1,28 @@
 digraph "CallByteMethodV" {  
-"3044" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>946</SUB>> ]
-"3062" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>947</SUB>> ]
-"3081" [label = <(soa,soa(env))<SUB>948</SUB>> ]
-"3083" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();)<SUB>949</SUB>> ]
-"3084" [label = <(GetB,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB())<SUB>949</SUB>> ]
-"3085" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB)<SUB>949</SUB>> ]
-"3048" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>946</SUB>> ]
-"3066" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>947</SUB>> ]
-"3086" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>949</SUB>> ]
-"3091" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>949</SUB>> ]
-"3049" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>946</SUB>> ]
-"3053" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>946</SUB>> ]
-"3060" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>946</SUB>> ]
-"3067" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>947</SUB>> ]
-"3071" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>947</SUB>> ]
-"3078" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>947</SUB>> ]
-"3054" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>946</SUB>> ]
-"3072" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>947</SUB>> ]
-"3055" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>946</SUB>> ]
-"3057" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>946</SUB>> ]
-"3073" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>947</SUB>> ]
-"3075" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>947</SUB>> ]
-"3038" [label = <(METHOD,CallByteMethodV)<SUB>945</SUB>> ]
-"3092" [label = <(METHOD_RETURN,jbyte)<SUB>945</SUB>> ]
+"3044" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>945</SUB>> ]
+"3062" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>946</SUB>> ]
+"3081" [label = <(soa,soa(env))<SUB>947</SUB>> ]
+"3083" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();)<SUB>948</SUB>> ]
+"3084" [label = <(GetB,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB())<SUB>948</SUB>> ]
+"3085" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB)<SUB>948</SUB>> ]
+"3048" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>945</SUB>> ]
+"3066" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>946</SUB>> ]
+"3086" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>948</SUB>> ]
+"3091" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>948</SUB>> ]
+"3049" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>945</SUB>> ]
+"3053" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>945</SUB>> ]
+"3060" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>945</SUB>> ]
+"3067" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>946</SUB>> ]
+"3071" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>946</SUB>> ]
+"3078" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>946</SUB>> ]
+"3054" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>945</SUB>> ]
+"3072" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>946</SUB>> ]
+"3055" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>945</SUB>> ]
+"3057" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>945</SUB>> ]
+"3073" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>946</SUB>> ]
+"3075" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>946</SUB>> ]
+"3038" [label = <(METHOD,CallByteMethodV)<SUB>944</SUB>> ]
+"3092" [label = <(METHOD_RETURN,jbyte)<SUB>944</SUB>> ]
   "3044" -> "3049" 
   "3044" -> "3062" 
   "3062" -> "3067" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/67-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/67-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/67-cfg.dot	2023-06-07 19:34:35.077389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/67-cfg.dot	2023-06-07 19:34:41.597389021 +0330
@@ -1,28 +1,28 @@
 digraph "CallByteMethodA" {  
-"3100" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>953</SUB>> ]
-"3118" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>954</SUB>> ]
-"3137" [label = <(soa,soa(env))<SUB>955</SUB>> ]
-"3139" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();)<SUB>956</SUB>> ]
-"3140" [label = <(GetB,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB())<SUB>956</SUB>> ]
-"3141" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB)<SUB>956</SUB>> ]
-"3104" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>953</SUB>> ]
-"3122" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>954</SUB>> ]
-"3142" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>956</SUB>> ]
-"3147" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>956</SUB>> ]
-"3105" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>953</SUB>> ]
-"3109" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>953</SUB>> ]
-"3116" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>953</SUB>> ]
-"3123" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>954</SUB>> ]
-"3127" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>954</SUB>> ]
-"3134" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>954</SUB>> ]
-"3110" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>953</SUB>> ]
-"3128" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>954</SUB>> ]
-"3111" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>953</SUB>> ]
-"3113" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>953</SUB>> ]
-"3129" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>954</SUB>> ]
-"3131" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>954</SUB>> ]
-"3094" [label = <(METHOD,CallByteMethodA)<SUB>952</SUB>> ]
-"3148" [label = <(METHOD_RETURN,jbyte)<SUB>952</SUB>> ]
+"3100" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>952</SUB>> ]
+"3118" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>953</SUB>> ]
+"3137" [label = <(soa,soa(env))<SUB>954</SUB>> ]
+"3139" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();)<SUB>955</SUB>> ]
+"3140" [label = <(GetB,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB())<SUB>955</SUB>> ]
+"3141" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB)<SUB>955</SUB>> ]
+"3104" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>952</SUB>> ]
+"3122" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>953</SUB>> ]
+"3142" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>955</SUB>> ]
+"3147" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>955</SUB>> ]
+"3105" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>952</SUB>> ]
+"3109" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>952</SUB>> ]
+"3116" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>952</SUB>> ]
+"3123" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>953</SUB>> ]
+"3127" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>953</SUB>> ]
+"3134" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>953</SUB>> ]
+"3110" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>952</SUB>> ]
+"3128" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>953</SUB>> ]
+"3111" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>952</SUB>> ]
+"3113" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>952</SUB>> ]
+"3129" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>953</SUB>> ]
+"3131" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>953</SUB>> ]
+"3094" [label = <(METHOD,CallByteMethodA)<SUB>951</SUB>> ]
+"3148" [label = <(METHOD_RETURN,jbyte)<SUB>951</SUB>> ]
   "3100" -> "3105" 
   "3100" -> "3118" 
   "3118" -> "3123" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/68-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/68-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/68-cfg.dot	2023-06-07 19:34:35.077389622 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/68-cfg.dot	2023-06-07 19:34:41.597389021 +0330
@@ -1,32 +1,32 @@
 digraph "CallCharMethod" {  
-"3156" [label = <(va_start,va_start(ap, mid))<SUB>961</SUB>> ]
-"3160" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>962</SUB>> ]
-"3163" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>963</SUB>> ]
-"3181" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>964</SUB>> ]
-"3200" [label = <(soa,soa(env))<SUB>965</SUB>> ]
-"3203" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>966</SUB>> ]
-"3209" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>967</SUB>> ]
-"3161" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>962</SUB>> ]
-"3204" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>966</SUB>> ]
-"3210" [label = <(GetC,result.GetC())<SUB>967</SUB>> ]
-"3211" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>967</SUB>> ]
-"3167" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>963</SUB>> ]
-"3185" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>964</SUB>> ]
-"3213" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>967</SUB>> ]
-"3168" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>963</SUB>> ]
-"3172" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>963</SUB>> ]
-"3179" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>963</SUB>> ]
-"3186" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>964</SUB>> ]
-"3190" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>964</SUB>> ]
-"3197" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>964</SUB>> ]
-"3173" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>963</SUB>> ]
-"3191" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>964</SUB>> ]
-"3174" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>963</SUB>> ]
-"3176" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>963</SUB>> ]
-"3192" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>964</SUB>> ]
-"3194" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>964</SUB>> ]
-"3150" [label = <(METHOD,CallCharMethod)<SUB>959</SUB>> ]
-"3214" [label = <(METHOD_RETURN,jchar)<SUB>959</SUB>> ]
+"3156" [label = <(va_start,va_start(ap, mid))<SUB>960</SUB>> ]
+"3160" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>961</SUB>> ]
+"3163" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>962</SUB>> ]
+"3181" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>963</SUB>> ]
+"3200" [label = <(soa,soa(env))<SUB>964</SUB>> ]
+"3203" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>965</SUB>> ]
+"3209" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>966</SUB>> ]
+"3161" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>961</SUB>> ]
+"3204" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>965</SUB>> ]
+"3210" [label = <(GetC,result.GetC())<SUB>966</SUB>> ]
+"3211" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>966</SUB>> ]
+"3167" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>962</SUB>> ]
+"3185" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>963</SUB>> ]
+"3213" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>966</SUB>> ]
+"3168" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>962</SUB>> ]
+"3172" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>962</SUB>> ]
+"3179" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>962</SUB>> ]
+"3186" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>963</SUB>> ]
+"3190" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>963</SUB>> ]
+"3197" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>963</SUB>> ]
+"3173" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>962</SUB>> ]
+"3191" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>963</SUB>> ]
+"3174" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>962</SUB>> ]
+"3176" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>962</SUB>> ]
+"3192" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>963</SUB>> ]
+"3194" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>963</SUB>> ]
+"3150" [label = <(METHOD,CallCharMethod)<SUB>958</SUB>> ]
+"3214" [label = <(METHOD_RETURN,jchar)<SUB>958</SUB>> ]
   "3156" -> "3161" 
   "3160" -> "3163" 
   "3163" -> "3168" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/69-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/69-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/69-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/69-cfg.dot	2023-06-07 19:34:41.597389021 +0330
@@ -1,28 +1,28 @@
 digraph "CallCharMethodV" {  
-"3222" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>971</SUB>> ]
-"3240" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>972</SUB>> ]
-"3259" [label = <(soa,soa(env))<SUB>973</SUB>> ]
-"3261" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();)<SUB>974</SUB>> ]
-"3262" [label = <(GetC,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC())<SUB>974</SUB>> ]
-"3263" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC)<SUB>974</SUB>> ]
-"3226" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>971</SUB>> ]
-"3244" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>972</SUB>> ]
-"3264" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>974</SUB>> ]
-"3269" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>974</SUB>> ]
-"3227" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>971</SUB>> ]
-"3231" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>971</SUB>> ]
-"3238" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>971</SUB>> ]
-"3245" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>972</SUB>> ]
-"3249" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>972</SUB>> ]
-"3256" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>972</SUB>> ]
-"3232" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>971</SUB>> ]
-"3250" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>972</SUB>> ]
-"3233" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>971</SUB>> ]
-"3235" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>971</SUB>> ]
-"3251" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>972</SUB>> ]
-"3253" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>972</SUB>> ]
-"3216" [label = <(METHOD,CallCharMethodV)<SUB>970</SUB>> ]
-"3270" [label = <(METHOD_RETURN,jchar)<SUB>970</SUB>> ]
+"3222" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>970</SUB>> ]
+"3240" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>971</SUB>> ]
+"3259" [label = <(soa,soa(env))<SUB>972</SUB>> ]
+"3261" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();)<SUB>973</SUB>> ]
+"3262" [label = <(GetC,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC())<SUB>973</SUB>> ]
+"3263" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC)<SUB>973</SUB>> ]
+"3226" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>970</SUB>> ]
+"3244" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>971</SUB>> ]
+"3264" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>973</SUB>> ]
+"3269" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>973</SUB>> ]
+"3227" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>970</SUB>> ]
+"3231" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>970</SUB>> ]
+"3238" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>970</SUB>> ]
+"3245" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>971</SUB>> ]
+"3249" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>971</SUB>> ]
+"3256" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>971</SUB>> ]
+"3232" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>970</SUB>> ]
+"3250" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>971</SUB>> ]
+"3233" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>970</SUB>> ]
+"3235" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>970</SUB>> ]
+"3251" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>971</SUB>> ]
+"3253" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>971</SUB>> ]
+"3216" [label = <(METHOD,CallCharMethodV)<SUB>969</SUB>> ]
+"3270" [label = <(METHOD_RETURN,jchar)<SUB>969</SUB>> ]
   "3222" -> "3227" 
   "3222" -> "3240" 
   "3240" -> "3245" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/7-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/7-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/7-cfg.dot	2023-06-07 19:34:35.027389628 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/7-cfg.dot	2023-06-07 19:34:41.547389025 +0330
@@ -1,8 +1,8 @@
 digraph "~ScopedVAArgs" {  
-"42" [label = <(va_end,va_end(*args))<SUB>75</SUB>> ]
-"43" [label = <(&lt;operator&gt;.indirection,*args)<SUB>75</SUB>> ]
-"40" [label = <(METHOD,~ScopedVAArgs)<SUB>75</SUB>> ]
-"45" [label = <(METHOD_RETURN,ANY)<SUB>75</SUB>> ]
+"42" [label = <(va_end,va_end(*args))<SUB>74</SUB>> ]
+"43" [label = <(&lt;operator&gt;.indirection,*args)<SUB>74</SUB>> ]
+"40" [label = <(METHOD,~ScopedVAArgs)<SUB>74</SUB>> ]
+"45" [label = <(METHOD_RETURN,ANY)<SUB>74</SUB>> ]
   "42" -> "45" 
   "43" -> "42" 
   "40" -> "43" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/70-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/70-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/70-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/70-cfg.dot	2023-06-07 19:34:41.597389021 +0330
@@ -1,28 +1,28 @@
 digraph "CallCharMethodA" {  
-"3278" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>978</SUB>> ]
-"3296" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>979</SUB>> ]
-"3315" [label = <(soa,soa(env))<SUB>980</SUB>> ]
-"3317" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();)<SUB>981</SUB>> ]
-"3318" [label = <(GetC,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC())<SUB>981</SUB>> ]
-"3319" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC)<SUB>981</SUB>> ]
-"3282" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>978</SUB>> ]
-"3300" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>979</SUB>> ]
-"3320" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>981</SUB>> ]
-"3325" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>981</SUB>> ]
-"3283" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>978</SUB>> ]
-"3287" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>978</SUB>> ]
-"3294" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>978</SUB>> ]
-"3301" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>979</SUB>> ]
-"3305" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>979</SUB>> ]
-"3312" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>979</SUB>> ]
-"3288" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>978</SUB>> ]
-"3306" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>979</SUB>> ]
-"3289" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>978</SUB>> ]
-"3291" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>978</SUB>> ]
-"3307" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>979</SUB>> ]
-"3309" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>979</SUB>> ]
-"3272" [label = <(METHOD,CallCharMethodA)<SUB>977</SUB>> ]
-"3326" [label = <(METHOD_RETURN,jchar)<SUB>977</SUB>> ]
+"3278" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>977</SUB>> ]
+"3296" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>978</SUB>> ]
+"3315" [label = <(soa,soa(env))<SUB>979</SUB>> ]
+"3317" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();)<SUB>980</SUB>> ]
+"3318" [label = <(GetC,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC())<SUB>980</SUB>> ]
+"3319" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC)<SUB>980</SUB>> ]
+"3282" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>977</SUB>> ]
+"3300" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>978</SUB>> ]
+"3320" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>980</SUB>> ]
+"3325" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>980</SUB>> ]
+"3283" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>977</SUB>> ]
+"3287" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>977</SUB>> ]
+"3294" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>977</SUB>> ]
+"3301" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>978</SUB>> ]
+"3305" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>978</SUB>> ]
+"3312" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>978</SUB>> ]
+"3288" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>977</SUB>> ]
+"3306" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>978</SUB>> ]
+"3289" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>977</SUB>> ]
+"3291" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>977</SUB>> ]
+"3307" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>978</SUB>> ]
+"3309" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>978</SUB>> ]
+"3272" [label = <(METHOD,CallCharMethodA)<SUB>976</SUB>> ]
+"3326" [label = <(METHOD_RETURN,jchar)<SUB>976</SUB>> ]
   "3278" -> "3283" 
   "3278" -> "3296" 
   "3296" -> "3301" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/71-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/71-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/71-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/71-cfg.dot	2023-06-07 19:34:41.607389020 +0330
@@ -1,32 +1,32 @@
 digraph "CallDoubleMethod" {  
-"3334" [label = <(va_start,va_start(ap, mid))<SUB>986</SUB>> ]
-"3338" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>987</SUB>> ]
-"3341" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>988</SUB>> ]
-"3359" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>989</SUB>> ]
-"3378" [label = <(soa,soa(env))<SUB>990</SUB>> ]
-"3381" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>991</SUB>> ]
-"3387" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>992</SUB>> ]
-"3339" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>987</SUB>> ]
-"3382" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>991</SUB>> ]
-"3388" [label = <(GetD,result.GetD())<SUB>992</SUB>> ]
-"3389" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>992</SUB>> ]
-"3345" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>988</SUB>> ]
-"3363" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>989</SUB>> ]
-"3391" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>992</SUB>> ]
-"3346" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>988</SUB>> ]
-"3350" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>988</SUB>> ]
-"3357" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>988</SUB>> ]
-"3364" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>989</SUB>> ]
-"3368" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>989</SUB>> ]
-"3375" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>989</SUB>> ]
-"3351" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>988</SUB>> ]
-"3369" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>989</SUB>> ]
-"3352" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>988</SUB>> ]
-"3354" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>988</SUB>> ]
-"3370" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>989</SUB>> ]
-"3372" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>989</SUB>> ]
-"3328" [label = <(METHOD,CallDoubleMethod)<SUB>984</SUB>> ]
-"3392" [label = <(METHOD_RETURN,jdouble)<SUB>984</SUB>> ]
+"3334" [label = <(va_start,va_start(ap, mid))<SUB>985</SUB>> ]
+"3338" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>986</SUB>> ]
+"3341" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>987</SUB>> ]
+"3359" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>988</SUB>> ]
+"3378" [label = <(soa,soa(env))<SUB>989</SUB>> ]
+"3381" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>990</SUB>> ]
+"3387" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>991</SUB>> ]
+"3339" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>986</SUB>> ]
+"3382" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>990</SUB>> ]
+"3388" [label = <(GetD,result.GetD())<SUB>991</SUB>> ]
+"3389" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>991</SUB>> ]
+"3345" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>987</SUB>> ]
+"3363" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>988</SUB>> ]
+"3391" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>991</SUB>> ]
+"3346" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>987</SUB>> ]
+"3350" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>987</SUB>> ]
+"3357" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>987</SUB>> ]
+"3364" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>988</SUB>> ]
+"3368" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>988</SUB>> ]
+"3375" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>988</SUB>> ]
+"3351" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>987</SUB>> ]
+"3369" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>988</SUB>> ]
+"3352" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>987</SUB>> ]
+"3354" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>987</SUB>> ]
+"3370" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>988</SUB>> ]
+"3372" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>988</SUB>> ]
+"3328" [label = <(METHOD,CallDoubleMethod)<SUB>983</SUB>> ]
+"3392" [label = <(METHOD_RETURN,jdouble)<SUB>983</SUB>> ]
   "3334" -> "3339" 
   "3338" -> "3341" 
   "3341" -> "3346" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/72-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/72-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/72-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/72-cfg.dot	2023-06-07 19:34:41.607389020 +0330
@@ -1,28 +1,28 @@
 digraph "CallDoubleMethodV" {  
-"3400" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>996</SUB>> ]
-"3418" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>997</SUB>> ]
-"3437" [label = <(soa,soa(env))<SUB>998</SUB>> ]
-"3439" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();)<SUB>999</SUB>> ]
-"3440" [label = <(GetD,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD())<SUB>999</SUB>> ]
-"3441" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD)<SUB>999</SUB>> ]
-"3404" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>996</SUB>> ]
-"3422" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>997</SUB>> ]
-"3442" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>999</SUB>> ]
-"3447" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>999</SUB>> ]
-"3405" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>996</SUB>> ]
-"3409" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>996</SUB>> ]
-"3416" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>996</SUB>> ]
-"3423" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>997</SUB>> ]
-"3427" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>997</SUB>> ]
-"3434" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>997</SUB>> ]
-"3410" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>996</SUB>> ]
-"3428" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>997</SUB>> ]
-"3411" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>996</SUB>> ]
-"3413" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>996</SUB>> ]
-"3429" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>997</SUB>> ]
-"3431" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>997</SUB>> ]
-"3394" [label = <(METHOD,CallDoubleMethodV)<SUB>995</SUB>> ]
-"3448" [label = <(METHOD_RETURN,jdouble)<SUB>995</SUB>> ]
+"3400" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>995</SUB>> ]
+"3418" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>996</SUB>> ]
+"3437" [label = <(soa,soa(env))<SUB>997</SUB>> ]
+"3439" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();)<SUB>998</SUB>> ]
+"3440" [label = <(GetD,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD())<SUB>998</SUB>> ]
+"3441" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD)<SUB>998</SUB>> ]
+"3404" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>995</SUB>> ]
+"3422" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>996</SUB>> ]
+"3442" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>998</SUB>> ]
+"3447" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>998</SUB>> ]
+"3405" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>995</SUB>> ]
+"3409" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>995</SUB>> ]
+"3416" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>995</SUB>> ]
+"3423" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>996</SUB>> ]
+"3427" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>996</SUB>> ]
+"3434" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>996</SUB>> ]
+"3410" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>995</SUB>> ]
+"3428" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>996</SUB>> ]
+"3411" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>995</SUB>> ]
+"3413" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>995</SUB>> ]
+"3429" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>996</SUB>> ]
+"3431" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>996</SUB>> ]
+"3394" [label = <(METHOD,CallDoubleMethodV)<SUB>994</SUB>> ]
+"3448" [label = <(METHOD_RETURN,jdouble)<SUB>994</SUB>> ]
   "3400" -> "3405" 
   "3400" -> "3418" 
   "3418" -> "3423" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/73-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/73-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/73-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/73-cfg.dot	2023-06-07 19:34:41.607389020 +0330
@@ -1,28 +1,28 @@
 digraph "CallDoubleMethodA" {  
-"3456" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1003</SUB>> ]
-"3474" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1004</SUB>> ]
-"3493" [label = <(soa,soa(env))<SUB>1005</SUB>> ]
-"3495" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();)<SUB>1006</SUB>> ]
-"3496" [label = <(GetD,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD())<SUB>1006</SUB>> ]
-"3497" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD)<SUB>1006</SUB>> ]
-"3460" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1003</SUB>> ]
-"3478" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1004</SUB>> ]
-"3498" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1006</SUB>> ]
-"3503" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1006</SUB>> ]
-"3461" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1003</SUB>> ]
-"3465" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1003</SUB>> ]
-"3472" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1003</SUB>> ]
-"3479" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1004</SUB>> ]
-"3483" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1004</SUB>> ]
-"3490" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1004</SUB>> ]
-"3466" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1003</SUB>> ]
-"3484" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1004</SUB>> ]
-"3467" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1003</SUB>> ]
-"3469" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1003</SUB>> ]
-"3485" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1004</SUB>> ]
-"3487" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1004</SUB>> ]
-"3450" [label = <(METHOD,CallDoubleMethodA)<SUB>1002</SUB>> ]
-"3504" [label = <(METHOD_RETURN,jdouble)<SUB>1002</SUB>> ]
+"3456" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1002</SUB>> ]
+"3474" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1003</SUB>> ]
+"3493" [label = <(soa,soa(env))<SUB>1004</SUB>> ]
+"3495" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();)<SUB>1005</SUB>> ]
+"3496" [label = <(GetD,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD())<SUB>1005</SUB>> ]
+"3497" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD)<SUB>1005</SUB>> ]
+"3460" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1002</SUB>> ]
+"3478" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1003</SUB>> ]
+"3498" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1005</SUB>> ]
+"3503" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1005</SUB>> ]
+"3461" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1002</SUB>> ]
+"3465" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1002</SUB>> ]
+"3472" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1002</SUB>> ]
+"3479" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1003</SUB>> ]
+"3483" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1003</SUB>> ]
+"3490" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1003</SUB>> ]
+"3466" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1002</SUB>> ]
+"3484" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1003</SUB>> ]
+"3467" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1002</SUB>> ]
+"3469" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1002</SUB>> ]
+"3485" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1003</SUB>> ]
+"3487" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1003</SUB>> ]
+"3450" [label = <(METHOD,CallDoubleMethodA)<SUB>1001</SUB>> ]
+"3504" [label = <(METHOD_RETURN,jdouble)<SUB>1001</SUB>> ]
   "3456" -> "3461" 
   "3456" -> "3474" 
   "3474" -> "3479" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/74-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/74-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/74-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/74-cfg.dot	2023-06-07 19:34:41.607389020 +0330
@@ -1,32 +1,32 @@
 digraph "CallFloatMethod" {  
-"3512" [label = <(va_start,va_start(ap, mid))<SUB>1011</SUB>> ]
-"3516" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1012</SUB>> ]
-"3519" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1013</SUB>> ]
-"3537" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1014</SUB>> ]
-"3556" [label = <(soa,soa(env))<SUB>1015</SUB>> ]
-"3559" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1016</SUB>> ]
-"3565" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1017</SUB>> ]
-"3517" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1012</SUB>> ]
-"3560" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1016</SUB>> ]
-"3566" [label = <(GetF,result.GetF())<SUB>1017</SUB>> ]
-"3567" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1017</SUB>> ]
-"3523" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1013</SUB>> ]
-"3541" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1014</SUB>> ]
-"3569" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1017</SUB>> ]
-"3524" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1013</SUB>> ]
-"3528" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1013</SUB>> ]
-"3535" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1013</SUB>> ]
-"3542" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1014</SUB>> ]
-"3546" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1014</SUB>> ]
-"3553" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1014</SUB>> ]
-"3529" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1013</SUB>> ]
-"3547" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1014</SUB>> ]
-"3530" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1013</SUB>> ]
-"3532" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1013</SUB>> ]
-"3548" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1014</SUB>> ]
-"3550" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1014</SUB>> ]
-"3506" [label = <(METHOD,CallFloatMethod)<SUB>1009</SUB>> ]
-"3570" [label = <(METHOD_RETURN,jfloat)<SUB>1009</SUB>> ]
+"3512" [label = <(va_start,va_start(ap, mid))<SUB>1010</SUB>> ]
+"3516" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1011</SUB>> ]
+"3519" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1012</SUB>> ]
+"3537" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1013</SUB>> ]
+"3556" [label = <(soa,soa(env))<SUB>1014</SUB>> ]
+"3559" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1015</SUB>> ]
+"3565" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1016</SUB>> ]
+"3517" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1011</SUB>> ]
+"3560" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1015</SUB>> ]
+"3566" [label = <(GetF,result.GetF())<SUB>1016</SUB>> ]
+"3567" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1016</SUB>> ]
+"3523" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1012</SUB>> ]
+"3541" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1013</SUB>> ]
+"3569" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1016</SUB>> ]
+"3524" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1012</SUB>> ]
+"3528" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1012</SUB>> ]
+"3535" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1012</SUB>> ]
+"3542" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1013</SUB>> ]
+"3546" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1013</SUB>> ]
+"3553" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1013</SUB>> ]
+"3529" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1012</SUB>> ]
+"3547" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1013</SUB>> ]
+"3530" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1012</SUB>> ]
+"3532" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1012</SUB>> ]
+"3548" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1013</SUB>> ]
+"3550" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1013</SUB>> ]
+"3506" [label = <(METHOD,CallFloatMethod)<SUB>1008</SUB>> ]
+"3570" [label = <(METHOD_RETURN,jfloat)<SUB>1008</SUB>> ]
   "3512" -> "3517" 
   "3516" -> "3519" 
   "3519" -> "3524" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/75-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/75-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/75-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/75-cfg.dot	2023-06-07 19:34:41.607389020 +0330
@@ -1,28 +1,28 @@
 digraph "CallFloatMethodV" {  
-"3578" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1021</SUB>> ]
-"3596" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1022</SUB>> ]
-"3615" [label = <(soa,soa(env))<SUB>1023</SUB>> ]
-"3617" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1024</SUB>> ]
-"3618" [label = <(GetF,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF())<SUB>1024</SUB>> ]
-"3619" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF)<SUB>1024</SUB>> ]
-"3582" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1021</SUB>> ]
-"3600" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1022</SUB>> ]
-"3620" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1024</SUB>> ]
-"3625" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1024</SUB>> ]
-"3583" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1021</SUB>> ]
-"3587" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1021</SUB>> ]
-"3594" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1021</SUB>> ]
-"3601" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1022</SUB>> ]
-"3605" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1022</SUB>> ]
-"3612" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1022</SUB>> ]
-"3588" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1021</SUB>> ]
-"3606" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1022</SUB>> ]
-"3589" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1021</SUB>> ]
-"3591" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1021</SUB>> ]
-"3607" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1022</SUB>> ]
-"3609" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1022</SUB>> ]
-"3572" [label = <(METHOD,CallFloatMethodV)<SUB>1020</SUB>> ]
-"3626" [label = <(METHOD_RETURN,jfloat)<SUB>1020</SUB>> ]
+"3578" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1020</SUB>> ]
+"3596" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1021</SUB>> ]
+"3615" [label = <(soa,soa(env))<SUB>1022</SUB>> ]
+"3617" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1023</SUB>> ]
+"3618" [label = <(GetF,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF())<SUB>1023</SUB>> ]
+"3619" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF)<SUB>1023</SUB>> ]
+"3582" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1020</SUB>> ]
+"3600" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1021</SUB>> ]
+"3620" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1023</SUB>> ]
+"3625" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1023</SUB>> ]
+"3583" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1020</SUB>> ]
+"3587" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1020</SUB>> ]
+"3594" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1020</SUB>> ]
+"3601" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1021</SUB>> ]
+"3605" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1021</SUB>> ]
+"3612" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1021</SUB>> ]
+"3588" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1020</SUB>> ]
+"3606" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1021</SUB>> ]
+"3589" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1020</SUB>> ]
+"3591" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1020</SUB>> ]
+"3607" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1021</SUB>> ]
+"3609" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1021</SUB>> ]
+"3572" [label = <(METHOD,CallFloatMethodV)<SUB>1019</SUB>> ]
+"3626" [label = <(METHOD_RETURN,jfloat)<SUB>1019</SUB>> ]
   "3578" -> "3583" 
   "3578" -> "3596" 
   "3596" -> "3601" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/76-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/76-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/76-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/76-cfg.dot	2023-06-07 19:34:41.607389020 +0330
@@ -1,28 +1,28 @@
 digraph "CallFloatMethodA" {  
-"3634" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1028</SUB>> ]
-"3652" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1029</SUB>> ]
-"3671" [label = <(soa,soa(env))<SUB>1030</SUB>> ]
-"3673" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();)<SUB>1031</SUB>> ]
-"3674" [label = <(GetF,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF())<SUB>1031</SUB>> ]
-"3675" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF)<SUB>1031</SUB>> ]
-"3638" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1028</SUB>> ]
-"3656" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1029</SUB>> ]
-"3676" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1031</SUB>> ]
-"3681" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1031</SUB>> ]
-"3639" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1028</SUB>> ]
-"3643" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1028</SUB>> ]
-"3650" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1028</SUB>> ]
-"3657" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1029</SUB>> ]
-"3661" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1029</SUB>> ]
-"3668" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1029</SUB>> ]
-"3644" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1028</SUB>> ]
-"3662" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1029</SUB>> ]
-"3645" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1028</SUB>> ]
-"3647" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1028</SUB>> ]
-"3663" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1029</SUB>> ]
-"3665" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1029</SUB>> ]
-"3628" [label = <(METHOD,CallFloatMethodA)<SUB>1027</SUB>> ]
-"3682" [label = <(METHOD_RETURN,jfloat)<SUB>1027</SUB>> ]
+"3634" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1027</SUB>> ]
+"3652" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1028</SUB>> ]
+"3671" [label = <(soa,soa(env))<SUB>1029</SUB>> ]
+"3673" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();)<SUB>1030</SUB>> ]
+"3674" [label = <(GetF,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF())<SUB>1030</SUB>> ]
+"3675" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF)<SUB>1030</SUB>> ]
+"3638" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1027</SUB>> ]
+"3656" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1028</SUB>> ]
+"3676" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1030</SUB>> ]
+"3681" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1030</SUB>> ]
+"3639" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1027</SUB>> ]
+"3643" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1027</SUB>> ]
+"3650" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1027</SUB>> ]
+"3657" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1028</SUB>> ]
+"3661" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1028</SUB>> ]
+"3668" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1028</SUB>> ]
+"3644" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1027</SUB>> ]
+"3662" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1028</SUB>> ]
+"3645" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1027</SUB>> ]
+"3647" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1027</SUB>> ]
+"3663" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1028</SUB>> ]
+"3665" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1028</SUB>> ]
+"3628" [label = <(METHOD,CallFloatMethodA)<SUB>1026</SUB>> ]
+"3682" [label = <(METHOD_RETURN,jfloat)<SUB>1026</SUB>> ]
   "3634" -> "3639" 
   "3634" -> "3652" 
   "3652" -> "3657" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/77-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/77-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/77-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/77-cfg.dot	2023-06-07 19:34:41.607389020 +0330
@@ -1,32 +1,32 @@
 digraph "CallIntMethod" {  
-"3690" [label = <(va_start,va_start(ap, mid))<SUB>1036</SUB>> ]
-"3694" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1037</SUB>> ]
-"3697" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1038</SUB>> ]
-"3715" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1039</SUB>> ]
-"3734" [label = <(soa,soa(env))<SUB>1040</SUB>> ]
-"3737" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1041</SUB>> ]
-"3743" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1042</SUB>> ]
-"3695" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1037</SUB>> ]
-"3738" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1041</SUB>> ]
-"3744" [label = <(GetI,result.GetI())<SUB>1042</SUB>> ]
-"3745" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1042</SUB>> ]
-"3701" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1038</SUB>> ]
-"3719" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1039</SUB>> ]
-"3747" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1042</SUB>> ]
-"3702" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1038</SUB>> ]
-"3706" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1038</SUB>> ]
-"3713" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1038</SUB>> ]
-"3720" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1039</SUB>> ]
-"3724" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1039</SUB>> ]
-"3731" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1039</SUB>> ]
-"3707" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1038</SUB>> ]
-"3725" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1039</SUB>> ]
-"3708" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1038</SUB>> ]
-"3710" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1038</SUB>> ]
-"3726" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1039</SUB>> ]
-"3728" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1039</SUB>> ]
-"3684" [label = <(METHOD,CallIntMethod)<SUB>1034</SUB>> ]
-"3748" [label = <(METHOD_RETURN,jint)<SUB>1034</SUB>> ]
+"3690" [label = <(va_start,va_start(ap, mid))<SUB>1035</SUB>> ]
+"3694" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1036</SUB>> ]
+"3697" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1037</SUB>> ]
+"3715" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1038</SUB>> ]
+"3734" [label = <(soa,soa(env))<SUB>1039</SUB>> ]
+"3737" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1040</SUB>> ]
+"3743" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1041</SUB>> ]
+"3695" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1036</SUB>> ]
+"3738" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1040</SUB>> ]
+"3744" [label = <(GetI,result.GetI())<SUB>1041</SUB>> ]
+"3745" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1041</SUB>> ]
+"3701" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1037</SUB>> ]
+"3719" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1038</SUB>> ]
+"3747" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1041</SUB>> ]
+"3702" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1037</SUB>> ]
+"3706" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1037</SUB>> ]
+"3713" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1037</SUB>> ]
+"3720" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1038</SUB>> ]
+"3724" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1038</SUB>> ]
+"3731" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1038</SUB>> ]
+"3707" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1037</SUB>> ]
+"3725" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1038</SUB>> ]
+"3708" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1037</SUB>> ]
+"3710" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1037</SUB>> ]
+"3726" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1038</SUB>> ]
+"3728" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1038</SUB>> ]
+"3684" [label = <(METHOD,CallIntMethod)<SUB>1033</SUB>> ]
+"3748" [label = <(METHOD_RETURN,jint)<SUB>1033</SUB>> ]
   "3690" -> "3695" 
   "3694" -> "3697" 
   "3697" -> "3702" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/78-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/78-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/78-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/78-cfg.dot	2023-06-07 19:34:41.607389020 +0330
@@ -1,28 +1,28 @@
 digraph "CallIntMethodV" {  
-"3756" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1046</SUB>> ]
-"3774" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1047</SUB>> ]
-"3793" [label = <(soa,soa(env))<SUB>1048</SUB>> ]
-"3795" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1049</SUB>> ]
-"3796" [label = <(GetI,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI())<SUB>1049</SUB>> ]
-"3797" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI)<SUB>1049</SUB>> ]
-"3760" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1046</SUB>> ]
-"3778" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1047</SUB>> ]
-"3798" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1049</SUB>> ]
-"3803" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1049</SUB>> ]
-"3761" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1046</SUB>> ]
-"3765" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1046</SUB>> ]
-"3772" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1046</SUB>> ]
-"3779" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1047</SUB>> ]
-"3783" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1047</SUB>> ]
-"3790" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1047</SUB>> ]
-"3766" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1046</SUB>> ]
-"3784" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1047</SUB>> ]
-"3767" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1046</SUB>> ]
-"3769" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1046</SUB>> ]
-"3785" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1047</SUB>> ]
-"3787" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1047</SUB>> ]
-"3750" [label = <(METHOD,CallIntMethodV)<SUB>1045</SUB>> ]
-"3804" [label = <(METHOD_RETURN,jint)<SUB>1045</SUB>> ]
+"3756" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1045</SUB>> ]
+"3774" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1046</SUB>> ]
+"3793" [label = <(soa,soa(env))<SUB>1047</SUB>> ]
+"3795" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1048</SUB>> ]
+"3796" [label = <(GetI,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI())<SUB>1048</SUB>> ]
+"3797" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI)<SUB>1048</SUB>> ]
+"3760" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1045</SUB>> ]
+"3778" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1046</SUB>> ]
+"3798" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1048</SUB>> ]
+"3803" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1048</SUB>> ]
+"3761" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1045</SUB>> ]
+"3765" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1045</SUB>> ]
+"3772" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1045</SUB>> ]
+"3779" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1046</SUB>> ]
+"3783" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1046</SUB>> ]
+"3790" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1046</SUB>> ]
+"3766" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1045</SUB>> ]
+"3784" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1046</SUB>> ]
+"3767" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1045</SUB>> ]
+"3769" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1045</SUB>> ]
+"3785" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1046</SUB>> ]
+"3787" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1046</SUB>> ]
+"3750" [label = <(METHOD,CallIntMethodV)<SUB>1044</SUB>> ]
+"3804" [label = <(METHOD_RETURN,jint)<SUB>1044</SUB>> ]
   "3756" -> "3761" 
   "3756" -> "3774" 
   "3774" -> "3779" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/79-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/79-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/79-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/79-cfg.dot	2023-06-07 19:34:41.607389020 +0330
@@ -1,28 +1,28 @@
 digraph "CallIntMethodA" {  
-"3812" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1053</SUB>> ]
-"3830" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1054</SUB>> ]
-"3849" [label = <(soa,soa(env))<SUB>1055</SUB>> ]
-"3851" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();)<SUB>1056</SUB>> ]
-"3852" [label = <(GetI,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI())<SUB>1056</SUB>> ]
-"3853" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI)<SUB>1056</SUB>> ]
-"3816" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1053</SUB>> ]
-"3834" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1054</SUB>> ]
-"3854" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1056</SUB>> ]
-"3859" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1056</SUB>> ]
-"3817" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1053</SUB>> ]
-"3821" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1053</SUB>> ]
-"3828" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1053</SUB>> ]
-"3835" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1054</SUB>> ]
-"3839" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1054</SUB>> ]
-"3846" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1054</SUB>> ]
-"3822" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1053</SUB>> ]
-"3840" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1054</SUB>> ]
-"3823" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1053</SUB>> ]
-"3825" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1053</SUB>> ]
-"3841" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1054</SUB>> ]
-"3843" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1054</SUB>> ]
-"3806" [label = <(METHOD,CallIntMethodA)<SUB>1052</SUB>> ]
-"3860" [label = <(METHOD_RETURN,jint)<SUB>1052</SUB>> ]
+"3812" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1052</SUB>> ]
+"3830" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1053</SUB>> ]
+"3849" [label = <(soa,soa(env))<SUB>1054</SUB>> ]
+"3851" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();)<SUB>1055</SUB>> ]
+"3852" [label = <(GetI,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI())<SUB>1055</SUB>> ]
+"3853" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI)<SUB>1055</SUB>> ]
+"3816" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1052</SUB>> ]
+"3834" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1053</SUB>> ]
+"3854" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1055</SUB>> ]
+"3859" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1055</SUB>> ]
+"3817" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1052</SUB>> ]
+"3821" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1052</SUB>> ]
+"3828" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1052</SUB>> ]
+"3835" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1053</SUB>> ]
+"3839" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1053</SUB>> ]
+"3846" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1053</SUB>> ]
+"3822" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1052</SUB>> ]
+"3840" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1053</SUB>> ]
+"3823" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1052</SUB>> ]
+"3825" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1052</SUB>> ]
+"3841" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1053</SUB>> ]
+"3843" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1053</SUB>> ]
+"3806" [label = <(METHOD,CallIntMethodA)<SUB>1051</SUB>> ]
+"3860" [label = <(METHOD_RETURN,jint)<SUB>1051</SUB>> ]
   "3812" -> "3817" 
   "3812" -> "3830" 
   "3830" -> "3835" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/8-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/8-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/8-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/8-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,72 +1,72 @@
 digraph "VisitModifiedUtf8Chars" {  
-"58" [label = <(DCHECK_LE,DCHECK_LE(byte_count, strlen(utf8)))<SUB>94</SUB>> ]
-"63" [label = <(&lt;operator&gt;.assignment,len = 0)<SUB>95</SUB>> ]
-"67" [label = <(&lt;operator&gt;.assignment,* end = utf8 + byte_count)<SUB>96</SUB>> ]
-"223" [label = <(RETURN,return len;,return len;)<SUB>154</SUB>> ]
-"60" [label = <(strlen,strlen(utf8))<SUB>94</SUB>> ]
-"69" [label = <(&lt;operator&gt;.addition,utf8 + byte_count)<SUB>96</SUB>> ]
-"73" [label = <(&lt;operator&gt;.notEquals,utf8 != end)<SUB>97</SUB>> ]
-"78" [label = <(&lt;operator&gt;.assignment,ic = *utf8)<SUB>98</SUB>> ]
-"101" [label = <(&lt;operator&gt;.assignment,is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>106</SUB>> ]
-"214" [label = <(good,good(utf8, 4u))<SUB>150</SUB>> ]
-"217" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 4u)<SUB>151</SUB>> ]
-"220" [label = <(&lt;operator&gt;.assignmentPlus,len += 2u)<SUB>152</SUB>> ]
-"80" [label = <(&lt;operator&gt;.indirection,*utf8)<SUB>98</SUB>> ]
-"83" [label = <(LIKELY,LIKELY((ic &amp; 0x80) == 0))<SUB>99</SUB>> ]
-"103" [label = <(METHOD_REF,ANY anonymous_lambda_8 (),is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>106</SUB>> ]
-"105" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x20) == 0)<SUB>112</SUB>> ]
-"152" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x10) == 0)<SUB>128</SUB>> ]
-"199" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 4u)<SUB>147</SUB>> ]
-"84" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x80) == 0)<SUB>99</SUB>> ]
-"90" [label = <(good,good(utf8, 1u))<SUB>101</SUB>> ]
-"93" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 1u)<SUB>102</SUB>> ]
-"96" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>103</SUB>> ]
-"106" [label = <(&lt;operator&gt;.and,ic &amp; 0x20)<SUB>112</SUB>> ]
-"144" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 2u)<SUB>124</SUB>> ]
-"147" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>125</SUB>> ]
-"153" [label = <(&lt;operator&gt;.and,ic &amp; 0x10)<SUB>128</SUB>> ]
-"191" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 3u)<SUB>140</SUB>> ]
-"194" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>141</SUB>> ]
-"200" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>147</SUB>> ]
-"207" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>148</SUB>> ]
-"85" [label = <(&lt;operator&gt;.and,ic &amp; 0x80)<SUB>99</SUB>> ]
-"112" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 2u)<SUB>114</SUB>> ]
-"128" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>117</SUB>> ]
-"159" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 3u)<SUB>130</SUB>> ]
-"175" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>133</SUB>> ]
-"201" [label = <(UNKNOWN,size_t,size_t)<SUB>147</SUB>> ]
-"202" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>147</SUB>> ]
-"208" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>148</SUB>> ]
-"113" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>114</SUB>> ]
-"120" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>115</SUB>> ]
-"129" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>117</SUB>> ]
-"132" [label = <(is_ascii,is_ascii())<SUB>117</SUB>> ]
-"160" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>130</SUB>> ]
-"167" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>131</SUB>> ]
-"176" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>133</SUB>> ]
-"179" [label = <(is_ascii,is_ascii())<SUB>133</SUB>> ]
-"209" [label = <(bad,bad())<SUB>148</SUB>> ]
-"211" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>148</SUB>> ]
-"114" [label = <(UNKNOWN,size_t,size_t)<SUB>114</SUB>> ]
-"115" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>114</SUB>> ]
-"121" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>115</SUB>> ]
-"131" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>117</SUB>> ]
-"135" [label = <(bad,bad())<SUB>118</SUB>> ]
-"141" [label = <(good,good(utf8, 2u))<SUB>122</SUB>> ]
-"161" [label = <(UNKNOWN,size_t,size_t)<SUB>130</SUB>> ]
-"162" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>130</SUB>> ]
-"168" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>131</SUB>> ]
-"178" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>133</SUB>> ]
-"182" [label = <(bad,bad())<SUB>134</SUB>> ]
-"188" [label = <(good,good(utf8, 3u))<SUB>138</SUB>> ]
-"122" [label = <(bad,bad())<SUB>115</SUB>> ]
-"124" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>115</SUB>> ]
-"137" [label = <(RETURN,return 0u;,return 0u;)<SUB>119</SUB>> ]
-"169" [label = <(bad,bad())<SUB>131</SUB>> ]
-"171" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>131</SUB>> ]
-"184" [label = <(RETURN,return 0u;,return 0u;)<SUB>135</SUB>> ]
-"52" [label = <(METHOD,VisitModifiedUtf8Chars)<SUB>93</SUB>> ]
-"225" [label = <(METHOD_RETURN,size_t)<SUB>93</SUB>> ]
+"58" [label = <(DCHECK_LE,DCHECK_LE(byte_count, strlen(utf8)))<SUB>93</SUB>> ]
+"63" [label = <(&lt;operator&gt;.assignment,len = 0)<SUB>94</SUB>> ]
+"67" [label = <(&lt;operator&gt;.assignment,* end = utf8 + byte_count)<SUB>95</SUB>> ]
+"223" [label = <(RETURN,return len;,return len;)<SUB>153</SUB>> ]
+"60" [label = <(strlen,strlen(utf8))<SUB>93</SUB>> ]
+"69" [label = <(&lt;operator&gt;.addition,utf8 + byte_count)<SUB>95</SUB>> ]
+"73" [label = <(&lt;operator&gt;.notEquals,utf8 != end)<SUB>96</SUB>> ]
+"78" [label = <(&lt;operator&gt;.assignment,ic = *utf8)<SUB>97</SUB>> ]
+"101" [label = <(&lt;operator&gt;.assignment,is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>105</SUB>> ]
+"214" [label = <(good,good(utf8, 4u))<SUB>149</SUB>> ]
+"217" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 4u)<SUB>150</SUB>> ]
+"220" [label = <(&lt;operator&gt;.assignmentPlus,len += 2u)<SUB>151</SUB>> ]
+"80" [label = <(&lt;operator&gt;.indirection,*utf8)<SUB>97</SUB>> ]
+"83" [label = <(LIKELY,LIKELY((ic &amp; 0x80) == 0))<SUB>98</SUB>> ]
+"103" [label = <(METHOD_REF,ANY anonymous_lambda_8 (),is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>105</SUB>> ]
+"105" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x20) == 0)<SUB>111</SUB>> ]
+"152" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x10) == 0)<SUB>127</SUB>> ]
+"199" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 4u)<SUB>146</SUB>> ]
+"84" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x80) == 0)<SUB>98</SUB>> ]
+"90" [label = <(good,good(utf8, 1u))<SUB>100</SUB>> ]
+"93" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 1u)<SUB>101</SUB>> ]
+"96" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>102</SUB>> ]
+"106" [label = <(&lt;operator&gt;.and,ic &amp; 0x20)<SUB>111</SUB>> ]
+"144" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 2u)<SUB>123</SUB>> ]
+"147" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>124</SUB>> ]
+"153" [label = <(&lt;operator&gt;.and,ic &amp; 0x10)<SUB>127</SUB>> ]
+"191" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 3u)<SUB>139</SUB>> ]
+"194" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>140</SUB>> ]
+"200" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>146</SUB>> ]
+"207" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>147</SUB>> ]
+"85" [label = <(&lt;operator&gt;.and,ic &amp; 0x80)<SUB>98</SUB>> ]
+"112" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 2u)<SUB>113</SUB>> ]
+"128" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>116</SUB>> ]
+"159" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 3u)<SUB>129</SUB>> ]
+"175" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>132</SUB>> ]
+"201" [label = <(UNKNOWN,size_t,size_t)<SUB>146</SUB>> ]
+"202" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>146</SUB>> ]
+"208" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>147</SUB>> ]
+"113" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>113</SUB>> ]
+"120" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>114</SUB>> ]
+"129" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>116</SUB>> ]
+"132" [label = <(is_ascii,is_ascii())<SUB>116</SUB>> ]
+"160" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>129</SUB>> ]
+"167" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>130</SUB>> ]
+"176" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>132</SUB>> ]
+"179" [label = <(is_ascii,is_ascii())<SUB>132</SUB>> ]
+"209" [label = <(bad,bad())<SUB>147</SUB>> ]
+"211" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>147</SUB>> ]
+"114" [label = <(UNKNOWN,size_t,size_t)<SUB>113</SUB>> ]
+"115" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>113</SUB>> ]
+"121" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>114</SUB>> ]
+"131" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>116</SUB>> ]
+"135" [label = <(bad,bad())<SUB>117</SUB>> ]
+"141" [label = <(good,good(utf8, 2u))<SUB>121</SUB>> ]
+"161" [label = <(UNKNOWN,size_t,size_t)<SUB>129</SUB>> ]
+"162" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>129</SUB>> ]
+"168" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>130</SUB>> ]
+"178" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>132</SUB>> ]
+"182" [label = <(bad,bad())<SUB>133</SUB>> ]
+"188" [label = <(good,good(utf8, 3u))<SUB>137</SUB>> ]
+"122" [label = <(bad,bad())<SUB>114</SUB>> ]
+"124" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>114</SUB>> ]
+"137" [label = <(RETURN,return 0u;,return 0u;)<SUB>118</SUB>> ]
+"169" [label = <(bad,bad())<SUB>130</SUB>> ]
+"171" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>130</SUB>> ]
+"184" [label = <(RETURN,return 0u;,return 0u;)<SUB>134</SUB>> ]
+"52" [label = <(METHOD,VisitModifiedUtf8Chars)<SUB>92</SUB>> ]
+"225" [label = <(METHOD_RETURN,size_t)<SUB>92</SUB>> ]
   "58" -> "63" 
   "63" -> "69" 
   "67" -> "73" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/80-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/80-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/80-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/80-cfg.dot	2023-06-07 19:34:41.607389020 +0330
@@ -1,32 +1,32 @@
 digraph "CallLongMethod" {  
-"3868" [label = <(va_start,va_start(ap, mid))<SUB>1061</SUB>> ]
-"3872" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1062</SUB>> ]
-"3875" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1063</SUB>> ]
-"3893" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1064</SUB>> ]
-"3912" [label = <(soa,soa(env))<SUB>1065</SUB>> ]
-"3915" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1066</SUB>> ]
-"3921" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1067</SUB>> ]
-"3873" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1062</SUB>> ]
-"3916" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1066</SUB>> ]
-"3922" [label = <(GetJ,result.GetJ())<SUB>1067</SUB>> ]
-"3923" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1067</SUB>> ]
-"3879" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1063</SUB>> ]
-"3897" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1064</SUB>> ]
-"3925" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1067</SUB>> ]
-"3880" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1063</SUB>> ]
-"3884" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1063</SUB>> ]
-"3891" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1063</SUB>> ]
-"3898" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1064</SUB>> ]
-"3902" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1064</SUB>> ]
-"3909" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1064</SUB>> ]
-"3885" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1063</SUB>> ]
-"3903" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1064</SUB>> ]
-"3886" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1063</SUB>> ]
-"3888" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1063</SUB>> ]
-"3904" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1064</SUB>> ]
-"3906" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1064</SUB>> ]
-"3862" [label = <(METHOD,CallLongMethod)<SUB>1059</SUB>> ]
-"3926" [label = <(METHOD_RETURN,jlong)<SUB>1059</SUB>> ]
+"3868" [label = <(va_start,va_start(ap, mid))<SUB>1060</SUB>> ]
+"3872" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1061</SUB>> ]
+"3875" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1062</SUB>> ]
+"3893" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1063</SUB>> ]
+"3912" [label = <(soa,soa(env))<SUB>1064</SUB>> ]
+"3915" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1065</SUB>> ]
+"3921" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1066</SUB>> ]
+"3873" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1061</SUB>> ]
+"3916" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1065</SUB>> ]
+"3922" [label = <(GetJ,result.GetJ())<SUB>1066</SUB>> ]
+"3923" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1066</SUB>> ]
+"3879" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1062</SUB>> ]
+"3897" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1063</SUB>> ]
+"3925" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1066</SUB>> ]
+"3880" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1062</SUB>> ]
+"3884" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1062</SUB>> ]
+"3891" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1062</SUB>> ]
+"3898" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1063</SUB>> ]
+"3902" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1063</SUB>> ]
+"3909" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1063</SUB>> ]
+"3885" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1062</SUB>> ]
+"3903" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1063</SUB>> ]
+"3886" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1062</SUB>> ]
+"3888" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1062</SUB>> ]
+"3904" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1063</SUB>> ]
+"3906" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1063</SUB>> ]
+"3862" [label = <(METHOD,CallLongMethod)<SUB>1058</SUB>> ]
+"3926" [label = <(METHOD_RETURN,jlong)<SUB>1058</SUB>> ]
   "3868" -> "3873" 
   "3872" -> "3875" 
   "3875" -> "3880" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/81-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/81-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/81-cfg.dot	2023-06-07 19:34:35.087389620 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/81-cfg.dot	2023-06-07 19:34:41.617389019 +0330
@@ -1,28 +1,28 @@
 digraph "CallLongMethodV" {  
-"3934" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1071</SUB>> ]
-"3952" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1072</SUB>> ]
-"3971" [label = <(soa,soa(env))<SUB>1073</SUB>> ]
-"3973" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1074</SUB>> ]
-"3974" [label = <(GetJ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1074</SUB>> ]
-"3975" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1074</SUB>> ]
-"3938" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1071</SUB>> ]
-"3956" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1072</SUB>> ]
-"3976" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1074</SUB>> ]
-"3981" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1074</SUB>> ]
-"3939" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1071</SUB>> ]
-"3943" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1071</SUB>> ]
-"3950" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1071</SUB>> ]
-"3957" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1072</SUB>> ]
-"3961" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1072</SUB>> ]
-"3968" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1072</SUB>> ]
-"3944" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1071</SUB>> ]
-"3962" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1072</SUB>> ]
-"3945" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1071</SUB>> ]
-"3947" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1071</SUB>> ]
-"3963" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1072</SUB>> ]
-"3965" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1072</SUB>> ]
-"3928" [label = <(METHOD,CallLongMethodV)<SUB>1070</SUB>> ]
-"3982" [label = <(METHOD_RETURN,jlong)<SUB>1070</SUB>> ]
+"3934" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1070</SUB>> ]
+"3952" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1071</SUB>> ]
+"3971" [label = <(soa,soa(env))<SUB>1072</SUB>> ]
+"3973" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1073</SUB>> ]
+"3974" [label = <(GetJ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1073</SUB>> ]
+"3975" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1073</SUB>> ]
+"3938" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1070</SUB>> ]
+"3956" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1071</SUB>> ]
+"3976" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1073</SUB>> ]
+"3981" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1073</SUB>> ]
+"3939" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1070</SUB>> ]
+"3943" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1070</SUB>> ]
+"3950" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1070</SUB>> ]
+"3957" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1071</SUB>> ]
+"3961" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1071</SUB>> ]
+"3968" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1071</SUB>> ]
+"3944" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1070</SUB>> ]
+"3962" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1071</SUB>> ]
+"3945" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1070</SUB>> ]
+"3947" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1070</SUB>> ]
+"3963" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1071</SUB>> ]
+"3965" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1071</SUB>> ]
+"3928" [label = <(METHOD,CallLongMethodV)<SUB>1069</SUB>> ]
+"3982" [label = <(METHOD_RETURN,jlong)<SUB>1069</SUB>> ]
   "3934" -> "3939" 
   "3934" -> "3952" 
   "3952" -> "3957" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/82-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/82-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/82-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/82-cfg.dot	2023-06-07 19:34:41.617389019 +0330
@@ -1,28 +1,28 @@
 digraph "CallLongMethodA" {  
-"3990" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1078</SUB>> ]
-"4008" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1079</SUB>> ]
-"4027" [label = <(soa,soa(env))<SUB>1080</SUB>> ]
-"4029" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();)<SUB>1081</SUB>> ]
-"4030" [label = <(GetJ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ())<SUB>1081</SUB>> ]
-"4031" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ)<SUB>1081</SUB>> ]
-"3994" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1078</SUB>> ]
-"4012" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1079</SUB>> ]
-"4032" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1081</SUB>> ]
-"4037" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1081</SUB>> ]
-"3995" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1078</SUB>> ]
-"3999" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1078</SUB>> ]
-"4006" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1078</SUB>> ]
-"4013" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1079</SUB>> ]
-"4017" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1079</SUB>> ]
-"4024" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1079</SUB>> ]
-"4000" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1078</SUB>> ]
-"4018" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1079</SUB>> ]
-"4001" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1078</SUB>> ]
-"4003" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1078</SUB>> ]
-"4019" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1079</SUB>> ]
-"4021" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1079</SUB>> ]
-"3984" [label = <(METHOD,CallLongMethodA)<SUB>1077</SUB>> ]
-"4038" [label = <(METHOD_RETURN,jlong)<SUB>1077</SUB>> ]
+"3990" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1077</SUB>> ]
+"4008" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1078</SUB>> ]
+"4027" [label = <(soa,soa(env))<SUB>1079</SUB>> ]
+"4029" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();)<SUB>1080</SUB>> ]
+"4030" [label = <(GetJ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ())<SUB>1080</SUB>> ]
+"4031" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ)<SUB>1080</SUB>> ]
+"3994" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1077</SUB>> ]
+"4012" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1078</SUB>> ]
+"4032" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1080</SUB>> ]
+"4037" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1080</SUB>> ]
+"3995" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1077</SUB>> ]
+"3999" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1077</SUB>> ]
+"4006" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1077</SUB>> ]
+"4013" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1078</SUB>> ]
+"4017" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1078</SUB>> ]
+"4024" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1078</SUB>> ]
+"4000" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1077</SUB>> ]
+"4018" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1078</SUB>> ]
+"4001" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1077</SUB>> ]
+"4003" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1077</SUB>> ]
+"4019" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1078</SUB>> ]
+"4021" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1078</SUB>> ]
+"3984" [label = <(METHOD,CallLongMethodA)<SUB>1076</SUB>> ]
+"4038" [label = <(METHOD_RETURN,jlong)<SUB>1076</SUB>> ]
   "3990" -> "3995" 
   "3990" -> "4008" 
   "4008" -> "4013" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/83-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/83-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/83-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/83-cfg.dot	2023-06-07 19:34:41.617389019 +0330
@@ -1,32 +1,32 @@
 digraph "CallShortMethod" {  
-"4046" [label = <(va_start,va_start(ap, mid))<SUB>1086</SUB>> ]
-"4050" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1087</SUB>> ]
-"4053" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1088</SUB>> ]
-"4071" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1089</SUB>> ]
-"4090" [label = <(soa,soa(env))<SUB>1090</SUB>> ]
-"4093" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1091</SUB>> ]
-"4099" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1092</SUB>> ]
-"4051" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1087</SUB>> ]
-"4094" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1091</SUB>> ]
-"4100" [label = <(GetS,result.GetS())<SUB>1092</SUB>> ]
-"4101" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1092</SUB>> ]
-"4057" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1088</SUB>> ]
-"4075" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1089</SUB>> ]
-"4103" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1092</SUB>> ]
-"4058" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1088</SUB>> ]
-"4062" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1088</SUB>> ]
-"4069" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1088</SUB>> ]
-"4076" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1089</SUB>> ]
-"4080" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1089</SUB>> ]
-"4087" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1089</SUB>> ]
-"4063" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1088</SUB>> ]
-"4081" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1089</SUB>> ]
-"4064" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1088</SUB>> ]
-"4066" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1088</SUB>> ]
-"4082" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1089</SUB>> ]
-"4084" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1089</SUB>> ]
-"4040" [label = <(METHOD,CallShortMethod)<SUB>1084</SUB>> ]
-"4104" [label = <(METHOD_RETURN,jshort)<SUB>1084</SUB>> ]
+"4046" [label = <(va_start,va_start(ap, mid))<SUB>1085</SUB>> ]
+"4050" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1086</SUB>> ]
+"4053" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1087</SUB>> ]
+"4071" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1088</SUB>> ]
+"4090" [label = <(soa,soa(env))<SUB>1089</SUB>> ]
+"4093" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1090</SUB>> ]
+"4099" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1091</SUB>> ]
+"4051" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1086</SUB>> ]
+"4094" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1090</SUB>> ]
+"4100" [label = <(GetS,result.GetS())<SUB>1091</SUB>> ]
+"4101" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1091</SUB>> ]
+"4057" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1087</SUB>> ]
+"4075" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1088</SUB>> ]
+"4103" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1091</SUB>> ]
+"4058" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1087</SUB>> ]
+"4062" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1087</SUB>> ]
+"4069" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1087</SUB>> ]
+"4076" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1088</SUB>> ]
+"4080" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1088</SUB>> ]
+"4087" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1088</SUB>> ]
+"4063" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1087</SUB>> ]
+"4081" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1088</SUB>> ]
+"4064" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1087</SUB>> ]
+"4066" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1087</SUB>> ]
+"4082" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1088</SUB>> ]
+"4084" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1088</SUB>> ]
+"4040" [label = <(METHOD,CallShortMethod)<SUB>1083</SUB>> ]
+"4104" [label = <(METHOD_RETURN,jshort)<SUB>1083</SUB>> ]
   "4046" -> "4051" 
   "4050" -> "4053" 
   "4053" -> "4058" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/84-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/84-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/84-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/84-cfg.dot	2023-06-07 19:34:41.617389019 +0330
@@ -1,28 +1,28 @@
 digraph "CallShortMethodV" {  
-"4112" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1096</SUB>> ]
-"4130" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1097</SUB>> ]
-"4149" [label = <(soa,soa(env))<SUB>1098</SUB>> ]
-"4151" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1099</SUB>> ]
-"4152" [label = <(GetS,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS())<SUB>1099</SUB>> ]
-"4153" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS)<SUB>1099</SUB>> ]
-"4116" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1096</SUB>> ]
-"4134" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1097</SUB>> ]
-"4154" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1099</SUB>> ]
-"4159" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1099</SUB>> ]
-"4117" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1096</SUB>> ]
-"4121" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1096</SUB>> ]
-"4128" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1096</SUB>> ]
-"4135" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1097</SUB>> ]
-"4139" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1097</SUB>> ]
-"4146" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1097</SUB>> ]
-"4122" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1096</SUB>> ]
-"4140" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1097</SUB>> ]
-"4123" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1096</SUB>> ]
-"4125" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1096</SUB>> ]
-"4141" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1097</SUB>> ]
-"4143" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1097</SUB>> ]
-"4106" [label = <(METHOD,CallShortMethodV)<SUB>1095</SUB>> ]
-"4160" [label = <(METHOD_RETURN,jshort)<SUB>1095</SUB>> ]
+"4112" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1095</SUB>> ]
+"4130" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1096</SUB>> ]
+"4149" [label = <(soa,soa(env))<SUB>1097</SUB>> ]
+"4151" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1098</SUB>> ]
+"4152" [label = <(GetS,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS())<SUB>1098</SUB>> ]
+"4153" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS)<SUB>1098</SUB>> ]
+"4116" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1095</SUB>> ]
+"4134" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1096</SUB>> ]
+"4154" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1098</SUB>> ]
+"4159" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1098</SUB>> ]
+"4117" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1095</SUB>> ]
+"4121" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1095</SUB>> ]
+"4128" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1095</SUB>> ]
+"4135" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1096</SUB>> ]
+"4139" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1096</SUB>> ]
+"4146" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1096</SUB>> ]
+"4122" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1095</SUB>> ]
+"4140" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1096</SUB>> ]
+"4123" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1095</SUB>> ]
+"4125" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1095</SUB>> ]
+"4141" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1096</SUB>> ]
+"4143" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1096</SUB>> ]
+"4106" [label = <(METHOD,CallShortMethodV)<SUB>1094</SUB>> ]
+"4160" [label = <(METHOD_RETURN,jshort)<SUB>1094</SUB>> ]
   "4112" -> "4117" 
   "4112" -> "4130" 
   "4130" -> "4135" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/85-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/85-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/85-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/85-cfg.dot	2023-06-07 19:34:41.617389019 +0330
@@ -1,28 +1,28 @@
 digraph "CallShortMethodA" {  
-"4168" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1103</SUB>> ]
-"4186" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1104</SUB>> ]
-"4205" [label = <(soa,soa(env))<SUB>1105</SUB>> ]
-"4207" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();)<SUB>1106</SUB>> ]
-"4208" [label = <(GetS,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS())<SUB>1106</SUB>> ]
-"4209" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS)<SUB>1106</SUB>> ]
-"4172" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1103</SUB>> ]
-"4190" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1104</SUB>> ]
-"4210" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1106</SUB>> ]
-"4215" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1106</SUB>> ]
-"4173" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1103</SUB>> ]
-"4177" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1103</SUB>> ]
-"4184" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1103</SUB>> ]
-"4191" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1104</SUB>> ]
-"4195" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1104</SUB>> ]
-"4202" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1104</SUB>> ]
-"4178" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1103</SUB>> ]
-"4196" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1104</SUB>> ]
-"4179" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1103</SUB>> ]
-"4181" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1103</SUB>> ]
-"4197" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1104</SUB>> ]
-"4199" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1104</SUB>> ]
-"4162" [label = <(METHOD,CallShortMethodA)<SUB>1102</SUB>> ]
-"4216" [label = <(METHOD_RETURN,jshort)<SUB>1102</SUB>> ]
+"4168" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1102</SUB>> ]
+"4186" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1103</SUB>> ]
+"4205" [label = <(soa,soa(env))<SUB>1104</SUB>> ]
+"4207" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();)<SUB>1105</SUB>> ]
+"4208" [label = <(GetS,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS())<SUB>1105</SUB>> ]
+"4209" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS)<SUB>1105</SUB>> ]
+"4172" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1102</SUB>> ]
+"4190" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1103</SUB>> ]
+"4210" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1105</SUB>> ]
+"4215" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1105</SUB>> ]
+"4173" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1102</SUB>> ]
+"4177" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1102</SUB>> ]
+"4184" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1102</SUB>> ]
+"4191" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1103</SUB>> ]
+"4195" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1103</SUB>> ]
+"4202" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1103</SUB>> ]
+"4178" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1102</SUB>> ]
+"4196" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1103</SUB>> ]
+"4179" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1102</SUB>> ]
+"4181" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1102</SUB>> ]
+"4197" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1103</SUB>> ]
+"4199" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1103</SUB>> ]
+"4162" [label = <(METHOD,CallShortMethodA)<SUB>1101</SUB>> ]
+"4216" [label = <(METHOD_RETURN,jshort)<SUB>1101</SUB>> ]
   "4168" -> "4173" 
   "4168" -> "4186" 
   "4186" -> "4191" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/86-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/86-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/86-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/86-cfg.dot	2023-06-07 19:34:41.617389019 +0330
@@ -1,27 +1,27 @@
 digraph "CallVoidMethod" {  
-"4224" [label = <(va_start,va_start(ap, mid))<SUB>1111</SUB>> ]
-"4228" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1112</SUB>> ]
-"4231" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1113</SUB>> ]
-"4248" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1114</SUB>> ]
-"4266" [label = <(soa,soa(env))<SUB>1115</SUB>> ]
-"4268" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1116</SUB>> ]
-"4229" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1112</SUB>> ]
-"4235" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1113</SUB>> ]
-"4252" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1114</SUB>> ]
-"4236" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1113</SUB>> ]
-"4240" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1113</SUB>> ]
-"4247" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1113</SUB>> ]
-"4253" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1114</SUB>> ]
-"4257" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1114</SUB>> ]
-"4264" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1114</SUB>> ]
-"4241" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1113</SUB>> ]
-"4258" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1114</SUB>> ]
-"4242" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1113</SUB>> ]
-"4244" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1113</SUB>> ]
-"4259" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1114</SUB>> ]
-"4261" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1114</SUB>> ]
-"4218" [label = <(METHOD,CallVoidMethod)<SUB>1109</SUB>> ]
-"4273" [label = <(METHOD_RETURN,void)<SUB>1109</SUB>> ]
+"4224" [label = <(va_start,va_start(ap, mid))<SUB>1110</SUB>> ]
+"4228" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1111</SUB>> ]
+"4231" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1112</SUB>> ]
+"4248" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1113</SUB>> ]
+"4266" [label = <(soa,soa(env))<SUB>1114</SUB>> ]
+"4268" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1115</SUB>> ]
+"4229" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1111</SUB>> ]
+"4235" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1112</SUB>> ]
+"4252" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1113</SUB>> ]
+"4236" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1112</SUB>> ]
+"4240" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1112</SUB>> ]
+"4247" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1112</SUB>> ]
+"4253" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1113</SUB>> ]
+"4257" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1113</SUB>> ]
+"4264" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1113</SUB>> ]
+"4241" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1112</SUB>> ]
+"4258" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1113</SUB>> ]
+"4242" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1112</SUB>> ]
+"4244" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1112</SUB>> ]
+"4259" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1113</SUB>> ]
+"4261" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1113</SUB>> ]
+"4218" [label = <(METHOD,CallVoidMethod)<SUB>1108</SUB>> ]
+"4273" [label = <(METHOD_RETURN,void)<SUB>1108</SUB>> ]
   "4224" -> "4229" 
   "4228" -> "4231" 
   "4231" -> "4236" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/87-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/87-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/87-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/87-cfg.dot	2023-06-07 19:34:41.617389019 +0330
@@ -1,24 +1,24 @@
 digraph "CallVoidMethodV" {  
-"4281" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1120</SUB>> ]
-"4298" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1121</SUB>> ]
-"4316" [label = <(soa,soa(env))<SUB>1122</SUB>> ]
-"4318" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1123</SUB>> ]
-"4285" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1120</SUB>> ]
-"4302" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1121</SUB>> ]
-"4286" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1120</SUB>> ]
-"4290" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1120</SUB>> ]
-"4297" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1120</SUB>> ]
-"4303" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1121</SUB>> ]
-"4307" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1121</SUB>> ]
-"4314" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1121</SUB>> ]
-"4291" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1120</SUB>> ]
-"4308" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1121</SUB>> ]
-"4292" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1120</SUB>> ]
-"4294" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1120</SUB>> ]
-"4309" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1121</SUB>> ]
-"4311" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1121</SUB>> ]
-"4275" [label = <(METHOD,CallVoidMethodV)<SUB>1119</SUB>> ]
-"4323" [label = <(METHOD_RETURN,void)<SUB>1119</SUB>> ]
+"4281" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1119</SUB>> ]
+"4298" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1120</SUB>> ]
+"4316" [label = <(soa,soa(env))<SUB>1121</SUB>> ]
+"4318" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1122</SUB>> ]
+"4285" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1119</SUB>> ]
+"4302" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1120</SUB>> ]
+"4286" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1119</SUB>> ]
+"4290" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1119</SUB>> ]
+"4297" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1119</SUB>> ]
+"4303" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1120</SUB>> ]
+"4307" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1120</SUB>> ]
+"4314" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1120</SUB>> ]
+"4291" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1119</SUB>> ]
+"4308" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1120</SUB>> ]
+"4292" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1119</SUB>> ]
+"4294" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1119</SUB>> ]
+"4309" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1120</SUB>> ]
+"4311" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1120</SUB>> ]
+"4275" [label = <(METHOD,CallVoidMethodV)<SUB>1118</SUB>> ]
+"4323" [label = <(METHOD_RETURN,void)<SUB>1118</SUB>> ]
   "4281" -> "4286" 
   "4281" -> "4298" 
   "4298" -> "4303" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/88-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/88-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/88-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/88-cfg.dot	2023-06-07 19:34:41.617389019 +0330
@@ -1,24 +1,24 @@
 digraph "CallVoidMethodA" {  
-"4331" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1127</SUB>> ]
-"4348" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1128</SUB>> ]
-"4366" [label = <(soa,soa(env))<SUB>1129</SUB>> ]
-"4368" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1130</SUB>> ]
-"4335" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1127</SUB>> ]
-"4352" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1128</SUB>> ]
-"4336" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1127</SUB>> ]
-"4340" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1127</SUB>> ]
-"4347" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1127</SUB>> ]
-"4353" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1128</SUB>> ]
-"4357" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1128</SUB>> ]
-"4364" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1128</SUB>> ]
-"4341" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1127</SUB>> ]
-"4358" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1128</SUB>> ]
-"4342" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1127</SUB>> ]
-"4344" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1127</SUB>> ]
-"4359" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1128</SUB>> ]
-"4361" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1128</SUB>> ]
-"4325" [label = <(METHOD,CallVoidMethodA)<SUB>1126</SUB>> ]
-"4373" [label = <(METHOD_RETURN,void)<SUB>1126</SUB>> ]
+"4331" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1126</SUB>> ]
+"4348" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1127</SUB>> ]
+"4366" [label = <(soa,soa(env))<SUB>1128</SUB>> ]
+"4368" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1129</SUB>> ]
+"4335" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1126</SUB>> ]
+"4352" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1127</SUB>> ]
+"4336" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1126</SUB>> ]
+"4340" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1126</SUB>> ]
+"4347" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1126</SUB>> ]
+"4353" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1127</SUB>> ]
+"4357" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1127</SUB>> ]
+"4364" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1127</SUB>> ]
+"4341" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1126</SUB>> ]
+"4358" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1127</SUB>> ]
+"4342" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1126</SUB>> ]
+"4344" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1126</SUB>> ]
+"4359" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1127</SUB>> ]
+"4361" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1127</SUB>> ]
+"4325" [label = <(METHOD,CallVoidMethodA)<SUB>1125</SUB>> ]
+"4373" [label = <(METHOD_RETURN,void)<SUB>1125</SUB>> ]
   "4331" -> "4336" 
   "4331" -> "4348" 
   "4348" -> "4353" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/89-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/89-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/89-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/89-cfg.dot	2023-06-07 19:34:41.617389019 +0330
@@ -1,37 +1,37 @@
 digraph "CallNonvirtualObjectMethod" {  
-"4382" [label = <(va_start,va_start(ap, mid))<SUB>1135</SUB>> ]
-"4386" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1136</SUB>> ]
-"4389" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1137</SUB>> ]
-"4407" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1138</SUB>> ]
-"4426" [label = <(soa,soa(env))<SUB>1139</SUB>> ]
-"4429" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1140</SUB>> ]
-"4436" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1141</SUB>> ]
-"4448" [label = <(RETURN,return local_result;,return local_result;)<SUB>1142</SUB>> ]
-"4387" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1136</SUB>> ]
-"4430" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1140</SUB>> ]
-"4438" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1141</SUB>> ]
-"4439" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1141</SUB>> ]
-"4444" [label = <(GetL,result.GetL())<SUB>1141</SUB>> ]
-"4393" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1137</SUB>> ]
-"4411" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1138</SUB>> ]
-"4440" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1141</SUB>> ]
-"4445" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1141</SUB>> ]
-"4394" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1137</SUB>> ]
-"4398" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1137</SUB>> ]
-"4405" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1137</SUB>> ]
-"4412" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1138</SUB>> ]
-"4416" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1138</SUB>> ]
-"4423" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1138</SUB>> ]
-"4442" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1141</SUB>> ]
-"4447" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1141</SUB>> ]
-"4399" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1137</SUB>> ]
-"4417" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1138</SUB>> ]
-"4400" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1137</SUB>> ]
-"4402" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1137</SUB>> ]
-"4418" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1138</SUB>> ]
-"4420" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1138</SUB>> ]
-"4375" [label = <(METHOD,CallNonvirtualObjectMethod)<SUB>1133</SUB>> ]
-"4450" [label = <(METHOD_RETURN,jobject)<SUB>1133</SUB>> ]
+"4382" [label = <(va_start,va_start(ap, mid))<SUB>1134</SUB>> ]
+"4386" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1135</SUB>> ]
+"4389" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1136</SUB>> ]
+"4407" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1137</SUB>> ]
+"4426" [label = <(soa,soa(env))<SUB>1138</SUB>> ]
+"4429" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1139</SUB>> ]
+"4436" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1140</SUB>> ]
+"4448" [label = <(RETURN,return local_result;,return local_result;)<SUB>1141</SUB>> ]
+"4387" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1135</SUB>> ]
+"4430" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1139</SUB>> ]
+"4438" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1140</SUB>> ]
+"4439" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1140</SUB>> ]
+"4444" [label = <(GetL,result.GetL())<SUB>1140</SUB>> ]
+"4393" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1136</SUB>> ]
+"4411" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1137</SUB>> ]
+"4440" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1140</SUB>> ]
+"4445" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1140</SUB>> ]
+"4394" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1136</SUB>> ]
+"4398" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1136</SUB>> ]
+"4405" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1136</SUB>> ]
+"4412" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1137</SUB>> ]
+"4416" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1137</SUB>> ]
+"4423" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1137</SUB>> ]
+"4442" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1140</SUB>> ]
+"4447" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1140</SUB>> ]
+"4399" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1136</SUB>> ]
+"4417" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1137</SUB>> ]
+"4400" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1136</SUB>> ]
+"4402" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1136</SUB>> ]
+"4418" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1137</SUB>> ]
+"4420" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1137</SUB>> ]
+"4375" [label = <(METHOD,CallNonvirtualObjectMethod)<SUB>1132</SUB>> ]
+"4450" [label = <(METHOD_RETURN,jobject)<SUB>1132</SUB>> ]
   "4382" -> "4387" 
   "4386" -> "4389" 
   "4389" -> "4394" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/9-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/9-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/9-cfg.dot	2023-06-07 19:34:35.037389626 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/9-cfg.dot	2023-06-07 19:34:41.557389023 +0330
@@ -1,5 +1,5 @@
 digraph "NotifySetObjectField" {  
-"233" [label = <(METHOD,NotifySetObjectField)<SUB>182</SUB>> ]
-"238" [label = <(METHOD_RETURN,void)<SUB>182</SUB>> ]
+"233" [label = <(METHOD,NotifySetObjectField)<SUB>181</SUB>> ]
+"238" [label = <(METHOD_RETURN,void)<SUB>181</SUB>> ]
   "233" -> "238" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/90-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/90-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/90-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/90-cfg.dot	2023-06-07 19:34:41.617389019 +0330
@@ -1,33 +1,33 @@
 digraph "CallNonvirtualObjectMethodV" {  
-"4459" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1147</SUB>> ]
-"4477" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1148</SUB>> ]
-"4496" [label = <(soa,soa(env))<SUB>1149</SUB>> ]
-"4499" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, args)))<SUB>1150</SUB>> ]
-"4505" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1151</SUB>> ]
-"4500" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1150</SUB>> ]
-"4506" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1151</SUB>> ]
-"4507" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1151</SUB>> ]
-"4512" [label = <(GetL,result.GetL())<SUB>1151</SUB>> ]
-"4463" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1147</SUB>> ]
-"4481" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1148</SUB>> ]
-"4508" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1151</SUB>> ]
-"4513" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1151</SUB>> ]
-"4464" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1147</SUB>> ]
-"4468" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1147</SUB>> ]
-"4475" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1147</SUB>> ]
-"4482" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1148</SUB>> ]
-"4486" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1148</SUB>> ]
-"4493" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1148</SUB>> ]
-"4510" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1151</SUB>> ]
-"4515" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1151</SUB>> ]
-"4469" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1147</SUB>> ]
-"4487" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1148</SUB>> ]
-"4470" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1147</SUB>> ]
-"4472" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1147</SUB>> ]
-"4488" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1148</SUB>> ]
-"4490" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1148</SUB>> ]
-"4452" [label = <(METHOD,CallNonvirtualObjectMethodV)<SUB>1145</SUB>> ]
-"4516" [label = <(METHOD_RETURN,jobject)<SUB>1145</SUB>> ]
+"4459" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1146</SUB>> ]
+"4477" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1147</SUB>> ]
+"4496" [label = <(soa,soa(env))<SUB>1148</SUB>> ]
+"4499" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, args)))<SUB>1149</SUB>> ]
+"4505" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1150</SUB>> ]
+"4500" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1149</SUB>> ]
+"4506" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1150</SUB>> ]
+"4507" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1150</SUB>> ]
+"4512" [label = <(GetL,result.GetL())<SUB>1150</SUB>> ]
+"4463" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1146</SUB>> ]
+"4481" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1147</SUB>> ]
+"4508" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1150</SUB>> ]
+"4513" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1150</SUB>> ]
+"4464" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1146</SUB>> ]
+"4468" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1146</SUB>> ]
+"4475" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1146</SUB>> ]
+"4482" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1147</SUB>> ]
+"4486" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1147</SUB>> ]
+"4493" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1147</SUB>> ]
+"4510" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1150</SUB>> ]
+"4515" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1150</SUB>> ]
+"4469" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1146</SUB>> ]
+"4487" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1147</SUB>> ]
+"4470" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1146</SUB>> ]
+"4472" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1146</SUB>> ]
+"4488" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1147</SUB>> ]
+"4490" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1147</SUB>> ]
+"4452" [label = <(METHOD,CallNonvirtualObjectMethodV)<SUB>1144</SUB>> ]
+"4516" [label = <(METHOD_RETURN,jobject)<SUB>1144</SUB>> ]
   "4459" -> "4464" 
   "4459" -> "4477" 
   "4477" -> "4482" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/91-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/91-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/91-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/91-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,33 +1,33 @@
 digraph "CallNonvirtualObjectMethodA" {  
-"4525" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1156</SUB>> ]
-"4543" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1157</SUB>> ]
-"4562" [label = <(soa,soa(env))<SUB>1158</SUB>> ]
-"4565" [label = <(result,result(InvokeWithJValues(soa, obj, mid, args)))<SUB>1159</SUB>> ]
-"4571" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1160</SUB>> ]
-"4566" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1159</SUB>> ]
-"4572" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1160</SUB>> ]
-"4573" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1160</SUB>> ]
-"4578" [label = <(GetL,result.GetL())<SUB>1160</SUB>> ]
-"4529" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1156</SUB>> ]
-"4547" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1157</SUB>> ]
-"4574" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1160</SUB>> ]
-"4579" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1160</SUB>> ]
-"4530" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1156</SUB>> ]
-"4534" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1156</SUB>> ]
-"4541" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1156</SUB>> ]
-"4548" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1157</SUB>> ]
-"4552" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1157</SUB>> ]
-"4559" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1157</SUB>> ]
-"4576" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1160</SUB>> ]
-"4581" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1160</SUB>> ]
-"4535" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1156</SUB>> ]
-"4553" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1157</SUB>> ]
-"4536" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1156</SUB>> ]
-"4538" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1156</SUB>> ]
-"4554" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1157</SUB>> ]
-"4556" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1157</SUB>> ]
-"4518" [label = <(METHOD,CallNonvirtualObjectMethodA)<SUB>1154</SUB>> ]
-"4582" [label = <(METHOD_RETURN,jobject)<SUB>1154</SUB>> ]
+"4525" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1155</SUB>> ]
+"4543" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1156</SUB>> ]
+"4562" [label = <(soa,soa(env))<SUB>1157</SUB>> ]
+"4565" [label = <(result,result(InvokeWithJValues(soa, obj, mid, args)))<SUB>1158</SUB>> ]
+"4571" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1159</SUB>> ]
+"4566" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1158</SUB>> ]
+"4572" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1159</SUB>> ]
+"4573" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1159</SUB>> ]
+"4578" [label = <(GetL,result.GetL())<SUB>1159</SUB>> ]
+"4529" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1155</SUB>> ]
+"4547" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1156</SUB>> ]
+"4574" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1159</SUB>> ]
+"4579" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1159</SUB>> ]
+"4530" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1155</SUB>> ]
+"4534" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1155</SUB>> ]
+"4541" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1155</SUB>> ]
+"4548" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1156</SUB>> ]
+"4552" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1156</SUB>> ]
+"4559" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1156</SUB>> ]
+"4576" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1159</SUB>> ]
+"4581" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1159</SUB>> ]
+"4535" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1155</SUB>> ]
+"4553" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1156</SUB>> ]
+"4536" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1155</SUB>> ]
+"4538" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1155</SUB>> ]
+"4554" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1156</SUB>> ]
+"4556" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1156</SUB>> ]
+"4518" [label = <(METHOD,CallNonvirtualObjectMethodA)<SUB>1153</SUB>> ]
+"4582" [label = <(METHOD_RETURN,jobject)<SUB>1153</SUB>> ]
   "4525" -> "4530" 
   "4525" -> "4543" 
   "4543" -> "4548" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/92-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/92-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/92-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/92-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualBooleanMethod" {  
-"4591" [label = <(va_start,va_start(ap, mid))<SUB>1166</SUB>> ]
-"4595" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1167</SUB>> ]
-"4598" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1168</SUB>> ]
-"4616" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1169</SUB>> ]
-"4635" [label = <(soa,soa(env))<SUB>1170</SUB>> ]
-"4638" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1171</SUB>> ]
-"4644" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1172</SUB>> ]
-"4596" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1167</SUB>> ]
-"4639" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1171</SUB>> ]
-"4645" [label = <(GetZ,result.GetZ())<SUB>1172</SUB>> ]
-"4646" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1172</SUB>> ]
-"4602" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1168</SUB>> ]
-"4620" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1169</SUB>> ]
-"4648" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1172</SUB>> ]
-"4603" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1168</SUB>> ]
-"4607" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1168</SUB>> ]
-"4614" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1168</SUB>> ]
-"4621" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1169</SUB>> ]
-"4625" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1169</SUB>> ]
-"4632" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1169</SUB>> ]
-"4608" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1168</SUB>> ]
-"4626" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1169</SUB>> ]
-"4609" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1168</SUB>> ]
-"4611" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1168</SUB>> ]
-"4627" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1169</SUB>> ]
-"4629" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1169</SUB>> ]
-"4584" [label = <(METHOD,CallNonvirtualBooleanMethod)<SUB>1163</SUB>> ]
-"4649" [label = <(METHOD_RETURN,jboolean)<SUB>1163</SUB>> ]
+"4591" [label = <(va_start,va_start(ap, mid))<SUB>1165</SUB>> ]
+"4595" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1166</SUB>> ]
+"4598" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1167</SUB>> ]
+"4616" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1168</SUB>> ]
+"4635" [label = <(soa,soa(env))<SUB>1169</SUB>> ]
+"4638" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1170</SUB>> ]
+"4644" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1171</SUB>> ]
+"4596" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1166</SUB>> ]
+"4639" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1170</SUB>> ]
+"4645" [label = <(GetZ,result.GetZ())<SUB>1171</SUB>> ]
+"4646" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1171</SUB>> ]
+"4602" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1167</SUB>> ]
+"4620" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1168</SUB>> ]
+"4648" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1171</SUB>> ]
+"4603" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1167</SUB>> ]
+"4607" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1167</SUB>> ]
+"4614" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1167</SUB>> ]
+"4621" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1168</SUB>> ]
+"4625" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1168</SUB>> ]
+"4632" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1168</SUB>> ]
+"4608" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1167</SUB>> ]
+"4626" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1168</SUB>> ]
+"4609" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1167</SUB>> ]
+"4611" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1167</SUB>> ]
+"4627" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1168</SUB>> ]
+"4629" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1168</SUB>> ]
+"4584" [label = <(METHOD,CallNonvirtualBooleanMethod)<SUB>1162</SUB>> ]
+"4649" [label = <(METHOD_RETURN,jboolean)<SUB>1162</SUB>> ]
   "4591" -> "4596" 
   "4595" -> "4598" 
   "4598" -> "4603" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/93-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/93-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/93-cfg.dot	2023-06-07 19:34:35.097389621 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/93-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualBooleanMethodV" {  
-"4658" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1177</SUB>> ]
-"4676" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1178</SUB>> ]
-"4695" [label = <(soa,soa(env))<SUB>1179</SUB>> ]
-"4697" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>1180</SUB>> ]
-"4698" [label = <(GetZ,InvokeWithVarArgs(soa, obj, mid, args).GetZ())<SUB>1180</SUB>> ]
-"4699" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetZ)<SUB>1180</SUB>> ]
-"4662" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1177</SUB>> ]
-"4680" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1178</SUB>> ]
-"4700" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1180</SUB>> ]
-"4705" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1180</SUB>> ]
-"4663" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1177</SUB>> ]
-"4667" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1177</SUB>> ]
-"4674" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1177</SUB>> ]
-"4681" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1178</SUB>> ]
-"4685" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1178</SUB>> ]
-"4692" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1178</SUB>> ]
-"4668" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1177</SUB>> ]
-"4686" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1178</SUB>> ]
-"4669" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1177</SUB>> ]
-"4671" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1177</SUB>> ]
-"4687" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1178</SUB>> ]
-"4689" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1178</SUB>> ]
-"4651" [label = <(METHOD,CallNonvirtualBooleanMethodV)<SUB>1175</SUB>> ]
-"4706" [label = <(METHOD_RETURN,jboolean)<SUB>1175</SUB>> ]
+"4658" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1176</SUB>> ]
+"4676" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1177</SUB>> ]
+"4695" [label = <(soa,soa(env))<SUB>1178</SUB>> ]
+"4697" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>1179</SUB>> ]
+"4698" [label = <(GetZ,InvokeWithVarArgs(soa, obj, mid, args).GetZ())<SUB>1179</SUB>> ]
+"4699" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetZ)<SUB>1179</SUB>> ]
+"4662" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1176</SUB>> ]
+"4680" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1177</SUB>> ]
+"4700" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1179</SUB>> ]
+"4705" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1179</SUB>> ]
+"4663" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1176</SUB>> ]
+"4667" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1176</SUB>> ]
+"4674" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1176</SUB>> ]
+"4681" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1177</SUB>> ]
+"4685" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1177</SUB>> ]
+"4692" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1177</SUB>> ]
+"4668" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1176</SUB>> ]
+"4686" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1177</SUB>> ]
+"4669" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1176</SUB>> ]
+"4671" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1176</SUB>> ]
+"4687" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1177</SUB>> ]
+"4689" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1177</SUB>> ]
+"4651" [label = <(METHOD,CallNonvirtualBooleanMethodV)<SUB>1174</SUB>> ]
+"4706" [label = <(METHOD_RETURN,jboolean)<SUB>1174</SUB>> ]
   "4658" -> "4663" 
   "4658" -> "4676" 
   "4676" -> "4681" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/94-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/94-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/94-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/94-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualBooleanMethodA" {  
-"4715" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1185</SUB>> ]
-"4733" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1186</SUB>> ]
-"4752" [label = <(soa,soa(env))<SUB>1187</SUB>> ]
-"4754" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetZ();,return InvokeWithJValues(soa, obj, mid, args).GetZ();)<SUB>1188</SUB>> ]
-"4755" [label = <(GetZ,InvokeWithJValues(soa, obj, mid, args).GetZ())<SUB>1188</SUB>> ]
-"4756" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetZ)<SUB>1188</SUB>> ]
-"4719" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1185</SUB>> ]
-"4737" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1186</SUB>> ]
-"4757" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1188</SUB>> ]
-"4762" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1188</SUB>> ]
-"4720" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1185</SUB>> ]
-"4724" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1185</SUB>> ]
-"4731" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1185</SUB>> ]
-"4738" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1186</SUB>> ]
-"4742" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1186</SUB>> ]
-"4749" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1186</SUB>> ]
-"4725" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1185</SUB>> ]
-"4743" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1186</SUB>> ]
-"4726" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1185</SUB>> ]
-"4728" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1185</SUB>> ]
-"4744" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1186</SUB>> ]
-"4746" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1186</SUB>> ]
-"4708" [label = <(METHOD,CallNonvirtualBooleanMethodA)<SUB>1183</SUB>> ]
-"4763" [label = <(METHOD_RETURN,jboolean)<SUB>1183</SUB>> ]
+"4715" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1184</SUB>> ]
+"4733" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1185</SUB>> ]
+"4752" [label = <(soa,soa(env))<SUB>1186</SUB>> ]
+"4754" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetZ();,return InvokeWithJValues(soa, obj, mid, args).GetZ();)<SUB>1187</SUB>> ]
+"4755" [label = <(GetZ,InvokeWithJValues(soa, obj, mid, args).GetZ())<SUB>1187</SUB>> ]
+"4756" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetZ)<SUB>1187</SUB>> ]
+"4719" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1184</SUB>> ]
+"4737" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1185</SUB>> ]
+"4757" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1187</SUB>> ]
+"4762" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1187</SUB>> ]
+"4720" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1184</SUB>> ]
+"4724" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1184</SUB>> ]
+"4731" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1184</SUB>> ]
+"4738" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1185</SUB>> ]
+"4742" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1185</SUB>> ]
+"4749" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1185</SUB>> ]
+"4725" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1184</SUB>> ]
+"4743" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1185</SUB>> ]
+"4726" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1184</SUB>> ]
+"4728" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1184</SUB>> ]
+"4744" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1185</SUB>> ]
+"4746" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1185</SUB>> ]
+"4708" [label = <(METHOD,CallNonvirtualBooleanMethodA)<SUB>1182</SUB>> ]
+"4763" [label = <(METHOD_RETURN,jboolean)<SUB>1182</SUB>> ]
   "4715" -> "4720" 
   "4715" -> "4733" 
   "4733" -> "4738" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/95-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/95-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/95-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/95-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualByteMethod" {  
-"4772" [label = <(va_start,va_start(ap, mid))<SUB>1193</SUB>> ]
-"4776" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1194</SUB>> ]
-"4779" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1195</SUB>> ]
-"4797" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1196</SUB>> ]
-"4816" [label = <(soa,soa(env))<SUB>1197</SUB>> ]
-"4819" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1198</SUB>> ]
-"4825" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1199</SUB>> ]
-"4777" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1194</SUB>> ]
-"4820" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1198</SUB>> ]
-"4826" [label = <(GetB,result.GetB())<SUB>1199</SUB>> ]
-"4827" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1199</SUB>> ]
-"4783" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1195</SUB>> ]
-"4801" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1196</SUB>> ]
-"4829" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1199</SUB>> ]
-"4784" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1195</SUB>> ]
-"4788" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1195</SUB>> ]
-"4795" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1195</SUB>> ]
-"4802" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1196</SUB>> ]
-"4806" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1196</SUB>> ]
-"4813" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1196</SUB>> ]
-"4789" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1195</SUB>> ]
-"4807" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1196</SUB>> ]
-"4790" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1195</SUB>> ]
-"4792" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1195</SUB>> ]
-"4808" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1196</SUB>> ]
-"4810" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1196</SUB>> ]
-"4765" [label = <(METHOD,CallNonvirtualByteMethod)<SUB>1191</SUB>> ]
-"4830" [label = <(METHOD_RETURN,jbyte)<SUB>1191</SUB>> ]
+"4772" [label = <(va_start,va_start(ap, mid))<SUB>1192</SUB>> ]
+"4776" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1193</SUB>> ]
+"4779" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1194</SUB>> ]
+"4797" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1195</SUB>> ]
+"4816" [label = <(soa,soa(env))<SUB>1196</SUB>> ]
+"4819" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1197</SUB>> ]
+"4825" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1198</SUB>> ]
+"4777" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1193</SUB>> ]
+"4820" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1197</SUB>> ]
+"4826" [label = <(GetB,result.GetB())<SUB>1198</SUB>> ]
+"4827" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1198</SUB>> ]
+"4783" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1194</SUB>> ]
+"4801" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1195</SUB>> ]
+"4829" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1198</SUB>> ]
+"4784" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1194</SUB>> ]
+"4788" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1194</SUB>> ]
+"4795" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1194</SUB>> ]
+"4802" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1195</SUB>> ]
+"4806" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1195</SUB>> ]
+"4813" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1195</SUB>> ]
+"4789" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1194</SUB>> ]
+"4807" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1195</SUB>> ]
+"4790" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1194</SUB>> ]
+"4792" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1194</SUB>> ]
+"4808" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1195</SUB>> ]
+"4810" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1195</SUB>> ]
+"4765" [label = <(METHOD,CallNonvirtualByteMethod)<SUB>1190</SUB>> ]
+"4830" [label = <(METHOD_RETURN,jbyte)<SUB>1190</SUB>> ]
   "4772" -> "4777" 
   "4776" -> "4779" 
   "4779" -> "4784" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/96-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/96-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/96-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/96-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualByteMethodV" {  
-"4839" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1204</SUB>> ]
-"4857" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1205</SUB>> ]
-"4876" [label = <(soa,soa(env))<SUB>1206</SUB>> ]
-"4878" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetB();,return InvokeWithVarArgs(soa, obj, mid, args).GetB();)<SUB>1207</SUB>> ]
-"4879" [label = <(GetB,InvokeWithVarArgs(soa, obj, mid, args).GetB())<SUB>1207</SUB>> ]
-"4880" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetB)<SUB>1207</SUB>> ]
-"4843" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1204</SUB>> ]
-"4861" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1205</SUB>> ]
-"4881" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1207</SUB>> ]
-"4886" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1207</SUB>> ]
-"4844" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1204</SUB>> ]
-"4848" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1204</SUB>> ]
-"4855" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1204</SUB>> ]
-"4862" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1205</SUB>> ]
-"4866" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1205</SUB>> ]
-"4873" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1205</SUB>> ]
-"4849" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1204</SUB>> ]
-"4867" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1205</SUB>> ]
-"4850" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1204</SUB>> ]
-"4852" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1204</SUB>> ]
-"4868" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1205</SUB>> ]
-"4870" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1205</SUB>> ]
-"4832" [label = <(METHOD,CallNonvirtualByteMethodV)<SUB>1202</SUB>> ]
-"4887" [label = <(METHOD_RETURN,jbyte)<SUB>1202</SUB>> ]
+"4839" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1203</SUB>> ]
+"4857" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1204</SUB>> ]
+"4876" [label = <(soa,soa(env))<SUB>1205</SUB>> ]
+"4878" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetB();,return InvokeWithVarArgs(soa, obj, mid, args).GetB();)<SUB>1206</SUB>> ]
+"4879" [label = <(GetB,InvokeWithVarArgs(soa, obj, mid, args).GetB())<SUB>1206</SUB>> ]
+"4880" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetB)<SUB>1206</SUB>> ]
+"4843" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1203</SUB>> ]
+"4861" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1204</SUB>> ]
+"4881" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1206</SUB>> ]
+"4886" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1206</SUB>> ]
+"4844" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1203</SUB>> ]
+"4848" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1203</SUB>> ]
+"4855" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1203</SUB>> ]
+"4862" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1204</SUB>> ]
+"4866" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1204</SUB>> ]
+"4873" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1204</SUB>> ]
+"4849" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1203</SUB>> ]
+"4867" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1204</SUB>> ]
+"4850" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1203</SUB>> ]
+"4852" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1203</SUB>> ]
+"4868" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1204</SUB>> ]
+"4870" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1204</SUB>> ]
+"4832" [label = <(METHOD,CallNonvirtualByteMethodV)<SUB>1201</SUB>> ]
+"4887" [label = <(METHOD_RETURN,jbyte)<SUB>1201</SUB>> ]
   "4839" -> "4844" 
   "4839" -> "4857" 
   "4857" -> "4862" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/97-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/97-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/97-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/97-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualByteMethodA" {  
-"4896" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1212</SUB>> ]
-"4914" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1213</SUB>> ]
-"4933" [label = <(soa,soa(env))<SUB>1214</SUB>> ]
-"4935" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetB();,return InvokeWithJValues(soa, obj, mid, args).GetB();)<SUB>1215</SUB>> ]
-"4936" [label = <(GetB,InvokeWithJValues(soa, obj, mid, args).GetB())<SUB>1215</SUB>> ]
-"4937" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetB)<SUB>1215</SUB>> ]
-"4900" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1212</SUB>> ]
-"4918" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1213</SUB>> ]
-"4938" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1215</SUB>> ]
-"4943" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1215</SUB>> ]
-"4901" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1212</SUB>> ]
-"4905" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1212</SUB>> ]
-"4912" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1212</SUB>> ]
-"4919" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1213</SUB>> ]
-"4923" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1213</SUB>> ]
-"4930" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1213</SUB>> ]
-"4906" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1212</SUB>> ]
-"4924" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1213</SUB>> ]
-"4907" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1212</SUB>> ]
-"4909" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1212</SUB>> ]
-"4925" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1213</SUB>> ]
-"4927" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1213</SUB>> ]
-"4889" [label = <(METHOD,CallNonvirtualByteMethodA)<SUB>1210</SUB>> ]
-"4944" [label = <(METHOD_RETURN,jbyte)<SUB>1210</SUB>> ]
+"4896" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1211</SUB>> ]
+"4914" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1212</SUB>> ]
+"4933" [label = <(soa,soa(env))<SUB>1213</SUB>> ]
+"4935" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetB();,return InvokeWithJValues(soa, obj, mid, args).GetB();)<SUB>1214</SUB>> ]
+"4936" [label = <(GetB,InvokeWithJValues(soa, obj, mid, args).GetB())<SUB>1214</SUB>> ]
+"4937" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetB)<SUB>1214</SUB>> ]
+"4900" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1211</SUB>> ]
+"4918" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1212</SUB>> ]
+"4938" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1214</SUB>> ]
+"4943" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1214</SUB>> ]
+"4901" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1211</SUB>> ]
+"4905" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1211</SUB>> ]
+"4912" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1211</SUB>> ]
+"4919" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1212</SUB>> ]
+"4923" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1212</SUB>> ]
+"4930" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1212</SUB>> ]
+"4906" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1211</SUB>> ]
+"4924" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1212</SUB>> ]
+"4907" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1211</SUB>> ]
+"4909" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1211</SUB>> ]
+"4925" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1212</SUB>> ]
+"4927" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1212</SUB>> ]
+"4889" [label = <(METHOD,CallNonvirtualByteMethodA)<SUB>1209</SUB>> ]
+"4944" [label = <(METHOD_RETURN,jbyte)<SUB>1209</SUB>> ]
   "4896" -> "4901" 
   "4896" -> "4914" 
   "4914" -> "4919" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/98-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/98-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/98-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/98-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualCharMethod" {  
-"4953" [label = <(va_start,va_start(ap, mid))<SUB>1220</SUB>> ]
-"4957" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1221</SUB>> ]
-"4960" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1222</SUB>> ]
-"4978" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1223</SUB>> ]
-"4997" [label = <(soa,soa(env))<SUB>1224</SUB>> ]
-"5000" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1225</SUB>> ]
-"5006" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1226</SUB>> ]
-"4958" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1221</SUB>> ]
-"5001" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1225</SUB>> ]
-"5007" [label = <(GetC,result.GetC())<SUB>1226</SUB>> ]
-"5008" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1226</SUB>> ]
-"4964" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1222</SUB>> ]
-"4982" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1223</SUB>> ]
-"5010" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1226</SUB>> ]
-"4965" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1222</SUB>> ]
-"4969" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1222</SUB>> ]
-"4976" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1222</SUB>> ]
-"4983" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1223</SUB>> ]
-"4987" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1223</SUB>> ]
-"4994" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1223</SUB>> ]
-"4970" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1222</SUB>> ]
-"4988" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1223</SUB>> ]
-"4971" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1222</SUB>> ]
-"4973" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1222</SUB>> ]
-"4989" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1223</SUB>> ]
-"4991" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1223</SUB>> ]
-"4946" [label = <(METHOD,CallNonvirtualCharMethod)<SUB>1218</SUB>> ]
-"5011" [label = <(METHOD_RETURN,jchar)<SUB>1218</SUB>> ]
+"4953" [label = <(va_start,va_start(ap, mid))<SUB>1219</SUB>> ]
+"4957" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1220</SUB>> ]
+"4960" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1221</SUB>> ]
+"4978" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1222</SUB>> ]
+"4997" [label = <(soa,soa(env))<SUB>1223</SUB>> ]
+"5000" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1224</SUB>> ]
+"5006" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1225</SUB>> ]
+"4958" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1220</SUB>> ]
+"5001" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1224</SUB>> ]
+"5007" [label = <(GetC,result.GetC())<SUB>1225</SUB>> ]
+"5008" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1225</SUB>> ]
+"4964" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1221</SUB>> ]
+"4982" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1222</SUB>> ]
+"5010" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1225</SUB>> ]
+"4965" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1221</SUB>> ]
+"4969" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1221</SUB>> ]
+"4976" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1221</SUB>> ]
+"4983" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1222</SUB>> ]
+"4987" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1222</SUB>> ]
+"4994" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1222</SUB>> ]
+"4970" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1221</SUB>> ]
+"4988" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1222</SUB>> ]
+"4971" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1221</SUB>> ]
+"4973" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1221</SUB>> ]
+"4989" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1222</SUB>> ]
+"4991" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1222</SUB>> ]
+"4946" [label = <(METHOD,CallNonvirtualCharMethod)<SUB>1217</SUB>> ]
+"5011" [label = <(METHOD_RETURN,jchar)<SUB>1217</SUB>> ]
   "4953" -> "4958" 
   "4957" -> "4960" 
   "4960" -> "4965" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/99-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/99-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/secure/out/99-cfg.dot	2023-06-07 19:34:35.107389619 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_3/vulnerable/out/99-cfg.dot	2023-06-07 19:34:41.627389016 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualCharMethodV" {  
-"5020" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1231</SUB>> ]
-"5038" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1232</SUB>> ]
-"5057" [label = <(soa,soa(env))<SUB>1233</SUB>> ]
-"5059" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetC();,return InvokeWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1234</SUB>> ]
-"5060" [label = <(GetC,InvokeWithVarArgs(soa, obj, mid, args).GetC())<SUB>1234</SUB>> ]
-"5061" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetC)<SUB>1234</SUB>> ]
-"5024" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1231</SUB>> ]
-"5042" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1232</SUB>> ]
-"5062" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1234</SUB>> ]
-"5067" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1234</SUB>> ]
-"5025" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1231</SUB>> ]
-"5029" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1231</SUB>> ]
-"5036" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1231</SUB>> ]
-"5043" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1232</SUB>> ]
-"5047" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1232</SUB>> ]
-"5054" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1232</SUB>> ]
-"5030" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1231</SUB>> ]
-"5048" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1232</SUB>> ]
-"5031" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1231</SUB>> ]
-"5033" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1231</SUB>> ]
-"5049" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1232</SUB>> ]
-"5051" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1232</SUB>> ]
-"5013" [label = <(METHOD,CallNonvirtualCharMethodV)<SUB>1229</SUB>> ]
-"5068" [label = <(METHOD_RETURN,jchar)<SUB>1229</SUB>> ]
+"5020" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1230</SUB>> ]
+"5038" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1231</SUB>> ]
+"5057" [label = <(soa,soa(env))<SUB>1232</SUB>> ]
+"5059" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetC();,return InvokeWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1233</SUB>> ]
+"5060" [label = <(GetC,InvokeWithVarArgs(soa, obj, mid, args).GetC())<SUB>1233</SUB>> ]
+"5061" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetC)<SUB>1233</SUB>> ]
+"5024" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1230</SUB>> ]
+"5042" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1231</SUB>> ]
+"5062" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1233</SUB>> ]
+"5067" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1233</SUB>> ]
+"5025" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1230</SUB>> ]
+"5029" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1230</SUB>> ]
+"5036" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1230</SUB>> ]
+"5043" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1231</SUB>> ]
+"5047" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1231</SUB>> ]
+"5054" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1231</SUB>> ]
+"5030" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1230</SUB>> ]
+"5048" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1231</SUB>> ]
+"5031" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1230</SUB>> ]
+"5033" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1230</SUB>> ]
+"5049" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1231</SUB>> ]
+"5051" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1231</SUB>> ]
+"5013" [label = <(METHOD,CallNonvirtualCharMethodV)<SUB>1228</SUB>> ]
+"5068" [label = <(METHOD_RETURN,jchar)<SUB>1228</SUB>> ]
   "5020" -> "5025" 
   "5020" -> "5038" 
   "5038" -> "5043" 

diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/0-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/0-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/0-cfg.dot	2023-06-07 19:31:27.017407676 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/0-cfg.dot	2023-06-07 19:31:31.497407276 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;global&gt;" {  
 "5" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"5608" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
-  "5" -> "5608" 
+"5603" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+  "5" -> "5603" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/10-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/10-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/10-cfg.dot	2023-06-07 19:31:27.087407672 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/10-cfg.dot	2023-06-07 19:31:31.567407272 +0330
@@ -1,450 +1,450 @@
 digraph "WriteMBRData" {  
-"1150" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>377</SUB>> ]
-"1153" [label = <(&lt;operator&gt;.assignment,moreLogicals = 0)<SUB>377</SUB>> ]
-"1157" [label = <(&lt;operator&gt;.assignment,extFirstLBA = 0)<SUB>378</SUB>> ]
-"1162" [label = <(&lt;operator&gt;.assignment,allOK = CreateExtended())<SUB>382</SUB>> ]
-"1233" [label = <(&lt;operator&gt;.assignment,allOK = allOK &amp;&amp; WriteMBRData(tempMBR, theDisk, 0))<SUB>397</SUB>> ]
-"1241" [label = <(&lt;operator&gt;.assignment,tempMBR.diskSignature = 0)<SUB>400</SUB>> ]
-"1316" [label = <(&lt;operator&gt;.assignment,partNum = FindNextInUse(4))<SUB>410</SUB>> ]
-"1320" [label = <(&lt;operator&gt;.assignment,writeEbrTo = (uint64_t) extFirstLBA)<SUB>411</SUB>> ]
-"1524" [label = <(DeleteExtendedParts,DeleteExtendedParts())<SUB>436</SUB>> ]
-"1525" [label = <(RETURN,return allOK;,return allOK;)<SUB>437</SUB>> ]
-"1164" [label = <(CreateExtended,CreateExtended())<SUB>382</SUB>> ]
-"1235" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; WriteMBRData(tempMBR, theDisk, 0))<SUB>397</SUB>> ]
-"1242" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.diskSignature)<SUB>400</SUB>> ]
-"1251" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>401</SUB>> ]
-"1254" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>401</SUB>> ]
-"1318" [label = <(FindNextInUse,FindNextInUse(4))<SUB>410</SUB>> ]
-"1322" [label = <(&lt;operator&gt;.cast,(uint64_t) extFirstLBA)<SUB>411</SUB>> ]
-"1326" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; moreLogicals &amp;&amp; (partNum &lt; MAX_MBR_PARTS) &amp;&amp; (partNum &gt;= 0))<SUB>413</SUB>> ]
-"1168" [label = <(memcpy,memcpy(tempMBR.code, code, 440))<SUB>385</SUB>> ]
-"1174" [label = <(&lt;operator&gt;.assignment,tempMBR.diskSignature = diskSignature)<SUB>386</SUB>> ]
-"1179" [label = <(&lt;operator&gt;.assignment,tempMBR.nulls = nulls)<SUB>387</SUB>> ]
-"1184" [label = <(&lt;operator&gt;.assignment,tempMBR.MBRSignature = MBRSignature)<SUB>388</SUB>> ]
-"1237" [label = <(WriteMBRData,WriteMBRData(tempMBR, theDisk, 0))<SUB>397</SUB>> ]
-"1244" [label = <(FIELD_IDENTIFIER,diskSignature,diskSignature)<SUB>400</SUB>> ]
-"1248" [label = <(&lt;operator&gt;.assignment,i = 2)<SUB>401</SUB>> ]
-"1257" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[i].firstLBA = tempMBR.partitions[i].lengthLBA = 0)<SUB>402</SUB>> ]
-"1274" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[i].partitionType = 0x00)<SUB>403</SUB>> ]
-"1323" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>411</SUB>> ]
-"1327" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; moreLogicals &amp;&amp; (partNum &lt; MAX_MBR_PARTS))<SUB>413</SUB>> ]
-"1334" [label = <(&lt;operator&gt;.greaterEqualsThan,partNum &gt;= 0)<SUB>413</SUB>> ]
-"1338" [label = <(StoreInStruct,partitions[partNum].StoreInStruct(&amp;tempMBR.partitions[0]))<SUB>414</SUB>> ]
-"1350" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[0].firstLBA = 1)<SUB>415</SUB>> ]
-"1359" [label = <(&lt;operator&gt;.assignment,next = FindNextInUse(partNum + 1))<SUB>417</SUB>> ]
-"1500" [label = <(&lt;operator&gt;.assignment,allOK = WriteMBRData(tempMBR, theDisk, writeEbrTo))<SUB>432</SUB>> ]
-"1506" [label = <(&lt;operator&gt;.assignment,writeEbrTo = (uint64_t) tempMBR.partitions[1].firstLBA + (uint64_t) extFirstLBA)<SUB>433</SUB>> ]
-"1521" [label = <(&lt;operator&gt;.assignment,partNum = next)<SUB>434</SUB>> ]
-"1169" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.code)<SUB>385</SUB>> ]
-"1175" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.diskSignature)<SUB>386</SUB>> ]
-"1180" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.nulls)<SUB>387</SUB>> ]
-"1185" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.MBRSignature)<SUB>388</SUB>> ]
-"1194" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>389</SUB>> ]
-"1197" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>389</SUB>> ]
-"1258" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[i].firstLBA)<SUB>402</SUB>> ]
-"1265" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[i].lengthLBA = 0)<SUB>402</SUB>> ]
-"1275" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[i].partitionType)<SUB>403</SUB>> ]
-"1288" [label = <(&lt;operator&gt;.lessThan,j &lt; 3)<SUB>404</SUB>> ]
-"1291" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>404</SUB>> ]
-"1328" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; moreLogicals)<SUB>413</SUB>> ]
-"1331" [label = <(&lt;operator&gt;.lessThan,partNum &lt; MAX_MBR_PARTS)<SUB>413</SUB>> ]
-"1339" [label = <(&lt;operator&gt;.fieldAccess,partitions[partNum].StoreInStruct)<SUB>414</SUB>> ]
-"1344" [label = <(&lt;operator&gt;.addressOf,&amp;tempMBR.partitions[0])<SUB>414</SUB>> ]
-"1351" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[0].firstLBA)<SUB>415</SUB>> ]
-"1361" [label = <(FindNextInUse,FindNextInUse(partNum + 1))<SUB>417</SUB>> ]
-"1366" [label = <(&lt;operator&gt;.logicalAnd,(next &lt; MAX_MBR_PARTS) &amp;&amp; (next &gt; 0) &amp;&amp; (partitions[next].GetStartLBA() &gt; 0))<SUB>418</SUB>> ]
-"1502" [label = <(WriteMBRData,WriteMBRData(tempMBR, theDisk, writeEbrTo))<SUB>432</SUB>> ]
-"1508" [label = <(&lt;operator&gt;.addition,(uint64_t) tempMBR.partitions[1].firstLBA + (uint64_t) extFirstLBA)<SUB>433</SUB>> ]
-"1171" [label = <(FIELD_IDENTIFIER,code,code)<SUB>385</SUB>> ]
-"1177" [label = <(FIELD_IDENTIFIER,diskSignature,diskSignature)<SUB>386</SUB>> ]
-"1182" [label = <(FIELD_IDENTIFIER,nulls,nulls)<SUB>387</SUB>> ]
-"1187" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>388</SUB>> ]
-"1191" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>389</SUB>> ]
-"1200" [label = <(StoreInStruct,partitions[i].StoreInStruct(&amp;tempMBR.partitions[i]))<SUB>390</SUB>> ]
-"1259" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>402</SUB>> ]
-"1264" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>402</SUB>> ]
-"1266" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[i].lengthLBA)<SUB>402</SUB>> ]
-"1276" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>403</SUB>> ]
-"1281" [label = <(FIELD_IDENTIFIER,partitionType,partitionType)<SUB>403</SUB>> ]
-"1285" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>404</SUB>> ]
-"1294" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[i].firstSector[j] = 0)<SUB>405</SUB>> ]
-"1305" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[i].lastSector[j] = 0)<SUB>406</SUB>> ]
-"1340" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[partNum])<SUB>414</SUB>> ]
-"1343" [label = <(FIELD_IDENTIFIER,StoreInStruct,StoreInStruct)<SUB>414</SUB>> ]
-"1345" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[0])<SUB>414</SUB>> ]
-"1352" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[0])<SUB>415</SUB>> ]
-"1357" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>415</SUB>> ]
-"1362" [label = <(&lt;operator&gt;.addition,partNum + 1)<SUB>417</SUB>> ]
-"1367" [label = <(&lt;operator&gt;.logicalAnd,(next &lt; MAX_MBR_PARTS) &amp;&amp; (next &gt; 0))<SUB>418</SUB>> ]
-"1374" [label = <(&lt;operator&gt;.greaterThan,partitions[next].GetStartLBA() &gt; 0)<SUB>418</SUB>> ]
-"1383" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].partitionType = 0x0f)<SUB>419</SUB>> ]
-"1392" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].firstLBA = (uint32_t) (partitions[next].GetStartLBA() - extFirstLBA - 1))<SUB>420</SUB>> ]
-"1411" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].lengthLBA = (uint32_t) (partitions[next].GetLengthLBA() + 1))<SUB>421</SUB>> ]
-"1428" [label = <(LBAtoCHS,LBAtoCHS((uint64_t) tempMBR.partitions[1].firstLBA,\012 (uint8_t *) &amp;tempMBR.partitions[1].firstSector))<SUB>422</SUB>> ]
-"1448" [label = <(LBAtoCHS,LBAtoCHS(tempMBR.partitions[1].lengthLBA - extFirstLBA,\012 (uint8_t *) &amp;tempMBR.partitions[1].lastSector))<SUB>424</SUB>> ]
-"1509" [label = <(&lt;operator&gt;.cast,(uint64_t) tempMBR.partitions[1].firstLBA)<SUB>433</SUB>> ]
-"1518" [label = <(&lt;operator&gt;.cast,(uint64_t) extFirstLBA)<SUB>433</SUB>> ]
-"1201" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].StoreInStruct)<SUB>390</SUB>> ]
-"1206" [label = <(&lt;operator&gt;.addressOf,&amp;tempMBR.partitions[i])<SUB>390</SUB>> ]
-"1213" [label = <(&lt;operator&gt;.equals,partitions[i].GetType() == 0x0f)<SUB>391</SUB>> ]
-"1260" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>402</SUB>> ]
-"1267" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>402</SUB>> ]
-"1272" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>402</SUB>> ]
-"1277" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>403</SUB>> ]
-"1295" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i].firstSector[j])<SUB>405</SUB>> ]
-"1306" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i].lastSector[j])<SUB>406</SUB>> ]
-"1346" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>414</SUB>> ]
-"1353" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>415</SUB>> ]
-"1368" [label = <(&lt;operator&gt;.lessThan,next &lt; MAX_MBR_PARTS)<SUB>418</SUB>> ]
-"1371" [label = <(&lt;operator&gt;.greaterThan,next &gt; 0)<SUB>418</SUB>> ]
-"1375" [label = <(GetStartLBA,partitions[next].GetStartLBA())<SUB>418</SUB>> ]
-"1384" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].partitionType)<SUB>419</SUB>> ]
-"1393" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].firstLBA)<SUB>420</SUB>> ]
-"1400" [label = <(uint32_t,(uint32_t) (partitions[next].GetStartLBA() - extFirstLBA - 1))<SUB>420</SUB>> ]
-"1412" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].lengthLBA)<SUB>421</SUB>> ]
-"1419" [label = <(uint32_t,(uint32_t) (partitions[next].GetLengthLBA() + 1))<SUB>421</SUB>> ]
-"1429" [label = <(&lt;operator&gt;.cast,(uint64_t) tempMBR.partitions[1].firstLBA)<SUB>422</SUB>> ]
-"1438" [label = <(&lt;operator&gt;.cast,(uint8_t *) &amp;tempMBR.partitions[1].firstSector)<SUB>423</SUB>> ]
-"1449" [label = <(&lt;operator&gt;.subtraction,tempMBR.partitions[1].lengthLBA - extFirstLBA)<SUB>424</SUB>> ]
-"1458" [label = <(&lt;operator&gt;.cast,(uint8_t *) &amp;tempMBR.partitions[1].lastSector)<SUB>425</SUB>> ]
-"1470" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].partitionType = 0x00)<SUB>427</SUB>> ]
-"1479" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].firstLBA = 0)<SUB>428</SUB>> ]
-"1488" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].lengthLBA = 0)<SUB>429</SUB>> ]
-"1497" [label = <(&lt;operator&gt;.assignment,moreLogicals = 0)<SUB>430</SUB>> ]
-"1510" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>433</SUB>> ]
-"1511" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].firstLBA)<SUB>433</SUB>> ]
-"1519" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>433</SUB>> ]
-"1202" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>390</SUB>> ]
-"1205" [label = <(FIELD_IDENTIFIER,StoreInStruct,StoreInStruct)<SUB>390</SUB>> ]
-"1207" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>390</SUB>> ]
-"1214" [label = <(GetType,partitions[i].GetType())<SUB>391</SUB>> ]
-"1222" [label = <(&lt;operator&gt;.assignment,extFirstLBA = partitions[i].GetStartLBA())<SUB>392</SUB>> ]
-"1230" [label = <(&lt;operator&gt;.assignment,moreLogicals = 1)<SUB>393</SUB>> ]
-"1262" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>402</SUB>> ]
-"1268" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>402</SUB>> ]
-"1279" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>403</SUB>> ]
-"1296" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[i].firstSector)<SUB>405</SUB>> ]
-"1307" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[i].lastSector)<SUB>406</SUB>> ]
-"1348" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>414</SUB>> ]
-"1355" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>415</SUB>> ]
-"1376" [label = <(&lt;operator&gt;.fieldAccess,partitions[next].GetStartLBA)<SUB>418</SUB>> ]
-"1385" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>419</SUB>> ]
-"1390" [label = <(FIELD_IDENTIFIER,partitionType,partitionType)<SUB>419</SUB>> ]
-"1394" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>420</SUB>> ]
-"1399" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>420</SUB>> ]
-"1401" [label = <(&lt;operator&gt;.subtraction,partitions[next].GetStartLBA() - extFirstLBA - 1)<SUB>420</SUB>> ]
-"1413" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>421</SUB>> ]
-"1418" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>421</SUB>> ]
-"1420" [label = <(&lt;operator&gt;.addition,partitions[next].GetLengthLBA() + 1)<SUB>421</SUB>> ]
-"1430" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>422</SUB>> ]
-"1431" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].firstLBA)<SUB>422</SUB>> ]
-"1439" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>423</SUB>> ]
-"1440" [label = <(&lt;operator&gt;.addressOf,&amp;tempMBR.partitions[1].firstSector)<SUB>423</SUB>> ]
-"1450" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].lengthLBA)<SUB>424</SUB>> ]
-"1459" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>425</SUB>> ]
-"1460" [label = <(&lt;operator&gt;.addressOf,&amp;tempMBR.partitions[1].lastSector)<SUB>425</SUB>> ]
-"1471" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].partitionType)<SUB>427</SUB>> ]
-"1480" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].firstLBA)<SUB>428</SUB>> ]
-"1489" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].lengthLBA)<SUB>429</SUB>> ]
-"1512" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>433</SUB>> ]
-"1517" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>433</SUB>> ]
-"1208" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>390</SUB>> ]
-"1215" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetType)<SUB>391</SUB>> ]
-"1224" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>392</SUB>> ]
-"1270" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>402</SUB>> ]
-"1297" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>405</SUB>> ]
-"1302" [label = <(FIELD_IDENTIFIER,firstSector,firstSector)<SUB>405</SUB>> ]
-"1308" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>406</SUB>> ]
-"1313" [label = <(FIELD_IDENTIFIER,lastSector,lastSector)<SUB>406</SUB>> ]
-"1377" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[next])<SUB>418</SUB>> ]
-"1380" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>418</SUB>> ]
-"1386" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>419</SUB>> ]
-"1395" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>420</SUB>> ]
-"1402" [label = <(&lt;operator&gt;.subtraction,partitions[next].GetStartLBA() - extFirstLBA)<SUB>420</SUB>> ]
-"1414" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>421</SUB>> ]
-"1421" [label = <(GetLengthLBA,partitions[next].GetLengthLBA())<SUB>421</SUB>> ]
-"1432" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>422</SUB>> ]
-"1437" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>422</SUB>> ]
-"1441" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].firstSector)<SUB>423</SUB>> ]
-"1451" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>424</SUB>> ]
-"1456" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>424</SUB>> ]
-"1461" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].lastSector)<SUB>425</SUB>> ]
-"1472" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>427</SUB>> ]
-"1477" [label = <(FIELD_IDENTIFIER,partitionType,partitionType)<SUB>427</SUB>> ]
-"1481" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>428</SUB>> ]
-"1486" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>428</SUB>> ]
-"1490" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>429</SUB>> ]
-"1495" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>429</SUB>> ]
-"1513" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>433</SUB>> ]
-"1210" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>390</SUB>> ]
-"1216" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>391</SUB>> ]
-"1219" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>391</SUB>> ]
-"1225" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>392</SUB>> ]
-"1298" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>405</SUB>> ]
-"1309" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>406</SUB>> ]
-"1388" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>419</SUB>> ]
-"1397" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>420</SUB>> ]
-"1403" [label = <(GetStartLBA,partitions[next].GetStartLBA())<SUB>420</SUB>> ]
-"1416" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>421</SUB>> ]
-"1422" [label = <(&lt;operator&gt;.fieldAccess,partitions[next].GetLengthLBA)<SUB>421</SUB>> ]
-"1433" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>422</SUB>> ]
-"1442" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>423</SUB>> ]
-"1447" [label = <(FIELD_IDENTIFIER,firstSector,firstSector)<SUB>423</SUB>> ]
-"1452" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>424</SUB>> ]
-"1462" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>425</SUB>> ]
-"1467" [label = <(FIELD_IDENTIFIER,lastSector,lastSector)<SUB>425</SUB>> ]
-"1473" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>427</SUB>> ]
-"1482" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>428</SUB>> ]
-"1491" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>429</SUB>> ]
-"1515" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>433</SUB>> ]
-"1226" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>392</SUB>> ]
-"1229" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>392</SUB>> ]
-"1300" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>405</SUB>> ]
-"1311" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>406</SUB>> ]
-"1404" [label = <(&lt;operator&gt;.fieldAccess,partitions[next].GetStartLBA)<SUB>420</SUB>> ]
-"1423" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[next])<SUB>421</SUB>> ]
-"1426" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>421</SUB>> ]
-"1435" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>422</SUB>> ]
-"1443" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>423</SUB>> ]
-"1454" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>424</SUB>> ]
-"1463" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>425</SUB>> ]
-"1475" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>427</SUB>> ]
-"1484" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>428</SUB>> ]
-"1493" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>429</SUB>> ]
-"1405" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[next])<SUB>420</SUB>> ]
-"1408" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>420</SUB>> ]
-"1445" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>423</SUB>> ]
-"1465" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>425</SUB>> ]
-"1141" [label = <(METHOD,WriteMBRData)<SUB>376</SUB>> ]
-"1527" [label = <(METHOD_RETURN,int)<SUB>376</SUB>> ]
-  "1150" -> "1153" 
-  "1153" -> "1157" 
-  "1157" -> "1164" 
-  "1162" -> "1171" 
-  "1162" -> "1235" 
-  "1162" -> "1237" 
-  "1233" -> "1244" 
-  "1241" -> "1248" 
-  "1316" -> "1323" 
-  "1320" -> "1328" 
-  "1524" -> "1525" 
-  "1525" -> "1527" 
-  "1164" -> "1162" 
-  "1235" -> "1233" 
-  "1242" -> "1241" 
-  "1251" -> "1262" 
-  "1251" -> "1318" 
-  "1254" -> "1251" 
-  "1318" -> "1316" 
-  "1322" -> "1320" 
-  "1326" -> "1524" 
-  "1326" -> "1340" 
-  "1168" -> "1177" 
+"1145" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>376</SUB>> ]
+"1148" [label = <(&lt;operator&gt;.assignment,moreLogicals = 0)<SUB>376</SUB>> ]
+"1152" [label = <(&lt;operator&gt;.assignment,extFirstLBA = 0)<SUB>377</SUB>> ]
+"1157" [label = <(&lt;operator&gt;.assignment,allOK = CreateExtended())<SUB>381</SUB>> ]
+"1228" [label = <(&lt;operator&gt;.assignment,allOK = allOK &amp;&amp; WriteMBRData(tempMBR, theDisk, 0))<SUB>396</SUB>> ]
+"1236" [label = <(&lt;operator&gt;.assignment,tempMBR.diskSignature = 0)<SUB>399</SUB>> ]
+"1311" [label = <(&lt;operator&gt;.assignment,partNum = FindNextInUse(4))<SUB>409</SUB>> ]
+"1315" [label = <(&lt;operator&gt;.assignment,writeEbrTo = (uint64_t) extFirstLBA)<SUB>410</SUB>> ]
+"1519" [label = <(DeleteExtendedParts,DeleteExtendedParts())<SUB>435</SUB>> ]
+"1520" [label = <(RETURN,return allOK;,return allOK;)<SUB>436</SUB>> ]
+"1159" [label = <(CreateExtended,CreateExtended())<SUB>381</SUB>> ]
+"1230" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; WriteMBRData(tempMBR, theDisk, 0))<SUB>396</SUB>> ]
+"1237" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.diskSignature)<SUB>399</SUB>> ]
+"1246" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>400</SUB>> ]
+"1249" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>400</SUB>> ]
+"1313" [label = <(FindNextInUse,FindNextInUse(4))<SUB>409</SUB>> ]
+"1317" [label = <(&lt;operator&gt;.cast,(uint64_t) extFirstLBA)<SUB>410</SUB>> ]
+"1321" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; moreLogicals &amp;&amp; (partNum &lt; MAX_MBR_PARTS) &amp;&amp; (partNum &gt;= 0))<SUB>412</SUB>> ]
+"1163" [label = <(memcpy,memcpy(tempMBR.code, code, 440))<SUB>384</SUB>> ]
+"1169" [label = <(&lt;operator&gt;.assignment,tempMBR.diskSignature = diskSignature)<SUB>385</SUB>> ]
+"1174" [label = <(&lt;operator&gt;.assignment,tempMBR.nulls = nulls)<SUB>386</SUB>> ]
+"1179" [label = <(&lt;operator&gt;.assignment,tempMBR.MBRSignature = MBRSignature)<SUB>387</SUB>> ]
+"1232" [label = <(WriteMBRData,WriteMBRData(tempMBR, theDisk, 0))<SUB>396</SUB>> ]
+"1239" [label = <(FIELD_IDENTIFIER,diskSignature,diskSignature)<SUB>399</SUB>> ]
+"1243" [label = <(&lt;operator&gt;.assignment,i = 2)<SUB>400</SUB>> ]
+"1252" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[i].firstLBA = tempMBR.partitions[i].lengthLBA = 0)<SUB>401</SUB>> ]
+"1269" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[i].partitionType = 0x00)<SUB>402</SUB>> ]
+"1318" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>410</SUB>> ]
+"1322" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; moreLogicals &amp;&amp; (partNum &lt; MAX_MBR_PARTS))<SUB>412</SUB>> ]
+"1329" [label = <(&lt;operator&gt;.greaterEqualsThan,partNum &gt;= 0)<SUB>412</SUB>> ]
+"1333" [label = <(StoreInStruct,partitions[partNum].StoreInStruct(&amp;tempMBR.partitions[0]))<SUB>413</SUB>> ]
+"1345" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[0].firstLBA = 1)<SUB>414</SUB>> ]
+"1354" [label = <(&lt;operator&gt;.assignment,next = FindNextInUse(partNum + 1))<SUB>416</SUB>> ]
+"1495" [label = <(&lt;operator&gt;.assignment,allOK = WriteMBRData(tempMBR, theDisk, writeEbrTo))<SUB>431</SUB>> ]
+"1501" [label = <(&lt;operator&gt;.assignment,writeEbrTo = (uint64_t) tempMBR.partitions[1].firstLBA + (uint64_t) extFirstLBA)<SUB>432</SUB>> ]
+"1516" [label = <(&lt;operator&gt;.assignment,partNum = next)<SUB>433</SUB>> ]
+"1164" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.code)<SUB>384</SUB>> ]
+"1170" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.diskSignature)<SUB>385</SUB>> ]
+"1175" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.nulls)<SUB>386</SUB>> ]
+"1180" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.MBRSignature)<SUB>387</SUB>> ]
+"1189" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>388</SUB>> ]
+"1192" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>388</SUB>> ]
+"1253" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[i].firstLBA)<SUB>401</SUB>> ]
+"1260" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[i].lengthLBA = 0)<SUB>401</SUB>> ]
+"1270" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[i].partitionType)<SUB>402</SUB>> ]
+"1283" [label = <(&lt;operator&gt;.lessThan,j &lt; 3)<SUB>403</SUB>> ]
+"1286" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>403</SUB>> ]
+"1323" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; moreLogicals)<SUB>412</SUB>> ]
+"1326" [label = <(&lt;operator&gt;.lessThan,partNum &lt; MAX_MBR_PARTS)<SUB>412</SUB>> ]
+"1334" [label = <(&lt;operator&gt;.fieldAccess,partitions[partNum].StoreInStruct)<SUB>413</SUB>> ]
+"1339" [label = <(&lt;operator&gt;.addressOf,&amp;tempMBR.partitions[0])<SUB>413</SUB>> ]
+"1346" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[0].firstLBA)<SUB>414</SUB>> ]
+"1356" [label = <(FindNextInUse,FindNextInUse(partNum + 1))<SUB>416</SUB>> ]
+"1361" [label = <(&lt;operator&gt;.logicalAnd,(next &lt; MAX_MBR_PARTS) &amp;&amp; (next &gt; 0) &amp;&amp; (partitions[next].GetStartLBA() &gt; 0))<SUB>417</SUB>> ]
+"1497" [label = <(WriteMBRData,WriteMBRData(tempMBR, theDisk, writeEbrTo))<SUB>431</SUB>> ]
+"1503" [label = <(&lt;operator&gt;.addition,(uint64_t) tempMBR.partitions[1].firstLBA + (uint64_t) extFirstLBA)<SUB>432</SUB>> ]
+"1166" [label = <(FIELD_IDENTIFIER,code,code)<SUB>384</SUB>> ]
+"1172" [label = <(FIELD_IDENTIFIER,diskSignature,diskSignature)<SUB>385</SUB>> ]
+"1177" [label = <(FIELD_IDENTIFIER,nulls,nulls)<SUB>386</SUB>> ]
+"1182" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>387</SUB>> ]
+"1186" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>388</SUB>> ]
+"1195" [label = <(StoreInStruct,partitions[i].StoreInStruct(&amp;tempMBR.partitions[i]))<SUB>389</SUB>> ]
+"1254" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>401</SUB>> ]
+"1259" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>401</SUB>> ]
+"1261" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[i].lengthLBA)<SUB>401</SUB>> ]
+"1271" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>402</SUB>> ]
+"1276" [label = <(FIELD_IDENTIFIER,partitionType,partitionType)<SUB>402</SUB>> ]
+"1280" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>403</SUB>> ]
+"1289" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[i].firstSector[j] = 0)<SUB>404</SUB>> ]
+"1300" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[i].lastSector[j] = 0)<SUB>405</SUB>> ]
+"1335" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[partNum])<SUB>413</SUB>> ]
+"1338" [label = <(FIELD_IDENTIFIER,StoreInStruct,StoreInStruct)<SUB>413</SUB>> ]
+"1340" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[0])<SUB>413</SUB>> ]
+"1347" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[0])<SUB>414</SUB>> ]
+"1352" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>414</SUB>> ]
+"1357" [label = <(&lt;operator&gt;.addition,partNum + 1)<SUB>416</SUB>> ]
+"1362" [label = <(&lt;operator&gt;.logicalAnd,(next &lt; MAX_MBR_PARTS) &amp;&amp; (next &gt; 0))<SUB>417</SUB>> ]
+"1369" [label = <(&lt;operator&gt;.greaterThan,partitions[next].GetStartLBA() &gt; 0)<SUB>417</SUB>> ]
+"1378" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].partitionType = 0x0f)<SUB>418</SUB>> ]
+"1387" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].firstLBA = (uint32_t) (partitions[next].GetStartLBA() - extFirstLBA - 1))<SUB>419</SUB>> ]
+"1406" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].lengthLBA = (uint32_t) (partitions[next].GetLengthLBA() + 1))<SUB>420</SUB>> ]
+"1423" [label = <(LBAtoCHS,LBAtoCHS((uint64_t) tempMBR.partitions[1].firstLBA,\012 (uint8_t *) &amp;tempMBR.partitions[1].firstSector))<SUB>421</SUB>> ]
+"1443" [label = <(LBAtoCHS,LBAtoCHS(tempMBR.partitions[1].lengthLBA - extFirstLBA,\012 (uint8_t *) &amp;tempMBR.partitions[1].lastSector))<SUB>423</SUB>> ]
+"1504" [label = <(&lt;operator&gt;.cast,(uint64_t) tempMBR.partitions[1].firstLBA)<SUB>432</SUB>> ]
+"1513" [label = <(&lt;operator&gt;.cast,(uint64_t) extFirstLBA)<SUB>432</SUB>> ]
+"1196" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].StoreInStruct)<SUB>389</SUB>> ]
+"1201" [label = <(&lt;operator&gt;.addressOf,&amp;tempMBR.partitions[i])<SUB>389</SUB>> ]
+"1208" [label = <(&lt;operator&gt;.equals,partitions[i].GetType() == 0x0f)<SUB>390</SUB>> ]
+"1255" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>401</SUB>> ]
+"1262" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>401</SUB>> ]
+"1267" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>401</SUB>> ]
+"1272" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>402</SUB>> ]
+"1290" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i].firstSector[j])<SUB>404</SUB>> ]
+"1301" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i].lastSector[j])<SUB>405</SUB>> ]
+"1341" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>413</SUB>> ]
+"1348" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>414</SUB>> ]
+"1363" [label = <(&lt;operator&gt;.lessThan,next &lt; MAX_MBR_PARTS)<SUB>417</SUB>> ]
+"1366" [label = <(&lt;operator&gt;.greaterThan,next &gt; 0)<SUB>417</SUB>> ]
+"1370" [label = <(GetStartLBA,partitions[next].GetStartLBA())<SUB>417</SUB>> ]
+"1379" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].partitionType)<SUB>418</SUB>> ]
+"1388" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].firstLBA)<SUB>419</SUB>> ]
+"1395" [label = <(uint32_t,(uint32_t) (partitions[next].GetStartLBA() - extFirstLBA - 1))<SUB>419</SUB>> ]
+"1407" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].lengthLBA)<SUB>420</SUB>> ]
+"1414" [label = <(uint32_t,(uint32_t) (partitions[next].GetLengthLBA() + 1))<SUB>420</SUB>> ]
+"1424" [label = <(&lt;operator&gt;.cast,(uint64_t) tempMBR.partitions[1].firstLBA)<SUB>421</SUB>> ]
+"1433" [label = <(&lt;operator&gt;.cast,(uint8_t *) &amp;tempMBR.partitions[1].firstSector)<SUB>422</SUB>> ]
+"1444" [label = <(&lt;operator&gt;.subtraction,tempMBR.partitions[1].lengthLBA - extFirstLBA)<SUB>423</SUB>> ]
+"1453" [label = <(&lt;operator&gt;.cast,(uint8_t *) &amp;tempMBR.partitions[1].lastSector)<SUB>424</SUB>> ]
+"1465" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].partitionType = 0x00)<SUB>426</SUB>> ]
+"1474" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].firstLBA = 0)<SUB>427</SUB>> ]
+"1483" [label = <(&lt;operator&gt;.assignment,tempMBR.partitions[1].lengthLBA = 0)<SUB>428</SUB>> ]
+"1492" [label = <(&lt;operator&gt;.assignment,moreLogicals = 0)<SUB>429</SUB>> ]
+"1505" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>432</SUB>> ]
+"1506" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].firstLBA)<SUB>432</SUB>> ]
+"1514" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>432</SUB>> ]
+"1197" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>389</SUB>> ]
+"1200" [label = <(FIELD_IDENTIFIER,StoreInStruct,StoreInStruct)<SUB>389</SUB>> ]
+"1202" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>389</SUB>> ]
+"1209" [label = <(GetType,partitions[i].GetType())<SUB>390</SUB>> ]
+"1217" [label = <(&lt;operator&gt;.assignment,extFirstLBA = partitions[i].GetStartLBA())<SUB>391</SUB>> ]
+"1225" [label = <(&lt;operator&gt;.assignment,moreLogicals = 1)<SUB>392</SUB>> ]
+"1257" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>401</SUB>> ]
+"1263" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>401</SUB>> ]
+"1274" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>402</SUB>> ]
+"1291" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[i].firstSector)<SUB>404</SUB>> ]
+"1302" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[i].lastSector)<SUB>405</SUB>> ]
+"1343" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>413</SUB>> ]
+"1350" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>414</SUB>> ]
+"1371" [label = <(&lt;operator&gt;.fieldAccess,partitions[next].GetStartLBA)<SUB>417</SUB>> ]
+"1380" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>418</SUB>> ]
+"1385" [label = <(FIELD_IDENTIFIER,partitionType,partitionType)<SUB>418</SUB>> ]
+"1389" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>419</SUB>> ]
+"1394" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>419</SUB>> ]
+"1396" [label = <(&lt;operator&gt;.subtraction,partitions[next].GetStartLBA() - extFirstLBA - 1)<SUB>419</SUB>> ]
+"1408" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>420</SUB>> ]
+"1413" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>420</SUB>> ]
+"1415" [label = <(&lt;operator&gt;.addition,partitions[next].GetLengthLBA() + 1)<SUB>420</SUB>> ]
+"1425" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>421</SUB>> ]
+"1426" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].firstLBA)<SUB>421</SUB>> ]
+"1434" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>422</SUB>> ]
+"1435" [label = <(&lt;operator&gt;.addressOf,&amp;tempMBR.partitions[1].firstSector)<SUB>422</SUB>> ]
+"1445" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].lengthLBA)<SUB>423</SUB>> ]
+"1454" [label = <(UNKNOWN,uint8_t *,uint8_t *)<SUB>424</SUB>> ]
+"1455" [label = <(&lt;operator&gt;.addressOf,&amp;tempMBR.partitions[1].lastSector)<SUB>424</SUB>> ]
+"1466" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].partitionType)<SUB>426</SUB>> ]
+"1475" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].firstLBA)<SUB>427</SUB>> ]
+"1484" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].lengthLBA)<SUB>428</SUB>> ]
+"1507" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>432</SUB>> ]
+"1512" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>432</SUB>> ]
+"1203" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>389</SUB>> ]
+"1210" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetType)<SUB>390</SUB>> ]
+"1219" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>391</SUB>> ]
+"1265" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>401</SUB>> ]
+"1292" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>404</SUB>> ]
+"1297" [label = <(FIELD_IDENTIFIER,firstSector,firstSector)<SUB>404</SUB>> ]
+"1303" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[i])<SUB>405</SUB>> ]
+"1308" [label = <(FIELD_IDENTIFIER,lastSector,lastSector)<SUB>405</SUB>> ]
+"1372" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[next])<SUB>417</SUB>> ]
+"1375" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>417</SUB>> ]
+"1381" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>418</SUB>> ]
+"1390" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>419</SUB>> ]
+"1397" [label = <(&lt;operator&gt;.subtraction,partitions[next].GetStartLBA() - extFirstLBA)<SUB>419</SUB>> ]
+"1409" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>420</SUB>> ]
+"1416" [label = <(GetLengthLBA,partitions[next].GetLengthLBA())<SUB>420</SUB>> ]
+"1427" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>421</SUB>> ]
+"1432" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>421</SUB>> ]
+"1436" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].firstSector)<SUB>422</SUB>> ]
+"1446" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>423</SUB>> ]
+"1451" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>423</SUB>> ]
+"1456" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions[1].lastSector)<SUB>424</SUB>> ]
+"1467" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>426</SUB>> ]
+"1472" [label = <(FIELD_IDENTIFIER,partitionType,partitionType)<SUB>426</SUB>> ]
+"1476" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>427</SUB>> ]
+"1481" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>427</SUB>> ]
+"1485" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>428</SUB>> ]
+"1490" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>428</SUB>> ]
+"1508" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>432</SUB>> ]
+"1205" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>389</SUB>> ]
+"1211" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>390</SUB>> ]
+"1214" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>390</SUB>> ]
+"1220" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>391</SUB>> ]
+"1293" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>404</SUB>> ]
+"1304" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>405</SUB>> ]
+"1383" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>418</SUB>> ]
+"1392" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>419</SUB>> ]
+"1398" [label = <(GetStartLBA,partitions[next].GetStartLBA())<SUB>419</SUB>> ]
+"1411" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>420</SUB>> ]
+"1417" [label = <(&lt;operator&gt;.fieldAccess,partitions[next].GetLengthLBA)<SUB>420</SUB>> ]
+"1428" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>421</SUB>> ]
+"1437" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>422</SUB>> ]
+"1442" [label = <(FIELD_IDENTIFIER,firstSector,firstSector)<SUB>422</SUB>> ]
+"1447" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>423</SUB>> ]
+"1457" [label = <(&lt;operator&gt;.indirectIndexAccess,tempMBR.partitions[1])<SUB>424</SUB>> ]
+"1462" [label = <(FIELD_IDENTIFIER,lastSector,lastSector)<SUB>424</SUB>> ]
+"1468" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>426</SUB>> ]
+"1477" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>427</SUB>> ]
+"1486" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>428</SUB>> ]
+"1510" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>432</SUB>> ]
+"1221" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>391</SUB>> ]
+"1224" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>391</SUB>> ]
+"1295" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>404</SUB>> ]
+"1306" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>405</SUB>> ]
+"1399" [label = <(&lt;operator&gt;.fieldAccess,partitions[next].GetStartLBA)<SUB>419</SUB>> ]
+"1418" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[next])<SUB>420</SUB>> ]
+"1421" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>420</SUB>> ]
+"1430" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>421</SUB>> ]
+"1438" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>422</SUB>> ]
+"1449" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>423</SUB>> ]
+"1458" [label = <(&lt;operator&gt;.fieldAccess,tempMBR.partitions)<SUB>424</SUB>> ]
+"1470" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>426</SUB>> ]
+"1479" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>427</SUB>> ]
+"1488" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>428</SUB>> ]
+"1400" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[next])<SUB>419</SUB>> ]
+"1403" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>419</SUB>> ]
+"1440" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>422</SUB>> ]
+"1460" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>424</SUB>> ]
+"1136" [label = <(METHOD,WriteMBRData)<SUB>375</SUB>> ]
+"1522" [label = <(METHOD_RETURN,int)<SUB>375</SUB>> ]
+  "1145" -> "1148" 
+  "1148" -> "1152" 
+  "1152" -> "1159" 
+  "1157" -> "1166" 
+  "1157" -> "1230" 
+  "1157" -> "1232" 
+  "1228" -> "1239" 
+  "1236" -> "1243" 
+  "1311" -> "1318" 
+  "1315" -> "1323" 
+  "1519" -> "1520" 
+  "1520" -> "1522" 
+  "1159" -> "1157" 
+  "1230" -> "1228" 
+  "1237" -> "1236" 
+  "1246" -> "1257" 
+  "1246" -> "1313" 
+  "1249" -> "1246" 
+  "1313" -> "1311" 
+  "1317" -> "1315" 
+  "1321" -> "1519" 
+  "1321" -> "1335" 
+  "1163" -> "1172" 
+  "1169" -> "1177" 
   "1174" -> "1182" 
-  "1179" -> "1187" 
-  "1184" -> "1191" 
-  "1237" -> "1235" 
-  "1244" -> "1242" 
-  "1248" -> "1251" 
-  "1257" -> "1279" 
-  "1274" -> "1285" 
-  "1323" -> "1322" 
-  "1327" -> "1326" 
-  "1327" -> "1334" 
-  "1334" -> "1326" 
-  "1338" -> "1355" 
-  "1350" -> "1362" 
-  "1359" -> "1368" 
-  "1500" -> "1510" 
-  "1506" -> "1521" 
-  "1521" -> "1328" 
-  "1169" -> "1168" 
+  "1179" -> "1186" 
+  "1232" -> "1230" 
+  "1239" -> "1237" 
+  "1243" -> "1246" 
+  "1252" -> "1274" 
+  "1269" -> "1280" 
+  "1318" -> "1317" 
+  "1322" -> "1321" 
+  "1322" -> "1329" 
+  "1329" -> "1321" 
+  "1333" -> "1350" 
+  "1345" -> "1357" 
+  "1354" -> "1363" 
+  "1495" -> "1505" 
+  "1501" -> "1516" 
+  "1516" -> "1323" 
+  "1164" -> "1163" 
+  "1170" -> "1169" 
   "1175" -> "1174" 
   "1180" -> "1179" 
-  "1185" -> "1184" 
-  "1194" -> "1202" 
-  "1194" -> "1235" 
-  "1194" -> "1237" 
-  "1197" -> "1194" 
-  "1258" -> "1270" 
-  "1265" -> "1257" 
-  "1275" -> "1274" 
-  "1288" -> "1300" 
-  "1288" -> "1254" 
-  "1291" -> "1288" 
-  "1328" -> "1327" 
-  "1328" -> "1331" 
-  "1331" -> "1327" 
-  "1339" -> "1348" 
-  "1344" -> "1338" 
-  "1351" -> "1350" 
-  "1361" -> "1359" 
-  "1366" -> "1388" 
-  "1366" -> "1475" 
-  "1502" -> "1500" 
-  "1508" -> "1506" 
-  "1171" -> "1169" 
+  "1189" -> "1197" 
+  "1189" -> "1230" 
+  "1189" -> "1232" 
+  "1192" -> "1189" 
+  "1253" -> "1265" 
+  "1260" -> "1252" 
+  "1270" -> "1269" 
+  "1283" -> "1295" 
+  "1283" -> "1249" 
+  "1286" -> "1283" 
+  "1323" -> "1322" 
+  "1323" -> "1326" 
+  "1326" -> "1322" 
+  "1334" -> "1343" 
+  "1339" -> "1333" 
+  "1346" -> "1345" 
+  "1356" -> "1354" 
+  "1361" -> "1383" 
+  "1361" -> "1470" 
+  "1497" -> "1495" 
+  "1503" -> "1501" 
+  "1166" -> "1164" 
+  "1172" -> "1170" 
   "1177" -> "1175" 
   "1182" -> "1180" 
-  "1187" -> "1185" 
-  "1191" -> "1194" 
-  "1200" -> "1216" 
-  "1259" -> "1264" 
-  "1264" -> "1258" 
-  "1266" -> "1265" 
-  "1276" -> "1281" 
-  "1281" -> "1275" 
-  "1285" -> "1288" 
-  "1294" -> "1311" 
-  "1305" -> "1291" 
-  "1340" -> "1343" 
-  "1343" -> "1339" 
-  "1345" -> "1344" 
-  "1352" -> "1357" 
-  "1357" -> "1351" 
+  "1186" -> "1189" 
+  "1195" -> "1211" 
+  "1254" -> "1259" 
+  "1259" -> "1253" 
+  "1261" -> "1260" 
+  "1271" -> "1276" 
+  "1276" -> "1270" 
+  "1280" -> "1283" 
+  "1289" -> "1306" 
+  "1300" -> "1286" 
+  "1335" -> "1338" 
+  "1338" -> "1334" 
+  "1340" -> "1339" 
+  "1347" -> "1352" 
+  "1352" -> "1346" 
+  "1357" -> "1356" 
   "1362" -> "1361" 
-  "1367" -> "1366" 
-  "1367" -> "1377" 
-  "1374" -> "1366" 
-  "1383" -> "1397" 
-  "1392" -> "1416" 
-  "1411" -> "1430" 
-  "1428" -> "1454" 
-  "1448" -> "1502" 
-  "1509" -> "1519" 
-  "1518" -> "1508" 
-  "1201" -> "1210" 
-  "1206" -> "1200" 
-  "1213" -> "1226" 
-  "1213" -> "1197" 
-  "1260" -> "1259" 
-  "1267" -> "1272" 
-  "1272" -> "1266" 
-  "1277" -> "1276" 
-  "1295" -> "1294" 
-  "1306" -> "1305" 
-  "1346" -> "1345" 
-  "1353" -> "1352" 
-  "1368" -> "1367" 
-  "1368" -> "1371" 
-  "1371" -> "1367" 
-  "1375" -> "1374" 
-  "1384" -> "1383" 
-  "1393" -> "1405" 
-  "1400" -> "1392" 
-  "1412" -> "1423" 
-  "1419" -> "1411" 
-  "1429" -> "1439" 
-  "1438" -> "1428" 
-  "1449" -> "1459" 
-  "1458" -> "1448" 
-  "1470" -> "1484" 
-  "1479" -> "1493" 
-  "1488" -> "1497" 
-  "1497" -> "1502" 
-  "1510" -> "1515" 
-  "1511" -> "1509" 
-  "1519" -> "1518" 
-  "1202" -> "1205" 
-  "1205" -> "1201" 
-  "1207" -> "1206" 
-  "1214" -> "1213" 
-  "1222" -> "1230" 
-  "1230" -> "1197" 
-  "1262" -> "1260" 
-  "1268" -> "1267" 
-  "1279" -> "1277" 
-  "1296" -> "1295" 
-  "1307" -> "1306" 
-  "1348" -> "1346" 
-  "1355" -> "1353" 
-  "1376" -> "1375" 
-  "1385" -> "1390" 
-  "1390" -> "1384" 
-  "1394" -> "1399" 
-  "1399" -> "1393" 
-  "1401" -> "1400" 
-  "1413" -> "1418" 
-  "1418" -> "1412" 
-  "1420" -> "1419" 
-  "1430" -> "1435" 
-  "1431" -> "1429" 
-  "1439" -> "1445" 
+  "1362" -> "1372" 
+  "1369" -> "1361" 
+  "1378" -> "1392" 
+  "1387" -> "1411" 
+  "1406" -> "1425" 
+  "1423" -> "1449" 
+  "1443" -> "1497" 
+  "1504" -> "1514" 
+  "1513" -> "1503" 
+  "1196" -> "1205" 
+  "1201" -> "1195" 
+  "1208" -> "1221" 
+  "1208" -> "1192" 
+  "1255" -> "1254" 
+  "1262" -> "1267" 
+  "1267" -> "1261" 
+  "1272" -> "1271" 
+  "1290" -> "1289" 
+  "1301" -> "1300" 
+  "1341" -> "1340" 
+  "1348" -> "1347" 
+  "1363" -> "1362" 
+  "1363" -> "1366" 
+  "1366" -> "1362" 
+  "1370" -> "1369" 
+  "1379" -> "1378" 
+  "1388" -> "1400" 
+  "1395" -> "1387" 
+  "1407" -> "1418" 
+  "1414" -> "1406" 
+  "1424" -> "1434" 
+  "1433" -> "1423" 
+  "1444" -> "1454" 
+  "1453" -> "1443" 
+  "1465" -> "1479" 
+  "1474" -> "1488" 
+  "1483" -> "1492" 
+  "1492" -> "1497" 
+  "1505" -> "1510" 
+  "1506" -> "1504" 
+  "1514" -> "1513" 
+  "1197" -> "1200" 
+  "1200" -> "1196" 
+  "1202" -> "1201" 
+  "1209" -> "1208" 
+  "1217" -> "1225" 
+  "1225" -> "1192" 
+  "1257" -> "1255" 
+  "1263" -> "1262" 
+  "1274" -> "1272" 
+  "1291" -> "1290" 
+  "1302" -> "1301" 
+  "1343" -> "1341" 
+  "1350" -> "1348" 
+  "1371" -> "1370" 
+  "1380" -> "1385" 
+  "1385" -> "1379" 
+  "1389" -> "1394" 
+  "1394" -> "1388" 
+  "1396" -> "1395" 
+  "1408" -> "1413" 
+  "1413" -> "1407" 
+  "1415" -> "1414" 
+  "1425" -> "1430" 
+  "1426" -> "1424" 
+  "1434" -> "1440" 
+  "1435" -> "1433" 
+  "1445" -> "1444" 
+  "1454" -> "1460" 
+  "1455" -> "1453" 
+  "1466" -> "1465" 
+  "1475" -> "1474" 
+  "1484" -> "1483" 
+  "1507" -> "1512" 
+  "1512" -> "1506" 
+  "1203" -> "1202" 
+  "1210" -> "1209" 
+  "1219" -> "1217" 
+  "1265" -> "1263" 
+  "1292" -> "1297" 
+  "1297" -> "1291" 
+  "1303" -> "1308" 
+  "1308" -> "1302" 
+  "1372" -> "1375" 
+  "1375" -> "1371" 
+  "1381" -> "1380" 
+  "1390" -> "1389" 
+  "1397" -> "1396" 
+  "1409" -> "1408" 
+  "1416" -> "1415" 
+  "1427" -> "1432" 
+  "1432" -> "1426" 
+  "1436" -> "1435" 
+  "1446" -> "1451" 
+  "1451" -> "1445" 
+  "1456" -> "1455" 
+  "1467" -> "1472" 
+  "1472" -> "1466" 
+  "1476" -> "1481" 
+  "1481" -> "1475" 
+  "1485" -> "1490" 
+  "1490" -> "1484" 
+  "1508" -> "1507" 
+  "1205" -> "1203" 
+  "1211" -> "1214" 
+  "1214" -> "1210" 
+  "1220" -> "1219" 
+  "1293" -> "1292" 
+  "1304" -> "1303" 
+  "1383" -> "1381" 
+  "1392" -> "1390" 
+  "1398" -> "1397" 
+  "1411" -> "1409" 
+  "1417" -> "1416" 
+  "1428" -> "1427" 
+  "1437" -> "1442" 
+  "1442" -> "1436" 
+  "1447" -> "1446" 
+  "1457" -> "1462" 
+  "1462" -> "1456" 
+  "1468" -> "1467" 
+  "1477" -> "1476" 
+  "1486" -> "1485" 
+  "1510" -> "1508" 
+  "1221" -> "1224" 
+  "1224" -> "1220" 
+  "1295" -> "1293" 
+  "1306" -> "1304" 
+  "1399" -> "1398" 
+  "1418" -> "1421" 
+  "1421" -> "1417" 
+  "1430" -> "1428" 
+  "1438" -> "1437" 
+  "1449" -> "1447" 
+  "1458" -> "1457" 
+  "1470" -> "1468" 
+  "1479" -> "1477" 
+  "1488" -> "1486" 
+  "1400" -> "1403" 
+  "1403" -> "1399" 
   "1440" -> "1438" 
-  "1450" -> "1449" 
-  "1459" -> "1465" 
   "1460" -> "1458" 
-  "1471" -> "1470" 
-  "1480" -> "1479" 
-  "1489" -> "1488" 
-  "1512" -> "1517" 
-  "1517" -> "1511" 
-  "1208" -> "1207" 
-  "1215" -> "1214" 
-  "1224" -> "1222" 
-  "1270" -> "1268" 
-  "1297" -> "1302" 
-  "1302" -> "1296" 
-  "1308" -> "1313" 
-  "1313" -> "1307" 
-  "1377" -> "1380" 
-  "1380" -> "1376" 
-  "1386" -> "1385" 
-  "1395" -> "1394" 
-  "1402" -> "1401" 
-  "1414" -> "1413" 
-  "1421" -> "1420" 
-  "1432" -> "1437" 
-  "1437" -> "1431" 
-  "1441" -> "1440" 
-  "1451" -> "1456" 
-  "1456" -> "1450" 
-  "1461" -> "1460" 
-  "1472" -> "1477" 
-  "1477" -> "1471" 
-  "1481" -> "1486" 
-  "1486" -> "1480" 
-  "1490" -> "1495" 
-  "1495" -> "1489" 
-  "1513" -> "1512" 
-  "1210" -> "1208" 
-  "1216" -> "1219" 
-  "1219" -> "1215" 
-  "1225" -> "1224" 
-  "1298" -> "1297" 
-  "1309" -> "1308" 
-  "1388" -> "1386" 
-  "1397" -> "1395" 
-  "1403" -> "1402" 
-  "1416" -> "1414" 
-  "1422" -> "1421" 
-  "1433" -> "1432" 
-  "1442" -> "1447" 
-  "1447" -> "1441" 
-  "1452" -> "1451" 
-  "1462" -> "1467" 
-  "1467" -> "1461" 
-  "1473" -> "1472" 
-  "1482" -> "1481" 
-  "1491" -> "1490" 
-  "1515" -> "1513" 
-  "1226" -> "1229" 
-  "1229" -> "1225" 
-  "1300" -> "1298" 
-  "1311" -> "1309" 
-  "1404" -> "1403" 
-  "1423" -> "1426" 
-  "1426" -> "1422" 
-  "1435" -> "1433" 
-  "1443" -> "1442" 
-  "1454" -> "1452" 
-  "1463" -> "1462" 
-  "1475" -> "1473" 
-  "1484" -> "1482" 
-  "1493" -> "1491" 
-  "1405" -> "1408" 
-  "1408" -> "1404" 
-  "1445" -> "1443" 
-  "1465" -> "1463" 
-  "1141" -> "1150" 
+  "1136" -> "1145" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/100-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/100-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/100-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/100-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "GetType" {  
-"5888" [label = <(METHOD,GetType)> ]
-"5891" [label = <(METHOD_RETURN,ANY)> ]
-  "5888" -> "5891" 
+"5883" [label = <(METHOD,GetType)> ]
+"5886" [label = <(METHOD_RETURN,ANY)> ]
+  "5883" -> "5886" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/101-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/101-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/101-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/101-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "ReadLogicalParts" {  
-"5892" [label = <(METHOD,ReadLogicalParts)> ]
-"5896" [label = <(METHOD_RETURN,ANY)> ]
-  "5892" -> "5896" 
+"5887" [label = <(METHOD,ReadLogicalParts)> ]
+"5891" [label = <(METHOD_RETURN,ANY)> ]
+  "5887" -> "5891" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/102-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/102-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/102-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/102-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "GetStartLBA" {  
-"5897" [label = <(METHOD,GetStartLBA)> ]
-"5900" [label = <(METHOD_RETURN,ANY)> ]
-  "5897" -> "5900" 
+"5892" [label = <(METHOD,GetStartLBA)> ]
+"5895" [label = <(METHOD_RETURN,ANY)> ]
+  "5892" -> "5895" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/103-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/103-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/103-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/103-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addition" {  
-"5901" [label = <(METHOD,&lt;operator&gt;.addition)> ]
-"5905" [label = <(METHOD_RETURN,ANY)> ]
-  "5901" -> "5905" 
+"5896" [label = <(METHOD,&lt;operator&gt;.addition)> ]
+"5900" [label = <(METHOD_RETURN,ANY)> ]
+  "5896" -> "5900" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/104-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/104-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/104-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/104-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "abs" {  
-"5906" [label = <(METHOD,abs)> ]
-"5909" [label = <(METHOD_RETURN,ANY)> ]
-  "5906" -> "5909" 
+"5901" [label = <(METHOD,abs)> ]
+"5904" [label = <(METHOD_RETURN,ANY)> ]
+  "5901" -> "5904" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/105-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/105-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/105-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/105-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "DeletePartition" {  
-"5910" [label = <(METHOD,DeletePartition)> ]
-"5913" [label = <(METHOD_RETURN,ANY)> ]
-  "5910" -> "5913" 
+"5905" [label = <(METHOD,DeletePartition)> ]
+"5908" [label = <(METHOD_RETURN,ANY)> ]
+  "5905" -> "5908" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/106-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/106-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/106-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/106-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "UINT8_C" {  
-"5914" [label = <(METHOD,UINT8_C)> ]
-"5917" [label = <(METHOD_RETURN,ANY)> ]
-  "5914" -> "5917" 
+"5909" [label = <(METHOD,UINT8_C)> ]
+"5912" [label = <(METHOD_RETURN,ANY)> ]
+  "5909" -> "5912" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/107-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/107-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/107-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/107-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "memset" {  
-"5918" [label = <(METHOD,memset)> ]
-"5923" [label = <(METHOD_RETURN,ANY)> ]
-  "5918" -> "5923" 
+"5913" [label = <(METHOD,memset)> ]
+"5918" [label = <(METHOD_RETURN,ANY)> ]
+  "5913" -> "5918" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/108-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/108-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/108-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/108-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.multiplication" {  
-"5924" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
-"5928" [label = <(METHOD_RETURN,ANY)> ]
-  "5924" -> "5928" 
+"5919" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
+"5923" [label = <(METHOD_RETURN,ANY)> ]
+  "5919" -> "5923" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/109-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/109-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/109-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/109-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.sizeOf" {  
-"5929" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
-"5932" [label = <(METHOD_RETURN,ANY)> ]
-  "5929" -> "5932" 
+"5924" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
+"5927" [label = <(METHOD_RETURN,ANY)> ]
+  "5924" -> "5927" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/11-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/11-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/11-cfg.dot	2023-06-07 19:31:27.087407672 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/11-cfg.dot	2023-06-07 19:31:31.567407272 +0330
@@ -1,11 +1,11 @@
 digraph "WriteMBRData" {  
-"1532" [label = <(&lt;operator&gt;.assignment,device = deviceFilename)<SUB>441</SUB>> ]
-"1535" [label = <(RETURN,return WriteMBRData();,return WriteMBRData();)<SUB>442</SUB>> ]
-"1536" [label = <(WriteMBRData,WriteMBRData())<SUB>442</SUB>> ]
-"1529" [label = <(METHOD,WriteMBRData)<SUB>440</SUB>> ]
-"1537" [label = <(METHOD_RETURN,int)<SUB>440</SUB>> ]
-  "1532" -> "1536" 
-  "1535" -> "1537" 
-  "1536" -> "1535" 
-  "1529" -> "1532" 
+"1527" [label = <(&lt;operator&gt;.assignment,device = deviceFilename)<SUB>440</SUB>> ]
+"1530" [label = <(RETURN,return WriteMBRData();,return WriteMBRData();)<SUB>441</SUB>> ]
+"1531" [label = <(WriteMBRData,WriteMBRData())<SUB>441</SUB>> ]
+"1524" [label = <(METHOD,WriteMBRData)<SUB>439</SUB>> ]
+"1532" [label = <(METHOD_RETURN,int)<SUB>439</SUB>> ]
+  "1527" -> "1531" 
+  "1530" -> "1532" 
+  "1531" -> "1530" 
+  "1524" -> "1527" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/110-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/110-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/110-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/110-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterEqualsThan" {  
-"5933" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
-"5937" [label = <(METHOD_RETURN,ANY)> ]
-  "5933" -> "5937" 
+"5928" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
+"5932" [label = <(METHOD_RETURN,ANY)> ]
+  "5928" -> "5932" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/111-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/111-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/111-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/111-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.minus" {  
-"5938" [label = <(METHOD,&lt;operator&gt;.minus)> ]
-"5941" [label = <(METHOD_RETURN,ANY)> ]
-  "5938" -> "5941" 
+"5933" [label = <(METHOD,&lt;operator&gt;.minus)> ]
+"5936" [label = <(METHOD_RETURN,ANY)> ]
+  "5933" -> "5936" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/112-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/112-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/112-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/112-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentMinus" {  
-"5942" [label = <(METHOD,&lt;operator&gt;.assignmentMinus)> ]
-"5946" [label = <(METHOD_RETURN,ANY)> ]
-  "5942" -> "5946" 
+"5937" [label = <(METHOD,&lt;operator&gt;.assignmentMinus)> ]
+"5941" [label = <(METHOD_RETURN,ANY)> ]
+  "5937" -> "5941" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/113-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/113-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/113-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/113-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "fill" {  
-"5947" [label = <(METHOD,fill)> ]
-"5951" [label = <(METHOD_RETURN,ANY)> ]
-  "5947" -> "5951" 
+"5942" [label = <(METHOD,fill)> ]
+"5946" [label = <(METHOD_RETURN,ANY)> ]
+  "5942" -> "5946" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/114-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/114-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/114-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/114-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "width" {  
-"5952" [label = <(METHOD,width)> ]
-"5956" [label = <(METHOD_RETURN,ANY)> ]
-  "5952" -> "5956" 
+"5947" [label = <(METHOD,width)> ]
+"5951" [label = <(METHOD_RETURN,ANY)> ]
+  "5947" -> "5951" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/115-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/115-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/115-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/115-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "setf" {  
-"5957" [label = <(METHOD,setf)> ]
-"5961" [label = <(METHOD_RETURN,ANY)> ]
-  "5957" -> "5961" 
+"5952" [label = <(METHOD,setf)> ]
+"5956" [label = <(METHOD_RETURN,ANY)> ]
+  "5952" -> "5956" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/116-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/116-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/116-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/116-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "SetStartLBA" {  
-"5962" [label = <(METHOD,SetStartLBA)> ]
-"5966" [label = <(METHOD_RETURN,ANY)> ]
-  "5962" -> "5966" 
+"5957" [label = <(METHOD,SetStartLBA)> ]
+"5961" [label = <(METHOD_RETURN,ANY)> ]
+  "5957" -> "5961" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/117-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/117-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/117-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/117-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "UINT32_C" {  
-"5967" [label = <(METHOD,UINT32_C)> ]
-"5970" [label = <(METHOD_RETURN,ANY)> ]
-  "5967" -> "5970" 
+"5962" [label = <(METHOD,UINT32_C)> ]
+"5965" [label = <(METHOD_RETURN,ANY)> ]
+  "5962" -> "5965" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/118-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/118-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/118-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/118-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.subtraction" {  
-"5971" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
-"5975" [label = <(METHOD_RETURN,ANY)> ]
-  "5971" -> "5975" 
+"5966" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
+"5970" [label = <(METHOD_RETURN,ANY)> ]
+  "5966" -> "5970" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/119-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/119-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/119-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/119-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "OpenForWrite" {  
-"5976" [label = <(METHOD,OpenForWrite)> ]
-"5979" [label = <(METHOD_RETURN,ANY)> ]
-  "5976" -> "5979" 
+"5971" [label = <(METHOD,OpenForWrite)> ]
+"5974" [label = <(METHOD_RETURN,ANY)> ]
+  "5971" -> "5974" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/12-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/12-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/12-cfg.dot	2023-06-07 19:31:27.097407671 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/12-cfg.dot	2023-06-07 19:31:31.567407272 +0330
@@ -1,186 +1,186 @@
 digraph "WriteMBRData" {  
-"1600" [label = <(&lt;operator&gt;.assignment,allOK = theDisk-&gt;OpenForWrite())<SUB>464</SUB>> ]
-"1648" [label = <(Close,theDisk-&gt;Close())<SUB>474</SUB>> ]
-"1706" [label = <(RETURN,return allOK;,return allOK;)<SUB>486</SUB>> ]
-"1547" [label = <(&lt;operator&gt;.equals,IsLittleEndian() == 0)<SUB>453</SUB>> ]
-"1602" [label = <(OpenForWrite,theDisk-&gt;OpenForWrite())<SUB>464</SUB>> ]
-"1607" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; theDisk-&gt;Seek(sector))<SUB>465</SUB>> ]
-"1649" [label = <(&lt;operator&gt;.indirectFieldAccess,theDisk-&gt;Close)<SUB>474</SUB>> ]
-"1653" [label = <(&lt;operator&gt;.equals,IsLittleEndian() == 0)<SUB>477</SUB>> ]
-"1548" [label = <(IsLittleEndian,IsLittleEndian())<SUB>453</SUB>> ]
-"1551" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.diskSignature, 4))<SUB>454</SUB>> ]
-"1557" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.nulls, 2))<SUB>455</SUB>> ]
-"1563" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.MBRSignature, 2))<SUB>456</SUB>> ]
-"1603" [label = <(&lt;operator&gt;.indirectFieldAccess,theDisk-&gt;OpenForWrite)<SUB>464</SUB>> ]
-"1609" [label = <(Seek,theDisk-&gt;Seek(sector))<SUB>465</SUB>> ]
-"1651" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>474</SUB>> ]
-"1654" [label = <(IsLittleEndian,IsLittleEndian())<SUB>477</SUB>> ]
-"1657" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.diskSignature, 4))<SUB>478</SUB>> ]
-"1663" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.nulls, 2))<SUB>479</SUB>> ]
-"1669" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.MBRSignature, 2))<SUB>480</SUB>> ]
-"1552" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.diskSignature)<SUB>454</SUB>> ]
-"1558" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.nulls)<SUB>455</SUB>> ]
-"1564" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.MBRSignature)<SUB>456</SUB>> ]
-"1574" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>457</SUB>> ]
-"1577" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>457</SUB>> ]
-"1605" [label = <(FIELD_IDENTIFIER,OpenForWrite,OpenForWrite)<SUB>464</SUB>> ]
-"1610" [label = <(&lt;operator&gt;.indirectFieldAccess,theDisk-&gt;Seek)<SUB>465</SUB>> ]
-"1616" [label = <(&lt;operator&gt;.notEquals,theDisk-&gt;Write(&amp;mbr, 512) != 512)<SUB>466</SUB>> ]
-"1638" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>471</SUB>> ]
-"1641" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot; &lt;&lt; errno &lt;&lt; &quot; when seeking to MBR to write it!\n&quot;)<SUB>472</SUB>> ]
-"1658" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.diskSignature)<SUB>478</SUB>> ]
-"1664" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.nulls)<SUB>479</SUB>> ]
-"1670" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.MBRSignature)<SUB>480</SUB>> ]
-"1680" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>481</SUB>> ]
-"1683" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>481</SUB>> ]
-"1553" [label = <(&lt;operator&gt;.fieldAccess,mbr.diskSignature)<SUB>454</SUB>> ]
-"1559" [label = <(&lt;operator&gt;.fieldAccess,mbr.nulls)<SUB>455</SUB>> ]
-"1565" [label = <(&lt;operator&gt;.fieldAccess,mbr.MBRSignature)<SUB>456</SUB>> ]
-"1571" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>457</SUB>> ]
-"1580" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.partitions[i].firstLBA, 4))<SUB>458</SUB>> ]
-"1590" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.partitions[i].lengthLBA, 4))<SUB>459</SUB>> ]
-"1612" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>465</SUB>> ]
-"1617" [label = <(Write,theDisk-&gt;Write(&amp;mbr, 512))<SUB>466</SUB>> ]
-"1626" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>467</SUB>> ]
-"1629" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot; &lt;&lt; errno &lt;&lt; &quot; when saving MBR!\n&quot;)<SUB>468</SUB>> ]
-"1642" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot; &lt;&lt; errno)<SUB>472</SUB>> ]
-"1659" [label = <(&lt;operator&gt;.fieldAccess,mbr.diskSignature)<SUB>478</SUB>> ]
-"1665" [label = <(&lt;operator&gt;.fieldAccess,mbr.nulls)<SUB>479</SUB>> ]
-"1671" [label = <(&lt;operator&gt;.fieldAccess,mbr.MBRSignature)<SUB>480</SUB>> ]
-"1677" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>481</SUB>> ]
-"1686" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.partitions[i].firstLBA, 4))<SUB>482</SUB>> ]
-"1696" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.partitions[i].lengthLBA, 4))<SUB>483</SUB>> ]
-"1555" [label = <(FIELD_IDENTIFIER,diskSignature,diskSignature)<SUB>454</SUB>> ]
-"1561" [label = <(FIELD_IDENTIFIER,nulls,nulls)<SUB>455</SUB>> ]
-"1567" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>456</SUB>> ]
-"1581" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.partitions[i].firstLBA)<SUB>458</SUB>> ]
-"1591" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.partitions[i].lengthLBA)<SUB>459</SUB>> ]
-"1618" [label = <(&lt;operator&gt;.indirectFieldAccess,theDisk-&gt;Write)<SUB>466</SUB>> ]
-"1621" [label = <(&lt;operator&gt;.addressOf,&amp;mbr)<SUB>466</SUB>> ]
-"1630" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot; &lt;&lt; errno)<SUB>468</SUB>> ]
-"1643" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot;)<SUB>472</SUB>> ]
-"1661" [label = <(FIELD_IDENTIFIER,diskSignature,diskSignature)<SUB>478</SUB>> ]
-"1667" [label = <(FIELD_IDENTIFIER,nulls,nulls)<SUB>479</SUB>> ]
-"1673" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>480</SUB>> ]
-"1687" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.partitions[i].firstLBA)<SUB>482</SUB>> ]
-"1697" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.partitions[i].lengthLBA)<SUB>483</SUB>> ]
-"1582" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions[i].firstLBA)<SUB>458</SUB>> ]
-"1592" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions[i].lengthLBA)<SUB>459</SUB>> ]
-"1620" [label = <(FIELD_IDENTIFIER,Write,Write)<SUB>466</SUB>> ]
-"1631" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot;)<SUB>468</SUB>> ]
-"1688" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions[i].firstLBA)<SUB>482</SUB>> ]
-"1698" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions[i].lengthLBA)<SUB>483</SUB>> ]
-"1583" [label = <(&lt;operator&gt;.indirectIndexAccess,mbr.partitions[i])<SUB>458</SUB>> ]
-"1588" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>458</SUB>> ]
-"1593" [label = <(&lt;operator&gt;.indirectIndexAccess,mbr.partitions[i])<SUB>459</SUB>> ]
-"1598" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>459</SUB>> ]
-"1689" [label = <(&lt;operator&gt;.indirectIndexAccess,mbr.partitions[i])<SUB>482</SUB>> ]
-"1694" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>482</SUB>> ]
-"1699" [label = <(&lt;operator&gt;.indirectIndexAccess,mbr.partitions[i])<SUB>483</SUB>> ]
-"1704" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>483</SUB>> ]
-"1584" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions)<SUB>458</SUB>> ]
-"1594" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions)<SUB>459</SUB>> ]
-"1690" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions)<SUB>482</SUB>> ]
-"1700" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions)<SUB>483</SUB>> ]
-"1586" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>458</SUB>> ]
-"1596" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>459</SUB>> ]
-"1692" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>482</SUB>> ]
-"1702" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>483</SUB>> ]
-"1539" [label = <(METHOD,WriteMBRData)<SUB>449</SUB>> ]
-"1708" [label = <(METHOD_RETURN,int)<SUB>449</SUB>> ]
-  "1600" -> "1607" 
-  "1600" -> "1612" 
-  "1648" -> "1654" 
-  "1706" -> "1708" 
-  "1547" -> "1555" 
-  "1547" -> "1605" 
-  "1602" -> "1600" 
-  "1607" -> "1620" 
-  "1607" -> "1638" 
+"1595" [label = <(&lt;operator&gt;.assignment,allOK = theDisk-&gt;OpenForWrite())<SUB>463</SUB>> ]
+"1643" [label = <(Close,theDisk-&gt;Close())<SUB>473</SUB>> ]
+"1701" [label = <(RETURN,return allOK;,return allOK;)<SUB>485</SUB>> ]
+"1542" [label = <(&lt;operator&gt;.equals,IsLittleEndian() == 0)<SUB>452</SUB>> ]
+"1597" [label = <(OpenForWrite,theDisk-&gt;OpenForWrite())<SUB>463</SUB>> ]
+"1602" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; theDisk-&gt;Seek(sector))<SUB>464</SUB>> ]
+"1644" [label = <(&lt;operator&gt;.indirectFieldAccess,theDisk-&gt;Close)<SUB>473</SUB>> ]
+"1648" [label = <(&lt;operator&gt;.equals,IsLittleEndian() == 0)<SUB>476</SUB>> ]
+"1543" [label = <(IsLittleEndian,IsLittleEndian())<SUB>452</SUB>> ]
+"1546" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.diskSignature, 4))<SUB>453</SUB>> ]
+"1552" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.nulls, 2))<SUB>454</SUB>> ]
+"1558" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.MBRSignature, 2))<SUB>455</SUB>> ]
+"1598" [label = <(&lt;operator&gt;.indirectFieldAccess,theDisk-&gt;OpenForWrite)<SUB>463</SUB>> ]
+"1604" [label = <(Seek,theDisk-&gt;Seek(sector))<SUB>464</SUB>> ]
+"1646" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>473</SUB>> ]
+"1649" [label = <(IsLittleEndian,IsLittleEndian())<SUB>476</SUB>> ]
+"1652" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.diskSignature, 4))<SUB>477</SUB>> ]
+"1658" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.nulls, 2))<SUB>478</SUB>> ]
+"1664" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.MBRSignature, 2))<SUB>479</SUB>> ]
+"1547" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.diskSignature)<SUB>453</SUB>> ]
+"1553" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.nulls)<SUB>454</SUB>> ]
+"1559" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.MBRSignature)<SUB>455</SUB>> ]
+"1569" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>456</SUB>> ]
+"1572" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>456</SUB>> ]
+"1600" [label = <(FIELD_IDENTIFIER,OpenForWrite,OpenForWrite)<SUB>463</SUB>> ]
+"1605" [label = <(&lt;operator&gt;.indirectFieldAccess,theDisk-&gt;Seek)<SUB>464</SUB>> ]
+"1611" [label = <(&lt;operator&gt;.notEquals,theDisk-&gt;Write(&amp;mbr, 512) != 512)<SUB>465</SUB>> ]
+"1633" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>470</SUB>> ]
+"1636" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot; &lt;&lt; errno &lt;&lt; &quot; when seeking to MBR to write it!\n&quot;)<SUB>471</SUB>> ]
+"1653" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.diskSignature)<SUB>477</SUB>> ]
+"1659" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.nulls)<SUB>478</SUB>> ]
+"1665" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.MBRSignature)<SUB>479</SUB>> ]
+"1675" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>480</SUB>> ]
+"1678" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>480</SUB>> ]
+"1548" [label = <(&lt;operator&gt;.fieldAccess,mbr.diskSignature)<SUB>453</SUB>> ]
+"1554" [label = <(&lt;operator&gt;.fieldAccess,mbr.nulls)<SUB>454</SUB>> ]
+"1560" [label = <(&lt;operator&gt;.fieldAccess,mbr.MBRSignature)<SUB>455</SUB>> ]
+"1566" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>456</SUB>> ]
+"1575" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.partitions[i].firstLBA, 4))<SUB>457</SUB>> ]
+"1585" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.partitions[i].lengthLBA, 4))<SUB>458</SUB>> ]
+"1607" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>464</SUB>> ]
+"1612" [label = <(Write,theDisk-&gt;Write(&amp;mbr, 512))<SUB>465</SUB>> ]
+"1621" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>466</SUB>> ]
+"1624" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot; &lt;&lt; errno &lt;&lt; &quot; when saving MBR!\n&quot;)<SUB>467</SUB>> ]
+"1637" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot; &lt;&lt; errno)<SUB>471</SUB>> ]
+"1654" [label = <(&lt;operator&gt;.fieldAccess,mbr.diskSignature)<SUB>477</SUB>> ]
+"1660" [label = <(&lt;operator&gt;.fieldAccess,mbr.nulls)<SUB>478</SUB>> ]
+"1666" [label = <(&lt;operator&gt;.fieldAccess,mbr.MBRSignature)<SUB>479</SUB>> ]
+"1672" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>480</SUB>> ]
+"1681" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.partitions[i].firstLBA, 4))<SUB>481</SUB>> ]
+"1691" [label = <(ReverseBytes,ReverseBytes(&amp;mbr.partitions[i].lengthLBA, 4))<SUB>482</SUB>> ]
+"1550" [label = <(FIELD_IDENTIFIER,diskSignature,diskSignature)<SUB>453</SUB>> ]
+"1556" [label = <(FIELD_IDENTIFIER,nulls,nulls)<SUB>454</SUB>> ]
+"1562" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>455</SUB>> ]
+"1576" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.partitions[i].firstLBA)<SUB>457</SUB>> ]
+"1586" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.partitions[i].lengthLBA)<SUB>458</SUB>> ]
+"1613" [label = <(&lt;operator&gt;.indirectFieldAccess,theDisk-&gt;Write)<SUB>465</SUB>> ]
+"1616" [label = <(&lt;operator&gt;.addressOf,&amp;mbr)<SUB>465</SUB>> ]
+"1625" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot; &lt;&lt; errno)<SUB>467</SUB>> ]
+"1638" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot;)<SUB>471</SUB>> ]
+"1656" [label = <(FIELD_IDENTIFIER,diskSignature,diskSignature)<SUB>477</SUB>> ]
+"1662" [label = <(FIELD_IDENTIFIER,nulls,nulls)<SUB>478</SUB>> ]
+"1668" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>479</SUB>> ]
+"1682" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.partitions[i].firstLBA)<SUB>481</SUB>> ]
+"1692" [label = <(&lt;operator&gt;.addressOf,&amp;mbr.partitions[i].lengthLBA)<SUB>482</SUB>> ]
+"1577" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions[i].firstLBA)<SUB>457</SUB>> ]
+"1587" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions[i].lengthLBA)<SUB>458</SUB>> ]
+"1615" [label = <(FIELD_IDENTIFIER,Write,Write)<SUB>465</SUB>> ]
+"1626" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error &quot;)<SUB>467</SUB>> ]
+"1683" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions[i].firstLBA)<SUB>481</SUB>> ]
+"1693" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions[i].lengthLBA)<SUB>482</SUB>> ]
+"1578" [label = <(&lt;operator&gt;.indirectIndexAccess,mbr.partitions[i])<SUB>457</SUB>> ]
+"1583" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>457</SUB>> ]
+"1588" [label = <(&lt;operator&gt;.indirectIndexAccess,mbr.partitions[i])<SUB>458</SUB>> ]
+"1593" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>458</SUB>> ]
+"1684" [label = <(&lt;operator&gt;.indirectIndexAccess,mbr.partitions[i])<SUB>481</SUB>> ]
+"1689" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>481</SUB>> ]
+"1694" [label = <(&lt;operator&gt;.indirectIndexAccess,mbr.partitions[i])<SUB>482</SUB>> ]
+"1699" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>482</SUB>> ]
+"1579" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions)<SUB>457</SUB>> ]
+"1589" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions)<SUB>458</SUB>> ]
+"1685" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions)<SUB>481</SUB>> ]
+"1695" [label = <(&lt;operator&gt;.fieldAccess,mbr.partitions)<SUB>482</SUB>> ]
+"1581" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>457</SUB>> ]
+"1591" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>458</SUB>> ]
+"1687" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>481</SUB>> ]
+"1697" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>482</SUB>> ]
+"1534" [label = <(METHOD,WriteMBRData)<SUB>448</SUB>> ]
+"1703" [label = <(METHOD_RETURN,int)<SUB>448</SUB>> ]
+  "1595" -> "1602" 
+  "1595" -> "1607" 
+  "1643" -> "1649" 
+  "1701" -> "1703" 
+  "1542" -> "1550" 
+  "1542" -> "1600" 
+  "1597" -> "1595" 
+  "1602" -> "1615" 
+  "1602" -> "1633" 
+  "1644" -> "1643" 
+  "1648" -> "1656" 
+  "1648" -> "1701" 
+  "1543" -> "1542" 
+  "1546" -> "1556" 
+  "1552" -> "1562" 
+  "1558" -> "1566" 
+  "1598" -> "1597" 
+  "1604" -> "1602" 
+  "1646" -> "1644" 
   "1649" -> "1648" 
-  "1653" -> "1661" 
-  "1653" -> "1706" 
-  "1548" -> "1547" 
-  "1551" -> "1561" 
-  "1557" -> "1567" 
-  "1563" -> "1571" 
-  "1603" -> "1602" 
-  "1609" -> "1607" 
-  "1651" -> "1649" 
-  "1654" -> "1653" 
-  "1657" -> "1667" 
-  "1663" -> "1673" 
-  "1669" -> "1677" 
-  "1552" -> "1551" 
-  "1558" -> "1557" 
-  "1564" -> "1563" 
-  "1574" -> "1586" 
-  "1574" -> "1605" 
-  "1577" -> "1574" 
-  "1605" -> "1603" 
-  "1610" -> "1609" 
-  "1616" -> "1626" 
-  "1616" -> "1651" 
-  "1638" -> "1643" 
-  "1641" -> "1651" 
-  "1658" -> "1657" 
-  "1664" -> "1663" 
-  "1670" -> "1669" 
-  "1680" -> "1692" 
-  "1680" -> "1706" 
-  "1683" -> "1680" 
+  "1652" -> "1662" 
+  "1658" -> "1668" 
+  "1664" -> "1672" 
+  "1547" -> "1546" 
   "1553" -> "1552" 
   "1559" -> "1558" 
-  "1565" -> "1564" 
-  "1571" -> "1574" 
-  "1580" -> "1596" 
-  "1590" -> "1577" 
-  "1612" -> "1610" 
-  "1617" -> "1616" 
-  "1626" -> "1631" 
-  "1629" -> "1651" 
-  "1642" -> "1641" 
+  "1569" -> "1581" 
+  "1569" -> "1600" 
+  "1572" -> "1569" 
+  "1600" -> "1598" 
+  "1605" -> "1604" 
+  "1611" -> "1621" 
+  "1611" -> "1646" 
+  "1633" -> "1638" 
+  "1636" -> "1646" 
+  "1653" -> "1652" 
   "1659" -> "1658" 
   "1665" -> "1664" 
-  "1671" -> "1670" 
-  "1677" -> "1680" 
-  "1686" -> "1702" 
-  "1696" -> "1683" 
-  "1555" -> "1553" 
-  "1561" -> "1559" 
-  "1567" -> "1565" 
-  "1581" -> "1580" 
-  "1591" -> "1590" 
-  "1618" -> "1621" 
-  "1621" -> "1617" 
-  "1630" -> "1629" 
-  "1643" -> "1642" 
-  "1661" -> "1659" 
-  "1667" -> "1665" 
-  "1673" -> "1671" 
-  "1687" -> "1686" 
-  "1697" -> "1696" 
-  "1582" -> "1581" 
-  "1592" -> "1591" 
-  "1620" -> "1618" 
-  "1631" -> "1630" 
-  "1688" -> "1687" 
-  "1698" -> "1697" 
-  "1583" -> "1588" 
-  "1588" -> "1582" 
-  "1593" -> "1598" 
-  "1598" -> "1592" 
-  "1689" -> "1694" 
-  "1694" -> "1688" 
-  "1699" -> "1704" 
-  "1704" -> "1698" 
-  "1584" -> "1583" 
-  "1594" -> "1593" 
-  "1690" -> "1689" 
-  "1700" -> "1699" 
-  "1586" -> "1584" 
-  "1596" -> "1594" 
-  "1692" -> "1690" 
-  "1702" -> "1700" 
-  "1539" -> "1548" 
+  "1675" -> "1687" 
+  "1675" -> "1701" 
+  "1678" -> "1675" 
+  "1548" -> "1547" 
+  "1554" -> "1553" 
+  "1560" -> "1559" 
+  "1566" -> "1569" 
+  "1575" -> "1591" 
+  "1585" -> "1572" 
+  "1607" -> "1605" 
+  "1612" -> "1611" 
+  "1621" -> "1626" 
+  "1624" -> "1646" 
+  "1637" -> "1636" 
+  "1654" -> "1653" 
+  "1660" -> "1659" 
+  "1666" -> "1665" 
+  "1672" -> "1675" 
+  "1681" -> "1697" 
+  "1691" -> "1678" 
+  "1550" -> "1548" 
+  "1556" -> "1554" 
+  "1562" -> "1560" 
+  "1576" -> "1575" 
+  "1586" -> "1585" 
+  "1613" -> "1616" 
+  "1616" -> "1612" 
+  "1625" -> "1624" 
+  "1638" -> "1637" 
+  "1656" -> "1654" 
+  "1662" -> "1660" 
+  "1668" -> "1666" 
+  "1682" -> "1681" 
+  "1692" -> "1691" 
+  "1577" -> "1576" 
+  "1587" -> "1586" 
+  "1615" -> "1613" 
+  "1626" -> "1625" 
+  "1683" -> "1682" 
+  "1693" -> "1692" 
+  "1578" -> "1583" 
+  "1583" -> "1577" 
+  "1588" -> "1593" 
+  "1593" -> "1587" 
+  "1684" -> "1689" 
+  "1689" -> "1683" 
+  "1694" -> "1699" 
+  "1699" -> "1693" 
+  "1579" -> "1578" 
+  "1589" -> "1588" 
+  "1685" -> "1684" 
+  "1695" -> "1694" 
+  "1581" -> "1579" 
+  "1591" -> "1589" 
+  "1687" -> "1685" 
+  "1697" -> "1695" 
+  "1534" -> "1543" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/120-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/120-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/120-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/120-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "WriteMBRData" {  
-"5980" [label = <(METHOD,WriteMBRData)> ]
-"5982" [label = <(METHOD_RETURN,ANY)> ]
-  "5980" -> "5982" 
+"5975" [label = <(METHOD,WriteMBRData)> ]
+"5977" [label = <(METHOD_RETURN,ANY)> ]
+  "5975" -> "5977" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/121-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/121-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/121-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/121-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "Close" {  
-"5983" [label = <(METHOD,Close)> ]
-"5986" [label = <(METHOD_RETURN,ANY)> ]
-  "5983" -> "5986" 
+"5978" [label = <(METHOD,Close)> ]
+"5981" [label = <(METHOD_RETURN,ANY)> ]
+  "5978" -> "5981" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/122-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/122-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/122-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/122-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "CreateExtended" {  
-"5987" [label = <(METHOD,CreateExtended)> ]
-"5989" [label = <(METHOD_RETURN,ANY)> ]
-  "5987" -> "5989" 
+"5982" [label = <(METHOD,CreateExtended)> ]
+"5984" [label = <(METHOD_RETURN,ANY)> ]
+  "5982" -> "5984" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/123-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/123-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/123-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/123-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "StoreInStruct" {  
-"5990" [label = <(METHOD,StoreInStruct)> ]
-"5994" [label = <(METHOD_RETURN,ANY)> ]
-  "5990" -> "5994" 
+"5985" [label = <(METHOD,StoreInStruct)> ]
+"5989" [label = <(METHOD_RETURN,ANY)> ]
+  "5985" -> "5989" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/124-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/124-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/124-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/124-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "FindNextInUse" {  
-"5995" [label = <(METHOD,FindNextInUse)> ]
-"5998" [label = <(METHOD_RETURN,ANY)> ]
-  "5995" -> "5998" 
+"5990" [label = <(METHOD,FindNextInUse)> ]
+"5993" [label = <(METHOD_RETURN,ANY)> ]
+  "5990" -> "5993" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/125-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/125-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/125-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/125-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.cast" {  
-"5999" [label = <(METHOD,&lt;operator&gt;.cast)> ]
-"6003" [label = <(METHOD_RETURN,ANY)> ]
-  "5999" -> "6003" 
+"5994" [label = <(METHOD,&lt;operator&gt;.cast)> ]
+"5998" [label = <(METHOD_RETURN,ANY)> ]
+  "5994" -> "5998" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/126-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/126-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/126-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/126-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "uint32_t" {  
-"6004" [label = <(METHOD,uint32_t)> ]
-"6007" [label = <(METHOD_RETURN,ANY)> ]
-  "6004" -> "6007" 
+"5999" [label = <(METHOD,uint32_t)> ]
+"6002" [label = <(METHOD_RETURN,ANY)> ]
+  "5999" -> "6002" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/127-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/127-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/127-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/127-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "LBAtoCHS" {  
-"6008" [label = <(METHOD,LBAtoCHS)> ]
-"6012" [label = <(METHOD_RETURN,ANY)> ]
-  "6008" -> "6012" 
+"6003" [label = <(METHOD,LBAtoCHS)> ]
+"6007" [label = <(METHOD_RETURN,ANY)> ]
+  "6003" -> "6007" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/128-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/128-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/128-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/128-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteExtendedParts" {  
-"6013" [label = <(METHOD,DeleteExtendedParts)> ]
-"6015" [label = <(METHOD_RETURN,ANY)> ]
-  "6013" -> "6015" 
+"6008" [label = <(METHOD,DeleteExtendedParts)> ]
+"6010" [label = <(METHOD_RETURN,ANY)> ]
+  "6008" -> "6010" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/129-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/129-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/129-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/129-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "Write" {  
-"6016" [label = <(METHOD,Write)> ]
-"6021" [label = <(METHOD_RETURN,ANY)> ]
-  "6016" -> "6021" 
+"6011" [label = <(METHOD,Write)> ]
+"6016" [label = <(METHOD_RETURN,ANY)> ]
+  "6011" -> "6016" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/13-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/13-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/13-cfg.dot	2023-06-07 19:31:27.097407671 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/13-cfg.dot	2023-06-07 19:31:31.567407272 +0330
@@ -1,21 +1,21 @@
 digraph "SetDisk" {  
-"1714" [label = <(&lt;operator&gt;.assignment,myDisk = theDisk)<SUB>494</SUB>> ]
-"1717" [label = <(&lt;operator&gt;.assignment,diskSize = theDisk-&gt;DiskSize(&amp;err))<SUB>495</SUB>> ]
-"1725" [label = <(&lt;operator&gt;.assignment,canDeleteMyDisk = 0)<SUB>496</SUB>> ]
-"1728" [label = <(ReadCHSGeom,ReadCHSGeom())<SUB>497</SUB>> ]
-"1719" [label = <(DiskSize,theDisk-&gt;DiskSize(&amp;err))<SUB>495</SUB>> ]
-"1720" [label = <(&lt;operator&gt;.indirectFieldAccess,theDisk-&gt;DiskSize)<SUB>495</SUB>> ]
-"1723" [label = <(&lt;operator&gt;.addressOf,&amp;err)<SUB>495</SUB>> ]
-"1722" [label = <(FIELD_IDENTIFIER,DiskSize,DiskSize)<SUB>495</SUB>> ]
-"1710" [label = <(METHOD,SetDisk)<SUB>491</SUB>> ]
-"1729" [label = <(METHOD_RETURN,void)<SUB>491</SUB>> ]
-  "1714" -> "1722" 
-  "1717" -> "1725" 
-  "1725" -> "1728" 
-  "1728" -> "1729" 
-  "1719" -> "1717" 
+"1709" [label = <(&lt;operator&gt;.assignment,myDisk = theDisk)<SUB>493</SUB>> ]
+"1712" [label = <(&lt;operator&gt;.assignment,diskSize = theDisk-&gt;DiskSize(&amp;err))<SUB>494</SUB>> ]
+"1720" [label = <(&lt;operator&gt;.assignment,canDeleteMyDisk = 0)<SUB>495</SUB>> ]
+"1723" [label = <(ReadCHSGeom,ReadCHSGeom())<SUB>496</SUB>> ]
+"1714" [label = <(DiskSize,theDisk-&gt;DiskSize(&amp;err))<SUB>494</SUB>> ]
+"1715" [label = <(&lt;operator&gt;.indirectFieldAccess,theDisk-&gt;DiskSize)<SUB>494</SUB>> ]
+"1718" [label = <(&lt;operator&gt;.addressOf,&amp;err)<SUB>494</SUB>> ]
+"1717" [label = <(FIELD_IDENTIFIER,DiskSize,DiskSize)<SUB>494</SUB>> ]
+"1705" [label = <(METHOD,SetDisk)<SUB>490</SUB>> ]
+"1724" [label = <(METHOD_RETURN,void)<SUB>490</SUB>> ]
+  "1709" -> "1717" 
+  "1712" -> "1720" 
   "1720" -> "1723" 
-  "1723" -> "1719" 
-  "1722" -> "1720" 
-  "1710" -> "1714" 
+  "1723" -> "1724" 
+  "1714" -> "1712" 
+  "1715" -> "1718" 
+  "1718" -> "1714" 
+  "1717" -> "1715" 
+  "1705" -> "1709" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/130-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/130-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/130-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/130-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "BytesToIeee" {  
-"6022" [label = <(METHOD,BytesToIeee)> ]
-"6026" [label = <(METHOD_RETURN,ANY)> ]
-  "6022" -> "6026" 
+"6017" [label = <(METHOD,BytesToIeee)> ]
+"6021" [label = <(METHOD_RETURN,ANY)> ]
+  "6017" -> "6021" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/131-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/131-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/131-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/131-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "UpdateCanBeLogical" {  
-"6027" [label = <(METHOD,UpdateCanBeLogical)> ]
-"6029" [label = <(METHOD_RETURN,ANY)> ]
-  "6027" -> "6029" 
+"6022" [label = <(METHOD,UpdateCanBeLogical)> ]
+"6024" [label = <(METHOD_RETURN,ANY)> ]
+  "6022" -> "6024" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/132-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/132-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/132-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/132-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "ShowData" {  
-"6030" [label = <(METHOD,ShowData)> ]
-"6034" [label = <(METHOD_RETURN,ANY)> ]
-  "6030" -> "6034" 
+"6025" [label = <(METHOD,ShowData)> ]
+"6029" [label = <(METHOD_RETURN,ANY)> ]
+  "6025" -> "6029" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/133-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/133-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/133-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/133-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "strcmp" {  
-"6035" [label = <(METHOD,strcmp)> ]
-"6039" [label = <(METHOD_RETURN,ANY)> ]
-  "6035" -> "6039" 
+"6030" [label = <(METHOD,strcmp)> ]
+"6034" [label = <(METHOD_RETURN,ANY)> ]
+  "6030" -> "6034" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/134-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/134-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/134-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/134-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentPlus" {  
-"6040" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
-"6044" [label = <(METHOD_RETURN,ANY)> ]
-  "6040" -> "6044" 
+"6035" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
+"6039" [label = <(METHOD_RETURN,ANY)> ]
+  "6035" -> "6039" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/135-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/135-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/135-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/135-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "CheckForGPT" {  
-"6045" [label = <(METHOD,CheckForGPT)> ]
-"6047" [label = <(METHOD_RETURN,ANY)> ]
-  "6045" -> "6047" 
+"6040" [label = <(METHOD,CheckForGPT)> ]
+"6042" [label = <(METHOD_RETURN,ANY)> ]
+  "6040" -> "6042" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/136-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/136-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/136-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/136-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "GetNumHeads" {  
-"6048" [label = <(METHOD,GetNumHeads)> ]
-"6051" [label = <(METHOD_RETURN,ANY)> ]
-  "6048" -> "6051" 
+"6043" [label = <(METHOD,GetNumHeads)> ]
+"6046" [label = <(METHOD_RETURN,ANY)> ]
+  "6043" -> "6046" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/137-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/137-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/137-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/137-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "GetNumSecsPerTrack" {  
-"6052" [label = <(METHOD,GetNumSecsPerTrack)> ]
-"6055" [label = <(METHOD_RETURN,ANY)> ]
-  "6052" -> "6055" 
+"6047" [label = <(METHOD,GetNumSecsPerTrack)> ]
+"6050" [label = <(METHOD_RETURN,ANY)> ]
+  "6047" -> "6050" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/138-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/138-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/138-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/138-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SetGeometry" {  
-"6056" [label = <(METHOD,SetGeometry)> ]
-"6063" [label = <(METHOD_RETURN,ANY)> ]
-  "6056" -> "6063" 
+"6051" [label = <(METHOD,SetGeometry)> ]
+"6058" [label = <(METHOD_RETURN,ANY)> ]
+  "6051" -> "6058" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/139-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/139-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/139-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/139-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.division" {  
-"6064" [label = <(METHOD,&lt;operator&gt;.division)> ]
-"6068" [label = <(METHOD_RETURN,ANY)> ]
-  "6064" -> "6068" 
+"6059" [label = <(METHOD,&lt;operator&gt;.division)> ]
+"6063" [label = <(METHOD_RETURN,ANY)> ]
+  "6059" -> "6063" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/14-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/14-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/14-cfg.dot	2023-06-07 19:31:27.097407671 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/14-cfg.dot	2023-06-07 19:31:31.577407271 +0330
@@ -1,124 +1,124 @@
 digraph "DisplayMBRData" {  
-"1735" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nDisk size is &quot; &lt;&lt; diskSize &lt;&lt; &quot; sectors (&quot;\012 &lt;&lt; BytesToIeee(diskSize, blockSize) &lt;&lt; &quot;)\n&quot;)<SUB>511</SUB>> ]
-"1748" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;MBR disk identifier: 0x&quot;)<SUB>513</SUB>> ]
-"1751" [label = <(width,cout.width(8))<SUB>514</SUB>> ]
-"1756" [label = <(fill,cout.fill('0'))<SUB>515</SUB>> ]
-"1761" [label = <(setf,cout.setf(ios::uppercase))<SUB>516</SUB>> ]
-"1768" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; hex &lt;&lt; diskSignature &lt;&lt; dec &lt;&lt; &quot;\n&quot;)<SUB>517</SUB>> ]
-"1777" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;MBR partitions:\n\n&quot;)<SUB>518</SUB>> ]
-"1736" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nDisk size is &quot; &lt;&lt; diskSize &lt;&lt; &quot; sectors (&quot;\012 &lt;&lt; BytesToIeee(diskSize, blockSize))<SUB>511</SUB>> ]
-"1752" [label = <(&lt;operator&gt;.fieldAccess,cout.width)<SUB>514</SUB>> ]
-"1757" [label = <(&lt;operator&gt;.fieldAccess,cout.fill)<SUB>515</SUB>> ]
-"1762" [label = <(&lt;operator&gt;.fieldAccess,cout.setf)<SUB>516</SUB>> ]
-"1765" [label = <(&lt;operator&gt;.fieldAccess,ios::uppercase)<SUB>516</SUB>> ]
-"1769" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; hex &lt;&lt; diskSignature &lt;&lt; dec)<SUB>517</SUB>> ]
-"1781" [label = <(&lt;operator&gt;.logicalOr,(state == gpt) || (state == hybrid))<SUB>519</SUB>> ]
-"1806" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>526</SUB>> ]
-"1809" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>526</SUB>> ]
-"1737" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nDisk size is &quot; &lt;&lt; diskSize &lt;&lt; &quot; sectors (&quot;)<SUB>511</SUB>> ]
-"1744" [label = <(BytesToIeee,BytesToIeee(diskSize, blockSize))<SUB>512</SUB>> ]
-"1754" [label = <(FIELD_IDENTIFIER,width,width)<SUB>514</SUB>> ]
-"1759" [label = <(FIELD_IDENTIFIER,fill,fill)<SUB>515</SUB>> ]
-"1764" [label = <(FIELD_IDENTIFIER,setf,setf)<SUB>516</SUB>> ]
-"1767" [label = <(FIELD_IDENTIFIER,uppercase,uppercase)<SUB>516</SUB>> ]
-"1770" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; hex &lt;&lt; diskSignature)<SUB>517</SUB>> ]
-"1782" [label = <(&lt;operator&gt;.equals,state == gpt)<SUB>519</SUB>> ]
-"1785" [label = <(&lt;operator&gt;.equals,state == hybrid)<SUB>519</SUB>> ]
-"1789" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;Number  Boot  Start Sector   End Sector   Status      Code\n&quot;)<SUB>520</SUB>> ]
-"1803" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>526</SUB>> ]
-"1852" [label = <(fill,cout.fill(' '))<SUB>533</SUB>> ]
-"1738" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nDisk size is &quot; &lt;&lt; diskSize)<SUB>511</SUB>> ]
-"1771" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; hex)<SUB>517</SUB>> ]
-"1794" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;                                                   Can Be   Can Be\n&quot;)<SUB>522</SUB>> ]
-"1797" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;Number  Boot  Start Sector   End Sector   Status   Logical  Primary   Code\n&quot;)<SUB>523</SUB>> ]
-"1800" [label = <(UpdateCanBeLogical,UpdateCanBeLogical())<SUB>524</SUB>> ]
-"1813" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetLengthLBA() != 0)<SUB>527</SUB>> ]
-"1853" [label = <(&lt;operator&gt;.fieldAccess,cout.fill)<SUB>533</SUB>> ]
-"1739" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nDisk size is &quot;)<SUB>511</SUB>> ]
-"1814" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>527</SUB>> ]
-"1822" [label = <(fill,cout.fill(' '))<SUB>528</SUB>> ]
-"1827" [label = <(width,cout.width(4))<SUB>529</SUB>> ]
-"1832" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; i + 1 &lt;&lt; &quot;      &quot;)<SUB>530</SUB>> ]
-"1839" [label = <(ShowData,partitions[i].ShowData((state == gpt) || (state == hybrid)))<SUB>531</SUB>> ]
-"1855" [label = <(FIELD_IDENTIFIER,fill,fill)<SUB>533</SUB>> ]
-"1815" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>527</SUB>> ]
-"1823" [label = <(&lt;operator&gt;.fieldAccess,cout.fill)<SUB>528</SUB>> ]
-"1828" [label = <(&lt;operator&gt;.fieldAccess,cout.width)<SUB>529</SUB>> ]
-"1833" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; i + 1)<SUB>530</SUB>> ]
-"1840" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].ShowData)<SUB>531</SUB>> ]
-"1845" [label = <(&lt;operator&gt;.logicalOr,(state == gpt) || (state == hybrid))<SUB>531</SUB>> ]
-"1816" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>527</SUB>> ]
-"1819" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>527</SUB>> ]
-"1825" [label = <(FIELD_IDENTIFIER,fill,fill)<SUB>528</SUB>> ]
-"1830" [label = <(FIELD_IDENTIFIER,width,width)<SUB>529</SUB>> ]
-"1835" [label = <(&lt;operator&gt;.addition,i + 1)<SUB>530</SUB>> ]
-"1841" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>531</SUB>> ]
-"1844" [label = <(FIELD_IDENTIFIER,ShowData,ShowData)<SUB>531</SUB>> ]
-"1846" [label = <(&lt;operator&gt;.equals,state == gpt)<SUB>531</SUB>> ]
-"1849" [label = <(&lt;operator&gt;.equals,state == hybrid)<SUB>531</SUB>> ]
-"1731" [label = <(METHOD,DisplayMBRData)<SUB>508</SUB>> ]
-"1857" [label = <(METHOD_RETURN,void)<SUB>508</SUB>> ]
-  "1735" -> "1748" 
-  "1748" -> "1754" 
+"1730" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nDisk size is &quot; &lt;&lt; diskSize &lt;&lt; &quot; sectors (&quot;\012 &lt;&lt; BytesToIeee(diskSize, blockSize) &lt;&lt; &quot;)\n&quot;)<SUB>510</SUB>> ]
+"1743" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;MBR disk identifier: 0x&quot;)<SUB>512</SUB>> ]
+"1746" [label = <(width,cout.width(8))<SUB>513</SUB>> ]
+"1751" [label = <(fill,cout.fill('0'))<SUB>514</SUB>> ]
+"1756" [label = <(setf,cout.setf(ios::uppercase))<SUB>515</SUB>> ]
+"1763" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; hex &lt;&lt; diskSignature &lt;&lt; dec &lt;&lt; &quot;\n&quot;)<SUB>516</SUB>> ]
+"1772" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;MBR partitions:\n\n&quot;)<SUB>517</SUB>> ]
+"1731" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nDisk size is &quot; &lt;&lt; diskSize &lt;&lt; &quot; sectors (&quot;\012 &lt;&lt; BytesToIeee(diskSize, blockSize))<SUB>510</SUB>> ]
+"1747" [label = <(&lt;operator&gt;.fieldAccess,cout.width)<SUB>513</SUB>> ]
+"1752" [label = <(&lt;operator&gt;.fieldAccess,cout.fill)<SUB>514</SUB>> ]
+"1757" [label = <(&lt;operator&gt;.fieldAccess,cout.setf)<SUB>515</SUB>> ]
+"1760" [label = <(&lt;operator&gt;.fieldAccess,ios::uppercase)<SUB>515</SUB>> ]
+"1764" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; hex &lt;&lt; diskSignature &lt;&lt; dec)<SUB>516</SUB>> ]
+"1776" [label = <(&lt;operator&gt;.logicalOr,(state == gpt) || (state == hybrid))<SUB>518</SUB>> ]
+"1801" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>525</SUB>> ]
+"1804" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>525</SUB>> ]
+"1732" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nDisk size is &quot; &lt;&lt; diskSize &lt;&lt; &quot; sectors (&quot;)<SUB>510</SUB>> ]
+"1739" [label = <(BytesToIeee,BytesToIeee(diskSize, blockSize))<SUB>511</SUB>> ]
+"1749" [label = <(FIELD_IDENTIFIER,width,width)<SUB>513</SUB>> ]
+"1754" [label = <(FIELD_IDENTIFIER,fill,fill)<SUB>514</SUB>> ]
+"1759" [label = <(FIELD_IDENTIFIER,setf,setf)<SUB>515</SUB>> ]
+"1762" [label = <(FIELD_IDENTIFIER,uppercase,uppercase)<SUB>515</SUB>> ]
+"1765" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; hex &lt;&lt; diskSignature)<SUB>516</SUB>> ]
+"1777" [label = <(&lt;operator&gt;.equals,state == gpt)<SUB>518</SUB>> ]
+"1780" [label = <(&lt;operator&gt;.equals,state == hybrid)<SUB>518</SUB>> ]
+"1784" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;Number  Boot  Start Sector   End Sector   Status      Code\n&quot;)<SUB>519</SUB>> ]
+"1798" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>525</SUB>> ]
+"1847" [label = <(fill,cout.fill(' '))<SUB>532</SUB>> ]
+"1733" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nDisk size is &quot; &lt;&lt; diskSize)<SUB>510</SUB>> ]
+"1766" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; hex)<SUB>516</SUB>> ]
+"1789" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;                                                   Can Be   Can Be\n&quot;)<SUB>521</SUB>> ]
+"1792" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;Number  Boot  Start Sector   End Sector   Status   Logical  Primary   Code\n&quot;)<SUB>522</SUB>> ]
+"1795" [label = <(UpdateCanBeLogical,UpdateCanBeLogical())<SUB>523</SUB>> ]
+"1808" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetLengthLBA() != 0)<SUB>526</SUB>> ]
+"1848" [label = <(&lt;operator&gt;.fieldAccess,cout.fill)<SUB>532</SUB>> ]
+"1734" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nDisk size is &quot;)<SUB>510</SUB>> ]
+"1809" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>526</SUB>> ]
+"1817" [label = <(fill,cout.fill(' '))<SUB>527</SUB>> ]
+"1822" [label = <(width,cout.width(4))<SUB>528</SUB>> ]
+"1827" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; i + 1 &lt;&lt; &quot;      &quot;)<SUB>529</SUB>> ]
+"1834" [label = <(ShowData,partitions[i].ShowData((state == gpt) || (state == hybrid)))<SUB>530</SUB>> ]
+"1850" [label = <(FIELD_IDENTIFIER,fill,fill)<SUB>532</SUB>> ]
+"1810" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>526</SUB>> ]
+"1818" [label = <(&lt;operator&gt;.fieldAccess,cout.fill)<SUB>527</SUB>> ]
+"1823" [label = <(&lt;operator&gt;.fieldAccess,cout.width)<SUB>528</SUB>> ]
+"1828" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; i + 1)<SUB>529</SUB>> ]
+"1835" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].ShowData)<SUB>530</SUB>> ]
+"1840" [label = <(&lt;operator&gt;.logicalOr,(state == gpt) || (state == hybrid))<SUB>530</SUB>> ]
+"1811" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>526</SUB>> ]
+"1814" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>526</SUB>> ]
+"1820" [label = <(FIELD_IDENTIFIER,fill,fill)<SUB>527</SUB>> ]
+"1825" [label = <(FIELD_IDENTIFIER,width,width)<SUB>528</SUB>> ]
+"1830" [label = <(&lt;operator&gt;.addition,i + 1)<SUB>529</SUB>> ]
+"1836" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>530</SUB>> ]
+"1839" [label = <(FIELD_IDENTIFIER,ShowData,ShowData)<SUB>530</SUB>> ]
+"1841" [label = <(&lt;operator&gt;.equals,state == gpt)<SUB>530</SUB>> ]
+"1844" [label = <(&lt;operator&gt;.equals,state == hybrid)<SUB>530</SUB>> ]
+"1726" [label = <(METHOD,DisplayMBRData)<SUB>507</SUB>> ]
+"1852" [label = <(METHOD_RETURN,void)<SUB>507</SUB>> ]
+  "1730" -> "1743" 
+  "1743" -> "1749" 
+  "1746" -> "1754" 
   "1751" -> "1759" 
-  "1756" -> "1764" 
-  "1761" -> "1771" 
-  "1768" -> "1777" 
-  "1777" -> "1782" 
-  "1736" -> "1735" 
+  "1756" -> "1766" 
+  "1763" -> "1772" 
+  "1772" -> "1777" 
+  "1731" -> "1730" 
+  "1747" -> "1746" 
   "1752" -> "1751" 
-  "1757" -> "1756" 
-  "1762" -> "1767" 
-  "1765" -> "1761" 
-  "1769" -> "1768" 
-  "1781" -> "1789" 
-  "1781" -> "1794" 
-  "1806" -> "1857" 
-  "1806" -> "1816" 
-  "1809" -> "1806" 
-  "1737" -> "1744" 
-  "1744" -> "1736" 
+  "1757" -> "1762" 
+  "1760" -> "1756" 
+  "1764" -> "1763" 
+  "1776" -> "1784" 
+  "1776" -> "1789" 
+  "1801" -> "1852" 
+  "1801" -> "1811" 
+  "1804" -> "1801" 
+  "1732" -> "1739" 
+  "1739" -> "1731" 
+  "1749" -> "1747" 
   "1754" -> "1752" 
   "1759" -> "1757" 
-  "1764" -> "1762" 
-  "1767" -> "1765" 
-  "1770" -> "1769" 
-  "1782" -> "1781" 
-  "1782" -> "1785" 
-  "1785" -> "1781" 
-  "1789" -> "1803" 
-  "1803" -> "1806" 
-  "1852" -> "1809" 
-  "1738" -> "1737" 
-  "1771" -> "1770" 
-  "1794" -> "1797" 
-  "1797" -> "1800" 
-  "1800" -> "1803" 
-  "1813" -> "1825" 
-  "1813" -> "1855" 
-  "1853" -> "1852" 
-  "1739" -> "1738" 
-  "1814" -> "1813" 
+  "1762" -> "1760" 
+  "1765" -> "1764" 
+  "1777" -> "1776" 
+  "1777" -> "1780" 
+  "1780" -> "1776" 
+  "1784" -> "1798" 
+  "1798" -> "1801" 
+  "1847" -> "1804" 
+  "1733" -> "1732" 
+  "1766" -> "1765" 
+  "1789" -> "1792" 
+  "1792" -> "1795" 
+  "1795" -> "1798" 
+  "1808" -> "1820" 
+  "1808" -> "1850" 
+  "1848" -> "1847" 
+  "1734" -> "1733" 
+  "1809" -> "1808" 
+  "1817" -> "1825" 
   "1822" -> "1830" 
-  "1827" -> "1835" 
-  "1832" -> "1841" 
-  "1839" -> "1855" 
-  "1855" -> "1853" 
-  "1815" -> "1814" 
+  "1827" -> "1836" 
+  "1834" -> "1850" 
+  "1850" -> "1848" 
+  "1810" -> "1809" 
+  "1818" -> "1817" 
   "1823" -> "1822" 
   "1828" -> "1827" 
-  "1833" -> "1832" 
-  "1840" -> "1846" 
-  "1845" -> "1839" 
-  "1816" -> "1819" 
-  "1819" -> "1815" 
+  "1835" -> "1841" 
+  "1840" -> "1834" 
+  "1811" -> "1814" 
+  "1814" -> "1810" 
+  "1820" -> "1818" 
   "1825" -> "1823" 
   "1830" -> "1828" 
-  "1835" -> "1833" 
+  "1836" -> "1839" 
+  "1839" -> "1835" 
+  "1841" -> "1840" 
   "1841" -> "1844" 
   "1844" -> "1840" 
-  "1846" -> "1845" 
-  "1846" -> "1849" 
-  "1849" -> "1845" 
-  "1731" -> "1739" 
+  "1726" -> "1734" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/140-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/140-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/140-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/140-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "uint64_t" {  
-"6069" [label = <(METHOD,uint64_t)> ]
-"6072" [label = <(METHOD_RETURN,ANY)> ]
-  "6069" -> "6072" 
+"6064" [label = <(METHOD,uint64_t)> ]
+"6067" [label = <(METHOD_RETURN,ANY)> ]
+  "6064" -> "6067" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/141-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/141-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/141-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/141-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "uint8_t" {  
-"6073" [label = <(METHOD,uint8_t)> ]
-"6076" [label = <(METHOD_RETURN,ANY)> ]
-  "6073" -> "6076" 
+"6068" [label = <(METHOD,uint8_t)> ]
+"6071" [label = <(METHOD_RETURN,ANY)> ]
+  "6068" -> "6071" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/142-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/142-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/142-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/142-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.arithmeticShiftRight" {  
-"6077" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
-"6081" [label = <(METHOD_RETURN,ANY)> ]
-  "6077" -> "6081" 
+"6072" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
+"6076" [label = <(METHOD_RETURN,ANY)> ]
+  "6072" -> "6076" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/143-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/143-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/143-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/143-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.and" {  
-"6082" [label = <(METHOD,&lt;operator&gt;.and)> ]
-"6086" [label = <(METHOD_RETURN,ANY)> ]
-  "6082" -> "6086" 
+"6077" [label = <(METHOD,&lt;operator&gt;.and)> ]
+"6081" [label = <(METHOD_RETURN,ANY)> ]
+  "6077" -> "6081" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/144-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/144-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/144-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/144-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "UINT64_C" {  
-"6087" [label = <(METHOD,UINT64_C)> ]
-"6090" [label = <(METHOD_RETURN,ANY)> ]
-  "6087" -> "6090" 
+"6082" [label = <(METHOD,UINT64_C)> ]
+"6085" [label = <(METHOD_RETURN,ANY)> ]
+  "6082" -> "6085" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/145-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/145-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/145-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/145-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "GetInclusion" {  
-"6091" [label = <(METHOD,GetInclusion)> ]
-"6094" [label = <(METHOD_RETURN,ANY)> ]
-  "6091" -> "6094" 
+"6086" [label = <(METHOD,GetInclusion)> ]
+"6089" [label = <(METHOD_RETURN,ANY)> ]
+  "6086" -> "6089" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/146-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/146-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/146-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/146-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "DoTheyOverlap" {  
-"6095" [label = <(METHOD,DoTheyOverlap)> ]
-"6099" [label = <(METHOD_RETURN,ANY)> ]
-  "6095" -> "6099" 
+"6090" [label = <(METHOD,DoTheyOverlap)> ]
+"6094" [label = <(METHOD_RETURN,ANY)> ]
+  "6090" -> "6094" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/147-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/147-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/147-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/147-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "NumPrimaries" {  
-"6100" [label = <(METHOD,NumPrimaries)> ]
-"6102" [label = <(METHOD_RETURN,ANY)> ]
-  "6100" -> "6102" 
+"6095" [label = <(METHOD,NumPrimaries)> ]
+"6097" [label = <(METHOD_RETURN,ANY)> ]
+  "6095" -> "6097" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/148-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/148-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/148-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/148-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "NumLogicals" {  
-"6103" [label = <(METHOD,NumLogicals)> ]
-"6105" [label = <(METHOD_RETURN,ANY)> ]
-  "6103" -> "6105" 
+"6098" [label = <(METHOD,NumLogicals)> ]
+"6100" [label = <(METHOD_RETURN,ANY)> ]
+  "6098" -> "6100" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/149-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/149-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/149-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/149-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "FirstLogicalLBA" {  
-"6106" [label = <(METHOD,FirstLogicalLBA)> ]
-"6108" [label = <(METHOD_RETURN,ANY)> ]
-  "6106" -> "6108" 
+"6101" [label = <(METHOD,FirstLogicalLBA)> ]
+"6103" [label = <(METHOD_RETURN,ANY)> ]
+  "6101" -> "6103" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/15-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/15-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/15-cfg.dot	2023-06-07 19:31:27.097407671 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/15-cfg.dot	2023-06-07 19:31:31.577407271 +0330
@@ -1,19 +1,19 @@
 digraph "ShowState" {  
-"1867" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;  MBR: not present\n&quot;)<SUB>542</SUB>> ]
-"1873" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;  MBR: protective\n&quot;)<SUB>545</SUB>> ]
-"1879" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;  MBR: hybrid\n&quot;)<SUB>548</SUB>> ]
-"1885" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;  MBR: MBR only\n&quot;)<SUB>551</SUB>> ]
-"1890" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\a  MBR: unknown -- bug!\n&quot;)<SUB>554</SUB>> ]
-"1859" [label = <(METHOD,ShowState)<SUB>539</SUB>> ]
-"1894" [label = <(METHOD_RETURN,void)<SUB>539</SUB>> ]
-  "1867" -> "1894" 
-  "1873" -> "1894" 
-  "1879" -> "1894" 
-  "1885" -> "1894" 
-  "1890" -> "1894" 
-  "1859" -> "1867" 
-  "1859" -> "1873" 
-  "1859" -> "1879" 
-  "1859" -> "1885" 
-  "1859" -> "1890" 
+"1862" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;  MBR: not present\n&quot;)<SUB>541</SUB>> ]
+"1868" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;  MBR: protective\n&quot;)<SUB>544</SUB>> ]
+"1874" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;  MBR: hybrid\n&quot;)<SUB>547</SUB>> ]
+"1880" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;  MBR: MBR only\n&quot;)<SUB>550</SUB>> ]
+"1885" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\a  MBR: unknown -- bug!\n&quot;)<SUB>553</SUB>> ]
+"1854" [label = <(METHOD,ShowState)<SUB>538</SUB>> ]
+"1889" [label = <(METHOD_RETURN,void)<SUB>538</SUB>> ]
+  "1862" -> "1889" 
+  "1868" -> "1889" 
+  "1874" -> "1889" 
+  "1880" -> "1889" 
+  "1885" -> "1889" 
+  "1854" -> "1862" 
+  "1854" -> "1868" 
+  "1854" -> "1874" 
+  "1854" -> "1880" 
+  "1854" -> "1885" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/150-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/150-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/150-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/150-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "LastLogicalLBA" {  
-"6109" [label = <(METHOD,LastLogicalLBA)> ]
-"6111" [label = <(METHOD_RETURN,ANY)> ]
-  "6109" -> "6111" 
+"6104" [label = <(METHOD,LastLogicalLBA)> ]
+"6106" [label = <(METHOD_RETURN,ANY)> ]
+  "6104" -> "6106" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/151-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/151-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/151-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/151-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SectorUsedAs" {  
-"6112" [label = <(METHOD,SectorUsedAs)> ]
-"6115" [label = <(METHOD_RETURN,ANY)> ]
-  "6112" -> "6115" 
+"6107" [label = <(METHOD,SectorUsedAs)> ]
+"6110" [label = <(METHOD_RETURN,ANY)> ]
+  "6107" -> "6110" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/152-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/152-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/152-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/152-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "GetLastLBA" {  
-"6116" [label = <(METHOD,GetLastLBA)> ]
-"6119" [label = <(METHOD_RETURN,ANY)> ]
-  "6116" -> "6119" 
+"6111" [label = <(METHOD,GetLastLBA)> ]
+"6114" [label = <(METHOD_RETURN,ANY)> ]
+  "6111" -> "6114" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/153-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/153-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/153-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/153-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SetCanBeLogical" {  
-"6120" [label = <(METHOD,SetCanBeLogical)> ]
-"6124" [label = <(METHOD_RETURN,ANY)> ]
-  "6120" -> "6124" 
+"6115" [label = <(METHOD,SetCanBeLogical)> ]
+"6119" [label = <(METHOD_RETURN,ANY)> ]
+  "6115" -> "6119" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/154-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/154-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/154-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/154-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SetCanBePrimary" {  
-"6125" [label = <(METHOD,SetCanBePrimary)> ]
-"6129" [label = <(METHOD_RETURN,ANY)> ]
-  "6125" -> "6129" 
+"6120" [label = <(METHOD,SetCanBePrimary)> ]
+"6124" [label = <(METHOD_RETURN,ANY)> ]
+  "6120" -> "6124" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/155-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/155-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/155-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/155-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessEqualsThan" {  
-"6130" [label = <(METHOD,&lt;operator&gt;.lessEqualsThan)> ]
-"6134" [label = <(METHOD_RETURN,ANY)> ]
-  "6130" -> "6134" 
+"6125" [label = <(METHOD,&lt;operator&gt;.lessEqualsThan)> ]
+"6129" [label = <(METHOD_RETURN,ANY)> ]
+  "6125" -> "6129" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/156-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/156-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/156-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/156-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "FindOverlaps" {  
-"6135" [label = <(METHOD,FindOverlaps)> ]
-"6137" [label = <(METHOD_RETURN,ANY)> ]
-  "6135" -> "6137" 
+"6130" [label = <(METHOD,FindOverlaps)> ]
+"6132" [label = <(METHOD_RETURN,ANY)> ]
+  "6130" -> "6132" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/157-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/157-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/157-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/157-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "AreLogicalsContiguous" {  
-"6138" [label = <(METHOD,AreLogicalsContiguous)> ]
-"6140" [label = <(METHOD_RETURN,ANY)> ]
-  "6138" -> "6140" 
+"6133" [label = <(METHOD,AreLogicalsContiguous)> ]
+"6135" [label = <(METHOD_RETURN,ANY)> ]
+  "6133" -> "6135" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/158-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/158-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/158-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/158-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "DoTheyFit" {  
-"6141" [label = <(METHOD,DoTheyFit)> ]
-"6143" [label = <(METHOD_RETURN,ANY)> ]
-  "6141" -> "6143" 
+"6136" [label = <(METHOD,DoTheyFit)> ]
+"6138" [label = <(METHOD_RETURN,ANY)> ]
+  "6136" -> "6138" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/159-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/159-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/159-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/159-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SpaceBeforeAllLogicals" {  
-"6144" [label = <(METHOD,SpaceBeforeAllLogicals)> ]
-"6146" [label = <(METHOD_RETURN,ANY)> ]
-  "6144" -> "6146" 
+"6139" [label = <(METHOD,SpaceBeforeAllLogicals)> ]
+"6141" [label = <(METHOD_RETURN,ANY)> ]
+  "6139" -> "6141" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/16-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/16-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/16-cfg.dot	2023-06-07 19:31:27.097407671 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/16-cfg.dot	2023-06-07 19:31:31.577407271 +0330
@@ -1,111 +1,111 @@
 digraph "CheckForGPT" {  
-"1901" [label = <(&lt;operator&gt;.assignment,retval = 0)<SUB>571</SUB>> ]
-"2018" [label = <(RETURN,return retval;,return retval;)<SUB>593</SUB>> ]
-"1907" [label = <(&lt;operator&gt;.notEquals,myDisk != NULL)<SUB>574</SUB>> ]
-"2008" [label = <(Close,myDisk-&gt;Close())<SUB>591</SUB>> ]
-"1912" [label = <(&lt;operator&gt;.notEquals,myDisk-&gt;OpenForRead() != 0)<SUB>575</SUB>> ]
-"2009" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Close)<SUB>591</SUB>> ]
-"2014" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>592</SUB>> ]
-"1913" [label = <(OpenForRead,myDisk-&gt;OpenForRead())<SUB>575</SUB>> ]
-"2011" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>591</SUB>> ]
-"2016" [label = <(&lt;operator&gt;.minus,-1)<SUB>592</SUB>> ]
-"1914" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;OpenForRead)<SUB>575</SUB>> ]
-"1920" [label = <(Seek,myDisk-&gt;Seek(1))<SUB>576</SUB>> ]
-"1944" [label = <(Seek,myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1))<SUB>580</SUB>> ]
-"1975" [label = <(&lt;operator&gt;.logicalAnd,(retval &gt;= 0) &amp;&amp; (strcmp(signature1, &quot;EFI PART&quot;) == 0))<SUB>584</SUB>> ]
-"1989" [label = <(&lt;operator&gt;.logicalAnd,(retval &gt;= 0) &amp;&amp; (strcmp(signature2, &quot;EFI PART&quot;) == 0))<SUB>586</SUB>> ]
-"2004" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>589</SUB>> ]
-"1916" [label = <(FIELD_IDENTIFIER,OpenForRead,OpenForRead)<SUB>575</SUB>> ]
-"1921" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>576</SUB>> ]
-"1926" [label = <(Read,myDisk-&gt;Read(signature1, 8))<SUB>577</SUB>> ]
-"1932" [label = <(&lt;operator&gt;.assignment,signature1[8] = '\0')<SUB>578</SUB>> ]
-"1945" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>580</SUB>> ]
-"1948" [label = <(&lt;operator&gt;.subtraction,myDisk-&gt;DiskSize(&amp;err) - 1)<SUB>580</SUB>> ]
-"1957" [label = <(Read,myDisk-&gt;Read(signature2, 8))<SUB>581</SUB>> ]
-"1963" [label = <(&lt;operator&gt;.assignment,signature2[8] = '\0')<SUB>582</SUB>> ]
-"1976" [label = <(&lt;operator&gt;.greaterEqualsThan,retval &gt;= 0)<SUB>584</SUB>> ]
-"1979" [label = <(&lt;operator&gt;.equals,strcmp(signature1, &quot;EFI PART&quot;) == 0)<SUB>584</SUB>> ]
-"1985" [label = <(&lt;operator&gt;.assignmentPlus,retval += 1)<SUB>585</SUB>> ]
-"1990" [label = <(&lt;operator&gt;.greaterEqualsThan,retval &gt;= 0)<SUB>586</SUB>> ]
-"1993" [label = <(&lt;operator&gt;.equals,strcmp(signature2, &quot;EFI PART&quot;) == 0)<SUB>586</SUB>> ]
-"1999" [label = <(&lt;operator&gt;.assignmentPlus,retval += 2)<SUB>587</SUB>> ]
-"2006" [label = <(&lt;operator&gt;.minus,-1)<SUB>589</SUB>> ]
-"1923" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>576</SUB>> ]
-"1927" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Read)<SUB>577</SUB>> ]
-"1933" [label = <(&lt;operator&gt;.indirectIndexAccess,signature1[8])<SUB>578</SUB>> ]
-"1939" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>579</SUB>> ]
-"1947" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>580</SUB>> ]
-"1949" [label = <(DiskSize,myDisk-&gt;DiskSize(&amp;err))<SUB>580</SUB>> ]
-"1958" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Read)<SUB>581</SUB>> ]
-"1964" [label = <(&lt;operator&gt;.indirectIndexAccess,signature2[8])<SUB>582</SUB>> ]
-"1970" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>583</SUB>> ]
-"1980" [label = <(strcmp,strcmp(signature1, &quot;EFI PART&quot;))<SUB>584</SUB>> ]
-"1994" [label = <(strcmp,strcmp(signature2, &quot;EFI PART&quot;))<SUB>586</SUB>> ]
-"1929" [label = <(FIELD_IDENTIFIER,Read,Read)<SUB>577</SUB>> ]
-"1941" [label = <(&lt;operator&gt;.minus,-1)<SUB>579</SUB>> ]
-"1950" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;DiskSize)<SUB>580</SUB>> ]
-"1953" [label = <(&lt;operator&gt;.addressOf,&amp;err)<SUB>580</SUB>> ]
-"1960" [label = <(FIELD_IDENTIFIER,Read,Read)<SUB>581</SUB>> ]
-"1972" [label = <(&lt;operator&gt;.minus,-1)<SUB>583</SUB>> ]
-"1952" [label = <(FIELD_IDENTIFIER,DiskSize,DiskSize)<SUB>580</SUB>> ]
-"1896" [label = <(METHOD,CheckForGPT)<SUB>570</SUB>> ]
-"2020" [label = <(METHOD_RETURN,int)<SUB>570</SUB>> ]
-  "1901" -> "1907" 
-  "2018" -> "2020" 
-  "1907" -> "1916" 
-  "1907" -> "2016" 
-  "2008" -> "2018" 
-  "1912" -> "1923" 
-  "1912" -> "2006" 
-  "2009" -> "2008" 
-  "2014" -> "2018" 
-  "1913" -> "1912" 
+"1896" [label = <(&lt;operator&gt;.assignment,retval = 0)<SUB>570</SUB>> ]
+"2013" [label = <(RETURN,return retval;,return retval;)<SUB>592</SUB>> ]
+"1902" [label = <(&lt;operator&gt;.notEquals,myDisk != NULL)<SUB>573</SUB>> ]
+"2003" [label = <(Close,myDisk-&gt;Close())<SUB>590</SUB>> ]
+"1907" [label = <(&lt;operator&gt;.notEquals,myDisk-&gt;OpenForRead() != 0)<SUB>574</SUB>> ]
+"2004" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Close)<SUB>590</SUB>> ]
+"2009" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>591</SUB>> ]
+"1908" [label = <(OpenForRead,myDisk-&gt;OpenForRead())<SUB>574</SUB>> ]
+"2006" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>590</SUB>> ]
+"2011" [label = <(&lt;operator&gt;.minus,-1)<SUB>591</SUB>> ]
+"1909" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;OpenForRead)<SUB>574</SUB>> ]
+"1915" [label = <(Seek,myDisk-&gt;Seek(1))<SUB>575</SUB>> ]
+"1939" [label = <(Seek,myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1))<SUB>579</SUB>> ]
+"1970" [label = <(&lt;operator&gt;.logicalAnd,(retval &gt;= 0) &amp;&amp; (strcmp(signature1, &quot;EFI PART&quot;) == 0))<SUB>583</SUB>> ]
+"1984" [label = <(&lt;operator&gt;.logicalAnd,(retval &gt;= 0) &amp;&amp; (strcmp(signature2, &quot;EFI PART&quot;) == 0))<SUB>585</SUB>> ]
+"1999" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>588</SUB>> ]
+"1911" [label = <(FIELD_IDENTIFIER,OpenForRead,OpenForRead)<SUB>574</SUB>> ]
+"1916" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>575</SUB>> ]
+"1921" [label = <(Read,myDisk-&gt;Read(signature1, 8))<SUB>576</SUB>> ]
+"1927" [label = <(&lt;operator&gt;.assignment,signature1[8] = '\0')<SUB>577</SUB>> ]
+"1940" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>579</SUB>> ]
+"1943" [label = <(&lt;operator&gt;.subtraction,myDisk-&gt;DiskSize(&amp;err) - 1)<SUB>579</SUB>> ]
+"1952" [label = <(Read,myDisk-&gt;Read(signature2, 8))<SUB>580</SUB>> ]
+"1958" [label = <(&lt;operator&gt;.assignment,signature2[8] = '\0')<SUB>581</SUB>> ]
+"1971" [label = <(&lt;operator&gt;.greaterEqualsThan,retval &gt;= 0)<SUB>583</SUB>> ]
+"1974" [label = <(&lt;operator&gt;.equals,strcmp(signature1, &quot;EFI PART&quot;) == 0)<SUB>583</SUB>> ]
+"1980" [label = <(&lt;operator&gt;.assignmentPlus,retval += 1)<SUB>584</SUB>> ]
+"1985" [label = <(&lt;operator&gt;.greaterEqualsThan,retval &gt;= 0)<SUB>585</SUB>> ]
+"1988" [label = <(&lt;operator&gt;.equals,strcmp(signature2, &quot;EFI PART&quot;) == 0)<SUB>585</SUB>> ]
+"1994" [label = <(&lt;operator&gt;.assignmentPlus,retval += 2)<SUB>586</SUB>> ]
+"2001" [label = <(&lt;operator&gt;.minus,-1)<SUB>588</SUB>> ]
+"1918" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>575</SUB>> ]
+"1922" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Read)<SUB>576</SUB>> ]
+"1928" [label = <(&lt;operator&gt;.indirectIndexAccess,signature1[8])<SUB>577</SUB>> ]
+"1934" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>578</SUB>> ]
+"1942" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>579</SUB>> ]
+"1944" [label = <(DiskSize,myDisk-&gt;DiskSize(&amp;err))<SUB>579</SUB>> ]
+"1953" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Read)<SUB>580</SUB>> ]
+"1959" [label = <(&lt;operator&gt;.indirectIndexAccess,signature2[8])<SUB>581</SUB>> ]
+"1965" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>582</SUB>> ]
+"1975" [label = <(strcmp,strcmp(signature1, &quot;EFI PART&quot;))<SUB>583</SUB>> ]
+"1989" [label = <(strcmp,strcmp(signature2, &quot;EFI PART&quot;))<SUB>585</SUB>> ]
+"1924" [label = <(FIELD_IDENTIFIER,Read,Read)<SUB>576</SUB>> ]
+"1936" [label = <(&lt;operator&gt;.minus,-1)<SUB>578</SUB>> ]
+"1945" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;DiskSize)<SUB>579</SUB>> ]
+"1948" [label = <(&lt;operator&gt;.addressOf,&amp;err)<SUB>579</SUB>> ]
+"1955" [label = <(FIELD_IDENTIFIER,Read,Read)<SUB>580</SUB>> ]
+"1967" [label = <(&lt;operator&gt;.minus,-1)<SUB>582</SUB>> ]
+"1947" [label = <(FIELD_IDENTIFIER,DiskSize,DiskSize)<SUB>579</SUB>> ]
+"1891" [label = <(METHOD,CheckForGPT)<SUB>569</SUB>> ]
+"2015" [label = <(METHOD_RETURN,int)<SUB>569</SUB>> ]
+  "1896" -> "1902" 
+  "2013" -> "2015" 
+  "1902" -> "1911" 
+  "1902" -> "2011" 
+  "2003" -> "2013" 
+  "1907" -> "1918" 
+  "1907" -> "2001" 
+  "2004" -> "2003" 
+  "2009" -> "2013" 
+  "1908" -> "1907" 
+  "2006" -> "2004" 
   "2011" -> "2009" 
-  "2016" -> "2014" 
-  "1914" -> "1913" 
-  "1920" -> "1929" 
-  "1920" -> "1941" 
-  "1944" -> "1960" 
-  "1944" -> "1972" 
-  "1975" -> "1985" 
-  "1975" -> "1990" 
-  "1989" -> "1999" 
-  "1989" -> "2011" 
-  "2004" -> "2011" 
-  "1916" -> "1914" 
-  "1921" -> "1920" 
-  "1926" -> "1933" 
-  "1932" -> "1947" 
-  "1945" -> "1952" 
+  "1909" -> "1908" 
+  "1915" -> "1924" 
+  "1915" -> "1936" 
+  "1939" -> "1955" 
+  "1939" -> "1967" 
+  "1970" -> "1980" 
+  "1970" -> "1985" 
+  "1984" -> "1994" 
+  "1984" -> "2006" 
+  "1999" -> "2006" 
+  "1911" -> "1909" 
+  "1916" -> "1915" 
+  "1921" -> "1928" 
+  "1927" -> "1942" 
+  "1940" -> "1947" 
+  "1943" -> "1939" 
+  "1952" -> "1959" 
+  "1958" -> "1971" 
+  "1971" -> "1970" 
+  "1971" -> "1975" 
+  "1974" -> "1970" 
+  "1980" -> "1985" 
+  "1985" -> "1984" 
+  "1985" -> "1989" 
+  "1988" -> "1984" 
+  "1994" -> "2006" 
+  "2001" -> "1999" 
+  "1918" -> "1916" 
+  "1922" -> "1921" 
+  "1928" -> "1927" 
+  "1934" -> "1942" 
+  "1942" -> "1940" 
+  "1944" -> "1943" 
+  "1953" -> "1952" 
+  "1959" -> "1958" 
+  "1965" -> "1971" 
+  "1975" -> "1974" 
+  "1989" -> "1988" 
+  "1924" -> "1922" 
+  "1936" -> "1934" 
+  "1945" -> "1948" 
   "1948" -> "1944" 
-  "1957" -> "1964" 
-  "1963" -> "1976" 
-  "1976" -> "1975" 
-  "1976" -> "1980" 
-  "1979" -> "1975" 
-  "1985" -> "1990" 
-  "1990" -> "1989" 
-  "1990" -> "1994" 
-  "1993" -> "1989" 
-  "1999" -> "2011" 
-  "2006" -> "2004" 
-  "1923" -> "1921" 
-  "1927" -> "1926" 
-  "1933" -> "1932" 
-  "1939" -> "1947" 
+  "1955" -> "1953" 
+  "1967" -> "1965" 
   "1947" -> "1945" 
-  "1949" -> "1948" 
-  "1958" -> "1957" 
-  "1964" -> "1963" 
-  "1970" -> "1976" 
-  "1980" -> "1979" 
-  "1994" -> "1993" 
-  "1929" -> "1927" 
-  "1941" -> "1939" 
-  "1950" -> "1953" 
-  "1953" -> "1949" 
-  "1960" -> "1958" 
-  "1972" -> "1970" 
-  "1952" -> "1950" 
-  "1896" -> "1901" 
+  "1891" -> "1896" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/160-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/160-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/160-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/160-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "GetStatus" {  
-"6147" [label = <(METHOD,GetStatus)> ]
-"6150" [label = <(METHOD_RETURN,ANY)> ]
-  "6147" -> "6150" 
+"6142" [label = <(METHOD,GetStatus)> ]
+"6145" [label = <(METHOD_RETURN,ANY)> ]
+  "6142" -> "6145" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/161-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/161-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/161-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/161-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "EmptyBootloader" {  
-"6151" [label = <(METHOD,EmptyBootloader)> ]
-"6153" [label = <(METHOD_RETURN,ANY)> ]
-  "6151" -> "6153" 
+"6146" [label = <(METHOD,EmptyBootloader)> ]
+"6148" [label = <(METHOD_RETURN,ANY)> ]
+  "6146" -> "6148" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/162-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/162-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/162-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/162-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "Empty" {  
-"6154" [label = <(METHOD,Empty)> ]
-"6157" [label = <(METHOD_RETURN,ANY)> ]
-  "6154" -> "6157" 
+"6149" [label = <(METHOD,Empty)> ]
+"6152" [label = <(METHOD_RETURN,ANY)> ]
+  "6149" -> "6152" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/163-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/163-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/163-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/163-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SetType" {  
-"6158" [label = <(METHOD,SetType)> ]
-"6162" [label = <(METHOD_RETURN,ANY)> ]
-  "6158" -> "6162" 
+"6153" [label = <(METHOD,SetType)> ]
+"6157" [label = <(METHOD_RETURN,ANY)> ]
+  "6153" -> "6157" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/164-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/164-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/164-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/164-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SetLocation" {  
-"6163" [label = <(METHOD,SetLocation)> ]
-"6168" [label = <(METHOD_RETURN,ANY)> ]
-  "6163" -> "6168" 
+"6158" [label = <(METHOD,SetLocation)> ]
+"6163" [label = <(METHOD_RETURN,ANY)> ]
+  "6158" -> "6163" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/165-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/165-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/165-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/165-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SetPartBootable" {  
-"6169" [label = <(METHOD,SetPartBootable)> ]
-"6173" [label = <(METHOD_RETURN,ANY)> ]
-  "6169" -> "6173" 
+"6164" [label = <(METHOD,SetPartBootable)> ]
+"6168" [label = <(METHOD_RETURN,ANY)> ]
+  "6164" -> "6168" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/166-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/166-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/166-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/166-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SetStatus" {  
-"6174" [label = <(METHOD,SetStatus)> ]
-"6178" [label = <(METHOD_RETURN,ANY)> ]
-  "6174" -> "6178" 
+"6169" [label = <(METHOD,SetStatus)> ]
+"6173" [label = <(METHOD_RETURN,ANY)> ]
+  "6169" -> "6173" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/167-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/167-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/167-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/167-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "FindFirstAvailable" {  
-"6179" [label = <(METHOD,FindFirstAvailable)> ]
-"6182" [label = <(METHOD_RETURN,ANY)> ]
-  "6179" -> "6182" 
+"6174" [label = <(METHOD,FindFirstAvailable)> ]
+"6177" [label = <(METHOD_RETURN,ANY)> ]
+  "6174" -> "6177" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/168-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/168-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/168-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/168-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "FindLastInFree" {  
-"6183" [label = <(METHOD,FindLastInFree)> ]
-"6186" [label = <(METHOD_RETURN,ANY)> ]
-  "6183" -> "6186" 
+"6178" [label = <(METHOD,FindLastInFree)> ]
+"6181" [label = <(METHOD_RETURN,ANY)> ]
+  "6178" -> "6181" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/169-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/169-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/169-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/169-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "MakePart" {  
-"6187" [label = <(METHOD,MakePart)> ]
-"6194" [label = <(METHOD_RETURN,ANY)> ]
-  "6187" -> "6194" 
+"6182" [label = <(METHOD,MakePart)> ]
+"6189" [label = <(METHOD_RETURN,ANY)> ]
+  "6182" -> "6189" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/17-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/17-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/17-cfg.dot	2023-06-07 19:31:27.097407671 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/17-cfg.dot	2023-06-07 19:31:31.577407271 +0330
@@ -1,189 +1,189 @@
 digraph "BlankGPTData" {  
-"2027" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>602</SUB>> ]
-"2031" [label = <(memset,memset(blank, 0, 512))<SUB>605</SUB>> ]
-"2210" [label = <(RETURN,return allOK;,return allOK;)<SUB>640</SUB>> ]
-"2036" [label = <(CheckForGPT,CheckForGPT())<SUB>606</SUB>> ]
-"2039" [label = <(&lt;operator&gt;.minus,-1)<SUB>607</SUB>> ]
-"2041" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>608</SUB>> ]
-"2051" [label = <(&lt;operator&gt;.logicalAnd,(myDisk != NULL) &amp;&amp; (myDisk-&gt;OpenForWrite()))<SUB>613</SUB>> ]
-"2093" [label = <(&lt;operator&gt;.logicalAnd,(myDisk != NULL) &amp;&amp; (myDisk-&gt;OpenForWrite()))<SUB>620</SUB>> ]
-"2142" [label = <(&lt;operator&gt;.logicalAnd,(myDisk != NULL) &amp;&amp; (myDisk-&gt;OpenForWrite()))<SUB>628</SUB>> ]
-"2052" [label = <(&lt;operator&gt;.notEquals,myDisk != NULL)<SUB>613</SUB>> ]
-"2055" [label = <(OpenForWrite,myDisk-&gt;OpenForWrite())<SUB>613</SUB>> ]
-"2080" [label = <(Close,myDisk-&gt;Close())<SUB>616</SUB>> ]
-"2094" [label = <(&lt;operator&gt;.notEquals,myDisk != NULL)<SUB>620</SUB>> ]
-"2097" [label = <(OpenForWrite,myDisk-&gt;OpenForWrite())<SUB>620</SUB>> ]
-"2129" [label = <(Close,myDisk-&gt;Close())<SUB>624</SUB>> ]
-"2143" [label = <(&lt;operator&gt;.notEquals,myDisk != NULL)<SUB>628</SUB>> ]
-"2146" [label = <(OpenForWrite,myDisk-&gt;OpenForWrite())<SUB>628</SUB>> ]
-"2198" [label = <(Close,myDisk-&gt;Close())<SUB>634</SUB>> ]
-"2056" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;OpenForWrite)<SUB>613</SUB>> ]
-"2061" [label = <(&lt;operator&gt;.logicalNot,!((myDisk-&gt;Seek(1)) &amp;&amp; (myDisk-&gt;Write(blank, 512) == 512)))<SUB>614</SUB>> ]
-"2081" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Close)<SUB>616</SUB>> ]
-"2086" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>617</SUB>> ]
-"2098" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;OpenForWrite)<SUB>620</SUB>> ]
-"2103" [label = <(&lt;operator&gt;.logicalNot,!((myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1)) &amp;&amp;\012 (myDisk-&gt;Write(blank, 512) == 512)))<SUB>621</SUB>> ]
-"2130" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Close)<SUB>624</SUB>> ]
-"2135" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>625</SUB>> ]
-"2147" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;OpenForWrite)<SUB>628</SUB>> ]
-"2152" [label = <(&lt;operator&gt;.logicalNot,!((myDisk-&gt;Seek(1)) &amp;&amp; (myDisk-&gt;Write(blank, 512) == 512)))<SUB>629</SUB>> ]
-"2172" [label = <(&lt;operator&gt;.logicalNot,!((myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1)) &amp;&amp;\012 (myDisk-&gt;Write(blank, 512) == 512)))<SUB>631</SUB>> ]
-"2199" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Close)<SUB>634</SUB>> ]
-"2204" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>635</SUB>> ]
-"2058" [label = <(FIELD_IDENTIFIER,OpenForWrite,OpenForWrite)<SUB>613</SUB>> ]
-"2062" [label = <(&lt;operator&gt;.logicalAnd,(myDisk-&gt;Seek(1)) &amp;&amp; (myDisk-&gt;Write(blank, 512) == 512))<SUB>614</SUB>> ]
-"2077" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>615</SUB>> ]
-"2083" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>616</SUB>> ]
-"2100" [label = <(FIELD_IDENTIFIER,OpenForWrite,OpenForWrite)<SUB>620</SUB>> ]
-"2104" [label = <(&lt;operator&gt;.logicalAnd,(myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1)) &amp;&amp;\012 (myDisk-&gt;Write(blank, 512) == 512))<SUB>621</SUB>> ]
-"2126" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>623</SUB>> ]
-"2132" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>624</SUB>> ]
-"2149" [label = <(FIELD_IDENTIFIER,OpenForWrite,OpenForWrite)<SUB>628</SUB>> ]
-"2153" [label = <(&lt;operator&gt;.logicalAnd,(myDisk-&gt;Seek(1)) &amp;&amp; (myDisk-&gt;Write(blank, 512) == 512))<SUB>629</SUB>> ]
-"2168" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>630</SUB>> ]
-"2173" [label = <(&lt;operator&gt;.logicalAnd,(myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1)) &amp;&amp;\012 (myDisk-&gt;Write(blank, 512) == 512))<SUB>631</SUB>> ]
-"2195" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>633</SUB>> ]
-"2201" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>634</SUB>> ]
-"2063" [label = <(Seek,myDisk-&gt;Seek(1))<SUB>614</SUB>> ]
-"2068" [label = <(&lt;operator&gt;.equals,myDisk-&gt;Write(blank, 512) == 512)<SUB>614</SUB>> ]
-"2105" [label = <(Seek,myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1))<SUB>621</SUB>> ]
-"2117" [label = <(&lt;operator&gt;.equals,myDisk-&gt;Write(blank, 512) == 512)<SUB>622</SUB>> ]
-"2154" [label = <(Seek,myDisk-&gt;Seek(1))<SUB>629</SUB>> ]
-"2159" [label = <(&lt;operator&gt;.equals,myDisk-&gt;Write(blank, 512) == 512)<SUB>629</SUB>> ]
-"2174" [label = <(Seek,myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1))<SUB>631</SUB>> ]
-"2186" [label = <(&lt;operator&gt;.equals,myDisk-&gt;Write(blank, 512) == 512)<SUB>632</SUB>> ]
-"2064" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>614</SUB>> ]
-"2069" [label = <(Write,myDisk-&gt;Write(blank, 512))<SUB>614</SUB>> ]
-"2106" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>621</SUB>> ]
-"2109" [label = <(&lt;operator&gt;.subtraction,myDisk-&gt;DiskSize(&amp;err) - 1)<SUB>621</SUB>> ]
-"2118" [label = <(Write,myDisk-&gt;Write(blank, 512))<SUB>622</SUB>> ]
-"2155" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>629</SUB>> ]
-"2160" [label = <(Write,myDisk-&gt;Write(blank, 512))<SUB>629</SUB>> ]
-"2175" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>631</SUB>> ]
-"2178" [label = <(&lt;operator&gt;.subtraction,myDisk-&gt;DiskSize(&amp;err) - 1)<SUB>631</SUB>> ]
-"2187" [label = <(Write,myDisk-&gt;Write(blank, 512))<SUB>632</SUB>> ]
-"2066" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>614</SUB>> ]
-"2070" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Write)<SUB>614</SUB>> ]
-"2108" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>621</SUB>> ]
-"2110" [label = <(DiskSize,myDisk-&gt;DiskSize(&amp;err))<SUB>621</SUB>> ]
-"2119" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Write)<SUB>622</SUB>> ]
-"2157" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>629</SUB>> ]
-"2161" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Write)<SUB>629</SUB>> ]
-"2177" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>631</SUB>> ]
-"2179" [label = <(DiskSize,myDisk-&gt;DiskSize(&amp;err))<SUB>631</SUB>> ]
-"2188" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Write)<SUB>632</SUB>> ]
-"2072" [label = <(FIELD_IDENTIFIER,Write,Write)<SUB>614</SUB>> ]
-"2111" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;DiskSize)<SUB>621</SUB>> ]
-"2114" [label = <(&lt;operator&gt;.addressOf,&amp;err)<SUB>621</SUB>> ]
-"2121" [label = <(FIELD_IDENTIFIER,Write,Write)<SUB>622</SUB>> ]
-"2163" [label = <(FIELD_IDENTIFIER,Write,Write)<SUB>629</SUB>> ]
-"2180" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;DiskSize)<SUB>631</SUB>> ]
-"2183" [label = <(&lt;operator&gt;.addressOf,&amp;err)<SUB>631</SUB>> ]
-"2190" [label = <(FIELD_IDENTIFIER,Write,Write)<SUB>632</SUB>> ]
-"2113" [label = <(FIELD_IDENTIFIER,DiskSize,DiskSize)<SUB>621</SUB>> ]
-"2182" [label = <(FIELD_IDENTIFIER,DiskSize,DiskSize)<SUB>631</SUB>> ]
-"2022" [label = <(METHOD,BlankGPTData)<SUB>601</SUB>> ]
-"2212" [label = <(METHOD_RETURN,int)<SUB>601</SUB>> ]
-  "2027" -> "2031" 
-  "2031" -> "2036" 
-  "2210" -> "2212" 
-  "2036" -> "2039" 
-  "2036" -> "2210" 
-  "2036" -> "2052" 
-  "2036" -> "2094" 
-  "2036" -> "2143" 
-  "2039" -> "2041" 
-  "2041" -> "2210" 
-  "2051" -> "2066" 
-  "2051" -> "2086" 
-  "2093" -> "2108" 
-  "2093" -> "2135" 
-  "2142" -> "2157" 
-  "2142" -> "2204" 
-  "2052" -> "2051" 
-  "2052" -> "2058" 
-  "2055" -> "2051" 
-  "2080" -> "2210" 
-  "2094" -> "2093" 
-  "2094" -> "2100" 
-  "2097" -> "2093" 
-  "2129" -> "2210" 
-  "2143" -> "2142" 
-  "2143" -> "2149" 
-  "2146" -> "2142" 
-  "2198" -> "2210" 
-  "2056" -> "2055" 
-  "2061" -> "2077" 
-  "2061" -> "2083" 
-  "2081" -> "2080" 
-  "2086" -> "2210" 
-  "2098" -> "2097" 
-  "2103" -> "2126" 
-  "2103" -> "2132" 
-  "2130" -> "2129" 
-  "2135" -> "2210" 
-  "2147" -> "2146" 
-  "2152" -> "2168" 
-  "2152" -> "2177" 
-  "2172" -> "2195" 
-  "2172" -> "2201" 
-  "2199" -> "2198" 
-  "2204" -> "2210" 
-  "2058" -> "2056" 
-  "2062" -> "2061" 
-  "2077" -> "2083" 
-  "2083" -> "2081" 
-  "2100" -> "2098" 
-  "2104" -> "2103" 
-  "2126" -> "2132" 
-  "2132" -> "2130" 
-  "2149" -> "2147" 
-  "2153" -> "2152" 
-  "2168" -> "2177" 
-  "2173" -> "2172" 
-  "2195" -> "2201" 
-  "2201" -> "2199" 
-  "2063" -> "2062" 
-  "2063" -> "2072" 
-  "2068" -> "2062" 
+"2022" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>601</SUB>> ]
+"2026" [label = <(memset,memset(blank, 0, 512))<SUB>604</SUB>> ]
+"2205" [label = <(RETURN,return allOK;,return allOK;)<SUB>639</SUB>> ]
+"2031" [label = <(CheckForGPT,CheckForGPT())<SUB>605</SUB>> ]
+"2034" [label = <(&lt;operator&gt;.minus,-1)<SUB>606</SUB>> ]
+"2036" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>607</SUB>> ]
+"2046" [label = <(&lt;operator&gt;.logicalAnd,(myDisk != NULL) &amp;&amp; (myDisk-&gt;OpenForWrite()))<SUB>612</SUB>> ]
+"2088" [label = <(&lt;operator&gt;.logicalAnd,(myDisk != NULL) &amp;&amp; (myDisk-&gt;OpenForWrite()))<SUB>619</SUB>> ]
+"2137" [label = <(&lt;operator&gt;.logicalAnd,(myDisk != NULL) &amp;&amp; (myDisk-&gt;OpenForWrite()))<SUB>627</SUB>> ]
+"2047" [label = <(&lt;operator&gt;.notEquals,myDisk != NULL)<SUB>612</SUB>> ]
+"2050" [label = <(OpenForWrite,myDisk-&gt;OpenForWrite())<SUB>612</SUB>> ]
+"2075" [label = <(Close,myDisk-&gt;Close())<SUB>615</SUB>> ]
+"2089" [label = <(&lt;operator&gt;.notEquals,myDisk != NULL)<SUB>619</SUB>> ]
+"2092" [label = <(OpenForWrite,myDisk-&gt;OpenForWrite())<SUB>619</SUB>> ]
+"2124" [label = <(Close,myDisk-&gt;Close())<SUB>623</SUB>> ]
+"2138" [label = <(&lt;operator&gt;.notEquals,myDisk != NULL)<SUB>627</SUB>> ]
+"2141" [label = <(OpenForWrite,myDisk-&gt;OpenForWrite())<SUB>627</SUB>> ]
+"2193" [label = <(Close,myDisk-&gt;Close())<SUB>633</SUB>> ]
+"2051" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;OpenForWrite)<SUB>612</SUB>> ]
+"2056" [label = <(&lt;operator&gt;.logicalNot,!((myDisk-&gt;Seek(1)) &amp;&amp; (myDisk-&gt;Write(blank, 512) == 512)))<SUB>613</SUB>> ]
+"2076" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Close)<SUB>615</SUB>> ]
+"2081" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>616</SUB>> ]
+"2093" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;OpenForWrite)<SUB>619</SUB>> ]
+"2098" [label = <(&lt;operator&gt;.logicalNot,!((myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1)) &amp;&amp;\012 (myDisk-&gt;Write(blank, 512) == 512)))<SUB>620</SUB>> ]
+"2125" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Close)<SUB>623</SUB>> ]
+"2130" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>624</SUB>> ]
+"2142" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;OpenForWrite)<SUB>627</SUB>> ]
+"2147" [label = <(&lt;operator&gt;.logicalNot,!((myDisk-&gt;Seek(1)) &amp;&amp; (myDisk-&gt;Write(blank, 512) == 512)))<SUB>628</SUB>> ]
+"2167" [label = <(&lt;operator&gt;.logicalNot,!((myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1)) &amp;&amp;\012 (myDisk-&gt;Write(blank, 512) == 512)))<SUB>630</SUB>> ]
+"2194" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Close)<SUB>633</SUB>> ]
+"2199" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>634</SUB>> ]
+"2053" [label = <(FIELD_IDENTIFIER,OpenForWrite,OpenForWrite)<SUB>612</SUB>> ]
+"2057" [label = <(&lt;operator&gt;.logicalAnd,(myDisk-&gt;Seek(1)) &amp;&amp; (myDisk-&gt;Write(blank, 512) == 512))<SUB>613</SUB>> ]
+"2072" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>614</SUB>> ]
+"2078" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>615</SUB>> ]
+"2095" [label = <(FIELD_IDENTIFIER,OpenForWrite,OpenForWrite)<SUB>619</SUB>> ]
+"2099" [label = <(&lt;operator&gt;.logicalAnd,(myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1)) &amp;&amp;\012 (myDisk-&gt;Write(blank, 512) == 512))<SUB>620</SUB>> ]
+"2121" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>622</SUB>> ]
+"2127" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>623</SUB>> ]
+"2144" [label = <(FIELD_IDENTIFIER,OpenForWrite,OpenForWrite)<SUB>627</SUB>> ]
+"2148" [label = <(&lt;operator&gt;.logicalAnd,(myDisk-&gt;Seek(1)) &amp;&amp; (myDisk-&gt;Write(blank, 512) == 512))<SUB>628</SUB>> ]
+"2163" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>629</SUB>> ]
+"2168" [label = <(&lt;operator&gt;.logicalAnd,(myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1)) &amp;&amp;\012 (myDisk-&gt;Write(blank, 512) == 512))<SUB>630</SUB>> ]
+"2190" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>632</SUB>> ]
+"2196" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>633</SUB>> ]
+"2058" [label = <(Seek,myDisk-&gt;Seek(1))<SUB>613</SUB>> ]
+"2063" [label = <(&lt;operator&gt;.equals,myDisk-&gt;Write(blank, 512) == 512)<SUB>613</SUB>> ]
+"2100" [label = <(Seek,myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1))<SUB>620</SUB>> ]
+"2112" [label = <(&lt;operator&gt;.equals,myDisk-&gt;Write(blank, 512) == 512)<SUB>621</SUB>> ]
+"2149" [label = <(Seek,myDisk-&gt;Seek(1))<SUB>628</SUB>> ]
+"2154" [label = <(&lt;operator&gt;.equals,myDisk-&gt;Write(blank, 512) == 512)<SUB>628</SUB>> ]
+"2169" [label = <(Seek,myDisk-&gt;Seek(myDisk-&gt;DiskSize(&amp;err) - 1))<SUB>630</SUB>> ]
+"2181" [label = <(&lt;operator&gt;.equals,myDisk-&gt;Write(blank, 512) == 512)<SUB>631</SUB>> ]
+"2059" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>613</SUB>> ]
+"2064" [label = <(Write,myDisk-&gt;Write(blank, 512))<SUB>613</SUB>> ]
+"2101" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>620</SUB>> ]
+"2104" [label = <(&lt;operator&gt;.subtraction,myDisk-&gt;DiskSize(&amp;err) - 1)<SUB>620</SUB>> ]
+"2113" [label = <(Write,myDisk-&gt;Write(blank, 512))<SUB>621</SUB>> ]
+"2150" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>628</SUB>> ]
+"2155" [label = <(Write,myDisk-&gt;Write(blank, 512))<SUB>628</SUB>> ]
+"2170" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>630</SUB>> ]
+"2173" [label = <(&lt;operator&gt;.subtraction,myDisk-&gt;DiskSize(&amp;err) - 1)<SUB>630</SUB>> ]
+"2182" [label = <(Write,myDisk-&gt;Write(blank, 512))<SUB>631</SUB>> ]
+"2061" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>613</SUB>> ]
+"2065" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Write)<SUB>613</SUB>> ]
+"2103" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>620</SUB>> ]
+"2105" [label = <(DiskSize,myDisk-&gt;DiskSize(&amp;err))<SUB>620</SUB>> ]
+"2114" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Write)<SUB>621</SUB>> ]
+"2152" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>628</SUB>> ]
+"2156" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Write)<SUB>628</SUB>> ]
+"2172" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>630</SUB>> ]
+"2174" [label = <(DiskSize,myDisk-&gt;DiskSize(&amp;err))<SUB>630</SUB>> ]
+"2183" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Write)<SUB>631</SUB>> ]
+"2067" [label = <(FIELD_IDENTIFIER,Write,Write)<SUB>613</SUB>> ]
+"2106" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;DiskSize)<SUB>620</SUB>> ]
+"2109" [label = <(&lt;operator&gt;.addressOf,&amp;err)<SUB>620</SUB>> ]
+"2116" [label = <(FIELD_IDENTIFIER,Write,Write)<SUB>621</SUB>> ]
+"2158" [label = <(FIELD_IDENTIFIER,Write,Write)<SUB>628</SUB>> ]
+"2175" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;DiskSize)<SUB>630</SUB>> ]
+"2178" [label = <(&lt;operator&gt;.addressOf,&amp;err)<SUB>630</SUB>> ]
+"2185" [label = <(FIELD_IDENTIFIER,Write,Write)<SUB>631</SUB>> ]
+"2108" [label = <(FIELD_IDENTIFIER,DiskSize,DiskSize)<SUB>620</SUB>> ]
+"2177" [label = <(FIELD_IDENTIFIER,DiskSize,DiskSize)<SUB>630</SUB>> ]
+"2017" [label = <(METHOD,BlankGPTData)<SUB>600</SUB>> ]
+"2207" [label = <(METHOD_RETURN,int)<SUB>600</SUB>> ]
+  "2022" -> "2026" 
+  "2026" -> "2031" 
+  "2205" -> "2207" 
+  "2031" -> "2034" 
+  "2031" -> "2205" 
+  "2031" -> "2047" 
+  "2031" -> "2089" 
+  "2031" -> "2138" 
+  "2034" -> "2036" 
+  "2036" -> "2205" 
+  "2046" -> "2061" 
+  "2046" -> "2081" 
+  "2088" -> "2103" 
+  "2088" -> "2130" 
+  "2137" -> "2152" 
+  "2137" -> "2199" 
+  "2047" -> "2046" 
+  "2047" -> "2053" 
+  "2050" -> "2046" 
+  "2075" -> "2205" 
+  "2089" -> "2088" 
+  "2089" -> "2095" 
+  "2092" -> "2088" 
+  "2124" -> "2205" 
+  "2138" -> "2137" 
+  "2138" -> "2144" 
+  "2141" -> "2137" 
+  "2193" -> "2205" 
+  "2051" -> "2050" 
+  "2056" -> "2072" 
+  "2056" -> "2078" 
+  "2076" -> "2075" 
+  "2081" -> "2205" 
+  "2093" -> "2092" 
+  "2098" -> "2121" 
+  "2098" -> "2127" 
+  "2125" -> "2124" 
+  "2130" -> "2205" 
+  "2142" -> "2141" 
+  "2147" -> "2163" 
+  "2147" -> "2172" 
+  "2167" -> "2190" 
+  "2167" -> "2196" 
+  "2194" -> "2193" 
+  "2199" -> "2205" 
+  "2053" -> "2051" 
+  "2057" -> "2056" 
+  "2072" -> "2078" 
+  "2078" -> "2076" 
+  "2095" -> "2093" 
+  "2099" -> "2098" 
+  "2121" -> "2127" 
+  "2127" -> "2125" 
+  "2144" -> "2142" 
+  "2148" -> "2147" 
+  "2163" -> "2172" 
+  "2168" -> "2167" 
+  "2190" -> "2196" 
+  "2196" -> "2194" 
+  "2058" -> "2057" 
+  "2058" -> "2067" 
+  "2063" -> "2057" 
+  "2100" -> "2099" 
+  "2100" -> "2116" 
+  "2112" -> "2099" 
+  "2149" -> "2148" 
+  "2149" -> "2158" 
+  "2154" -> "2148" 
+  "2169" -> "2168" 
+  "2169" -> "2185" 
+  "2181" -> "2168" 
+  "2059" -> "2058" 
+  "2064" -> "2063" 
+  "2101" -> "2108" 
+  "2104" -> "2100" 
+  "2113" -> "2112" 
+  "2150" -> "2149" 
+  "2155" -> "2154" 
+  "2170" -> "2177" 
+  "2173" -> "2169" 
+  "2182" -> "2181" 
+  "2061" -> "2059" 
+  "2065" -> "2064" 
+  "2103" -> "2101" 
   "2105" -> "2104" 
-  "2105" -> "2121" 
-  "2117" -> "2104" 
-  "2154" -> "2153" 
-  "2154" -> "2163" 
-  "2159" -> "2153" 
+  "2114" -> "2113" 
+  "2152" -> "2150" 
+  "2156" -> "2155" 
+  "2172" -> "2170" 
   "2174" -> "2173" 
-  "2174" -> "2190" 
-  "2186" -> "2173" 
-  "2064" -> "2063" 
-  "2069" -> "2068" 
-  "2106" -> "2113" 
+  "2183" -> "2182" 
+  "2067" -> "2065" 
+  "2106" -> "2109" 
   "2109" -> "2105" 
-  "2118" -> "2117" 
-  "2155" -> "2154" 
-  "2160" -> "2159" 
-  "2175" -> "2182" 
+  "2116" -> "2114" 
+  "2158" -> "2156" 
+  "2175" -> "2178" 
   "2178" -> "2174" 
-  "2187" -> "2186" 
-  "2066" -> "2064" 
-  "2070" -> "2069" 
+  "2185" -> "2183" 
   "2108" -> "2106" 
-  "2110" -> "2109" 
-  "2119" -> "2118" 
-  "2157" -> "2155" 
-  "2161" -> "2160" 
   "2177" -> "2175" 
-  "2179" -> "2178" 
-  "2188" -> "2187" 
-  "2072" -> "2070" 
-  "2111" -> "2114" 
-  "2114" -> "2110" 
-  "2121" -> "2119" 
-  "2163" -> "2161" 
-  "2180" -> "2183" 
-  "2183" -> "2179" 
-  "2190" -> "2188" 
-  "2113" -> "2111" 
-  "2182" -> "2180" 
-  "2022" -> "2027" 
+  "2017" -> "2022" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/170-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/170-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/170-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/170-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "IsLegal" {  
-"6195" [label = <(METHOD,IsLegal)> ]
-"6197" [label = <(METHOD_RETURN,ANY)> ]
-  "6195" -> "6197" 
+"6190" [label = <(METHOD,IsLegal)> ]
+"6192" [label = <(METHOD_RETURN,ANY)> ]
+  "6190" -> "6192" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/171-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/171-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/171-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/171-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "RecomputeCHS" {  
-"6198" [label = <(METHOD,RecomputeCHS)> ]
-"6201" [label = <(METHOD_RETURN,ANY)> ]
-  "6198" -> "6201" 
+"6193" [label = <(METHOD,RecomputeCHS)> ]
+"6196" [label = <(METHOD_RETURN,ANY)> ]
+  "6193" -> "6196" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/172-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/172-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/172-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/172-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "sort" {  
-"6202" [label = <(METHOD,sort)> ]
-"6206" [label = <(METHOD_RETURN,ANY)> ]
-  "6202" -> "6206" 
+"6197" [label = <(METHOD,sort)> ]
+"6201" [label = <(METHOD_RETURN,ANY)> ]
+  "6197" -> "6201" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/173-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/173-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/173-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/173-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.postDecrement" {  
-"6207" [label = <(METHOD,&lt;operator&gt;.postDecrement)> ]
-"6210" [label = <(METHOD_RETURN,ANY)> ]
-  "6207" -> "6210" 
+"6202" [label = <(METHOD,&lt;operator&gt;.postDecrement)> ]
+"6205" [label = <(METHOD_RETURN,ANY)> ]
+  "6202" -> "6205" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/174-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/174-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/174-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/174-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "CanBeLogical" {  
-"6211" [label = <(METHOD,CanBeLogical)> ]
-"6214" [label = <(METHOD_RETURN,ANY)> ]
-  "6211" -> "6214" 
+"6206" [label = <(METHOD,CanBeLogical)> ]
+"6209" [label = <(METHOD_RETURN,ANY)> ]
+  "6206" -> "6209" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/175-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/175-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/175-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/175-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "CanBePrimary" {  
-"6215" [label = <(METHOD,CanBePrimary)> ]
-"6218" [label = <(METHOD_RETURN,ANY)> ]
-  "6215" -> "6218" 
+"6210" [label = <(METHOD,CanBePrimary)> ]
+"6213" [label = <(METHOD_RETURN,ANY)> ]
+  "6210" -> "6213" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/176-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/176-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/176-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/176-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteOversizedParts" {  
-"6219" [label = <(METHOD,DeleteOversizedParts)> ]
-"6221" [label = <(METHOD_RETURN,ANY)> ]
-  "6219" -> "6221" 
+"6214" [label = <(METHOD,DeleteOversizedParts)> ]
+"6216" [label = <(METHOD_RETURN,ANY)> ]
+  "6214" -> "6216" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/177-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/177-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/177-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/177-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "MaximizeLogicals" {  
-"6222" [label = <(METHOD,MaximizeLogicals)> ]
-"6224" [label = <(METHOD_RETURN,ANY)> ]
-  "6222" -> "6224" 
+"6217" [label = <(METHOD,MaximizeLogicals)> ]
+"6219" [label = <(METHOD_RETURN,ANY)> ]
+  "6217" -> "6219" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/178-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/178-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/178-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/178-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "MaximizePrimaries" {  
-"6225" [label = <(METHOD,MaximizePrimaries)> ]
-"6227" [label = <(METHOD_RETURN,ANY)> ]
-  "6225" -> "6227" 
+"6220" [label = <(METHOD,MaximizePrimaries)> ]
+"6222" [label = <(METHOD_RETURN,ANY)> ]
+  "6220" -> "6222" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/179-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/179-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/179-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/179-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "MakeLogicalsContiguous" {  
-"6228" [label = <(METHOD,MakeLogicalsContiguous)> ]
-"6230" [label = <(METHOD_RETURN,ANY)> ]
-  "6228" -> "6230" 
+"6223" [label = <(METHOD,MakeLogicalsContiguous)> ]
+"6225" [label = <(METHOD_RETURN,ANY)> ]
+  "6223" -> "6225" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/18-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/18-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/18-cfg.dot	2023-06-07 19:31:27.097407671 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/18-cfg.dot	2023-06-07 19:31:31.577407271 +0330
@@ -1,47 +1,47 @@
 digraph "ReadCHSGeom" {  
-"2218" [label = <(&lt;operator&gt;.assignment,numHeads = myDisk-&gt;GetNumHeads())<SUB>656</SUB>> ]
-"2224" [label = <(&lt;operator&gt;.assignment,numSecspTrack = myDisk-&gt;GetNumSecsPerTrack())<SUB>657</SUB>> ]
-"2230" [label = <(&lt;operator&gt;.assignment,diskSize = myDisk-&gt;DiskSize(&amp;err))<SUB>658</SUB>> ]
-"2238" [label = <(&lt;operator&gt;.assignment,blockSize = myDisk-&gt;GetBlockSize())<SUB>659</SUB>> ]
-"2244" [label = <(SetGeometry,partitions[0].SetGeometry(numHeads, numSecspTrack, diskSize, blockSize))<SUB>660</SUB>> ]
-"2220" [label = <(GetNumHeads,myDisk-&gt;GetNumHeads())<SUB>656</SUB>> ]
-"2226" [label = <(GetNumSecsPerTrack,myDisk-&gt;GetNumSecsPerTrack())<SUB>657</SUB>> ]
-"2232" [label = <(DiskSize,myDisk-&gt;DiskSize(&amp;err))<SUB>658</SUB>> ]
-"2240" [label = <(GetBlockSize,myDisk-&gt;GetBlockSize())<SUB>659</SUB>> ]
-"2245" [label = <(&lt;operator&gt;.fieldAccess,partitions[0].SetGeometry)<SUB>660</SUB>> ]
-"2221" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;GetNumHeads)<SUB>656</SUB>> ]
-"2227" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;GetNumSecsPerTrack)<SUB>657</SUB>> ]
-"2233" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;DiskSize)<SUB>658</SUB>> ]
-"2236" [label = <(&lt;operator&gt;.addressOf,&amp;err)<SUB>658</SUB>> ]
-"2241" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;GetBlockSize)<SUB>659</SUB>> ]
-"2246" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[0])<SUB>660</SUB>> ]
-"2249" [label = <(FIELD_IDENTIFIER,SetGeometry,SetGeometry)<SUB>660</SUB>> ]
-"2223" [label = <(FIELD_IDENTIFIER,GetNumHeads,GetNumHeads)<SUB>656</SUB>> ]
-"2229" [label = <(FIELD_IDENTIFIER,GetNumSecsPerTrack,GetNumSecsPerTrack)<SUB>657</SUB>> ]
-"2235" [label = <(FIELD_IDENTIFIER,DiskSize,DiskSize)<SUB>658</SUB>> ]
-"2243" [label = <(FIELD_IDENTIFIER,GetBlockSize,GetBlockSize)<SUB>659</SUB>> ]
-"2214" [label = <(METHOD,ReadCHSGeom)<SUB>653</SUB>> ]
-"2254" [label = <(METHOD_RETURN,void)<SUB>653</SUB>> ]
-  "2218" -> "2229" 
-  "2224" -> "2235" 
-  "2230" -> "2243" 
-  "2238" -> "2246" 
-  "2244" -> "2254" 
-  "2220" -> "2218" 
-  "2226" -> "2224" 
-  "2232" -> "2230" 
-  "2240" -> "2238" 
-  "2245" -> "2244" 
-  "2221" -> "2220" 
-  "2227" -> "2226" 
-  "2233" -> "2236" 
-  "2236" -> "2232" 
-  "2241" -> "2240" 
-  "2246" -> "2249" 
-  "2249" -> "2245" 
-  "2223" -> "2221" 
-  "2229" -> "2227" 
+"2213" [label = <(&lt;operator&gt;.assignment,numHeads = myDisk-&gt;GetNumHeads())<SUB>655</SUB>> ]
+"2219" [label = <(&lt;operator&gt;.assignment,numSecspTrack = myDisk-&gt;GetNumSecsPerTrack())<SUB>656</SUB>> ]
+"2225" [label = <(&lt;operator&gt;.assignment,diskSize = myDisk-&gt;DiskSize(&amp;err))<SUB>657</SUB>> ]
+"2233" [label = <(&lt;operator&gt;.assignment,blockSize = myDisk-&gt;GetBlockSize())<SUB>658</SUB>> ]
+"2239" [label = <(SetGeometry,partitions[0].SetGeometry(numHeads, numSecspTrack, diskSize, blockSize))<SUB>659</SUB>> ]
+"2215" [label = <(GetNumHeads,myDisk-&gt;GetNumHeads())<SUB>655</SUB>> ]
+"2221" [label = <(GetNumSecsPerTrack,myDisk-&gt;GetNumSecsPerTrack())<SUB>656</SUB>> ]
+"2227" [label = <(DiskSize,myDisk-&gt;DiskSize(&amp;err))<SUB>657</SUB>> ]
+"2235" [label = <(GetBlockSize,myDisk-&gt;GetBlockSize())<SUB>658</SUB>> ]
+"2240" [label = <(&lt;operator&gt;.fieldAccess,partitions[0].SetGeometry)<SUB>659</SUB>> ]
+"2216" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;GetNumHeads)<SUB>655</SUB>> ]
+"2222" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;GetNumSecsPerTrack)<SUB>656</SUB>> ]
+"2228" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;DiskSize)<SUB>657</SUB>> ]
+"2231" [label = <(&lt;operator&gt;.addressOf,&amp;err)<SUB>657</SUB>> ]
+"2236" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;GetBlockSize)<SUB>658</SUB>> ]
+"2241" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[0])<SUB>659</SUB>> ]
+"2244" [label = <(FIELD_IDENTIFIER,SetGeometry,SetGeometry)<SUB>659</SUB>> ]
+"2218" [label = <(FIELD_IDENTIFIER,GetNumHeads,GetNumHeads)<SUB>655</SUB>> ]
+"2224" [label = <(FIELD_IDENTIFIER,GetNumSecsPerTrack,GetNumSecsPerTrack)<SUB>656</SUB>> ]
+"2230" [label = <(FIELD_IDENTIFIER,DiskSize,DiskSize)<SUB>657</SUB>> ]
+"2238" [label = <(FIELD_IDENTIFIER,GetBlockSize,GetBlockSize)<SUB>658</SUB>> ]
+"2209" [label = <(METHOD,ReadCHSGeom)<SUB>652</SUB>> ]
+"2249" [label = <(METHOD_RETURN,void)<SUB>652</SUB>> ]
+  "2213" -> "2224" 
+  "2219" -> "2230" 
+  "2225" -> "2238" 
+  "2233" -> "2241" 
+  "2239" -> "2249" 
+  "2215" -> "2213" 
+  "2221" -> "2219" 
+  "2227" -> "2225" 
   "2235" -> "2233" 
-  "2243" -> "2241" 
-  "2214" -> "2223" 
+  "2240" -> "2239" 
+  "2216" -> "2215" 
+  "2222" -> "2221" 
+  "2228" -> "2231" 
+  "2231" -> "2227" 
+  "2236" -> "2235" 
+  "2241" -> "2244" 
+  "2244" -> "2240" 
+  "2218" -> "2216" 
+  "2224" -> "2222" 
+  "2230" -> "2228" 
+  "2238" -> "2236" 
+  "2209" -> "2218" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/180-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/180-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/180-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/180-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "TrimPrimaries" {  
-"6231" [label = <(METHOD,TrimPrimaries)> ]
-"6233" [label = <(METHOD_RETURN,ANY)> ]
-  "6231" -> "6233" 
+"6226" [label = <(METHOD,TrimPrimaries)> ]
+"6228" [label = <(METHOD_RETURN,ANY)> ]
+  "6226" -> "6228" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/181-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/181-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/181-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/181-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "OmitOverlaps" {  
-"6234" [label = <(METHOD,OmitOverlaps)> ]
-"6236" [label = <(METHOD_RETURN,ANY)> ]
-  "6234" -> "6236" 
+"6229" [label = <(METHOD,OmitOverlaps)> ]
+"6231" [label = <(METHOD_RETURN,ANY)> ]
+  "6229" -> "6231" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/182-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/182-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/182-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/182-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "RemoveLogicalsFromFirstFour" {  
-"6237" [label = <(METHOD,RemoveLogicalsFromFirstFour)> ]
-"6239" [label = <(METHOD_RETURN,ANY)> ]
-  "6237" -> "6239" 
+"6232" [label = <(METHOD,RemoveLogicalsFromFirstFour)> ]
+"6234" [label = <(METHOD_RETURN,ANY)> ]
+  "6232" -> "6234" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/183-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/183-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/183-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/183-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "MovePrimariesToFirstFour" {  
-"6240" [label = <(METHOD,MovePrimariesToFirstFour)> ]
-"6242" [label = <(METHOD_RETURN,ANY)> ]
-  "6240" -> "6242" 
+"6235" [label = <(METHOD,MovePrimariesToFirstFour)> ]
+"6237" [label = <(METHOD_RETURN,ANY)> ]
+  "6235" -> "6237" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/184-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/184-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/184-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/184-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SortMBR" {  
-"6243" [label = <(METHOD,SortMBR)> ]
-"6245" [label = <(METHOD_RETURN,ANY)> ]
-  "6243" -> "6245" 
+"6238" [label = <(METHOD,SortMBR)> ]
+"6240" [label = <(METHOD_RETURN,ANY)> ]
+  "6238" -> "6240" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/185-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/185-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/185-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/185-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SetLengthLBA" {  
-"6246" [label = <(METHOD,SetLengthLBA)> ]
-"6250" [label = <(METHOD_RETURN,ANY)> ]
-  "6246" -> "6250" 
+"6241" [label = <(METHOD,SetLengthLBA)> ]
+"6245" [label = <(METHOD_RETURN,ANY)> ]
+  "6241" -> "6245" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/186-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/186-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/186-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/186-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "GetPartition" {  
-"6251" [label = <(METHOD,GetPartition)> ]
-"6254" [label = <(METHOD_RETURN,ANY)> ]
-  "6251" -> "6254" 
+"6246" [label = <(METHOD,GetPartition)> ]
+"6249" [label = <(METHOD_RETURN,ANY)> ]
+  "6246" -> "6249" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/187-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/187-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/187-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/187-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "ReadString" {  
-"6255" [label = <(METHOD,ReadString)> ]
-"6257" [label = <(METHOD_RETURN,ANY)> ]
-  "6255" -> "6257" 
+"6250" [label = <(METHOD,ReadString)> ]
+"6252" [label = <(METHOD_RETURN,ANY)> ]
+  "6250" -> "6252" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/188-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/188-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/188-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/188-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "good" {  
-"6258" [label = <(METHOD,good)> ]
-"6261" [label = <(METHOD_RETURN,ANY)> ]
-  "6258" -> "6261" 
+"6253" [label = <(METHOD,good)> ]
+"6256" [label = <(METHOD_RETURN,ANY)> ]
+  "6253" -> "6256" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/189-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/189-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/189-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/189-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "GetNumber" {  
-"6262" [label = <(METHOD,GetNumber)> ]
-"6268" [label = <(METHOD_RETURN,ANY)> ]
-  "6262" -> "6268" 
+"6257" [label = <(METHOD,GetNumber)> ]
+"6263" [label = <(METHOD_RETURN,ANY)> ]
+  "6257" -> "6263" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/19-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/19-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/19-cfg.dot	2023-06-07 19:31:27.097407671 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/19-cfg.dot	2023-06-07 19:31:31.577407271 +0330
@@ -1,67 +1,67 @@
 digraph "GetPartRange" {  
-"2262" [label = <(&lt;operator&gt;.assignment,numFound = 0)<SUB>671</SUB>> ]
-"2265" [label = <(&lt;operator&gt;.assignment,*low = MAX_MBR_PARTS + 1)<SUB>673</SUB>> ]
-"2271" [label = <(&lt;operator&gt;.assignment,*high = 0)<SUB>674</SUB>> ]
-"2327" [label = <(RETURN,return numFound;,return numFound;)<SUB>689</SUB>> ]
-"2266" [label = <(&lt;operator&gt;.indirection,*low)<SUB>673</SUB>> ]
-"2268" [label = <(&lt;operator&gt;.addition,MAX_MBR_PARTS + 1)<SUB>673</SUB>> ]
-"2272" [label = <(&lt;operator&gt;.indirection,*high)<SUB>674</SUB>> ]
-"2280" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>675</SUB>> ]
-"2283" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>675</SUB>> ]
-"2316" [label = <(&lt;operator&gt;.equals,*low == (MAX_MBR_PARTS + 1))<SUB>687</SUB>> ]
-"2277" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>675</SUB>> ]
-"2317" [label = <(&lt;operator&gt;.indirection,*low)<SUB>687</SUB>> ]
-"2319" [label = <(&lt;operator&gt;.addition,MAX_MBR_PARTS + 1)<SUB>687</SUB>> ]
-"2323" [label = <(&lt;operator&gt;.assignment,*low = 0)<SUB>688</SUB>> ]
-"2287" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetStartLBA() != UINT32_C(0))<SUB>676</SUB>> ]
-"2324" [label = <(&lt;operator&gt;.indirection,*low)<SUB>688</SUB>> ]
-"2288" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>676</SUB>> ]
-"2294" [label = <(UINT32_C,UINT32_C(0))<SUB>676</SUB>> ]
-"2297" [label = <(&lt;operator&gt;.assignment,*high = i)<SUB>677</SUB>> ]
-"2313" [label = <(&lt;operator&gt;.postIncrement,numFound++)<SUB>681</SUB>> ]
-"2289" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>676</SUB>> ]
-"2298" [label = <(&lt;operator&gt;.indirection,*high)<SUB>677</SUB>> ]
-"2302" [label = <(&lt;operator&gt;.equals,*low == (MAX_MBR_PARTS + 1))<SUB>679</SUB>> ]
-"2290" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>676</SUB>> ]
-"2293" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>676</SUB>> ]
-"2303" [label = <(&lt;operator&gt;.indirection,*low)<SUB>679</SUB>> ]
-"2305" [label = <(&lt;operator&gt;.addition,MAX_MBR_PARTS + 1)<SUB>679</SUB>> ]
-"2309" [label = <(&lt;operator&gt;.assignment,*low = i)<SUB>680</SUB>> ]
-"2310" [label = <(&lt;operator&gt;.indirection,*low)<SUB>680</SUB>> ]
-"2256" [label = <(METHOD,GetPartRange)<SUB>669</SUB>> ]
-"2329" [label = <(METHOD_RETURN,int)<SUB>669</SUB>> ]
-  "2262" -> "2266" 
-  "2265" -> "2272" 
-  "2271" -> "2277" 
-  "2327" -> "2329" 
-  "2266" -> "2268" 
-  "2268" -> "2265" 
-  "2272" -> "2271" 
-  "2280" -> "2290" 
-  "2280" -> "2317" 
-  "2283" -> "2280" 
-  "2316" -> "2324" 
-  "2316" -> "2327" 
-  "2277" -> "2280" 
-  "2317" -> "2319" 
-  "2319" -> "2316" 
-  "2323" -> "2327" 
-  "2287" -> "2298" 
-  "2287" -> "2283" 
-  "2324" -> "2323" 
-  "2288" -> "2294" 
-  "2294" -> "2287" 
-  "2297" -> "2303" 
-  "2313" -> "2283" 
-  "2289" -> "2288" 
-  "2298" -> "2297" 
-  "2302" -> "2310" 
-  "2302" -> "2313" 
-  "2290" -> "2293" 
-  "2293" -> "2289" 
-  "2303" -> "2305" 
-  "2305" -> "2302" 
-  "2309" -> "2313" 
-  "2310" -> "2309" 
-  "2256" -> "2262" 
+"2257" [label = <(&lt;operator&gt;.assignment,numFound = 0)<SUB>670</SUB>> ]
+"2260" [label = <(&lt;operator&gt;.assignment,*low = MAX_MBR_PARTS + 1)<SUB>672</SUB>> ]
+"2266" [label = <(&lt;operator&gt;.assignment,*high = 0)<SUB>673</SUB>> ]
+"2322" [label = <(RETURN,return numFound;,return numFound;)<SUB>688</SUB>> ]
+"2261" [label = <(&lt;operator&gt;.indirection,*low)<SUB>672</SUB>> ]
+"2263" [label = <(&lt;operator&gt;.addition,MAX_MBR_PARTS + 1)<SUB>672</SUB>> ]
+"2267" [label = <(&lt;operator&gt;.indirection,*high)<SUB>673</SUB>> ]
+"2275" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>674</SUB>> ]
+"2278" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>674</SUB>> ]
+"2311" [label = <(&lt;operator&gt;.equals,*low == (MAX_MBR_PARTS + 1))<SUB>686</SUB>> ]
+"2272" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>674</SUB>> ]
+"2312" [label = <(&lt;operator&gt;.indirection,*low)<SUB>686</SUB>> ]
+"2314" [label = <(&lt;operator&gt;.addition,MAX_MBR_PARTS + 1)<SUB>686</SUB>> ]
+"2318" [label = <(&lt;operator&gt;.assignment,*low = 0)<SUB>687</SUB>> ]
+"2282" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetStartLBA() != UINT32_C(0))<SUB>675</SUB>> ]
+"2319" [label = <(&lt;operator&gt;.indirection,*low)<SUB>687</SUB>> ]
+"2283" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>675</SUB>> ]
+"2289" [label = <(UINT32_C,UINT32_C(0))<SUB>675</SUB>> ]
+"2292" [label = <(&lt;operator&gt;.assignment,*high = i)<SUB>676</SUB>> ]
+"2308" [label = <(&lt;operator&gt;.postIncrement,numFound++)<SUB>680</SUB>> ]
+"2284" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>675</SUB>> ]
+"2293" [label = <(&lt;operator&gt;.indirection,*high)<SUB>676</SUB>> ]
+"2297" [label = <(&lt;operator&gt;.equals,*low == (MAX_MBR_PARTS + 1))<SUB>678</SUB>> ]
+"2285" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>675</SUB>> ]
+"2288" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>675</SUB>> ]
+"2298" [label = <(&lt;operator&gt;.indirection,*low)<SUB>678</SUB>> ]
+"2300" [label = <(&lt;operator&gt;.addition,MAX_MBR_PARTS + 1)<SUB>678</SUB>> ]
+"2304" [label = <(&lt;operator&gt;.assignment,*low = i)<SUB>679</SUB>> ]
+"2305" [label = <(&lt;operator&gt;.indirection,*low)<SUB>679</SUB>> ]
+"2251" [label = <(METHOD,GetPartRange)<SUB>668</SUB>> ]
+"2324" [label = <(METHOD_RETURN,int)<SUB>668</SUB>> ]
+  "2257" -> "2261" 
+  "2260" -> "2267" 
+  "2266" -> "2272" 
+  "2322" -> "2324" 
+  "2261" -> "2263" 
+  "2263" -> "2260" 
+  "2267" -> "2266" 
+  "2275" -> "2285" 
+  "2275" -> "2312" 
+  "2278" -> "2275" 
+  "2311" -> "2319" 
+  "2311" -> "2322" 
+  "2272" -> "2275" 
+  "2312" -> "2314" 
+  "2314" -> "2311" 
+  "2318" -> "2322" 
+  "2282" -> "2293" 
+  "2282" -> "2278" 
+  "2319" -> "2318" 
+  "2283" -> "2289" 
+  "2289" -> "2282" 
+  "2292" -> "2298" 
+  "2308" -> "2278" 
+  "2284" -> "2283" 
+  "2293" -> "2292" 
+  "2297" -> "2305" 
+  "2297" -> "2308" 
+  "2285" -> "2288" 
+  "2288" -> "2284" 
+  "2298" -> "2300" 
+  "2300" -> "2297" 
+  "2304" -> "2308" 
+  "2305" -> "2304" 
+  "2251" -> "2257" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/190-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/190-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/190-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/190-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.xor" {  
-"6269" [label = <(METHOD,&lt;operator&gt;.xor)> ]
-"6273" [label = <(METHOD_RETURN,ANY)> ]
-  "6269" -> "6273" 
+"6264" [label = <(METHOD,&lt;operator&gt;.xor)> ]
+"6268" [label = <(METHOD_RETURN,ANY)> ]
+  "6264" -> "6268" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/191-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/191-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/191-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/191-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "SetInclusionwChecks" {  
-"6274" [label = <(METHOD,SetInclusionwChecks)> ]
-"6278" [label = <(METHOD_RETURN,ANY)> ]
-  "6274" -> "6278" 
+"6269" [label = <(METHOD,SetInclusionwChecks)> ]
+"6273" [label = <(METHOD_RETURN,ANY)> ]
+  "6269" -> "6273" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/192-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/192-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/192-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/192-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "DisplayMBRData" {  
-"6279" [label = <(METHOD,DisplayMBRData)> ]
-"6281" [label = <(METHOD_RETURN,ANY)> ]
-  "6279" -> "6281" 
+"6274" [label = <(METHOD,DisplayMBRData)> ]
+"6276" [label = <(METHOD_RETURN,ANY)> ]
+  "6274" -> "6276" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/193-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/193-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/193-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/193-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "GetYN" {  
-"6282" [label = <(METHOD,GetYN)> ]
-"6284" [label = <(METHOD_RETURN,ANY)> ]
-  "6282" -> "6284" 
+"6277" [label = <(METHOD,GetYN)> ]
+"6279" [label = <(METHOD_RETURN,ANY)> ]
+  "6277" -> "6279" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/194-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/194-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/194-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/194-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "IsHex" {  
-"6285" [label = <(METHOD,IsHex)> ]
-"6288" [label = <(METHOD_RETURN,ANY)> ]
-  "6285" -> "6288" 
+"6280" [label = <(METHOD,IsHex)> ]
+"6283" [label = <(METHOD_RETURN,ANY)> ]
+  "6280" -> "6283" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/195-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/195-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/195-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/195-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "sscanf" {  
-"6289" [label = <(METHOD,sscanf)> ]
-"6294" [label = <(METHOD_RETURN,ANY)> ]
-  "6289" -> "6294" 
+"6284" [label = <(METHOD,sscanf)> ]
+"6289" [label = <(METHOD_RETURN,ANY)> ]
+  "6284" -> "6289" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/196-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/196-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/196-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/196-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "c_str" {  
-"6295" [label = <(METHOD,c_str)> ]
-"6298" [label = <(METHOD_RETURN,ANY)> ]
-  "6295" -> "6298" 
+"6290" [label = <(METHOD,c_str)> ]
+"6293" [label = <(METHOD_RETURN,ANY)> ]
+  "6290" -> "6293" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/197-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/197-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/197-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/197-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "ShowCommands" {  
-"6299" [label = <(METHOD,ShowCommands)> ]
-"6301" [label = <(METHOD_RETURN,ANY)> ]
-  "6299" -> "6301" 
+"6294" [label = <(METHOD,ShowCommands)> ]
+"6296" [label = <(METHOD_RETURN,ANY)> ]
+  "6294" -> "6296" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/198-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/198-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/198-cfg.dot	2023-06-07 19:31:27.177407664 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/198-cfg.dot	2023-06-07 19:31:31.647407263 +0330
@@ -1,5 +1,5 @@
 digraph "CountParts" {  
-"6302" [label = <(METHOD,CountParts)> ]
-"6304" [label = <(METHOD_RETURN,ANY)> ]
-  "6302" -> "6304" 
+"6297" [label = <(METHOD,CountParts)> ]
+"6299" [label = <(METHOD_RETURN,ANY)> ]
+  "6297" -> "6299" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/20-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/20-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/20-cfg.dot	2023-06-07 19:31:27.107407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/20-cfg.dot	2023-06-07 19:31:31.587407268 +0330
@@ -1,140 +1,140 @@
 digraph "LBAtoCHS" {  
-"2340" [label = <(&lt;operator&gt;.assignment,retval = 1)<SUB>699</SUB>> ]
-"2344" [label = <(&lt;operator&gt;.assignment,done = 0)<SUB>700</SUB>> ]
-"2498" [label = <(RETURN,return (retval);,return (retval);)<SUB>736</SUB>> ]
-"2348" [label = <(&lt;operator&gt;.notEquals,chs != NULL)<SUB>702</SUB>> ]
-"2353" [label = <(&lt;operator&gt;.equals,lba == 0)<SUB>704</SUB>> ]
-"2375" [label = <(&lt;operator&gt;.logicalAnd,(!done) &amp;&amp; (lba &gt;= ((uint64_t) numHeads * numSecspTrack * MAX_CYLINDERS)))<SUB>709</SUB>> ]
-"2409" [label = <(&lt;operator&gt;.logicalNot,!done)<SUB>716</SUB>> ]
-"2494" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>734</SUB>> ]
-"2357" [label = <(&lt;operator&gt;.assignment,chs[0] = chs[1] = chs[2] = UINT8_C(0))<SUB>705</SUB>> ]
-"2371" [label = <(&lt;operator&gt;.assignment,done = 1)<SUB>706</SUB>> ]
-"2376" [label = <(&lt;operator&gt;.logicalNot,!done)<SUB>709</SUB>> ]
-"2378" [label = <(&lt;operator&gt;.greaterEqualsThan,lba &gt;= ((uint64_t) numHeads * numSecspTrack * MAX_CYLINDERS))<SUB>709</SUB>> ]
-"2388" [label = <(&lt;operator&gt;.assignment,chs[0] = 254)<SUB>710</SUB>> ]
-"2393" [label = <(&lt;operator&gt;.assignment,chs[1] = chs[2] = 255)<SUB>711</SUB>> ]
-"2402" [label = <(&lt;operator&gt;.assignment,done = 1)<SUB>712</SUB>> ]
-"2405" [label = <(&lt;operator&gt;.assignment,retval = 0)<SUB>713</SUB>> ]
-"2412" [label = <(&lt;operator&gt;.assignment,cylinder = lba / (uint64_t) (numHeads * numSecspTrack))<SUB>717</SUB>> ]
-"2420" [label = <(&lt;operator&gt;.assignment,remainder = lba - (cylinder * numHeads * numSecspTrack))<SUB>718</SUB>> ]
-"2429" [label = <(&lt;operator&gt;.assignment,head = remainder / numSecspTrack)<SUB>719</SUB>> ]
-"2434" [label = <(&lt;operator&gt;.assignmentMinus,remainder -= head * numSecspTrack)<SUB>720</SUB>> ]
-"2439" [label = <(&lt;operator&gt;.assignment,sector = remainder)<SUB>721</SUB>> ]
-"2496" [label = <(&lt;operator&gt;.minus,-1)<SUB>734</SUB>> ]
-"2358" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[0])<SUB>705</SUB>> ]
-"2361" [label = <(&lt;operator&gt;.assignment,chs[1] = chs[2] = UINT8_C(0))<SUB>705</SUB>> ]
-"2380" [label = <(&lt;operator&gt;.multiplication,(uint64_t) numHeads * numSecspTrack * MAX_CYLINDERS)<SUB>709</SUB>> ]
-"2389" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[0])<SUB>710</SUB>> ]
-"2394" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[1])<SUB>711</SUB>> ]
-"2397" [label = <(&lt;operator&gt;.assignment,chs[2] = 255)<SUB>711</SUB>> ]
-"2414" [label = <(&lt;operator&gt;.division,lba / (uint64_t) (numHeads * numSecspTrack))<SUB>717</SUB>> ]
-"2422" [label = <(&lt;operator&gt;.subtraction,lba - (cylinder * numHeads * numSecspTrack))<SUB>718</SUB>> ]
-"2431" [label = <(&lt;operator&gt;.division,remainder / numSecspTrack)<SUB>719</SUB>> ]
-"2436" [label = <(&lt;operator&gt;.multiplication,head * numSecspTrack)<SUB>720</SUB>> ]
-"2443" [label = <(&lt;operator&gt;.lessThan,head &lt; numHeads)<SUB>722</SUB>> ]
-"2460" [label = <(&lt;operator&gt;.lessThan,sector &lt; numSecspTrack)<SUB>726</SUB>> ]
-"2362" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[1])<SUB>705</SUB>> ]
-"2365" [label = <(&lt;operator&gt;.assignment,chs[2] = UINT8_C(0))<SUB>705</SUB>> ]
-"2381" [label = <(&lt;operator&gt;.multiplication,(uint64_t) numHeads * numSecspTrack)<SUB>709</SUB>> ]
-"2398" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[2])<SUB>711</SUB>> ]
-"2416" [label = <(uint64_t,(uint64_t) (numHeads * numSecspTrack))<SUB>717</SUB>> ]
-"2424" [label = <(&lt;operator&gt;.multiplication,cylinder * numHeads * numSecspTrack)<SUB>718</SUB>> ]
-"2447" [label = <(&lt;operator&gt;.assignment,chs[0] = (uint8_t) head)<SUB>723</SUB>> ]
-"2464" [label = <(&lt;operator&gt;.assignment,chs[1] = (uint8_t) ((sector + 1) + (cylinder &gt;&gt; 8) * 64))<SUB>727</SUB>> ]
-"2478" [label = <(&lt;operator&gt;.assignment,chs[2] = (uint8_t) (cylinder &amp; UINT64_C(0xFF)))<SUB>728</SUB>> ]
-"2366" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[2])<SUB>705</SUB>> ]
-"2369" [label = <(UINT8_C,UINT8_C(0))<SUB>705</SUB>> ]
-"2382" [label = <(&lt;operator&gt;.cast,(uint64_t) numHeads)<SUB>709</SUB>> ]
-"2417" [label = <(&lt;operator&gt;.multiplication,numHeads * numSecspTrack)<SUB>717</SUB>> ]
-"2425" [label = <(&lt;operator&gt;.multiplication,cylinder * numHeads)<SUB>718</SUB>> ]
-"2448" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[0])<SUB>723</SUB>> ]
-"2451" [label = <(&lt;operator&gt;.cast,(uint8_t) head)<SUB>723</SUB>> ]
-"2456" [label = <(&lt;operator&gt;.assignment,retval = 0)<SUB>725</SUB>> ]
-"2465" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[1])<SUB>727</SUB>> ]
-"2468" [label = <(uint8_t,(uint8_t) ((sector + 1) + (cylinder &gt;&gt; 8) * 64))<SUB>727</SUB>> ]
-"2479" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[2])<SUB>728</SUB>> ]
-"2482" [label = <(uint8_t,(uint8_t) (cylinder &amp; UINT64_C(0xFF)))<SUB>728</SUB>> ]
-"2489" [label = <(&lt;operator&gt;.assignment,retval = 0)<SUB>730</SUB>> ]
-"2383" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>709</SUB>> ]
-"2452" [label = <(UNKNOWN,uint8_t,uint8_t)<SUB>723</SUB>> ]
-"2469" [label = <(&lt;operator&gt;.addition,(sector + 1) + (cylinder &gt;&gt; 8) * 64)<SUB>727</SUB>> ]
-"2483" [label = <(&lt;operator&gt;.and,cylinder &amp; UINT64_C(0xFF))<SUB>728</SUB>> ]
-"2470" [label = <(&lt;operator&gt;.addition,sector + 1)<SUB>727</SUB>> ]
-"2473" [label = <(&lt;operator&gt;.multiplication,(cylinder &gt;&gt; 8) * 64)<SUB>727</SUB>> ]
-"2485" [label = <(UINT64_C,UINT64_C(0xFF))<SUB>728</SUB>> ]
-"2474" [label = <(&lt;operator&gt;.arithmeticShiftRight,cylinder &gt;&gt; 8)<SUB>727</SUB>> ]
-"2331" [label = <(METHOD,LBAtoCHS)<SUB>696</SUB>> ]
-"2500" [label = <(METHOD_RETURN,int)<SUB>696</SUB>> ]
-  "2340" -> "2344" 
-  "2344" -> "2348" 
-  "2498" -> "2500" 
+"2335" [label = <(&lt;operator&gt;.assignment,retval = 1)<SUB>698</SUB>> ]
+"2339" [label = <(&lt;operator&gt;.assignment,done = 0)<SUB>699</SUB>> ]
+"2493" [label = <(RETURN,return (retval);,return (retval);)<SUB>735</SUB>> ]
+"2343" [label = <(&lt;operator&gt;.notEquals,chs != NULL)<SUB>701</SUB>> ]
+"2348" [label = <(&lt;operator&gt;.equals,lba == 0)<SUB>703</SUB>> ]
+"2370" [label = <(&lt;operator&gt;.logicalAnd,(!done) &amp;&amp; (lba &gt;= ((uint64_t) numHeads * numSecspTrack * MAX_CYLINDERS)))<SUB>708</SUB>> ]
+"2404" [label = <(&lt;operator&gt;.logicalNot,!done)<SUB>715</SUB>> ]
+"2489" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>733</SUB>> ]
+"2352" [label = <(&lt;operator&gt;.assignment,chs[0] = chs[1] = chs[2] = UINT8_C(0))<SUB>704</SUB>> ]
+"2366" [label = <(&lt;operator&gt;.assignment,done = 1)<SUB>705</SUB>> ]
+"2371" [label = <(&lt;operator&gt;.logicalNot,!done)<SUB>708</SUB>> ]
+"2373" [label = <(&lt;operator&gt;.greaterEqualsThan,lba &gt;= ((uint64_t) numHeads * numSecspTrack * MAX_CYLINDERS))<SUB>708</SUB>> ]
+"2383" [label = <(&lt;operator&gt;.assignment,chs[0] = 254)<SUB>709</SUB>> ]
+"2388" [label = <(&lt;operator&gt;.assignment,chs[1] = chs[2] = 255)<SUB>710</SUB>> ]
+"2397" [label = <(&lt;operator&gt;.assignment,done = 1)<SUB>711</SUB>> ]
+"2400" [label = <(&lt;operator&gt;.assignment,retval = 0)<SUB>712</SUB>> ]
+"2407" [label = <(&lt;operator&gt;.assignment,cylinder = lba / (uint64_t) (numHeads * numSecspTrack))<SUB>716</SUB>> ]
+"2415" [label = <(&lt;operator&gt;.assignment,remainder = lba - (cylinder * numHeads * numSecspTrack))<SUB>717</SUB>> ]
+"2424" [label = <(&lt;operator&gt;.assignment,head = remainder / numSecspTrack)<SUB>718</SUB>> ]
+"2429" [label = <(&lt;operator&gt;.assignmentMinus,remainder -= head * numSecspTrack)<SUB>719</SUB>> ]
+"2434" [label = <(&lt;operator&gt;.assignment,sector = remainder)<SUB>720</SUB>> ]
+"2491" [label = <(&lt;operator&gt;.minus,-1)<SUB>733</SUB>> ]
+"2353" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[0])<SUB>704</SUB>> ]
+"2356" [label = <(&lt;operator&gt;.assignment,chs[1] = chs[2] = UINT8_C(0))<SUB>704</SUB>> ]
+"2375" [label = <(&lt;operator&gt;.multiplication,(uint64_t) numHeads * numSecspTrack * MAX_CYLINDERS)<SUB>708</SUB>> ]
+"2384" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[0])<SUB>709</SUB>> ]
+"2389" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[1])<SUB>710</SUB>> ]
+"2392" [label = <(&lt;operator&gt;.assignment,chs[2] = 255)<SUB>710</SUB>> ]
+"2409" [label = <(&lt;operator&gt;.division,lba / (uint64_t) (numHeads * numSecspTrack))<SUB>716</SUB>> ]
+"2417" [label = <(&lt;operator&gt;.subtraction,lba - (cylinder * numHeads * numSecspTrack))<SUB>717</SUB>> ]
+"2426" [label = <(&lt;operator&gt;.division,remainder / numSecspTrack)<SUB>718</SUB>> ]
+"2431" [label = <(&lt;operator&gt;.multiplication,head * numSecspTrack)<SUB>719</SUB>> ]
+"2438" [label = <(&lt;operator&gt;.lessThan,head &lt; numHeads)<SUB>721</SUB>> ]
+"2455" [label = <(&lt;operator&gt;.lessThan,sector &lt; numSecspTrack)<SUB>725</SUB>> ]
+"2357" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[1])<SUB>704</SUB>> ]
+"2360" [label = <(&lt;operator&gt;.assignment,chs[2] = UINT8_C(0))<SUB>704</SUB>> ]
+"2376" [label = <(&lt;operator&gt;.multiplication,(uint64_t) numHeads * numSecspTrack)<SUB>708</SUB>> ]
+"2393" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[2])<SUB>710</SUB>> ]
+"2411" [label = <(uint64_t,(uint64_t) (numHeads * numSecspTrack))<SUB>716</SUB>> ]
+"2419" [label = <(&lt;operator&gt;.multiplication,cylinder * numHeads * numSecspTrack)<SUB>717</SUB>> ]
+"2442" [label = <(&lt;operator&gt;.assignment,chs[0] = (uint8_t) head)<SUB>722</SUB>> ]
+"2459" [label = <(&lt;operator&gt;.assignment,chs[1] = (uint8_t) ((sector + 1) + (cylinder &gt;&gt; 8) * 64))<SUB>726</SUB>> ]
+"2473" [label = <(&lt;operator&gt;.assignment,chs[2] = (uint8_t) (cylinder &amp; UINT64_C(0xFF)))<SUB>727</SUB>> ]
+"2361" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[2])<SUB>704</SUB>> ]
+"2364" [label = <(UINT8_C,UINT8_C(0))<SUB>704</SUB>> ]
+"2377" [label = <(&lt;operator&gt;.cast,(uint64_t) numHeads)<SUB>708</SUB>> ]
+"2412" [label = <(&lt;operator&gt;.multiplication,numHeads * numSecspTrack)<SUB>716</SUB>> ]
+"2420" [label = <(&lt;operator&gt;.multiplication,cylinder * numHeads)<SUB>717</SUB>> ]
+"2443" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[0])<SUB>722</SUB>> ]
+"2446" [label = <(&lt;operator&gt;.cast,(uint8_t) head)<SUB>722</SUB>> ]
+"2451" [label = <(&lt;operator&gt;.assignment,retval = 0)<SUB>724</SUB>> ]
+"2460" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[1])<SUB>726</SUB>> ]
+"2463" [label = <(uint8_t,(uint8_t) ((sector + 1) + (cylinder &gt;&gt; 8) * 64))<SUB>726</SUB>> ]
+"2474" [label = <(&lt;operator&gt;.indirectIndexAccess,chs[2])<SUB>727</SUB>> ]
+"2477" [label = <(uint8_t,(uint8_t) (cylinder &amp; UINT64_C(0xFF)))<SUB>727</SUB>> ]
+"2484" [label = <(&lt;operator&gt;.assignment,retval = 0)<SUB>729</SUB>> ]
+"2378" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>708</SUB>> ]
+"2447" [label = <(UNKNOWN,uint8_t,uint8_t)<SUB>722</SUB>> ]
+"2464" [label = <(&lt;operator&gt;.addition,(sector + 1) + (cylinder &gt;&gt; 8) * 64)<SUB>726</SUB>> ]
+"2478" [label = <(&lt;operator&gt;.and,cylinder &amp; UINT64_C(0xFF))<SUB>727</SUB>> ]
+"2465" [label = <(&lt;operator&gt;.addition,sector + 1)<SUB>726</SUB>> ]
+"2468" [label = <(&lt;operator&gt;.multiplication,(cylinder &gt;&gt; 8) * 64)<SUB>726</SUB>> ]
+"2480" [label = <(UINT64_C,UINT64_C(0xFF))<SUB>727</SUB>> ]
+"2469" [label = <(&lt;operator&gt;.arithmeticShiftRight,cylinder &gt;&gt; 8)<SUB>726</SUB>> ]
+"2326" [label = <(METHOD,LBAtoCHS)<SUB>695</SUB>> ]
+"2495" [label = <(METHOD_RETURN,int)<SUB>695</SUB>> ]
+  "2335" -> "2339" 
+  "2339" -> "2343" 
+  "2493" -> "2495" 
+  "2343" -> "2348" 
+  "2343" -> "2491" 
   "2348" -> "2353" 
-  "2348" -> "2496" 
-  "2353" -> "2358" 
-  "2353" -> "2376" 
-  "2375" -> "2389" 
-  "2375" -> "2409" 
-  "2409" -> "2417" 
-  "2409" -> "2498" 
-  "2494" -> "2498" 
-  "2357" -> "2371" 
-  "2371" -> "2376" 
-  "2376" -> "2375" 
-  "2376" -> "2383" 
-  "2378" -> "2375" 
-  "2388" -> "2394" 
-  "2393" -> "2402" 
-  "2402" -> "2405" 
-  "2405" -> "2409" 
-  "2412" -> "2425" 
-  "2420" -> "2431" 
-  "2429" -> "2436" 
-  "2434" -> "2439" 
-  "2439" -> "2443" 
-  "2496" -> "2494" 
-  "2358" -> "2362" 
-  "2361" -> "2357" 
-  "2380" -> "2378" 
-  "2389" -> "2388" 
-  "2394" -> "2398" 
-  "2397" -> "2393" 
-  "2414" -> "2412" 
-  "2422" -> "2420" 
+  "2348" -> "2371" 
+  "2370" -> "2384" 
+  "2370" -> "2404" 
+  "2404" -> "2412" 
+  "2404" -> "2493" 
+  "2489" -> "2493" 
+  "2352" -> "2366" 
+  "2366" -> "2371" 
+  "2371" -> "2370" 
+  "2371" -> "2378" 
+  "2373" -> "2370" 
+  "2383" -> "2389" 
+  "2388" -> "2397" 
+  "2397" -> "2400" 
+  "2400" -> "2404" 
+  "2407" -> "2420" 
+  "2415" -> "2426" 
+  "2424" -> "2431" 
+  "2429" -> "2434" 
+  "2434" -> "2438" 
+  "2491" -> "2489" 
+  "2353" -> "2357" 
+  "2356" -> "2352" 
+  "2375" -> "2373" 
+  "2384" -> "2383" 
+  "2389" -> "2393" 
+  "2392" -> "2388" 
+  "2409" -> "2407" 
+  "2417" -> "2415" 
+  "2426" -> "2424" 
   "2431" -> "2429" 
-  "2436" -> "2434" 
-  "2443" -> "2448" 
-  "2443" -> "2456" 
+  "2438" -> "2443" 
+  "2438" -> "2451" 
+  "2455" -> "2460" 
+  "2455" -> "2484" 
+  "2357" -> "2361" 
+  "2360" -> "2356" 
+  "2376" -> "2375" 
+  "2393" -> "2392" 
+  "2411" -> "2409" 
+  "2419" -> "2417" 
+  "2442" -> "2455" 
+  "2459" -> "2474" 
+  "2473" -> "2493" 
+  "2361" -> "2364" 
+  "2364" -> "2360" 
+  "2377" -> "2376" 
+  "2412" -> "2411" 
+  "2420" -> "2419" 
+  "2443" -> "2447" 
+  "2446" -> "2442" 
+  "2451" -> "2455" 
   "2460" -> "2465" 
-  "2460" -> "2489" 
-  "2362" -> "2366" 
-  "2365" -> "2361" 
-  "2381" -> "2380" 
-  "2398" -> "2397" 
-  "2416" -> "2414" 
-  "2424" -> "2422" 
-  "2447" -> "2460" 
-  "2464" -> "2479" 
-  "2478" -> "2498" 
-  "2366" -> "2369" 
-  "2369" -> "2365" 
-  "2382" -> "2381" 
-  "2417" -> "2416" 
-  "2425" -> "2424" 
-  "2448" -> "2452" 
-  "2451" -> "2447" 
-  "2456" -> "2460" 
-  "2465" -> "2470" 
+  "2463" -> "2459" 
+  "2474" -> "2480" 
+  "2477" -> "2473" 
+  "2484" -> "2493" 
+  "2378" -> "2377" 
+  "2447" -> "2446" 
+  "2464" -> "2463" 
+  "2478" -> "2477" 
+  "2465" -> "2469" 
   "2468" -> "2464" 
-  "2479" -> "2485" 
-  "2482" -> "2478" 
-  "2489" -> "2498" 
-  "2383" -> "2382" 
-  "2452" -> "2451" 
+  "2480" -> "2478" 
   "2469" -> "2468" 
-  "2483" -> "2482" 
-  "2470" -> "2474" 
-  "2473" -> "2469" 
-  "2485" -> "2483" 
-  "2474" -> "2473" 
-  "2331" -> "2340" 
+  "2326" -> "2335" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/21-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/21-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/21-cfg.dot	2023-06-07 19:31:27.107407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/21-cfg.dot	2023-06-07 19:31:31.587407268 +0330
@@ -1,127 +1,127 @@
 digraph "FindOverlaps" {  
-"2510" [label = <(&lt;operator&gt;.assignment,numProbs = 0)<SUB>743</SUB>> ]
-"2513" [label = <(&lt;operator&gt;.assignment,numEE = 0)<SUB>743</SUB>> ]
-"2516" [label = <(&lt;operator&gt;.assignment,ProtectiveOnOne = 0)<SUB>743</SUB>> ]
-"2637" [label = <(RETURN,return numProbs;,return numProbs;)<SUB>768</SUB>> ]
-"2524" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>745</SUB>> ]
-"2527" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>745</SUB>> ]
-"2615" [label = <(&lt;operator&gt;.greaterThan,numEE &gt; 1)<SUB>761</SUB>> ]
-"2625" [label = <(&lt;operator&gt;.logicalAnd,!ProtectiveOnOne &amp;&amp; (numEE &gt; 0))<SUB>764</SUB>> ]
-"2521" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>745</SUB>> ]
-"2619" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nCaution: More than one 0xEE MBR partition found. This can cause problems\n&quot;\012 &lt;&lt; &quot;in some OSes.\n&quot;)<SUB>762</SUB>> ]
-"2626" [label = <(&lt;operator&gt;.logicalNot,!ProtectiveOnOne)<SUB>764</SUB>> ]
-"2628" [label = <(&lt;operator&gt;.greaterThan,numEE &gt; 0)<SUB>764</SUB>> ]
-"2632" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nWarning: 0xEE partition doesn't start on sector 1. This can cause &quot;\012 &lt;&lt; &quot;problems\nin some OSes.\n&quot;)<SUB>765</SUB>> ]
-"2537" [label = <(&lt;operator&gt;.lessThan,j &lt; MAX_MBR_PARTS)<SUB>746</SUB>> ]
-"2540" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>746</SUB>> ]
-"2590" [label = <(&lt;operator&gt;.equals,partitions[i].GetType() == 0xEE)<SUB>754</SUB>> ]
-"2620" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nCaution: More than one 0xEE MBR partition found. This can cause problems\n&quot;)<SUB>762</SUB>> ]
-"2633" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nWarning: 0xEE partition doesn't start on sector 1. This can cause &quot;)<SUB>765</SUB>> ]
-"2532" [label = <(&lt;operator&gt;.assignment,j = i + 1)<SUB>746</SUB>> ]
-"2591" [label = <(GetType,partitions[i].GetType())<SUB>754</SUB>> ]
-"2599" [label = <(&lt;operator&gt;.postIncrement,numEE++)<SUB>755</SUB>> ]
-"2534" [label = <(&lt;operator&gt;.addition,i + 1)<SUB>746</SUB>> ]
-"2544" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() != NONE) &amp;&amp; (partitions[j].GetInclusion() != NONE) &amp;&amp;\012 (partitions[i].DoTheyOverlap(partitions[j])))<SUB>747</SUB>> ]
-"2592" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetType)<SUB>754</SUB>> ]
-"2602" [label = <(&lt;operator&gt;.equals,partitions[i].GetStartLBA() == 1)<SUB>756</SUB>> ]
-"2545" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() != NONE) &amp;&amp; (partitions[j].GetInclusion() != NONE))<SUB>747</SUB>> ]
-"2562" [label = <(DoTheyOverlap,partitions[i].DoTheyOverlap(partitions[j]))<SUB>748</SUB>> ]
-"2572" [label = <(&lt;operator&gt;.postIncrement,numProbs++)<SUB>749</SUB>> ]
-"2574" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nProblem: MBR partitions &quot; &lt;&lt; i + 1 &lt;&lt; &quot; and &quot; &lt;&lt; j + 1\012 &lt;&lt; &quot; overlap!\n&quot;)<SUB>750</SUB>> ]
-"2593" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>754</SUB>> ]
-"2596" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>754</SUB>> ]
-"2603" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>756</SUB>> ]
-"2611" [label = <(&lt;operator&gt;.assignment,ProtectiveOnOne = 1)<SUB>757</SUB>> ]
-"2546" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetInclusion() != NONE)<SUB>747</SUB>> ]
-"2554" [label = <(&lt;operator&gt;.notEquals,partitions[j].GetInclusion() != NONE)<SUB>747</SUB>> ]
-"2563" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].DoTheyOverlap)<SUB>748</SUB>> ]
-"2568" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>748</SUB>> ]
-"2575" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nProblem: MBR partitions &quot; &lt;&lt; i + 1 &lt;&lt; &quot; and &quot; &lt;&lt; j + 1)<SUB>750</SUB>> ]
-"2604" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>756</SUB>> ]
-"2547" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>747</SUB>> ]
-"2555" [label = <(GetInclusion,partitions[j].GetInclusion())<SUB>747</SUB>> ]
-"2564" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>748</SUB>> ]
-"2567" [label = <(FIELD_IDENTIFIER,DoTheyOverlap,DoTheyOverlap)<SUB>748</SUB>> ]
-"2576" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nProblem: MBR partitions &quot; &lt;&lt; i + 1 &lt;&lt; &quot; and &quot;)<SUB>750</SUB>> ]
-"2585" [label = <(&lt;operator&gt;.addition,j + 1)<SUB>750</SUB>> ]
-"2605" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>756</SUB>> ]
-"2608" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>756</SUB>> ]
-"2548" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>747</SUB>> ]
-"2556" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetInclusion)<SUB>747</SUB>> ]
-"2577" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nProblem: MBR partitions &quot; &lt;&lt; i + 1)<SUB>750</SUB>> ]
-"2549" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>747</SUB>> ]
-"2552" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>747</SUB>> ]
-"2557" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>747</SUB>> ]
-"2560" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>747</SUB>> ]
-"2578" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nProblem: MBR partitions &quot;)<SUB>750</SUB>> ]
-"2581" [label = <(&lt;operator&gt;.addition,i + 1)<SUB>750</SUB>> ]
-"2502" [label = <(METHOD,FindOverlaps)<SUB>742</SUB>> ]
-"2639" [label = <(METHOD_RETURN,int)<SUB>742</SUB>> ]
-  "2510" -> "2513" 
-  "2513" -> "2516" 
-  "2516" -> "2521" 
-  "2637" -> "2639" 
-  "2524" -> "2534" 
-  "2524" -> "2615" 
-  "2527" -> "2524" 
-  "2615" -> "2620" 
-  "2615" -> "2626" 
-  "2625" -> "2633" 
-  "2625" -> "2637" 
-  "2521" -> "2524" 
-  "2619" -> "2626" 
-  "2626" -> "2625" 
-  "2626" -> "2628" 
-  "2628" -> "2625" 
-  "2632" -> "2637" 
-  "2537" -> "2549" 
-  "2537" -> "2593" 
-  "2540" -> "2537" 
-  "2590" -> "2599" 
-  "2590" -> "2527" 
-  "2620" -> "2619" 
-  "2633" -> "2632" 
-  "2532" -> "2537" 
-  "2591" -> "2590" 
-  "2599" -> "2605" 
-  "2534" -> "2532" 
-  "2544" -> "2572" 
-  "2544" -> "2540" 
-  "2592" -> "2591" 
-  "2602" -> "2611" 
-  "2602" -> "2527" 
-  "2545" -> "2544" 
-  "2545" -> "2564" 
-  "2562" -> "2544" 
-  "2572" -> "2578" 
-  "2574" -> "2540" 
-  "2593" -> "2596" 
-  "2596" -> "2592" 
-  "2603" -> "2602" 
-  "2611" -> "2527" 
-  "2546" -> "2545" 
-  "2546" -> "2557" 
-  "2554" -> "2545" 
-  "2563" -> "2568" 
-  "2568" -> "2562" 
-  "2575" -> "2574" 
-  "2604" -> "2603" 
-  "2547" -> "2546" 
-  "2555" -> "2554" 
-  "2564" -> "2567" 
-  "2567" -> "2563" 
-  "2576" -> "2585" 
-  "2585" -> "2575" 
-  "2605" -> "2608" 
-  "2608" -> "2604" 
-  "2548" -> "2547" 
-  "2556" -> "2555" 
-  "2577" -> "2576" 
-  "2549" -> "2552" 
-  "2552" -> "2548" 
-  "2557" -> "2560" 
-  "2560" -> "2556" 
-  "2578" -> "2581" 
-  "2581" -> "2577" 
-  "2502" -> "2510" 
+"2505" [label = <(&lt;operator&gt;.assignment,numProbs = 0)<SUB>742</SUB>> ]
+"2508" [label = <(&lt;operator&gt;.assignment,numEE = 0)<SUB>742</SUB>> ]
+"2511" [label = <(&lt;operator&gt;.assignment,ProtectiveOnOne = 0)<SUB>742</SUB>> ]
+"2632" [label = <(RETURN,return numProbs;,return numProbs;)<SUB>767</SUB>> ]
+"2519" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>744</SUB>> ]
+"2522" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>744</SUB>> ]
+"2610" [label = <(&lt;operator&gt;.greaterThan,numEE &gt; 1)<SUB>760</SUB>> ]
+"2620" [label = <(&lt;operator&gt;.logicalAnd,!ProtectiveOnOne &amp;&amp; (numEE &gt; 0))<SUB>763</SUB>> ]
+"2516" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>744</SUB>> ]
+"2614" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nCaution: More than one 0xEE MBR partition found. This can cause problems\n&quot;\012 &lt;&lt; &quot;in some OSes.\n&quot;)<SUB>761</SUB>> ]
+"2621" [label = <(&lt;operator&gt;.logicalNot,!ProtectiveOnOne)<SUB>763</SUB>> ]
+"2623" [label = <(&lt;operator&gt;.greaterThan,numEE &gt; 0)<SUB>763</SUB>> ]
+"2627" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nWarning: 0xEE partition doesn't start on sector 1. This can cause &quot;\012 &lt;&lt; &quot;problems\nin some OSes.\n&quot;)<SUB>764</SUB>> ]
+"2532" [label = <(&lt;operator&gt;.lessThan,j &lt; MAX_MBR_PARTS)<SUB>745</SUB>> ]
+"2535" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>745</SUB>> ]
+"2585" [label = <(&lt;operator&gt;.equals,partitions[i].GetType() == 0xEE)<SUB>753</SUB>> ]
+"2615" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nCaution: More than one 0xEE MBR partition found. This can cause problems\n&quot;)<SUB>761</SUB>> ]
+"2628" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nWarning: 0xEE partition doesn't start on sector 1. This can cause &quot;)<SUB>764</SUB>> ]
+"2527" [label = <(&lt;operator&gt;.assignment,j = i + 1)<SUB>745</SUB>> ]
+"2586" [label = <(GetType,partitions[i].GetType())<SUB>753</SUB>> ]
+"2594" [label = <(&lt;operator&gt;.postIncrement,numEE++)<SUB>754</SUB>> ]
+"2529" [label = <(&lt;operator&gt;.addition,i + 1)<SUB>745</SUB>> ]
+"2539" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() != NONE) &amp;&amp; (partitions[j].GetInclusion() != NONE) &amp;&amp;\012 (partitions[i].DoTheyOverlap(partitions[j])))<SUB>746</SUB>> ]
+"2587" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetType)<SUB>753</SUB>> ]
+"2597" [label = <(&lt;operator&gt;.equals,partitions[i].GetStartLBA() == 1)<SUB>755</SUB>> ]
+"2540" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() != NONE) &amp;&amp; (partitions[j].GetInclusion() != NONE))<SUB>746</SUB>> ]
+"2557" [label = <(DoTheyOverlap,partitions[i].DoTheyOverlap(partitions[j]))<SUB>747</SUB>> ]
+"2567" [label = <(&lt;operator&gt;.postIncrement,numProbs++)<SUB>748</SUB>> ]
+"2569" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nProblem: MBR partitions &quot; &lt;&lt; i + 1 &lt;&lt; &quot; and &quot; &lt;&lt; j + 1\012 &lt;&lt; &quot; overlap!\n&quot;)<SUB>749</SUB>> ]
+"2588" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>753</SUB>> ]
+"2591" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>753</SUB>> ]
+"2598" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>755</SUB>> ]
+"2606" [label = <(&lt;operator&gt;.assignment,ProtectiveOnOne = 1)<SUB>756</SUB>> ]
+"2541" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetInclusion() != NONE)<SUB>746</SUB>> ]
+"2549" [label = <(&lt;operator&gt;.notEquals,partitions[j].GetInclusion() != NONE)<SUB>746</SUB>> ]
+"2558" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].DoTheyOverlap)<SUB>747</SUB>> ]
+"2563" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>747</SUB>> ]
+"2570" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nProblem: MBR partitions &quot; &lt;&lt; i + 1 &lt;&lt; &quot; and &quot; &lt;&lt; j + 1)<SUB>749</SUB>> ]
+"2599" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>755</SUB>> ]
+"2542" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>746</SUB>> ]
+"2550" [label = <(GetInclusion,partitions[j].GetInclusion())<SUB>746</SUB>> ]
+"2559" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>747</SUB>> ]
+"2562" [label = <(FIELD_IDENTIFIER,DoTheyOverlap,DoTheyOverlap)<SUB>747</SUB>> ]
+"2571" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nProblem: MBR partitions &quot; &lt;&lt; i + 1 &lt;&lt; &quot; and &quot;)<SUB>749</SUB>> ]
+"2580" [label = <(&lt;operator&gt;.addition,j + 1)<SUB>749</SUB>> ]
+"2600" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>755</SUB>> ]
+"2603" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>755</SUB>> ]
+"2543" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>746</SUB>> ]
+"2551" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetInclusion)<SUB>746</SUB>> ]
+"2572" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nProblem: MBR partitions &quot; &lt;&lt; i + 1)<SUB>749</SUB>> ]
+"2544" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>746</SUB>> ]
+"2547" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>746</SUB>> ]
+"2552" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>746</SUB>> ]
+"2555" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>746</SUB>> ]
+"2573" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\nProblem: MBR partitions &quot;)<SUB>749</SUB>> ]
+"2576" [label = <(&lt;operator&gt;.addition,i + 1)<SUB>749</SUB>> ]
+"2497" [label = <(METHOD,FindOverlaps)<SUB>741</SUB>> ]
+"2634" [label = <(METHOD_RETURN,int)<SUB>741</SUB>> ]
+  "2505" -> "2508" 
+  "2508" -> "2511" 
+  "2511" -> "2516" 
+  "2632" -> "2634" 
+  "2519" -> "2529" 
+  "2519" -> "2610" 
+  "2522" -> "2519" 
+  "2610" -> "2615" 
+  "2610" -> "2621" 
+  "2620" -> "2628" 
+  "2620" -> "2632" 
+  "2516" -> "2519" 
+  "2614" -> "2621" 
+  "2621" -> "2620" 
+  "2621" -> "2623" 
+  "2623" -> "2620" 
+  "2627" -> "2632" 
+  "2532" -> "2544" 
+  "2532" -> "2588" 
+  "2535" -> "2532" 
+  "2585" -> "2594" 
+  "2585" -> "2522" 
+  "2615" -> "2614" 
+  "2628" -> "2627" 
+  "2527" -> "2532" 
+  "2586" -> "2585" 
+  "2594" -> "2600" 
+  "2529" -> "2527" 
+  "2539" -> "2567" 
+  "2539" -> "2535" 
+  "2587" -> "2586" 
+  "2597" -> "2606" 
+  "2597" -> "2522" 
+  "2540" -> "2539" 
+  "2540" -> "2559" 
+  "2557" -> "2539" 
+  "2567" -> "2573" 
+  "2569" -> "2535" 
+  "2588" -> "2591" 
+  "2591" -> "2587" 
+  "2598" -> "2597" 
+  "2606" -> "2522" 
+  "2541" -> "2540" 
+  "2541" -> "2552" 
+  "2549" -> "2540" 
+  "2558" -> "2563" 
+  "2563" -> "2557" 
+  "2570" -> "2569" 
+  "2599" -> "2598" 
+  "2542" -> "2541" 
+  "2550" -> "2549" 
+  "2559" -> "2562" 
+  "2562" -> "2558" 
+  "2571" -> "2580" 
+  "2580" -> "2570" 
+  "2600" -> "2603" 
+  "2603" -> "2599" 
+  "2543" -> "2542" 
+  "2551" -> "2550" 
+  "2572" -> "2571" 
+  "2544" -> "2547" 
+  "2547" -> "2543" 
+  "2552" -> "2555" 
+  "2555" -> "2551" 
+  "2573" -> "2576" 
+  "2576" -> "2572" 
+  "2497" -> "2505" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/22-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/22-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/22-cfg.dot	2023-06-07 19:31:27.107407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/22-cfg.dot	2023-06-07 19:31:31.587407268 +0330
@@ -1,57 +1,57 @@
 digraph "NumPrimaries" {  
-"2647" [label = <(&lt;operator&gt;.assignment,numPrimaries = 0)<SUB>774</SUB>> ]
-"2650" [label = <(&lt;operator&gt;.assignment,logicalsFound = 0)<SUB>774</SUB>> ]
-"2699" [label = <(RETURN,return (numPrimaries + logicalsFound);,return (numPrimaries + logicalsFound);)<SUB>784</SUB>> ]
-"2658" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>776</SUB>> ]
-"2661" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>776</SUB>> ]
-"2700" [label = <(&lt;operator&gt;.addition,numPrimaries + logicalsFound)<SUB>784</SUB>> ]
-"2655" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>776</SUB>> ]
-"2665" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLengthLBA() &gt; 0)<SUB>777</SUB>> ]
-"2666" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>777</SUB>> ]
-"2667" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>777</SUB>> ]
-"2675" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>778</SUB>> ]
-"2687" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>780</SUB>> ]
-"2668" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>777</SUB>> ]
-"2671" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>777</SUB>> ]
-"2676" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>778</SUB>> ]
-"2684" [label = <(&lt;operator&gt;.postIncrement,numPrimaries++)<SUB>779</SUB>> ]
-"2688" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>780</SUB>> ]
-"2696" [label = <(&lt;operator&gt;.assignment,logicalsFound = 1)<SUB>781</SUB>> ]
-"2677" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>778</SUB>> ]
-"2689" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>780</SUB>> ]
-"2678" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>778</SUB>> ]
-"2681" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>778</SUB>> ]
-"2690" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>780</SUB>> ]
-"2693" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>780</SUB>> ]
-"2641" [label = <(METHOD,NumPrimaries)<SUB>773</SUB>> ]
-"2703" [label = <(METHOD_RETURN,int)<SUB>773</SUB>> ]
-  "2647" -> "2650" 
-  "2650" -> "2655" 
-  "2699" -> "2703" 
-  "2658" -> "2668" 
-  "2658" -> "2700" 
-  "2661" -> "2658" 
-  "2700" -> "2699" 
-  "2655" -> "2658" 
-  "2665" -> "2678" 
-  "2665" -> "2661" 
-  "2666" -> "2665" 
-  "2667" -> "2666" 
-  "2675" -> "2684" 
-  "2675" -> "2690" 
-  "2687" -> "2696" 
-  "2687" -> "2661" 
-  "2668" -> "2671" 
-  "2671" -> "2667" 
-  "2676" -> "2675" 
-  "2684" -> "2690" 
-  "2688" -> "2687" 
-  "2696" -> "2661" 
-  "2677" -> "2676" 
-  "2689" -> "2688" 
-  "2678" -> "2681" 
-  "2681" -> "2677" 
-  "2690" -> "2693" 
-  "2693" -> "2689" 
-  "2641" -> "2647" 
+"2642" [label = <(&lt;operator&gt;.assignment,numPrimaries = 0)<SUB>773</SUB>> ]
+"2645" [label = <(&lt;operator&gt;.assignment,logicalsFound = 0)<SUB>773</SUB>> ]
+"2694" [label = <(RETURN,return (numPrimaries + logicalsFound);,return (numPrimaries + logicalsFound);)<SUB>783</SUB>> ]
+"2653" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>775</SUB>> ]
+"2656" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>775</SUB>> ]
+"2695" [label = <(&lt;operator&gt;.addition,numPrimaries + logicalsFound)<SUB>783</SUB>> ]
+"2650" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>775</SUB>> ]
+"2660" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLengthLBA() &gt; 0)<SUB>776</SUB>> ]
+"2661" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>776</SUB>> ]
+"2662" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>776</SUB>> ]
+"2670" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>777</SUB>> ]
+"2682" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>779</SUB>> ]
+"2663" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>776</SUB>> ]
+"2666" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>776</SUB>> ]
+"2671" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>777</SUB>> ]
+"2679" [label = <(&lt;operator&gt;.postIncrement,numPrimaries++)<SUB>778</SUB>> ]
+"2683" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>779</SUB>> ]
+"2691" [label = <(&lt;operator&gt;.assignment,logicalsFound = 1)<SUB>780</SUB>> ]
+"2672" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>777</SUB>> ]
+"2684" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>779</SUB>> ]
+"2673" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>777</SUB>> ]
+"2676" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>777</SUB>> ]
+"2685" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>779</SUB>> ]
+"2688" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>779</SUB>> ]
+"2636" [label = <(METHOD,NumPrimaries)<SUB>772</SUB>> ]
+"2698" [label = <(METHOD_RETURN,int)<SUB>772</SUB>> ]
+  "2642" -> "2645" 
+  "2645" -> "2650" 
+  "2694" -> "2698" 
+  "2653" -> "2663" 
+  "2653" -> "2695" 
+  "2656" -> "2653" 
+  "2695" -> "2694" 
+  "2650" -> "2653" 
+  "2660" -> "2673" 
+  "2660" -> "2656" 
+  "2661" -> "2660" 
+  "2662" -> "2661" 
+  "2670" -> "2679" 
+  "2670" -> "2685" 
+  "2682" -> "2691" 
+  "2682" -> "2656" 
+  "2663" -> "2666" 
+  "2666" -> "2662" 
+  "2671" -> "2670" 
+  "2679" -> "2685" 
+  "2683" -> "2682" 
+  "2691" -> "2656" 
+  "2672" -> "2671" 
+  "2684" -> "2683" 
+  "2673" -> "2676" 
+  "2676" -> "2672" 
+  "2685" -> "2688" 
+  "2688" -> "2684" 
+  "2636" -> "2642" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/23-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/23-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/23-cfg.dot	2023-06-07 19:31:27.107407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/23-cfg.dot	2023-06-07 19:31:31.587407268 +0330
@@ -1,29 +1,29 @@
 digraph "NumLogicals" {  
-"2710" [label = <(&lt;operator&gt;.assignment,numLogicals = 0)<SUB>789</SUB>> ]
-"2736" [label = <(RETURN,return numLogicals;,return numLogicals;)<SUB>795</SUB>> ]
-"2718" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>791</SUB>> ]
-"2721" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>791</SUB>> ]
-"2715" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>791</SUB>> ]
-"2725" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>792</SUB>> ]
-"2726" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>792</SUB>> ]
-"2734" [label = <(&lt;operator&gt;.postIncrement,numLogicals++)<SUB>793</SUB>> ]
-"2727" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>792</SUB>> ]
-"2728" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>792</SUB>> ]
-"2731" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>792</SUB>> ]
-"2705" [label = <(METHOD,NumLogicals)<SUB>788</SUB>> ]
-"2738" [label = <(METHOD_RETURN,int)<SUB>788</SUB>> ]
-  "2710" -> "2715" 
-  "2736" -> "2738" 
-  "2718" -> "2728" 
-  "2718" -> "2736" 
-  "2721" -> "2718" 
-  "2715" -> "2718" 
-  "2725" -> "2734" 
-  "2725" -> "2721" 
-  "2726" -> "2725" 
-  "2734" -> "2721" 
-  "2727" -> "2726" 
-  "2728" -> "2731" 
-  "2731" -> "2727" 
+"2705" [label = <(&lt;operator&gt;.assignment,numLogicals = 0)<SUB>788</SUB>> ]
+"2731" [label = <(RETURN,return numLogicals;,return numLogicals;)<SUB>794</SUB>> ]
+"2713" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>790</SUB>> ]
+"2716" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>790</SUB>> ]
+"2710" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>790</SUB>> ]
+"2720" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>791</SUB>> ]
+"2721" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>791</SUB>> ]
+"2729" [label = <(&lt;operator&gt;.postIncrement,numLogicals++)<SUB>792</SUB>> ]
+"2722" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>791</SUB>> ]
+"2723" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>791</SUB>> ]
+"2726" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>791</SUB>> ]
+"2700" [label = <(METHOD,NumLogicals)<SUB>787</SUB>> ]
+"2733" [label = <(METHOD_RETURN,int)<SUB>787</SUB>> ]
   "2705" -> "2710" 
+  "2731" -> "2733" 
+  "2713" -> "2723" 
+  "2713" -> "2731" 
+  "2716" -> "2713" 
+  "2710" -> "2713" 
+  "2720" -> "2729" 
+  "2720" -> "2716" 
+  "2721" -> "2720" 
+  "2729" -> "2716" 
+  "2722" -> "2721" 
+  "2723" -> "2726" 
+  "2726" -> "2722" 
+  "2700" -> "2705" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/24-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/24-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/24-cfg.dot	2023-06-07 19:31:27.107407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/24-cfg.dot	2023-06-07 19:31:31.587407268 +0330
@@ -1,42 +1,42 @@
 digraph "CountParts" {  
-"2745" [label = <(&lt;operator&gt;.assignment,num = 0)<SUB>801</SUB>> ]
-"2780" [label = <(RETURN,return num;,return num;)<SUB>808</SUB>> ]
-"2753" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>803</SUB>> ]
-"2756" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>803</SUB>> ]
-"2750" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>803</SUB>> ]
-"2760" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetInclusion() == LOGICAL) ||\012 (partitions[i].GetInclusion() == PRIMARY))<SUB>804</SUB>> ]
-"2761" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>804</SUB>> ]
-"2769" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>805</SUB>> ]
-"2778" [label = <(&lt;operator&gt;.postIncrement,num++)<SUB>806</SUB>> ]
-"2762" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>804</SUB>> ]
-"2770" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>805</SUB>> ]
-"2763" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>804</SUB>> ]
-"2771" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>805</SUB>> ]
-"2764" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>804</SUB>> ]
-"2767" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>804</SUB>> ]
-"2772" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>805</SUB>> ]
-"2775" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>805</SUB>> ]
-"2740" [label = <(METHOD,CountParts)<SUB>800</SUB>> ]
-"2782" [label = <(METHOD_RETURN,int)<SUB>800</SUB>> ]
-  "2745" -> "2750" 
-  "2780" -> "2782" 
-  "2753" -> "2764" 
-  "2753" -> "2780" 
-  "2756" -> "2753" 
-  "2750" -> "2753" 
-  "2760" -> "2778" 
-  "2760" -> "2756" 
-  "2761" -> "2760" 
-  "2761" -> "2772" 
-  "2769" -> "2760" 
-  "2778" -> "2756" 
-  "2762" -> "2761" 
-  "2770" -> "2769" 
-  "2763" -> "2762" 
-  "2771" -> "2770" 
-  "2764" -> "2767" 
-  "2767" -> "2763" 
-  "2772" -> "2775" 
-  "2775" -> "2771" 
+"2740" [label = <(&lt;operator&gt;.assignment,num = 0)<SUB>800</SUB>> ]
+"2775" [label = <(RETURN,return num;,return num;)<SUB>807</SUB>> ]
+"2748" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>802</SUB>> ]
+"2751" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>802</SUB>> ]
+"2745" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>802</SUB>> ]
+"2755" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetInclusion() == LOGICAL) ||\012 (partitions[i].GetInclusion() == PRIMARY))<SUB>803</SUB>> ]
+"2756" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>803</SUB>> ]
+"2764" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>804</SUB>> ]
+"2773" [label = <(&lt;operator&gt;.postIncrement,num++)<SUB>805</SUB>> ]
+"2757" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>803</SUB>> ]
+"2765" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>804</SUB>> ]
+"2758" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>803</SUB>> ]
+"2766" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>804</SUB>> ]
+"2759" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>803</SUB>> ]
+"2762" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>803</SUB>> ]
+"2767" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>804</SUB>> ]
+"2770" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>804</SUB>> ]
+"2735" [label = <(METHOD,CountParts)<SUB>799</SUB>> ]
+"2777" [label = <(METHOD_RETURN,int)<SUB>799</SUB>> ]
   "2740" -> "2745" 
+  "2775" -> "2777" 
+  "2748" -> "2759" 
+  "2748" -> "2775" 
+  "2751" -> "2748" 
+  "2745" -> "2748" 
+  "2755" -> "2773" 
+  "2755" -> "2751" 
+  "2756" -> "2755" 
+  "2756" -> "2767" 
+  "2764" -> "2755" 
+  "2773" -> "2751" 
+  "2757" -> "2756" 
+  "2765" -> "2764" 
+  "2758" -> "2757" 
+  "2766" -> "2765" 
+  "2759" -> "2762" 
+  "2762" -> "2758" 
+  "2767" -> "2770" 
+  "2770" -> "2766" 
+  "2735" -> "2740" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/25-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/25-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/25-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/25-cfg.dot	2023-06-07 19:31:31.587407268 +0330
@@ -1,297 +1,297 @@
 digraph "UpdateCanBeLogical" {  
-"2797" [label = <(&lt;operator&gt;.assignment,numPrimaries = NumPrimaries())<SUB>816</SUB>> ]
-"2800" [label = <(&lt;operator&gt;.assignment,numLogicals = NumLogicals())<SUB>817</SUB>> ]
-"2803" [label = <(&lt;operator&gt;.assignment,firstLogical = FirstLogicalLBA() - 1)<SUB>818</SUB>> ]
-"2808" [label = <(&lt;operator&gt;.assignment,lastLogical = LastLogicalLBA())<SUB>819</SUB>> ]
-"2799" [label = <(NumPrimaries,NumPrimaries())<SUB>816</SUB>> ]
-"2802" [label = <(NumLogicals,NumLogicals())<SUB>817</SUB>> ]
-"2805" [label = <(&lt;operator&gt;.subtraction,FirstLogicalLBA() - 1)<SUB>818</SUB>> ]
-"2810" [label = <(LastLogicalLBA,LastLogicalLBA())<SUB>819</SUB>> ]
-"2816" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>820</SUB>> ]
-"2819" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>820</SUB>> ]
-"2806" [label = <(FirstLogicalLBA,FirstLogicalLBA())<SUB>818</SUB>> ]
-"2813" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>820</SUB>> ]
-"2822" [label = <(&lt;operator&gt;.assignment,usedAsEBR = (SectorUsedAs(partitions[i].GetLastLBA()) == EBR))<SUB>821</SUB>> ]
-"2824" [label = <(&lt;operator&gt;.equals,SectorUsedAs(partitions[i].GetLastLBA()) == EBR)<SUB>821</SUB>> ]
-"2825" [label = <(SectorUsedAs,SectorUsedAs(partitions[i].GetLastLBA()))<SUB>821</SUB>> ]
-"2836" [label = <(SetCanBeLogical,partitions[i].SetCanBeLogical(0))<SUB>823</SUB>> ]
-"2843" [label = <(SetCanBePrimary,partitions[i].SetCanBePrimary(0))<SUB>824</SUB>> ]
-"2826" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>821</SUB>> ]
-"2837" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBeLogical)<SUB>823</SUB>> ]
-"2844" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBePrimary)<SUB>824</SUB>> ]
-"2827" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>821</SUB>> ]
-"2838" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>823</SUB>> ]
-"2841" [label = <(FIELD_IDENTIFIER,SetCanBeLogical,SetCanBeLogical)<SUB>823</SUB>> ]
-"2845" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>824</SUB>> ]
-"2848" [label = <(FIELD_IDENTIFIER,SetCanBePrimary,SetCanBePrimary)<SUB>824</SUB>> ]
-"2853" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLengthLBA() &gt; 0)<SUB>825</SUB>> ]
-"2828" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>821</SUB>> ]
-"2831" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>821</SUB>> ]
-"2854" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>825</SUB>> ]
-"2862" [label = <(&lt;operator&gt;.assignment,sectorBefore = SectorUsedAs(partitions[i].GetStartLBA() - 1))<SUB>827</SUB>> ]
-"2873" [label = <(&lt;operator&gt;.assignment,lStart = partitions[i].GetStartLBA())<SUB>828</SUB>> ]
-"2987" [label = <(SetCanBePrimary,partitions[i].SetCanBePrimary(1))<SUB>850</SUB>> ]
-"2855" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>825</SUB>> ]
-"2864" [label = <(SectorUsedAs,SectorUsedAs(partitions[i].GetStartLBA() - 1))<SUB>827</SUB>> ]
-"2875" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>828</SUB>> ]
-"2882" [label = <(&lt;operator&gt;.logicalAnd,(lastLogical &gt; 0) &amp;&amp;\012 ((sectorBefore == EBR) || (sectorBefore == NONE)))<SUB>829</SUB>> ]
-"2988" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBePrimary)<SUB>850</SUB>> ]
-"2995" [label = <(&lt;operator&gt;.logicalAnd,(numPrimaries &gt;= 4) &amp;&amp; (partitions[i].GetInclusion() != PRIMARY))<SUB>851</SUB>> ]
-"3041" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetStartLBA() &gt; (firstLogical + 1)) &amp;&amp;\012 (partitions[i].GetLastLBA() &lt; lastLogical))<SUB>857</SUB>> ]
-"2856" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>825</SUB>> ]
-"2859" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>825</SUB>> ]
-"2865" [label = <(&lt;operator&gt;.subtraction,partitions[i].GetStartLBA() - 1)<SUB>827</SUB>> ]
-"2876" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>828</SUB>> ]
-"2883" [label = <(&lt;operator&gt;.greaterThan,lastLogical &gt; 0)<SUB>829</SUB>> ]
-"2886" [label = <(&lt;operator&gt;.logicalOr,(sectorBefore == EBR) || (sectorBefore == NONE))<SUB>830</SUB>> ]
-"2894" [label = <(SetCanBeLogical,partitions[i].SetCanBeLogical(1))<SUB>833</SUB>> ]
-"2989" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>850</SUB>> ]
-"2992" [label = <(FIELD_IDENTIFIER,SetCanBePrimary,SetCanBePrimary)<SUB>850</SUB>> ]
-"2996" [label = <(&lt;operator&gt;.greaterEqualsThan,numPrimaries &gt;= 4)<SUB>851</SUB>> ]
-"2999" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetInclusion() != PRIMARY)<SUB>851</SUB>> ]
-"3008" [label = <(SetCanBePrimary,partitions[i].SetCanBePrimary(0))<SUB>852</SUB>> ]
-"3042" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; (firstLogical + 1))<SUB>857</SUB>> ]
-"3052" [label = <(&lt;operator&gt;.lessThan,partitions[i].GetLastLBA() &lt; lastLogical)<SUB>858</SUB>> ]
-"3061" [label = <(SetCanBePrimary,partitions[i].SetCanBePrimary(0))<SUB>859</SUB>> ]
-"2866" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>827</SUB>> ]
-"2877" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>828</SUB>> ]
-"2880" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>828</SUB>> ]
-"2887" [label = <(&lt;operator&gt;.equals,sectorBefore == EBR)<SUB>830</SUB>> ]
-"2890" [label = <(&lt;operator&gt;.equals,sectorBefore == NONE)<SUB>830</SUB>> ]
-"2895" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBeLogical)<SUB>833</SUB>> ]
-"2906" [label = <(&lt;operator&gt;.lessThan,j &lt; MAX_MBR_PARTS)<SUB>834</SUB>> ]
-"2909" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>834</SUB>> ]
-"3000" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>851</SUB>> ]
-"3009" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBePrimary)<SUB>852</SUB>> ]
-"3016" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == LOGICAL) &amp;&amp; (numLogicals == 1) &amp;&amp;\012 (numPrimaries == 4))<SUB>853</SUB>> ]
-"3043" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>857</SUB>> ]
-"3049" [label = <(&lt;operator&gt;.addition,firstLogical + 1)<SUB>857</SUB>> ]
-"3053" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>858</SUB>> ]
-"3062" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBePrimary)<SUB>859</SUB>> ]
-"2867" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>827</SUB>> ]
-"2896" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>833</SUB>> ]
-"2899" [label = <(FIELD_IDENTIFIER,SetCanBeLogical,SetCanBeLogical)<SUB>833</SUB>> ]
-"2903" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>834</SUB>> ]
-"2961" [label = <(&lt;operator&gt;.logicalAnd,(sectorBefore != EBR) &amp;&amp; (sectorBefore != NONE))<SUB>844</SUB>> ]
-"3001" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>851</SUB>> ]
-"3010" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>852</SUB>> ]
-"3013" [label = <(FIELD_IDENTIFIER,SetCanBePrimary,SetCanBePrimary)<SUB>852</SUB>> ]
-"3017" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == LOGICAL) &amp;&amp; (numLogicals == 1))<SUB>853</SUB>> ]
-"3029" [label = <(&lt;operator&gt;.equals,numPrimaries == 4)<SUB>854</SUB>> ]
-"3033" [label = <(SetCanBePrimary,partitions[i].SetCanBePrimary(1))<SUB>855</SUB>> ]
-"3044" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>857</SUB>> ]
-"3054" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>858</SUB>> ]
-"3063" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>859</SUB>> ]
-"3066" [label = <(FIELD_IDENTIFIER,SetCanBePrimary,SetCanBePrimary)<SUB>859</SUB>> ]
-"2868" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>827</SUB>> ]
-"2871" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>827</SUB>> ]
-"2913" [label = <(&lt;operator&gt;.logicalAnd,(i != j) &amp;&amp; (partitions[j].GetInclusion() == PRIMARY))<SUB>835</SUB>> ]
-"2962" [label = <(&lt;operator&gt;.notEquals,sectorBefore != EBR)<SUB>844</SUB>> ]
-"2965" [label = <(&lt;operator&gt;.notEquals,sectorBefore != NONE)<SUB>844</SUB>> ]
-"2969" [label = <(SetCanBeLogical,partitions[i].SetCanBeLogical(0))<SUB>845</SUB>> ]
-"3002" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>851</SUB>> ]
-"3005" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>851</SUB>> ]
-"3018" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>853</SUB>> ]
-"3026" [label = <(&lt;operator&gt;.equals,numLogicals == 1)<SUB>853</SUB>> ]
-"3034" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBePrimary)<SUB>855</SUB>> ]
-"3045" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>857</SUB>> ]
-"3048" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>857</SUB>> ]
-"3055" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>858</SUB>> ]
-"3058" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>858</SUB>> ]
-"2914" [label = <(&lt;operator&gt;.notEquals,i != j)<SUB>835</SUB>> ]
-"2917" [label = <(&lt;operator&gt;.equals,partitions[j].GetInclusion() == PRIMARY)<SUB>835</SUB>> ]
-"2926" [label = <(&lt;operator&gt;.assignment,pStart = partitions[j].GetStartLBA())<SUB>836</SUB>> ]
-"2970" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBeLogical)<SUB>845</SUB>> ]
-"2978" [label = <(SetCanBeLogical,partitions[i].SetCanBeLogical(lastLogical == 0))<SUB>847</SUB>> ]
-"3019" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>853</SUB>> ]
-"3035" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>855</SUB>> ]
-"3038" [label = <(FIELD_IDENTIFIER,SetCanBePrimary,SetCanBePrimary)<SUB>855</SUB>> ]
-"2918" [label = <(GetInclusion,partitions[j].GetInclusion())<SUB>835</SUB>> ]
-"2928" [label = <(GetStartLBA,partitions[j].GetStartLBA())<SUB>836</SUB>> ]
-"2935" [label = <(&lt;operator&gt;.logicalOr,((pStart &lt; lStart) &amp;&amp; (firstLogical &lt; pStart)) ||\012 ((pStart &gt; lStart) &amp;&amp; (firstLogical &gt; pStart)))<SUB>837</SUB>> ]
-"2971" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>845</SUB>> ]
-"2974" [label = <(FIELD_IDENTIFIER,SetCanBeLogical,SetCanBeLogical)<SUB>845</SUB>> ]
-"2979" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBeLogical)<SUB>847</SUB>> ]
-"2984" [label = <(&lt;operator&gt;.equals,lastLogical == 0)<SUB>847</SUB>> ]
-"3020" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>853</SUB>> ]
-"2919" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetInclusion)<SUB>835</SUB>> ]
-"2929" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetStartLBA)<SUB>836</SUB>> ]
-"2936" [label = <(&lt;operator&gt;.logicalAnd,(pStart &lt; lStart) &amp;&amp; (firstLogical &lt; pStart))<SUB>837</SUB>> ]
-"2943" [label = <(&lt;operator&gt;.logicalAnd,(pStart &gt; lStart) &amp;&amp; (firstLogical &gt; pStart))<SUB>838</SUB>> ]
-"2951" [label = <(SetCanBeLogical,partitions[i].SetCanBeLogical(0))<SUB>839</SUB>> ]
-"2980" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>847</SUB>> ]
-"2983" [label = <(FIELD_IDENTIFIER,SetCanBeLogical,SetCanBeLogical)<SUB>847</SUB>> ]
-"3021" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>853</SUB>> ]
-"3024" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>853</SUB>> ]
-"2920" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>835</SUB>> ]
-"2923" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>835</SUB>> ]
-"2930" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>836</SUB>> ]
-"2933" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>836</SUB>> ]
-"2937" [label = <(&lt;operator&gt;.lessThan,pStart &lt; lStart)<SUB>837</SUB>> ]
-"2940" [label = <(&lt;operator&gt;.lessThan,firstLogical &lt; pStart)<SUB>837</SUB>> ]
-"2944" [label = <(&lt;operator&gt;.greaterThan,pStart &gt; lStart)<SUB>838</SUB>> ]
-"2947" [label = <(&lt;operator&gt;.greaterThan,firstLogical &gt; pStart)<SUB>838</SUB>> ]
-"2952" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBeLogical)<SUB>839</SUB>> ]
-"2953" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>839</SUB>> ]
-"2956" [label = <(FIELD_IDENTIFIER,SetCanBeLogical,SetCanBeLogical)<SUB>839</SUB>> ]
-"2784" [label = <(METHOD,UpdateCanBeLogical)<SUB>812</SUB>> ]
-"3068" [label = <(METHOD_RETURN,void)<SUB>812</SUB>> ]
-  "2797" -> "2802" 
-  "2800" -> "2806" 
-  "2803" -> "2810" 
-  "2808" -> "2813" 
-  "2799" -> "2797" 
-  "2802" -> "2800" 
+"2792" [label = <(&lt;operator&gt;.assignment,numPrimaries = NumPrimaries())<SUB>815</SUB>> ]
+"2795" [label = <(&lt;operator&gt;.assignment,numLogicals = NumLogicals())<SUB>816</SUB>> ]
+"2798" [label = <(&lt;operator&gt;.assignment,firstLogical = FirstLogicalLBA() - 1)<SUB>817</SUB>> ]
+"2803" [label = <(&lt;operator&gt;.assignment,lastLogical = LastLogicalLBA())<SUB>818</SUB>> ]
+"2794" [label = <(NumPrimaries,NumPrimaries())<SUB>815</SUB>> ]
+"2797" [label = <(NumLogicals,NumLogicals())<SUB>816</SUB>> ]
+"2800" [label = <(&lt;operator&gt;.subtraction,FirstLogicalLBA() - 1)<SUB>817</SUB>> ]
+"2805" [label = <(LastLogicalLBA,LastLogicalLBA())<SUB>818</SUB>> ]
+"2811" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>819</SUB>> ]
+"2814" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>819</SUB>> ]
+"2801" [label = <(FirstLogicalLBA,FirstLogicalLBA())<SUB>817</SUB>> ]
+"2808" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>819</SUB>> ]
+"2817" [label = <(&lt;operator&gt;.assignment,usedAsEBR = (SectorUsedAs(partitions[i].GetLastLBA()) == EBR))<SUB>820</SUB>> ]
+"2819" [label = <(&lt;operator&gt;.equals,SectorUsedAs(partitions[i].GetLastLBA()) == EBR)<SUB>820</SUB>> ]
+"2820" [label = <(SectorUsedAs,SectorUsedAs(partitions[i].GetLastLBA()))<SUB>820</SUB>> ]
+"2831" [label = <(SetCanBeLogical,partitions[i].SetCanBeLogical(0))<SUB>822</SUB>> ]
+"2838" [label = <(SetCanBePrimary,partitions[i].SetCanBePrimary(0))<SUB>823</SUB>> ]
+"2821" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>820</SUB>> ]
+"2832" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBeLogical)<SUB>822</SUB>> ]
+"2839" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBePrimary)<SUB>823</SUB>> ]
+"2822" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>820</SUB>> ]
+"2833" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>822</SUB>> ]
+"2836" [label = <(FIELD_IDENTIFIER,SetCanBeLogical,SetCanBeLogical)<SUB>822</SUB>> ]
+"2840" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>823</SUB>> ]
+"2843" [label = <(FIELD_IDENTIFIER,SetCanBePrimary,SetCanBePrimary)<SUB>823</SUB>> ]
+"2848" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLengthLBA() &gt; 0)<SUB>824</SUB>> ]
+"2823" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>820</SUB>> ]
+"2826" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>820</SUB>> ]
+"2849" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>824</SUB>> ]
+"2857" [label = <(&lt;operator&gt;.assignment,sectorBefore = SectorUsedAs(partitions[i].GetStartLBA() - 1))<SUB>826</SUB>> ]
+"2868" [label = <(&lt;operator&gt;.assignment,lStart = partitions[i].GetStartLBA())<SUB>827</SUB>> ]
+"2982" [label = <(SetCanBePrimary,partitions[i].SetCanBePrimary(1))<SUB>849</SUB>> ]
+"2850" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>824</SUB>> ]
+"2859" [label = <(SectorUsedAs,SectorUsedAs(partitions[i].GetStartLBA() - 1))<SUB>826</SUB>> ]
+"2870" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>827</SUB>> ]
+"2877" [label = <(&lt;operator&gt;.logicalAnd,(lastLogical &gt; 0) &amp;&amp;\012 ((sectorBefore == EBR) || (sectorBefore == NONE)))<SUB>828</SUB>> ]
+"2983" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBePrimary)<SUB>849</SUB>> ]
+"2990" [label = <(&lt;operator&gt;.logicalAnd,(numPrimaries &gt;= 4) &amp;&amp; (partitions[i].GetInclusion() != PRIMARY))<SUB>850</SUB>> ]
+"3036" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetStartLBA() &gt; (firstLogical + 1)) &amp;&amp;\012 (partitions[i].GetLastLBA() &lt; lastLogical))<SUB>856</SUB>> ]
+"2851" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>824</SUB>> ]
+"2854" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>824</SUB>> ]
+"2860" [label = <(&lt;operator&gt;.subtraction,partitions[i].GetStartLBA() - 1)<SUB>826</SUB>> ]
+"2871" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>827</SUB>> ]
+"2878" [label = <(&lt;operator&gt;.greaterThan,lastLogical &gt; 0)<SUB>828</SUB>> ]
+"2881" [label = <(&lt;operator&gt;.logicalOr,(sectorBefore == EBR) || (sectorBefore == NONE))<SUB>829</SUB>> ]
+"2889" [label = <(SetCanBeLogical,partitions[i].SetCanBeLogical(1))<SUB>832</SUB>> ]
+"2984" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>849</SUB>> ]
+"2987" [label = <(FIELD_IDENTIFIER,SetCanBePrimary,SetCanBePrimary)<SUB>849</SUB>> ]
+"2991" [label = <(&lt;operator&gt;.greaterEqualsThan,numPrimaries &gt;= 4)<SUB>850</SUB>> ]
+"2994" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetInclusion() != PRIMARY)<SUB>850</SUB>> ]
+"3003" [label = <(SetCanBePrimary,partitions[i].SetCanBePrimary(0))<SUB>851</SUB>> ]
+"3037" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; (firstLogical + 1))<SUB>856</SUB>> ]
+"3047" [label = <(&lt;operator&gt;.lessThan,partitions[i].GetLastLBA() &lt; lastLogical)<SUB>857</SUB>> ]
+"3056" [label = <(SetCanBePrimary,partitions[i].SetCanBePrimary(0))<SUB>858</SUB>> ]
+"2861" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>826</SUB>> ]
+"2872" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>827</SUB>> ]
+"2875" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>827</SUB>> ]
+"2882" [label = <(&lt;operator&gt;.equals,sectorBefore == EBR)<SUB>829</SUB>> ]
+"2885" [label = <(&lt;operator&gt;.equals,sectorBefore == NONE)<SUB>829</SUB>> ]
+"2890" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBeLogical)<SUB>832</SUB>> ]
+"2901" [label = <(&lt;operator&gt;.lessThan,j &lt; MAX_MBR_PARTS)<SUB>833</SUB>> ]
+"2904" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>833</SUB>> ]
+"2995" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>850</SUB>> ]
+"3004" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBePrimary)<SUB>851</SUB>> ]
+"3011" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == LOGICAL) &amp;&amp; (numLogicals == 1) &amp;&amp;\012 (numPrimaries == 4))<SUB>852</SUB>> ]
+"3038" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>856</SUB>> ]
+"3044" [label = <(&lt;operator&gt;.addition,firstLogical + 1)<SUB>856</SUB>> ]
+"3048" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>857</SUB>> ]
+"3057" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBePrimary)<SUB>858</SUB>> ]
+"2862" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>826</SUB>> ]
+"2891" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>832</SUB>> ]
+"2894" [label = <(FIELD_IDENTIFIER,SetCanBeLogical,SetCanBeLogical)<SUB>832</SUB>> ]
+"2898" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>833</SUB>> ]
+"2956" [label = <(&lt;operator&gt;.logicalAnd,(sectorBefore != EBR) &amp;&amp; (sectorBefore != NONE))<SUB>843</SUB>> ]
+"2996" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>850</SUB>> ]
+"3005" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>851</SUB>> ]
+"3008" [label = <(FIELD_IDENTIFIER,SetCanBePrimary,SetCanBePrimary)<SUB>851</SUB>> ]
+"3012" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == LOGICAL) &amp;&amp; (numLogicals == 1))<SUB>852</SUB>> ]
+"3024" [label = <(&lt;operator&gt;.equals,numPrimaries == 4)<SUB>853</SUB>> ]
+"3028" [label = <(SetCanBePrimary,partitions[i].SetCanBePrimary(1))<SUB>854</SUB>> ]
+"3039" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>856</SUB>> ]
+"3049" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>857</SUB>> ]
+"3058" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>858</SUB>> ]
+"3061" [label = <(FIELD_IDENTIFIER,SetCanBePrimary,SetCanBePrimary)<SUB>858</SUB>> ]
+"2863" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>826</SUB>> ]
+"2866" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>826</SUB>> ]
+"2908" [label = <(&lt;operator&gt;.logicalAnd,(i != j) &amp;&amp; (partitions[j].GetInclusion() == PRIMARY))<SUB>834</SUB>> ]
+"2957" [label = <(&lt;operator&gt;.notEquals,sectorBefore != EBR)<SUB>843</SUB>> ]
+"2960" [label = <(&lt;operator&gt;.notEquals,sectorBefore != NONE)<SUB>843</SUB>> ]
+"2964" [label = <(SetCanBeLogical,partitions[i].SetCanBeLogical(0))<SUB>844</SUB>> ]
+"2997" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>850</SUB>> ]
+"3000" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>850</SUB>> ]
+"3013" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>852</SUB>> ]
+"3021" [label = <(&lt;operator&gt;.equals,numLogicals == 1)<SUB>852</SUB>> ]
+"3029" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBePrimary)<SUB>854</SUB>> ]
+"3040" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>856</SUB>> ]
+"3043" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>856</SUB>> ]
+"3050" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>857</SUB>> ]
+"3053" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>857</SUB>> ]
+"2909" [label = <(&lt;operator&gt;.notEquals,i != j)<SUB>834</SUB>> ]
+"2912" [label = <(&lt;operator&gt;.equals,partitions[j].GetInclusion() == PRIMARY)<SUB>834</SUB>> ]
+"2921" [label = <(&lt;operator&gt;.assignment,pStart = partitions[j].GetStartLBA())<SUB>835</SUB>> ]
+"2965" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBeLogical)<SUB>844</SUB>> ]
+"2973" [label = <(SetCanBeLogical,partitions[i].SetCanBeLogical(lastLogical == 0))<SUB>846</SUB>> ]
+"3014" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>852</SUB>> ]
+"3030" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>854</SUB>> ]
+"3033" [label = <(FIELD_IDENTIFIER,SetCanBePrimary,SetCanBePrimary)<SUB>854</SUB>> ]
+"2913" [label = <(GetInclusion,partitions[j].GetInclusion())<SUB>834</SUB>> ]
+"2923" [label = <(GetStartLBA,partitions[j].GetStartLBA())<SUB>835</SUB>> ]
+"2930" [label = <(&lt;operator&gt;.logicalOr,((pStart &lt; lStart) &amp;&amp; (firstLogical &lt; pStart)) ||\012 ((pStart &gt; lStart) &amp;&amp; (firstLogical &gt; pStart)))<SUB>836</SUB>> ]
+"2966" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>844</SUB>> ]
+"2969" [label = <(FIELD_IDENTIFIER,SetCanBeLogical,SetCanBeLogical)<SUB>844</SUB>> ]
+"2974" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBeLogical)<SUB>846</SUB>> ]
+"2979" [label = <(&lt;operator&gt;.equals,lastLogical == 0)<SUB>846</SUB>> ]
+"3015" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>852</SUB>> ]
+"2914" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetInclusion)<SUB>834</SUB>> ]
+"2924" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetStartLBA)<SUB>835</SUB>> ]
+"2931" [label = <(&lt;operator&gt;.logicalAnd,(pStart &lt; lStart) &amp;&amp; (firstLogical &lt; pStart))<SUB>836</SUB>> ]
+"2938" [label = <(&lt;operator&gt;.logicalAnd,(pStart &gt; lStart) &amp;&amp; (firstLogical &gt; pStart))<SUB>837</SUB>> ]
+"2946" [label = <(SetCanBeLogical,partitions[i].SetCanBeLogical(0))<SUB>838</SUB>> ]
+"2975" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>846</SUB>> ]
+"2978" [label = <(FIELD_IDENTIFIER,SetCanBeLogical,SetCanBeLogical)<SUB>846</SUB>> ]
+"3016" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>852</SUB>> ]
+"3019" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>852</SUB>> ]
+"2915" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>834</SUB>> ]
+"2918" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>834</SUB>> ]
+"2925" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>835</SUB>> ]
+"2928" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>835</SUB>> ]
+"2932" [label = <(&lt;operator&gt;.lessThan,pStart &lt; lStart)<SUB>836</SUB>> ]
+"2935" [label = <(&lt;operator&gt;.lessThan,firstLogical &lt; pStart)<SUB>836</SUB>> ]
+"2939" [label = <(&lt;operator&gt;.greaterThan,pStart &gt; lStart)<SUB>837</SUB>> ]
+"2942" [label = <(&lt;operator&gt;.greaterThan,firstLogical &gt; pStart)<SUB>837</SUB>> ]
+"2947" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetCanBeLogical)<SUB>838</SUB>> ]
+"2948" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>838</SUB>> ]
+"2951" [label = <(FIELD_IDENTIFIER,SetCanBeLogical,SetCanBeLogical)<SUB>838</SUB>> ]
+"2779" [label = <(METHOD,UpdateCanBeLogical)<SUB>811</SUB>> ]
+"3063" [label = <(METHOD_RETURN,void)<SUB>811</SUB>> ]
+  "2792" -> "2797" 
+  "2795" -> "2801" 
+  "2798" -> "2805" 
+  "2803" -> "2808" 
+  "2794" -> "2792" 
+  "2797" -> "2795" 
+  "2800" -> "2798" 
   "2805" -> "2803" 
-  "2810" -> "2808" 
-  "2816" -> "3068" 
-  "2816" -> "2828" 
-  "2819" -> "2816" 
-  "2806" -> "2805" 
-  "2813" -> "2816" 
-  "2822" -> "2838" 
-  "2822" -> "2856" 
-  "2824" -> "2822" 
-  "2825" -> "2824" 
-  "2836" -> "2845" 
-  "2843" -> "2819" 
-  "2826" -> "2825" 
-  "2837" -> "2836" 
-  "2844" -> "2843" 
-  "2827" -> "2826" 
-  "2838" -> "2841" 
-  "2841" -> "2837" 
-  "2845" -> "2848" 
-  "2848" -> "2844" 
-  "2853" -> "2868" 
-  "2853" -> "2819" 
-  "2828" -> "2831" 
-  "2831" -> "2827" 
-  "2854" -> "2853" 
-  "2862" -> "2877" 
-  "2873" -> "2883" 
-  "2987" -> "2996" 
-  "2855" -> "2854" 
-  "2864" -> "2862" 
-  "2875" -> "2873" 
-  "2882" -> "2896" 
-  "2882" -> "2962" 
-  "2988" -> "2987" 
-  "2995" -> "3010" 
-  "2995" -> "3045" 
-  "3041" -> "3063" 
-  "3041" -> "2819" 
-  "2856" -> "2859" 
-  "2859" -> "2855" 
-  "2865" -> "2864" 
-  "2876" -> "2875" 
-  "2883" -> "2882" 
-  "2883" -> "2887" 
-  "2886" -> "2882" 
-  "2894" -> "2903" 
-  "2989" -> "2992" 
-  "2992" -> "2988" 
+  "2811" -> "3063" 
+  "2811" -> "2823" 
+  "2814" -> "2811" 
+  "2801" -> "2800" 
+  "2808" -> "2811" 
+  "2817" -> "2833" 
+  "2817" -> "2851" 
+  "2819" -> "2817" 
+  "2820" -> "2819" 
+  "2831" -> "2840" 
+  "2838" -> "2814" 
+  "2821" -> "2820" 
+  "2832" -> "2831" 
+  "2839" -> "2838" 
+  "2822" -> "2821" 
+  "2833" -> "2836" 
+  "2836" -> "2832" 
+  "2840" -> "2843" 
+  "2843" -> "2839" 
+  "2848" -> "2863" 
+  "2848" -> "2814" 
+  "2823" -> "2826" 
+  "2826" -> "2822" 
+  "2849" -> "2848" 
+  "2857" -> "2872" 
+  "2868" -> "2878" 
+  "2982" -> "2991" 
+  "2850" -> "2849" 
+  "2859" -> "2857" 
+  "2870" -> "2868" 
+  "2877" -> "2891" 
+  "2877" -> "2957" 
+  "2983" -> "2982" 
+  "2990" -> "3005" 
+  "2990" -> "3040" 
+  "3036" -> "3058" 
+  "3036" -> "2814" 
+  "2851" -> "2854" 
+  "2854" -> "2850" 
+  "2860" -> "2859" 
+  "2871" -> "2870" 
+  "2878" -> "2877" 
+  "2878" -> "2882" 
+  "2881" -> "2877" 
+  "2889" -> "2898" 
+  "2984" -> "2987" 
+  "2987" -> "2983" 
+  "2991" -> "2990" 
+  "2991" -> "2997" 
+  "2994" -> "2990" 
+  "3003" -> "3016" 
+  "3037" -> "3036" 
+  "3037" -> "3050" 
+  "3047" -> "3036" 
+  "3056" -> "2814" 
+  "2861" -> "2860" 
+  "2872" -> "2875" 
+  "2875" -> "2871" 
+  "2882" -> "2881" 
+  "2882" -> "2885" 
+  "2885" -> "2881" 
+  "2890" -> "2889" 
+  "2901" -> "2909" 
+  "2901" -> "2984" 
+  "2904" -> "2901" 
+  "2995" -> "2994" 
+  "3004" -> "3003" 
+  "3011" -> "3030" 
+  "3011" -> "3040" 
+  "3038" -> "3044" 
+  "3044" -> "3037" 
+  "3048" -> "3047" 
+  "3057" -> "3056" 
+  "2862" -> "2861" 
+  "2891" -> "2894" 
+  "2894" -> "2890" 
+  "2898" -> "2901" 
+  "2956" -> "2966" 
+  "2956" -> "2975" 
   "2996" -> "2995" 
-  "2996" -> "3002" 
-  "2999" -> "2995" 
-  "3008" -> "3021" 
-  "3042" -> "3041" 
-  "3042" -> "3055" 
-  "3052" -> "3041" 
-  "3061" -> "2819" 
-  "2866" -> "2865" 
-  "2877" -> "2880" 
-  "2880" -> "2876" 
-  "2887" -> "2886" 
-  "2887" -> "2890" 
-  "2890" -> "2886" 
-  "2895" -> "2894" 
-  "2906" -> "2914" 
-  "2906" -> "2989" 
-  "2909" -> "2906" 
-  "3000" -> "2999" 
-  "3009" -> "3008" 
-  "3016" -> "3035" 
-  "3016" -> "3045" 
-  "3043" -> "3049" 
-  "3049" -> "3042" 
-  "3053" -> "3052" 
-  "3062" -> "3061" 
-  "2867" -> "2866" 
-  "2896" -> "2899" 
-  "2899" -> "2895" 
-  "2903" -> "2906" 
-  "2961" -> "2971" 
-  "2961" -> "2980" 
-  "3001" -> "3000" 
-  "3010" -> "3013" 
-  "3013" -> "3009" 
-  "3017" -> "3016" 
-  "3017" -> "3029" 
-  "3029" -> "3016" 
-  "3033" -> "3045" 
-  "3044" -> "3043" 
-  "3054" -> "3053" 
-  "3063" -> "3066" 
-  "3066" -> "3062" 
-  "2868" -> "2871" 
-  "2871" -> "2867" 
-  "2913" -> "2930" 
-  "2913" -> "2909" 
-  "2962" -> "2961" 
-  "2962" -> "2965" 
-  "2965" -> "2961" 
-  "2969" -> "2989" 
-  "3002" -> "3005" 
-  "3005" -> "3001" 
-  "3018" -> "3017" 
-  "3018" -> "3026" 
-  "3026" -> "3017" 
-  "3034" -> "3033" 
-  "3045" -> "3048" 
-  "3048" -> "3044" 
-  "3055" -> "3058" 
-  "3058" -> "3054" 
+  "3005" -> "3008" 
+  "3008" -> "3004" 
+  "3012" -> "3011" 
+  "3012" -> "3024" 
+  "3024" -> "3011" 
+  "3028" -> "3040" 
+  "3039" -> "3038" 
+  "3049" -> "3048" 
+  "3058" -> "3061" 
+  "3061" -> "3057" 
+  "2863" -> "2866" 
+  "2866" -> "2862" 
+  "2908" -> "2925" 
+  "2908" -> "2904" 
+  "2957" -> "2956" 
+  "2957" -> "2960" 
+  "2960" -> "2956" 
+  "2964" -> "2984" 
+  "2997" -> "3000" 
+  "3000" -> "2996" 
+  "3013" -> "3012" 
+  "3013" -> "3021" 
+  "3021" -> "3012" 
+  "3029" -> "3028" 
+  "3040" -> "3043" 
+  "3043" -> "3039" 
+  "3050" -> "3053" 
+  "3053" -> "3049" 
+  "2909" -> "2908" 
+  "2909" -> "2915" 
+  "2912" -> "2908" 
+  "2921" -> "2932" 
+  "2965" -> "2964" 
+  "2973" -> "2984" 
+  "3014" -> "3013" 
+  "3030" -> "3033" 
+  "3033" -> "3029" 
+  "2913" -> "2912" 
+  "2923" -> "2921" 
+  "2930" -> "2948" 
+  "2930" -> "2904" 
+  "2966" -> "2969" 
+  "2969" -> "2965" 
+  "2974" -> "2979" 
+  "2979" -> "2973" 
+  "3015" -> "3014" 
   "2914" -> "2913" 
-  "2914" -> "2920" 
-  "2917" -> "2913" 
-  "2926" -> "2937" 
-  "2970" -> "2969" 
-  "2978" -> "2989" 
-  "3019" -> "3018" 
-  "3035" -> "3038" 
-  "3038" -> "3034" 
-  "2918" -> "2917" 
-  "2928" -> "2926" 
-  "2935" -> "2953" 
-  "2935" -> "2909" 
-  "2971" -> "2974" 
-  "2974" -> "2970" 
-  "2979" -> "2984" 
-  "2984" -> "2978" 
-  "3020" -> "3019" 
-  "2919" -> "2918" 
-  "2929" -> "2928" 
-  "2936" -> "2935" 
-  "2936" -> "2944" 
-  "2943" -> "2935" 
-  "2951" -> "2909" 
-  "2980" -> "2983" 
-  "2983" -> "2979" 
-  "3021" -> "3024" 
-  "3024" -> "3020" 
-  "2920" -> "2923" 
-  "2923" -> "2919" 
-  "2930" -> "2933" 
-  "2933" -> "2929" 
-  "2937" -> "2936" 
-  "2937" -> "2940" 
-  "2940" -> "2936" 
-  "2944" -> "2943" 
-  "2944" -> "2947" 
-  "2947" -> "2943" 
-  "2952" -> "2951" 
-  "2953" -> "2956" 
-  "2956" -> "2952" 
-  "2784" -> "2799" 
+  "2924" -> "2923" 
+  "2931" -> "2930" 
+  "2931" -> "2939" 
+  "2938" -> "2930" 
+  "2946" -> "2904" 
+  "2975" -> "2978" 
+  "2978" -> "2974" 
+  "3016" -> "3019" 
+  "3019" -> "3015" 
+  "2915" -> "2918" 
+  "2918" -> "2914" 
+  "2925" -> "2928" 
+  "2928" -> "2924" 
+  "2932" -> "2931" 
+  "2932" -> "2935" 
+  "2935" -> "2931" 
+  "2939" -> "2938" 
+  "2939" -> "2942" 
+  "2942" -> "2938" 
+  "2947" -> "2946" 
+  "2948" -> "2951" 
+  "2951" -> "2947" 
+  "2779" -> "2794" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/26-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/26-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/26-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/26-cfg.dot	2023-06-07 19:31:31.587407268 +0330
@@ -1,50 +1,50 @@
 digraph "FirstLogicalLBA" {  
-"3075" [label = <(&lt;operator&gt;.assignment,firstFound = UINT32_MAX)<SUB>869</SUB>> ]
-"3116" [label = <(RETURN,return firstFound;,return firstFound;)<SUB>877</SUB>> ]
-"3083" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>871</SUB>> ]
-"3086" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>871</SUB>> ]
-"3080" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>871</SUB>> ]
-"3090" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == LOGICAL) &amp;&amp;\012 (partitions[i].GetStartLBA() &lt; firstFound))<SUB>872</SUB>> ]
-"3091" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>872</SUB>> ]
-"3099" [label = <(&lt;operator&gt;.lessThan,partitions[i].GetStartLBA() &lt; firstFound)<SUB>873</SUB>> ]
-"3108" [label = <(&lt;operator&gt;.assignment,firstFound = partitions[i].GetStartLBA())<SUB>874</SUB>> ]
-"3092" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>872</SUB>> ]
-"3100" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>873</SUB>> ]
-"3110" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>874</SUB>> ]
-"3093" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>872</SUB>> ]
-"3101" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>873</SUB>> ]
-"3111" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>874</SUB>> ]
-"3094" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>872</SUB>> ]
-"3097" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>872</SUB>> ]
-"3102" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>873</SUB>> ]
-"3105" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>873</SUB>> ]
-"3112" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>874</SUB>> ]
-"3115" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>874</SUB>> ]
-"3070" [label = <(METHOD,FirstLogicalLBA)<SUB>867</SUB>> ]
-"3118" [label = <(METHOD_RETURN,uint64_t)<SUB>867</SUB>> ]
-  "3075" -> "3080" 
-  "3116" -> "3118" 
-  "3083" -> "3094" 
-  "3083" -> "3116" 
-  "3086" -> "3083" 
-  "3080" -> "3083" 
-  "3090" -> "3112" 
-  "3090" -> "3086" 
-  "3091" -> "3090" 
-  "3091" -> "3102" 
-  "3099" -> "3090" 
-  "3108" -> "3086" 
-  "3092" -> "3091" 
-  "3100" -> "3099" 
-  "3110" -> "3108" 
-  "3093" -> "3092" 
-  "3101" -> "3100" 
-  "3111" -> "3110" 
-  "3094" -> "3097" 
-  "3097" -> "3093" 
-  "3102" -> "3105" 
-  "3105" -> "3101" 
-  "3112" -> "3115" 
-  "3115" -> "3111" 
+"3070" [label = <(&lt;operator&gt;.assignment,firstFound = UINT32_MAX)<SUB>868</SUB>> ]
+"3111" [label = <(RETURN,return firstFound;,return firstFound;)<SUB>876</SUB>> ]
+"3078" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>870</SUB>> ]
+"3081" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>870</SUB>> ]
+"3075" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>870</SUB>> ]
+"3085" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == LOGICAL) &amp;&amp;\012 (partitions[i].GetStartLBA() &lt; firstFound))<SUB>871</SUB>> ]
+"3086" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>871</SUB>> ]
+"3094" [label = <(&lt;operator&gt;.lessThan,partitions[i].GetStartLBA() &lt; firstFound)<SUB>872</SUB>> ]
+"3103" [label = <(&lt;operator&gt;.assignment,firstFound = partitions[i].GetStartLBA())<SUB>873</SUB>> ]
+"3087" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>871</SUB>> ]
+"3095" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>872</SUB>> ]
+"3105" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>873</SUB>> ]
+"3088" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>871</SUB>> ]
+"3096" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>872</SUB>> ]
+"3106" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>873</SUB>> ]
+"3089" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>871</SUB>> ]
+"3092" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>871</SUB>> ]
+"3097" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>872</SUB>> ]
+"3100" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>872</SUB>> ]
+"3107" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>873</SUB>> ]
+"3110" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>873</SUB>> ]
+"3065" [label = <(METHOD,FirstLogicalLBA)<SUB>866</SUB>> ]
+"3113" [label = <(METHOD_RETURN,uint64_t)<SUB>866</SUB>> ]
   "3070" -> "3075" 
+  "3111" -> "3113" 
+  "3078" -> "3089" 
+  "3078" -> "3111" 
+  "3081" -> "3078" 
+  "3075" -> "3078" 
+  "3085" -> "3107" 
+  "3085" -> "3081" 
+  "3086" -> "3085" 
+  "3086" -> "3097" 
+  "3094" -> "3085" 
+  "3103" -> "3081" 
+  "3087" -> "3086" 
+  "3095" -> "3094" 
+  "3105" -> "3103" 
+  "3088" -> "3087" 
+  "3096" -> "3095" 
+  "3106" -> "3105" 
+  "3089" -> "3092" 
+  "3092" -> "3088" 
+  "3097" -> "3100" 
+  "3100" -> "3096" 
+  "3107" -> "3110" 
+  "3110" -> "3106" 
+  "3065" -> "3070" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/27-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/27-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/27-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/27-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,50 +1,50 @@
 digraph "LastLogicalLBA" {  
-"3125" [label = <(&lt;operator&gt;.assignment,lastFound = 0)<SUB>884</SUB>> ]
-"3166" [label = <(RETURN,return lastFound;,return lastFound;)<SUB>891</SUB>> ]
-"3133" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>886</SUB>> ]
-"3136" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>886</SUB>> ]
-"3130" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>886</SUB>> ]
-"3140" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == LOGICAL) &amp;&amp;\012 (partitions[i].GetLastLBA() &gt; lastFound))<SUB>887</SUB>> ]
-"3141" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>887</SUB>> ]
-"3149" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLastLBA() &gt; lastFound)<SUB>888</SUB>> ]
-"3158" [label = <(&lt;operator&gt;.assignment,lastFound = partitions[i].GetLastLBA())<SUB>889</SUB>> ]
-"3142" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>887</SUB>> ]
-"3150" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>888</SUB>> ]
-"3160" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>889</SUB>> ]
-"3143" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>887</SUB>> ]
-"3151" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>888</SUB>> ]
-"3161" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>889</SUB>> ]
-"3144" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>887</SUB>> ]
-"3147" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>887</SUB>> ]
-"3152" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>888</SUB>> ]
-"3155" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>888</SUB>> ]
-"3162" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>889</SUB>> ]
-"3165" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>889</SUB>> ]
-"3120" [label = <(METHOD,LastLogicalLBA)<SUB>882</SUB>> ]
-"3168" [label = <(METHOD_RETURN,uint64_t)<SUB>882</SUB>> ]
-  "3125" -> "3130" 
-  "3166" -> "3168" 
-  "3133" -> "3144" 
-  "3133" -> "3166" 
-  "3136" -> "3133" 
-  "3130" -> "3133" 
-  "3140" -> "3162" 
-  "3140" -> "3136" 
-  "3141" -> "3140" 
-  "3141" -> "3152" 
-  "3149" -> "3140" 
-  "3158" -> "3136" 
-  "3142" -> "3141" 
-  "3150" -> "3149" 
-  "3160" -> "3158" 
-  "3143" -> "3142" 
-  "3151" -> "3150" 
-  "3161" -> "3160" 
-  "3144" -> "3147" 
-  "3147" -> "3143" 
-  "3152" -> "3155" 
-  "3155" -> "3151" 
-  "3162" -> "3165" 
-  "3165" -> "3161" 
+"3120" [label = <(&lt;operator&gt;.assignment,lastFound = 0)<SUB>883</SUB>> ]
+"3161" [label = <(RETURN,return lastFound;,return lastFound;)<SUB>890</SUB>> ]
+"3128" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>885</SUB>> ]
+"3131" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>885</SUB>> ]
+"3125" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>885</SUB>> ]
+"3135" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == LOGICAL) &amp;&amp;\012 (partitions[i].GetLastLBA() &gt; lastFound))<SUB>886</SUB>> ]
+"3136" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>886</SUB>> ]
+"3144" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLastLBA() &gt; lastFound)<SUB>887</SUB>> ]
+"3153" [label = <(&lt;operator&gt;.assignment,lastFound = partitions[i].GetLastLBA())<SUB>888</SUB>> ]
+"3137" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>886</SUB>> ]
+"3145" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>887</SUB>> ]
+"3155" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>888</SUB>> ]
+"3138" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>886</SUB>> ]
+"3146" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>887</SUB>> ]
+"3156" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>888</SUB>> ]
+"3139" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>886</SUB>> ]
+"3142" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>886</SUB>> ]
+"3147" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>887</SUB>> ]
+"3150" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>887</SUB>> ]
+"3157" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>888</SUB>> ]
+"3160" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>888</SUB>> ]
+"3115" [label = <(METHOD,LastLogicalLBA)<SUB>881</SUB>> ]
+"3163" [label = <(METHOD_RETURN,uint64_t)<SUB>881</SUB>> ]
   "3120" -> "3125" 
+  "3161" -> "3163" 
+  "3128" -> "3139" 
+  "3128" -> "3161" 
+  "3131" -> "3128" 
+  "3125" -> "3128" 
+  "3135" -> "3157" 
+  "3135" -> "3131" 
+  "3136" -> "3135" 
+  "3136" -> "3147" 
+  "3144" -> "3135" 
+  "3153" -> "3131" 
+  "3137" -> "3136" 
+  "3145" -> "3144" 
+  "3155" -> "3153" 
+  "3138" -> "3137" 
+  "3146" -> "3145" 
+  "3156" -> "3155" 
+  "3139" -> "3142" 
+  "3142" -> "3138" 
+  "3147" -> "3150" 
+  "3150" -> "3146" 
+  "3157" -> "3160" 
+  "3160" -> "3156" 
+  "3115" -> "3120" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/28-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/28-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/28-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/28-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,70 +1,70 @@
 digraph "AreLogicalsContiguous" {  
-"3175" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>898</SUB>> ]
-"3178" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>898</SUB>> ]
-"3183" [label = <(&lt;operator&gt;.assignment,firstLogical = FirstLogicalLBA() - 1)<SUB>901</SUB>> ]
-"3188" [label = <(&lt;operator&gt;.assignment,lastLogical = LastLogicalLBA())<SUB>902</SUB>> ]
-"3236" [label = <(RETURN,return allOK;,return allOK;)<SUB>913</SUB>> ]
-"3185" [label = <(&lt;operator&gt;.subtraction,FirstLogicalLBA() - 1)<SUB>901</SUB>> ]
-"3190" [label = <(LastLogicalLBA,LastLogicalLBA())<SUB>902</SUB>> ]
-"3192" [label = <(&lt;operator&gt;.greaterThan,lastLogical &gt; 0)<SUB>903</SUB>> ]
-"3186" [label = <(FirstLogicalLBA,FirstLogicalLBA())<SUB>901</SUB>> ]
-"3231" [label = <(&lt;operator&gt;.logicalAnd,(i &lt; MAX_MBR_PARTS) &amp;&amp; allOK)<SUB>911</SUB>> ]
-"3229" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>910</SUB>> ]
-"3232" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>911</SUB>> ]
-"3199" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == PRIMARY) &amp;&amp;\012 (partitions[i].GetStartLBA() &gt;= firstLogical) &amp;&amp;\012 (partitions[i].GetStartLBA() &lt;= lastLogical))<SUB>905</SUB>> ]
-"3200" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == PRIMARY) &amp;&amp;\012 (partitions[i].GetStartLBA() &gt;= firstLogical))<SUB>905</SUB>> ]
-"3217" [label = <(&lt;operator&gt;.lessEqualsThan,partitions[i].GetStartLBA() &lt;= lastLogical)<SUB>907</SUB>> ]
-"3226" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>908</SUB>> ]
-"3201" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>905</SUB>> ]
-"3209" [label = <(&lt;operator&gt;.greaterEqualsThan,partitions[i].GetStartLBA() &gt;= firstLogical)<SUB>906</SUB>> ]
-"3218" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>907</SUB>> ]
-"3202" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>905</SUB>> ]
-"3210" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>906</SUB>> ]
-"3219" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>907</SUB>> ]
-"3203" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>905</SUB>> ]
-"3211" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>906</SUB>> ]
-"3220" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>907</SUB>> ]
-"3223" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>907</SUB>> ]
-"3204" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>905</SUB>> ]
-"3207" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>905</SUB>> ]
-"3212" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>906</SUB>> ]
-"3215" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>906</SUB>> ]
-"3170" [label = <(METHOD,AreLogicalsContiguous)<SUB>897</SUB>> ]
-"3238" [label = <(METHOD_RETURN,int)<SUB>897</SUB>> ]
-  "3175" -> "3178" 
-  "3178" -> "3186" 
-  "3183" -> "3190" 
-  "3188" -> "3192" 
-  "3236" -> "3238" 
+"3170" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>897</SUB>> ]
+"3173" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>897</SUB>> ]
+"3178" [label = <(&lt;operator&gt;.assignment,firstLogical = FirstLogicalLBA() - 1)<SUB>900</SUB>> ]
+"3183" [label = <(&lt;operator&gt;.assignment,lastLogical = LastLogicalLBA())<SUB>901</SUB>> ]
+"3231" [label = <(RETURN,return allOK;,return allOK;)<SUB>912</SUB>> ]
+"3180" [label = <(&lt;operator&gt;.subtraction,FirstLogicalLBA() - 1)<SUB>900</SUB>> ]
+"3185" [label = <(LastLogicalLBA,LastLogicalLBA())<SUB>901</SUB>> ]
+"3187" [label = <(&lt;operator&gt;.greaterThan,lastLogical &gt; 0)<SUB>902</SUB>> ]
+"3181" [label = <(FirstLogicalLBA,FirstLogicalLBA())<SUB>900</SUB>> ]
+"3226" [label = <(&lt;operator&gt;.logicalAnd,(i &lt; MAX_MBR_PARTS) &amp;&amp; allOK)<SUB>910</SUB>> ]
+"3224" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>909</SUB>> ]
+"3227" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>910</SUB>> ]
+"3194" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == PRIMARY) &amp;&amp;\012 (partitions[i].GetStartLBA() &gt;= firstLogical) &amp;&amp;\012 (partitions[i].GetStartLBA() &lt;= lastLogical))<SUB>904</SUB>> ]
+"3195" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == PRIMARY) &amp;&amp;\012 (partitions[i].GetStartLBA() &gt;= firstLogical))<SUB>904</SUB>> ]
+"3212" [label = <(&lt;operator&gt;.lessEqualsThan,partitions[i].GetStartLBA() &lt;= lastLogical)<SUB>906</SUB>> ]
+"3221" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>907</SUB>> ]
+"3196" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>904</SUB>> ]
+"3204" [label = <(&lt;operator&gt;.greaterEqualsThan,partitions[i].GetStartLBA() &gt;= firstLogical)<SUB>905</SUB>> ]
+"3213" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>906</SUB>> ]
+"3197" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>904</SUB>> ]
+"3205" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>905</SUB>> ]
+"3214" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>906</SUB>> ]
+"3198" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>904</SUB>> ]
+"3206" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>905</SUB>> ]
+"3215" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>906</SUB>> ]
+"3218" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>906</SUB>> ]
+"3199" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>904</SUB>> ]
+"3202" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>904</SUB>> ]
+"3207" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>905</SUB>> ]
+"3210" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>905</SUB>> ]
+"3165" [label = <(METHOD,AreLogicalsContiguous)<SUB>896</SUB>> ]
+"3233" [label = <(METHOD_RETURN,int)<SUB>896</SUB>> ]
+  "3170" -> "3173" 
+  "3173" -> "3181" 
+  "3178" -> "3185" 
+  "3183" -> "3187" 
+  "3231" -> "3233" 
+  "3180" -> "3178" 
   "3185" -> "3183" 
-  "3190" -> "3188" 
-  "3192" -> "3204" 
-  "3192" -> "3236" 
-  "3186" -> "3185" 
-  "3231" -> "3204" 
-  "3231" -> "3236" 
-  "3229" -> "3232" 
-  "3232" -> "3231" 
-  "3199" -> "3226" 
-  "3199" -> "3229" 
-  "3200" -> "3199" 
-  "3200" -> "3220" 
-  "3217" -> "3199" 
-  "3226" -> "3229" 
-  "3201" -> "3200" 
-  "3201" -> "3212" 
-  "3209" -> "3200" 
-  "3218" -> "3217" 
-  "3202" -> "3201" 
-  "3210" -> "3209" 
-  "3219" -> "3218" 
-  "3203" -> "3202" 
-  "3211" -> "3210" 
-  "3220" -> "3223" 
-  "3223" -> "3219" 
-  "3204" -> "3207" 
-  "3207" -> "3203" 
-  "3212" -> "3215" 
-  "3215" -> "3211" 
-  "3170" -> "3175" 
+  "3187" -> "3199" 
+  "3187" -> "3231" 
+  "3181" -> "3180" 
+  "3226" -> "3199" 
+  "3226" -> "3231" 
+  "3224" -> "3227" 
+  "3227" -> "3226" 
+  "3194" -> "3221" 
+  "3194" -> "3224" 
+  "3195" -> "3194" 
+  "3195" -> "3215" 
+  "3212" -> "3194" 
+  "3221" -> "3224" 
+  "3196" -> "3195" 
+  "3196" -> "3207" 
+  "3204" -> "3195" 
+  "3213" -> "3212" 
+  "3197" -> "3196" 
+  "3205" -> "3204" 
+  "3214" -> "3213" 
+  "3198" -> "3197" 
+  "3206" -> "3205" 
+  "3215" -> "3218" 
+  "3218" -> "3214" 
+  "3199" -> "3202" 
+  "3202" -> "3198" 
+  "3207" -> "3210" 
+  "3210" -> "3206" 
+  "3165" -> "3170" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/29-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/29-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/29-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/29-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,42 +1,42 @@
 digraph "DoTheyFit" {  
-"3245" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>919</SUB>> ]
-"3281" [label = <(RETURN,return allOK;,return allOK;)<SUB>926</SUB>> ]
-"3253" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>921</SUB>> ]
-"3256" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>921</SUB>> ]
-"3250" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>921</SUB>> ]
-"3260" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetStartLBA() &gt; diskSize) || (partitions[i].GetLastLBA() &gt; diskSize))<SUB>922</SUB>> ]
-"3261" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; diskSize)<SUB>922</SUB>> ]
-"3269" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLastLBA() &gt; diskSize)<SUB>922</SUB>> ]
-"3278" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>923</SUB>> ]
-"3262" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>922</SUB>> ]
-"3270" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>922</SUB>> ]
-"3263" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>922</SUB>> ]
-"3271" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>922</SUB>> ]
-"3264" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>922</SUB>> ]
-"3267" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>922</SUB>> ]
-"3272" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>922</SUB>> ]
-"3275" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>922</SUB>> ]
-"3240" [label = <(METHOD,DoTheyFit)<SUB>918</SUB>> ]
-"3283" [label = <(METHOD_RETURN,int)<SUB>918</SUB>> ]
-  "3245" -> "3250" 
-  "3281" -> "3283" 
-  "3253" -> "3264" 
-  "3253" -> "3281" 
-  "3256" -> "3253" 
-  "3250" -> "3253" 
-  "3260" -> "3278" 
-  "3260" -> "3256" 
-  "3261" -> "3260" 
-  "3261" -> "3272" 
-  "3269" -> "3260" 
-  "3278" -> "3256" 
-  "3262" -> "3261" 
-  "3270" -> "3269" 
-  "3263" -> "3262" 
-  "3271" -> "3270" 
-  "3264" -> "3267" 
-  "3267" -> "3263" 
-  "3272" -> "3275" 
-  "3275" -> "3271" 
+"3240" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>918</SUB>> ]
+"3276" [label = <(RETURN,return allOK;,return allOK;)<SUB>925</SUB>> ]
+"3248" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>920</SUB>> ]
+"3251" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>920</SUB>> ]
+"3245" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>920</SUB>> ]
+"3255" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetStartLBA() &gt; diskSize) || (partitions[i].GetLastLBA() &gt; diskSize))<SUB>921</SUB>> ]
+"3256" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; diskSize)<SUB>921</SUB>> ]
+"3264" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLastLBA() &gt; diskSize)<SUB>921</SUB>> ]
+"3273" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>922</SUB>> ]
+"3257" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>921</SUB>> ]
+"3265" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>921</SUB>> ]
+"3258" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>921</SUB>> ]
+"3266" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>921</SUB>> ]
+"3259" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>921</SUB>> ]
+"3262" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>921</SUB>> ]
+"3267" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>921</SUB>> ]
+"3270" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>921</SUB>> ]
+"3235" [label = <(METHOD,DoTheyFit)<SUB>917</SUB>> ]
+"3278" [label = <(METHOD_RETURN,int)<SUB>917</SUB>> ]
   "3240" -> "3245" 
+  "3276" -> "3278" 
+  "3248" -> "3259" 
+  "3248" -> "3276" 
+  "3251" -> "3248" 
+  "3245" -> "3248" 
+  "3255" -> "3273" 
+  "3255" -> "3251" 
+  "3256" -> "3255" 
+  "3256" -> "3267" 
+  "3264" -> "3255" 
+  "3273" -> "3251" 
+  "3257" -> "3256" 
+  "3265" -> "3264" 
+  "3258" -> "3257" 
+  "3266" -> "3265" 
+  "3259" -> "3262" 
+  "3262" -> "3258" 
+  "3267" -> "3270" 
+  "3270" -> "3266" 
+  "3235" -> "3240" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/30-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/30-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/30-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/30-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,62 +1,62 @@
 digraph "SpaceBeforeAllLogicals" {  
-"3290" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>933</SUB>> ]
-"3293" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>933</SUB>> ]
-"3339" [label = <(RETURN,return allOK;,return allOK;)<SUB>941</SUB>> ]
-"3334" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; (i &lt; MAX_MBR_PARTS))<SUB>940</SUB>> ]
-"3332" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>939</SUB>> ]
-"3336" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>940</SUB>> ]
-"3299" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetStartLBA() &gt; 0) &amp;&amp; (partitions[i].GetInclusion() == LOGICAL))<SUB>936</SUB>> ]
-"3300" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; 0)<SUB>936</SUB>> ]
-"3308" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>936</SUB>> ]
-"3317" [label = <(&lt;operator&gt;.assignment,allOK = allOK &amp;&amp; (SectorUsedAs(partitions[i].GetStartLBA() - 1) == EBR))<SUB>937</SUB>> ]
-"3301" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>936</SUB>> ]
-"3309" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>936</SUB>> ]
-"3319" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; (SectorUsedAs(partitions[i].GetStartLBA() - 1) == EBR))<SUB>937</SUB>> ]
-"3302" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>936</SUB>> ]
-"3310" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>936</SUB>> ]
-"3321" [label = <(&lt;operator&gt;.equals,SectorUsedAs(partitions[i].GetStartLBA() - 1) == EBR)<SUB>937</SUB>> ]
-"3303" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>936</SUB>> ]
-"3306" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>936</SUB>> ]
-"3311" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>936</SUB>> ]
-"3314" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>936</SUB>> ]
-"3322" [label = <(SectorUsedAs,SectorUsedAs(partitions[i].GetStartLBA() - 1))<SUB>937</SUB>> ]
-"3323" [label = <(&lt;operator&gt;.subtraction,partitions[i].GetStartLBA() - 1)<SUB>937</SUB>> ]
-"3324" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>937</SUB>> ]
-"3325" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>937</SUB>> ]
-"3326" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>937</SUB>> ]
-"3329" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>937</SUB>> ]
-"3285" [label = <(METHOD,SpaceBeforeAllLogicals)<SUB>932</SUB>> ]
-"3341" [label = <(METHOD_RETURN,int)<SUB>932</SUB>> ]
-  "3290" -> "3293" 
-  "3293" -> "3303" 
-  "3339" -> "3341" 
-  "3334" -> "3303" 
-  "3334" -> "3339" 
-  "3332" -> "3334" 
-  "3332" -> "3336" 
-  "3336" -> "3334" 
-  "3299" -> "3319" 
-  "3299" -> "3326" 
-  "3299" -> "3332" 
-  "3300" -> "3299" 
-  "3300" -> "3311" 
-  "3308" -> "3299" 
-  "3317" -> "3332" 
-  "3301" -> "3300" 
-  "3309" -> "3308" 
-  "3319" -> "3317" 
-  "3302" -> "3301" 
-  "3310" -> "3309" 
-  "3321" -> "3319" 
-  "3303" -> "3306" 
-  "3306" -> "3302" 
-  "3311" -> "3314" 
-  "3314" -> "3310" 
-  "3322" -> "3321" 
-  "3323" -> "3322" 
-  "3324" -> "3323" 
-  "3325" -> "3324" 
-  "3326" -> "3329" 
-  "3329" -> "3325" 
-  "3285" -> "3290" 
+"3285" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>932</SUB>> ]
+"3288" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>932</SUB>> ]
+"3334" [label = <(RETURN,return allOK;,return allOK;)<SUB>940</SUB>> ]
+"3329" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; (i &lt; MAX_MBR_PARTS))<SUB>939</SUB>> ]
+"3327" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>938</SUB>> ]
+"3331" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>939</SUB>> ]
+"3294" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetStartLBA() &gt; 0) &amp;&amp; (partitions[i].GetInclusion() == LOGICAL))<SUB>935</SUB>> ]
+"3295" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; 0)<SUB>935</SUB>> ]
+"3303" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>935</SUB>> ]
+"3312" [label = <(&lt;operator&gt;.assignment,allOK = allOK &amp;&amp; (SectorUsedAs(partitions[i].GetStartLBA() - 1) == EBR))<SUB>936</SUB>> ]
+"3296" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>935</SUB>> ]
+"3304" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>935</SUB>> ]
+"3314" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; (SectorUsedAs(partitions[i].GetStartLBA() - 1) == EBR))<SUB>936</SUB>> ]
+"3297" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>935</SUB>> ]
+"3305" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>935</SUB>> ]
+"3316" [label = <(&lt;operator&gt;.equals,SectorUsedAs(partitions[i].GetStartLBA() - 1) == EBR)<SUB>936</SUB>> ]
+"3298" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>935</SUB>> ]
+"3301" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>935</SUB>> ]
+"3306" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>935</SUB>> ]
+"3309" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>935</SUB>> ]
+"3317" [label = <(SectorUsedAs,SectorUsedAs(partitions[i].GetStartLBA() - 1))<SUB>936</SUB>> ]
+"3318" [label = <(&lt;operator&gt;.subtraction,partitions[i].GetStartLBA() - 1)<SUB>936</SUB>> ]
+"3319" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>936</SUB>> ]
+"3320" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>936</SUB>> ]
+"3321" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>936</SUB>> ]
+"3324" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>936</SUB>> ]
+"3280" [label = <(METHOD,SpaceBeforeAllLogicals)<SUB>931</SUB>> ]
+"3336" [label = <(METHOD_RETURN,int)<SUB>931</SUB>> ]
+  "3285" -> "3288" 
+  "3288" -> "3298" 
+  "3334" -> "3336" 
+  "3329" -> "3298" 
+  "3329" -> "3334" 
+  "3327" -> "3329" 
+  "3327" -> "3331" 
+  "3331" -> "3329" 
+  "3294" -> "3314" 
+  "3294" -> "3321" 
+  "3294" -> "3327" 
+  "3295" -> "3294" 
+  "3295" -> "3306" 
+  "3303" -> "3294" 
+  "3312" -> "3327" 
+  "3296" -> "3295" 
+  "3304" -> "3303" 
+  "3314" -> "3312" 
+  "3297" -> "3296" 
+  "3305" -> "3304" 
+  "3316" -> "3314" 
+  "3298" -> "3301" 
+  "3301" -> "3297" 
+  "3306" -> "3309" 
+  "3309" -> "3305" 
+  "3317" -> "3316" 
+  "3318" -> "3317" 
+  "3319" -> "3318" 
+  "3320" -> "3319" 
+  "3321" -> "3324" 
+  "3324" -> "3320" 
+  "3280" -> "3285" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/31-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/31-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/31-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/31-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,45 +1,45 @@
 digraph "IsLegal" {  
-"3347" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>953</SUB>> ]
-"3350" [label = <(&lt;operator&gt;.assignment,allOK = (FindOverlaps() == 0))<SUB>955</SUB>> ]
-"3355" [label = <(&lt;operator&gt;.assignment,allOK = (allOK &amp;&amp; (NumPrimaries() &lt;= 4)))<SUB>956</SUB>> ]
-"3362" [label = <(&lt;operator&gt;.assignment,allOK = (allOK &amp;&amp; AreLogicalsContiguous()))<SUB>957</SUB>> ]
-"3367" [label = <(&lt;operator&gt;.assignment,allOK = (allOK &amp;&amp; DoTheyFit()))<SUB>958</SUB>> ]
-"3372" [label = <(&lt;operator&gt;.assignment,allOK = (allOK &amp;&amp; SpaceBeforeAllLogicals()))<SUB>959</SUB>> ]
-"3377" [label = <(RETURN,return allOK;,return allOK;)<SUB>960</SUB>> ]
-"3352" [label = <(&lt;operator&gt;.equals,FindOverlaps() == 0)<SUB>955</SUB>> ]
-"3357" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; (NumPrimaries() &lt;= 4))<SUB>956</SUB>> ]
-"3364" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; AreLogicalsContiguous())<SUB>957</SUB>> ]
-"3369" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; DoTheyFit())<SUB>958</SUB>> ]
-"3374" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; SpaceBeforeAllLogicals())<SUB>959</SUB>> ]
-"3353" [label = <(FindOverlaps,FindOverlaps())<SUB>955</SUB>> ]
-"3359" [label = <(&lt;operator&gt;.lessEqualsThan,NumPrimaries() &lt;= 4)<SUB>956</SUB>> ]
-"3366" [label = <(AreLogicalsContiguous,AreLogicalsContiguous())<SUB>957</SUB>> ]
-"3371" [label = <(DoTheyFit,DoTheyFit())<SUB>958</SUB>> ]
-"3376" [label = <(SpaceBeforeAllLogicals,SpaceBeforeAllLogicals())<SUB>959</SUB>> ]
-"3360" [label = <(NumPrimaries,NumPrimaries())<SUB>956</SUB>> ]
-"3343" [label = <(METHOD,IsLegal)<SUB>952</SUB>> ]
-"3379" [label = <(METHOD_RETURN,int)<SUB>952</SUB>> ]
-  "3347" -> "3353" 
-  "3350" -> "3360" 
-  "3350" -> "3357" 
-  "3355" -> "3366" 
-  "3355" -> "3364" 
+"3342" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>952</SUB>> ]
+"3345" [label = <(&lt;operator&gt;.assignment,allOK = (FindOverlaps() == 0))<SUB>954</SUB>> ]
+"3350" [label = <(&lt;operator&gt;.assignment,allOK = (allOK &amp;&amp; (NumPrimaries() &lt;= 4)))<SUB>955</SUB>> ]
+"3357" [label = <(&lt;operator&gt;.assignment,allOK = (allOK &amp;&amp; AreLogicalsContiguous()))<SUB>956</SUB>> ]
+"3362" [label = <(&lt;operator&gt;.assignment,allOK = (allOK &amp;&amp; DoTheyFit()))<SUB>957</SUB>> ]
+"3367" [label = <(&lt;operator&gt;.assignment,allOK = (allOK &amp;&amp; SpaceBeforeAllLogicals()))<SUB>958</SUB>> ]
+"3372" [label = <(RETURN,return allOK;,return allOK;)<SUB>959</SUB>> ]
+"3347" [label = <(&lt;operator&gt;.equals,FindOverlaps() == 0)<SUB>954</SUB>> ]
+"3352" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; (NumPrimaries() &lt;= 4))<SUB>955</SUB>> ]
+"3359" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; AreLogicalsContiguous())<SUB>956</SUB>> ]
+"3364" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; DoTheyFit())<SUB>957</SUB>> ]
+"3369" [label = <(&lt;operator&gt;.logicalAnd,allOK &amp;&amp; SpaceBeforeAllLogicals())<SUB>958</SUB>> ]
+"3348" [label = <(FindOverlaps,FindOverlaps())<SUB>954</SUB>> ]
+"3354" [label = <(&lt;operator&gt;.lessEqualsThan,NumPrimaries() &lt;= 4)<SUB>955</SUB>> ]
+"3361" [label = <(AreLogicalsContiguous,AreLogicalsContiguous())<SUB>956</SUB>> ]
+"3366" [label = <(DoTheyFit,DoTheyFit())<SUB>957</SUB>> ]
+"3371" [label = <(SpaceBeforeAllLogicals,SpaceBeforeAllLogicals())<SUB>958</SUB>> ]
+"3355" [label = <(NumPrimaries,NumPrimaries())<SUB>955</SUB>> ]
+"3338" [label = <(METHOD,IsLegal)<SUB>951</SUB>> ]
+"3374" [label = <(METHOD_RETURN,int)<SUB>951</SUB>> ]
+  "3342" -> "3348" 
+  "3345" -> "3355" 
+  "3345" -> "3352" 
+  "3350" -> "3361" 
+  "3350" -> "3359" 
+  "3357" -> "3366" 
+  "3357" -> "3364" 
   "3362" -> "3371" 
   "3362" -> "3369" 
-  "3367" -> "3376" 
-  "3367" -> "3374" 
-  "3372" -> "3377" 
-  "3377" -> "3379" 
+  "3367" -> "3372" 
+  "3372" -> "3374" 
+  "3347" -> "3345" 
   "3352" -> "3350" 
-  "3357" -> "3355" 
+  "3359" -> "3357" 
   "3364" -> "3362" 
   "3369" -> "3367" 
-  "3374" -> "3372" 
-  "3353" -> "3352" 
-  "3359" -> "3357" 
+  "3348" -> "3347" 
+  "3354" -> "3352" 
+  "3361" -> "3359" 
   "3366" -> "3364" 
   "3371" -> "3369" 
-  "3376" -> "3374" 
-  "3360" -> "3359" 
-  "3343" -> "3347" 
+  "3355" -> "3354" 
+  "3338" -> "3342" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/32-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/32-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/32-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/32-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,42 +1,42 @@
 digraph "IsEEActive" {  
-"3386" [label = <(&lt;operator&gt;.assignment,IsActive = 0)<SUB>966</SUB>> ]
-"3422" [label = <(RETURN,return IsActive;,return IsActive;)<SUB>972</SUB>> ]
-"3394" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>968</SUB>> ]
-"3397" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>968</SUB>> ]
-"3391" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>968</SUB>> ]
-"3401" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetStatus() &amp; 0x80) &amp;&amp; (partitions[i].GetType() == 0xEE))<SUB>969</SUB>> ]
-"3402" [label = <(&lt;operator&gt;.and,partitions[i].GetStatus() &amp; 0x80)<SUB>969</SUB>> ]
-"3410" [label = <(&lt;operator&gt;.equals,partitions[i].GetType() == 0xEE)<SUB>969</SUB>> ]
-"3419" [label = <(&lt;operator&gt;.assignment,IsActive = 1)<SUB>970</SUB>> ]
-"3403" [label = <(GetStatus,partitions[i].GetStatus())<SUB>969</SUB>> ]
-"3411" [label = <(GetType,partitions[i].GetType())<SUB>969</SUB>> ]
-"3404" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStatus)<SUB>969</SUB>> ]
-"3412" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetType)<SUB>969</SUB>> ]
-"3405" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>969</SUB>> ]
-"3408" [label = <(FIELD_IDENTIFIER,GetStatus,GetStatus)<SUB>969</SUB>> ]
-"3413" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>969</SUB>> ]
-"3416" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>969</SUB>> ]
-"3381" [label = <(METHOD,IsEEActive)<SUB>965</SUB>> ]
-"3424" [label = <(METHOD_RETURN,int)<SUB>965</SUB>> ]
-  "3386" -> "3391" 
-  "3422" -> "3424" 
-  "3394" -> "3405" 
-  "3394" -> "3422" 
-  "3397" -> "3394" 
-  "3391" -> "3394" 
-  "3401" -> "3419" 
-  "3401" -> "3397" 
-  "3402" -> "3401" 
-  "3402" -> "3413" 
-  "3410" -> "3401" 
-  "3419" -> "3397" 
-  "3403" -> "3402" 
-  "3411" -> "3410" 
-  "3404" -> "3403" 
-  "3412" -> "3411" 
-  "3405" -> "3408" 
-  "3408" -> "3404" 
-  "3413" -> "3416" 
-  "3416" -> "3412" 
+"3381" [label = <(&lt;operator&gt;.assignment,IsActive = 0)<SUB>965</SUB>> ]
+"3417" [label = <(RETURN,return IsActive;,return IsActive;)<SUB>971</SUB>> ]
+"3389" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>967</SUB>> ]
+"3392" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>967</SUB>> ]
+"3386" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>967</SUB>> ]
+"3396" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetStatus() &amp; 0x80) &amp;&amp; (partitions[i].GetType() == 0xEE))<SUB>968</SUB>> ]
+"3397" [label = <(&lt;operator&gt;.and,partitions[i].GetStatus() &amp; 0x80)<SUB>968</SUB>> ]
+"3405" [label = <(&lt;operator&gt;.equals,partitions[i].GetType() == 0xEE)<SUB>968</SUB>> ]
+"3414" [label = <(&lt;operator&gt;.assignment,IsActive = 1)<SUB>969</SUB>> ]
+"3398" [label = <(GetStatus,partitions[i].GetStatus())<SUB>968</SUB>> ]
+"3406" [label = <(GetType,partitions[i].GetType())<SUB>968</SUB>> ]
+"3399" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStatus)<SUB>968</SUB>> ]
+"3407" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetType)<SUB>968</SUB>> ]
+"3400" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>968</SUB>> ]
+"3403" [label = <(FIELD_IDENTIFIER,GetStatus,GetStatus)<SUB>968</SUB>> ]
+"3408" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>968</SUB>> ]
+"3411" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>968</SUB>> ]
+"3376" [label = <(METHOD,IsEEActive)<SUB>964</SUB>> ]
+"3419" [label = <(METHOD_RETURN,int)<SUB>964</SUB>> ]
   "3381" -> "3386" 
+  "3417" -> "3419" 
+  "3389" -> "3400" 
+  "3389" -> "3417" 
+  "3392" -> "3389" 
+  "3386" -> "3389" 
+  "3396" -> "3414" 
+  "3396" -> "3392" 
+  "3397" -> "3396" 
+  "3397" -> "3408" 
+  "3405" -> "3396" 
+  "3414" -> "3392" 
+  "3398" -> "3397" 
+  "3406" -> "3405" 
+  "3399" -> "3398" 
+  "3407" -> "3406" 
+  "3400" -> "3403" 
+  "3403" -> "3399" 
+  "3408" -> "3411" 
+  "3411" -> "3407" 
+  "3376" -> "3381" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/33-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/33-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/33-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/33-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,49 +1,49 @@
 digraph "FindNextInUse" {  
-"3470" [label = <(RETURN,return start;,return start;)<SUB>984</SUB>> ]
-"3430" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= MAX_MBR_PARTS)<SUB>978</SUB>> ]
-"3439" [label = <(&lt;operator&gt;.logicalAnd,(start &lt; MAX_MBR_PARTS) &amp;&amp; (start &gt;= 0) &amp;&amp; (partitions[start].GetInclusion() == NONE))<SUB>980</SUB>> ]
-"3455" [label = <(&lt;operator&gt;.postIncrement,start++)<SUB>981</SUB>> ]
-"3458" [label = <(&lt;operator&gt;.logicalOr,(start &lt; 0) || (start &gt;= MAX_MBR_PARTS))<SUB>982</SUB>> ]
-"3434" [label = <(&lt;operator&gt;.assignment,start = -1)<SUB>979</SUB>> ]
-"3440" [label = <(&lt;operator&gt;.logicalAnd,(start &lt; MAX_MBR_PARTS) &amp;&amp; (start &gt;= 0))<SUB>980</SUB>> ]
-"3447" [label = <(&lt;operator&gt;.equals,partitions[start].GetInclusion() == NONE)<SUB>980</SUB>> ]
-"3459" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>982</SUB>> ]
-"3462" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= MAX_MBR_PARTS)<SUB>982</SUB>> ]
-"3466" [label = <(&lt;operator&gt;.assignment,start = -1)<SUB>983</SUB>> ]
-"3436" [label = <(&lt;operator&gt;.minus,-1)<SUB>979</SUB>> ]
-"3441" [label = <(&lt;operator&gt;.lessThan,start &lt; MAX_MBR_PARTS)<SUB>980</SUB>> ]
-"3444" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= 0)<SUB>980</SUB>> ]
-"3448" [label = <(GetInclusion,partitions[start].GetInclusion())<SUB>980</SUB>> ]
-"3468" [label = <(&lt;operator&gt;.minus,-1)<SUB>983</SUB>> ]
-"3449" [label = <(&lt;operator&gt;.fieldAccess,partitions[start].GetInclusion)<SUB>980</SUB>> ]
-"3450" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[start])<SUB>980</SUB>> ]
-"3453" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>980</SUB>> ]
-"3426" [label = <(METHOD,FindNextInUse)<SUB>977</SUB>> ]
-"3472" [label = <(METHOD_RETURN,int)<SUB>977</SUB>> ]
-  "3470" -> "3472" 
-  "3430" -> "3436" 
-  "3430" -> "3441" 
-  "3439" -> "3455" 
-  "3439" -> "3459" 
-  "3455" -> "3441" 
-  "3458" -> "3468" 
-  "3458" -> "3470" 
-  "3434" -> "3441" 
-  "3440" -> "3439" 
-  "3440" -> "3450" 
-  "3447" -> "3439" 
-  "3459" -> "3458" 
-  "3459" -> "3462" 
-  "3462" -> "3458" 
-  "3466" -> "3470" 
-  "3436" -> "3434" 
-  "3441" -> "3440" 
-  "3441" -> "3444" 
-  "3444" -> "3440" 
-  "3448" -> "3447" 
-  "3468" -> "3466" 
-  "3449" -> "3448" 
-  "3450" -> "3453" 
-  "3453" -> "3449" 
-  "3426" -> "3430" 
+"3465" [label = <(RETURN,return start;,return start;)<SUB>983</SUB>> ]
+"3425" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= MAX_MBR_PARTS)<SUB>977</SUB>> ]
+"3434" [label = <(&lt;operator&gt;.logicalAnd,(start &lt; MAX_MBR_PARTS) &amp;&amp; (start &gt;= 0) &amp;&amp; (partitions[start].GetInclusion() == NONE))<SUB>979</SUB>> ]
+"3450" [label = <(&lt;operator&gt;.postIncrement,start++)<SUB>980</SUB>> ]
+"3453" [label = <(&lt;operator&gt;.logicalOr,(start &lt; 0) || (start &gt;= MAX_MBR_PARTS))<SUB>981</SUB>> ]
+"3429" [label = <(&lt;operator&gt;.assignment,start = -1)<SUB>978</SUB>> ]
+"3435" [label = <(&lt;operator&gt;.logicalAnd,(start &lt; MAX_MBR_PARTS) &amp;&amp; (start &gt;= 0))<SUB>979</SUB>> ]
+"3442" [label = <(&lt;operator&gt;.equals,partitions[start].GetInclusion() == NONE)<SUB>979</SUB>> ]
+"3454" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>981</SUB>> ]
+"3457" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= MAX_MBR_PARTS)<SUB>981</SUB>> ]
+"3461" [label = <(&lt;operator&gt;.assignment,start = -1)<SUB>982</SUB>> ]
+"3431" [label = <(&lt;operator&gt;.minus,-1)<SUB>978</SUB>> ]
+"3436" [label = <(&lt;operator&gt;.lessThan,start &lt; MAX_MBR_PARTS)<SUB>979</SUB>> ]
+"3439" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= 0)<SUB>979</SUB>> ]
+"3443" [label = <(GetInclusion,partitions[start].GetInclusion())<SUB>979</SUB>> ]
+"3463" [label = <(&lt;operator&gt;.minus,-1)<SUB>982</SUB>> ]
+"3444" [label = <(&lt;operator&gt;.fieldAccess,partitions[start].GetInclusion)<SUB>979</SUB>> ]
+"3445" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[start])<SUB>979</SUB>> ]
+"3448" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>979</SUB>> ]
+"3421" [label = <(METHOD,FindNextInUse)<SUB>976</SUB>> ]
+"3467" [label = <(METHOD_RETURN,int)<SUB>976</SUB>> ]
+  "3465" -> "3467" 
+  "3425" -> "3431" 
+  "3425" -> "3436" 
+  "3434" -> "3450" 
+  "3434" -> "3454" 
+  "3450" -> "3436" 
+  "3453" -> "3463" 
+  "3453" -> "3465" 
+  "3429" -> "3436" 
+  "3435" -> "3434" 
+  "3435" -> "3445" 
+  "3442" -> "3434" 
+  "3454" -> "3453" 
+  "3454" -> "3457" 
+  "3457" -> "3453" 
+  "3461" -> "3465" 
+  "3431" -> "3429" 
+  "3436" -> "3435" 
+  "3436" -> "3439" 
+  "3439" -> "3435" 
+  "3443" -> "3442" 
+  "3463" -> "3461" 
+  "3444" -> "3443" 
+  "3445" -> "3448" 
+  "3448" -> "3444" 
+  "3421" -> "3425" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/34-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/34-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/34-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/34-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,29 +1,29 @@
 digraph "EmptyMBR" {  
-"3501" [label = <(&lt;operator&gt;.assignment,MBRSignature = MBR_SIGNATURE)<SUB>1009</SUB>> ]
-"3504" [label = <(&lt;operator&gt;.assignment,state = mbr)<SUB>1010</SUB>> ]
-"3479" [label = <(&lt;operator&gt;.equals,clearBootloader == 1)<SUB>1001</SUB>> ]
-"3489" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1006</SUB>> ]
-"3492" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1006</SUB>> ]
-"3483" [label = <(EmptyBootloader,EmptyBootloader())<SUB>1002</SUB>> ]
-"3486" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1006</SUB>> ]
-"3495" [label = <(Empty,partitions[i].Empty())<SUB>1007</SUB>> ]
-"3496" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].Empty)<SUB>1007</SUB>> ]
-"3497" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1007</SUB>> ]
-"3500" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1007</SUB>> ]
-"3474" [label = <(METHOD,EmptyMBR)<SUB>995</SUB>> ]
-"3507" [label = <(METHOD_RETURN,void)<SUB>995</SUB>> ]
-  "3501" -> "3504" 
-  "3504" -> "3507" 
-  "3479" -> "3483" 
-  "3479" -> "3486" 
-  "3489" -> "3497" 
-  "3489" -> "3501" 
-  "3492" -> "3489" 
-  "3483" -> "3486" 
-  "3486" -> "3489" 
-  "3495" -> "3492" 
-  "3496" -> "3495" 
-  "3497" -> "3500" 
-  "3500" -> "3496" 
-  "3474" -> "3479" 
+"3496" [label = <(&lt;operator&gt;.assignment,MBRSignature = MBR_SIGNATURE)<SUB>1008</SUB>> ]
+"3499" [label = <(&lt;operator&gt;.assignment,state = mbr)<SUB>1009</SUB>> ]
+"3474" [label = <(&lt;operator&gt;.equals,clearBootloader == 1)<SUB>1000</SUB>> ]
+"3484" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1005</SUB>> ]
+"3487" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1005</SUB>> ]
+"3478" [label = <(EmptyBootloader,EmptyBootloader())<SUB>1001</SUB>> ]
+"3481" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1005</SUB>> ]
+"3490" [label = <(Empty,partitions[i].Empty())<SUB>1006</SUB>> ]
+"3491" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].Empty)<SUB>1006</SUB>> ]
+"3492" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1006</SUB>> ]
+"3495" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1006</SUB>> ]
+"3469" [label = <(METHOD,EmptyMBR)<SUB>994</SUB>> ]
+"3502" [label = <(METHOD_RETURN,void)<SUB>994</SUB>> ]
+  "3496" -> "3499" 
+  "3499" -> "3502" 
+  "3474" -> "3478" 
+  "3474" -> "3481" 
+  "3484" -> "3492" 
+  "3484" -> "3496" 
+  "3487" -> "3484" 
+  "3478" -> "3481" 
+  "3481" -> "3484" 
+  "3490" -> "3487" 
+  "3491" -> "3490" 
+  "3492" -> "3495" 
+  "3495" -> "3491" 
+  "3469" -> "3474" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/35-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/35-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/35-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/35-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,18 +1,18 @@
 digraph "EmptyBootloader" {  
-"3528" [label = <(&lt;operator&gt;.assignment,nulls = 0)<SUB>1021</SUB>> ]
-"3518" [label = <(&lt;operator&gt;.lessThan,i &lt; 440)<SUB>1019</SUB>> ]
-"3521" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1019</SUB>> ]
-"3523" [label = <(&lt;operator&gt;.assignment,code[i] = 0)<SUB>1020</SUB>> ]
-"3515" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1019</SUB>> ]
-"3524" [label = <(&lt;operator&gt;.indirectIndexAccess,code[i])<SUB>1020</SUB>> ]
-"3509" [label = <(METHOD,EmptyBootloader)<SUB>1016</SUB>> ]
-"3531" [label = <(METHOD_RETURN,void)<SUB>1016</SUB>> ]
-  "3528" -> "3531" 
-  "3518" -> "3524" 
-  "3518" -> "3528" 
-  "3521" -> "3518" 
-  "3523" -> "3521" 
-  "3515" -> "3518" 
-  "3524" -> "3523" 
-  "3509" -> "3515" 
+"3523" [label = <(&lt;operator&gt;.assignment,nulls = 0)<SUB>1020</SUB>> ]
+"3513" [label = <(&lt;operator&gt;.lessThan,i &lt; 440)<SUB>1018</SUB>> ]
+"3516" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1018</SUB>> ]
+"3518" [label = <(&lt;operator&gt;.assignment,code[i] = 0)<SUB>1019</SUB>> ]
+"3510" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1018</SUB>> ]
+"3519" [label = <(&lt;operator&gt;.indirectIndexAccess,code[i])<SUB>1019</SUB>> ]
+"3504" [label = <(METHOD,EmptyBootloader)<SUB>1015</SUB>> ]
+"3526" [label = <(METHOD_RETURN,void)<SUB>1015</SUB>> ]
+  "3523" -> "3526" 
+  "3513" -> "3519" 
+  "3513" -> "3523" 
+  "3516" -> "3513" 
+  "3518" -> "3516" 
+  "3510" -> "3513" 
+  "3519" -> "3518" 
+  "3504" -> "3510" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/36-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/36-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/36-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/36-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,9 +1,9 @@
 digraph "AddPart" {  
-"3537" [label = <(&lt;operator&gt;.assignment,partitions[num] = newPart)<SUB>1033</SUB>> ]
-"3538" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1033</SUB>> ]
-"3533" [label = <(METHOD,AddPart)<SUB>1032</SUB>> ]
-"3542" [label = <(METHOD_RETURN,void)<SUB>1032</SUB>> ]
-  "3537" -> "3542" 
-  "3538" -> "3537" 
-  "3533" -> "3538" 
+"3532" [label = <(&lt;operator&gt;.assignment,partitions[num] = newPart)<SUB>1032</SUB>> ]
+"3533" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1032</SUB>> ]
+"3528" [label = <(METHOD,AddPart)<SUB>1031</SUB>> ]
+"3537" [label = <(METHOD_RETURN,void)<SUB>1031</SUB>> ]
+  "3532" -> "3537" 
+  "3533" -> "3532" 
+  "3528" -> "3533" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/37-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/37-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/37-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/37-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,68 +1,68 @@
 digraph "MakePart" {  
-"3552" [label = <(&lt;operator&gt;.logicalAnd,(num &gt;= 0) &amp;&amp; (num &lt; MAX_MBR_PARTS) &amp;&amp; (start &lt;= UINT32_MAX) &amp;&amp; (length &lt;= UINT32_MAX))<SUB>1045</SUB>> ]
-"3553" [label = <(&lt;operator&gt;.logicalAnd,(num &gt;= 0) &amp;&amp; (num &lt; MAX_MBR_PARTS) &amp;&amp; (start &lt;= UINT32_MAX))<SUB>1045</SUB>> ]
-"3564" [label = <(&lt;operator&gt;.lessEqualsThan,length &lt;= UINT32_MAX)<SUB>1045</SUB>> ]
-"3568" [label = <(Empty,partitions[num].Empty())<SUB>1046</SUB>> ]
-"3574" [label = <(SetType,partitions[num].SetType(type))<SUB>1047</SUB>> ]
-"3581" [label = <(SetLocation,partitions[num].SetLocation(start, length))<SUB>1048</SUB>> ]
-"3610" [label = <(SetPartBootable,SetPartBootable(num, bootable))<SUB>1053</SUB>> ]
-"3554" [label = <(&lt;operator&gt;.logicalAnd,(num &gt;= 0) &amp;&amp; (num &lt; MAX_MBR_PARTS))<SUB>1045</SUB>> ]
-"3561" [label = <(&lt;operator&gt;.lessEqualsThan,start &lt;= UINT32_MAX)<SUB>1045</SUB>> ]
-"3569" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].Empty)<SUB>1046</SUB>> ]
-"3575" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetType)<SUB>1047</SUB>> ]
-"3582" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetLocation)<SUB>1048</SUB>> ]
-"3590" [label = <(&lt;operator&gt;.lessThan,num &lt; 4)<SUB>1049</SUB>> ]
-"3555" [label = <(&lt;operator&gt;.greaterEqualsThan,num &gt;= 0)<SUB>1045</SUB>> ]
-"3558" [label = <(&lt;operator&gt;.lessThan,num &lt; MAX_MBR_PARTS)<SUB>1045</SUB>> ]
-"3570" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1046</SUB>> ]
-"3573" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1046</SUB>> ]
-"3576" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1047</SUB>> ]
-"3579" [label = <(FIELD_IDENTIFIER,SetType,SetType)<SUB>1047</SUB>> ]
-"3583" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1048</SUB>> ]
-"3586" [label = <(FIELD_IDENTIFIER,SetLocation,SetLocation)<SUB>1048</SUB>> ]
-"3594" [label = <(SetInclusion,partitions[num].SetInclusion(PRIMARY))<SUB>1050</SUB>> ]
-"3595" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetInclusion)<SUB>1050</SUB>> ]
-"3603" [label = <(SetInclusion,partitions[num].SetInclusion(LOGICAL))<SUB>1052</SUB>> ]
-"3596" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1050</SUB>> ]
-"3599" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1050</SUB>> ]
-"3604" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetInclusion)<SUB>1052</SUB>> ]
-"3605" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1052</SUB>> ]
-"3608" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1052</SUB>> ]
-"3544" [label = <(METHOD,MakePart)<SUB>1044</SUB>> ]
-"3613" [label = <(METHOD_RETURN,void)<SUB>1044</SUB>> ]
-  "3552" -> "3613" 
-  "3552" -> "3570" 
-  "3553" -> "3552" 
-  "3553" -> "3564" 
-  "3564" -> "3552" 
-  "3568" -> "3576" 
-  "3574" -> "3583" 
-  "3581" -> "3590" 
-  "3610" -> "3613" 
-  "3554" -> "3553" 
-  "3554" -> "3561" 
-  "3561" -> "3553" 
-  "3569" -> "3568" 
-  "3575" -> "3574" 
-  "3582" -> "3581" 
-  "3590" -> "3596" 
-  "3590" -> "3605" 
-  "3555" -> "3554" 
-  "3555" -> "3558" 
-  "3558" -> "3554" 
-  "3570" -> "3573" 
-  "3573" -> "3569" 
-  "3576" -> "3579" 
-  "3579" -> "3575" 
-  "3583" -> "3586" 
-  "3586" -> "3582" 
-  "3594" -> "3610" 
-  "3595" -> "3594" 
-  "3603" -> "3610" 
-  "3596" -> "3599" 
-  "3599" -> "3595" 
-  "3604" -> "3603" 
+"3547" [label = <(&lt;operator&gt;.logicalAnd,(num &gt;= 0) &amp;&amp; (num &lt; MAX_MBR_PARTS) &amp;&amp; (start &lt;= UINT32_MAX) &amp;&amp; (length &lt;= UINT32_MAX))<SUB>1044</SUB>> ]
+"3548" [label = <(&lt;operator&gt;.logicalAnd,(num &gt;= 0) &amp;&amp; (num &lt; MAX_MBR_PARTS) &amp;&amp; (start &lt;= UINT32_MAX))<SUB>1044</SUB>> ]
+"3559" [label = <(&lt;operator&gt;.lessEqualsThan,length &lt;= UINT32_MAX)<SUB>1044</SUB>> ]
+"3563" [label = <(Empty,partitions[num].Empty())<SUB>1045</SUB>> ]
+"3569" [label = <(SetType,partitions[num].SetType(type))<SUB>1046</SUB>> ]
+"3576" [label = <(SetLocation,partitions[num].SetLocation(start, length))<SUB>1047</SUB>> ]
+"3605" [label = <(SetPartBootable,SetPartBootable(num, bootable))<SUB>1052</SUB>> ]
+"3549" [label = <(&lt;operator&gt;.logicalAnd,(num &gt;= 0) &amp;&amp; (num &lt; MAX_MBR_PARTS))<SUB>1044</SUB>> ]
+"3556" [label = <(&lt;operator&gt;.lessEqualsThan,start &lt;= UINT32_MAX)<SUB>1044</SUB>> ]
+"3564" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].Empty)<SUB>1045</SUB>> ]
+"3570" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetType)<SUB>1046</SUB>> ]
+"3577" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetLocation)<SUB>1047</SUB>> ]
+"3585" [label = <(&lt;operator&gt;.lessThan,num &lt; 4)<SUB>1048</SUB>> ]
+"3550" [label = <(&lt;operator&gt;.greaterEqualsThan,num &gt;= 0)<SUB>1044</SUB>> ]
+"3553" [label = <(&lt;operator&gt;.lessThan,num &lt; MAX_MBR_PARTS)<SUB>1044</SUB>> ]
+"3565" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1045</SUB>> ]
+"3568" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1045</SUB>> ]
+"3571" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1046</SUB>> ]
+"3574" [label = <(FIELD_IDENTIFIER,SetType,SetType)<SUB>1046</SUB>> ]
+"3578" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1047</SUB>> ]
+"3581" [label = <(FIELD_IDENTIFIER,SetLocation,SetLocation)<SUB>1047</SUB>> ]
+"3589" [label = <(SetInclusion,partitions[num].SetInclusion(PRIMARY))<SUB>1049</SUB>> ]
+"3590" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetInclusion)<SUB>1049</SUB>> ]
+"3598" [label = <(SetInclusion,partitions[num].SetInclusion(LOGICAL))<SUB>1051</SUB>> ]
+"3591" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1049</SUB>> ]
+"3594" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1049</SUB>> ]
+"3599" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetInclusion)<SUB>1051</SUB>> ]
+"3600" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1051</SUB>> ]
+"3603" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1051</SUB>> ]
+"3539" [label = <(METHOD,MakePart)<SUB>1043</SUB>> ]
+"3608" [label = <(METHOD_RETURN,void)<SUB>1043</SUB>> ]
+  "3547" -> "3608" 
+  "3547" -> "3565" 
+  "3548" -> "3547" 
+  "3548" -> "3559" 
+  "3559" -> "3547" 
+  "3563" -> "3571" 
+  "3569" -> "3578" 
+  "3576" -> "3585" 
   "3605" -> "3608" 
-  "3608" -> "3604" 
-  "3544" -> "3555" 
+  "3549" -> "3548" 
+  "3549" -> "3556" 
+  "3556" -> "3548" 
+  "3564" -> "3563" 
+  "3570" -> "3569" 
+  "3577" -> "3576" 
+  "3585" -> "3591" 
+  "3585" -> "3600" 
+  "3550" -> "3549" 
+  "3550" -> "3553" 
+  "3553" -> "3549" 
+  "3565" -> "3568" 
+  "3568" -> "3564" 
+  "3571" -> "3574" 
+  "3574" -> "3570" 
+  "3578" -> "3581" 
+  "3581" -> "3577" 
+  "3589" -> "3605" 
+  "3590" -> "3589" 
+  "3598" -> "3605" 
+  "3591" -> "3594" 
+  "3594" -> "3590" 
+  "3599" -> "3598" 
+  "3600" -> "3603" 
+  "3603" -> "3599" 
+  "3539" -> "3550" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/38-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/38-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/38-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/38-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,44 +1,44 @@
 digraph "SetPartType" {  
-"3620" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>1060</SUB>> ]
-"3662" [label = <(RETURN,return allOK;,return allOK;)<SUB>1067</SUB>> ]
-"3624" [label = <(&lt;operator&gt;.logicalAnd,(num &gt;= 0) &amp;&amp; (num &lt; MAX_MBR_PARTS))<SUB>1062</SUB>> ]
-"3625" [label = <(&lt;operator&gt;.greaterEqualsThan,num &gt;= 0)<SUB>1062</SUB>> ]
-"3628" [label = <(&lt;operator&gt;.lessThan,num &lt; MAX_MBR_PARTS)<SUB>1062</SUB>> ]
-"3633" [label = <(&lt;operator&gt;.notEquals,partitions[num].GetLengthLBA() != UINT32_C(0))<SUB>1063</SUB>> ]
-"3659" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1066</SUB>> ]
-"3634" [label = <(GetLengthLBA,partitions[num].GetLengthLBA())<SUB>1063</SUB>> ]
-"3640" [label = <(UINT32_C,UINT32_C(0))<SUB>1063</SUB>> ]
-"3643" [label = <(&lt;operator&gt;.assignment,allOK = partitions[num].SetType(type))<SUB>1064</SUB>> ]
-"3635" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetLengthLBA)<SUB>1063</SUB>> ]
-"3645" [label = <(SetType,partitions[num].SetType(type))<SUB>1064</SUB>> ]
+"3615" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>1059</SUB>> ]
+"3657" [label = <(RETURN,return allOK;,return allOK;)<SUB>1066</SUB>> ]
+"3619" [label = <(&lt;operator&gt;.logicalAnd,(num &gt;= 0) &amp;&amp; (num &lt; MAX_MBR_PARTS))<SUB>1061</SUB>> ]
+"3620" [label = <(&lt;operator&gt;.greaterEqualsThan,num &gt;= 0)<SUB>1061</SUB>> ]
+"3623" [label = <(&lt;operator&gt;.lessThan,num &lt; MAX_MBR_PARTS)<SUB>1061</SUB>> ]
+"3628" [label = <(&lt;operator&gt;.notEquals,partitions[num].GetLengthLBA() != UINT32_C(0))<SUB>1062</SUB>> ]
 "3654" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1065</SUB>> ]
-"3636" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1063</SUB>> ]
-"3639" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1063</SUB>> ]
-"3646" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetType)<SUB>1064</SUB>> ]
-"3647" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1064</SUB>> ]
-"3650" [label = <(FIELD_IDENTIFIER,SetType,SetType)<SUB>1064</SUB>> ]
-"3615" [label = <(METHOD,SetPartType)<SUB>1059</SUB>> ]
-"3664" [label = <(METHOD_RETURN,int)<SUB>1059</SUB>> ]
-  "3620" -> "3625" 
-  "3662" -> "3664" 
-  "3624" -> "3636" 
-  "3624" -> "3659" 
-  "3625" -> "3624" 
-  "3625" -> "3628" 
-  "3628" -> "3624" 
-  "3633" -> "3647" 
-  "3633" -> "3654" 
-  "3659" -> "3662" 
-  "3634" -> "3640" 
-  "3640" -> "3633" 
-  "3643" -> "3662" 
-  "3635" -> "3634" 
-  "3645" -> "3643" 
-  "3654" -> "3662" 
-  "3636" -> "3639" 
-  "3639" -> "3635" 
-  "3646" -> "3645" 
-  "3647" -> "3650" 
-  "3650" -> "3646" 
+"3629" [label = <(GetLengthLBA,partitions[num].GetLengthLBA())<SUB>1062</SUB>> ]
+"3635" [label = <(UINT32_C,UINT32_C(0))<SUB>1062</SUB>> ]
+"3638" [label = <(&lt;operator&gt;.assignment,allOK = partitions[num].SetType(type))<SUB>1063</SUB>> ]
+"3630" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetLengthLBA)<SUB>1062</SUB>> ]
+"3640" [label = <(SetType,partitions[num].SetType(type))<SUB>1063</SUB>> ]
+"3649" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1064</SUB>> ]
+"3631" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1062</SUB>> ]
+"3634" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1062</SUB>> ]
+"3641" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetType)<SUB>1063</SUB>> ]
+"3642" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1063</SUB>> ]
+"3645" [label = <(FIELD_IDENTIFIER,SetType,SetType)<SUB>1063</SUB>> ]
+"3610" [label = <(METHOD,SetPartType)<SUB>1058</SUB>> ]
+"3659" [label = <(METHOD_RETURN,int)<SUB>1058</SUB>> ]
   "3615" -> "3620" 
+  "3657" -> "3659" 
+  "3619" -> "3631" 
+  "3619" -> "3654" 
+  "3620" -> "3619" 
+  "3620" -> "3623" 
+  "3623" -> "3619" 
+  "3628" -> "3642" 
+  "3628" -> "3649" 
+  "3654" -> "3657" 
+  "3629" -> "3635" 
+  "3635" -> "3628" 
+  "3638" -> "3657" 
+  "3630" -> "3629" 
+  "3640" -> "3638" 
+  "3649" -> "3657" 
+  "3631" -> "3634" 
+  "3634" -> "3630" 
+  "3641" -> "3640" 
+  "3642" -> "3645" 
+  "3645" -> "3641" 
+  "3610" -> "3615" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/39-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/39-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/39-cfg.dot	2023-06-07 19:31:27.117407669 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/39-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,57 +1,57 @@
 digraph "SetPartBootable" {  
-"3671" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>1074</SUB>> ]
-"3727" [label = <(RETURN,return allOK;,return allOK;)<SUB>1084</SUB>> ]
-"3675" [label = <(&lt;operator&gt;.logicalAnd,(num &gt;= 0) &amp;&amp; (num &lt; MAX_MBR_PARTS))<SUB>1076</SUB>> ]
-"3676" [label = <(&lt;operator&gt;.greaterEqualsThan,num &gt;= 0)<SUB>1076</SUB>> ]
-"3679" [label = <(&lt;operator&gt;.lessThan,num &lt; MAX_MBR_PARTS)<SUB>1076</SUB>> ]
-"3684" [label = <(&lt;operator&gt;.notEquals,partitions[num].GetLengthLBA() != UINT32_C(0))<SUB>1077</SUB>> ]
-"3724" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1083</SUB>> ]
-"3685" [label = <(GetLengthLBA,partitions[num].GetLengthLBA())<SUB>1077</SUB>> ]
-"3691" [label = <(UINT32_C,UINT32_C(0))<SUB>1077</SUB>> ]
-"3686" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetLengthLBA)<SUB>1077</SUB>> ]
-"3695" [label = <(&lt;operator&gt;.equals,bootable == 0)<SUB>1078</SUB>> ]
+"3666" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>1073</SUB>> ]
+"3722" [label = <(RETURN,return allOK;,return allOK;)<SUB>1083</SUB>> ]
+"3670" [label = <(&lt;operator&gt;.logicalAnd,(num &gt;= 0) &amp;&amp; (num &lt; MAX_MBR_PARTS))<SUB>1075</SUB>> ]
+"3671" [label = <(&lt;operator&gt;.greaterEqualsThan,num &gt;= 0)<SUB>1075</SUB>> ]
+"3674" [label = <(&lt;operator&gt;.lessThan,num &lt; MAX_MBR_PARTS)<SUB>1075</SUB>> ]
+"3679" [label = <(&lt;operator&gt;.notEquals,partitions[num].GetLengthLBA() != UINT32_C(0))<SUB>1076</SUB>> ]
 "3719" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1082</SUB>> ]
-"3687" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1077</SUB>> ]
-"3690" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1077</SUB>> ]
-"3699" [label = <(SetStatus,partitions[num].SetStatus(UINT8_C(0x00)))<SUB>1079</SUB>> ]
-"3700" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetStatus)<SUB>1079</SUB>> ]
-"3705" [label = <(UINT8_C,UINT8_C(0x00))<SUB>1079</SUB>> ]
-"3709" [label = <(SetStatus,partitions[num].SetStatus(UINT8_C(0x80)))<SUB>1081</SUB>> ]
-"3701" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1079</SUB>> ]
-"3704" [label = <(FIELD_IDENTIFIER,SetStatus,SetStatus)<SUB>1079</SUB>> ]
-"3710" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetStatus)<SUB>1081</SUB>> ]
-"3715" [label = <(UINT8_C,UINT8_C(0x80))<SUB>1081</SUB>> ]
-"3711" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1081</SUB>> ]
-"3714" [label = <(FIELD_IDENTIFIER,SetStatus,SetStatus)<SUB>1081</SUB>> ]
-"3666" [label = <(METHOD,SetPartBootable)<SUB>1073</SUB>> ]
-"3729" [label = <(METHOD_RETURN,int)<SUB>1073</SUB>> ]
-  "3671" -> "3676" 
-  "3727" -> "3729" 
-  "3675" -> "3687" 
-  "3675" -> "3724" 
-  "3676" -> "3675" 
-  "3676" -> "3679" 
-  "3679" -> "3675" 
-  "3684" -> "3695" 
-  "3684" -> "3719" 
-  "3724" -> "3727" 
-  "3685" -> "3691" 
-  "3691" -> "3684" 
-  "3686" -> "3685" 
-  "3695" -> "3701" 
-  "3695" -> "3711" 
-  "3719" -> "3727" 
-  "3687" -> "3690" 
-  "3690" -> "3686" 
-  "3699" -> "3727" 
-  "3700" -> "3705" 
-  "3705" -> "3699" 
-  "3709" -> "3727" 
-  "3701" -> "3704" 
-  "3704" -> "3700" 
-  "3710" -> "3715" 
-  "3715" -> "3709" 
-  "3711" -> "3714" 
-  "3714" -> "3710" 
+"3680" [label = <(GetLengthLBA,partitions[num].GetLengthLBA())<SUB>1076</SUB>> ]
+"3686" [label = <(UINT32_C,UINT32_C(0))<SUB>1076</SUB>> ]
+"3681" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetLengthLBA)<SUB>1076</SUB>> ]
+"3690" [label = <(&lt;operator&gt;.equals,bootable == 0)<SUB>1077</SUB>> ]
+"3714" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1081</SUB>> ]
+"3682" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1076</SUB>> ]
+"3685" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1076</SUB>> ]
+"3694" [label = <(SetStatus,partitions[num].SetStatus(UINT8_C(0x00)))<SUB>1078</SUB>> ]
+"3695" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetStatus)<SUB>1078</SUB>> ]
+"3700" [label = <(UINT8_C,UINT8_C(0x00))<SUB>1078</SUB>> ]
+"3704" [label = <(SetStatus,partitions[num].SetStatus(UINT8_C(0x80)))<SUB>1080</SUB>> ]
+"3696" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1078</SUB>> ]
+"3699" [label = <(FIELD_IDENTIFIER,SetStatus,SetStatus)<SUB>1078</SUB>> ]
+"3705" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetStatus)<SUB>1080</SUB>> ]
+"3710" [label = <(UINT8_C,UINT8_C(0x80))<SUB>1080</SUB>> ]
+"3706" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1080</SUB>> ]
+"3709" [label = <(FIELD_IDENTIFIER,SetStatus,SetStatus)<SUB>1080</SUB>> ]
+"3661" [label = <(METHOD,SetPartBootable)<SUB>1072</SUB>> ]
+"3724" [label = <(METHOD_RETURN,int)<SUB>1072</SUB>> ]
   "3666" -> "3671" 
+  "3722" -> "3724" 
+  "3670" -> "3682" 
+  "3670" -> "3719" 
+  "3671" -> "3670" 
+  "3671" -> "3674" 
+  "3674" -> "3670" 
+  "3679" -> "3690" 
+  "3679" -> "3714" 
+  "3719" -> "3722" 
+  "3680" -> "3686" 
+  "3686" -> "3679" 
+  "3681" -> "3680" 
+  "3690" -> "3696" 
+  "3690" -> "3706" 
+  "3714" -> "3722" 
+  "3682" -> "3685" 
+  "3685" -> "3681" 
+  "3694" -> "3722" 
+  "3695" -> "3700" 
+  "3700" -> "3694" 
+  "3704" -> "3722" 
+  "3696" -> "3699" 
+  "3699" -> "3695" 
+  "3705" -> "3710" 
+  "3710" -> "3704" 
+  "3706" -> "3709" 
+  "3709" -> "3705" 
+  "3661" -> "3666" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/40-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/40-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/40-cfg.dot	2023-06-07 19:31:27.127407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/40-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,72 +1,72 @@
 digraph "MakeBiggestPart" {  
-"3736" [label = <(&lt;operator&gt;.assignment,start = UINT64_C(1))<SUB>1091</SUB>> ]
-"3744" [label = <(&lt;operator&gt;.assignment,selectedSegment = UINT64_C(0))<SUB>1095</SUB>> ]
-"3749" [label = <(&lt;operator&gt;.assignment,selectedSize = UINT64_C(0))<SUB>1096</SUB>> ]
-"3754" [label = <(&lt;operator&gt;.assignment,found = 0)<SUB>1097</SUB>> ]
-"3825" [label = <(RETURN,return found;,return found;)<SUB>1118</SUB>> ]
-"3738" [label = <(UINT64_C,UINT64_C(1))<SUB>1091</SUB>> ]
+"3731" [label = <(&lt;operator&gt;.assignment,start = UINT64_C(1))<SUB>1090</SUB>> ]
+"3739" [label = <(&lt;operator&gt;.assignment,selectedSegment = UINT64_C(0))<SUB>1094</SUB>> ]
+"3744" [label = <(&lt;operator&gt;.assignment,selectedSize = UINT64_C(0))<SUB>1095</SUB>> ]
+"3749" [label = <(&lt;operator&gt;.assignment,found = 0)<SUB>1096</SUB>> ]
+"3820" [label = <(RETURN,return found;,return found;)<SUB>1117</SUB>> ]
+"3733" [label = <(UINT64_C,UINT64_C(1))<SUB>1090</SUB>> ]
+"3741" [label = <(UINT64_C,UINT64_C(0))<SUB>1094</SUB>> ]
 "3746" [label = <(UINT64_C,UINT64_C(0))<SUB>1095</SUB>> ]
-"3751" [label = <(UINT64_C,UINT64_C(0))<SUB>1096</SUB>> ]
-"3798" [label = <(&lt;operator&gt;.notEquals,firstBlock != 0)<SUB>1111</SUB>> ]
-"3802" [label = <(&lt;operator&gt;.logicalAnd,(selectedSize &gt; UINT64_C(0)) &amp;&amp; (selectedSize &lt; diskSize))<SUB>1112</SUB>> ]
-"3760" [label = <(&lt;operator&gt;.assignment,firstBlock = FindFirstAvailable(start))<SUB>1101</SUB>> ]
-"3803" [label = <(&lt;operator&gt;.greaterThan,selectedSize &gt; UINT64_C(0))<SUB>1112</SUB>> ]
-"3807" [label = <(&lt;operator&gt;.lessThan,selectedSize &lt; diskSize)<SUB>1112</SUB>> ]
-"3811" [label = <(&lt;operator&gt;.assignment,found = 1)<SUB>1113</SUB>> ]
-"3814" [label = <(MakePart,MakePart(i, selectedSegment, selectedSize, type, 0))<SUB>1114</SUB>> ]
-"3762" [label = <(FindFirstAvailable,FindFirstAvailable(start))<SUB>1101</SUB>> ]
-"3765" [label = <(&lt;operator&gt;.greaterThan,firstBlock &gt; UINT64_C(0))<SUB>1102</SUB>> ]
-"3805" [label = <(UINT64_C,UINT64_C(0))<SUB>1112</SUB>> ]
-"3822" [label = <(&lt;operator&gt;.assignment,found = 0)<SUB>1116</SUB>> ]
-"3767" [label = <(UINT64_C,UINT64_C(0))<SUB>1102</SUB>> ]
-"3770" [label = <(&lt;operator&gt;.assignment,lastBlock = FindLastInFree(firstBlock))<SUB>1103</SUB>> ]
-"3774" [label = <(&lt;operator&gt;.assignment,segmentSize = lastBlock - firstBlock + UINT64_C(1))<SUB>1104</SUB>> ]
-"3793" [label = <(&lt;operator&gt;.assignment,start = lastBlock + 1)<SUB>1109</SUB>> ]
-"3772" [label = <(FindLastInFree,FindLastInFree(firstBlock))<SUB>1103</SUB>> ]
-"3776" [label = <(&lt;operator&gt;.addition,lastBlock - firstBlock + UINT64_C(1))<SUB>1104</SUB>> ]
-"3783" [label = <(&lt;operator&gt;.greaterThan,segmentSize &gt; selectedSize)<SUB>1105</SUB>> ]
-"3795" [label = <(&lt;operator&gt;.addition,lastBlock + 1)<SUB>1109</SUB>> ]
-"3777" [label = <(&lt;operator&gt;.subtraction,lastBlock - firstBlock)<SUB>1104</SUB>> ]
-"3780" [label = <(UINT64_C,UINT64_C(1))<SUB>1104</SUB>> ]
-"3787" [label = <(&lt;operator&gt;.assignment,selectedSize = segmentSize)<SUB>1106</SUB>> ]
-"3790" [label = <(&lt;operator&gt;.assignment,selectedSegment = firstBlock)<SUB>1107</SUB>> ]
-"3731" [label = <(METHOD,MakeBiggestPart)<SUB>1090</SUB>> ]
-"3827" [label = <(METHOD_RETURN,int)<SUB>1090</SUB>> ]
-  "3736" -> "3746" 
-  "3744" -> "3751" 
-  "3749" -> "3754" 
-  "3754" -> "3762" 
-  "3825" -> "3827" 
-  "3738" -> "3736" 
+"3793" [label = <(&lt;operator&gt;.notEquals,firstBlock != 0)<SUB>1110</SUB>> ]
+"3797" [label = <(&lt;operator&gt;.logicalAnd,(selectedSize &gt; UINT64_C(0)) &amp;&amp; (selectedSize &lt; diskSize))<SUB>1111</SUB>> ]
+"3755" [label = <(&lt;operator&gt;.assignment,firstBlock = FindFirstAvailable(start))<SUB>1100</SUB>> ]
+"3798" [label = <(&lt;operator&gt;.greaterThan,selectedSize &gt; UINT64_C(0))<SUB>1111</SUB>> ]
+"3802" [label = <(&lt;operator&gt;.lessThan,selectedSize &lt; diskSize)<SUB>1111</SUB>> ]
+"3806" [label = <(&lt;operator&gt;.assignment,found = 1)<SUB>1112</SUB>> ]
+"3809" [label = <(MakePart,MakePart(i, selectedSegment, selectedSize, type, 0))<SUB>1113</SUB>> ]
+"3757" [label = <(FindFirstAvailable,FindFirstAvailable(start))<SUB>1100</SUB>> ]
+"3760" [label = <(&lt;operator&gt;.greaterThan,firstBlock &gt; UINT64_C(0))<SUB>1101</SUB>> ]
+"3800" [label = <(UINT64_C,UINT64_C(0))<SUB>1111</SUB>> ]
+"3817" [label = <(&lt;operator&gt;.assignment,found = 0)<SUB>1115</SUB>> ]
+"3762" [label = <(UINT64_C,UINT64_C(0))<SUB>1101</SUB>> ]
+"3765" [label = <(&lt;operator&gt;.assignment,lastBlock = FindLastInFree(firstBlock))<SUB>1102</SUB>> ]
+"3769" [label = <(&lt;operator&gt;.assignment,segmentSize = lastBlock - firstBlock + UINT64_C(1))<SUB>1103</SUB>> ]
+"3788" [label = <(&lt;operator&gt;.assignment,start = lastBlock + 1)<SUB>1108</SUB>> ]
+"3767" [label = <(FindLastInFree,FindLastInFree(firstBlock))<SUB>1102</SUB>> ]
+"3771" [label = <(&lt;operator&gt;.addition,lastBlock - firstBlock + UINT64_C(1))<SUB>1103</SUB>> ]
+"3778" [label = <(&lt;operator&gt;.greaterThan,segmentSize &gt; selectedSize)<SUB>1104</SUB>> ]
+"3790" [label = <(&lt;operator&gt;.addition,lastBlock + 1)<SUB>1108</SUB>> ]
+"3772" [label = <(&lt;operator&gt;.subtraction,lastBlock - firstBlock)<SUB>1103</SUB>> ]
+"3775" [label = <(UINT64_C,UINT64_C(1))<SUB>1103</SUB>> ]
+"3782" [label = <(&lt;operator&gt;.assignment,selectedSize = segmentSize)<SUB>1105</SUB>> ]
+"3785" [label = <(&lt;operator&gt;.assignment,selectedSegment = firstBlock)<SUB>1106</SUB>> ]
+"3726" [label = <(METHOD,MakeBiggestPart)<SUB>1089</SUB>> ]
+"3822" [label = <(METHOD_RETURN,int)<SUB>1089</SUB>> ]
+  "3731" -> "3741" 
+  "3739" -> "3746" 
+  "3744" -> "3749" 
+  "3749" -> "3757" 
+  "3820" -> "3822" 
+  "3733" -> "3731" 
+  "3741" -> "3739" 
   "3746" -> "3744" 
-  "3751" -> "3749" 
-  "3798" -> "3762" 
-  "3798" -> "3805" 
-  "3802" -> "3811" 
-  "3802" -> "3822" 
+  "3793" -> "3757" 
+  "3793" -> "3800" 
+  "3797" -> "3806" 
+  "3797" -> "3817" 
+  "3755" -> "3762" 
+  "3798" -> "3797" 
+  "3798" -> "3802" 
+  "3802" -> "3797" 
+  "3806" -> "3809" 
+  "3809" -> "3820" 
+  "3757" -> "3755" 
+  "3760" -> "3793" 
   "3760" -> "3767" 
-  "3803" -> "3802" 
-  "3803" -> "3807" 
-  "3807" -> "3802" 
-  "3811" -> "3814" 
-  "3814" -> "3825" 
+  "3800" -> "3798" 
+  "3817" -> "3820" 
   "3762" -> "3760" 
-  "3765" -> "3798" 
   "3765" -> "3772" 
-  "3805" -> "3803" 
-  "3822" -> "3825" 
+  "3769" -> "3778" 
+  "3788" -> "3793" 
   "3767" -> "3765" 
-  "3770" -> "3777" 
-  "3774" -> "3783" 
-  "3793" -> "3798" 
-  "3772" -> "3770" 
-  "3776" -> "3774" 
-  "3783" -> "3787" 
-  "3783" -> "3795" 
-  "3795" -> "3793" 
-  "3777" -> "3780" 
-  "3780" -> "3776" 
-  "3787" -> "3790" 
-  "3790" -> "3795" 
-  "3731" -> "3738" 
+  "3771" -> "3769" 
+  "3778" -> "3782" 
+  "3778" -> "3790" 
+  "3790" -> "3788" 
+  "3772" -> "3775" 
+  "3775" -> "3771" 
+  "3782" -> "3785" 
+  "3785" -> "3790" 
+  "3726" -> "3733" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/41-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/41-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/41-cfg.dot	2023-06-07 19:31:27.127407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/41-cfg.dot	2023-06-07 19:31:31.597407269 +0330
@@ -1,13 +1,13 @@
 digraph "DeletePartition" {  
-"3832" [label = <(Empty,partitions[i].Empty())<SUB>1123</SUB>> ]
-"3833" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].Empty)<SUB>1123</SUB>> ]
-"3834" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1123</SUB>> ]
-"3837" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1123</SUB>> ]
-"3829" [label = <(METHOD,DeletePartition)<SUB>1122</SUB>> ]
-"3838" [label = <(METHOD_RETURN,void)<SUB>1122</SUB>> ]
-  "3832" -> "3838" 
-  "3833" -> "3832" 
-  "3834" -> "3837" 
-  "3837" -> "3833" 
-  "3829" -> "3834" 
+"3827" [label = <(Empty,partitions[i].Empty())<SUB>1122</SUB>> ]
+"3828" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].Empty)<SUB>1122</SUB>> ]
+"3829" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1122</SUB>> ]
+"3832" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1122</SUB>> ]
+"3824" [label = <(METHOD,DeletePartition)<SUB>1121</SUB>> ]
+"3833" [label = <(METHOD_RETURN,void)<SUB>1121</SUB>> ]
+  "3827" -> "3833" 
+  "3828" -> "3827" 
+  "3829" -> "3832" 
+  "3832" -> "3828" 
+  "3824" -> "3829" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/42-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/42-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/42-cfg.dot	2023-06-07 19:31:27.127407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/42-cfg.dot	2023-06-07 19:31:31.607407268 +0330
@@ -1,64 +1,64 @@
 digraph "SetInclusionwChecks" {  
-"3846" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>1130</SUB>> ]
-"3907" [label = <(RETURN,return allOK;,return allOK;)<SUB>1147</SUB>> ]
-"3850" [label = <(IsLegal,IsLegal())<SUB>1132</SUB>> ]
-"3853" [label = <(&lt;operator&gt;.logicalOr,(inclStatus == PRIMARY) || (inclStatus == LOGICAL) || (inclStatus == NONE))<SUB>1133</SUB>> ]
-"3901" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Partition table is not currently in a valid state. Aborting change!\n&quot;)<SUB>1144</SUB>> ]
-"3904" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1145</SUB>> ]
-"3854" [label = <(&lt;operator&gt;.logicalOr,(inclStatus == PRIMARY) || (inclStatus == LOGICAL))<SUB>1133</SUB>> ]
-"3861" [label = <(&lt;operator&gt;.equals,inclStatus == NONE)<SUB>1133</SUB>> ]
-"3865" [label = <(&lt;operator&gt;.assignment,origValue = partitions[num].GetInclusion())<SUB>1134</SUB>> ]
-"3873" [label = <(SetInclusion,partitions[num].SetInclusion(inclStatus))<SUB>1135</SUB>> ]
-"3855" [label = <(&lt;operator&gt;.equals,inclStatus == PRIMARY)<SUB>1133</SUB>> ]
-"3858" [label = <(&lt;operator&gt;.equals,inclStatus == LOGICAL)<SUB>1133</SUB>> ]
-"3867" [label = <(GetInclusion,partitions[num].GetInclusion())<SUB>1134</SUB>> ]
-"3874" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetInclusion)<SUB>1135</SUB>> ]
-"3881" [label = <(&lt;operator&gt;.logicalNot,!IsLegal())<SUB>1136</SUB>> ]
-"3896" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Invalid partition inclusion code in BasicMBRData::SetInclusionwChecks()!\n&quot;)<SUB>1141</SUB>> ]
-"3868" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetInclusion)<SUB>1134</SUB>> ]
-"3875" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1135</SUB>> ]
-"3878" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1135</SUB>> ]
-"3882" [label = <(IsLegal,IsLegal())<SUB>1136</SUB>> ]
-"3884" [label = <(SetInclusion,partitions[num].SetInclusion(origValue))<SUB>1137</SUB>> ]
-"3891" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Specified change is not legal! Aborting change!\n&quot;)<SUB>1138</SUB>> ]
-"3869" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1134</SUB>> ]
-"3872" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1134</SUB>> ]
-"3885" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetInclusion)<SUB>1137</SUB>> ]
-"3886" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1137</SUB>> ]
-"3889" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1137</SUB>> ]
-"3840" [label = <(METHOD,SetInclusionwChecks)<SUB>1129</SUB>> ]
-"3909" [label = <(METHOD_RETURN,int)<SUB>1129</SUB>> ]
-  "3846" -> "3850" 
-  "3907" -> "3909" 
-  "3850" -> "3855" 
-  "3850" -> "3901" 
-  "3853" -> "3869" 
-  "3853" -> "3896" 
-  "3901" -> "3904" 
-  "3904" -> "3907" 
-  "3854" -> "3853" 
-  "3854" -> "3861" 
-  "3861" -> "3853" 
-  "3865" -> "3875" 
-  "3873" -> "3882" 
-  "3855" -> "3854" 
-  "3855" -> "3858" 
-  "3858" -> "3854" 
-  "3867" -> "3865" 
-  "3874" -> "3873" 
-  "3881" -> "3886" 
-  "3881" -> "3907" 
-  "3896" -> "3907" 
-  "3868" -> "3867" 
-  "3875" -> "3878" 
-  "3878" -> "3874" 
-  "3882" -> "3881" 
-  "3884" -> "3891" 
-  "3891" -> "3907" 
-  "3869" -> "3872" 
-  "3872" -> "3868" 
-  "3885" -> "3884" 
-  "3886" -> "3889" 
-  "3889" -> "3885" 
-  "3840" -> "3846" 
+"3841" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>1129</SUB>> ]
+"3902" [label = <(RETURN,return allOK;,return allOK;)<SUB>1146</SUB>> ]
+"3845" [label = <(IsLegal,IsLegal())<SUB>1131</SUB>> ]
+"3848" [label = <(&lt;operator&gt;.logicalOr,(inclStatus == PRIMARY) || (inclStatus == LOGICAL) || (inclStatus == NONE))<SUB>1132</SUB>> ]
+"3896" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Partition table is not currently in a valid state. Aborting change!\n&quot;)<SUB>1143</SUB>> ]
+"3899" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1144</SUB>> ]
+"3849" [label = <(&lt;operator&gt;.logicalOr,(inclStatus == PRIMARY) || (inclStatus == LOGICAL))<SUB>1132</SUB>> ]
+"3856" [label = <(&lt;operator&gt;.equals,inclStatus == NONE)<SUB>1132</SUB>> ]
+"3860" [label = <(&lt;operator&gt;.assignment,origValue = partitions[num].GetInclusion())<SUB>1133</SUB>> ]
+"3868" [label = <(SetInclusion,partitions[num].SetInclusion(inclStatus))<SUB>1134</SUB>> ]
+"3850" [label = <(&lt;operator&gt;.equals,inclStatus == PRIMARY)<SUB>1132</SUB>> ]
+"3853" [label = <(&lt;operator&gt;.equals,inclStatus == LOGICAL)<SUB>1132</SUB>> ]
+"3862" [label = <(GetInclusion,partitions[num].GetInclusion())<SUB>1133</SUB>> ]
+"3869" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetInclusion)<SUB>1134</SUB>> ]
+"3876" [label = <(&lt;operator&gt;.logicalNot,!IsLegal())<SUB>1135</SUB>> ]
+"3891" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Invalid partition inclusion code in BasicMBRData::SetInclusionwChecks()!\n&quot;)<SUB>1140</SUB>> ]
+"3863" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetInclusion)<SUB>1133</SUB>> ]
+"3870" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1134</SUB>> ]
+"3873" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1134</SUB>> ]
+"3877" [label = <(IsLegal,IsLegal())<SUB>1135</SUB>> ]
+"3879" [label = <(SetInclusion,partitions[num].SetInclusion(origValue))<SUB>1136</SUB>> ]
+"3886" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Specified change is not legal! Aborting change!\n&quot;)<SUB>1137</SUB>> ]
+"3864" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1133</SUB>> ]
+"3867" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1133</SUB>> ]
+"3880" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetInclusion)<SUB>1136</SUB>> ]
+"3881" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1136</SUB>> ]
+"3884" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1136</SUB>> ]
+"3835" [label = <(METHOD,SetInclusionwChecks)<SUB>1128</SUB>> ]
+"3904" [label = <(METHOD_RETURN,int)<SUB>1128</SUB>> ]
+  "3841" -> "3845" 
+  "3902" -> "3904" 
+  "3845" -> "3850" 
+  "3845" -> "3896" 
+  "3848" -> "3864" 
+  "3848" -> "3891" 
+  "3896" -> "3899" 
+  "3899" -> "3902" 
+  "3849" -> "3848" 
+  "3849" -> "3856" 
+  "3856" -> "3848" 
+  "3860" -> "3870" 
+  "3868" -> "3877" 
+  "3850" -> "3849" 
+  "3850" -> "3853" 
+  "3853" -> "3849" 
+  "3862" -> "3860" 
+  "3869" -> "3868" 
+  "3876" -> "3881" 
+  "3876" -> "3902" 
+  "3891" -> "3902" 
+  "3863" -> "3862" 
+  "3870" -> "3873" 
+  "3873" -> "3869" 
+  "3877" -> "3876" 
+  "3879" -> "3886" 
+  "3886" -> "3902" 
+  "3864" -> "3867" 
+  "3867" -> "3863" 
+  "3880" -> "3879" 
+  "3881" -> "3884" 
+  "3884" -> "3880" 
+  "3835" -> "3841" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/43-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/43-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/43-cfg.dot	2023-06-07 19:31:27.127407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/43-cfg.dot	2023-06-07 19:31:31.607407268 +0330
@@ -1,13 +1,13 @@
 digraph "RecomputeCHS" {  
-"3914" [label = <(RecomputeCHS,partitions[partNum].RecomputeCHS())<SUB>1156</SUB>> ]
-"3915" [label = <(&lt;operator&gt;.fieldAccess,partitions[partNum].RecomputeCHS)<SUB>1156</SUB>> ]
-"3916" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[partNum])<SUB>1156</SUB>> ]
-"3919" [label = <(FIELD_IDENTIFIER,RecomputeCHS,RecomputeCHS)<SUB>1156</SUB>> ]
-"3911" [label = <(METHOD,RecomputeCHS)<SUB>1155</SUB>> ]
-"3920" [label = <(METHOD_RETURN,void)<SUB>1155</SUB>> ]
-  "3914" -> "3920" 
-  "3915" -> "3914" 
-  "3916" -> "3919" 
-  "3919" -> "3915" 
-  "3911" -> "3916" 
+"3909" [label = <(RecomputeCHS,partitions[partNum].RecomputeCHS())<SUB>1155</SUB>> ]
+"3910" [label = <(&lt;operator&gt;.fieldAccess,partitions[partNum].RecomputeCHS)<SUB>1155</SUB>> ]
+"3911" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[partNum])<SUB>1155</SUB>> ]
+"3914" [label = <(FIELD_IDENTIFIER,RecomputeCHS,RecomputeCHS)<SUB>1155</SUB>> ]
+"3906" [label = <(METHOD,RecomputeCHS)<SUB>1154</SUB>> ]
+"3915" [label = <(METHOD_RETURN,void)<SUB>1154</SUB>> ]
+  "3909" -> "3915" 
+  "3910" -> "3909" 
+  "3911" -> "3914" 
+  "3914" -> "3910" 
+  "3906" -> "3911" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/44-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/44-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/44-cfg.dot	2023-06-07 19:31:27.127407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/44-cfg.dot	2023-06-07 19:31:31.607407268 +0330
@@ -1,19 +1,19 @@
 digraph "SortMBR" {  
-"3926" [label = <(&lt;operator&gt;.logicalAnd,(start &lt; MAX_MBR_PARTS) &amp;&amp; (start &gt;= 0))<SUB>1163</SUB>> ]
-"3927" [label = <(&lt;operator&gt;.lessThan,start &lt; MAX_MBR_PARTS)<SUB>1163</SUB>> ]
-"3930" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= 0)<SUB>1163</SUB>> ]
-"3934" [label = <(sort,sort(partitions + start, partitions + MAX_MBR_PARTS))<SUB>1164</SUB>> ]
-"3935" [label = <(&lt;operator&gt;.addition,partitions + start)<SUB>1164</SUB>> ]
-"3938" [label = <(&lt;operator&gt;.addition,partitions + MAX_MBR_PARTS)<SUB>1164</SUB>> ]
-"3922" [label = <(METHOD,SortMBR)<SUB>1162</SUB>> ]
-"3941" [label = <(METHOD_RETURN,void)<SUB>1162</SUB>> ]
-  "3926" -> "3941" 
-  "3926" -> "3935" 
-  "3927" -> "3926" 
-  "3927" -> "3930" 
-  "3930" -> "3926" 
-  "3934" -> "3941" 
-  "3935" -> "3938" 
-  "3938" -> "3934" 
-  "3922" -> "3927" 
+"3921" [label = <(&lt;operator&gt;.logicalAnd,(start &lt; MAX_MBR_PARTS) &amp;&amp; (start &gt;= 0))<SUB>1162</SUB>> ]
+"3922" [label = <(&lt;operator&gt;.lessThan,start &lt; MAX_MBR_PARTS)<SUB>1162</SUB>> ]
+"3925" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= 0)<SUB>1162</SUB>> ]
+"3929" [label = <(sort,sort(partitions + start, partitions + MAX_MBR_PARTS))<SUB>1163</SUB>> ]
+"3930" [label = <(&lt;operator&gt;.addition,partitions + start)<SUB>1163</SUB>> ]
+"3933" [label = <(&lt;operator&gt;.addition,partitions + MAX_MBR_PARTS)<SUB>1163</SUB>> ]
+"3917" [label = <(METHOD,SortMBR)<SUB>1161</SUB>> ]
+"3936" [label = <(METHOD_RETURN,void)<SUB>1161</SUB>> ]
+  "3921" -> "3936" 
+  "3921" -> "3930" 
+  "3922" -> "3921" 
+  "3922" -> "3925" 
+  "3925" -> "3921" 
+  "3929" -> "3936" 
+  "3930" -> "3933" 
+  "3933" -> "3929" 
+  "3917" -> "3922" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/45-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/45-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/45-cfg.dot	2023-06-07 19:31:27.127407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/45-cfg.dot	2023-06-07 19:31:31.607407268 +0330
@@ -1,108 +1,108 @@
 digraph "DeleteOversizedParts" {  
-"3947" [label = <(&lt;operator&gt;.assignment,num = 0)<SUB>1173</SUB>> ]
-"4033" [label = <(RETURN,return num;,return num;)<SUB>1184</SUB>> ]
-"3955" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1175</SUB>> ]
-"3958" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1175</SUB>> ]
-"3952" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1175</SUB>> ]
-"3962" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetStartLBA() &gt; diskSize) || (partitions[i].GetLastLBA() &gt; diskSize) ||\012 (partitions[i].GetStartLBA() &gt; UINT32_MAX) || (partitions[i].GetLengthLBA() &gt; UINT32_MAX))<SUB>1176</SUB>> ]
-"3963" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetStartLBA() &gt; diskSize) || (partitions[i].GetLastLBA() &gt; diskSize) ||\012 (partitions[i].GetStartLBA() &gt; UINT32_MAX))<SUB>1176</SUB>> ]
-"3989" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLengthLBA() &gt; UINT32_MAX)<SUB>1177</SUB>> ]
-"3998" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1 &lt;&lt; &quot;! Start = &quot;\012 &lt;&lt; partitions[i].GetStartLBA() &lt;&lt; &quot;, length = &quot; &lt;&lt; partitions[i].GetLengthLBA() &lt;&lt; &quot;\n&quot;)<SUB>1178</SUB>> ]
-"4025" [label = <(Empty,partitions[i].Empty())<SUB>1180</SUB>> ]
-"4031" [label = <(&lt;operator&gt;.postIncrement,num++)<SUB>1181</SUB>> ]
-"3964" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetStartLBA() &gt; diskSize) || (partitions[i].GetLastLBA() &gt; diskSize))<SUB>1176</SUB>> ]
-"3981" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; UINT32_MAX)<SUB>1177</SUB>> ]
-"3990" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1177</SUB>> ]
-"3999" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1 &lt;&lt; &quot;! Start = &quot;\012 &lt;&lt; partitions[i].GetStartLBA() &lt;&lt; &quot;, length = &quot; &lt;&lt; partitions[i].GetLengthLBA())<SUB>1178</SUB>> ]
-"4026" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].Empty)<SUB>1180</SUB>> ]
-"3965" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; diskSize)<SUB>1176</SUB>> ]
-"3973" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLastLBA() &gt; diskSize)<SUB>1176</SUB>> ]
-"3982" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1177</SUB>> ]
-"3991" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1177</SUB>> ]
-"4000" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1 &lt;&lt; &quot;! Start = &quot;\012 &lt;&lt; partitions[i].GetStartLBA() &lt;&lt; &quot;, length = &quot;)<SUB>1178</SUB>> ]
-"4018" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1179</SUB>> ]
-"4027" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1180</SUB>> ]
-"4030" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1180</SUB>> ]
-"3966" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1176</SUB>> ]
-"3974" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>1176</SUB>> ]
-"3983" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1177</SUB>> ]
-"3992" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1177</SUB>> ]
-"3995" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1177</SUB>> ]
-"4001" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1 &lt;&lt; &quot;! Start = &quot;\012 &lt;&lt; partitions[i].GetStartLBA())<SUB>1178</SUB>> ]
-"4019" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1179</SUB>> ]
-"3967" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1176</SUB>> ]
-"3975" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>1176</SUB>> ]
-"3984" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1177</SUB>> ]
-"3987" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1177</SUB>> ]
-"4002" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1 &lt;&lt; &quot;! Start = &quot;)<SUB>1178</SUB>> ]
-"4011" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1179</SUB>> ]
-"4020" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1179</SUB>> ]
-"4023" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1179</SUB>> ]
-"3968" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1176</SUB>> ]
-"3971" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1176</SUB>> ]
-"3976" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1176</SUB>> ]
-"3979" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>1176</SUB>> ]
-"4003" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1)<SUB>1178</SUB>> ]
-"4012" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1179</SUB>> ]
-"4004" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot;)<SUB>1178</SUB>> ]
-"4007" [label = <(&lt;operator&gt;.addition,i + 1)<SUB>1178</SUB>> ]
-"4013" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1179</SUB>> ]
-"4016" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1179</SUB>> ]
-"3943" [label = <(METHOD,DeleteOversizedParts)<SUB>1172</SUB>> ]
-"4035" [label = <(METHOD_RETURN,int)<SUB>1172</SUB>> ]
-  "3947" -> "3952" 
-  "4033" -> "4035" 
-  "3955" -> "3968" 
-  "3955" -> "4033" 
-  "3958" -> "3955" 
-  "3952" -> "3955" 
-  "3962" -> "4004" 
-  "3962" -> "3958" 
-  "3963" -> "3962" 
-  "3963" -> "3992" 
-  "3989" -> "3962" 
-  "3998" -> "4027" 
-  "4025" -> "4031" 
-  "4031" -> "3958" 
-  "3964" -> "3963" 
-  "3964" -> "3984" 
-  "3981" -> "3963" 
-  "3990" -> "3989" 
-  "3999" -> "3998" 
-  "4026" -> "4025" 
-  "3965" -> "3964" 
-  "3965" -> "3976" 
-  "3973" -> "3964" 
-  "3982" -> "3981" 
-  "3991" -> "3990" 
-  "4000" -> "4020" 
-  "4018" -> "3999" 
-  "4027" -> "4030" 
-  "4030" -> "4026" 
-  "3966" -> "3965" 
-  "3974" -> "3973" 
-  "3983" -> "3982" 
-  "3992" -> "3995" 
-  "3995" -> "3991" 
-  "4001" -> "4000" 
-  "4019" -> "4018" 
-  "3967" -> "3966" 
-  "3975" -> "3974" 
-  "3984" -> "3987" 
-  "3987" -> "3983" 
-  "4002" -> "4013" 
-  "4011" -> "4001" 
-  "4020" -> "4023" 
-  "4023" -> "4019" 
-  "3968" -> "3971" 
-  "3971" -> "3967" 
-  "3976" -> "3979" 
-  "3979" -> "3975" 
-  "4003" -> "4002" 
-  "4012" -> "4011" 
-  "4004" -> "4007" 
-  "4007" -> "4003" 
-  "4013" -> "4016" 
-  "4016" -> "4012" 
-  "3943" -> "3947" 
+"3942" [label = <(&lt;operator&gt;.assignment,num = 0)<SUB>1172</SUB>> ]
+"4028" [label = <(RETURN,return num;,return num;)<SUB>1183</SUB>> ]
+"3950" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1174</SUB>> ]
+"3953" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1174</SUB>> ]
+"3947" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1174</SUB>> ]
+"3957" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetStartLBA() &gt; diskSize) || (partitions[i].GetLastLBA() &gt; diskSize) ||\012 (partitions[i].GetStartLBA() &gt; UINT32_MAX) || (partitions[i].GetLengthLBA() &gt; UINT32_MAX))<SUB>1175</SUB>> ]
+"3958" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetStartLBA() &gt; diskSize) || (partitions[i].GetLastLBA() &gt; diskSize) ||\012 (partitions[i].GetStartLBA() &gt; UINT32_MAX))<SUB>1175</SUB>> ]
+"3984" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLengthLBA() &gt; UINT32_MAX)<SUB>1176</SUB>> ]
+"3993" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1 &lt;&lt; &quot;! Start = &quot;\012 &lt;&lt; partitions[i].GetStartLBA() &lt;&lt; &quot;, length = &quot; &lt;&lt; partitions[i].GetLengthLBA() &lt;&lt; &quot;\n&quot;)<SUB>1177</SUB>> ]
+"4020" [label = <(Empty,partitions[i].Empty())<SUB>1179</SUB>> ]
+"4026" [label = <(&lt;operator&gt;.postIncrement,num++)<SUB>1180</SUB>> ]
+"3959" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetStartLBA() &gt; diskSize) || (partitions[i].GetLastLBA() &gt; diskSize))<SUB>1175</SUB>> ]
+"3976" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; UINT32_MAX)<SUB>1176</SUB>> ]
+"3985" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1176</SUB>> ]
+"3994" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1 &lt;&lt; &quot;! Start = &quot;\012 &lt;&lt; partitions[i].GetStartLBA() &lt;&lt; &quot;, length = &quot; &lt;&lt; partitions[i].GetLengthLBA())<SUB>1177</SUB>> ]
+"4021" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].Empty)<SUB>1179</SUB>> ]
+"3960" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; diskSize)<SUB>1175</SUB>> ]
+"3968" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLastLBA() &gt; diskSize)<SUB>1175</SUB>> ]
+"3977" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1176</SUB>> ]
+"3986" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1176</SUB>> ]
+"3995" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1 &lt;&lt; &quot;! Start = &quot;\012 &lt;&lt; partitions[i].GetStartLBA() &lt;&lt; &quot;, length = &quot;)<SUB>1177</SUB>> ]
+"4013" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1178</SUB>> ]
+"4022" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1179</SUB>> ]
+"4025" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1179</SUB>> ]
+"3961" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1175</SUB>> ]
+"3969" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>1175</SUB>> ]
+"3978" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1176</SUB>> ]
+"3987" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1176</SUB>> ]
+"3990" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1176</SUB>> ]
+"3996" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1 &lt;&lt; &quot;! Start = &quot;\012 &lt;&lt; partitions[i].GetStartLBA())<SUB>1177</SUB>> ]
+"4014" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1178</SUB>> ]
+"3962" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1175</SUB>> ]
+"3970" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>1175</SUB>> ]
+"3979" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1176</SUB>> ]
+"3982" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1176</SUB>> ]
+"3997" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1 &lt;&lt; &quot;! Start = &quot;)<SUB>1177</SUB>> ]
+"4006" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1178</SUB>> ]
+"4015" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1178</SUB>> ]
+"4018" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1178</SUB>> ]
+"3963" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1175</SUB>> ]
+"3966" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1175</SUB>> ]
+"3971" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1175</SUB>> ]
+"3974" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>1175</SUB>> ]
+"3998" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot; &lt;&lt; i + 1)<SUB>1177</SUB>> ]
+"4007" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1178</SUB>> ]
+"3999" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;\aWarning: Deleting oversized partition #&quot;)<SUB>1177</SUB>> ]
+"4002" [label = <(&lt;operator&gt;.addition,i + 1)<SUB>1177</SUB>> ]
+"4008" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1178</SUB>> ]
+"4011" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1178</SUB>> ]
+"3938" [label = <(METHOD,DeleteOversizedParts)<SUB>1171</SUB>> ]
+"4030" [label = <(METHOD_RETURN,int)<SUB>1171</SUB>> ]
+  "3942" -> "3947" 
+  "4028" -> "4030" 
+  "3950" -> "3963" 
+  "3950" -> "4028" 
+  "3953" -> "3950" 
+  "3947" -> "3950" 
+  "3957" -> "3999" 
+  "3957" -> "3953" 
+  "3958" -> "3957" 
+  "3958" -> "3987" 
+  "3984" -> "3957" 
+  "3993" -> "4022" 
+  "4020" -> "4026" 
+  "4026" -> "3953" 
+  "3959" -> "3958" 
+  "3959" -> "3979" 
+  "3976" -> "3958" 
+  "3985" -> "3984" 
+  "3994" -> "3993" 
+  "4021" -> "4020" 
+  "3960" -> "3959" 
+  "3960" -> "3971" 
+  "3968" -> "3959" 
+  "3977" -> "3976" 
+  "3986" -> "3985" 
+  "3995" -> "4015" 
+  "4013" -> "3994" 
+  "4022" -> "4025" 
+  "4025" -> "4021" 
+  "3961" -> "3960" 
+  "3969" -> "3968" 
+  "3978" -> "3977" 
+  "3987" -> "3990" 
+  "3990" -> "3986" 
+  "3996" -> "3995" 
+  "4014" -> "4013" 
+  "3962" -> "3961" 
+  "3970" -> "3969" 
+  "3979" -> "3982" 
+  "3982" -> "3978" 
+  "3997" -> "4008" 
+  "4006" -> "3996" 
+  "4015" -> "4018" 
+  "4018" -> "4014" 
+  "3963" -> "3966" 
+  "3966" -> "3962" 
+  "3971" -> "3974" 
+  "3974" -> "3970" 
+  "3998" -> "3997" 
+  "4007" -> "4006" 
+  "3999" -> "4002" 
+  "4002" -> "3998" 
+  "4008" -> "4011" 
+  "4011" -> "4007" 
+  "3938" -> "3942" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/46-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/46-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/46-cfg.dot	2023-06-07 19:31:27.127407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/46-cfg.dot	2023-06-07 19:31:31.607407268 +0330
@@ -1,62 +1,62 @@
 digraph "DeleteExtendedParts" {  
-"4041" [label = <(&lt;operator&gt;.assignment,numDeleted = 0)<SUB>1190</SUB>> ]
-"4094" [label = <(RETURN,return numDeleted;,return numDeleted;)<SUB>1201</SUB>> ]
-"4050" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1193</SUB>> ]
-"4053" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1193</SUB>> ]
-"4047" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1193</SUB>> ]
-"4056" [label = <(&lt;operator&gt;.assignment,type = partitions[i].GetType())<SUB>1194</SUB>> ]
-"4058" [label = <(GetType,partitions[i].GetType())<SUB>1194</SUB>> ]
-"4065" [label = <(&lt;operator&gt;.logicalAnd,((type == 0x05) || (type == 0x0f) || (type == (0x85))) &amp;&amp;\012 (partitions[i].GetLengthLBA() &gt; 0))<SUB>1195</SUB>> ]
-"4059" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetType)<SUB>1194</SUB>> ]
-"4066" [label = <(&lt;operator&gt;.logicalOr,(type == 0x05) || (type == 0x0f) || (type == (0x85)))<SUB>1195</SUB>> ]
-"4077" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLengthLBA() &gt; 0)<SUB>1196</SUB>> ]
-"4086" [label = <(Empty,partitions[i].Empty())<SUB>1197</SUB>> ]
-"4092" [label = <(&lt;operator&gt;.postIncrement,numDeleted++)<SUB>1198</SUB>> ]
-"4060" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1194</SUB>> ]
-"4063" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>1194</SUB>> ]
-"4067" [label = <(&lt;operator&gt;.logicalOr,(type == 0x05) || (type == 0x0f))<SUB>1195</SUB>> ]
-"4074" [label = <(&lt;operator&gt;.equals,type == (0x85))<SUB>1195</SUB>> ]
-"4078" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1196</SUB>> ]
-"4087" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].Empty)<SUB>1197</SUB>> ]
-"4068" [label = <(&lt;operator&gt;.equals,type == 0x05)<SUB>1195</SUB>> ]
-"4071" [label = <(&lt;operator&gt;.equals,type == 0x0f)<SUB>1195</SUB>> ]
-"4079" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1196</SUB>> ]
-"4088" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1197</SUB>> ]
-"4091" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1197</SUB>> ]
-"4080" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1196</SUB>> ]
-"4083" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1196</SUB>> ]
-"4037" [label = <(METHOD,DeleteExtendedParts)<SUB>1189</SUB>> ]
-"4096" [label = <(METHOD_RETURN,int)<SUB>1189</SUB>> ]
-  "4041" -> "4047" 
-  "4094" -> "4096" 
-  "4050" -> "4060" 
-  "4050" -> "4094" 
-  "4053" -> "4050" 
-  "4047" -> "4050" 
-  "4056" -> "4068" 
-  "4058" -> "4056" 
-  "4065" -> "4088" 
-  "4065" -> "4053" 
-  "4059" -> "4058" 
-  "4066" -> "4065" 
-  "4066" -> "4080" 
-  "4077" -> "4065" 
-  "4086" -> "4092" 
-  "4092" -> "4053" 
-  "4060" -> "4063" 
-  "4063" -> "4059" 
-  "4067" -> "4066" 
-  "4067" -> "4074" 
-  "4074" -> "4066" 
-  "4078" -> "4077" 
-  "4087" -> "4086" 
-  "4068" -> "4067" 
-  "4068" -> "4071" 
-  "4071" -> "4067" 
-  "4079" -> "4078" 
-  "4088" -> "4091" 
-  "4091" -> "4087" 
-  "4080" -> "4083" 
-  "4083" -> "4079" 
-  "4037" -> "4041" 
+"4036" [label = <(&lt;operator&gt;.assignment,numDeleted = 0)<SUB>1189</SUB>> ]
+"4089" [label = <(RETURN,return numDeleted;,return numDeleted;)<SUB>1200</SUB>> ]
+"4045" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1192</SUB>> ]
+"4048" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1192</SUB>> ]
+"4042" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1192</SUB>> ]
+"4051" [label = <(&lt;operator&gt;.assignment,type = partitions[i].GetType())<SUB>1193</SUB>> ]
+"4053" [label = <(GetType,partitions[i].GetType())<SUB>1193</SUB>> ]
+"4060" [label = <(&lt;operator&gt;.logicalAnd,((type == 0x05) || (type == 0x0f) || (type == (0x85))) &amp;&amp;\012 (partitions[i].GetLengthLBA() &gt; 0))<SUB>1194</SUB>> ]
+"4054" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetType)<SUB>1193</SUB>> ]
+"4061" [label = <(&lt;operator&gt;.logicalOr,(type == 0x05) || (type == 0x0f) || (type == (0x85)))<SUB>1194</SUB>> ]
+"4072" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLengthLBA() &gt; 0)<SUB>1195</SUB>> ]
+"4081" [label = <(Empty,partitions[i].Empty())<SUB>1196</SUB>> ]
+"4087" [label = <(&lt;operator&gt;.postIncrement,numDeleted++)<SUB>1197</SUB>> ]
+"4055" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1193</SUB>> ]
+"4058" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>1193</SUB>> ]
+"4062" [label = <(&lt;operator&gt;.logicalOr,(type == 0x05) || (type == 0x0f))<SUB>1194</SUB>> ]
+"4069" [label = <(&lt;operator&gt;.equals,type == (0x85))<SUB>1194</SUB>> ]
+"4073" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1195</SUB>> ]
+"4082" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].Empty)<SUB>1196</SUB>> ]
+"4063" [label = <(&lt;operator&gt;.equals,type == 0x05)<SUB>1194</SUB>> ]
+"4066" [label = <(&lt;operator&gt;.equals,type == 0x0f)<SUB>1194</SUB>> ]
+"4074" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1195</SUB>> ]
+"4083" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1196</SUB>> ]
+"4086" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1196</SUB>> ]
+"4075" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1195</SUB>> ]
+"4078" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1195</SUB>> ]
+"4032" [label = <(METHOD,DeleteExtendedParts)<SUB>1188</SUB>> ]
+"4091" [label = <(METHOD_RETURN,int)<SUB>1188</SUB>> ]
+  "4036" -> "4042" 
+  "4089" -> "4091" 
+  "4045" -> "4055" 
+  "4045" -> "4089" 
+  "4048" -> "4045" 
+  "4042" -> "4045" 
+  "4051" -> "4063" 
+  "4053" -> "4051" 
+  "4060" -> "4083" 
+  "4060" -> "4048" 
+  "4054" -> "4053" 
+  "4061" -> "4060" 
+  "4061" -> "4075" 
+  "4072" -> "4060" 
+  "4081" -> "4087" 
+  "4087" -> "4048" 
+  "4055" -> "4058" 
+  "4058" -> "4054" 
+  "4062" -> "4061" 
+  "4062" -> "4069" 
+  "4069" -> "4061" 
+  "4073" -> "4072" 
+  "4082" -> "4081" 
+  "4063" -> "4062" 
+  "4063" -> "4066" 
+  "4066" -> "4062" 
+  "4074" -> "4073" 
+  "4083" -> "4086" 
+  "4086" -> "4082" 
+  "4075" -> "4078" 
+  "4078" -> "4074" 
+  "4032" -> "4036" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/47-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/47-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/47-cfg.dot	2023-06-07 19:31:27.127407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/47-cfg.dot	2023-06-07 19:31:31.607407268 +0330
@@ -1,80 +1,80 @@
 digraph "OmitOverlaps" {  
-"4107" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1208</SUB>> ]
-"4110" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1208</SUB>> ]
-"4104" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1208</SUB>> ]
-"4120" [label = <(&lt;operator&gt;.lessThan,j &lt; MAX_MBR_PARTS)<SUB>1209</SUB>> ]
-"4123" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>1209</SUB>> ]
-"4115" [label = <(&lt;operator&gt;.assignment,j = i + 1)<SUB>1209</SUB>> ]
-"4117" [label = <(&lt;operator&gt;.addition,i + 1)<SUB>1209</SUB>> ]
-"4127" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() != NONE) &amp;&amp;\012             partitions[i].DoTheyOverlap(partitions[j]))<SUB>1210</SUB>> ]
-"4128" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetInclusion() != NONE)<SUB>1210</SUB>> ]
-"4136" [label = <(DoTheyOverlap,partitions[i].DoTheyOverlap(partitions[j]))<SUB>1211</SUB>> ]
-"4129" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1210</SUB>> ]
-"4137" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].DoTheyOverlap)<SUB>1211</SUB>> ]
-"4142" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1211</SUB>> ]
-"4147" [label = <(&lt;operator&gt;.lessThan,partitions[i].GetLengthLBA() &lt; partitions[j].GetLengthLBA())<SUB>1212</SUB>> ]
-"4130" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1210</SUB>> ]
-"4138" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1211</SUB>> ]
-"4141" [label = <(FIELD_IDENTIFIER,DoTheyOverlap,DoTheyOverlap)<SUB>1211</SUB>> ]
-"4148" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1212</SUB>> ]
-"4154" [label = <(GetLengthLBA,partitions[j].GetLengthLBA())<SUB>1212</SUB>> ]
-"4161" [label = <(SetInclusion,partitions[i].SetInclusion(NONE))<SUB>1213</SUB>> ]
-"4131" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1210</SUB>> ]
-"4134" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1210</SUB>> ]
-"4149" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1212</SUB>> ]
-"4155" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetLengthLBA)<SUB>1212</SUB>> ]
-"4162" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1213</SUB>> ]
-"4170" [label = <(SetInclusion,partitions[j].SetInclusion(NONE))<SUB>1215</SUB>> ]
-"4150" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1212</SUB>> ]
-"4153" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1212</SUB>> ]
-"4156" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1212</SUB>> ]
-"4159" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1212</SUB>> ]
-"4163" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1213</SUB>> ]
-"4166" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1213</SUB>> ]
-"4171" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].SetInclusion)<SUB>1215</SUB>> ]
-"4172" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1215</SUB>> ]
-"4175" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1215</SUB>> ]
-"4098" [label = <(METHOD,OmitOverlaps)<SUB>1205</SUB>> ]
-"4177" [label = <(METHOD_RETURN,void)<SUB>1205</SUB>> ]
-  "4107" -> "4177" 
-  "4107" -> "4117" 
-  "4110" -> "4107" 
-  "4104" -> "4107" 
-  "4120" -> "4131" 
-  "4120" -> "4110" 
-  "4123" -> "4120" 
-  "4115" -> "4120" 
-  "4117" -> "4115" 
-  "4127" -> "4150" 
-  "4127" -> "4123" 
-  "4128" -> "4127" 
-  "4128" -> "4138" 
-  "4136" -> "4127" 
-  "4129" -> "4128" 
-  "4137" -> "4142" 
-  "4142" -> "4136" 
-  "4147" -> "4163" 
-  "4147" -> "4172" 
-  "4130" -> "4129" 
-  "4138" -> "4141" 
-  "4141" -> "4137" 
-  "4148" -> "4156" 
-  "4154" -> "4147" 
-  "4161" -> "4123" 
-  "4131" -> "4134" 
-  "4134" -> "4130" 
-  "4149" -> "4148" 
-  "4155" -> "4154" 
-  "4162" -> "4161" 
-  "4170" -> "4123" 
-  "4150" -> "4153" 
-  "4153" -> "4149" 
-  "4156" -> "4159" 
-  "4159" -> "4155" 
-  "4163" -> "4166" 
-  "4166" -> "4162" 
-  "4171" -> "4170" 
-  "4172" -> "4175" 
-  "4175" -> "4171" 
-  "4098" -> "4104" 
+"4102" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1207</SUB>> ]
+"4105" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1207</SUB>> ]
+"4099" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1207</SUB>> ]
+"4115" [label = <(&lt;operator&gt;.lessThan,j &lt; MAX_MBR_PARTS)<SUB>1208</SUB>> ]
+"4118" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>1208</SUB>> ]
+"4110" [label = <(&lt;operator&gt;.assignment,j = i + 1)<SUB>1208</SUB>> ]
+"4112" [label = <(&lt;operator&gt;.addition,i + 1)<SUB>1208</SUB>> ]
+"4122" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() != NONE) &amp;&amp;\012             partitions[i].DoTheyOverlap(partitions[j]))<SUB>1209</SUB>> ]
+"4123" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetInclusion() != NONE)<SUB>1209</SUB>> ]
+"4131" [label = <(DoTheyOverlap,partitions[i].DoTheyOverlap(partitions[j]))<SUB>1210</SUB>> ]
+"4124" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1209</SUB>> ]
+"4132" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].DoTheyOverlap)<SUB>1210</SUB>> ]
+"4137" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1210</SUB>> ]
+"4142" [label = <(&lt;operator&gt;.lessThan,partitions[i].GetLengthLBA() &lt; partitions[j].GetLengthLBA())<SUB>1211</SUB>> ]
+"4125" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1209</SUB>> ]
+"4133" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1210</SUB>> ]
+"4136" [label = <(FIELD_IDENTIFIER,DoTheyOverlap,DoTheyOverlap)<SUB>1210</SUB>> ]
+"4143" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1211</SUB>> ]
+"4149" [label = <(GetLengthLBA,partitions[j].GetLengthLBA())<SUB>1211</SUB>> ]
+"4156" [label = <(SetInclusion,partitions[i].SetInclusion(NONE))<SUB>1212</SUB>> ]
+"4126" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1209</SUB>> ]
+"4129" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1209</SUB>> ]
+"4144" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1211</SUB>> ]
+"4150" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetLengthLBA)<SUB>1211</SUB>> ]
+"4157" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1212</SUB>> ]
+"4165" [label = <(SetInclusion,partitions[j].SetInclusion(NONE))<SUB>1214</SUB>> ]
+"4145" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1211</SUB>> ]
+"4148" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1211</SUB>> ]
+"4151" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1211</SUB>> ]
+"4154" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1211</SUB>> ]
+"4158" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1212</SUB>> ]
+"4161" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1212</SUB>> ]
+"4166" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].SetInclusion)<SUB>1214</SUB>> ]
+"4167" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1214</SUB>> ]
+"4170" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1214</SUB>> ]
+"4093" [label = <(METHOD,OmitOverlaps)<SUB>1204</SUB>> ]
+"4172" [label = <(METHOD_RETURN,void)<SUB>1204</SUB>> ]
+  "4102" -> "4172" 
+  "4102" -> "4112" 
+  "4105" -> "4102" 
+  "4099" -> "4102" 
+  "4115" -> "4126" 
+  "4115" -> "4105" 
+  "4118" -> "4115" 
+  "4110" -> "4115" 
+  "4112" -> "4110" 
+  "4122" -> "4145" 
+  "4122" -> "4118" 
+  "4123" -> "4122" 
+  "4123" -> "4133" 
+  "4131" -> "4122" 
+  "4124" -> "4123" 
+  "4132" -> "4137" 
+  "4137" -> "4131" 
+  "4142" -> "4158" 
+  "4142" -> "4167" 
+  "4125" -> "4124" 
+  "4133" -> "4136" 
+  "4136" -> "4132" 
+  "4143" -> "4151" 
+  "4149" -> "4142" 
+  "4156" -> "4118" 
+  "4126" -> "4129" 
+  "4129" -> "4125" 
+  "4144" -> "4143" 
+  "4150" -> "4149" 
+  "4157" -> "4156" 
+  "4165" -> "4118" 
+  "4145" -> "4148" 
+  "4148" -> "4144" 
+  "4151" -> "4154" 
+  "4154" -> "4150" 
+  "4158" -> "4161" 
+  "4161" -> "4157" 
+  "4166" -> "4165" 
+  "4167" -> "4170" 
+  "4170" -> "4166" 
+  "4093" -> "4099" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/48-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/48-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/48-cfg.dot	2023-06-07 19:31:27.127407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/48-cfg.dot	2023-06-07 19:31:31.607407268 +0330
@@ -1,90 +1,90 @@
 digraph "MaximizeLogicals" {  
-"4184" [label = <(&lt;operator&gt;.assignment,earliestPart = 0)<SUB>1224</SUB>> ]
-"4187" [label = <(&lt;operator&gt;.assignment,earliestPartWas = NONE)<SUB>1224</SUB>> ]
-"4197" [label = <(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>1226</SUB>> ]
-"4200" [label = <(&lt;operator&gt;.postDecrement,i--)<SUB>1226</SUB>> ]
-"4249" [label = <(&lt;operator&gt;.logicalAnd,(NumPrimaries() &lt; 4) &amp;&amp; (partitions[earliestPart].GetInclusion() == LOGICAL))<SUB>1239</SUB>> ]
-"4192" [label = <(&lt;operator&gt;.assignment,i = MAX_MBR_PARTS - 1)<SUB>1226</SUB>> ]
-"4203" [label = <(UpdateCanBeLogical,UpdateCanBeLogical())<SUB>1227</SUB>> ]
-"4204" [label = <(&lt;operator&gt;.assignment,earliestPart = i)<SUB>1228</SUB>> ]
-"4250" [label = <(&lt;operator&gt;.lessThan,NumPrimaries() &lt; 4)<SUB>1239</SUB>> ]
-"4253" [label = <(&lt;operator&gt;.equals,partitions[earliestPart].GetInclusion() == LOGICAL)<SUB>1239</SUB>> ]
-"4262" [label = <(SetInclusion,partitions[earliestPart].SetInclusion(earliestPartWas))<SUB>1240</SUB>> ]
-"4194" [label = <(&lt;operator&gt;.subtraction,MAX_MBR_PARTS - 1)<SUB>1226</SUB>> ]
-"4208" [label = <(CanBeLogical,partitions[i].CanBeLogical())<SUB>1229</SUB>> ]
-"4251" [label = <(NumPrimaries,NumPrimaries())<SUB>1239</SUB>> ]
-"4254" [label = <(GetInclusion,partitions[earliestPart].GetInclusion())<SUB>1239</SUB>> ]
-"4263" [label = <(&lt;operator&gt;.fieldAccess,partitions[earliestPart].SetInclusion)<SUB>1240</SUB>> ]
-"4209" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].CanBeLogical)<SUB>1229</SUB>> ]
-"4215" [label = <(SetInclusion,partitions[i].SetInclusion(LOGICAL))<SUB>1230</SUB>> ]
-"4255" [label = <(&lt;operator&gt;.fieldAccess,partitions[earliestPart].GetInclusion)<SUB>1239</SUB>> ]
-"4264" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[earliestPart])<SUB>1240</SUB>> ]
-"4267" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1240</SUB>> ]
-"4210" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1229</SUB>> ]
-"4213" [label = <(FIELD_IDENTIFIER,CanBeLogical,CanBeLogical)<SUB>1229</SUB>> ]
-"4216" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1230</SUB>> ]
-"4256" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[earliestPart])<SUB>1239</SUB>> ]
-"4259" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1239</SUB>> ]
-"4217" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1230</SUB>> ]
-"4220" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1230</SUB>> ]
-"4225" [label = <(CanBePrimary,partitions[i].CanBePrimary())<SUB>1231</SUB>> ]
-"4226" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].CanBePrimary)<SUB>1231</SUB>> ]
-"4232" [label = <(SetInclusion,partitions[i].SetInclusion(PRIMARY))<SUB>1232</SUB>> ]
-"4227" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1231</SUB>> ]
-"4230" [label = <(FIELD_IDENTIFIER,CanBePrimary,CanBePrimary)<SUB>1231</SUB>> ]
-"4233" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1232</SUB>> ]
-"4241" [label = <(SetInclusion,partitions[i].SetInclusion(NONE))<SUB>1234</SUB>> ]
-"4234" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1232</SUB>> ]
-"4237" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1232</SUB>> ]
-"4242" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1234</SUB>> ]
-"4243" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1234</SUB>> ]
-"4246" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1234</SUB>> ]
-"4179" [label = <(METHOD,MaximizeLogicals)<SUB>1223</SUB>> ]
-"4269" [label = <(METHOD_RETURN,void)<SUB>1223</SUB>> ]
-  "4184" -> "4187" 
-  "4187" -> "4194" 
-  "4197" -> "4203" 
-  "4197" -> "4251" 
-  "4200" -> "4197" 
-  "4249" -> "4269" 
-  "4249" -> "4264" 
-  "4192" -> "4197" 
-  "4203" -> "4204" 
-  "4204" -> "4210" 
+"4179" [label = <(&lt;operator&gt;.assignment,earliestPart = 0)<SUB>1223</SUB>> ]
+"4182" [label = <(&lt;operator&gt;.assignment,earliestPartWas = NONE)<SUB>1223</SUB>> ]
+"4192" [label = <(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>1225</SUB>> ]
+"4195" [label = <(&lt;operator&gt;.postDecrement,i--)<SUB>1225</SUB>> ]
+"4244" [label = <(&lt;operator&gt;.logicalAnd,(NumPrimaries() &lt; 4) &amp;&amp; (partitions[earliestPart].GetInclusion() == LOGICAL))<SUB>1238</SUB>> ]
+"4187" [label = <(&lt;operator&gt;.assignment,i = MAX_MBR_PARTS - 1)<SUB>1225</SUB>> ]
+"4198" [label = <(UpdateCanBeLogical,UpdateCanBeLogical())<SUB>1226</SUB>> ]
+"4199" [label = <(&lt;operator&gt;.assignment,earliestPart = i)<SUB>1227</SUB>> ]
+"4245" [label = <(&lt;operator&gt;.lessThan,NumPrimaries() &lt; 4)<SUB>1238</SUB>> ]
+"4248" [label = <(&lt;operator&gt;.equals,partitions[earliestPart].GetInclusion() == LOGICAL)<SUB>1238</SUB>> ]
+"4257" [label = <(SetInclusion,partitions[earliestPart].SetInclusion(earliestPartWas))<SUB>1239</SUB>> ]
+"4189" [label = <(&lt;operator&gt;.subtraction,MAX_MBR_PARTS - 1)<SUB>1225</SUB>> ]
+"4203" [label = <(CanBeLogical,partitions[i].CanBeLogical())<SUB>1228</SUB>> ]
+"4246" [label = <(NumPrimaries,NumPrimaries())<SUB>1238</SUB>> ]
+"4249" [label = <(GetInclusion,partitions[earliestPart].GetInclusion())<SUB>1238</SUB>> ]
+"4258" [label = <(&lt;operator&gt;.fieldAccess,partitions[earliestPart].SetInclusion)<SUB>1239</SUB>> ]
+"4204" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].CanBeLogical)<SUB>1228</SUB>> ]
+"4210" [label = <(SetInclusion,partitions[i].SetInclusion(LOGICAL))<SUB>1229</SUB>> ]
+"4250" [label = <(&lt;operator&gt;.fieldAccess,partitions[earliestPart].GetInclusion)<SUB>1238</SUB>> ]
+"4259" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[earliestPart])<SUB>1239</SUB>> ]
+"4262" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1239</SUB>> ]
+"4205" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1228</SUB>> ]
+"4208" [label = <(FIELD_IDENTIFIER,CanBeLogical,CanBeLogical)<SUB>1228</SUB>> ]
+"4211" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1229</SUB>> ]
+"4251" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[earliestPart])<SUB>1238</SUB>> ]
+"4254" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1238</SUB>> ]
+"4212" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1229</SUB>> ]
+"4215" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1229</SUB>> ]
+"4220" [label = <(CanBePrimary,partitions[i].CanBePrimary())<SUB>1230</SUB>> ]
+"4221" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].CanBePrimary)<SUB>1230</SUB>> ]
+"4227" [label = <(SetInclusion,partitions[i].SetInclusion(PRIMARY))<SUB>1231</SUB>> ]
+"4222" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1230</SUB>> ]
+"4225" [label = <(FIELD_IDENTIFIER,CanBePrimary,CanBePrimary)<SUB>1230</SUB>> ]
+"4228" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1231</SUB>> ]
+"4236" [label = <(SetInclusion,partitions[i].SetInclusion(NONE))<SUB>1233</SUB>> ]
+"4229" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1231</SUB>> ]
+"4232" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1231</SUB>> ]
+"4237" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1233</SUB>> ]
+"4238" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1233</SUB>> ]
+"4241" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1233</SUB>> ]
+"4174" [label = <(METHOD,MaximizeLogicals)<SUB>1222</SUB>> ]
+"4264" [label = <(METHOD_RETURN,void)<SUB>1222</SUB>> ]
+  "4179" -> "4182" 
+  "4182" -> "4189" 
+  "4192" -> "4198" 
+  "4192" -> "4246" 
+  "4195" -> "4192" 
+  "4244" -> "4264" 
+  "4244" -> "4259" 
+  "4187" -> "4192" 
+  "4198" -> "4199" 
+  "4199" -> "4205" 
+  "4245" -> "4244" 
+  "4245" -> "4251" 
+  "4248" -> "4244" 
+  "4257" -> "4264" 
+  "4189" -> "4187" 
+  "4203" -> "4212" 
+  "4203" -> "4222" 
+  "4246" -> "4245" 
+  "4249" -> "4248" 
+  "4258" -> "4257" 
+  "4204" -> "4203" 
+  "4210" -> "4195" 
   "4250" -> "4249" 
-  "4250" -> "4256" 
-  "4253" -> "4249" 
-  "4262" -> "4269" 
-  "4194" -> "4192" 
-  "4208" -> "4217" 
-  "4208" -> "4227" 
-  "4251" -> "4250" 
-  "4254" -> "4253" 
-  "4263" -> "4262" 
-  "4209" -> "4208" 
-  "4215" -> "4200" 
-  "4255" -> "4254" 
-  "4264" -> "4267" 
-  "4267" -> "4263" 
-  "4210" -> "4213" 
-  "4213" -> "4209" 
-  "4216" -> "4215" 
-  "4256" -> "4259" 
-  "4259" -> "4255" 
-  "4217" -> "4220" 
-  "4220" -> "4216" 
-  "4225" -> "4234" 
-  "4225" -> "4243" 
-  "4226" -> "4225" 
-  "4232" -> "4200" 
-  "4227" -> "4230" 
-  "4230" -> "4226" 
-  "4233" -> "4232" 
-  "4241" -> "4200" 
-  "4234" -> "4237" 
-  "4237" -> "4233" 
-  "4242" -> "4241" 
-  "4243" -> "4246" 
-  "4246" -> "4242" 
-  "4179" -> "4184" 
+  "4259" -> "4262" 
+  "4262" -> "4258" 
+  "4205" -> "4208" 
+  "4208" -> "4204" 
+  "4211" -> "4210" 
+  "4251" -> "4254" 
+  "4254" -> "4250" 
+  "4212" -> "4215" 
+  "4215" -> "4211" 
+  "4220" -> "4229" 
+  "4220" -> "4238" 
+  "4221" -> "4220" 
+  "4227" -> "4195" 
+  "4222" -> "4225" 
+  "4225" -> "4221" 
+  "4228" -> "4227" 
+  "4236" -> "4195" 
+  "4229" -> "4232" 
+  "4232" -> "4228" 
+  "4237" -> "4236" 
+  "4238" -> "4241" 
+  "4241" -> "4237" 
+  "4174" -> "4179" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/49-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/49-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/49-cfg.dot	2023-06-07 19:31:27.127407668 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/49-cfg.dot	2023-06-07 19:31:31.607407268 +0330
@@ -1,55 +1,55 @@
 digraph "MaximizePrimaries" {  
-"4275" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1245</SUB>> ]
-"4278" [label = <(&lt;operator&gt;.assignment,num = NumPrimaries())<SUB>1247</SUB>> ]
-"4280" [label = <(NumPrimaries,NumPrimaries())<SUB>1247</SUB>> ]
-"4282" [label = <(&lt;operator&gt;.logicalAnd,(num &lt; 4) &amp;&amp; (i &lt; MAX_MBR_PARTS))<SUB>1248</SUB>> ]
-"4283" [label = <(&lt;operator&gt;.lessThan,num &lt; 4)<SUB>1248</SUB>> ]
-"4286" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1248</SUB>> ]
-"4317" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1254</SUB>> ]
-"4291" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == NONE) &amp;&amp; (partitions[i].CanBePrimary()))<SUB>1249</SUB>> ]
-"4292" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == NONE)<SUB>1249</SUB>> ]
-"4300" [label = <(CanBePrimary,partitions[i].CanBePrimary())<SUB>1249</SUB>> ]
-"4307" [label = <(SetInclusion,partitions[i].SetInclusion(PRIMARY))<SUB>1250</SUB>> ]
-"4314" [label = <(&lt;operator&gt;.postIncrement,num++)<SUB>1251</SUB>> ]
-"4316" [label = <(UpdateCanBeLogical,UpdateCanBeLogical())<SUB>1252</SUB>> ]
-"4293" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1249</SUB>> ]
-"4301" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].CanBePrimary)<SUB>1249</SUB>> ]
-"4308" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1250</SUB>> ]
-"4294" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1249</SUB>> ]
-"4302" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1249</SUB>> ]
-"4305" [label = <(FIELD_IDENTIFIER,CanBePrimary,CanBePrimary)<SUB>1249</SUB>> ]
-"4309" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1250</SUB>> ]
-"4312" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1250</SUB>> ]
-"4295" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1249</SUB>> ]
-"4298" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1249</SUB>> ]
-"4271" [label = <(METHOD,MaximizePrimaries)<SUB>1244</SUB>> ]
-"4319" [label = <(METHOD_RETURN,void)<SUB>1244</SUB>> ]
-  "4275" -> "4280" 
-  "4278" -> "4283" 
-  "4280" -> "4278" 
-  "4282" -> "4319" 
-  "4282" -> "4295" 
-  "4283" -> "4282" 
-  "4283" -> "4286" 
-  "4286" -> "4282" 
-  "4317" -> "4283" 
-  "4291" -> "4309" 
-  "4291" -> "4317" 
-  "4292" -> "4291" 
-  "4292" -> "4302" 
-  "4300" -> "4291" 
-  "4307" -> "4314" 
-  "4314" -> "4316" 
-  "4316" -> "4317" 
-  "4293" -> "4292" 
-  "4301" -> "4300" 
-  "4308" -> "4307" 
-  "4294" -> "4293" 
-  "4302" -> "4305" 
-  "4305" -> "4301" 
-  "4309" -> "4312" 
-  "4312" -> "4308" 
-  "4295" -> "4298" 
-  "4298" -> "4294" 
-  "4271" -> "4275" 
+"4270" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1244</SUB>> ]
+"4273" [label = <(&lt;operator&gt;.assignment,num = NumPrimaries())<SUB>1246</SUB>> ]
+"4275" [label = <(NumPrimaries,NumPrimaries())<SUB>1246</SUB>> ]
+"4277" [label = <(&lt;operator&gt;.logicalAnd,(num &lt; 4) &amp;&amp; (i &lt; MAX_MBR_PARTS))<SUB>1247</SUB>> ]
+"4278" [label = <(&lt;operator&gt;.lessThan,num &lt; 4)<SUB>1247</SUB>> ]
+"4281" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1247</SUB>> ]
+"4312" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1253</SUB>> ]
+"4286" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == NONE) &amp;&amp; (partitions[i].CanBePrimary()))<SUB>1248</SUB>> ]
+"4287" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == NONE)<SUB>1248</SUB>> ]
+"4295" [label = <(CanBePrimary,partitions[i].CanBePrimary())<SUB>1248</SUB>> ]
+"4302" [label = <(SetInclusion,partitions[i].SetInclusion(PRIMARY))<SUB>1249</SUB>> ]
+"4309" [label = <(&lt;operator&gt;.postIncrement,num++)<SUB>1250</SUB>> ]
+"4311" [label = <(UpdateCanBeLogical,UpdateCanBeLogical())<SUB>1251</SUB>> ]
+"4288" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1248</SUB>> ]
+"4296" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].CanBePrimary)<SUB>1248</SUB>> ]
+"4303" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1249</SUB>> ]
+"4289" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1248</SUB>> ]
+"4297" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1248</SUB>> ]
+"4300" [label = <(FIELD_IDENTIFIER,CanBePrimary,CanBePrimary)<SUB>1248</SUB>> ]
+"4304" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1249</SUB>> ]
+"4307" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1249</SUB>> ]
+"4290" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1248</SUB>> ]
+"4293" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1248</SUB>> ]
+"4266" [label = <(METHOD,MaximizePrimaries)<SUB>1243</SUB>> ]
+"4314" [label = <(METHOD_RETURN,void)<SUB>1243</SUB>> ]
+  "4270" -> "4275" 
+  "4273" -> "4278" 
+  "4275" -> "4273" 
+  "4277" -> "4314" 
+  "4277" -> "4290" 
+  "4278" -> "4277" 
+  "4278" -> "4281" 
+  "4281" -> "4277" 
+  "4312" -> "4278" 
+  "4286" -> "4304" 
+  "4286" -> "4312" 
+  "4287" -> "4286" 
+  "4287" -> "4297" 
+  "4295" -> "4286" 
+  "4302" -> "4309" 
+  "4309" -> "4311" 
+  "4311" -> "4312" 
+  "4288" -> "4287" 
+  "4296" -> "4295" 
+  "4303" -> "4302" 
+  "4289" -> "4288" 
+  "4297" -> "4300" 
+  "4300" -> "4296" 
+  "4304" -> "4307" 
+  "4307" -> "4303" 
+  "4290" -> "4293" 
+  "4293" -> "4289" 
+  "4266" -> "4270" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/50-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/50-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/50-cfg.dot	2023-06-07 19:31:27.137407666 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/50-cfg.dot	2023-06-07 19:31:31.607407268 +0330
@@ -1,46 +1,46 @@
 digraph "TrimPrimaries" {  
-"4326" [label = <(&lt;operator&gt;.assignment,i = MAX_MBR_PARTS - 1)<SUB>1261</SUB>> ]
-"4331" [label = <(&lt;operator&gt;.assignment,numToDelete = NumPrimaries() - 4)<SUB>1263</SUB>> ]
-"4328" [label = <(&lt;operator&gt;.subtraction,MAX_MBR_PARTS - 1)<SUB>1261</SUB>> ]
-"4333" [label = <(&lt;operator&gt;.subtraction,NumPrimaries() - 4)<SUB>1263</SUB>> ]
-"4337" [label = <(&lt;operator&gt;.logicalAnd,(numToDelete &gt; 0) &amp;&amp; (i &gt;= 0))<SUB>1264</SUB>> ]
-"4334" [label = <(NumPrimaries,NumPrimaries())<SUB>1263</SUB>> ]
-"4338" [label = <(&lt;operator&gt;.greaterThan,numToDelete &gt; 0)<SUB>1264</SUB>> ]
-"4341" [label = <(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>1264</SUB>> ]
-"4364" [label = <(&lt;operator&gt;.postDecrement,i--)<SUB>1269</SUB>> ]
-"4346" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>1265</SUB>> ]
-"4347" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1265</SUB>> ]
-"4355" [label = <(SetInclusion,partitions[i].SetInclusion(NONE))<SUB>1266</SUB>> ]
-"4362" [label = <(&lt;operator&gt;.postDecrement,numToDelete--)<SUB>1267</SUB>> ]
-"4348" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1265</SUB>> ]
-"4356" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1266</SUB>> ]
-"4349" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1265</SUB>> ]
-"4352" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1265</SUB>> ]
-"4357" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1266</SUB>> ]
-"4360" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1266</SUB>> ]
-"4321" [label = <(METHOD,TrimPrimaries)<SUB>1260</SUB>> ]
-"4366" [label = <(METHOD_RETURN,void)<SUB>1260</SUB>> ]
-  "4326" -> "4334" 
-  "4331" -> "4338" 
+"4321" [label = <(&lt;operator&gt;.assignment,i = MAX_MBR_PARTS - 1)<SUB>1260</SUB>> ]
+"4326" [label = <(&lt;operator&gt;.assignment,numToDelete = NumPrimaries() - 4)<SUB>1262</SUB>> ]
+"4323" [label = <(&lt;operator&gt;.subtraction,MAX_MBR_PARTS - 1)<SUB>1260</SUB>> ]
+"4328" [label = <(&lt;operator&gt;.subtraction,NumPrimaries() - 4)<SUB>1262</SUB>> ]
+"4332" [label = <(&lt;operator&gt;.logicalAnd,(numToDelete &gt; 0) &amp;&amp; (i &gt;= 0))<SUB>1263</SUB>> ]
+"4329" [label = <(NumPrimaries,NumPrimaries())<SUB>1262</SUB>> ]
+"4333" [label = <(&lt;operator&gt;.greaterThan,numToDelete &gt; 0)<SUB>1263</SUB>> ]
+"4336" [label = <(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>1263</SUB>> ]
+"4359" [label = <(&lt;operator&gt;.postDecrement,i--)<SUB>1268</SUB>> ]
+"4341" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>1264</SUB>> ]
+"4342" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1264</SUB>> ]
+"4350" [label = <(SetInclusion,partitions[i].SetInclusion(NONE))<SUB>1265</SUB>> ]
+"4357" [label = <(&lt;operator&gt;.postDecrement,numToDelete--)<SUB>1266</SUB>> ]
+"4343" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1264</SUB>> ]
+"4351" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1265</SUB>> ]
+"4344" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1264</SUB>> ]
+"4347" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1264</SUB>> ]
+"4352" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1265</SUB>> ]
+"4355" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1265</SUB>> ]
+"4316" [label = <(METHOD,TrimPrimaries)<SUB>1259</SUB>> ]
+"4361" [label = <(METHOD_RETURN,void)<SUB>1259</SUB>> ]
+  "4321" -> "4329" 
+  "4326" -> "4333" 
+  "4323" -> "4321" 
   "4328" -> "4326" 
-  "4333" -> "4331" 
-  "4337" -> "4366" 
-  "4337" -> "4349" 
-  "4334" -> "4333" 
-  "4338" -> "4337" 
-  "4338" -> "4341" 
-  "4341" -> "4337" 
-  "4364" -> "4338" 
-  "4346" -> "4357" 
-  "4346" -> "4364" 
-  "4347" -> "4346" 
-  "4355" -> "4362" 
-  "4362" -> "4364" 
-  "4348" -> "4347" 
-  "4356" -> "4355" 
-  "4349" -> "4352" 
-  "4352" -> "4348" 
-  "4357" -> "4360" 
-  "4360" -> "4356" 
-  "4321" -> "4328" 
+  "4332" -> "4361" 
+  "4332" -> "4344" 
+  "4329" -> "4328" 
+  "4333" -> "4332" 
+  "4333" -> "4336" 
+  "4336" -> "4332" 
+  "4359" -> "4333" 
+  "4341" -> "4352" 
+  "4341" -> "4359" 
+  "4342" -> "4341" 
+  "4350" -> "4357" 
+  "4357" -> "4359" 
+  "4343" -> "4342" 
+  "4351" -> "4350" 
+  "4344" -> "4347" 
+  "4347" -> "4343" 
+  "4352" -> "4355" 
+  "4355" -> "4351" 
+  "4316" -> "4323" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/51-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/51-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/51-cfg.dot	2023-06-07 19:31:27.137407666 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/51-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,88 +1,88 @@
 digraph "MakeLogicalsContiguous" {  
-"4374" [label = <(&lt;operator&gt;.assignment,firstLogicalLBA = FirstLogicalLBA())<SUB>1280</SUB>> ]
-"4377" [label = <(&lt;operator&gt;.assignment,lastLogicalLBA = LastLogicalLBA())<SUB>1281</SUB>> ]
-"4376" [label = <(FirstLogicalLBA,FirstLogicalLBA())<SUB>1280</SUB>> ]
-"4379" [label = <(LastLogicalLBA,LastLogicalLBA())<SUB>1281</SUB>> ]
-"4385" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1282</SUB>> ]
-"4388" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1282</SUB>> ]
-"4382" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1282</SUB>> ]
-"4392" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == PRIMARY) &amp;&amp;\012 (partitions[i].GetStartLBA() &gt;= firstLogicalLBA) &amp;&amp;\012 (partitions[i].GetLastLBA() &lt;= lastLogicalLBA))<SUB>1283</SUB>> ]
-"4393" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == PRIMARY) &amp;&amp;\012 (partitions[i].GetStartLBA() &gt;= firstLogicalLBA))<SUB>1283</SUB>> ]
-"4410" [label = <(&lt;operator&gt;.lessEqualsThan,partitions[i].GetLastLBA() &lt;= lastLogicalLBA)<SUB>1285</SUB>> ]
-"4394" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>1283</SUB>> ]
-"4402" [label = <(&lt;operator&gt;.greaterEqualsThan,partitions[i].GetStartLBA() &gt;= firstLogicalLBA)<SUB>1284</SUB>> ]
-"4411" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>1285</SUB>> ]
-"4420" [label = <(&lt;operator&gt;.equals,SectorUsedAs(partitions[i].GetStartLBA() - 1) == NONE)<SUB>1286</SUB>> ]
-"4395" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1283</SUB>> ]
-"4403" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1284</SUB>> ]
-"4412" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>1285</SUB>> ]
-"4421" [label = <(SectorUsedAs,SectorUsedAs(partitions[i].GetStartLBA() - 1))<SUB>1286</SUB>> ]
-"4432" [label = <(SetInclusion,partitions[i].SetInclusion(LOGICAL))<SUB>1287</SUB>> ]
-"4396" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1283</SUB>> ]
-"4404" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1284</SUB>> ]
-"4413" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1285</SUB>> ]
-"4416" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>1285</SUB>> ]
-"4422" [label = <(&lt;operator&gt;.subtraction,partitions[i].GetStartLBA() - 1)<SUB>1286</SUB>> ]
-"4433" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1287</SUB>> ]
-"4441" [label = <(SetInclusion,partitions[i].SetInclusion(NONE))<SUB>1289</SUB>> ]
-"4397" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1283</SUB>> ]
-"4400" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1283</SUB>> ]
-"4405" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1284</SUB>> ]
-"4408" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1284</SUB>> ]
-"4423" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1286</SUB>> ]
-"4434" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1287</SUB>> ]
-"4437" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1287</SUB>> ]
-"4442" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1289</SUB>> ]
-"4424" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1286</SUB>> ]
-"4443" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1289</SUB>> ]
-"4446" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1289</SUB>> ]
-"4425" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1286</SUB>> ]
-"4428" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1286</SUB>> ]
-"4368" [label = <(METHOD,MakeLogicalsContiguous)<SUB>1276</SUB>> ]
-"4448" [label = <(METHOD_RETURN,void)<SUB>1276</SUB>> ]
-  "4374" -> "4379" 
-  "4377" -> "4382" 
-  "4376" -> "4374" 
-  "4379" -> "4377" 
-  "4385" -> "4448" 
-  "4385" -> "4397" 
-  "4388" -> "4385" 
-  "4382" -> "4385" 
-  "4392" -> "4425" 
-  "4392" -> "4388" 
-  "4393" -> "4392" 
-  "4393" -> "4413" 
-  "4410" -> "4392" 
-  "4394" -> "4393" 
-  "4394" -> "4405" 
-  "4402" -> "4393" 
-  "4411" -> "4410" 
-  "4420" -> "4434" 
-  "4420" -> "4443" 
-  "4395" -> "4394" 
-  "4403" -> "4402" 
-  "4412" -> "4411" 
-  "4421" -> "4420" 
-  "4432" -> "4388" 
-  "4396" -> "4395" 
-  "4404" -> "4403" 
-  "4413" -> "4416" 
-  "4416" -> "4412" 
-  "4422" -> "4421" 
-  "4433" -> "4432" 
-  "4441" -> "4388" 
-  "4397" -> "4400" 
-  "4400" -> "4396" 
-  "4405" -> "4408" 
-  "4408" -> "4404" 
-  "4423" -> "4422" 
-  "4434" -> "4437" 
-  "4437" -> "4433" 
-  "4442" -> "4441" 
-  "4424" -> "4423" 
-  "4443" -> "4446" 
-  "4446" -> "4442" 
-  "4425" -> "4428" 
-  "4428" -> "4424" 
-  "4368" -> "4376" 
+"4369" [label = <(&lt;operator&gt;.assignment,firstLogicalLBA = FirstLogicalLBA())<SUB>1279</SUB>> ]
+"4372" [label = <(&lt;operator&gt;.assignment,lastLogicalLBA = LastLogicalLBA())<SUB>1280</SUB>> ]
+"4371" [label = <(FirstLogicalLBA,FirstLogicalLBA())<SUB>1279</SUB>> ]
+"4374" [label = <(LastLogicalLBA,LastLogicalLBA())<SUB>1280</SUB>> ]
+"4380" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1281</SUB>> ]
+"4383" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1281</SUB>> ]
+"4377" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1281</SUB>> ]
+"4387" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == PRIMARY) &amp;&amp;\012 (partitions[i].GetStartLBA() &gt;= firstLogicalLBA) &amp;&amp;\012 (partitions[i].GetLastLBA() &lt;= lastLogicalLBA))<SUB>1282</SUB>> ]
+"4388" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() == PRIMARY) &amp;&amp;\012 (partitions[i].GetStartLBA() &gt;= firstLogicalLBA))<SUB>1282</SUB>> ]
+"4405" [label = <(&lt;operator&gt;.lessEqualsThan,partitions[i].GetLastLBA() &lt;= lastLogicalLBA)<SUB>1284</SUB>> ]
+"4389" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>1282</SUB>> ]
+"4397" [label = <(&lt;operator&gt;.greaterEqualsThan,partitions[i].GetStartLBA() &gt;= firstLogicalLBA)<SUB>1283</SUB>> ]
+"4406" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>1284</SUB>> ]
+"4415" [label = <(&lt;operator&gt;.equals,SectorUsedAs(partitions[i].GetStartLBA() - 1) == NONE)<SUB>1285</SUB>> ]
+"4390" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1282</SUB>> ]
+"4398" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1283</SUB>> ]
+"4407" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>1284</SUB>> ]
+"4416" [label = <(SectorUsedAs,SectorUsedAs(partitions[i].GetStartLBA() - 1))<SUB>1285</SUB>> ]
+"4427" [label = <(SetInclusion,partitions[i].SetInclusion(LOGICAL))<SUB>1286</SUB>> ]
+"4391" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1282</SUB>> ]
+"4399" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1283</SUB>> ]
+"4408" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1284</SUB>> ]
+"4411" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>1284</SUB>> ]
+"4417" [label = <(&lt;operator&gt;.subtraction,partitions[i].GetStartLBA() - 1)<SUB>1285</SUB>> ]
+"4428" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1286</SUB>> ]
+"4436" [label = <(SetInclusion,partitions[i].SetInclusion(NONE))<SUB>1288</SUB>> ]
+"4392" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1282</SUB>> ]
+"4395" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1282</SUB>> ]
+"4400" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1283</SUB>> ]
+"4403" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1283</SUB>> ]
+"4418" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1285</SUB>> ]
+"4429" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1286</SUB>> ]
+"4432" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1286</SUB>> ]
+"4437" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].SetInclusion)<SUB>1288</SUB>> ]
+"4419" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1285</SUB>> ]
+"4438" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1288</SUB>> ]
+"4441" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1288</SUB>> ]
+"4420" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1285</SUB>> ]
+"4423" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1285</SUB>> ]
+"4363" [label = <(METHOD,MakeLogicalsContiguous)<SUB>1275</SUB>> ]
+"4443" [label = <(METHOD_RETURN,void)<SUB>1275</SUB>> ]
+  "4369" -> "4374" 
+  "4372" -> "4377" 
+  "4371" -> "4369" 
+  "4374" -> "4372" 
+  "4380" -> "4443" 
+  "4380" -> "4392" 
+  "4383" -> "4380" 
+  "4377" -> "4380" 
+  "4387" -> "4420" 
+  "4387" -> "4383" 
+  "4388" -> "4387" 
+  "4388" -> "4408" 
+  "4405" -> "4387" 
+  "4389" -> "4388" 
+  "4389" -> "4400" 
+  "4397" -> "4388" 
+  "4406" -> "4405" 
+  "4415" -> "4429" 
+  "4415" -> "4438" 
+  "4390" -> "4389" 
+  "4398" -> "4397" 
+  "4407" -> "4406" 
+  "4416" -> "4415" 
+  "4427" -> "4383" 
+  "4391" -> "4390" 
+  "4399" -> "4398" 
+  "4408" -> "4411" 
+  "4411" -> "4407" 
+  "4417" -> "4416" 
+  "4428" -> "4427" 
+  "4436" -> "4383" 
+  "4392" -> "4395" 
+  "4395" -> "4391" 
+  "4400" -> "4403" 
+  "4403" -> "4399" 
+  "4418" -> "4417" 
+  "4429" -> "4432" 
+  "4432" -> "4428" 
+  "4437" -> "4436" 
+  "4419" -> "4418" 
+  "4438" -> "4441" 
+  "4441" -> "4437" 
+  "4420" -> "4423" 
+  "4423" -> "4419" 
+  "4363" -> "4371" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/52-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/52-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/52-cfg.dot	2023-06-07 19:31:27.137407666 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/52-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,32 +1,32 @@
 digraph "MakeItLegal" {  
-"4454" [label = <(&lt;operator&gt;.logicalNot,!IsLegal())<SUB>1297</SUB>> ]
-"4455" [label = <(IsLegal,IsLegal())<SUB>1297</SUB>> ]
-"4457" [label = <(DeleteOversizedParts,DeleteOversizedParts())<SUB>1298</SUB>> ]
-"4458" [label = <(MaximizeLogicals,MaximizeLogicals())<SUB>1299</SUB>> ]
-"4459" [label = <(MaximizePrimaries,MaximizePrimaries())<SUB>1300</SUB>> ]
-"4471" [label = <(OmitOverlaps,OmitOverlaps())<SUB>1305</SUB>> ]
-"4461" [label = <(&lt;operator&gt;.logicalNot,!AreLogicalsContiguous())<SUB>1301</SUB>> ]
-"4466" [label = <(&lt;operator&gt;.greaterThan,NumPrimaries() &gt; 4)<SUB>1303</SUB>> ]
-"4462" [label = <(AreLogicalsContiguous,AreLogicalsContiguous())<SUB>1301</SUB>> ]
-"4464" [label = <(MakeLogicalsContiguous,MakeLogicalsContiguous())<SUB>1302</SUB>> ]
-"4467" [label = <(NumPrimaries,NumPrimaries())<SUB>1303</SUB>> ]
-"4470" [label = <(TrimPrimaries,TrimPrimaries())<SUB>1304</SUB>> ]
-"4450" [label = <(METHOD,MakeItLegal)<SUB>1296</SUB>> ]
-"4472" [label = <(METHOD_RETURN,void)<SUB>1296</SUB>> ]
+"4449" [label = <(&lt;operator&gt;.logicalNot,!IsLegal())<SUB>1296</SUB>> ]
+"4450" [label = <(IsLegal,IsLegal())<SUB>1296</SUB>> ]
+"4452" [label = <(DeleteOversizedParts,DeleteOversizedParts())<SUB>1297</SUB>> ]
+"4453" [label = <(MaximizeLogicals,MaximizeLogicals())<SUB>1298</SUB>> ]
+"4454" [label = <(MaximizePrimaries,MaximizePrimaries())<SUB>1299</SUB>> ]
+"4466" [label = <(OmitOverlaps,OmitOverlaps())<SUB>1304</SUB>> ]
+"4456" [label = <(&lt;operator&gt;.logicalNot,!AreLogicalsContiguous())<SUB>1300</SUB>> ]
+"4461" [label = <(&lt;operator&gt;.greaterThan,NumPrimaries() &gt; 4)<SUB>1302</SUB>> ]
+"4457" [label = <(AreLogicalsContiguous,AreLogicalsContiguous())<SUB>1300</SUB>> ]
+"4459" [label = <(MakeLogicalsContiguous,MakeLogicalsContiguous())<SUB>1301</SUB>> ]
+"4462" [label = <(NumPrimaries,NumPrimaries())<SUB>1302</SUB>> ]
+"4465" [label = <(TrimPrimaries,TrimPrimaries())<SUB>1303</SUB>> ]
+"4445" [label = <(METHOD,MakeItLegal)<SUB>1295</SUB>> ]
+"4467" [label = <(METHOD_RETURN,void)<SUB>1295</SUB>> ]
+  "4449" -> "4452" 
+  "4449" -> "4467" 
+  "4450" -> "4449" 
+  "4452" -> "4453" 
+  "4453" -> "4454" 
   "4454" -> "4457" 
-  "4454" -> "4472" 
-  "4455" -> "4454" 
-  "4457" -> "4458" 
-  "4458" -> "4459" 
+  "4466" -> "4467" 
+  "4456" -> "4459" 
+  "4456" -> "4462" 
+  "4461" -> "4465" 
+  "4461" -> "4466" 
+  "4457" -> "4456" 
   "4459" -> "4462" 
-  "4471" -> "4472" 
-  "4461" -> "4464" 
-  "4461" -> "4467" 
-  "4466" -> "4470" 
-  "4466" -> "4471" 
   "4462" -> "4461" 
-  "4464" -> "4467" 
-  "4467" -> "4466" 
-  "4470" -> "4471" 
-  "4450" -> "4455" 
+  "4465" -> "4466" 
+  "4445" -> "4450" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/53-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/53-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/53-cfg.dot	2023-06-07 19:31:27.137407666 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/53-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,105 +1,105 @@
 digraph "RemoveLogicalsFromFirstFour" {  
-"4481" [label = <(&lt;operator&gt;.assignment,j = 4)<SUB>1313</SUB>> ]
-"4484" [label = <(&lt;operator&gt;.assignment,numMoved = 0)<SUB>1313</SUB>> ]
-"4487" [label = <(&lt;operator&gt;.assignment,swapped = 0)<SUB>1313</SUB>> ]
-"4586" [label = <(RETURN,return numMoved;,return numMoved;)<SUB>1334</SUB>> ]
-"4496" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>1316</SUB>> ]
-"4499" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1316</SUB>> ]
-"4493" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1316</SUB>> ]
-"4503" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() != PRIMARY) &amp;&amp; (partitions[i].GetLengthLBA() &gt; 0))<SUB>1317</SUB>> ]
-"4504" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetInclusion() != PRIMARY)<SUB>1317</SUB>> ]
-"4512" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLengthLBA() &gt; 0)<SUB>1317</SUB>> ]
-"4521" [label = <(&lt;operator&gt;.assignment,j = 4)<SUB>1318</SUB>> ]
-"4524" [label = <(&lt;operator&gt;.assignment,swapped = 0)<SUB>1319</SUB>> ]
-"4505" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1317</SUB>> ]
-"4513" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1317</SUB>> ]
-"4572" [label = <(&lt;operator&gt;.logicalAnd,(j &lt; MAX_MBR_PARTS) &amp;&amp; !swapped)<SUB>1329</SUB>> ]
-"4579" [label = <(&lt;operator&gt;.greaterEqualsThan,j &gt;= MAX_MBR_PARTS)<SUB>1330</SUB>> ]
-"4506" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1317</SUB>> ]
-"4514" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1317</SUB>> ]
-"4570" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>1328</SUB>> ]
-"4573" [label = <(&lt;operator&gt;.lessThan,j &lt; MAX_MBR_PARTS)<SUB>1329</SUB>> ]
-"4576" [label = <(&lt;operator&gt;.logicalNot,!swapped)<SUB>1329</SUB>> ]
-"4583" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Warning! Too many partitions in BasicMBRData::RemoveLogicalsFromFirstFour()!\n&quot;)<SUB>1331</SUB>> ]
-"4507" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1317</SUB>> ]
-"4510" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1317</SUB>> ]
-"4515" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1317</SUB>> ]
-"4518" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1317</SUB>> ]
-"4530" [label = <(&lt;operator&gt;.logicalAnd,(partitions[j].GetInclusion() == NONE) &amp;&amp; (partitions[j].GetLengthLBA() == 0))<SUB>1321</SUB>> ]
-"4531" [label = <(&lt;operator&gt;.equals,partitions[j].GetInclusion() == NONE)<SUB>1321</SUB>> ]
-"4539" [label = <(&lt;operator&gt;.equals,partitions[j].GetLengthLBA() == 0)<SUB>1321</SUB>> ]
-"4548" [label = <(&lt;operator&gt;.assignment,temp = partitions[j])<SUB>1322</SUB>> ]
-"4553" [label = <(&lt;operator&gt;.assignment,partitions[j] = partitions[i])<SUB>1323</SUB>> ]
-"4560" [label = <(&lt;operator&gt;.assignment,partitions[i] = temp)<SUB>1324</SUB>> ]
-"4565" [label = <(&lt;operator&gt;.assignment,swapped = 1)<SUB>1325</SUB>> ]
-"4568" [label = <(&lt;operator&gt;.postIncrement,numMoved++)<SUB>1326</SUB>> ]
-"4532" [label = <(GetInclusion,partitions[j].GetInclusion())<SUB>1321</SUB>> ]
-"4540" [label = <(GetLengthLBA,partitions[j].GetLengthLBA())<SUB>1321</SUB>> ]
-"4550" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1322</SUB>> ]
-"4554" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1323</SUB>> ]
-"4557" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1323</SUB>> ]
-"4561" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1324</SUB>> ]
-"4533" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetInclusion)<SUB>1321</SUB>> ]
-"4541" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetLengthLBA)<SUB>1321</SUB>> ]
-"4534" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1321</SUB>> ]
-"4537" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1321</SUB>> ]
-"4542" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1321</SUB>> ]
-"4545" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1321</SUB>> ]
-"4474" [label = <(METHOD,RemoveLogicalsFromFirstFour)<SUB>1312</SUB>> ]
-"4588" [label = <(METHOD_RETURN,int)<SUB>1312</SUB>> ]
-  "4481" -> "4484" 
-  "4484" -> "4487" 
-  "4487" -> "4493" 
-  "4586" -> "4588" 
-  "4496" -> "4507" 
-  "4496" -> "4586" 
-  "4499" -> "4496" 
-  "4493" -> "4496" 
-  "4503" -> "4521" 
-  "4503" -> "4499" 
-  "4504" -> "4503" 
-  "4504" -> "4515" 
-  "4512" -> "4503" 
-  "4521" -> "4524" 
-  "4524" -> "4534" 
-  "4505" -> "4504" 
-  "4513" -> "4512" 
-  "4572" -> "4534" 
-  "4572" -> "4579" 
-  "4579" -> "4583" 
-  "4579" -> "4499" 
-  "4506" -> "4505" 
-  "4514" -> "4513" 
-  "4570" -> "4573" 
-  "4573" -> "4572" 
-  "4573" -> "4576" 
-  "4576" -> "4572" 
-  "4583" -> "4499" 
-  "4507" -> "4510" 
-  "4510" -> "4506" 
-  "4515" -> "4518" 
-  "4518" -> "4514" 
-  "4530" -> "4550" 
-  "4530" -> "4570" 
-  "4531" -> "4530" 
-  "4531" -> "4542" 
-  "4539" -> "4530" 
-  "4548" -> "4554" 
-  "4553" -> "4561" 
-  "4560" -> "4565" 
+"4476" [label = <(&lt;operator&gt;.assignment,j = 4)<SUB>1312</SUB>> ]
+"4479" [label = <(&lt;operator&gt;.assignment,numMoved = 0)<SUB>1312</SUB>> ]
+"4482" [label = <(&lt;operator&gt;.assignment,swapped = 0)<SUB>1312</SUB>> ]
+"4581" [label = <(RETURN,return numMoved;,return numMoved;)<SUB>1333</SUB>> ]
+"4491" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>1315</SUB>> ]
+"4494" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1315</SUB>> ]
+"4488" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1315</SUB>> ]
+"4498" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetInclusion() != PRIMARY) &amp;&amp; (partitions[i].GetLengthLBA() &gt; 0))<SUB>1316</SUB>> ]
+"4499" [label = <(&lt;operator&gt;.notEquals,partitions[i].GetInclusion() != PRIMARY)<SUB>1316</SUB>> ]
+"4507" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetLengthLBA() &gt; 0)<SUB>1316</SUB>> ]
+"4516" [label = <(&lt;operator&gt;.assignment,j = 4)<SUB>1317</SUB>> ]
+"4519" [label = <(&lt;operator&gt;.assignment,swapped = 0)<SUB>1318</SUB>> ]
+"4500" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1316</SUB>> ]
+"4508" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1316</SUB>> ]
+"4567" [label = <(&lt;operator&gt;.logicalAnd,(j &lt; MAX_MBR_PARTS) &amp;&amp; !swapped)<SUB>1328</SUB>> ]
+"4574" [label = <(&lt;operator&gt;.greaterEqualsThan,j &gt;= MAX_MBR_PARTS)<SUB>1329</SUB>> ]
+"4501" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1316</SUB>> ]
+"4509" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1316</SUB>> ]
+"4565" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>1327</SUB>> ]
+"4568" [label = <(&lt;operator&gt;.lessThan,j &lt; MAX_MBR_PARTS)<SUB>1328</SUB>> ]
+"4571" [label = <(&lt;operator&gt;.logicalNot,!swapped)<SUB>1328</SUB>> ]
+"4578" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Warning! Too many partitions in BasicMBRData::RemoveLogicalsFromFirstFour()!\n&quot;)<SUB>1330</SUB>> ]
+"4502" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1316</SUB>> ]
+"4505" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1316</SUB>> ]
+"4510" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1316</SUB>> ]
+"4513" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1316</SUB>> ]
+"4525" [label = <(&lt;operator&gt;.logicalAnd,(partitions[j].GetInclusion() == NONE) &amp;&amp; (partitions[j].GetLengthLBA() == 0))<SUB>1320</SUB>> ]
+"4526" [label = <(&lt;operator&gt;.equals,partitions[j].GetInclusion() == NONE)<SUB>1320</SUB>> ]
+"4534" [label = <(&lt;operator&gt;.equals,partitions[j].GetLengthLBA() == 0)<SUB>1320</SUB>> ]
+"4543" [label = <(&lt;operator&gt;.assignment,temp = partitions[j])<SUB>1321</SUB>> ]
+"4548" [label = <(&lt;operator&gt;.assignment,partitions[j] = partitions[i])<SUB>1322</SUB>> ]
+"4555" [label = <(&lt;operator&gt;.assignment,partitions[i] = temp)<SUB>1323</SUB>> ]
+"4560" [label = <(&lt;operator&gt;.assignment,swapped = 1)<SUB>1324</SUB>> ]
+"4563" [label = <(&lt;operator&gt;.postIncrement,numMoved++)<SUB>1325</SUB>> ]
+"4527" [label = <(GetInclusion,partitions[j].GetInclusion())<SUB>1320</SUB>> ]
+"4535" [label = <(GetLengthLBA,partitions[j].GetLengthLBA())<SUB>1320</SUB>> ]
+"4545" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1321</SUB>> ]
+"4549" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1322</SUB>> ]
+"4552" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1322</SUB>> ]
+"4556" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1323</SUB>> ]
+"4528" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetInclusion)<SUB>1320</SUB>> ]
+"4536" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetLengthLBA)<SUB>1320</SUB>> ]
+"4529" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1320</SUB>> ]
+"4532" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1320</SUB>> ]
+"4537" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1320</SUB>> ]
+"4540" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1320</SUB>> ]
+"4469" [label = <(METHOD,RemoveLogicalsFromFirstFour)<SUB>1311</SUB>> ]
+"4583" [label = <(METHOD_RETURN,int)<SUB>1311</SUB>> ]
+  "4476" -> "4479" 
+  "4479" -> "4482" 
+  "4482" -> "4488" 
+  "4581" -> "4583" 
+  "4491" -> "4502" 
+  "4491" -> "4581" 
+  "4494" -> "4491" 
+  "4488" -> "4491" 
+  "4498" -> "4516" 
+  "4498" -> "4494" 
+  "4499" -> "4498" 
+  "4499" -> "4510" 
+  "4507" -> "4498" 
+  "4516" -> "4519" 
+  "4519" -> "4529" 
+  "4500" -> "4499" 
+  "4508" -> "4507" 
+  "4567" -> "4529" 
+  "4567" -> "4574" 
+  "4574" -> "4578" 
+  "4574" -> "4494" 
+  "4501" -> "4500" 
+  "4509" -> "4508" 
   "4565" -> "4568" 
-  "4568" -> "4570" 
-  "4532" -> "4531" 
-  "4540" -> "4539" 
-  "4550" -> "4548" 
-  "4554" -> "4557" 
-  "4557" -> "4553" 
-  "4561" -> "4560" 
-  "4533" -> "4532" 
-  "4541" -> "4540" 
-  "4534" -> "4537" 
-  "4537" -> "4533" 
-  "4542" -> "4545" 
-  "4545" -> "4541" 
-  "4474" -> "4481" 
+  "4568" -> "4567" 
+  "4568" -> "4571" 
+  "4571" -> "4567" 
+  "4578" -> "4494" 
+  "4502" -> "4505" 
+  "4505" -> "4501" 
+  "4510" -> "4513" 
+  "4513" -> "4509" 
+  "4525" -> "4545" 
+  "4525" -> "4565" 
+  "4526" -> "4525" 
+  "4526" -> "4537" 
+  "4534" -> "4525" 
+  "4543" -> "4549" 
+  "4548" -> "4556" 
+  "4555" -> "4560" 
+  "4560" -> "4563" 
+  "4563" -> "4565" 
+  "4527" -> "4526" 
+  "4535" -> "4534" 
+  "4545" -> "4543" 
+  "4549" -> "4552" 
+  "4552" -> "4548" 
+  "4556" -> "4555" 
+  "4528" -> "4527" 
+  "4536" -> "4535" 
+  "4529" -> "4532" 
+  "4532" -> "4528" 
+  "4537" -> "4540" 
+  "4540" -> "4536" 
+  "4469" -> "4476" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/54-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/54-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/54-cfg.dot	2023-06-07 19:31:27.137407666 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/54-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,74 +1,74 @@
 digraph "MovePrimariesToFirstFour" {  
-"4597" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>1340</SUB>> ]
-"4600" [label = <(&lt;operator&gt;.assignment,numMoved = 0)<SUB>1340</SUB>> ]
-"4603" [label = <(&lt;operator&gt;.assignment,swapped = 0)<SUB>1340</SUB>> ]
-"4676" [label = <(RETURN,return numMoved;,return numMoved;)<SUB>1359</SUB>> ]
-"4612" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1343</SUB>> ]
-"4615" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1343</SUB>> ]
-"4609" [label = <(&lt;operator&gt;.assignment,i = 4)<SUB>1343</SUB>> ]
-"4619" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>1344</SUB>> ]
-"4620" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1344</SUB>> ]
-"4628" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>1345</SUB>> ]
-"4631" [label = <(&lt;operator&gt;.assignment,swapped = 0)<SUB>1346</SUB>> ]
-"4621" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1344</SUB>> ]
-"4670" [label = <(&lt;operator&gt;.logicalAnd,(j &lt; 4) &amp;&amp; !swapped)<SUB>1356</SUB>> ]
-"4622" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1344</SUB>> ]
-"4625" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1344</SUB>> ]
-"4668" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>1355</SUB>> ]
-"4671" [label = <(&lt;operator&gt;.lessThan,j &lt; 4)<SUB>1356</SUB>> ]
-"4674" [label = <(&lt;operator&gt;.logicalNot,!swapped)<SUB>1356</SUB>> ]
-"4637" [label = <(&lt;operator&gt;.notEquals,partitions[j].GetInclusion() != PRIMARY)<SUB>1348</SUB>> ]
-"4638" [label = <(GetInclusion,partitions[j].GetInclusion())<SUB>1348</SUB>> ]
-"4646" [label = <(&lt;operator&gt;.assignment,temp = partitions[j])<SUB>1349</SUB>> ]
-"4651" [label = <(&lt;operator&gt;.assignment,partitions[j] = partitions[i])<SUB>1350</SUB>> ]
-"4658" [label = <(&lt;operator&gt;.assignment,partitions[i] = temp)<SUB>1351</SUB>> ]
-"4663" [label = <(&lt;operator&gt;.assignment,swapped = 1)<SUB>1352</SUB>> ]
-"4666" [label = <(&lt;operator&gt;.postIncrement,numMoved++)<SUB>1353</SUB>> ]
-"4639" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetInclusion)<SUB>1348</SUB>> ]
-"4648" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1349</SUB>> ]
-"4652" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1350</SUB>> ]
-"4655" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1350</SUB>> ]
-"4659" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1351</SUB>> ]
-"4640" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1348</SUB>> ]
-"4643" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1348</SUB>> ]
-"4590" [label = <(METHOD,MovePrimariesToFirstFour)<SUB>1339</SUB>> ]
-"4678" [label = <(METHOD_RETURN,int)<SUB>1339</SUB>> ]
-  "4597" -> "4600" 
-  "4600" -> "4603" 
-  "4603" -> "4609" 
-  "4676" -> "4678" 
-  "4612" -> "4622" 
-  "4612" -> "4676" 
-  "4615" -> "4612" 
-  "4609" -> "4612" 
-  "4619" -> "4628" 
-  "4619" -> "4615" 
-  "4620" -> "4619" 
-  "4628" -> "4631" 
-  "4631" -> "4640" 
-  "4621" -> "4620" 
-  "4670" -> "4640" 
-  "4670" -> "4615" 
-  "4622" -> "4625" 
-  "4625" -> "4621" 
-  "4668" -> "4671" 
-  "4671" -> "4670" 
-  "4671" -> "4674" 
-  "4674" -> "4670" 
-  "4637" -> "4648" 
-  "4637" -> "4668" 
-  "4638" -> "4637" 
-  "4646" -> "4652" 
-  "4651" -> "4659" 
-  "4658" -> "4663" 
+"4592" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>1339</SUB>> ]
+"4595" [label = <(&lt;operator&gt;.assignment,numMoved = 0)<SUB>1339</SUB>> ]
+"4598" [label = <(&lt;operator&gt;.assignment,swapped = 0)<SUB>1339</SUB>> ]
+"4671" [label = <(RETURN,return numMoved;,return numMoved;)<SUB>1358</SUB>> ]
+"4607" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1342</SUB>> ]
+"4610" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1342</SUB>> ]
+"4604" [label = <(&lt;operator&gt;.assignment,i = 4)<SUB>1342</SUB>> ]
+"4614" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == PRIMARY)<SUB>1343</SUB>> ]
+"4615" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1343</SUB>> ]
+"4623" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>1344</SUB>> ]
+"4626" [label = <(&lt;operator&gt;.assignment,swapped = 0)<SUB>1345</SUB>> ]
+"4616" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1343</SUB>> ]
+"4665" [label = <(&lt;operator&gt;.logicalAnd,(j &lt; 4) &amp;&amp; !swapped)<SUB>1355</SUB>> ]
+"4617" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1343</SUB>> ]
+"4620" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1343</SUB>> ]
+"4663" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>1354</SUB>> ]
+"4666" [label = <(&lt;operator&gt;.lessThan,j &lt; 4)<SUB>1355</SUB>> ]
+"4669" [label = <(&lt;operator&gt;.logicalNot,!swapped)<SUB>1355</SUB>> ]
+"4632" [label = <(&lt;operator&gt;.notEquals,partitions[j].GetInclusion() != PRIMARY)<SUB>1347</SUB>> ]
+"4633" [label = <(GetInclusion,partitions[j].GetInclusion())<SUB>1347</SUB>> ]
+"4641" [label = <(&lt;operator&gt;.assignment,temp = partitions[j])<SUB>1348</SUB>> ]
+"4646" [label = <(&lt;operator&gt;.assignment,partitions[j] = partitions[i])<SUB>1349</SUB>> ]
+"4653" [label = <(&lt;operator&gt;.assignment,partitions[i] = temp)<SUB>1350</SUB>> ]
+"4658" [label = <(&lt;operator&gt;.assignment,swapped = 1)<SUB>1351</SUB>> ]
+"4661" [label = <(&lt;operator&gt;.postIncrement,numMoved++)<SUB>1352</SUB>> ]
+"4634" [label = <(&lt;operator&gt;.fieldAccess,partitions[j].GetInclusion)<SUB>1347</SUB>> ]
+"4643" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1348</SUB>> ]
+"4647" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1349</SUB>> ]
+"4650" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1349</SUB>> ]
+"4654" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1350</SUB>> ]
+"4635" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[j])<SUB>1347</SUB>> ]
+"4638" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1347</SUB>> ]
+"4585" [label = <(METHOD,MovePrimariesToFirstFour)<SUB>1338</SUB>> ]
+"4673" [label = <(METHOD_RETURN,int)<SUB>1338</SUB>> ]
+  "4592" -> "4595" 
+  "4595" -> "4598" 
+  "4598" -> "4604" 
+  "4671" -> "4673" 
+  "4607" -> "4617" 
+  "4607" -> "4671" 
+  "4610" -> "4607" 
+  "4604" -> "4607" 
+  "4614" -> "4623" 
+  "4614" -> "4610" 
+  "4615" -> "4614" 
+  "4623" -> "4626" 
+  "4626" -> "4635" 
+  "4616" -> "4615" 
+  "4665" -> "4635" 
+  "4665" -> "4610" 
+  "4617" -> "4620" 
+  "4620" -> "4616" 
   "4663" -> "4666" 
-  "4666" -> "4668" 
-  "4639" -> "4638" 
-  "4648" -> "4646" 
-  "4652" -> "4655" 
-  "4655" -> "4651" 
-  "4659" -> "4658" 
-  "4640" -> "4643" 
-  "4643" -> "4639" 
-  "4590" -> "4597" 
+  "4666" -> "4665" 
+  "4666" -> "4669" 
+  "4669" -> "4665" 
+  "4632" -> "4643" 
+  "4632" -> "4663" 
+  "4633" -> "4632" 
+  "4641" -> "4647" 
+  "4646" -> "4654" 
+  "4653" -> "4658" 
+  "4658" -> "4661" 
+  "4661" -> "4663" 
+  "4634" -> "4633" 
+  "4643" -> "4641" 
+  "4647" -> "4650" 
+  "4650" -> "4646" 
+  "4654" -> "4653" 
+  "4635" -> "4638" 
+  "4638" -> "4634" 
+  "4585" -> "4592" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/55-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/55-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/55-cfg.dot	2023-06-07 19:31:27.137407666 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/55-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,141 +1,141 @@
 digraph "CreateExtended" {  
-"4686" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>1367</SUB>> ]
-"4689" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1367</SUB>> ]
-"4692" [label = <(&lt;operator&gt;.assignment,swapped = 0)<SUB>1367</SUB>> ]
-"4816" [label = <(RETURN,return allOK;,return allOK;)<SUB>1402</SUB>> ]
-"4697" [label = <(IsLegal,IsLegal())<SUB>1370</SUB>> ]
-"4796" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1399</SUB>> ]
-"4799" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1399</SUB>> ]
-"4699" [label = <(RemoveLogicalsFromFirstFour,RemoveLogicalsFromFirstFour())<SUB>1372</SUB>> ]
-"4700" [label = <(MovePrimariesToFirstFour,MovePrimariesToFirstFour())<SUB>1374</SUB>> ]
-"4793" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1399</SUB>> ]
-"4802" [label = <(&lt;operator&gt;.logicalAnd,swapped &amp;&amp; partitions[i].GetType() == 0xEE)<SUB>1400</SUB>> ]
-"4702" [label = <(&lt;operator&gt;.greaterThan,NumLogicals() &gt; 0)<SUB>1377</SUB>> ]
-"4788" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1396</SUB>> ]
-"4804" [label = <(&lt;operator&gt;.equals,partitions[i].GetType() == 0xEE)<SUB>1400</SUB>> ]
-"4813" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1401</SUB>> ]
-"4703" [label = <(NumLogicals,NumLogicals())<SUB>1377</SUB>> ]
-"4706" [label = <(SortMBR,SortMBR(4))<SUB>1378</SUB>> ]
-"4708" [label = <(Empty,temp.Empty())<SUB>1379</SUB>> ]
-"4712" [label = <(SetStartLBA,temp.SetStartLBA(FirstLogicalLBA() - 1))<SUB>1380</SUB>> ]
-"4719" [label = <(SetLengthLBA,temp.SetLengthLBA(LastLogicalLBA() - FirstLogicalLBA() + 2))<SUB>1381</SUB>> ]
-"4728" [label = <(SetType,temp.SetType(0x0f, 1))<SUB>1382</SUB>> ]
-"4734" [label = <(SetInclusion,temp.SetInclusion(PRIMARY))<SUB>1383</SUB>> ]
-"4805" [label = <(GetType,partitions[i].GetType())<SUB>1400</SUB>> ]
-"4709" [label = <(&lt;operator&gt;.fieldAccess,temp.Empty)<SUB>1379</SUB>> ]
-"4713" [label = <(&lt;operator&gt;.fieldAccess,temp.SetStartLBA)<SUB>1380</SUB>> ]
-"4716" [label = <(&lt;operator&gt;.subtraction,FirstLogicalLBA() - 1)<SUB>1380</SUB>> ]
-"4720" [label = <(&lt;operator&gt;.fieldAccess,temp.SetLengthLBA)<SUB>1381</SUB>> ]
-"4723" [label = <(&lt;operator&gt;.addition,LastLogicalLBA() - FirstLogicalLBA() + 2)<SUB>1381</SUB>> ]
-"4729" [label = <(&lt;operator&gt;.fieldAccess,temp.SetType)<SUB>1382</SUB>> ]
-"4735" [label = <(&lt;operator&gt;.fieldAccess,temp.SetInclusion)<SUB>1383</SUB>> ]
-"4770" [label = <(&lt;operator&gt;.logicalAnd,(i &lt; 4) &amp;&amp; !swapped)<SUB>1390</SUB>> ]
-"4777" [label = <(&lt;operator&gt;.logicalNot,!swapped)<SUB>1391</SUB>> ]
-"4806" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetType)<SUB>1400</SUB>> ]
-"4711" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1379</SUB>> ]
-"4715" [label = <(FIELD_IDENTIFIER,SetStartLBA,SetStartLBA)<SUB>1380</SUB>> ]
-"4717" [label = <(FirstLogicalLBA,FirstLogicalLBA())<SUB>1380</SUB>> ]
-"4722" [label = <(FIELD_IDENTIFIER,SetLengthLBA,SetLengthLBA)<SUB>1381</SUB>> ]
-"4724" [label = <(&lt;operator&gt;.subtraction,LastLogicalLBA() - FirstLogicalLBA())<SUB>1381</SUB>> ]
-"4731" [label = <(FIELD_IDENTIFIER,SetType,SetType)<SUB>1382</SUB>> ]
-"4737" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1383</SUB>> ]
-"4768" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1389</SUB>> ]
-"4771" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>1390</SUB>> ]
-"4774" [label = <(&lt;operator&gt;.logicalNot,!swapped)<SUB>1390</SUB>> ]
-"4780" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Could not create extended partition; no room in primary table!\n&quot;)<SUB>1392</SUB>> ]
-"4783" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1393</SUB>> ]
-"4807" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1400</SUB>> ]
-"4810" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>1400</SUB>> ]
-"4725" [label = <(LastLogicalLBA,LastLogicalLBA())<SUB>1381</SUB>> ]
-"4726" [label = <(FirstLogicalLBA,FirstLogicalLBA())<SUB>1381</SUB>> ]
-"4742" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetInclusion() == NONE) || (partitions[i].GetLengthLBA() == 0))<SUB>1385</SUB>> ]
-"4743" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == NONE)<SUB>1385</SUB>> ]
-"4751" [label = <(&lt;operator&gt;.equals,partitions[i].GetLengthLBA() == 0)<SUB>1385</SUB>> ]
-"4760" [label = <(&lt;operator&gt;.assignment,partitions[i] = temp)<SUB>1386</SUB>> ]
-"4765" [label = <(&lt;operator&gt;.assignment,swapped = 1)<SUB>1387</SUB>> ]
-"4744" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1385</SUB>> ]
-"4752" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1385</SUB>> ]
-"4761" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1386</SUB>> ]
-"4745" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1385</SUB>> ]
-"4753" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1385</SUB>> ]
-"4746" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1385</SUB>> ]
-"4749" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1385</SUB>> ]
-"4754" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1385</SUB>> ]
-"4757" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1385</SUB>> ]
-"4680" [label = <(METHOD,CreateExtended)<SUB>1366</SUB>> ]
-"4818" [label = <(METHOD_RETURN,int)<SUB>1366</SUB>> ]
-  "4686" -> "4689" 
-  "4689" -> "4692" 
-  "4692" -> "4697" 
-  "4816" -> "4818" 
-  "4697" -> "4699" 
+"4681" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>1366</SUB>> ]
+"4684" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1366</SUB>> ]
+"4687" [label = <(&lt;operator&gt;.assignment,swapped = 0)<SUB>1366</SUB>> ]
+"4811" [label = <(RETURN,return allOK;,return allOK;)<SUB>1401</SUB>> ]
+"4692" [label = <(IsLegal,IsLegal())<SUB>1369</SUB>> ]
+"4791" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1398</SUB>> ]
+"4794" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1398</SUB>> ]
+"4694" [label = <(RemoveLogicalsFromFirstFour,RemoveLogicalsFromFirstFour())<SUB>1371</SUB>> ]
+"4695" [label = <(MovePrimariesToFirstFour,MovePrimariesToFirstFour())<SUB>1373</SUB>> ]
+"4788" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1398</SUB>> ]
+"4797" [label = <(&lt;operator&gt;.logicalAnd,swapped &amp;&amp; partitions[i].GetType() == 0xEE)<SUB>1399</SUB>> ]
+"4697" [label = <(&lt;operator&gt;.greaterThan,NumLogicals() &gt; 0)<SUB>1376</SUB>> ]
+"4783" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1395</SUB>> ]
+"4799" [label = <(&lt;operator&gt;.equals,partitions[i].GetType() == 0xEE)<SUB>1399</SUB>> ]
+"4808" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1400</SUB>> ]
+"4698" [label = <(NumLogicals,NumLogicals())<SUB>1376</SUB>> ]
+"4701" [label = <(SortMBR,SortMBR(4))<SUB>1377</SUB>> ]
+"4703" [label = <(Empty,temp.Empty())<SUB>1378</SUB>> ]
+"4707" [label = <(SetStartLBA,temp.SetStartLBA(FirstLogicalLBA() - 1))<SUB>1379</SUB>> ]
+"4714" [label = <(SetLengthLBA,temp.SetLengthLBA(LastLogicalLBA() - FirstLogicalLBA() + 2))<SUB>1380</SUB>> ]
+"4723" [label = <(SetType,temp.SetType(0x0f, 1))<SUB>1381</SUB>> ]
+"4729" [label = <(SetInclusion,temp.SetInclusion(PRIMARY))<SUB>1382</SUB>> ]
+"4800" [label = <(GetType,partitions[i].GetType())<SUB>1399</SUB>> ]
+"4704" [label = <(&lt;operator&gt;.fieldAccess,temp.Empty)<SUB>1378</SUB>> ]
+"4708" [label = <(&lt;operator&gt;.fieldAccess,temp.SetStartLBA)<SUB>1379</SUB>> ]
+"4711" [label = <(&lt;operator&gt;.subtraction,FirstLogicalLBA() - 1)<SUB>1379</SUB>> ]
+"4715" [label = <(&lt;operator&gt;.fieldAccess,temp.SetLengthLBA)<SUB>1380</SUB>> ]
+"4718" [label = <(&lt;operator&gt;.addition,LastLogicalLBA() - FirstLogicalLBA() + 2)<SUB>1380</SUB>> ]
+"4724" [label = <(&lt;operator&gt;.fieldAccess,temp.SetType)<SUB>1381</SUB>> ]
+"4730" [label = <(&lt;operator&gt;.fieldAccess,temp.SetInclusion)<SUB>1382</SUB>> ]
+"4765" [label = <(&lt;operator&gt;.logicalAnd,(i &lt; 4) &amp;&amp; !swapped)<SUB>1389</SUB>> ]
+"4772" [label = <(&lt;operator&gt;.logicalNot,!swapped)<SUB>1390</SUB>> ]
+"4801" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetType)<SUB>1399</SUB>> ]
+"4706" [label = <(FIELD_IDENTIFIER,Empty,Empty)<SUB>1378</SUB>> ]
+"4710" [label = <(FIELD_IDENTIFIER,SetStartLBA,SetStartLBA)<SUB>1379</SUB>> ]
+"4712" [label = <(FirstLogicalLBA,FirstLogicalLBA())<SUB>1379</SUB>> ]
+"4717" [label = <(FIELD_IDENTIFIER,SetLengthLBA,SetLengthLBA)<SUB>1380</SUB>> ]
+"4719" [label = <(&lt;operator&gt;.subtraction,LastLogicalLBA() - FirstLogicalLBA())<SUB>1380</SUB>> ]
+"4726" [label = <(FIELD_IDENTIFIER,SetType,SetType)<SUB>1381</SUB>> ]
+"4732" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>1382</SUB>> ]
+"4763" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1388</SUB>> ]
+"4766" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>1389</SUB>> ]
+"4769" [label = <(&lt;operator&gt;.logicalNot,!swapped)<SUB>1389</SUB>> ]
+"4775" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Could not create extended partition; no room in primary table!\n&quot;)<SUB>1391</SUB>> ]
+"4778" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>1392</SUB>> ]
+"4802" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1399</SUB>> ]
+"4805" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>1399</SUB>> ]
+"4720" [label = <(LastLogicalLBA,LastLogicalLBA())<SUB>1380</SUB>> ]
+"4721" [label = <(FirstLogicalLBA,FirstLogicalLBA())<SUB>1380</SUB>> ]
+"4737" [label = <(&lt;operator&gt;.logicalOr,(partitions[i].GetInclusion() == NONE) || (partitions[i].GetLengthLBA() == 0))<SUB>1384</SUB>> ]
+"4738" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == NONE)<SUB>1384</SUB>> ]
+"4746" [label = <(&lt;operator&gt;.equals,partitions[i].GetLengthLBA() == 0)<SUB>1384</SUB>> ]
+"4755" [label = <(&lt;operator&gt;.assignment,partitions[i] = temp)<SUB>1385</SUB>> ]
+"4760" [label = <(&lt;operator&gt;.assignment,swapped = 1)<SUB>1386</SUB>> ]
+"4739" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1384</SUB>> ]
+"4747" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1384</SUB>> ]
+"4756" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1385</SUB>> ]
+"4740" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1384</SUB>> ]
+"4748" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1384</SUB>> ]
+"4741" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1384</SUB>> ]
+"4744" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1384</SUB>> ]
+"4749" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1384</SUB>> ]
+"4752" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1384</SUB>> ]
+"4675" [label = <(METHOD,CreateExtended)<SUB>1365</SUB>> ]
+"4813" [label = <(METHOD_RETURN,int)<SUB>1365</SUB>> ]
+  "4681" -> "4684" 
+  "4684" -> "4687" 
+  "4687" -> "4692" 
+  "4811" -> "4813" 
+  "4692" -> "4694" 
+  "4692" -> "4783" 
+  "4791" -> "4797" 
+  "4791" -> "4802" 
+  "4791" -> "4811" 
+  "4794" -> "4791" 
+  "4694" -> "4695" 
+  "4695" -> "4698" 
+  "4788" -> "4791" 
+  "4797" -> "4808" 
+  "4797" -> "4794" 
+  "4697" -> "4701" 
   "4697" -> "4788" 
-  "4796" -> "4802" 
-  "4796" -> "4807" 
-  "4796" -> "4816" 
-  "4799" -> "4796" 
-  "4699" -> "4700" 
-  "4700" -> "4703" 
-  "4793" -> "4796" 
-  "4802" -> "4813" 
-  "4802" -> "4799" 
-  "4702" -> "4706" 
-  "4702" -> "4793" 
-  "4788" -> "4793" 
-  "4804" -> "4802" 
-  "4813" -> "4799" 
-  "4703" -> "4702" 
-  "4706" -> "4711" 
-  "4708" -> "4715" 
-  "4712" -> "4722" 
-  "4719" -> "4731" 
-  "4728" -> "4737" 
-  "4734" -> "4746" 
-  "4805" -> "4804" 
-  "4709" -> "4708" 
-  "4713" -> "4717" 
-  "4716" -> "4712" 
-  "4720" -> "4725" 
-  "4723" -> "4719" 
-  "4729" -> "4728" 
-  "4735" -> "4734" 
-  "4770" -> "4746" 
-  "4770" -> "4777" 
-  "4777" -> "4780" 
-  "4777" -> "4793" 
-  "4806" -> "4805" 
-  "4711" -> "4709" 
-  "4715" -> "4713" 
-  "4717" -> "4716" 
-  "4722" -> "4720" 
+  "4783" -> "4788" 
+  "4799" -> "4797" 
+  "4808" -> "4794" 
+  "4698" -> "4697" 
+  "4701" -> "4706" 
+  "4703" -> "4710" 
+  "4707" -> "4717" 
+  "4714" -> "4726" 
+  "4723" -> "4732" 
+  "4729" -> "4741" 
+  "4800" -> "4799" 
+  "4704" -> "4703" 
+  "4708" -> "4712" 
+  "4711" -> "4707" 
+  "4715" -> "4720" 
+  "4718" -> "4714" 
   "4724" -> "4723" 
-  "4731" -> "4729" 
-  "4737" -> "4735" 
-  "4768" -> "4771" 
-  "4771" -> "4770" 
-  "4771" -> "4774" 
-  "4774" -> "4770" 
-  "4780" -> "4783" 
-  "4783" -> "4793" 
-  "4807" -> "4810" 
-  "4810" -> "4806" 
-  "4725" -> "4726" 
+  "4730" -> "4729" 
+  "4765" -> "4741" 
+  "4765" -> "4772" 
+  "4772" -> "4775" 
+  "4772" -> "4788" 
+  "4801" -> "4800" 
+  "4706" -> "4704" 
+  "4710" -> "4708" 
+  "4712" -> "4711" 
+  "4717" -> "4715" 
+  "4719" -> "4718" 
   "4726" -> "4724" 
-  "4742" -> "4761" 
-  "4742" -> "4768" 
-  "4743" -> "4742" 
-  "4743" -> "4754" 
-  "4751" -> "4742" 
-  "4760" -> "4765" 
-  "4765" -> "4768" 
-  "4744" -> "4743" 
-  "4752" -> "4751" 
-  "4761" -> "4760" 
-  "4745" -> "4744" 
-  "4753" -> "4752" 
-  "4746" -> "4749" 
-  "4749" -> "4745" 
-  "4754" -> "4757" 
-  "4757" -> "4753" 
-  "4680" -> "4686" 
+  "4732" -> "4730" 
+  "4763" -> "4766" 
+  "4766" -> "4765" 
+  "4766" -> "4769" 
+  "4769" -> "4765" 
+  "4775" -> "4778" 
+  "4778" -> "4788" 
+  "4802" -> "4805" 
+  "4805" -> "4801" 
+  "4720" -> "4721" 
+  "4721" -> "4719" 
+  "4737" -> "4756" 
+  "4737" -> "4763" 
+  "4738" -> "4737" 
+  "4738" -> "4749" 
+  "4746" -> "4737" 
+  "4755" -> "4760" 
+  "4760" -> "4763" 
+  "4739" -> "4738" 
+  "4747" -> "4746" 
+  "4756" -> "4755" 
+  "4740" -> "4739" 
+  "4748" -> "4747" 
+  "4741" -> "4744" 
+  "4744" -> "4740" 
+  "4749" -> "4752" 
+  "4752" -> "4748" 
+  "4675" -> "4681" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/56-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/56-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/56-cfg.dot	2023-06-07 19:31:27.137407666 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/56-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,101 +1,101 @@
 digraph "FindFirstAvailable" {  
-"4841" [label = <(&lt;operator&gt;.assignment,first = start)<SUB>1421</SUB>> ]
-"4919" [label = <(RETURN,return (first);,return (first);)<SUB>1441</SUB>> ]
-"4827" [label = <(&lt;operator&gt;.logicalOr,(start &gt;= (UINT32_MAX - 1)) || (start &gt;= (diskSize - 1)))<SUB>1418</SUB>> ]
-"4904" [label = <(&lt;operator&gt;.equals,firstMoved == 1)<SUB>1438</SUB>> ]
-"4908" [label = <(&lt;operator&gt;.logicalOr,(first &gt;= diskSize) || (first &gt; UINT32_MAX))<SUB>1439</SUB>> ]
-"4828" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= (UINT32_MAX - 1))<SUB>1418</SUB>> ]
-"4833" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= (diskSize - 1))<SUB>1418</SUB>> ]
-"4839" [label = <(RETURN,return 0;,return 0;)<SUB>1419</SUB>> ]
-"4846" [label = <(&lt;operator&gt;.assignment,firstMoved = 0)<SUB>1429</SUB>> ]
-"4909" [label = <(&lt;operator&gt;.greaterEqualsThan,first &gt;= diskSize)<SUB>1439</SUB>> ]
-"4912" [label = <(&lt;operator&gt;.greaterThan,first &gt; UINT32_MAX)<SUB>1439</SUB>> ]
-"4916" [label = <(&lt;operator&gt;.assignment,first = 0)<SUB>1440</SUB>> ]
-"4830" [label = <(&lt;operator&gt;.subtraction,UINT32_MAX - 1)<SUB>1418</SUB>> ]
-"4835" [label = <(&lt;operator&gt;.subtraction,diskSize - 1)<SUB>1418</SUB>> ]
-"4854" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>1430</SUB>> ]
-"4857" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1430</SUB>> ]
-"4851" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1430</SUB>> ]
-"4861" [label = <(&lt;operator&gt;.logicalAnd,(first &gt;= partitions[i].GetStartLBA()) &amp;&amp;\012 (first &lt; (partitions[i].GetStartLBA() + partitions[i].GetLengthLBA())))<SUB>1432</SUB>> ]
-"4862" [label = <(&lt;operator&gt;.greaterEqualsThan,first &gt;= partitions[i].GetStartLBA())<SUB>1432</SUB>> ]
-"4870" [label = <(&lt;operator&gt;.lessThan,first &lt; (partitions[i].GetStartLBA() + partitions[i].GetLengthLBA()))<SUB>1433</SUB>> ]
-"4886" [label = <(&lt;operator&gt;.assignment,first = partitions[i].GetStartLBA() + partitions[i].GetLengthLBA())<SUB>1434</SUB>> ]
-"4901" [label = <(&lt;operator&gt;.assignment,firstMoved = 1)<SUB>1435</SUB>> ]
-"4864" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1432</SUB>> ]
-"4872" [label = <(&lt;operator&gt;.addition,partitions[i].GetStartLBA() + partitions[i].GetLengthLBA())<SUB>1433</SUB>> ]
-"4888" [label = <(&lt;operator&gt;.addition,partitions[i].GetStartLBA() + partitions[i].GetLengthLBA())<SUB>1434</SUB>> ]
-"4865" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1432</SUB>> ]
-"4873" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1433</SUB>> ]
-"4879" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1433</SUB>> ]
-"4889" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1434</SUB>> ]
-"4895" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1434</SUB>> ]
-"4866" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1432</SUB>> ]
-"4869" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1432</SUB>> ]
-"4874" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1433</SUB>> ]
-"4880" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1433</SUB>> ]
-"4890" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1434</SUB>> ]
-"4896" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1434</SUB>> ]
-"4875" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1433</SUB>> ]
-"4878" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1433</SUB>> ]
-"4881" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1433</SUB>> ]
-"4884" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1433</SUB>> ]
-"4891" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1434</SUB>> ]
-"4894" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1434</SUB>> ]
-"4897" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1434</SUB>> ]
-"4900" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1434</SUB>> ]
-"4820" [label = <(METHOD,FindFirstAvailable)<SUB>1413</SUB>> ]
-"4921" [label = <(METHOD_RETURN,uint64_t)<SUB>1413</SUB>> ]
+"4836" [label = <(&lt;operator&gt;.assignment,first = start)<SUB>1420</SUB>> ]
+"4914" [label = <(RETURN,return (first);,return (first);)<SUB>1440</SUB>> ]
+"4822" [label = <(&lt;operator&gt;.logicalOr,(start &gt;= (UINT32_MAX - 1)) || (start &gt;= (diskSize - 1)))<SUB>1417</SUB>> ]
+"4899" [label = <(&lt;operator&gt;.equals,firstMoved == 1)<SUB>1437</SUB>> ]
+"4903" [label = <(&lt;operator&gt;.logicalOr,(first &gt;= diskSize) || (first &gt; UINT32_MAX))<SUB>1438</SUB>> ]
+"4823" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= (UINT32_MAX - 1))<SUB>1417</SUB>> ]
+"4828" [label = <(&lt;operator&gt;.greaterEqualsThan,start &gt;= (diskSize - 1))<SUB>1417</SUB>> ]
+"4834" [label = <(RETURN,return 0;,return 0;)<SUB>1418</SUB>> ]
+"4841" [label = <(&lt;operator&gt;.assignment,firstMoved = 0)<SUB>1428</SUB>> ]
+"4904" [label = <(&lt;operator&gt;.greaterEqualsThan,first &gt;= diskSize)<SUB>1438</SUB>> ]
+"4907" [label = <(&lt;operator&gt;.greaterThan,first &gt; UINT32_MAX)<SUB>1438</SUB>> ]
+"4911" [label = <(&lt;operator&gt;.assignment,first = 0)<SUB>1439</SUB>> ]
+"4825" [label = <(&lt;operator&gt;.subtraction,UINT32_MAX - 1)<SUB>1417</SUB>> ]
+"4830" [label = <(&lt;operator&gt;.subtraction,diskSize - 1)<SUB>1417</SUB>> ]
+"4849" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>1429</SUB>> ]
+"4852" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1429</SUB>> ]
+"4846" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1429</SUB>> ]
+"4856" [label = <(&lt;operator&gt;.logicalAnd,(first &gt;= partitions[i].GetStartLBA()) &amp;&amp;\012 (first &lt; (partitions[i].GetStartLBA() + partitions[i].GetLengthLBA())))<SUB>1431</SUB>> ]
+"4857" [label = <(&lt;operator&gt;.greaterEqualsThan,first &gt;= partitions[i].GetStartLBA())<SUB>1431</SUB>> ]
+"4865" [label = <(&lt;operator&gt;.lessThan,first &lt; (partitions[i].GetStartLBA() + partitions[i].GetLengthLBA()))<SUB>1432</SUB>> ]
+"4881" [label = <(&lt;operator&gt;.assignment,first = partitions[i].GetStartLBA() + partitions[i].GetLengthLBA())<SUB>1433</SUB>> ]
+"4896" [label = <(&lt;operator&gt;.assignment,firstMoved = 1)<SUB>1434</SUB>> ]
+"4859" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1431</SUB>> ]
+"4867" [label = <(&lt;operator&gt;.addition,partitions[i].GetStartLBA() + partitions[i].GetLengthLBA())<SUB>1432</SUB>> ]
+"4883" [label = <(&lt;operator&gt;.addition,partitions[i].GetStartLBA() + partitions[i].GetLengthLBA())<SUB>1433</SUB>> ]
+"4860" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1431</SUB>> ]
+"4868" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1432</SUB>> ]
+"4874" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1432</SUB>> ]
+"4884" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1433</SUB>> ]
+"4890" [label = <(GetLengthLBA,partitions[i].GetLengthLBA())<SUB>1433</SUB>> ]
+"4861" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1431</SUB>> ]
+"4864" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1431</SUB>> ]
+"4869" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1432</SUB>> ]
+"4875" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1432</SUB>> ]
+"4885" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1433</SUB>> ]
+"4891" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLengthLBA)<SUB>1433</SUB>> ]
+"4870" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1432</SUB>> ]
+"4873" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1432</SUB>> ]
+"4876" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1432</SUB>> ]
+"4879" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1432</SUB>> ]
+"4886" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1433</SUB>> ]
+"4889" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1433</SUB>> ]
+"4892" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1433</SUB>> ]
+"4895" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1433</SUB>> ]
+"4815" [label = <(METHOD,FindFirstAvailable)<SUB>1412</SUB>> ]
+"4916" [label = <(METHOD_RETURN,uint64_t)<SUB>1412</SUB>> ]
+  "4836" -> "4841" 
+  "4914" -> "4916" 
+  "4822" -> "4834" 
+  "4822" -> "4836" 
+  "4899" -> "4841" 
+  "4899" -> "4904" 
+  "4903" -> "4911" 
+  "4903" -> "4914" 
+  "4823" -> "4822" 
+  "4823" -> "4830" 
+  "4828" -> "4822" 
+  "4834" -> "4916" 
   "4841" -> "4846" 
-  "4919" -> "4921" 
-  "4827" -> "4839" 
-  "4827" -> "4841" 
-  "4904" -> "4846" 
-  "4904" -> "4909" 
-  "4908" -> "4916" 
-  "4908" -> "4919" 
-  "4828" -> "4827" 
-  "4828" -> "4835" 
-  "4833" -> "4827" 
-  "4839" -> "4921" 
-  "4846" -> "4851" 
-  "4909" -> "4908" 
-  "4909" -> "4912" 
-  "4912" -> "4908" 
-  "4916" -> "4919" 
+  "4904" -> "4903" 
+  "4904" -> "4907" 
+  "4907" -> "4903" 
+  "4911" -> "4914" 
+  "4825" -> "4823" 
   "4830" -> "4828" 
-  "4835" -> "4833" 
-  "4854" -> "4904" 
-  "4854" -> "4866" 
-  "4857" -> "4854" 
-  "4851" -> "4854" 
-  "4861" -> "4891" 
-  "4861" -> "4857" 
-  "4862" -> "4861" 
-  "4862" -> "4875" 
-  "4870" -> "4861" 
-  "4886" -> "4901" 
-  "4901" -> "4857" 
-  "4864" -> "4862" 
-  "4872" -> "4870" 
-  "4888" -> "4886" 
-  "4865" -> "4864" 
-  "4873" -> "4881" 
-  "4879" -> "4872" 
-  "4889" -> "4897" 
-  "4895" -> "4888" 
-  "4866" -> "4869" 
-  "4869" -> "4865" 
-  "4874" -> "4873" 
-  "4880" -> "4879" 
-  "4890" -> "4889" 
-  "4896" -> "4895" 
-  "4875" -> "4878" 
-  "4878" -> "4874" 
-  "4881" -> "4884" 
-  "4884" -> "4880" 
-  "4891" -> "4894" 
-  "4894" -> "4890" 
-  "4897" -> "4900" 
-  "4900" -> "4896" 
-  "4820" -> "4830" 
+  "4849" -> "4899" 
+  "4849" -> "4861" 
+  "4852" -> "4849" 
+  "4846" -> "4849" 
+  "4856" -> "4886" 
+  "4856" -> "4852" 
+  "4857" -> "4856" 
+  "4857" -> "4870" 
+  "4865" -> "4856" 
+  "4881" -> "4896" 
+  "4896" -> "4852" 
+  "4859" -> "4857" 
+  "4867" -> "4865" 
+  "4883" -> "4881" 
+  "4860" -> "4859" 
+  "4868" -> "4876" 
+  "4874" -> "4867" 
+  "4884" -> "4892" 
+  "4890" -> "4883" 
+  "4861" -> "4864" 
+  "4864" -> "4860" 
+  "4869" -> "4868" 
+  "4875" -> "4874" 
+  "4885" -> "4884" 
+  "4891" -> "4890" 
+  "4870" -> "4873" 
+  "4873" -> "4869" 
+  "4876" -> "4879" 
+  "4879" -> "4875" 
+  "4886" -> "4889" 
+  "4889" -> "4885" 
+  "4892" -> "4895" 
+  "4895" -> "4891" 
+  "4815" -> "4825" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/57-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/57-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/57-cfg.dot	2023-06-07 19:31:27.137407666 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/57-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,66 +1,66 @@
 digraph "FindLastInFree" {  
-"4989" [label = <(RETURN,return (nearestStart);,return (nearestStart);)<SUB>1460</SUB>> ]
-"4929" [label = <(&lt;operator&gt;.logicalAnd,(diskSize &lt;= UINT32_MAX) &amp;&amp; (diskSize &gt; 0))<SUB>1449</SUB>> ]
-"4954" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>1454</SUB>> ]
-"4957" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1454</SUB>> ]
-"4930" [label = <(&lt;operator&gt;.lessEqualsThan,diskSize &lt;= UINT32_MAX)<SUB>1449</SUB>> ]
-"4933" [label = <(&lt;operator&gt;.greaterThan,diskSize &gt; 0)<SUB>1449</SUB>> ]
-"4937" [label = <(&lt;operator&gt;.assignment,nearestStart = diskSize - 1)<SUB>1450</SUB>> ]
-"4951" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1454</SUB>> ]
-"4939" [label = <(&lt;operator&gt;.subtraction,diskSize - 1)<SUB>1450</SUB>> ]
-"4944" [label = <(&lt;operator&gt;.assignment,nearestStart = UINT32_MAX - 1)<SUB>1452</SUB>> ]
-"4961" [label = <(&lt;operator&gt;.logicalAnd,(nearestStart &gt; partitions[i].GetStartLBA()) &amp;&amp;\012 (partitions[i].GetStartLBA() &gt; start))<SUB>1455</SUB>> ]
-"4946" [label = <(&lt;operator&gt;.subtraction,UINT32_MAX - 1)<SUB>1452</SUB>> ]
-"4962" [label = <(&lt;operator&gt;.greaterThan,nearestStart &gt; partitions[i].GetStartLBA())<SUB>1455</SUB>> ]
-"4970" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; start)<SUB>1456</SUB>> ]
-"4979" [label = <(&lt;operator&gt;.assignment,nearestStart = partitions[i].GetStartLBA() - 1)<SUB>1457</SUB>> ]
-"4964" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1455</SUB>> ]
-"4971" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1456</SUB>> ]
-"4981" [label = <(&lt;operator&gt;.subtraction,partitions[i].GetStartLBA() - 1)<SUB>1457</SUB>> ]
-"4965" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1455</SUB>> ]
-"4972" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1456</SUB>> ]
-"4982" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1457</SUB>> ]
-"4966" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1455</SUB>> ]
-"4969" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1455</SUB>> ]
-"4973" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1456</SUB>> ]
-"4976" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1456</SUB>> ]
-"4983" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1457</SUB>> ]
-"4984" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1457</SUB>> ]
-"4987" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1457</SUB>> ]
-"4923" [label = <(METHOD,FindLastInFree)<SUB>1445</SUB>> ]
-"4991" [label = <(METHOD_RETURN,uint64_t)<SUB>1445</SUB>> ]
-  "4989" -> "4991" 
-  "4929" -> "4939" 
-  "4929" -> "4946" 
-  "4954" -> "4966" 
-  "4954" -> "4989" 
-  "4957" -> "4954" 
-  "4930" -> "4929" 
-  "4930" -> "4933" 
-  "4933" -> "4929" 
-  "4937" -> "4951" 
-  "4951" -> "4954" 
-  "4939" -> "4937" 
-  "4944" -> "4951" 
-  "4961" -> "4984" 
-  "4961" -> "4957" 
-  "4946" -> "4944" 
-  "4962" -> "4961" 
-  "4962" -> "4973" 
-  "4970" -> "4961" 
-  "4979" -> "4957" 
-  "4964" -> "4962" 
-  "4971" -> "4970" 
-  "4981" -> "4979" 
-  "4965" -> "4964" 
-  "4972" -> "4971" 
-  "4982" -> "4981" 
-  "4966" -> "4969" 
-  "4969" -> "4965" 
-  "4973" -> "4976" 
-  "4976" -> "4972" 
-  "4983" -> "4982" 
-  "4984" -> "4987" 
-  "4987" -> "4983" 
-  "4923" -> "4930" 
+"4984" [label = <(RETURN,return (nearestStart);,return (nearestStart);)<SUB>1459</SUB>> ]
+"4924" [label = <(&lt;operator&gt;.logicalAnd,(diskSize &lt;= UINT32_MAX) &amp;&amp; (diskSize &gt; 0))<SUB>1448</SUB>> ]
+"4949" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>1453</SUB>> ]
+"4952" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1453</SUB>> ]
+"4925" [label = <(&lt;operator&gt;.lessEqualsThan,diskSize &lt;= UINT32_MAX)<SUB>1448</SUB>> ]
+"4928" [label = <(&lt;operator&gt;.greaterThan,diskSize &gt; 0)<SUB>1448</SUB>> ]
+"4932" [label = <(&lt;operator&gt;.assignment,nearestStart = diskSize - 1)<SUB>1449</SUB>> ]
+"4946" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1453</SUB>> ]
+"4934" [label = <(&lt;operator&gt;.subtraction,diskSize - 1)<SUB>1449</SUB>> ]
+"4939" [label = <(&lt;operator&gt;.assignment,nearestStart = UINT32_MAX - 1)<SUB>1451</SUB>> ]
+"4956" [label = <(&lt;operator&gt;.logicalAnd,(nearestStart &gt; partitions[i].GetStartLBA()) &amp;&amp;\012 (partitions[i].GetStartLBA() &gt; start))<SUB>1454</SUB>> ]
+"4941" [label = <(&lt;operator&gt;.subtraction,UINT32_MAX - 1)<SUB>1451</SUB>> ]
+"4957" [label = <(&lt;operator&gt;.greaterThan,nearestStart &gt; partitions[i].GetStartLBA())<SUB>1454</SUB>> ]
+"4965" [label = <(&lt;operator&gt;.greaterThan,partitions[i].GetStartLBA() &gt; start)<SUB>1455</SUB>> ]
+"4974" [label = <(&lt;operator&gt;.assignment,nearestStart = partitions[i].GetStartLBA() - 1)<SUB>1456</SUB>> ]
+"4959" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1454</SUB>> ]
+"4966" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1455</SUB>> ]
+"4976" [label = <(&lt;operator&gt;.subtraction,partitions[i].GetStartLBA() - 1)<SUB>1456</SUB>> ]
+"4960" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1454</SUB>> ]
+"4967" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1455</SUB>> ]
+"4977" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1456</SUB>> ]
+"4961" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1454</SUB>> ]
+"4964" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1454</SUB>> ]
+"4968" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1455</SUB>> ]
+"4971" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1455</SUB>> ]
+"4978" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1456</SUB>> ]
+"4979" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1456</SUB>> ]
+"4982" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1456</SUB>> ]
+"4918" [label = <(METHOD,FindLastInFree)<SUB>1444</SUB>> ]
+"4986" [label = <(METHOD_RETURN,uint64_t)<SUB>1444</SUB>> ]
+  "4984" -> "4986" 
+  "4924" -> "4934" 
+  "4924" -> "4941" 
+  "4949" -> "4961" 
+  "4949" -> "4984" 
+  "4952" -> "4949" 
+  "4925" -> "4924" 
+  "4925" -> "4928" 
+  "4928" -> "4924" 
+  "4932" -> "4946" 
+  "4946" -> "4949" 
+  "4934" -> "4932" 
+  "4939" -> "4946" 
+  "4956" -> "4979" 
+  "4956" -> "4952" 
+  "4941" -> "4939" 
+  "4957" -> "4956" 
+  "4957" -> "4968" 
+  "4965" -> "4956" 
+  "4974" -> "4952" 
+  "4959" -> "4957" 
+  "4966" -> "4965" 
+  "4976" -> "4974" 
+  "4960" -> "4959" 
+  "4967" -> "4966" 
+  "4977" -> "4976" 
+  "4961" -> "4964" 
+  "4964" -> "4960" 
+  "4968" -> "4971" 
+  "4971" -> "4967" 
+  "4978" -> "4977" 
+  "4979" -> "4982" 
+  "4982" -> "4978" 
+  "4918" -> "4925" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/58-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/58-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/58-cfg.dot	2023-06-07 19:31:27.147407667 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/58-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,45 +1,45 @@
 digraph "FindFirstInFree" {  
-"4999" [label = <(&lt;operator&gt;.assignment,bestLastLBA = 1)<SUB>1468</SUB>> ]
-"5044" [label = <(RETURN,return (bestLastLBA);,return (bestLastLBA);)<SUB>1476</SUB>> ]
-"5007" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>1469</SUB>> ]
-"5010" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1469</SUB>> ]
-"5004" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1469</SUB>> ]
-"5013" [label = <(&lt;operator&gt;.assignment,thisLastLBA = partitions[i].GetLastLBA() + 1)<SUB>1470</SUB>> ]
-"5015" [label = <(&lt;operator&gt;.addition,partitions[i].GetLastLBA() + 1)<SUB>1470</SUB>> ]
-"5024" [label = <(&lt;operator&gt;.greaterThan,thisLastLBA &gt; 0)<SUB>1471</SUB>> ]
-"5031" [label = <(&lt;operator&gt;.logicalAnd,(thisLastLBA &gt; bestLastLBA) &amp;&amp; (thisLastLBA &lt; start))<SUB>1473</SUB>> ]
-"5016" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>1470</SUB>> ]
-"5028" [label = <(&lt;operator&gt;.postDecrement,thisLastLBA--)<SUB>1472</SUB>> ]
-"5032" [label = <(&lt;operator&gt;.greaterThan,thisLastLBA &gt; bestLastLBA)<SUB>1473</SUB>> ]
-"5035" [label = <(&lt;operator&gt;.lessThan,thisLastLBA &lt; start)<SUB>1473</SUB>> ]
-"5039" [label = <(&lt;operator&gt;.assignment,bestLastLBA = thisLastLBA + 1)<SUB>1474</SUB>> ]
-"5017" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>1470</SUB>> ]
-"5041" [label = <(&lt;operator&gt;.addition,thisLastLBA + 1)<SUB>1474</SUB>> ]
-"5018" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1470</SUB>> ]
-"5021" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>1470</SUB>> ]
-"4993" [label = <(METHOD,FindFirstInFree)<SUB>1464</SUB>> ]
-"5046" [label = <(METHOD_RETURN,uint64_t)<SUB>1464</SUB>> ]
-  "4999" -> "5004" 
-  "5044" -> "5046" 
-  "5007" -> "5018" 
-  "5007" -> "5044" 
-  "5010" -> "5007" 
-  "5004" -> "5007" 
-  "5013" -> "5024" 
-  "5015" -> "5013" 
-  "5024" -> "5028" 
-  "5024" -> "5032" 
-  "5031" -> "5041" 
-  "5031" -> "5010" 
-  "5016" -> "5015" 
-  "5028" -> "5032" 
-  "5032" -> "5031" 
-  "5032" -> "5035" 
-  "5035" -> "5031" 
-  "5039" -> "5010" 
-  "5017" -> "5016" 
-  "5041" -> "5039" 
-  "5018" -> "5021" 
-  "5021" -> "5017" 
-  "4993" -> "4999" 
+"4994" [label = <(&lt;operator&gt;.assignment,bestLastLBA = 1)<SUB>1467</SUB>> ]
+"5039" [label = <(RETURN,return (bestLastLBA);,return (bestLastLBA);)<SUB>1475</SUB>> ]
+"5002" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>1468</SUB>> ]
+"5005" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1468</SUB>> ]
+"4999" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1468</SUB>> ]
+"5008" [label = <(&lt;operator&gt;.assignment,thisLastLBA = partitions[i].GetLastLBA() + 1)<SUB>1469</SUB>> ]
+"5010" [label = <(&lt;operator&gt;.addition,partitions[i].GetLastLBA() + 1)<SUB>1469</SUB>> ]
+"5019" [label = <(&lt;operator&gt;.greaterThan,thisLastLBA &gt; 0)<SUB>1470</SUB>> ]
+"5026" [label = <(&lt;operator&gt;.logicalAnd,(thisLastLBA &gt; bestLastLBA) &amp;&amp; (thisLastLBA &lt; start))<SUB>1472</SUB>> ]
+"5011" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>1469</SUB>> ]
+"5023" [label = <(&lt;operator&gt;.postDecrement,thisLastLBA--)<SUB>1471</SUB>> ]
+"5027" [label = <(&lt;operator&gt;.greaterThan,thisLastLBA &gt; bestLastLBA)<SUB>1472</SUB>> ]
+"5030" [label = <(&lt;operator&gt;.lessThan,thisLastLBA &lt; start)<SUB>1472</SUB>> ]
+"5034" [label = <(&lt;operator&gt;.assignment,bestLastLBA = thisLastLBA + 1)<SUB>1473</SUB>> ]
+"5012" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>1469</SUB>> ]
+"5036" [label = <(&lt;operator&gt;.addition,thisLastLBA + 1)<SUB>1473</SUB>> ]
+"5013" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1469</SUB>> ]
+"5016" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>1469</SUB>> ]
+"4988" [label = <(METHOD,FindFirstInFree)<SUB>1463</SUB>> ]
+"5041" [label = <(METHOD_RETURN,uint64_t)<SUB>1463</SUB>> ]
+  "4994" -> "4999" 
+  "5039" -> "5041" 
+  "5002" -> "5013" 
+  "5002" -> "5039" 
+  "5005" -> "5002" 
+  "4999" -> "5002" 
+  "5008" -> "5019" 
+  "5010" -> "5008" 
+  "5019" -> "5023" 
+  "5019" -> "5027" 
+  "5026" -> "5036" 
+  "5026" -> "5005" 
+  "5011" -> "5010" 
+  "5023" -> "5027" 
+  "5027" -> "5026" 
+  "5027" -> "5030" 
+  "5030" -> "5026" 
+  "5034" -> "5005" 
+  "5012" -> "5011" 
+  "5036" -> "5034" 
+  "5013" -> "5016" 
+  "5016" -> "5012" 
+  "4988" -> "4994" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/59-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/59-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/59-cfg.dot	2023-06-07 19:31:27.147407667 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/59-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,98 +1,98 @@
 digraph "SectorUsedAs" {  
-"5054" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1484</SUB>> ]
-"5057" [label = <(&lt;operator&gt;.assignment,usedAs = NONE)<SUB>1484</SUB>> ]
-"5142" [label = <(RETURN,return usedAs;,return usedAs;)<SUB>1497</SUB>> ]
-"5131" [label = <(&lt;operator&gt;.logicalAnd,(i &lt; topPartNum) &amp;&amp; ((usedAs == NONE) || (usedAs == EBR)))<SUB>1496</SUB>> ]
-"5129" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1495</SUB>> ]
-"5132" [label = <(&lt;operator&gt;.lessThan,i &lt; topPartNum)<SUB>1496</SUB>> ]
-"5135" [label = <(&lt;operator&gt;.logicalOr,(usedAs == NONE) || (usedAs == EBR))<SUB>1496</SUB>> ]
-"5063" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetStartLBA() &lt;= sector) &amp;&amp; (partitions[i].GetLastLBA() &gt;= sector))<SUB>1487</SUB>> ]
-"5090" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetStartLBA() == (sector + 1)) &amp;&amp; (partitions[i].GetInclusion() == LOGICAL))<SUB>1489</SUB>> ]
-"5114" [label = <(&lt;operator&gt;.equals,sector == 0)<SUB>1491</SUB>> ]
-"5122" [label = <(&lt;operator&gt;.greaterEqualsThan,sector &gt;= diskSize)<SUB>1493</SUB>> ]
-"5136" [label = <(&lt;operator&gt;.equals,usedAs == NONE)<SUB>1496</SUB>> ]
-"5139" [label = <(&lt;operator&gt;.equals,usedAs == EBR)<SUB>1496</SUB>> ]
-"5064" [label = <(&lt;operator&gt;.lessEqualsThan,partitions[i].GetStartLBA() &lt;= sector)<SUB>1487</SUB>> ]
-"5072" [label = <(&lt;operator&gt;.greaterEqualsThan,partitions[i].GetLastLBA() &gt;= sector)<SUB>1487</SUB>> ]
-"5081" [label = <(&lt;operator&gt;.assignment,usedAs = partitions[i].GetInclusion())<SUB>1488</SUB>> ]
-"5091" [label = <(&lt;operator&gt;.equals,partitions[i].GetStartLBA() == (sector + 1))<SUB>1489</SUB>> ]
-"5101" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>1489</SUB>> ]
-"5110" [label = <(&lt;operator&gt;.assignment,usedAs = EBR)<SUB>1490</SUB>> ]
-"5118" [label = <(&lt;operator&gt;.assignment,usedAs = EBR)<SUB>1492</SUB>> ]
-"5126" [label = <(&lt;operator&gt;.assignment,usedAs = INVALID)<SUB>1494</SUB>> ]
-"5065" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1487</SUB>> ]
-"5073" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>1487</SUB>> ]
-"5083" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1488</SUB>> ]
-"5092" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1489</SUB>> ]
-"5098" [label = <(&lt;operator&gt;.addition,sector + 1)<SUB>1489</SUB>> ]
-"5102" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1489</SUB>> ]
-"5066" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1487</SUB>> ]
-"5074" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>1487</SUB>> ]
-"5084" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1488</SUB>> ]
-"5093" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1489</SUB>> ]
-"5103" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1489</SUB>> ]
-"5067" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1487</SUB>> ]
-"5070" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1487</SUB>> ]
-"5075" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1487</SUB>> ]
-"5078" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>1487</SUB>> ]
-"5085" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1488</SUB>> ]
-"5088" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1488</SUB>> ]
-"5094" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1489</SUB>> ]
-"5097" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1489</SUB>> ]
-"5104" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1489</SUB>> ]
-"5107" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1489</SUB>> ]
-"5048" [label = <(METHOD,SectorUsedAs)<SUB>1483</SUB>> ]
-"5144" [label = <(METHOD_RETURN,int)<SUB>1483</SUB>> ]
-  "5054" -> "5057" 
-  "5057" -> "5067" 
-  "5142" -> "5144" 
-  "5131" -> "5067" 
-  "5131" -> "5142" 
-  "5129" -> "5132" 
-  "5132" -> "5131" 
-  "5132" -> "5136" 
-  "5135" -> "5131" 
-  "5063" -> "5085" 
-  "5063" -> "5094" 
-  "5090" -> "5110" 
-  "5090" -> "5114" 
-  "5114" -> "5118" 
-  "5114" -> "5122" 
-  "5122" -> "5126" 
-  "5122" -> "5129" 
-  "5136" -> "5135" 
-  "5136" -> "5139" 
-  "5139" -> "5135" 
-  "5064" -> "5063" 
-  "5064" -> "5075" 
-  "5072" -> "5063" 
-  "5081" -> "5094" 
-  "5091" -> "5090" 
-  "5091" -> "5104" 
-  "5101" -> "5090" 
-  "5110" -> "5114" 
-  "5118" -> "5122" 
-  "5126" -> "5129" 
-  "5065" -> "5064" 
-  "5073" -> "5072" 
-  "5083" -> "5081" 
-  "5092" -> "5098" 
-  "5098" -> "5091" 
-  "5102" -> "5101" 
-  "5066" -> "5065" 
-  "5074" -> "5073" 
-  "5084" -> "5083" 
-  "5093" -> "5092" 
-  "5103" -> "5102" 
-  "5067" -> "5070" 
-  "5070" -> "5066" 
-  "5075" -> "5078" 
-  "5078" -> "5074" 
-  "5085" -> "5088" 
-  "5088" -> "5084" 
-  "5094" -> "5097" 
-  "5097" -> "5093" 
-  "5104" -> "5107" 
-  "5107" -> "5103" 
-  "5048" -> "5054" 
+"5049" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>1483</SUB>> ]
+"5052" [label = <(&lt;operator&gt;.assignment,usedAs = NONE)<SUB>1483</SUB>> ]
+"5137" [label = <(RETURN,return usedAs;,return usedAs;)<SUB>1496</SUB>> ]
+"5126" [label = <(&lt;operator&gt;.logicalAnd,(i &lt; topPartNum) &amp;&amp; ((usedAs == NONE) || (usedAs == EBR)))<SUB>1495</SUB>> ]
+"5124" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>1494</SUB>> ]
+"5127" [label = <(&lt;operator&gt;.lessThan,i &lt; topPartNum)<SUB>1495</SUB>> ]
+"5130" [label = <(&lt;operator&gt;.logicalOr,(usedAs == NONE) || (usedAs == EBR))<SUB>1495</SUB>> ]
+"5058" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetStartLBA() &lt;= sector) &amp;&amp; (partitions[i].GetLastLBA() &gt;= sector))<SUB>1486</SUB>> ]
+"5085" [label = <(&lt;operator&gt;.logicalAnd,(partitions[i].GetStartLBA() == (sector + 1)) &amp;&amp; (partitions[i].GetInclusion() == LOGICAL))<SUB>1488</SUB>> ]
+"5109" [label = <(&lt;operator&gt;.equals,sector == 0)<SUB>1490</SUB>> ]
+"5117" [label = <(&lt;operator&gt;.greaterEqualsThan,sector &gt;= diskSize)<SUB>1492</SUB>> ]
+"5131" [label = <(&lt;operator&gt;.equals,usedAs == NONE)<SUB>1495</SUB>> ]
+"5134" [label = <(&lt;operator&gt;.equals,usedAs == EBR)<SUB>1495</SUB>> ]
+"5059" [label = <(&lt;operator&gt;.lessEqualsThan,partitions[i].GetStartLBA() &lt;= sector)<SUB>1486</SUB>> ]
+"5067" [label = <(&lt;operator&gt;.greaterEqualsThan,partitions[i].GetLastLBA() &gt;= sector)<SUB>1486</SUB>> ]
+"5076" [label = <(&lt;operator&gt;.assignment,usedAs = partitions[i].GetInclusion())<SUB>1487</SUB>> ]
+"5086" [label = <(&lt;operator&gt;.equals,partitions[i].GetStartLBA() == (sector + 1))<SUB>1488</SUB>> ]
+"5096" [label = <(&lt;operator&gt;.equals,partitions[i].GetInclusion() == LOGICAL)<SUB>1488</SUB>> ]
+"5105" [label = <(&lt;operator&gt;.assignment,usedAs = EBR)<SUB>1489</SUB>> ]
+"5113" [label = <(&lt;operator&gt;.assignment,usedAs = EBR)<SUB>1491</SUB>> ]
+"5121" [label = <(&lt;operator&gt;.assignment,usedAs = INVALID)<SUB>1493</SUB>> ]
+"5060" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1486</SUB>> ]
+"5068" [label = <(GetLastLBA,partitions[i].GetLastLBA())<SUB>1486</SUB>> ]
+"5078" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1487</SUB>> ]
+"5087" [label = <(GetStartLBA,partitions[i].GetStartLBA())<SUB>1488</SUB>> ]
+"5093" [label = <(&lt;operator&gt;.addition,sector + 1)<SUB>1488</SUB>> ]
+"5097" [label = <(GetInclusion,partitions[i].GetInclusion())<SUB>1488</SUB>> ]
+"5061" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1486</SUB>> ]
+"5069" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetLastLBA)<SUB>1486</SUB>> ]
+"5079" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1487</SUB>> ]
+"5088" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetStartLBA)<SUB>1488</SUB>> ]
+"5098" [label = <(&lt;operator&gt;.fieldAccess,partitions[i].GetInclusion)<SUB>1488</SUB>> ]
+"5062" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1486</SUB>> ]
+"5065" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1486</SUB>> ]
+"5070" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1486</SUB>> ]
+"5073" [label = <(FIELD_IDENTIFIER,GetLastLBA,GetLastLBA)<SUB>1486</SUB>> ]
+"5080" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1487</SUB>> ]
+"5083" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1487</SUB>> ]
+"5089" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1488</SUB>> ]
+"5092" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1488</SUB>> ]
+"5099" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1488</SUB>> ]
+"5102" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1488</SUB>> ]
+"5043" [label = <(METHOD,SectorUsedAs)<SUB>1482</SUB>> ]
+"5139" [label = <(METHOD_RETURN,int)<SUB>1482</SUB>> ]
+  "5049" -> "5052" 
+  "5052" -> "5062" 
+  "5137" -> "5139" 
+  "5126" -> "5062" 
+  "5126" -> "5137" 
+  "5124" -> "5127" 
+  "5127" -> "5126" 
+  "5127" -> "5131" 
+  "5130" -> "5126" 
+  "5058" -> "5080" 
+  "5058" -> "5089" 
+  "5085" -> "5105" 
+  "5085" -> "5109" 
+  "5109" -> "5113" 
+  "5109" -> "5117" 
+  "5117" -> "5121" 
+  "5117" -> "5124" 
+  "5131" -> "5130" 
+  "5131" -> "5134" 
+  "5134" -> "5130" 
+  "5059" -> "5058" 
+  "5059" -> "5070" 
+  "5067" -> "5058" 
+  "5076" -> "5089" 
+  "5086" -> "5085" 
+  "5086" -> "5099" 
+  "5096" -> "5085" 
+  "5105" -> "5109" 
+  "5113" -> "5117" 
+  "5121" -> "5124" 
+  "5060" -> "5059" 
+  "5068" -> "5067" 
+  "5078" -> "5076" 
+  "5087" -> "5093" 
+  "5093" -> "5086" 
+  "5097" -> "5096" 
+  "5061" -> "5060" 
+  "5069" -> "5068" 
+  "5079" -> "5078" 
+  "5088" -> "5087" 
+  "5098" -> "5097" 
+  "5062" -> "5065" 
+  "5065" -> "5061" 
+  "5070" -> "5073" 
+  "5073" -> "5069" 
+  "5080" -> "5083" 
+  "5083" -> "5079" 
+  "5089" -> "5092" 
+  "5092" -> "5088" 
+  "5099" -> "5102" 
+  "5102" -> "5098" 
+  "5043" -> "5049" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/60-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/60-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/60-cfg.dot	2023-06-07 19:31:27.147407667 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/60-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,26 +1,26 @@
 digraph "GetStatus" {  
-"5151" [label = <(&lt;operator&gt;.assignment,thePart = GetPartition(i))<SUB>1510</SUB>> ]
-"5172" [label = <(RETURN,return retval;,return retval;)<SUB>1515</SUB>> ]
-"5153" [label = <(GetPartition,GetPartition(i))<SUB>1510</SUB>> ]
-"5156" [label = <(&lt;operator&gt;.notEquals,thePart != NULL)<SUB>1511</SUB>> ]
-"5160" [label = <(&lt;operator&gt;.assignment,retval = thePart-&gt;GetStatus())<SUB>1512</SUB>> ]
-"5162" [label = <(GetStatus,thePart-&gt;GetStatus())<SUB>1512</SUB>> ]
-"5168" [label = <(&lt;operator&gt;.assignment,retval = UINT8_C(0))<SUB>1514</SUB>> ]
-"5163" [label = <(&lt;operator&gt;.indirectFieldAccess,thePart-&gt;GetStatus)<SUB>1512</SUB>> ]
-"5170" [label = <(UINT8_C,UINT8_C(0))<SUB>1514</SUB>> ]
-"5165" [label = <(FIELD_IDENTIFIER,GetStatus,GetStatus)<SUB>1512</SUB>> ]
-"5146" [label = <(METHOD,GetStatus)<SUB>1506</SUB>> ]
-"5174" [label = <(METHOD_RETURN,uint8_t)<SUB>1506</SUB>> ]
-  "5151" -> "5156" 
-  "5172" -> "5174" 
-  "5153" -> "5151" 
-  "5156" -> "5165" 
-  "5156" -> "5170" 
-  "5160" -> "5172" 
-  "5162" -> "5160" 
-  "5168" -> "5172" 
-  "5163" -> "5162" 
-  "5170" -> "5168" 
+"5146" [label = <(&lt;operator&gt;.assignment,thePart = GetPartition(i))<SUB>1509</SUB>> ]
+"5167" [label = <(RETURN,return retval;,return retval;)<SUB>1514</SUB>> ]
+"5148" [label = <(GetPartition,GetPartition(i))<SUB>1509</SUB>> ]
+"5151" [label = <(&lt;operator&gt;.notEquals,thePart != NULL)<SUB>1510</SUB>> ]
+"5155" [label = <(&lt;operator&gt;.assignment,retval = thePart-&gt;GetStatus())<SUB>1511</SUB>> ]
+"5157" [label = <(GetStatus,thePart-&gt;GetStatus())<SUB>1511</SUB>> ]
+"5163" [label = <(&lt;operator&gt;.assignment,retval = UINT8_C(0))<SUB>1513</SUB>> ]
+"5158" [label = <(&lt;operator&gt;.indirectFieldAccess,thePart-&gt;GetStatus)<SUB>1511</SUB>> ]
+"5165" [label = <(UINT8_C,UINT8_C(0))<SUB>1513</SUB>> ]
+"5160" [label = <(FIELD_IDENTIFIER,GetStatus,GetStatus)<SUB>1511</SUB>> ]
+"5141" [label = <(METHOD,GetStatus)<SUB>1505</SUB>> ]
+"5169" [label = <(METHOD_RETURN,uint8_t)<SUB>1505</SUB>> ]
+  "5146" -> "5151" 
+  "5167" -> "5169" 
+  "5148" -> "5146" 
+  "5151" -> "5160" 
+  "5151" -> "5165" 
+  "5155" -> "5167" 
+  "5157" -> "5155" 
+  "5163" -> "5167" 
+  "5158" -> "5157" 
   "5165" -> "5163" 
-  "5146" -> "5153" 
+  "5160" -> "5158" 
+  "5141" -> "5148" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/61-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/61-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/61-cfg.dot	2023-06-07 19:31:27.147407667 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/61-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,26 +1,26 @@
 digraph "GetType" {  
-"5181" [label = <(&lt;operator&gt;.assignment,thePart = GetPartition(i))<SUB>1522</SUB>> ]
-"5202" [label = <(RETURN,return retval;,return retval;)<SUB>1527</SUB>> ]
-"5183" [label = <(GetPartition,GetPartition(i))<SUB>1522</SUB>> ]
-"5186" [label = <(&lt;operator&gt;.notEquals,thePart != NULL)<SUB>1523</SUB>> ]
-"5190" [label = <(&lt;operator&gt;.assignment,retval = thePart-&gt;GetType())<SUB>1524</SUB>> ]
-"5192" [label = <(GetType,thePart-&gt;GetType())<SUB>1524</SUB>> ]
-"5198" [label = <(&lt;operator&gt;.assignment,retval = UINT8_C(0))<SUB>1526</SUB>> ]
-"5193" [label = <(&lt;operator&gt;.indirectFieldAccess,thePart-&gt;GetType)<SUB>1524</SUB>> ]
-"5200" [label = <(UINT8_C,UINT8_C(0))<SUB>1526</SUB>> ]
-"5195" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>1524</SUB>> ]
-"5176" [label = <(METHOD,GetType)<SUB>1518</SUB>> ]
-"5204" [label = <(METHOD_RETURN,uint8_t)<SUB>1518</SUB>> ]
-  "5181" -> "5186" 
-  "5202" -> "5204" 
-  "5183" -> "5181" 
-  "5186" -> "5195" 
-  "5186" -> "5200" 
-  "5190" -> "5202" 
-  "5192" -> "5190" 
-  "5198" -> "5202" 
-  "5193" -> "5192" 
-  "5200" -> "5198" 
+"5176" [label = <(&lt;operator&gt;.assignment,thePart = GetPartition(i))<SUB>1521</SUB>> ]
+"5197" [label = <(RETURN,return retval;,return retval;)<SUB>1526</SUB>> ]
+"5178" [label = <(GetPartition,GetPartition(i))<SUB>1521</SUB>> ]
+"5181" [label = <(&lt;operator&gt;.notEquals,thePart != NULL)<SUB>1522</SUB>> ]
+"5185" [label = <(&lt;operator&gt;.assignment,retval = thePart-&gt;GetType())<SUB>1523</SUB>> ]
+"5187" [label = <(GetType,thePart-&gt;GetType())<SUB>1523</SUB>> ]
+"5193" [label = <(&lt;operator&gt;.assignment,retval = UINT8_C(0))<SUB>1525</SUB>> ]
+"5188" [label = <(&lt;operator&gt;.indirectFieldAccess,thePart-&gt;GetType)<SUB>1523</SUB>> ]
+"5195" [label = <(UINT8_C,UINT8_C(0))<SUB>1525</SUB>> ]
+"5190" [label = <(FIELD_IDENTIFIER,GetType,GetType)<SUB>1523</SUB>> ]
+"5171" [label = <(METHOD,GetType)<SUB>1517</SUB>> ]
+"5199" [label = <(METHOD_RETURN,uint8_t)<SUB>1517</SUB>> ]
+  "5176" -> "5181" 
+  "5197" -> "5199" 
+  "5178" -> "5176" 
+  "5181" -> "5190" 
+  "5181" -> "5195" 
+  "5185" -> "5197" 
+  "5187" -> "5185" 
+  "5193" -> "5197" 
+  "5188" -> "5187" 
   "5195" -> "5193" 
-  "5176" -> "5183" 
+  "5190" -> "5188" 
+  "5171" -> "5178" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/62-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/62-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/62-cfg.dot	2023-06-07 19:31:27.147407667 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/62-cfg.dot	2023-06-07 19:31:31.617407266 +0330
@@ -1,26 +1,26 @@
 digraph "GetFirstSector" {  
-"5211" [label = <(&lt;operator&gt;.assignment,thePart = GetPartition(i))<SUB>1534</SUB>> ]
-"5232" [label = <(RETURN,return retval;,return retval;)<SUB>1539</SUB>> ]
-"5213" [label = <(GetPartition,GetPartition(i))<SUB>1534</SUB>> ]
-"5216" [label = <(&lt;operator&gt;.notEquals,thePart != NULL)<SUB>1535</SUB>> ]
-"5220" [label = <(&lt;operator&gt;.assignment,retval = thePart-&gt;GetStartLBA())<SUB>1536</SUB>> ]
-"5222" [label = <(GetStartLBA,thePart-&gt;GetStartLBA())<SUB>1536</SUB>> ]
-"5228" [label = <(&lt;operator&gt;.assignment,retval = UINT32_C(0))<SUB>1538</SUB>> ]
-"5223" [label = <(&lt;operator&gt;.indirectFieldAccess,thePart-&gt;GetStartLBA)<SUB>1536</SUB>> ]
-"5230" [label = <(UINT32_C,UINT32_C(0))<SUB>1538</SUB>> ]
-"5225" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1536</SUB>> ]
-"5206" [label = <(METHOD,GetFirstSector)<SUB>1530</SUB>> ]
-"5234" [label = <(METHOD_RETURN,uint64_t)<SUB>1530</SUB>> ]
-  "5211" -> "5216" 
-  "5232" -> "5234" 
-  "5213" -> "5211" 
-  "5216" -> "5225" 
-  "5216" -> "5230" 
-  "5220" -> "5232" 
-  "5222" -> "5220" 
-  "5228" -> "5232" 
-  "5223" -> "5222" 
-  "5230" -> "5228" 
+"5206" [label = <(&lt;operator&gt;.assignment,thePart = GetPartition(i))<SUB>1533</SUB>> ]
+"5227" [label = <(RETURN,return retval;,return retval;)<SUB>1538</SUB>> ]
+"5208" [label = <(GetPartition,GetPartition(i))<SUB>1533</SUB>> ]
+"5211" [label = <(&lt;operator&gt;.notEquals,thePart != NULL)<SUB>1534</SUB>> ]
+"5215" [label = <(&lt;operator&gt;.assignment,retval = thePart-&gt;GetStartLBA())<SUB>1535</SUB>> ]
+"5217" [label = <(GetStartLBA,thePart-&gt;GetStartLBA())<SUB>1535</SUB>> ]
+"5223" [label = <(&lt;operator&gt;.assignment,retval = UINT32_C(0))<SUB>1537</SUB>> ]
+"5218" [label = <(&lt;operator&gt;.indirectFieldAccess,thePart-&gt;GetStartLBA)<SUB>1535</SUB>> ]
+"5225" [label = <(UINT32_C,UINT32_C(0))<SUB>1537</SUB>> ]
+"5220" [label = <(FIELD_IDENTIFIER,GetStartLBA,GetStartLBA)<SUB>1535</SUB>> ]
+"5201" [label = <(METHOD,GetFirstSector)<SUB>1529</SUB>> ]
+"5229" [label = <(METHOD_RETURN,uint64_t)<SUB>1529</SUB>> ]
+  "5206" -> "5211" 
+  "5227" -> "5229" 
+  "5208" -> "5206" 
+  "5211" -> "5220" 
+  "5211" -> "5225" 
+  "5215" -> "5227" 
+  "5217" -> "5215" 
+  "5223" -> "5227" 
+  "5218" -> "5217" 
   "5225" -> "5223" 
-  "5206" -> "5213" 
+  "5220" -> "5218" 
+  "5201" -> "5208" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/63-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/63-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/63-cfg.dot	2023-06-07 19:31:27.147407667 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/63-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,26 +1,26 @@
 digraph "GetLength" {  
-"5241" [label = <(&lt;operator&gt;.assignment,thePart = GetPartition(i))<SUB>1546</SUB>> ]
-"5262" [label = <(RETURN,return retval;,return retval;)<SUB>1551</SUB>> ]
-"5243" [label = <(GetPartition,GetPartition(i))<SUB>1546</SUB>> ]
-"5246" [label = <(&lt;operator&gt;.notEquals,thePart != NULL)<SUB>1547</SUB>> ]
-"5250" [label = <(&lt;operator&gt;.assignment,retval = thePart-&gt;GetLengthLBA())<SUB>1548</SUB>> ]
-"5252" [label = <(GetLengthLBA,thePart-&gt;GetLengthLBA())<SUB>1548</SUB>> ]
-"5258" [label = <(&lt;operator&gt;.assignment,retval = UINT64_C(0))<SUB>1550</SUB>> ]
-"5253" [label = <(&lt;operator&gt;.indirectFieldAccess,thePart-&gt;GetLengthLBA)<SUB>1548</SUB>> ]
-"5260" [label = <(UINT64_C,UINT64_C(0))<SUB>1550</SUB>> ]
-"5255" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1548</SUB>> ]
-"5236" [label = <(METHOD,GetLength)<SUB>1542</SUB>> ]
-"5264" [label = <(METHOD_RETURN,uint64_t)<SUB>1542</SUB>> ]
-  "5241" -> "5246" 
-  "5262" -> "5264" 
-  "5243" -> "5241" 
-  "5246" -> "5255" 
-  "5246" -> "5260" 
-  "5250" -> "5262" 
-  "5252" -> "5250" 
-  "5258" -> "5262" 
-  "5253" -> "5252" 
-  "5260" -> "5258" 
+"5236" [label = <(&lt;operator&gt;.assignment,thePart = GetPartition(i))<SUB>1545</SUB>> ]
+"5257" [label = <(RETURN,return retval;,return retval;)<SUB>1550</SUB>> ]
+"5238" [label = <(GetPartition,GetPartition(i))<SUB>1545</SUB>> ]
+"5241" [label = <(&lt;operator&gt;.notEquals,thePart != NULL)<SUB>1546</SUB>> ]
+"5245" [label = <(&lt;operator&gt;.assignment,retval = thePart-&gt;GetLengthLBA())<SUB>1547</SUB>> ]
+"5247" [label = <(GetLengthLBA,thePart-&gt;GetLengthLBA())<SUB>1547</SUB>> ]
+"5253" [label = <(&lt;operator&gt;.assignment,retval = UINT64_C(0))<SUB>1549</SUB>> ]
+"5248" [label = <(&lt;operator&gt;.indirectFieldAccess,thePart-&gt;GetLengthLBA)<SUB>1547</SUB>> ]
+"5255" [label = <(UINT64_C,UINT64_C(0))<SUB>1549</SUB>> ]
+"5250" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1547</SUB>> ]
+"5231" [label = <(METHOD,GetLength)<SUB>1541</SUB>> ]
+"5259" [label = <(METHOD_RETURN,uint64_t)<SUB>1541</SUB>> ]
+  "5236" -> "5241" 
+  "5257" -> "5259" 
+  "5238" -> "5236" 
+  "5241" -> "5250" 
+  "5241" -> "5255" 
+  "5245" -> "5257" 
+  "5247" -> "5245" 
+  "5253" -> "5257" 
+  "5248" -> "5247" 
   "5255" -> "5253" 
-  "5236" -> "5243" 
+  "5250" -> "5248" 
+  "5231" -> "5238" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/64-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/64-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/64-cfg.dot	2023-06-07 19:31:27.147407667 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/64-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,23 +1,23 @@
 digraph "GetPartition" {  
-"5270" [label = <(&lt;operator&gt;.assignment,* thePart = NULL)<SUB>1563</SUB>> ]
-"5288" [label = <(RETURN,return thePart;,return thePart;)<SUB>1567</SUB>> ]
-"5274" [label = <(&lt;operator&gt;.logicalAnd,(i &gt;= 0) &amp;&amp; (i &lt; MAX_MBR_PARTS))<SUB>1565</SUB>> ]
-"5275" [label = <(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>1565</SUB>> ]
-"5278" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1565</SUB>> ]
-"5282" [label = <(&lt;operator&gt;.assignment,thePart = &amp;partitions[i])<SUB>1566</SUB>> ]
-"5284" [label = <(&lt;operator&gt;.addressOf,&amp;partitions[i])<SUB>1566</SUB>> ]
-"5285" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1566</SUB>> ]
-"5266" [label = <(METHOD,GetPartition)<SUB>1562</SUB>> ]
-"5290" [label = <(METHOD_RETURN,MBRPart)<SUB>1562</SUB>> ]
-  "5270" -> "5275" 
-  "5288" -> "5290" 
-  "5274" -> "5285" 
-  "5274" -> "5288" 
-  "5275" -> "5274" 
-  "5275" -> "5278" 
-  "5278" -> "5274" 
-  "5282" -> "5288" 
-  "5284" -> "5282" 
-  "5285" -> "5284" 
-  "5266" -> "5270" 
+"5265" [label = <(&lt;operator&gt;.assignment,* thePart = NULL)<SUB>1562</SUB>> ]
+"5283" [label = <(RETURN,return thePart;,return thePart;)<SUB>1566</SUB>> ]
+"5269" [label = <(&lt;operator&gt;.logicalAnd,(i &gt;= 0) &amp;&amp; (i &lt; MAX_MBR_PARTS))<SUB>1564</SUB>> ]
+"5270" [label = <(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>1564</SUB>> ]
+"5273" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>1564</SUB>> ]
+"5277" [label = <(&lt;operator&gt;.assignment,thePart = &amp;partitions[i])<SUB>1565</SUB>> ]
+"5279" [label = <(&lt;operator&gt;.addressOf,&amp;partitions[i])<SUB>1565</SUB>> ]
+"5280" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[i])<SUB>1565</SUB>> ]
+"5261" [label = <(METHOD,GetPartition)<SUB>1561</SUB>> ]
+"5285" [label = <(METHOD_RETURN,MBRPart)<SUB>1561</SUB>> ]
+  "5265" -> "5270" 
+  "5283" -> "5285" 
+  "5269" -> "5280" 
+  "5269" -> "5283" 
+  "5270" -> "5269" 
+  "5270" -> "5273" 
+  "5273" -> "5269" 
+  "5277" -> "5283" 
+  "5279" -> "5277" 
+  "5280" -> "5279" 
+  "5261" -> "5265" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/65-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/65-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/65-cfg.dot	2023-06-07 19:31:27.147407667 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/65-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,230 +1,230 @@
 digraph "DoMenu" {  
-"5300" [label = <(&lt;operator&gt;.assignment,goOn = 1)<SUB>1582</SUB>> ]
-"5303" [label = <(&lt;operator&gt;.assignment,quitting = 0)<SUB>1582</SUB>> ]
-"5306" [label = <(&lt;operator&gt;.assignment,haveShownInfo = 0)<SUB>1582</SUB>> ]
-"5569" [label = <(RETURN,return (retval);,return (retval);)<SUB>1658</SUB>> ]
-"5313" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; prompt)<SUB>1587</SUB>> ]
-"5560" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>1655</SUB>> ]
-"5317" [label = <(&lt;operator&gt;.indirectIndexAccess,ReadString()[0])<SUB>1588</SUB>> ]
-"5562" [label = <(&lt;operator&gt;.minus,-1)<SUB>1655</SUB>> ]
-"5566" [label = <(&lt;operator&gt;.assignment,retval = CountParts())<SUB>1657</SUB>> ]
-"5318" [label = <(ReadString,ReadString())<SUB>1588</SUB>> ]
-"5323" [label = <(&lt;operator&gt;.assignment,goOn = cin.good())<SUB>1590</SUB>> ]
-"5334" [label = <(&lt;operator&gt;.assignment,num = GetNumber(1, MAX_MBR_PARTS, 1, &quot;Toggle active flag for partition: &quot;) - 1)<SUB>1593</SUB>> ]
-"5389" [label = <(&lt;operator&gt;.assignment,num = GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as logical: &quot;) - 1)<SUB>1602</SUB>> ]
-"5398" [label = <(SetInclusionwChecks,SetInclusionwChecks(num, LOGICAL))<SUB>1603</SUB>> ]
-"5406" [label = <(&lt;operator&gt;.assignment,num = GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to omit: &quot;) - 1)<SUB>1606</SUB>> ]
-"5415" [label = <(SetInclusionwChecks,SetInclusionwChecks(num, NONE))<SUB>1607</SUB>> ]
-"5440" [label = <(DisplayMBRData,DisplayMBRData())<SUB>1617</SUB>> ]
-"5446" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;This will abandon your changes. Are you sure? &quot;)<SUB>1620</SUB>> ]
-"5465" [label = <(&lt;operator&gt;.assignment,num = GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as primary: &quot;) - 1)<SUB>1627</SUB>> ]
-"5474" [label = <(SetInclusionwChecks,SetInclusionwChecks(num, PRIMARY))<SUB>1628</SUB>> ]
-"5482" [label = <(SortMBR,SortMBR())<SUB>1631</SUB>> ]
-"5488" [label = <(&lt;operator&gt;.assignment,num = GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to change type code: &quot;) - 1)<SUB>1634</SUB>> ]
-"5497" [label = <(&lt;operator&gt;.assignment,hexCode = 0x00)<SUB>1635</SUB>> ]
-"5549" [label = <(&lt;operator&gt;.assignment,goOn = 0)<SUB>1647</SUB>> ]
-"5554" [label = <(ShowCommands,ShowCommands())<SUB>1650</SUB>> ]
-"5568" [label = <(CountParts,CountParts())<SUB>1657</SUB>> ]
-"5325" [label = <(good,cin.good())<SUB>1590</SUB>> ]
-"5336" [label = <(&lt;operator&gt;.subtraction,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Toggle active flag for partition: &quot;) - 1)<SUB>1593</SUB>> ]
-"5344" [label = <(&lt;operator&gt;.notEquals,partitions[num].GetInclusion() != NONE)<SUB>1594</SUB>> ]
-"5377" [label = <(&lt;operator&gt;.lessThan,num &lt; MAX_MBR_PARTS)<SUB>1598</SUB>> ]
-"5380" [label = <(&lt;operator&gt;.postIncrement,num++)<SUB>1598</SUB>> ]
-"5382" [label = <(RecomputeCHS,RecomputeCHS(num))<SUB>1599</SUB>> ]
-"5391" [label = <(&lt;operator&gt;.subtraction,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as logical: &quot;) - 1)<SUB>1602</SUB>> ]
-"5408" [label = <(&lt;operator&gt;.subtraction,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to omit: &quot;) - 1)<SUB>1606</SUB>> ]
-"5424" [label = <(&lt;operator&gt;.logicalNot,!haveShownInfo)<SUB>1610</SUB>> ]
-"5450" [label = <(&lt;operator&gt;.equals,GetYN() == 'Y')<SUB>1621</SUB>> ]
-"5467" [label = <(&lt;operator&gt;.subtraction,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as primary: &quot;) - 1)<SUB>1627</SUB>> ]
-"5490" [label = <(&lt;operator&gt;.subtraction,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to change type code: &quot;) - 1)<SUB>1634</SUB>> ]
-"5501" [label = <(&lt;operator&gt;.greaterThan,partitions[num].GetLengthLBA() &gt; 0)<SUB>1636</SUB>> ]
-"5326" [label = <(&lt;operator&gt;.fieldAccess,cin.good)<SUB>1590</SUB>> ]
-"5337" [label = <(GetNumber,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Toggle active flag for partition: &quot;))<SUB>1593</SUB>> ]
-"5345" [label = <(GetInclusion,partitions[num].GetInclusion())<SUB>1594</SUB>> ]
-"5353" [label = <(SetStatus,partitions[num].SetStatus(partitions[num].GetStatus() ^ 0x80))<SUB>1595</SUB>> ]
-"5374" [label = <(&lt;operator&gt;.assignment,num = 0)<SUB>1598</SUB>> ]
-"5392" [label = <(GetNumber,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as logical: &quot;))<SUB>1602</SUB>> ]
-"5409" [label = <(GetNumber,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to omit: &quot;))<SUB>1606</SUB>> ]
-"5427" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\n** NOTE: Partition numbers do NOT indicate final primary/logical &quot;\012 &lt;&lt; &quot;status,\n** unlike in most MBR partitioning tools!\n\a&quot;)<SUB>1611</SUB>> ]
-"5432" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\n** Extended partitions are not displayed, but will be generated &quot;\012 &lt;&lt; &quot;as required.\n&quot;)<SUB>1613</SUB>> ]
-"5437" [label = <(&lt;operator&gt;.assignment,haveShownInfo = 1)<SUB>1615</SUB>> ]
-"5451" [label = <(GetYN,GetYN())<SUB>1621</SUB>> ]
-"5454" [label = <(&lt;operator&gt;.assignment,goOn = 0)<SUB>1622</SUB>> ]
-"5457" [label = <(&lt;operator&gt;.assignment,quitting = 1)<SUB>1623</SUB>> ]
-"5468" [label = <(GetNumber,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as primary: &quot;))<SUB>1627</SUB>> ]
-"5491" [label = <(GetNumber,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to change type code: &quot;))<SUB>1634</SUB>> ]
-"5502" [label = <(GetLengthLBA,partitions[num].GetLengthLBA())<SUB>1636</SUB>> ]
-"5537" [label = <(SetType,partitions[num].SetType(hexCode))<SUB>1643</SUB>> ]
-"5328" [label = <(FIELD_IDENTIFIER,good,good)<SUB>1590</SUB>> ]
-"5346" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetInclusion)<SUB>1594</SUB>> ]
-"5354" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetStatus)<SUB>1595</SUB>> ]
-"5359" [label = <(&lt;operator&gt;.xor,partitions[num].GetStatus() ^ 0x80)<SUB>1595</SUB>> ]
-"5428" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\n** NOTE: Partition numbers do NOT indicate final primary/logical &quot;)<SUB>1611</SUB>> ]
-"5433" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\n** Extended partitions are not displayed, but will be generated &quot;)<SUB>1613</SUB>> ]
-"5503" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetLengthLBA)<SUB>1636</SUB>> ]
-"5511" [label = <(&lt;operator&gt;.logicalOr,(hexCode &lt;= 0) || (hexCode &gt; 255))<SUB>1637</SUB>> ]
-"5538" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetType)<SUB>1643</SUB>> ]
-"5347" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1594</SUB>> ]
-"5350" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1594</SUB>> ]
-"5355" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1595</SUB>> ]
-"5358" [label = <(FIELD_IDENTIFIER,SetStatus,SetStatus)<SUB>1595</SUB>> ]
-"5360" [label = <(GetStatus,partitions[num].GetStatus())<SUB>1595</SUB>> ]
-"5504" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1636</SUB>> ]
-"5507" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1636</SUB>> ]
-"5512" [label = <(&lt;operator&gt;.lessEqualsThan,hexCode &lt;= 0)<SUB>1637</SUB>> ]
-"5515" [label = <(&lt;operator&gt;.greaterThan,hexCode &gt; 255)<SUB>1637</SUB>> ]
-"5519" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;Enter an MBR hex code: &quot;)<SUB>1638</SUB>> ]
-"5522" [label = <(&lt;operator&gt;.assignment,tempStr = ReadString())<SUB>1639</SUB>> ]
-"5539" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1643</SUB>> ]
-"5542" [label = <(FIELD_IDENTIFIER,SetType,SetType)<SUB>1643</SUB>> ]
-"5361" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetStatus)<SUB>1595</SUB>> ]
-"5524" [label = <(ReadString,ReadString())<SUB>1639</SUB>> ]
-"5526" [label = <(IsHex,IsHex(tempStr))<SUB>1640</SUB>> ]
-"5362" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1595</SUB>> ]
-"5365" [label = <(FIELD_IDENTIFIER,GetStatus,GetStatus)<SUB>1595</SUB>> ]
-"5529" [label = <(sscanf,sscanf(tempStr.c_str(), &quot;%x&quot;, &amp;hexCode))<SUB>1641</SUB>> ]
-"5530" [label = <(c_str,tempStr.c_str())<SUB>1641</SUB>> ]
-"5535" [label = <(&lt;operator&gt;.addressOf,&amp;hexCode)<SUB>1641</SUB>> ]
-"5531" [label = <(&lt;operator&gt;.fieldAccess,tempStr.c_str)<SUB>1641</SUB>> ]
-"5533" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1641</SUB>> ]
-"5292" [label = <(METHOD,DoMenu)<SUB>1581</SUB>> ]
-"5571" [label = <(METHOD_RETURN,int)<SUB>1581</SUB>> ]
-  "5300" -> "5303" 
-  "5303" -> "5306" 
-  "5306" -> "5313" 
-  "5569" -> "5571" 
-  "5313" -> "5318" 
-  "5560" -> "5569" 
-  "5317" -> "5328" 
-  "5317" -> "5337" 
-  "5317" -> "5374" 
-  "5317" -> "5392" 
-  "5317" -> "5409" 
-  "5317" -> "5424" 
-  "5317" -> "5446" 
-  "5317" -> "5468" 
-  "5317" -> "5482" 
-  "5317" -> "5491" 
-  "5317" -> "5549" 
-  "5317" -> "5554" 
-  "5562" -> "5560" 
-  "5566" -> "5569" 
-  "5318" -> "5317" 
-  "5323" -> "5313" 
-  "5323" -> "5562" 
-  "5323" -> "5568" 
-  "5334" -> "5347" 
-  "5389" -> "5398" 
-  "5398" -> "5313" 
-  "5398" -> "5562" 
-  "5398" -> "5568" 
-  "5406" -> "5415" 
-  "5415" -> "5313" 
-  "5415" -> "5562" 
-  "5415" -> "5568" 
-  "5440" -> "5313" 
-  "5440" -> "5562" 
-  "5440" -> "5568" 
-  "5446" -> "5451" 
-  "5465" -> "5474" 
-  "5474" -> "5313" 
-  "5474" -> "5562" 
-  "5474" -> "5568" 
-  "5482" -> "5313" 
-  "5482" -> "5562" 
-  "5482" -> "5568" 
-  "5488" -> "5497" 
-  "5497" -> "5504" 
-  "5549" -> "5313" 
-  "5549" -> "5562" 
-  "5549" -> "5568" 
-  "5554" -> "5313" 
-  "5554" -> "5562" 
-  "5554" -> "5568" 
-  "5568" -> "5566" 
-  "5325" -> "5323" 
-  "5336" -> "5334" 
-  "5344" -> "5355" 
-  "5344" -> "5313" 
-  "5344" -> "5562" 
-  "5344" -> "5568" 
-  "5377" -> "5382" 
-  "5377" -> "5313" 
-  "5377" -> "5562" 
-  "5377" -> "5568" 
-  "5380" -> "5377" 
-  "5382" -> "5380" 
-  "5391" -> "5389" 
-  "5408" -> "5406" 
-  "5424" -> "5440" 
-  "5424" -> "5428" 
-  "5450" -> "5454" 
-  "5450" -> "5313" 
-  "5450" -> "5562" 
-  "5450" -> "5568" 
-  "5467" -> "5465" 
-  "5490" -> "5488" 
-  "5501" -> "5512" 
-  "5501" -> "5313" 
-  "5501" -> "5562" 
-  "5501" -> "5568" 
-  "5326" -> "5325" 
-  "5337" -> "5336" 
-  "5345" -> "5344" 
-  "5353" -> "5313" 
-  "5353" -> "5562" 
-  "5353" -> "5568" 
-  "5374" -> "5377" 
-  "5392" -> "5391" 
-  "5409" -> "5408" 
-  "5427" -> "5433" 
-  "5432" -> "5437" 
-  "5437" -> "5440" 
-  "5451" -> "5450" 
-  "5454" -> "5457" 
-  "5457" -> "5313" 
-  "5457" -> "5562" 
-  "5457" -> "5568" 
-  "5468" -> "5467" 
-  "5491" -> "5490" 
-  "5502" -> "5501" 
-  "5537" -> "5313" 
-  "5537" -> "5562" 
-  "5537" -> "5568" 
-  "5328" -> "5326" 
-  "5346" -> "5345" 
-  "5354" -> "5362" 
-  "5359" -> "5353" 
+"5295" [label = <(&lt;operator&gt;.assignment,goOn = 1)<SUB>1581</SUB>> ]
+"5298" [label = <(&lt;operator&gt;.assignment,quitting = 0)<SUB>1581</SUB>> ]
+"5301" [label = <(&lt;operator&gt;.assignment,haveShownInfo = 0)<SUB>1581</SUB>> ]
+"5564" [label = <(RETURN,return (retval);,return (retval);)<SUB>1657</SUB>> ]
+"5308" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; prompt)<SUB>1586</SUB>> ]
+"5555" [label = <(&lt;operator&gt;.assignment,retval = -1)<SUB>1654</SUB>> ]
+"5312" [label = <(&lt;operator&gt;.indirectIndexAccess,ReadString()[0])<SUB>1587</SUB>> ]
+"5557" [label = <(&lt;operator&gt;.minus,-1)<SUB>1654</SUB>> ]
+"5561" [label = <(&lt;operator&gt;.assignment,retval = CountParts())<SUB>1656</SUB>> ]
+"5313" [label = <(ReadString,ReadString())<SUB>1587</SUB>> ]
+"5318" [label = <(&lt;operator&gt;.assignment,goOn = cin.good())<SUB>1589</SUB>> ]
+"5329" [label = <(&lt;operator&gt;.assignment,num = GetNumber(1, MAX_MBR_PARTS, 1, &quot;Toggle active flag for partition: &quot;) - 1)<SUB>1592</SUB>> ]
+"5384" [label = <(&lt;operator&gt;.assignment,num = GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as logical: &quot;) - 1)<SUB>1601</SUB>> ]
+"5393" [label = <(SetInclusionwChecks,SetInclusionwChecks(num, LOGICAL))<SUB>1602</SUB>> ]
+"5401" [label = <(&lt;operator&gt;.assignment,num = GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to omit: &quot;) - 1)<SUB>1605</SUB>> ]
+"5410" [label = <(SetInclusionwChecks,SetInclusionwChecks(num, NONE))<SUB>1606</SUB>> ]
+"5435" [label = <(DisplayMBRData,DisplayMBRData())<SUB>1616</SUB>> ]
+"5441" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;This will abandon your changes. Are you sure? &quot;)<SUB>1619</SUB>> ]
+"5460" [label = <(&lt;operator&gt;.assignment,num = GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as primary: &quot;) - 1)<SUB>1626</SUB>> ]
+"5469" [label = <(SetInclusionwChecks,SetInclusionwChecks(num, PRIMARY))<SUB>1627</SUB>> ]
+"5477" [label = <(SortMBR,SortMBR())<SUB>1630</SUB>> ]
+"5483" [label = <(&lt;operator&gt;.assignment,num = GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to change type code: &quot;) - 1)<SUB>1633</SUB>> ]
+"5492" [label = <(&lt;operator&gt;.assignment,hexCode = 0x00)<SUB>1634</SUB>> ]
+"5544" [label = <(&lt;operator&gt;.assignment,goOn = 0)<SUB>1646</SUB>> ]
+"5549" [label = <(ShowCommands,ShowCommands())<SUB>1649</SUB>> ]
+"5563" [label = <(CountParts,CountParts())<SUB>1656</SUB>> ]
+"5320" [label = <(good,cin.good())<SUB>1589</SUB>> ]
+"5331" [label = <(&lt;operator&gt;.subtraction,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Toggle active flag for partition: &quot;) - 1)<SUB>1592</SUB>> ]
+"5339" [label = <(&lt;operator&gt;.notEquals,partitions[num].GetInclusion() != NONE)<SUB>1593</SUB>> ]
+"5372" [label = <(&lt;operator&gt;.lessThan,num &lt; MAX_MBR_PARTS)<SUB>1597</SUB>> ]
+"5375" [label = <(&lt;operator&gt;.postIncrement,num++)<SUB>1597</SUB>> ]
+"5377" [label = <(RecomputeCHS,RecomputeCHS(num))<SUB>1598</SUB>> ]
+"5386" [label = <(&lt;operator&gt;.subtraction,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as logical: &quot;) - 1)<SUB>1601</SUB>> ]
+"5403" [label = <(&lt;operator&gt;.subtraction,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to omit: &quot;) - 1)<SUB>1605</SUB>> ]
+"5419" [label = <(&lt;operator&gt;.logicalNot,!haveShownInfo)<SUB>1609</SUB>> ]
+"5445" [label = <(&lt;operator&gt;.equals,GetYN() == 'Y')<SUB>1620</SUB>> ]
+"5462" [label = <(&lt;operator&gt;.subtraction,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as primary: &quot;) - 1)<SUB>1626</SUB>> ]
+"5485" [label = <(&lt;operator&gt;.subtraction,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to change type code: &quot;) - 1)<SUB>1633</SUB>> ]
+"5496" [label = <(&lt;operator&gt;.greaterThan,partitions[num].GetLengthLBA() &gt; 0)<SUB>1635</SUB>> ]
+"5321" [label = <(&lt;operator&gt;.fieldAccess,cin.good)<SUB>1589</SUB>> ]
+"5332" [label = <(GetNumber,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Toggle active flag for partition: &quot;))<SUB>1592</SUB>> ]
+"5340" [label = <(GetInclusion,partitions[num].GetInclusion())<SUB>1593</SUB>> ]
+"5348" [label = <(SetStatus,partitions[num].SetStatus(partitions[num].GetStatus() ^ 0x80))<SUB>1594</SUB>> ]
+"5369" [label = <(&lt;operator&gt;.assignment,num = 0)<SUB>1597</SUB>> ]
+"5387" [label = <(GetNumber,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as logical: &quot;))<SUB>1601</SUB>> ]
+"5404" [label = <(GetNumber,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to omit: &quot;))<SUB>1605</SUB>> ]
+"5422" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\n** NOTE: Partition numbers do NOT indicate final primary/logical &quot;\012 &lt;&lt; &quot;status,\n** unlike in most MBR partitioning tools!\n\a&quot;)<SUB>1610</SUB>> ]
+"5427" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\n** Extended partitions are not displayed, but will be generated &quot;\012 &lt;&lt; &quot;as required.\n&quot;)<SUB>1612</SUB>> ]
+"5432" [label = <(&lt;operator&gt;.assignment,haveShownInfo = 1)<SUB>1614</SUB>> ]
+"5446" [label = <(GetYN,GetYN())<SUB>1620</SUB>> ]
+"5449" [label = <(&lt;operator&gt;.assignment,goOn = 0)<SUB>1621</SUB>> ]
+"5452" [label = <(&lt;operator&gt;.assignment,quitting = 1)<SUB>1622</SUB>> ]
+"5463" [label = <(GetNumber,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to set as primary: &quot;))<SUB>1626</SUB>> ]
+"5486" [label = <(GetNumber,GetNumber(1, MAX_MBR_PARTS, 1, &quot;Partition to change type code: &quot;))<SUB>1633</SUB>> ]
+"5497" [label = <(GetLengthLBA,partitions[num].GetLengthLBA())<SUB>1635</SUB>> ]
+"5532" [label = <(SetType,partitions[num].SetType(hexCode))<SUB>1642</SUB>> ]
+"5323" [label = <(FIELD_IDENTIFIER,good,good)<SUB>1589</SUB>> ]
+"5341" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetInclusion)<SUB>1593</SUB>> ]
+"5349" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetStatus)<SUB>1594</SUB>> ]
+"5354" [label = <(&lt;operator&gt;.xor,partitions[num].GetStatus() ^ 0x80)<SUB>1594</SUB>> ]
+"5423" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\n** NOTE: Partition numbers do NOT indicate final primary/logical &quot;)<SUB>1610</SUB>> ]
+"5428" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;\n** Extended partitions are not displayed, but will be generated &quot;)<SUB>1612</SUB>> ]
+"5498" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetLengthLBA)<SUB>1635</SUB>> ]
+"5506" [label = <(&lt;operator&gt;.logicalOr,(hexCode &lt;= 0) || (hexCode &gt; 255))<SUB>1636</SUB>> ]
+"5533" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].SetType)<SUB>1642</SUB>> ]
+"5342" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1593</SUB>> ]
+"5345" [label = <(FIELD_IDENTIFIER,GetInclusion,GetInclusion)<SUB>1593</SUB>> ]
+"5350" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1594</SUB>> ]
+"5353" [label = <(FIELD_IDENTIFIER,SetStatus,SetStatus)<SUB>1594</SUB>> ]
+"5355" [label = <(GetStatus,partitions[num].GetStatus())<SUB>1594</SUB>> ]
+"5499" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1635</SUB>> ]
+"5502" [label = <(FIELD_IDENTIFIER,GetLengthLBA,GetLengthLBA)<SUB>1635</SUB>> ]
+"5507" [label = <(&lt;operator&gt;.lessEqualsThan,hexCode &lt;= 0)<SUB>1636</SUB>> ]
+"5510" [label = <(&lt;operator&gt;.greaterThan,hexCode &gt; 255)<SUB>1636</SUB>> ]
+"5514" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;Enter an MBR hex code: &quot;)<SUB>1637</SUB>> ]
+"5517" [label = <(&lt;operator&gt;.assignment,tempStr = ReadString())<SUB>1638</SUB>> ]
+"5534" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1642</SUB>> ]
+"5537" [label = <(FIELD_IDENTIFIER,SetType,SetType)<SUB>1642</SUB>> ]
+"5356" [label = <(&lt;operator&gt;.fieldAccess,partitions[num].GetStatus)<SUB>1594</SUB>> ]
+"5519" [label = <(ReadString,ReadString())<SUB>1638</SUB>> ]
+"5521" [label = <(IsHex,IsHex(tempStr))<SUB>1639</SUB>> ]
+"5357" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[num])<SUB>1594</SUB>> ]
+"5360" [label = <(FIELD_IDENTIFIER,GetStatus,GetStatus)<SUB>1594</SUB>> ]
+"5524" [label = <(sscanf,sscanf(tempStr.c_str(), &quot;%x&quot;, &amp;hexCode))<SUB>1640</SUB>> ]
+"5525" [label = <(c_str,tempStr.c_str())<SUB>1640</SUB>> ]
+"5530" [label = <(&lt;operator&gt;.addressOf,&amp;hexCode)<SUB>1640</SUB>> ]
+"5526" [label = <(&lt;operator&gt;.fieldAccess,tempStr.c_str)<SUB>1640</SUB>> ]
+"5528" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1640</SUB>> ]
+"5287" [label = <(METHOD,DoMenu)<SUB>1580</SUB>> ]
+"5566" [label = <(METHOD_RETURN,int)<SUB>1580</SUB>> ]
+  "5295" -> "5298" 
+  "5298" -> "5301" 
+  "5301" -> "5308" 
+  "5564" -> "5566" 
+  "5308" -> "5313" 
+  "5555" -> "5564" 
+  "5312" -> "5323" 
+  "5312" -> "5332" 
+  "5312" -> "5369" 
+  "5312" -> "5387" 
+  "5312" -> "5404" 
+  "5312" -> "5419" 
+  "5312" -> "5441" 
+  "5312" -> "5463" 
+  "5312" -> "5477" 
+  "5312" -> "5486" 
+  "5312" -> "5544" 
+  "5312" -> "5549" 
+  "5557" -> "5555" 
+  "5561" -> "5564" 
+  "5313" -> "5312" 
+  "5318" -> "5308" 
+  "5318" -> "5557" 
+  "5318" -> "5563" 
+  "5329" -> "5342" 
+  "5384" -> "5393" 
+  "5393" -> "5308" 
+  "5393" -> "5557" 
+  "5393" -> "5563" 
+  "5401" -> "5410" 
+  "5410" -> "5308" 
+  "5410" -> "5557" 
+  "5410" -> "5563" 
+  "5435" -> "5308" 
+  "5435" -> "5557" 
+  "5435" -> "5563" 
+  "5441" -> "5446" 
+  "5460" -> "5469" 
+  "5469" -> "5308" 
+  "5469" -> "5557" 
+  "5469" -> "5563" 
+  "5477" -> "5308" 
+  "5477" -> "5557" 
+  "5477" -> "5563" 
+  "5483" -> "5492" 
+  "5492" -> "5499" 
+  "5544" -> "5308" 
+  "5544" -> "5557" 
+  "5544" -> "5563" 
+  "5549" -> "5308" 
+  "5549" -> "5557" 
+  "5549" -> "5563" 
+  "5563" -> "5561" 
+  "5320" -> "5318" 
+  "5331" -> "5329" 
+  "5339" -> "5350" 
+  "5339" -> "5308" 
+  "5339" -> "5557" 
+  "5339" -> "5563" 
+  "5372" -> "5377" 
+  "5372" -> "5308" 
+  "5372" -> "5557" 
+  "5372" -> "5563" 
+  "5375" -> "5372" 
+  "5377" -> "5375" 
+  "5386" -> "5384" 
+  "5403" -> "5401" 
+  "5419" -> "5435" 
+  "5419" -> "5423" 
+  "5445" -> "5449" 
+  "5445" -> "5308" 
+  "5445" -> "5557" 
+  "5445" -> "5563" 
+  "5462" -> "5460" 
+  "5485" -> "5483" 
+  "5496" -> "5507" 
+  "5496" -> "5308" 
+  "5496" -> "5557" 
+  "5496" -> "5563" 
+  "5321" -> "5320" 
+  "5332" -> "5331" 
+  "5340" -> "5339" 
+  "5348" -> "5308" 
+  "5348" -> "5557" 
+  "5348" -> "5563" 
+  "5369" -> "5372" 
+  "5387" -> "5386" 
+  "5404" -> "5403" 
+  "5422" -> "5428" 
+  "5427" -> "5432" 
+  "5432" -> "5435" 
+  "5446" -> "5445" 
+  "5449" -> "5452" 
+  "5452" -> "5308" 
+  "5452" -> "5557" 
+  "5452" -> "5563" 
+  "5463" -> "5462" 
+  "5486" -> "5485" 
+  "5497" -> "5496" 
+  "5532" -> "5308" 
+  "5532" -> "5557" 
+  "5532" -> "5563" 
+  "5323" -> "5321" 
+  "5341" -> "5340" 
+  "5349" -> "5357" 
+  "5354" -> "5348" 
+  "5423" -> "5422" 
   "5428" -> "5427" 
-  "5433" -> "5432" 
-  "5503" -> "5502" 
-  "5511" -> "5519" 
-  "5511" -> "5539" 
-  "5538" -> "5537" 
-  "5347" -> "5350" 
-  "5350" -> "5346" 
-  "5355" -> "5358" 
-  "5358" -> "5354" 
-  "5360" -> "5359" 
-  "5504" -> "5507" 
-  "5507" -> "5503" 
-  "5512" -> "5511" 
-  "5512" -> "5515" 
-  "5515" -> "5511" 
-  "5519" -> "5524" 
-  "5522" -> "5526" 
-  "5539" -> "5542" 
-  "5542" -> "5538" 
-  "5361" -> "5360" 
-  "5524" -> "5522" 
-  "5526" -> "5512" 
-  "5526" -> "5533" 
-  "5362" -> "5365" 
-  "5365" -> "5361" 
-  "5529" -> "5512" 
-  "5530" -> "5535" 
-  "5535" -> "5529" 
-  "5531" -> "5530" 
-  "5533" -> "5531" 
-  "5292" -> "5300" 
+  "5498" -> "5497" 
+  "5506" -> "5514" 
+  "5506" -> "5534" 
+  "5533" -> "5532" 
+  "5342" -> "5345" 
+  "5345" -> "5341" 
+  "5350" -> "5353" 
+  "5353" -> "5349" 
+  "5355" -> "5354" 
+  "5499" -> "5502" 
+  "5502" -> "5498" 
+  "5507" -> "5506" 
+  "5507" -> "5510" 
+  "5510" -> "5506" 
+  "5514" -> "5519" 
+  "5517" -> "5521" 
+  "5534" -> "5537" 
+  "5537" -> "5533" 
+  "5356" -> "5355" 
+  "5519" -> "5517" 
+  "5521" -> "5507" 
+  "5521" -> "5528" 
+  "5357" -> "5360" 
+  "5360" -> "5356" 
+  "5524" -> "5507" 
+  "5525" -> "5530" 
+  "5530" -> "5524" 
+  "5526" -> "5525" 
+  "5528" -> "5526" 
+  "5287" -> "5295" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/66-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/66-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/66-cfg.dot	2023-06-07 19:31:27.147407667 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/66-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,25 +1,25 @@
 digraph "ShowCommands" {  
-"5576" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;a\ttoggle the active/boot flag\n&quot;)<SUB>1662</SUB>> ]
-"5579" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;c\trecompute all CHS values\n&quot;)<SUB>1663</SUB>> ]
-"5582" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;l\tset partition as logical\n&quot;)<SUB>1664</SUB>> ]
-"5585" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;o\tomit partition\n&quot;)<SUB>1665</SUB>> ]
-"5588" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;p\tprint the MBR partition table\n&quot;)<SUB>1666</SUB>> ]
-"5591" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;q\tquit without saving changes\n&quot;)<SUB>1667</SUB>> ]
-"5594" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;r\tset partition as primary\n&quot;)<SUB>1668</SUB>> ]
-"5597" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;s\tsort MBR partitions\n&quot;)<SUB>1669</SUB>> ]
-"5600" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;t\tchange partition type code\n&quot;)<SUB>1670</SUB>> ]
-"5603" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;w\twrite the MBR partition table to disk and exit\n&quot;)<SUB>1671</SUB>> ]
-"5573" [label = <(METHOD,ShowCommands)<SUB>1661</SUB>> ]
-"5606" [label = <(METHOD_RETURN,void)<SUB>1661</SUB>> ]
-  "5576" -> "5579" 
-  "5579" -> "5582" 
-  "5582" -> "5585" 
-  "5585" -> "5588" 
-  "5588" -> "5591" 
-  "5591" -> "5594" 
-  "5594" -> "5597" 
-  "5597" -> "5600" 
-  "5600" -> "5603" 
-  "5603" -> "5606" 
-  "5573" -> "5576" 
+"5571" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;a\ttoggle the active/boot flag\n&quot;)<SUB>1661</SUB>> ]
+"5574" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;c\trecompute all CHS values\n&quot;)<SUB>1662</SUB>> ]
+"5577" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;l\tset partition as logical\n&quot;)<SUB>1663</SUB>> ]
+"5580" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;o\tomit partition\n&quot;)<SUB>1664</SUB>> ]
+"5583" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;p\tprint the MBR partition table\n&quot;)<SUB>1665</SUB>> ]
+"5586" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;q\tquit without saving changes\n&quot;)<SUB>1666</SUB>> ]
+"5589" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;r\tset partition as primary\n&quot;)<SUB>1667</SUB>> ]
+"5592" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;s\tsort MBR partitions\n&quot;)<SUB>1668</SUB>> ]
+"5595" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;t\tchange partition type code\n&quot;)<SUB>1669</SUB>> ]
+"5598" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;w\twrite the MBR partition table to disk and exit\n&quot;)<SUB>1670</SUB>> ]
+"5568" [label = <(METHOD,ShowCommands)<SUB>1660</SUB>> ]
+"5601" [label = <(METHOD_RETURN,void)<SUB>1660</SUB>> ]
+  "5571" -> "5574" 
+  "5574" -> "5577" 
+  "5577" -> "5580" 
+  "5580" -> "5583" 
+  "5583" -> "5586" 
+  "5586" -> "5589" 
+  "5589" -> "5592" 
+  "5592" -> "5595" 
+  "5595" -> "5598" 
+  "5598" -> "5601" 
+  "5568" -> "5571" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/67-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/67-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/67-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/67-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignment" {  
-"5739" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
-"5743" [label = <(METHOD_RETURN,ANY)> ]
-  "5739" -> "5743" 
+"5734" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
+"5738" [label = <(METHOD_RETURN,ANY)> ]
+  "5734" -> "5738" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/68-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/68-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/68-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/68-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "EmptyMBR" {  
-"5744" [label = <(METHOD,EmptyMBR)> ]
-"5747" [label = <(METHOD_RETURN,ANY)> ]
-  "5744" -> "5747" 
+"5739" [label = <(METHOD,EmptyMBR)> ]
+"5742" [label = <(METHOD_RETURN,ANY)> ]
+  "5739" -> "5742" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/69-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/69-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/69-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/69-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.notEquals" {  
-"5748" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
-"5752" [label = <(METHOD_RETURN,ANY)> ]
-  "5748" -> "5752" 
+"5743" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
+"5747" [label = <(METHOD_RETURN,ANY)> ]
+  "5743" -> "5747" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/70-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/70-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/70-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/70-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addressOf" {  
-"5753" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
-"5756" [label = <(METHOD_RETURN,ANY)> ]
-  "5753" -> "5756" 
+"5748" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
+"5751" [label = <(METHOD_RETURN,ANY)> ]
+  "5748" -> "5751" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/71-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/71-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/71-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/71-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "memcpy" {  
-"5757" [label = <(METHOD,memcpy)> ]
-"5762" [label = <(METHOD_RETURN,ANY)> ]
-  "5757" -> "5762" 
+"5752" [label = <(METHOD,memcpy)> ]
+"5757" [label = <(METHOD_RETURN,ANY)> ]
+  "5752" -> "5757" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/72-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/72-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/72-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/72-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.fieldAccess" {  
-"5763" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
-"5767" [label = <(METHOD_RETURN,ANY)> ]
-  "5763" -> "5767" 
+"5758" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
+"5762" [label = <(METHOD_RETURN,ANY)> ]
+  "5758" -> "5762" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/73-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/73-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/73-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/73-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.new" {  
-"5768" [label = <(METHOD,&lt;operator&gt;.new)> ]
-"5771" [label = <(METHOD_RETURN,ANY)> ]
-  "5768" -> "5771" 
+"5763" [label = <(METHOD,&lt;operator&gt;.new)> ]
+"5766" [label = <(METHOD_RETURN,ANY)> ]
+  "5763" -> "5766" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/74-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/74-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/74-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/74-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.equals" {  
-"5772" [label = <(METHOD,&lt;operator&gt;.equals)> ]
-"5776" [label = <(METHOD_RETURN,ANY)> ]
-  "5772" -> "5776" 
+"5767" [label = <(METHOD,&lt;operator&gt;.equals)> ]
+"5771" [label = <(METHOD_RETURN,ANY)> ]
+  "5767" -> "5771" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/75-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/75-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/75-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/75-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.shiftLeft" {  
-"5777" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
-"5781" [label = <(METHOD_RETURN,ANY)> ]
-  "5777" -> "5781" 
+"5772" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
+"5776" [label = <(METHOD_RETURN,ANY)> ]
+  "5772" -> "5776" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/76-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/76-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/76-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/76-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "exit" {  
-"5782" [label = <(METHOD,exit)> ]
-"5785" [label = <(METHOD_RETURN,ANY)> ]
-  "5782" -> "5785" 
+"5777" [label = <(METHOD,exit)> ]
+"5780" [label = <(METHOD_RETURN,ANY)> ]
+  "5777" -> "5780" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/77-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/77-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/77-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/77-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "OpenForRead" {  
-"5786" [label = <(METHOD,OpenForRead)> ]
-"5789" [label = <(METHOD_RETURN,ANY)> ]
-  "5786" -> "5789" 
+"5781" [label = <(METHOD,OpenForRead)> ]
+"5784" [label = <(METHOD_RETURN,ANY)> ]
+  "5781" -> "5784" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/78-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/78-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/78-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/78-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectFieldAccess" {  
-"5790" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
-"5794" [label = <(METHOD_RETURN,ANY)> ]
-  "5790" -> "5794" 
+"5785" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
+"5789" [label = <(METHOD_RETURN,ANY)> ]
+  "5785" -> "5789" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/79-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/79-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/79-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/79-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "GetName" {  
-"5795" [label = <(METHOD,GetName)> ]
-"5798" [label = <(METHOD_RETURN,ANY)> ]
-  "5795" -> "5798" 
+"5790" [label = <(METHOD,GetName)> ]
+"5793" [label = <(METHOD_RETURN,ANY)> ]
+  "5790" -> "5793" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/8-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/8-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/8-cfg.dot	2023-06-07 19:31:27.077407671 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/8-cfg.dot	2023-06-07 19:31:31.557407271 +0330
@@ -3,372 +3,369 @@
 "750" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>283</SUB>> ]
 "756" [label = <(&lt;operator&gt;.assignment,offset = extendedStart)<SUB>288</SUB>> ]
 "759" [label = <(memset,memset(&amp;EbrLocations, 0, MAX_MBR_PARTS * sizeof(uint64_t)))<SUB>289</SUB>> ]
-"1090" [label = <(RETURN,return (partNum * allOK);,return (partNum * allOK);)<SUB>353</SUB>> ]
+"1085" [label = <(RETURN,return (partNum * allOK);,return (partNum * allOK);)<SUB>352</SUB>> ]
 "760" [label = <(&lt;operator&gt;.addressOf,&amp;EbrLocations)<SUB>289</SUB>> ]
 "763" [label = <(&lt;operator&gt;.multiplication,MAX_MBR_PARTS * sizeof(uint64_t))<SUB>289</SUB>> ]
 "768" [label = <(&lt;operator&gt;.logicalAnd,another &amp;&amp; (partNum &lt; MAX_MBR_PARTS) &amp;&amp; (partNum &gt;= 0) &amp;&amp; (allOK &gt; 0))<SUB>290</SUB>> ]
-"1091" [label = <(&lt;operator&gt;.multiplication,partNum * allOK)<SUB>353</SUB>> ]
+"1086" [label = <(&lt;operator&gt;.multiplication,partNum * allOK)<SUB>352</SUB>> ]
 "765" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint64_t))<SUB>289</SUB>> ]
 "769" [label = <(&lt;operator&gt;.logicalAnd,another &amp;&amp; (partNum &lt; MAX_MBR_PARTS) &amp;&amp; (partNum &gt;= 0))<SUB>290</SUB>> ]
 "778" [label = <(&lt;operator&gt;.greaterThan,allOK &gt; 0)<SUB>290</SUB>> ]
-"815" [label = <(&lt;operator&gt;.assignment,EbrLocations[partNum] = offset)<SUB>299</SUB>> ]
+"810" [label = <(&lt;operator&gt;.assignment,EbrLocations[partNum] = offset)<SUB>298</SUB>> ]
 "770" [label = <(&lt;operator&gt;.logicalAnd,another &amp;&amp; (partNum &lt; MAX_MBR_PARTS))<SUB>290</SUB>> ]
 "775" [label = <(&lt;operator&gt;.greaterEqualsThan,partNum &gt;= 0)<SUB>290</SUB>> ]
 "787" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_MBR_PARTS)<SUB>291</SUB>> ]
 "790" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>291</SUB>> ]
-"816" [label = <(&lt;operator&gt;.indirectIndexAccess,EbrLocations[partNum])<SUB>299</SUB>> ]
-"821" [label = <(&lt;operator&gt;.equals,myDisk-&gt;Seek(offset) == 0)<SUB>300</SUB>> ]
-"841" [label = <(&lt;operator&gt;.notEquals,myDisk-&gt;Read(&amp;ebr, 512) != 512)<SUB>304</SUB>> ]
-"916" [label = <(&lt;operator&gt;.notEquals,ebr.MBRSignature != MBR_SIGNATURE)<SUB>316</SUB>> ]
-"973" [label = <(&lt;operator&gt;.logicalAnd,(partNum &gt;= 0) &amp;&amp; (partNum &lt; MAX_MBR_PARTS) &amp;&amp; (allOK &gt; 0))<SUB>328</SUB>> ]
+"811" [label = <(&lt;operator&gt;.indirectIndexAccess,EbrLocations[partNum])<SUB>298</SUB>> ]
+"816" [label = <(&lt;operator&gt;.equals,myDisk-&gt;Seek(offset) == 0)<SUB>299</SUB>> ]
+"836" [label = <(&lt;operator&gt;.notEquals,myDisk-&gt;Read(&amp;ebr, 512) != 512)<SUB>303</SUB>> ]
+"911" [label = <(&lt;operator&gt;.notEquals,ebr.MBRSignature != MBR_SIGNATURE)<SUB>315</SUB>> ]
+"968" [label = <(&lt;operator&gt;.logicalAnd,(partNum &gt;= 0) &amp;&amp; (partNum &lt; MAX_MBR_PARTS) &amp;&amp; (allOK &gt; 0))<SUB>327</SUB>> ]
 "772" [label = <(&lt;operator&gt;.lessThan,partNum &lt; MAX_MBR_PARTS)<SUB>290</SUB>> ]
 "784" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>291</SUB>> ]
-"822" [label = <(Seek,myDisk-&gt;Seek(offset))<SUB>300</SUB>> ]
-"829" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Unable to seek to &quot; &lt;&lt; offset &lt;&lt; &quot;! Aborting!\n&quot;)<SUB>301</SUB>> ]
-"836" [label = <(&lt;operator&gt;.assignment,allOK = -1)<SUB>302</SUB>> ]
-"842" [label = <(Read,myDisk-&gt;Read(&amp;ebr, 512))<SUB>304</SUB>> ]
-"851" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error seeking to or reading logical partition data from &quot; &lt;&lt; offset\012 &lt;&lt; &quot;!\nSome logical partitions may be missing!\n&quot;)<SUB>305</SUB>> ]
-"858" [label = <(&lt;operator&gt;.assignment,allOK = -1)<SUB>307</SUB>> ]
-"917" [label = <(&lt;operator&gt;.fieldAccess,ebr.MBRSignature)<SUB>316</SUB>> ]
-"922" [label = <(&lt;operator&gt;.assignment,allOK = -1)<SUB>317</SUB>> ]
-"926" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;EBR signature for logical partition invalid; read 0x&quot;)<SUB>318</SUB>> ]
-"929" [label = <(fill,cerr.fill('0'))<SUB>319</SUB>> ]
-"934" [label = <(width,cerr.width(4))<SUB>320</SUB>> ]
-"939" [label = <(setf,cerr.setf(ios::uppercase))<SUB>321</SUB>> ]
-"946" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; hex &lt;&lt; ebr.MBRSignature &lt;&lt; &quot;, but should be 0x&quot;)<SUB>322</SUB>> ]
-"955" [label = <(width,cerr.width(4))<SUB>323</SUB>> ]
-"960" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; MBR_SIGNATURE &lt;&lt; dec &lt;&lt; &quot;\n&quot;)<SUB>324</SUB>> ]
-"967" [label = <(fill,cerr.fill(' '))<SUB>325</SUB>> ]
-"974" [label = <(&lt;operator&gt;.logicalAnd,(partNum &gt;= 0) &amp;&amp; (partNum &lt; MAX_MBR_PARTS))<SUB>328</SUB>> ]
-"981" [label = <(&lt;operator&gt;.greaterThan,allOK &gt; 0)<SUB>328</SUB>> ]
-"985" [label = <(&lt;operator&gt;.assignment,ebrType = ebr.partitions[0].partitionType)<SUB>332</SUB>> ]
+"817" [label = <(Seek,myDisk-&gt;Seek(offset))<SUB>299</SUB>> ]
+"824" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Unable to seek to &quot; &lt;&lt; offset &lt;&lt; &quot;! Aborting!\n&quot;)<SUB>300</SUB>> ]
+"831" [label = <(&lt;operator&gt;.assignment,allOK = -1)<SUB>301</SUB>> ]
+"837" [label = <(Read,myDisk-&gt;Read(&amp;ebr, 512))<SUB>303</SUB>> ]
+"846" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error seeking to or reading logical partition data from &quot; &lt;&lt; offset\012 &lt;&lt; &quot;!\nSome logical partitions may be missing!\n&quot;)<SUB>304</SUB>> ]
+"853" [label = <(&lt;operator&gt;.assignment,allOK = -1)<SUB>306</SUB>> ]
+"912" [label = <(&lt;operator&gt;.fieldAccess,ebr.MBRSignature)<SUB>315</SUB>> ]
+"917" [label = <(&lt;operator&gt;.assignment,allOK = -1)<SUB>316</SUB>> ]
+"921" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;EBR signature for logical partition invalid; read 0x&quot;)<SUB>317</SUB>> ]
+"924" [label = <(fill,cerr.fill('0'))<SUB>318</SUB>> ]
+"929" [label = <(width,cerr.width(4))<SUB>319</SUB>> ]
+"934" [label = <(setf,cerr.setf(ios::uppercase))<SUB>320</SUB>> ]
+"941" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; hex &lt;&lt; ebr.MBRSignature &lt;&lt; &quot;, but should be 0x&quot;)<SUB>321</SUB>> ]
+"950" [label = <(width,cerr.width(4))<SUB>322</SUB>> ]
+"955" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; MBR_SIGNATURE &lt;&lt; dec &lt;&lt; &quot;\n&quot;)<SUB>323</SUB>> ]
+"962" [label = <(fill,cerr.fill(' '))<SUB>324</SUB>> ]
+"969" [label = <(&lt;operator&gt;.logicalAnd,(partNum &gt;= 0) &amp;&amp; (partNum &lt; MAX_MBR_PARTS))<SUB>327</SUB>> ]
+"976" [label = <(&lt;operator&gt;.greaterThan,allOK &gt; 0)<SUB>327</SUB>> ]
+"980" [label = <(&lt;operator&gt;.assignment,ebrType = ebr.partitions[0].partitionType)<SUB>331</SUB>> ]
 "794" [label = <(&lt;operator&gt;.equals,EbrLocations[i] == offset)<SUB>292</SUB>> ]
-"823" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>300</SUB>> ]
-"830" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Unable to seek to &quot; &lt;&lt; offset)<SUB>301</SUB>> ]
-"838" [label = <(&lt;operator&gt;.minus,-1)<SUB>302</SUB>> ]
-"843" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Read)<SUB>304</SUB>> ]
-"846" [label = <(&lt;operator&gt;.addressOf,&amp;ebr)<SUB>304</SUB>> ]
-"852" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error seeking to or reading logical partition data from &quot; &lt;&lt; offset)<SUB>305</SUB>> ]
-"860" [label = <(&lt;operator&gt;.minus,-1)<SUB>307</SUB>> ]
-"919" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>316</SUB>> ]
-"924" [label = <(&lt;operator&gt;.minus,-1)<SUB>317</SUB>> ]
-"930" [label = <(&lt;operator&gt;.fieldAccess,cerr.fill)<SUB>319</SUB>> ]
-"935" [label = <(&lt;operator&gt;.fieldAccess,cerr.width)<SUB>320</SUB>> ]
-"940" [label = <(&lt;operator&gt;.fieldAccess,cerr.setf)<SUB>321</SUB>> ]
-"943" [label = <(&lt;operator&gt;.fieldAccess,ios::uppercase)<SUB>321</SUB>> ]
-"947" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; hex &lt;&lt; ebr.MBRSignature)<SUB>322</SUB>> ]
-"956" [label = <(&lt;operator&gt;.fieldAccess,cerr.width)<SUB>323</SUB>> ]
-"961" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; MBR_SIGNATURE &lt;&lt; dec)<SUB>324</SUB>> ]
-"968" [label = <(&lt;operator&gt;.fieldAccess,cerr.fill)<SUB>325</SUB>> ]
-"975" [label = <(&lt;operator&gt;.greaterEqualsThan,partNum &gt;= 0)<SUB>328</SUB>> ]
-"978" [label = <(&lt;operator&gt;.lessThan,partNum &lt; MAX_MBR_PARTS)<SUB>328</SUB>> ]
-"987" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[0].partitionType)<SUB>332</SUB>> ]
-"995" [label = <(&lt;operator&gt;.logicalOr,(ebrType == 0x05) || (ebrType == 0x0f) || (ebrType == 0x85))<SUB>333</SUB>> ]
+"818" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Seek)<SUB>299</SUB>> ]
+"825" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Unable to seek to &quot; &lt;&lt; offset)<SUB>300</SUB>> ]
+"833" [label = <(&lt;operator&gt;.minus,-1)<SUB>301</SUB>> ]
+"838" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Read)<SUB>303</SUB>> ]
+"841" [label = <(&lt;operator&gt;.addressOf,&amp;ebr)<SUB>303</SUB>> ]
+"847" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error seeking to or reading logical partition data from &quot; &lt;&lt; offset)<SUB>304</SUB>> ]
+"855" [label = <(&lt;operator&gt;.minus,-1)<SUB>306</SUB>> ]
+"914" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>315</SUB>> ]
+"919" [label = <(&lt;operator&gt;.minus,-1)<SUB>316</SUB>> ]
+"925" [label = <(&lt;operator&gt;.fieldAccess,cerr.fill)<SUB>318</SUB>> ]
+"930" [label = <(&lt;operator&gt;.fieldAccess,cerr.width)<SUB>319</SUB>> ]
+"935" [label = <(&lt;operator&gt;.fieldAccess,cerr.setf)<SUB>320</SUB>> ]
+"938" [label = <(&lt;operator&gt;.fieldAccess,ios::uppercase)<SUB>320</SUB>> ]
+"942" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; hex &lt;&lt; ebr.MBRSignature)<SUB>321</SUB>> ]
+"951" [label = <(&lt;operator&gt;.fieldAccess,cerr.width)<SUB>322</SUB>> ]
+"956" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; MBR_SIGNATURE &lt;&lt; dec)<SUB>323</SUB>> ]
+"963" [label = <(&lt;operator&gt;.fieldAccess,cerr.fill)<SUB>324</SUB>> ]
+"970" [label = <(&lt;operator&gt;.greaterEqualsThan,partNum &gt;= 0)<SUB>327</SUB>> ]
+"973" [label = <(&lt;operator&gt;.lessThan,partNum &lt; MAX_MBR_PARTS)<SUB>327</SUB>> ]
+"982" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[0].partitionType)<SUB>331</SUB>> ]
+"990" [label = <(&lt;operator&gt;.logicalOr,(ebrType == 0x05) || (ebrType == 0x0f) || (ebrType == 0x85))<SUB>332</SUB>> ]
 "795" [label = <(&lt;operator&gt;.indirectIndexAccess,EbrLocations[i])<SUB>292</SUB>> ]
 "800" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Logical partition infinite loop detected! This is being corrected.\n&quot;)<SUB>293</SUB>> ]
 "803" [label = <(&lt;operator&gt;.assignment,allOK = -1)<SUB>294</SUB>> ]
-"825" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>300</SUB>> ]
-"831" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Unable to seek to &quot;)<SUB>301</SUB>> ]
-"845" [label = <(FIELD_IDENTIFIER,Read,Read)<SUB>304</SUB>> ]
-"853" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error seeking to or reading logical partition data from &quot;)<SUB>305</SUB>> ]
-"865" [label = <(&lt;operator&gt;.notEquals,IsLittleEndian() != 1)<SUB>308</SUB>> ]
-"932" [label = <(FIELD_IDENTIFIER,fill,fill)<SUB>319</SUB>> ]
-"937" [label = <(FIELD_IDENTIFIER,width,width)<SUB>320</SUB>> ]
-"942" [label = <(FIELD_IDENTIFIER,setf,setf)<SUB>321</SUB>> ]
-"945" [label = <(FIELD_IDENTIFIER,uppercase,uppercase)<SUB>321</SUB>> ]
-"948" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; hex)<SUB>322</SUB>> ]
-"951" [label = <(&lt;operator&gt;.fieldAccess,ebr.MBRSignature)<SUB>322</SUB>> ]
-"958" [label = <(FIELD_IDENTIFIER,width,width)<SUB>323</SUB>> ]
-"962" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; MBR_SIGNATURE)<SUB>324</SUB>> ]
-"970" [label = <(FIELD_IDENTIFIER,fill,fill)<SUB>325</SUB>> ]
-"988" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>332</SUB>> ]
-"993" [label = <(FIELD_IDENTIFIER,partitionType,partitionType)<SUB>332</SUB>> ]
-"996" [label = <(&lt;operator&gt;.logicalOr,(ebrType == 0x05) || (ebrType == 0x0f))<SUB>333</SUB>> ]
-"1003" [label = <(&lt;operator&gt;.equals,ebrType == 0x85)<SUB>333</SUB>> ]
-"1007" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;EBR points to an EBR!\n&quot;)<SUB>334</SUB>> ]
-"1010" [label = <(&lt;operator&gt;.assignment,offset = extendedStart + ebr.partitions[0].firstLBA)<SUB>335</SUB>> ]
+"807" [label = <(&lt;operator&gt;.assignmentMinus,partNum -= 1)<SUB>295</SUB>> ]
+"820" [label = <(FIELD_IDENTIFIER,Seek,Seek)<SUB>299</SUB>> ]
+"826" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Unable to seek to &quot;)<SUB>300</SUB>> ]
+"840" [label = <(FIELD_IDENTIFIER,Read,Read)<SUB>303</SUB>> ]
+"848" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; &quot;Error seeking to or reading logical partition data from &quot;)<SUB>304</SUB>> ]
+"860" [label = <(&lt;operator&gt;.notEquals,IsLittleEndian() != 1)<SUB>307</SUB>> ]
+"927" [label = <(FIELD_IDENTIFIER,fill,fill)<SUB>318</SUB>> ]
+"932" [label = <(FIELD_IDENTIFIER,width,width)<SUB>319</SUB>> ]
+"937" [label = <(FIELD_IDENTIFIER,setf,setf)<SUB>320</SUB>> ]
+"940" [label = <(FIELD_IDENTIFIER,uppercase,uppercase)<SUB>320</SUB>> ]
+"943" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; hex)<SUB>321</SUB>> ]
+"946" [label = <(&lt;operator&gt;.fieldAccess,ebr.MBRSignature)<SUB>321</SUB>> ]
+"953" [label = <(FIELD_IDENTIFIER,width,width)<SUB>322</SUB>> ]
+"957" [label = <(&lt;operator&gt;.shiftLeft,cerr &lt;&lt; MBR_SIGNATURE)<SUB>323</SUB>> ]
+"965" [label = <(FIELD_IDENTIFIER,fill,fill)<SUB>324</SUB>> ]
+"983" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>331</SUB>> ]
+"988" [label = <(FIELD_IDENTIFIER,partitionType,partitionType)<SUB>331</SUB>> ]
+"991" [label = <(&lt;operator&gt;.logicalOr,(ebrType == 0x05) || (ebrType == 0x0f))<SUB>332</SUB>> ]
+"998" [label = <(&lt;operator&gt;.equals,ebrType == 0x85)<SUB>332</SUB>> ]
+"1002" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;EBR points to an EBR!\n&quot;)<SUB>333</SUB>> ]
+"1005" [label = <(&lt;operator&gt;.assignment,offset = extendedStart + ebr.partitions[0].firstLBA)<SUB>334</SUB>> ]
 "805" [label = <(&lt;operator&gt;.minus,-1)<SUB>294</SUB>> ]
-"808" [label = <(&lt;operator&gt;.greaterThan,partNum &gt; 0)<SUB>295</SUB>> ]
-"866" [label = <(IsLittleEndian,IsLittleEndian())<SUB>308</SUB>> ]
-"869" [label = <(ReverseBytes,ReverseBytes(&amp;ebr.MBRSignature, 2))<SUB>309</SUB>> ]
-"875" [label = <(ReverseBytes,ReverseBytes(&amp;ebr.partitions[0].firstLBA, 4))<SUB>310</SUB>> ]
-"885" [label = <(ReverseBytes,ReverseBytes(&amp;ebr.partitions[0].lengthLBA, 4))<SUB>311</SUB>> ]
-"895" [label = <(ReverseBytes,ReverseBytes(&amp;ebr.partitions[1].firstLBA, 4))<SUB>312</SUB>> ]
-"905" [label = <(ReverseBytes,ReverseBytes(&amp;ebr.partitions[1].lengthLBA, 4))<SUB>313</SUB>> ]
-"953" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>322</SUB>> ]
-"989" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>332</SUB>> ]
-"997" [label = <(&lt;operator&gt;.equals,ebrType == 0x05)<SUB>333</SUB>> ]
-"1000" [label = <(&lt;operator&gt;.equals,ebrType == 0x0f)<SUB>333</SUB>> ]
-"1012" [label = <(&lt;operator&gt;.addition,extendedStart + ebr.partitions[0].firstLBA)<SUB>335</SUB>> ]
-"1023" [label = <(&lt;operator&gt;.assignment,partitions[partNum] = ebr.partitions[0])<SUB>338</SUB>> ]
-"1032" [label = <(SetStartLBA,partitions[partNum].SetStartLBA(ebr.partitions[0].firstLBA + offset))<SUB>340</SUB>> ]
-"1047" [label = <(SetInclusion,partitions[partNum].SetInclusion(LOGICAL))<SUB>341</SUB>> ]
-"812" [label = <(&lt;operator&gt;.assignmentMinus,partNum -= 1)<SUB>296</SUB>> ]
-"870" [label = <(&lt;operator&gt;.addressOf,&amp;ebr.MBRSignature)<SUB>309</SUB>> ]
-"876" [label = <(&lt;operator&gt;.addressOf,&amp;ebr.partitions[0].firstLBA)<SUB>310</SUB>> ]
-"886" [label = <(&lt;operator&gt;.addressOf,&amp;ebr.partitions[0].lengthLBA)<SUB>311</SUB>> ]
-"896" [label = <(&lt;operator&gt;.addressOf,&amp;ebr.partitions[1].firstLBA)<SUB>312</SUB>> ]
-"906" [label = <(&lt;operator&gt;.addressOf,&amp;ebr.partitions[1].lengthLBA)<SUB>313</SUB>> ]
-"991" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>332</SUB>> ]
-"1014" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[0].firstLBA)<SUB>335</SUB>> ]
-"1024" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[partNum])<SUB>338</SUB>> ]
-"1027" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>338</SUB>> ]
-"1033" [label = <(&lt;operator&gt;.fieldAccess,partitions[partNum].SetStartLBA)<SUB>340</SUB>> ]
-"1038" [label = <(&lt;operator&gt;.addition,ebr.partitions[0].firstLBA + offset)<SUB>340</SUB>> ]
-"1048" [label = <(&lt;operator&gt;.fieldAccess,partitions[partNum].SetInclusion)<SUB>341</SUB>> ]
-"1055" [label = <(&lt;operator&gt;.logicalAnd,(ebr.partitions[1].firstLBA != UINT32_C(0)) &amp;&amp; (partNum &lt; (MAX_MBR_PARTS - 1)))<SUB>344</SUB>> ]
-"871" [label = <(&lt;operator&gt;.fieldAccess,ebr.MBRSignature)<SUB>309</SUB>> ]
-"877" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[0].firstLBA)<SUB>310</SUB>> ]
-"887" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[0].lengthLBA)<SUB>311</SUB>> ]
-"897" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[1].firstLBA)<SUB>312</SUB>> ]
-"907" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[1].lengthLBA)<SUB>313</SUB>> ]
-"1015" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>335</SUB>> ]
-"1020" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>335</SUB>> ]
-"1028" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>338</SUB>> ]
-"1034" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[partNum])<SUB>340</SUB>> ]
-"1037" [label = <(FIELD_IDENTIFIER,SetStartLBA,SetStartLBA)<SUB>340</SUB>> ]
-"1039" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[0].firstLBA)<SUB>340</SUB>> ]
-"1049" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[partNum])<SUB>341</SUB>> ]
-"1052" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>341</SUB>> ]
-"1056" [label = <(&lt;operator&gt;.notEquals,ebr.partitions[1].firstLBA != UINT32_C(0))<SUB>344</SUB>> ]
-"1066" [label = <(&lt;operator&gt;.lessThan,partNum &lt; (MAX_MBR_PARTS - 1))<SUB>344</SUB>> ]
-"1072" [label = <(&lt;operator&gt;.assignment,offset = extendedStart + ebr.partitions[1].firstLBA)<SUB>345</SUB>> ]
-"1083" [label = <(&lt;operator&gt;.postIncrement,partNum++)<SUB>346</SUB>> ]
-"873" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>309</SUB>> ]
-"878" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>310</SUB>> ]
-"883" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>310</SUB>> ]
-"888" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>311</SUB>> ]
-"893" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>311</SUB>> ]
-"898" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[1])<SUB>312</SUB>> ]
-"903" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>312</SUB>> ]
-"908" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[1])<SUB>313</SUB>> ]
-"913" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>313</SUB>> ]
-"1016" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>335</SUB>> ]
-"1030" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>338</SUB>> ]
-"1040" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>340</SUB>> ]
-"1045" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>340</SUB>> ]
-"1057" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[1].firstLBA)<SUB>344</SUB>> ]
-"1064" [label = <(UINT32_C,UINT32_C(0))<SUB>344</SUB>> ]
-"1068" [label = <(&lt;operator&gt;.subtraction,MAX_MBR_PARTS - 1)<SUB>344</SUB>> ]
-"1074" [label = <(&lt;operator&gt;.addition,extendedStart + ebr.partitions[1].firstLBA)<SUB>345</SUB>> ]
-"1087" [label = <(&lt;operator&gt;.assignment,another = 0)<SUB>348</SUB>> ]
-"879" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>310</SUB>> ]
-"889" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>311</SUB>> ]
-"899" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>312</SUB>> ]
-"909" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>313</SUB>> ]
-"1018" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>335</SUB>> ]
-"1041" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>340</SUB>> ]
-"1058" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[1])<SUB>344</SUB>> ]
-"1063" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>344</SUB>> ]
-"1076" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[1].firstLBA)<SUB>345</SUB>> ]
-"881" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>310</SUB>> ]
-"891" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>311</SUB>> ]
-"901" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>312</SUB>> ]
-"911" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>313</SUB>> ]
-"1043" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>340</SUB>> ]
-"1059" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>344</SUB>> ]
-"1077" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[1])<SUB>345</SUB>> ]
-"1082" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>345</SUB>> ]
-"1061" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>344</SUB>> ]
-"1078" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>345</SUB>> ]
-"1080" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>345</SUB>> ]
+"861" [label = <(IsLittleEndian,IsLittleEndian())<SUB>307</SUB>> ]
+"864" [label = <(ReverseBytes,ReverseBytes(&amp;ebr.MBRSignature, 2))<SUB>308</SUB>> ]
+"870" [label = <(ReverseBytes,ReverseBytes(&amp;ebr.partitions[0].firstLBA, 4))<SUB>309</SUB>> ]
+"880" [label = <(ReverseBytes,ReverseBytes(&amp;ebr.partitions[0].lengthLBA, 4))<SUB>310</SUB>> ]
+"890" [label = <(ReverseBytes,ReverseBytes(&amp;ebr.partitions[1].firstLBA, 4))<SUB>311</SUB>> ]
+"900" [label = <(ReverseBytes,ReverseBytes(&amp;ebr.partitions[1].lengthLBA, 4))<SUB>312</SUB>> ]
+"948" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>321</SUB>> ]
+"984" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>331</SUB>> ]
+"992" [label = <(&lt;operator&gt;.equals,ebrType == 0x05)<SUB>332</SUB>> ]
+"995" [label = <(&lt;operator&gt;.equals,ebrType == 0x0f)<SUB>332</SUB>> ]
+"1007" [label = <(&lt;operator&gt;.addition,extendedStart + ebr.partitions[0].firstLBA)<SUB>334</SUB>> ]
+"1018" [label = <(&lt;operator&gt;.assignment,partitions[partNum] = ebr.partitions[0])<SUB>337</SUB>> ]
+"1027" [label = <(SetStartLBA,partitions[partNum].SetStartLBA(ebr.partitions[0].firstLBA + offset))<SUB>339</SUB>> ]
+"1042" [label = <(SetInclusion,partitions[partNum].SetInclusion(LOGICAL))<SUB>340</SUB>> ]
+"865" [label = <(&lt;operator&gt;.addressOf,&amp;ebr.MBRSignature)<SUB>308</SUB>> ]
+"871" [label = <(&lt;operator&gt;.addressOf,&amp;ebr.partitions[0].firstLBA)<SUB>309</SUB>> ]
+"881" [label = <(&lt;operator&gt;.addressOf,&amp;ebr.partitions[0].lengthLBA)<SUB>310</SUB>> ]
+"891" [label = <(&lt;operator&gt;.addressOf,&amp;ebr.partitions[1].firstLBA)<SUB>311</SUB>> ]
+"901" [label = <(&lt;operator&gt;.addressOf,&amp;ebr.partitions[1].lengthLBA)<SUB>312</SUB>> ]
+"986" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>331</SUB>> ]
+"1009" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[0].firstLBA)<SUB>334</SUB>> ]
+"1019" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[partNum])<SUB>337</SUB>> ]
+"1022" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>337</SUB>> ]
+"1028" [label = <(&lt;operator&gt;.fieldAccess,partitions[partNum].SetStartLBA)<SUB>339</SUB>> ]
+"1033" [label = <(&lt;operator&gt;.addition,ebr.partitions[0].firstLBA + offset)<SUB>339</SUB>> ]
+"1043" [label = <(&lt;operator&gt;.fieldAccess,partitions[partNum].SetInclusion)<SUB>340</SUB>> ]
+"1050" [label = <(&lt;operator&gt;.logicalAnd,(ebr.partitions[1].firstLBA != UINT32_C(0)) &amp;&amp; (partNum &lt; (MAX_MBR_PARTS - 1)))<SUB>343</SUB>> ]
+"866" [label = <(&lt;operator&gt;.fieldAccess,ebr.MBRSignature)<SUB>308</SUB>> ]
+"872" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[0].firstLBA)<SUB>309</SUB>> ]
+"882" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[0].lengthLBA)<SUB>310</SUB>> ]
+"892" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[1].firstLBA)<SUB>311</SUB>> ]
+"902" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[1].lengthLBA)<SUB>312</SUB>> ]
+"1010" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>334</SUB>> ]
+"1015" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>334</SUB>> ]
+"1023" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>337</SUB>> ]
+"1029" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[partNum])<SUB>339</SUB>> ]
+"1032" [label = <(FIELD_IDENTIFIER,SetStartLBA,SetStartLBA)<SUB>339</SUB>> ]
+"1034" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[0].firstLBA)<SUB>339</SUB>> ]
+"1044" [label = <(&lt;operator&gt;.indirectIndexAccess,partitions[partNum])<SUB>340</SUB>> ]
+"1047" [label = <(FIELD_IDENTIFIER,SetInclusion,SetInclusion)<SUB>340</SUB>> ]
+"1051" [label = <(&lt;operator&gt;.notEquals,ebr.partitions[1].firstLBA != UINT32_C(0))<SUB>343</SUB>> ]
+"1061" [label = <(&lt;operator&gt;.lessThan,partNum &lt; (MAX_MBR_PARTS - 1))<SUB>343</SUB>> ]
+"1067" [label = <(&lt;operator&gt;.assignment,offset = extendedStart + ebr.partitions[1].firstLBA)<SUB>344</SUB>> ]
+"1078" [label = <(&lt;operator&gt;.postIncrement,partNum++)<SUB>345</SUB>> ]
+"868" [label = <(FIELD_IDENTIFIER,MBRSignature,MBRSignature)<SUB>308</SUB>> ]
+"873" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>309</SUB>> ]
+"878" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>309</SUB>> ]
+"883" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>310</SUB>> ]
+"888" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>310</SUB>> ]
+"893" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[1])<SUB>311</SUB>> ]
+"898" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>311</SUB>> ]
+"903" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[1])<SUB>312</SUB>> ]
+"908" [label = <(FIELD_IDENTIFIER,lengthLBA,lengthLBA)<SUB>312</SUB>> ]
+"1011" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>334</SUB>> ]
+"1025" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>337</SUB>> ]
+"1035" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[0])<SUB>339</SUB>> ]
+"1040" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>339</SUB>> ]
+"1052" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[1].firstLBA)<SUB>343</SUB>> ]
+"1059" [label = <(UINT32_C,UINT32_C(0))<SUB>343</SUB>> ]
+"1063" [label = <(&lt;operator&gt;.subtraction,MAX_MBR_PARTS - 1)<SUB>343</SUB>> ]
+"1069" [label = <(&lt;operator&gt;.addition,extendedStart + ebr.partitions[1].firstLBA)<SUB>344</SUB>> ]
+"1082" [label = <(&lt;operator&gt;.assignment,another = 0)<SUB>347</SUB>> ]
+"874" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>309</SUB>> ]
+"884" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>310</SUB>> ]
+"894" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>311</SUB>> ]
+"904" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>312</SUB>> ]
+"1013" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>334</SUB>> ]
+"1036" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>339</SUB>> ]
+"1053" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[1])<SUB>343</SUB>> ]
+"1058" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>343</SUB>> ]
+"1071" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions[1].firstLBA)<SUB>344</SUB>> ]
+"876" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>309</SUB>> ]
+"886" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>310</SUB>> ]
+"896" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>311</SUB>> ]
+"906" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>312</SUB>> ]
+"1038" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>339</SUB>> ]
+"1054" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>343</SUB>> ]
+"1072" [label = <(&lt;operator&gt;.indirectIndexAccess,ebr.partitions[1])<SUB>344</SUB>> ]
+"1077" [label = <(FIELD_IDENTIFIER,firstLBA,firstLBA)<SUB>344</SUB>> ]
+"1056" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>343</SUB>> ]
+"1073" [label = <(&lt;operator&gt;.fieldAccess,ebr.partitions)<SUB>344</SUB>> ]
+"1075" [label = <(FIELD_IDENTIFIER,partitions,partitions)<SUB>344</SUB>> ]
 "739" [label = <(METHOD,ReadLogicalParts)<SUB>281</SUB>> ]
-"1094" [label = <(METHOD_RETURN,int)<SUB>281</SUB>> ]
+"1089" [label = <(METHOD_RETURN,int)<SUB>281</SUB>> ]
   "747" -> "750" 
   "750" -> "756" 
   "756" -> "760" 
   "759" -> "770" 
   "759" -> "772" 
-  "1090" -> "1094" 
+  "1085" -> "1089" 
   "760" -> "765" 
   "763" -> "759" 
   "768" -> "784" 
-  "768" -> "1091" 
-  "1091" -> "1090" 
+  "768" -> "1086" 
+  "1086" -> "1085" 
   "765" -> "763" 
   "769" -> "768" 
   "769" -> "778" 
   "778" -> "768" 
-  "815" -> "825" 
+  "810" -> "820" 
   "770" -> "769" 
   "770" -> "775" 
   "775" -> "769" 
   "787" -> "795" 
-  "787" -> "816" 
+  "787" -> "811" 
   "790" -> "787" 
-  "816" -> "815" 
-  "821" -> "831" 
-  "821" -> "845" 
-  "841" -> "866" 
-  "841" -> "853" 
-  "916" -> "924" 
-  "916" -> "975" 
-  "973" -> "770" 
-  "973" -> "772" 
-  "973" -> "991" 
+  "811" -> "810" 
+  "816" -> "826" 
+  "816" -> "840" 
+  "836" -> "861" 
+  "836" -> "848" 
+  "911" -> "919" 
+  "911" -> "970" 
+  "968" -> "770" 
+  "968" -> "772" 
+  "968" -> "986" 
   "772" -> "770" 
   "784" -> "787" 
-  "822" -> "821" 
-  "829" -> "838" 
-  "836" -> "845" 
-  "842" -> "841" 
-  "851" -> "860" 
-  "858" -> "919" 
-  "917" -> "916" 
-  "922" -> "926" 
-  "926" -> "932" 
+  "817" -> "816" 
+  "824" -> "833" 
+  "831" -> "840" 
+  "837" -> "836" 
+  "846" -> "855" 
+  "853" -> "914" 
+  "912" -> "911" 
+  "917" -> "921" 
+  "921" -> "927" 
+  "924" -> "932" 
   "929" -> "937" 
-  "934" -> "942" 
-  "939" -> "948" 
-  "946" -> "958" 
-  "955" -> "962" 
-  "960" -> "970" 
-  "967" -> "975" 
-  "974" -> "973" 
-  "974" -> "981" 
-  "981" -> "973" 
-  "985" -> "997" 
+  "934" -> "943" 
+  "941" -> "953" 
+  "950" -> "957" 
+  "955" -> "965" 
+  "962" -> "970" 
+  "969" -> "968" 
+  "969" -> "976" 
+  "976" -> "968" 
+  "980" -> "992" 
   "794" -> "800" 
   "794" -> "790" 
-  "823" -> "822" 
-  "830" -> "829" 
-  "838" -> "836" 
-  "843" -> "846" 
-  "846" -> "842" 
-  "852" -> "851" 
-  "860" -> "858" 
+  "818" -> "817" 
+  "825" -> "824" 
+  "833" -> "831" 
+  "838" -> "841" 
+  "841" -> "837" 
+  "847" -> "846" 
+  "855" -> "853" 
+  "914" -> "912" 
   "919" -> "917" 
-  "924" -> "922" 
+  "925" -> "924" 
   "930" -> "929" 
-  "935" -> "934" 
-  "940" -> "945" 
-  "943" -> "939" 
-  "947" -> "946" 
+  "935" -> "940" 
+  "938" -> "934" 
+  "942" -> "941" 
+  "951" -> "950" 
   "956" -> "955" 
-  "961" -> "960" 
-  "968" -> "967" 
-  "975" -> "974" 
-  "975" -> "978" 
-  "978" -> "974" 
-  "987" -> "985" 
-  "995" -> "1007" 
-  "995" -> "1024" 
+  "963" -> "962" 
+  "970" -> "969" 
+  "970" -> "973" 
+  "973" -> "969" 
+  "982" -> "980" 
+  "990" -> "1002" 
+  "990" -> "1019" 
   "795" -> "794" 
   "800" -> "805" 
-  "803" -> "808" 
-  "825" -> "823" 
-  "831" -> "830" 
-  "845" -> "843" 
-  "853" -> "852" 
-  "865" -> "873" 
-  "865" -> "919" 
+  "803" -> "807" 
+  "807" -> "790" 
+  "820" -> "818" 
+  "826" -> "825" 
+  "840" -> "838" 
+  "848" -> "847" 
+  "860" -> "868" 
+  "860" -> "914" 
+  "927" -> "925" 
   "932" -> "930" 
   "937" -> "935" 
-  "942" -> "940" 
-  "945" -> "943" 
-  "948" -> "953" 
-  "951" -> "947" 
-  "958" -> "956" 
-  "962" -> "961" 
-  "970" -> "968" 
-  "988" -> "993" 
-  "993" -> "987" 
-  "996" -> "995" 
-  "996" -> "1003" 
-  "1003" -> "995" 
-  "1007" -> "1018" 
-  "1010" -> "770" 
-  "1010" -> "772" 
-  "805" -> "803" 
-  "808" -> "812" 
-  "808" -> "790" 
-  "866" -> "865" 
-  "869" -> "881" 
-  "875" -> "891" 
-  "885" -> "901" 
-  "895" -> "911" 
-  "905" -> "919" 
+  "940" -> "938" 
+  "943" -> "948" 
+  "946" -> "942" 
   "953" -> "951" 
-  "989" -> "988" 
-  "997" -> "996" 
-  "997" -> "1000" 
-  "1000" -> "996" 
-  "1012" -> "1010" 
-  "1023" -> "1034" 
-  "1032" -> "1049" 
-  "1047" -> "1061" 
-  "812" -> "790" 
-  "870" -> "869" 
-  "876" -> "875" 
-  "886" -> "885" 
-  "896" -> "895" 
-  "906" -> "905" 
-  "991" -> "989" 
-  "1014" -> "1012" 
-  "1024" -> "1030" 
-  "1027" -> "1023" 
-  "1033" -> "1043" 
-  "1038" -> "1032" 
-  "1048" -> "1047" 
-  "1055" -> "1080" 
-  "1055" -> "1087" 
+  "957" -> "956" 
+  "965" -> "963" 
+  "983" -> "988" 
+  "988" -> "982" 
+  "991" -> "990" 
+  "991" -> "998" 
+  "998" -> "990" 
+  "1002" -> "1013" 
+  "1005" -> "770" 
+  "1005" -> "772" 
+  "805" -> "803" 
+  "861" -> "860" 
+  "864" -> "876" 
+  "870" -> "886" 
+  "880" -> "896" 
+  "890" -> "906" 
+  "900" -> "914" 
+  "948" -> "946" 
+  "984" -> "983" 
+  "992" -> "991" 
+  "992" -> "995" 
+  "995" -> "991" 
+  "1007" -> "1005" 
+  "1018" -> "1029" 
+  "1027" -> "1044" 
+  "1042" -> "1056" 
+  "865" -> "864" 
   "871" -> "870" 
-  "877" -> "876" 
-  "887" -> "886" 
-  "897" -> "896" 
-  "907" -> "906" 
-  "1015" -> "1020" 
-  "1020" -> "1014" 
-  "1028" -> "1027" 
-  "1034" -> "1037" 
-  "1037" -> "1033" 
-  "1039" -> "1038" 
-  "1049" -> "1052" 
-  "1052" -> "1048" 
-  "1056" -> "1055" 
-  "1056" -> "1068" 
-  "1066" -> "1055" 
-  "1072" -> "1083" 
-  "1083" -> "770" 
-  "1083" -> "772" 
-  "873" -> "871" 
-  "878" -> "883" 
-  "883" -> "877" 
-  "888" -> "893" 
-  "893" -> "887" 
-  "898" -> "903" 
-  "903" -> "897" 
-  "908" -> "913" 
-  "913" -> "907" 
-  "1016" -> "1015" 
-  "1030" -> "1028" 
-  "1040" -> "1045" 
-  "1045" -> "1039" 
-  "1057" -> "1064" 
-  "1064" -> "1056" 
-  "1068" -> "1066" 
-  "1074" -> "1072" 
-  "1087" -> "770" 
-  "1087" -> "772" 
-  "879" -> "878" 
-  "889" -> "888" 
-  "899" -> "898" 
-  "909" -> "908" 
-  "1018" -> "1016" 
-  "1041" -> "1040" 
-  "1058" -> "1063" 
-  "1063" -> "1057" 
-  "1076" -> "1074" 
-  "881" -> "879" 
-  "891" -> "889" 
-  "901" -> "899" 
-  "911" -> "909" 
-  "1043" -> "1041" 
-  "1059" -> "1058" 
-  "1077" -> "1082" 
-  "1082" -> "1076" 
-  "1061" -> "1059" 
-  "1078" -> "1077" 
-  "1080" -> "1078" 
+  "881" -> "880" 
+  "891" -> "890" 
+  "901" -> "900" 
+  "986" -> "984" 
+  "1009" -> "1007" 
+  "1019" -> "1025" 
+  "1022" -> "1018" 
+  "1028" -> "1038" 
+  "1033" -> "1027" 
+  "1043" -> "1042" 
+  "1050" -> "1075" 
+  "1050" -> "1082" 
+  "866" -> "865" 
+  "872" -> "871" 
+  "882" -> "881" 
+  "892" -> "891" 
+  "902" -> "901" 
+  "1010" -> "1015" 
+  "1015" -> "1009" 
+  "1023" -> "1022" 
+  "1029" -> "1032" 
+  "1032" -> "1028" 
+  "1034" -> "1033" 
+  "1044" -> "1047" 
+  "1047" -> "1043" 
+  "1051" -> "1050" 
+  "1051" -> "1063" 
+  "1061" -> "1050" 
+  "1067" -> "1078" 
+  "1078" -> "770" 
+  "1078" -> "772" 
+  "868" -> "866" 
+  "873" -> "878" 
+  "878" -> "872" 
+  "883" -> "888" 
+  "888" -> "882" 
+  "893" -> "898" 
+  "898" -> "892" 
+  "903" -> "908" 
+  "908" -> "902" 
+  "1011" -> "1010" 
+  "1025" -> "1023" 
+  "1035" -> "1040" 
+  "1040" -> "1034" 
+  "1052" -> "1059" 
+  "1059" -> "1051" 
+  "1063" -> "1061" 
+  "1069" -> "1067" 
+  "1082" -> "770" 
+  "1082" -> "772" 
+  "874" -> "873" 
+  "884" -> "883" 
+  "894" -> "893" 
+  "904" -> "903" 
+  "1013" -> "1011" 
+  "1036" -> "1035" 
+  "1053" -> "1058" 
+  "1058" -> "1052" 
+  "1071" -> "1069" 
+  "876" -> "874" 
+  "886" -> "884" 
+  "896" -> "894" 
+  "906" -> "904" 
+  "1038" -> "1036" 
+  "1054" -> "1053" 
+  "1072" -> "1077" 
+  "1077" -> "1071" 
+  "1056" -> "1054" 
+  "1073" -> "1072" 
+  "1075" -> "1073" 
   "739" -> "747" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/80-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/80-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/80-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/80-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessThan" {  
-"5799" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
-"5803" [label = <(METHOD_RETURN,ANY)> ]
-  "5799" -> "5803" 
+"5794" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
+"5798" [label = <(METHOD_RETURN,ANY)> ]
+  "5794" -> "5798" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/81-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/81-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/81-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/81-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.postIncrement" {  
-"5804" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
-"5807" [label = <(METHOD_RETURN,ANY)> ]
-  "5804" -> "5807" 
+"5799" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
+"5802" [label = <(METHOD_RETURN,ANY)> ]
+  "5799" -> "5802" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/82-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/82-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/82-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/82-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectIndexAccess" {  
-"5808" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
-"5812" [label = <(METHOD_RETURN,ANY)> ]
-  "5808" -> "5812" 
+"5803" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
+"5807" [label = <(METHOD_RETURN,ANY)> ]
+  "5803" -> "5807" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/83-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/83-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/83-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/83-cfg.dot	2023-06-07 19:31:31.627407267 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalNot" {  
-"5813" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
-"5816" [label = <(METHOD_RETURN,ANY)> ]
-  "5813" -> "5816" 
+"5808" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
+"5811" [label = <(METHOD_RETURN,ANY)> ]
+  "5808" -> "5811" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/84-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/84-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/84-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/84-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "ReadMBRData" {  
-"5817" [label = <(METHOD,ReadMBRData)> ]
-"5820" [label = <(METHOD_RETURN,ANY)> ]
-  "5817" -> "5820" 
+"5812" [label = <(METHOD,ReadMBRData)> ]
+"5815" [label = <(METHOD_RETURN,ANY)> ]
+  "5812" -> "5815" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/85-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/85-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/85-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/85-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.delete" {  
-"5821" [label = <(METHOD,&lt;operator&gt;.delete)> ]
-"5824" [label = <(METHOD_RETURN,ANY)> ]
-  "5821" -> "5824" 
+"5816" [label = <(METHOD,&lt;operator&gt;.delete)> ]
+"5819" [label = <(METHOD_RETURN,ANY)> ]
+  "5816" -> "5819" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/86-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/86-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/86-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/86-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirection" {  
-"5825" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
-"5828" [label = <(METHOD_RETURN,ANY)> ]
-  "5825" -> "5828" 
+"5820" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
+"5823" [label = <(METHOD_RETURN,ANY)> ]
+  "5820" -> "5823" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/87-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/87-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/87-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/87-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalAnd" {  
-"5829" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
-"5833" [label = <(METHOD_RETURN,ANY)> ]
-  "5829" -> "5833" 
+"5824" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
+"5828" [label = <(METHOD_RETURN,ANY)> ]
+  "5824" -> "5828" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/88-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/88-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/88-cfg.dot	2023-06-07 19:31:27.157407665 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/88-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "Seek" {  
-"5834" [label = <(METHOD,Seek)> ]
-"5838" [label = <(METHOD_RETURN,ANY)> ]
-  "5834" -> "5838" 
+"5829" [label = <(METHOD,Seek)> ]
+"5833" [label = <(METHOD_RETURN,ANY)> ]
+  "5829" -> "5833" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/89-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/89-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/89-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/89-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "Read" {  
-"5839" [label = <(METHOD,Read)> ]
-"5844" [label = <(METHOD_RETURN,ANY)> ]
-  "5839" -> "5844" 
+"5834" [label = <(METHOD,Read)> ]
+"5839" [label = <(METHOD_RETURN,ANY)> ]
+  "5834" -> "5839" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/9-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/9-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/9-cfg.dot	2023-06-07 19:31:27.087407672 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/9-cfg.dot	2023-06-07 19:31:31.557407271 +0330
@@ -1,37 +1,37 @@
 digraph "WriteMBRData" {  
-"1100" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>360</SUB>> ]
-"1137" [label = <(RETURN,return allOK;,return allOK;)<SUB>371</SUB>> ]
-"1104" [label = <(&lt;operator&gt;.notEquals,myDisk != NULL)<SUB>362</SUB>> ]
-"1128" [label = <(Close,myDisk-&gt;Close())<SUB>369</SUB>> ]
-"1109" [label = <(&lt;operator&gt;.notEquals,myDisk-&gt;OpenForWrite() != 0)<SUB>363</SUB>> ]
-"1129" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Close)<SUB>369</SUB>> ]
-"1134" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>370</SUB>> ]
-"1110" [label = <(OpenForWrite,myDisk-&gt;OpenForWrite())<SUB>363</SUB>> ]
-"1116" [label = <(&lt;operator&gt;.assignment,allOK = WriteMBRData(myDisk))<SUB>364</SUB>> ]
-"1120" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;Done writing data!\n&quot;)<SUB>365</SUB>> ]
-"1131" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>369</SUB>> ]
-"1111" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;OpenForWrite)<SUB>363</SUB>> ]
-"1118" [label = <(WriteMBRData,WriteMBRData(myDisk))<SUB>364</SUB>> ]
-"1125" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>367</SUB>> ]
-"1113" [label = <(FIELD_IDENTIFIER,OpenForWrite,OpenForWrite)<SUB>363</SUB>> ]
-"1096" [label = <(METHOD,WriteMBRData)<SUB>359</SUB>> ]
-"1139" [label = <(METHOD_RETURN,int)<SUB>359</SUB>> ]
-  "1100" -> "1104" 
-  "1137" -> "1139" 
+"1095" [label = <(&lt;operator&gt;.assignment,allOK = 1)<SUB>359</SUB>> ]
+"1132" [label = <(RETURN,return allOK;,return allOK;)<SUB>370</SUB>> ]
+"1099" [label = <(&lt;operator&gt;.notEquals,myDisk != NULL)<SUB>361</SUB>> ]
+"1123" [label = <(Close,myDisk-&gt;Close())<SUB>368</SUB>> ]
+"1104" [label = <(&lt;operator&gt;.notEquals,myDisk-&gt;OpenForWrite() != 0)<SUB>362</SUB>> ]
+"1124" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;Close)<SUB>368</SUB>> ]
+"1129" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>369</SUB>> ]
+"1105" [label = <(OpenForWrite,myDisk-&gt;OpenForWrite())<SUB>362</SUB>> ]
+"1111" [label = <(&lt;operator&gt;.assignment,allOK = WriteMBRData(myDisk))<SUB>363</SUB>> ]
+"1115" [label = <(&lt;operator&gt;.shiftLeft,cout &lt;&lt; &quot;Done writing data!\n&quot;)<SUB>364</SUB>> ]
+"1126" [label = <(FIELD_IDENTIFIER,Close,Close)<SUB>368</SUB>> ]
+"1106" [label = <(&lt;operator&gt;.indirectFieldAccess,myDisk-&gt;OpenForWrite)<SUB>362</SUB>> ]
+"1113" [label = <(WriteMBRData,WriteMBRData(myDisk))<SUB>363</SUB>> ]
+"1120" [label = <(&lt;operator&gt;.assignment,allOK = 0)<SUB>366</SUB>> ]
+"1108" [label = <(FIELD_IDENTIFIER,OpenForWrite,OpenForWrite)<SUB>362</SUB>> ]
+"1091" [label = <(METHOD,WriteMBRData)<SUB>358</SUB>> ]
+"1134" [label = <(METHOD_RETURN,int)<SUB>358</SUB>> ]
+  "1095" -> "1099" 
+  "1132" -> "1134" 
+  "1099" -> "1108" 
+  "1099" -> "1129" 
+  "1123" -> "1132" 
   "1104" -> "1113" 
-  "1104" -> "1134" 
-  "1128" -> "1137" 
-  "1109" -> "1118" 
-  "1109" -> "1125" 
-  "1129" -> "1128" 
-  "1134" -> "1137" 
-  "1110" -> "1109" 
-  "1116" -> "1120" 
-  "1120" -> "1131" 
-  "1131" -> "1129" 
-  "1111" -> "1110" 
-  "1118" -> "1116" 
-  "1125" -> "1131" 
+  "1104" -> "1120" 
+  "1124" -> "1123" 
+  "1129" -> "1132" 
+  "1105" -> "1104" 
+  "1111" -> "1115" 
+  "1115" -> "1126" 
+  "1126" -> "1124" 
+  "1106" -> "1105" 
   "1113" -> "1111" 
-  "1096" -> "1100" 
+  "1120" -> "1126" 
+  "1108" -> "1106" 
+  "1091" -> "1095" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/90-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/90-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/90-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/90-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterThan" {  
-"5845" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
-"5849" [label = <(METHOD_RETURN,ANY)> ]
-  "5845" -> "5849" 
+"5840" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
+"5844" [label = <(METHOD_RETURN,ANY)> ]
+  "5840" -> "5844" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/91-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/91-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/91-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/91-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "GetLengthLBA" {  
-"5850" [label = <(METHOD,GetLengthLBA)> ]
-"5853" [label = <(METHOD_RETURN,ANY)> ]
-  "5850" -> "5853" 
+"5845" [label = <(METHOD,GetLengthLBA)> ]
+"5848" [label = <(METHOD_RETURN,ANY)> ]
+  "5845" -> "5848" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/92-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/92-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/92-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/92-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "SetInclusion" {  
-"5854" [label = <(METHOD,SetInclusion)> ]
-"5858" [label = <(METHOD_RETURN,ANY)> ]
-  "5854" -> "5858" 
+"5849" [label = <(METHOD,SetInclusion)> ]
+"5853" [label = <(METHOD_RETURN,ANY)> ]
+  "5849" -> "5853" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/93-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/93-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/93-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/93-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "ReadCHSGeom" {  
-"5859" [label = <(METHOD,ReadCHSGeom)> ]
-"5861" [label = <(METHOD_RETURN,ANY)> ]
-  "5859" -> "5861" 
+"5854" [label = <(METHOD,ReadCHSGeom)> ]
+"5856" [label = <(METHOD_RETURN,ANY)> ]
+  "5854" -> "5856" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/94-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/94-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/94-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/94-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "IsLittleEndian" {  
-"5862" [label = <(METHOD,IsLittleEndian)> ]
-"5864" [label = <(METHOD_RETURN,ANY)> ]
-  "5862" -> "5864" 
+"5857" [label = <(METHOD,IsLittleEndian)> ]
+"5859" [label = <(METHOD_RETURN,ANY)> ]
+  "5857" -> "5859" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/95-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/95-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/95-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/95-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "ReverseBytes" {  
-"5865" [label = <(METHOD,ReverseBytes)> ]
-"5869" [label = <(METHOD_RETURN,ANY)> ]
-  "5865" -> "5869" 
+"5860" [label = <(METHOD,ReverseBytes)> ]
+"5864" [label = <(METHOD_RETURN,ANY)> ]
+  "5860" -> "5864" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/96-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/96-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/96-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/96-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "ReverseByteOrder" {  
-"5870" [label = <(METHOD,ReverseByteOrder)> ]
-"5873" [label = <(METHOD_RETURN,ANY)> ]
-  "5870" -> "5873" 
+"5865" [label = <(METHOD,ReverseByteOrder)> ]
+"5868" [label = <(METHOD_RETURN,ANY)> ]
+  "5865" -> "5868" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/97-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/97-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/97-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/97-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "DiskSize" {  
-"5874" [label = <(METHOD,DiskSize)> ]
-"5878" [label = <(METHOD_RETURN,ANY)> ]
-  "5874" -> "5878" 
+"5869" [label = <(METHOD,DiskSize)> ]
+"5873" [label = <(METHOD_RETURN,ANY)> ]
+  "5869" -> "5873" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/98-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/98-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/98-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/98-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "GetBlockSize" {  
-"5879" [label = <(METHOD,GetBlockSize)> ]
-"5882" [label = <(METHOD_RETURN,ANY)> ]
-  "5879" -> "5882" 
+"5874" [label = <(METHOD,GetBlockSize)> ]
+"5877" [label = <(METHOD_RETURN,ANY)> ]
+  "5874" -> "5877" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/99-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/99-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/secure/out/99-cfg.dot	2023-06-07 19:31:27.167407663 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0308_1/vulnerable/out/99-cfg.dot	2023-06-07 19:31:31.637407265 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalOr" {  
-"5883" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
-"5887" [label = <(METHOD_RETURN,ANY)> ]
-  "5883" -> "5887" 
+"5878" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
+"5882" [label = <(METHOD_RETURN,ANY)> ]
+  "5878" -> "5882" 
 }

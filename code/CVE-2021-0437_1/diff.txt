diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/100-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/100-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/100-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/100-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "hidl_vec&lt;uint8_t&gt;" {  
-"4296" [label = <(METHOD,hidl_vec&lt;uint8_t&gt;)> ]
-"4298" [label = <(METHOD_RETURN,ANY)> ]
-  "4296" -> "4298" 
+"4292" [label = <(METHOD,hidl_vec&lt;uint8_t&gt;)> ]
+"4294" [label = <(METHOD_RETURN,ANY)> ]
+  "4292" -> "4294" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/101-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/101-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/101-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/101-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "Void" {  
-"4299" [label = <(METHOD,Void)> ]
-"4301" [label = <(METHOD_RETURN,ANY)> ]
-  "4299" -> "4301" 
+"4295" [label = <(METHOD,Void)> ]
+"4297" [label = <(METHOD_RETURN,ANY)> ]
+  "4295" -> "4297" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/102-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/102-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/102-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/102-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignment" {  
-"4302" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
-"4306" [label = <(METHOD_RETURN,ANY)> ]
-  "4302" -> "4306" 
+"4298" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
+"4302" [label = <(METHOD_RETURN,ANY)> ]
+  "4298" -> "4302" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/103-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/103-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/103-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/103-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalOr" {  
-"4307" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
-"4311" [label = <(METHOD_RETURN,ANY)> ]
-  "4307" -> "4311" 
+"4303" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
+"4307" [label = <(METHOD_RETURN,ANY)> ]
+  "4303" -> "4307" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/104-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/104-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/104-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/104-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "IDrmPluginListener_V1_2::castFrom" {  
-"4312" [label = <(METHOD,IDrmPluginListener_V1_2::castFrom)> ]
-"4316" [label = <(METHOD_RETURN,ANY)> ]
-  "4312" -> "4316" 
+"4308" [label = <(METHOD,IDrmPluginListener_V1_2::castFrom)> ]
+"4312" [label = <(METHOD_RETURN,ANY)> ]
+  "4308" -> "4312" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/105-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/105-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/105-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/105-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.notEquals" {  
-"4317" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
-"4321" [label = <(METHOD_RETURN,ANY)> ]
-  "4317" -> "4321" 
+"4313" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
+"4317" [label = <(METHOD_RETURN,ANY)> ]
+  "4313" -> "4317" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/106-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/106-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/106-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/106-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "sendEvent" {  
-"4322" [label = <(METHOD,sendEvent)> ]
-"4327" [label = <(METHOD_RETURN,ANY)> ]
-  "4322" -> "4327" 
+"4318" [label = <(METHOD,sendEvent)> ]
+"4323" [label = <(METHOD_RETURN,ANY)> ]
+  "4318" -> "4323" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/107-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/107-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/107-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/107-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectFieldAccess" {  
-"4328" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
-"4332" [label = <(METHOD_RETURN,ANY)> ]
-  "4328" -> "4332" 
+"4324" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
+"4328" [label = <(METHOD_RETURN,ANY)> ]
+  "4324" -> "4328" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/108-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/108-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/108-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/108-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGE" {  
-"4333" [label = <(METHOD,ALOGE)> ]
-"4336" [label = <(METHOD_RETURN,ANY)> ]
-  "4333" -> "4336" 
+"4329" [label = <(METHOD,ALOGE)> ]
+"4332" [label = <(METHOD_RETURN,ANY)> ]
+  "4329" -> "4332" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/109-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/109-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/109-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/109-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "sendExpirationUpdate" {  
-"4337" [label = <(METHOD,sendExpirationUpdate)> ]
-"4341" [label = <(METHOD_RETURN,ANY)> ]
-  "4337" -> "4341" 
+"4333" [label = <(METHOD,sendExpirationUpdate)> ]
+"4337" [label = <(METHOD_RETURN,ANY)> ]
+  "4333" -> "4337" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/110-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/110-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/110-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/110-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "sendKeysChange" {  
-"4342" [label = <(METHOD,sendKeysChange)> ]
-"4348" [label = <(METHOD_RETURN,ANY)> ]
-  "4342" -> "4348" 
+"4338" [label = <(METHOD,sendKeysChange)> ]
+"4344" [label = <(METHOD_RETURN,ANY)> ]
+  "4338" -> "4344" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/111-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/111-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/111-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/111-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "sendKeysChange_1_2" {  
-"4349" [label = <(METHOD,sendKeysChange_1_2)> ]
-"4354" [label = <(METHOD_RETURN,ANY)> ]
-  "4349" -> "4354" 
+"4345" [label = <(METHOD,sendKeysChange_1_2)> ]
+"4350" [label = <(METHOD_RETURN,ANY)> ]
+  "4345" -> "4350" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/112-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/112-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/112-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/112-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "sendSessionLostState" {  
-"4355" [label = <(METHOD,sendSessionLostState)> ]
-"4358" [label = <(METHOD_RETURN,ANY)> ]
-  "4355" -> "4358" 
+"4351" [label = <(METHOD,sendSessionLostState)> ]
+"4354" [label = <(METHOD_RETURN,ANY)> ]
+  "4351" -> "4354" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/113-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/113-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/113-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/113-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "setMockError" {  
-"4359" [label = <(METHOD,setMockError)> ]
-"4363" [label = <(METHOD_RETURN,ANY)> ]
-  "4359" -> "4363" 
+"4355" [label = <(METHOD,setMockError)> ]
+"4359" [label = <(METHOD_RETURN,ANY)> ]
+  "4355" -> "4359" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/114-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/114-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/114-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/114-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "kKeySetIdPrefix" {  
-"4364" [label = <(METHOD,kKeySetIdPrefix)> ]
-"4367" [label = <(METHOD_RETURN,ANY)> ]
-  "4364" -> "4367" 
+"4360" [label = <(METHOD,kKeySetIdPrefix)> ]
+"4363" [label = <(METHOD_RETURN,ANY)> ]
+  "4360" -> "4363" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/115-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/115-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/115-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/115-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "kOfflineLicense" {  
-"4368" [label = <(METHOD,kOfflineLicense)> ]
-"4371" [label = <(METHOD_RETURN,ANY)> ]
-  "4368" -> "4371" 
+"4364" [label = <(METHOD,kOfflineLicense)> ]
+"4367" [label = <(METHOD_RETURN,ANY)> ]
+  "4364" -> "4367" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/116-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/116-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/116-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/116-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "kStreaming" {  
-"4372" [label = <(METHOD,kStreaming)> ]
-"4375" [label = <(METHOD_RETURN,ANY)> ]
-  "4372" -> "4375" 
+"4368" [label = <(METHOD,kStreaming)> ]
+"4371" [label = <(METHOD_RETURN,ANY)> ]
+  "4368" -> "4371" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/117-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/117-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/117-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/117-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "kTemporaryLicense" {  
-"4376" [label = <(METHOD,kTemporaryLicense)> ]
-"4379" [label = <(METHOD_RETURN,ANY)> ]
-  "4376" -> "4379" 
+"4372" [label = <(METHOD,kTemporaryLicense)> ]
+"4375" [label = <(METHOD_RETURN,ANY)> ]
+  "4372" -> "4375" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/118-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/118-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/118-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/118-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "kTrue" {  
-"4380" [label = <(METHOD,kTrue)> ]
-"4383" [label = <(METHOD_RETURN,ANY)> ]
-  "4380" -> "4383" 
+"4376" [label = <(METHOD,kTrue)> ]
+"4379" [label = <(METHOD_RETURN,ANY)> ]
+  "4376" -> "4379" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/119-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/119-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/119-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/119-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "kQueryKeyLicenseType" {  
-"4384" [label = <(METHOD,kQueryKeyLicenseType)> ]
-"4387" [label = <(METHOD_RETURN,ANY)> ]
-  "4384" -> "4387" 
+"4380" [label = <(METHOD,kQueryKeyLicenseType)> ]
+"4383" [label = <(METHOD_RETURN,ANY)> ]
+  "4380" -> "4383" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/120-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/120-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/120-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/120-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "kQueryKeyPlayAllowed" {  
-"4388" [label = <(METHOD,kQueryKeyPlayAllowed)> ]
-"4391" [label = <(METHOD_RETURN,ANY)> ]
-  "4388" -> "4391" 
+"4384" [label = <(METHOD,kQueryKeyPlayAllowed)> ]
+"4387" [label = <(METHOD_RETURN,ANY)> ]
+  "4384" -> "4387" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/121-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/121-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/121-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/121-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "kQueryKeyRenewAllowed" {  
-"4392" [label = <(METHOD,kQueryKeyRenewAllowed)> ]
-"4395" [label = <(METHOD_RETURN,ANY)> ]
-  "4392" -> "4395" 
+"4388" [label = <(METHOD,kQueryKeyRenewAllowed)> ]
+"4391" [label = <(METHOD_RETURN,ANY)> ]
+  "4388" -> "4391" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/122-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/122-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/122-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/122-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "memset" {  
-"4396" [label = <(METHOD,memset)> ]
-"4401" [label = <(METHOD_RETURN,ANY)> ]
-  "4396" -> "4401" 
+"4392" [label = <(METHOD,memset)> ]
+"4397" [label = <(METHOD_RETURN,ANY)> ]
+  "4392" -> "4397" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/123-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/123-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/123-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/123-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterThan" {  
-"4402" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
-"4406" [label = <(METHOD_RETURN,ANY)> ]
-  "4402" -> "4406" 
+"4398" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
+"4402" [label = <(METHOD_RETURN,ANY)> ]
+  "4398" -> "4402" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/124-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/124-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/124-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/124-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessThan" {  
-"4407" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
-"4411" [label = <(METHOD_RETURN,ANY)> ]
-  "4407" -> "4411" 
+"4403" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
+"4407" [label = <(METHOD_RETURN,ANY)> ]
+  "4403" -> "4407" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/125-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/125-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/125-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/125-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.bracketedPrimary" {  
-"4412" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
-"4415" [label = <(METHOD_RETURN,ANY)> ]
-  "4412" -> "4415" 
+"4408" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
+"4411" [label = <(METHOD_RETURN,ANY)> ]
+  "4408" -> "4411" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/126-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/126-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/126-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/126-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.expressionList" {  
-"4416" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
-"4420" [label = <(METHOD_RETURN,ANY)> ]
-  "4416" -> "4420" 
+"4412" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
+"4416" [label = <(METHOD_RETURN,ANY)> ]
+  "4412" -> "4416" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/127-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/127-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/127-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/127-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addition" {  
-"4421" [label = <(METHOD,&lt;operator&gt;.addition)> ]
-"4425" [label = <(METHOD_RETURN,ANY)> ]
-  "4421" -> "4425" 
+"4417" [label = <(METHOD,&lt;operator&gt;.addition)> ]
+"4421" [label = <(METHOD_RETURN,ANY)> ]
+  "4417" -> "4421" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/128-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/128-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/128-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/128-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.sizeOf" {  
-"4426" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
-"4429" [label = <(METHOD_RETURN,ANY)> ]
-  "4426" -> "4429" 
+"4422" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
+"4425" [label = <(METHOD_RETURN,ANY)> ]
+  "4422" -> "4425" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/129-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/129-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/129-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/129-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.cast" {  
-"4430" [label = <(METHOD,&lt;operator&gt;.cast)> ]
-"4434" [label = <(METHOD_RETURN,ANY)> ]
-  "4430" -> "4434" 
+"4426" [label = <(METHOD,&lt;operator&gt;.cast)> ]
+"4430" [label = <(METHOD_RETURN,ANY)> ]
+  "4426" -> "4430" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/130-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/130-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/130-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/130-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "clear" {  
-"4435" [label = <(METHOD,clear)> ]
-"4438" [label = <(METHOD_RETURN,ANY)> ]
-  "4435" -> "4438" 
+"4431" [label = <(METHOD,clear)> ]
+"4434" [label = <(METHOD_RETURN,ANY)> ]
+  "4431" -> "4434" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/131-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/131-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/131-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/131-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "initProperties" {  
-"4439" [label = <(METHOD,initProperties)> ]
-"4441" [label = <(METHOD_RETURN,ANY)> ]
-  "4439" -> "4441" 
+"4435" [label = <(METHOD,initProperties)> ]
+"4437" [label = <(METHOD_RETURN,ANY)> ]
+  "4435" -> "4437" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/132-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/132-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/132-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/132-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "std::srand" {  
-"4442" [label = <(METHOD,std::srand)> ]
-"4446" [label = <(METHOD_RETURN,ANY)> ]
-  "4442" -> "4446" 
+"4438" [label = <(METHOD,std::srand)> ]
+"4442" [label = <(METHOD_RETURN,ANY)> ]
+  "4438" -> "4442" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/133-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/133-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/133-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/133-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "std::time" {  
-"4447" [label = <(METHOD,std::time)> ]
-"4451" [label = <(METHOD_RETURN,ANY)> ]
-  "4447" -> "4451" 
+"4443" [label = <(METHOD,std::time)> ]
+"4447" [label = <(METHOD_RETURN,ANY)> ]
+  "4443" -> "4447" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/134-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/134-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/134-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/134-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectIndexAccess" {  
-"4452" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
-"4456" [label = <(METHOD_RETURN,ANY)> ]
-  "4452" -> "4456" 
+"4448" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
+"4452" [label = <(METHOD_RETURN,ANY)> ]
+  "4448" -> "4452" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/135-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/135-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/135-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/135-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "insert" {  
-"4457" [label = <(METHOD,insert)> ]
-"4463" [label = <(METHOD_RETURN,ANY)> ]
-  "4457" -> "4463" 
+"4453" [label = <(METHOD,insert)> ]
+"4459" [label = <(METHOD_RETURN,ANY)> ]
+  "4453" -> "4459" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/136-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/136-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/136-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/136-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "end" {  
-"4464" [label = <(METHOD,end)> ]
-"4467" [label = <(METHOD_RETURN,ANY)> ]
-  "4464" -> "4467" 
+"4460" [label = <(METHOD,end)> ]
+"4463" [label = <(METHOD_RETURN,ANY)> ]
+  "4460" -> "4463" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/137-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/137-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/137-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/137-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.division" {  
-"4468" [label = <(METHOD,&lt;operator&gt;.division)> ]
-"4472" [label = <(METHOD_RETURN,ANY)> ]
-  "4468" -> "4472" 
+"4464" [label = <(METHOD,&lt;operator&gt;.division)> ]
+"4468" [label = <(METHOD_RETURN,ANY)> ]
+  "4464" -> "4468" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/138-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/138-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/138-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/138-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "lock" {  
-"4473" [label = <(METHOD,lock)> ]
-"4476" [label = <(METHOD_RETURN,ANY)> ]
-  "4473" -> "4476" 
+"4469" [label = <(METHOD,lock)> ]
+"4472" [label = <(METHOD_RETURN,ANY)> ]
+  "4469" -> "4472" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/139-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/139-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/139-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/139-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "uint32ToVector" {  
-"4477" [label = <(METHOD,uint32ToVector)> ]
-"4480" [label = <(METHOD_RETURN,ANY)> ]
-  "4477" -> "4480" 
+"4473" [label = <(METHOD,uint32ToVector)> ]
+"4476" [label = <(METHOD_RETURN,ANY)> ]
+  "4473" -> "4476" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/140-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/140-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/140-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/140-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.preIncrement" {  
-"4481" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
-"4484" [label = <(METHOD_RETURN,ANY)> ]
-  "4481" -> "4484" 
+"4477" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
+"4480" [label = <(METHOD_RETURN,ANY)> ]
+  "4477" -> "4480" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/141-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/141-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/141-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/141-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "assign" {  
-"4485" [label = <(METHOD,assign)> ]
-"4490" [label = <(METHOD_RETURN,ANY)> ]
-  "4485" -> "4490" 
+"4481" [label = <(METHOD,assign)> ]
+"4486" [label = <(METHOD_RETURN,ANY)> ]
+  "4481" -> "4486" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/142-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/142-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/142-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/142-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "begin" {  
-"4491" [label = <(METHOD,begin)> ]
-"4494" [label = <(METHOD_RETURN,ANY)> ]
-  "4491" -> "4494" 
+"4487" [label = <(METHOD,begin)> ]
+"4490" [label = <(METHOD_RETURN,ANY)> ]
+  "4487" -> "4490" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/143-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/143-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/143-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/143-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "std::pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;" {  
-"4495" [label = <(METHOD,std::pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;)> ]
-"4500" [label = <(METHOD_RETURN,ANY)> ]
-  "4495" -> "4500" 
+"4491" [label = <(METHOD,std::pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;)> ]
+"4496" [label = <(METHOD_RETURN,ANY)> ]
+  "4491" -> "4496" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/144-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/144-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/144-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/144-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "createSession" {  
-"4501" [label = <(METHOD,createSession)> ]
-"4504" [label = <(METHOD_RETURN,ANY)> ]
-  "4501" -> "4504" 
+"4497" [label = <(METHOD,createSession)> ]
+"4500" [label = <(METHOD_RETURN,ANY)> ]
+  "4497" -> "4500" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/145-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/145-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/145-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/145-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "sessionId" {  
-"4505" [label = <(METHOD,sessionId)> ]
-"4508" [label = <(METHOD_RETURN,ANY)> ]
-  "4505" -> "4508" 
+"4501" [label = <(METHOD,sessionId)> ]
+"4504" [label = <(METHOD_RETURN,ANY)> ]
+  "4501" -> "4504" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/146-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/146-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/146-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/146-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "setSecurityLevel" {  
-"4509" [label = <(METHOD,setSecurityLevel)> ]
-"4513" [label = <(METHOD_RETURN,ANY)> ]
-  "4509" -> "4513" 
+"4505" [label = <(METHOD,setSecurityLevel)> ]
+"4509" [label = <(METHOD_RETURN,ANY)> ]
+  "4505" -> "4509" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/147-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/147-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/147-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/147-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "toHidlVec" {  
-"4514" [label = <(METHOD,toHidlVec)> ]
-"4517" [label = <(METHOD_RETURN,ANY)> ]
-  "4514" -> "4517" 
+"4510" [label = <(METHOD,toHidlVec)> ]
+"4513" [label = <(METHOD_RETURN,ANY)> ]
+  "4510" -> "4513" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/148-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/148-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/148-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/148-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.postIncrement" {  
-"4518" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
-"4521" [label = <(METHOD_RETURN,ANY)> ]
-  "4518" -> "4521" 
+"4514" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
+"4517" [label = <(METHOD_RETURN,ANY)> ]
+  "4514" -> "4517" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/149-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/149-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/149-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/149-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "destroySession" {  
-"4522" [label = <(METHOD,destroySession)> ]
-"4526" [label = <(METHOD_RETURN,ANY)> ]
-  "4522" -> "4526" 
+"4518" [label = <(METHOD,destroySession)> ]
+"4522" [label = <(METHOD_RETURN,ANY)> ]
+  "4518" -> "4522" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/150-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/150-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/150-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/150-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "findSession" {  
-"4527" [label = <(METHOD,findSession)> ]
-"4531" [label = <(METHOD_RETURN,ANY)> ]
-  "4527" -> "4531" 
+"4523" [label = <(METHOD,findSession)> ]
+"4527" [label = <(METHOD_RETURN,ANY)> ]
+  "4523" -> "4527" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/151-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/151-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/151-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/151-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "toVector" {  
-"4532" [label = <(METHOD,toVector)> ]
-"4535" [label = <(METHOD_RETURN,ANY)> ]
-  "4532" -> "4535" 
+"4528" [label = <(METHOD,toVector)> ]
+"4531" [label = <(METHOD_RETURN,ANY)> ]
+  "4528" -> "4531" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/152-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/152-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/152-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/152-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "get" {  
-"4536" [label = <(METHOD,get)> ]
-"4539" [label = <(METHOD_RETURN,ANY)> ]
-  "4536" -> "4539" 
+"4532" [label = <(METHOD,get)> ]
+"4535" [label = <(METHOD_RETURN,ANY)> ]
+  "4532" -> "4535" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/153-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/153-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/153-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/153-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "getMockError" {  
-"4540" [label = <(METHOD,getMockError)> ]
-"4543" [label = <(METHOD_RETURN,ANY)> ]
-  "4540" -> "4543" 
+"4536" [label = <(METHOD,getMockError)> ]
+"4539" [label = <(METHOD_RETURN,ANY)> ]
+  "4536" -> "4539" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/154-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/154-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/154-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/154-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalAnd" {  
-"4544" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
-"4548" [label = <(METHOD_RETURN,ANY)> ]
-  "4544" -> "4548" 
+"4540" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
+"4544" [label = <(METHOD_RETURN,ANY)> ]
+  "4540" -> "4544" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/155-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/155-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/155-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/155-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirection" {  
-"4549" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
-"4552" [label = <(METHOD_RETURN,ANY)> ]
-  "4549" -> "4552" 
+"4545" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
+"4548" [label = <(METHOD_RETURN,ANY)> ]
+  "4545" -> "4548" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/156-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/156-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/156-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/156-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "std::vector&lt;uint8_t&gt;" {  
-"4553" [label = <(METHOD,std::vector&lt;uint8_t&gt;)> ]
-"4556" [label = <(METHOD_RETURN,ANY)> ]
-  "4553" -> "4556" 
+"4549" [label = <(METHOD,std::vector&lt;uint8_t&gt;)> ]
+"4552" [label = <(METHOD_RETURN,ANY)> ]
+  "4549" -> "4552" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/157-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/157-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/157-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/157-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalNot" {  
-"4557" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
-"4560" [label = <(METHOD_RETURN,ANY)> ]
-  "4557" -> "4560" 
+"4553" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
+"4556" [label = <(METHOD_RETURN,ANY)> ]
+  "4553" -> "4556" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/158-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/158-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/158-cfg.dot	2023-06-07 19:37:51.007374283 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/158-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "getKeyRequest" {  
-"4561" [label = <(METHOD,getKeyRequest)> ]
-"4568" [label = <(METHOD_RETURN,ANY)> ]
-  "4561" -> "4568" 
+"4557" [label = <(METHOD,getKeyRequest)> ]
+"4564" [label = <(METHOD_RETURN,ANY)> ]
+  "4557" -> "4564" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/159-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/159-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/159-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/159-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "keySetId" {  
-"4569" [label = <(METHOD,keySetId)> ]
-"4573" [label = <(METHOD_RETURN,ANY)> ]
-  "4569" -> "4573" 
+"4565" [label = <(METHOD,keySetId)> ]
+"4569" [label = <(METHOD_RETURN,ANY)> ]
+  "4565" -> "4569" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/160-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/160-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/160-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/160-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "requestString" {  
-"4574" [label = <(METHOD,requestString)> ]
-"4578" [label = <(METHOD_RETURN,ANY)> ]
-  "4574" -> "4578" 
+"4570" [label = <(METHOD,requestString)> ]
+"4574" [label = <(METHOD_RETURN,ANY)> ]
+  "4570" -> "4574" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/161-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/161-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/161-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/161-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "find" {  
-"4579" [label = <(METHOD,find)> ]
-"4583" [label = <(METHOD_RETURN,ANY)> ]
-  "4579" -> "4583" 
+"4575" [label = <(METHOD,find)> ]
+"4579" [label = <(METHOD_RETURN,ANY)> ]
+  "4575" -> "4579" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/162-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/162-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/162-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/162-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "keySetIdString" {  
-"4584" [label = <(METHOD,keySetIdString)> ]
-"4588" [label = <(METHOD_RETURN,ANY)> ]
-  "4584" -> "4588" 
+"4580" [label = <(METHOD,keySetIdString)> ]
+"4584" [label = <(METHOD_RETURN,ANY)> ]
+  "4580" -> "4584" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/163-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/163-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/163-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/163-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "StoreLicense" {  
-"4589" [label = <(METHOD,StoreLicense)> ]
-"4595" [label = <(METHOD_RETURN,ANY)> ]
-  "4589" -> "4595" 
+"4585" [label = <(METHOD,StoreLicense)> ]
+"4591" [label = <(METHOD_RETURN,ANY)> ]
+  "4585" -> "4591" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/164-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/164-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/164-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/164-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGI" {  
-"4596" [label = <(METHOD,ALOGI)> ]
-"4599" [label = <(METHOD_RETURN,ANY)> ]
-  "4596" -> "4599" 
+"4592" [label = <(METHOD,ALOGI)> ]
+"4595" [label = <(METHOD_RETURN,ANY)> ]
+  "4592" -> "4595" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/165-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/165-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/165-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/165-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "defaultUrl" {  
-"4600" [label = <(METHOD,defaultUrl)> ]
-"4603" [label = <(METHOD_RETURN,ANY)> ]
-  "4600" -> "4603" 
+"4596" [label = <(METHOD,defaultUrl)> ]
+"4599" [label = <(METHOD_RETURN,ANY)> ]
+  "4596" -> "4599" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/166-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/166-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/166-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/166-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "getKeyRequestCommon" {  
-"4604" [label = <(METHOD,getKeyRequestCommon)> ]
-"4614" [label = <(METHOD_RETURN,ANY)> ]
-  "4604" -> "4614" 
+"4600" [label = <(METHOD,getKeyRequestCommon)> ]
+"4610" [label = <(METHOD_RETURN,ANY)> ]
+  "4600" -> "4610" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/167-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/167-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/167-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/167-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addressOf" {  
-"4615" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
-"4618" [label = <(METHOD_RETURN,ANY)> ]
-  "4615" -> "4618" 
+"4611" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
+"4614" [label = <(METHOD_RETURN,ANY)> ]
+  "4611" -> "4614" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/168-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/168-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/168-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/168-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "toStatus_1_0" {  
-"4619" [label = <(METHOD,toStatus_1_0)> ]
-"4622" [label = <(METHOD_RETURN,ANY)> ]
-  "4619" -> "4622" 
+"4615" [label = <(METHOD,toStatus_1_0)> ]
+"4618" [label = <(METHOD_RETURN,ANY)> ]
+  "4615" -> "4618" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/169-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/169-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/169-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/169-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "toKeyRequestType_V1_0" {  
-"4623" [label = <(METHOD,toKeyRequestType_V1_0)> ]
-"4626" [label = <(METHOD_RETURN,ANY)> ]
-  "4623" -> "4626" 
+"4619" [label = <(METHOD,toKeyRequestType_V1_0)> ]
+"4622" [label = <(METHOD_RETURN,ANY)> ]
+  "4619" -> "4622" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/170-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/170-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/170-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/170-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "hidl_string" {  
-"4627" [label = <(METHOD,hidl_string)> ]
-"4630" [label = <(METHOD_RETURN,ANY)> ]
-  "4627" -> "4630" 
+"4623" [label = <(METHOD,hidl_string)> ]
+"4626" [label = <(METHOD_RETURN,ANY)> ]
+  "4623" -> "4626" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/171-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/171-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/171-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/171-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "push_back" {  
-"4631" [label = <(METHOD,push_back)> ]
-"4635" [label = <(METHOD_RETURN,ANY)> ]
-  "4631" -> "4635" 
+"4627" [label = <(METHOD,push_back)> ]
+"4631" [label = <(METHOD_RETURN,ANY)> ]
+  "4627" -> "4631" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/172-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/172-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/172-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/172-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "ksid" {  
-"4636" [label = <(METHOD,ksid)> ]
-"4640" [label = <(METHOD_RETURN,ANY)> ]
-  "4636" -> "4640" 
+"4632" [label = <(METHOD,ksid)> ]
+"4636" [label = <(METHOD_RETURN,ANY)> ]
+  "4632" -> "4636" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/173-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/173-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/173-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/173-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "resize" {  
-"4641" [label = <(METHOD,resize)> ]
-"4645" [label = <(METHOD_RETURN,ANY)> ]
-  "4641" -> "4645" 
+"4637" [label = <(METHOD,resize)> ]
+"4641" [label = <(METHOD_RETURN,ANY)> ]
+  "4637" -> "4641" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/174-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/174-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/174-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/174-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "randomData" {  
-"4646" [label = <(METHOD,randomData)> ]
-"4650" [label = <(METHOD_RETURN,ANY)> ]
-  "4646" -> "4650" 
+"4642" [label = <(METHOD,randomData)> ]
+"4646" [label = <(METHOD_RETURN,ANY)> ]
+  "4642" -> "4646" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/175-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/175-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/175-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/175-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.subtraction" {  
-"4651" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
-"4655" [label = <(METHOD_RETURN,ANY)> ]
-  "4651" -> "4655" 
+"4647" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
+"4651" [label = <(METHOD_RETURN,ANY)> ]
+  "4647" -> "4651" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/176-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/176-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/176-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/176-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "empty" {  
-"4656" [label = <(METHOD,empty)> ]
-"4659" [label = <(METHOD_RETURN,ANY)> ]
-  "4656" -> "4659" 
+"4652" [label = <(METHOD,empty)> ]
+"4655" [label = <(METHOD_RETURN,ANY)> ]
+  "4652" -> "4655" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/177-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/177-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/177-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/177-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.modulo" {  
-"4660" [label = <(METHOD,&lt;operator&gt;.modulo)> ]
-"4664" [label = <(METHOD_RETURN,ANY)> ]
-  "4660" -> "4664" 
+"4656" [label = <(METHOD,&lt;operator&gt;.modulo)> ]
+"4660" [label = <(METHOD_RETURN,ANY)> ]
+  "4656" -> "4660" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/178-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/178-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/178-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/178-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "std::rand" {  
-"4665" [label = <(METHOD,std::rand)> ]
-"4668" [label = <(METHOD_RETURN,ANY)> ]
-  "4665" -> "4668" 
+"4661" [label = <(METHOD,std::rand)> ]
+"4664" [label = <(METHOD_RETURN,ANY)> ]
+  "4661" -> "4664" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/179-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/179-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/179-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/179-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "ByteArrayToHexString" {  
-"4669" [label = <(METHOD,ByteArrayToHexString)> ]
-"4673" [label = <(METHOD_RETURN,ANY)> ]
-  "4669" -> "4673" 
+"4665" [label = <(METHOD,ByteArrayToHexString)> ]
+"4669" [label = <(METHOD_RETURN,ANY)> ]
+  "4665" -> "4669" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/180-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/180-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/180-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/180-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "data" {  
-"4674" [label = <(METHOD,data)> ]
-"4677" [label = <(METHOD_RETURN,ANY)> ]
-  "4674" -> "4677" 
+"4670" [label = <(METHOD,data)> ]
+"4673" [label = <(METHOD_RETURN,ANY)> ]
+  "4670" -> "4673" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/181-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/181-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/181-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/181-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "LicenseExists" {  
-"4678" [label = <(METHOD,LicenseExists)> ]
-"4682" [label = <(METHOD_RETURN,ANY)> ]
-  "4678" -> "4682" 
+"4674" [label = <(METHOD,LicenseExists)> ]
+"4678" [label = <(METHOD_RETURN,ANY)> ]
+  "4674" -> "4678" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/182-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/182-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/182-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/182-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGV" {  
-"4683" [label = <(METHOD,ALOGV)> ]
-"4686" [label = <(METHOD_RETURN,ANY)> ]
-  "4683" -> "4686" 
+"4679" [label = <(METHOD,ALOGV)> ]
+"4682" [label = <(METHOD_RETURN,ANY)> ]
+  "4679" -> "4682" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/183-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/183-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/183-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/183-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "responseString" {  
-"4687" [label = <(METHOD,responseString)> ]
-"4691" [label = <(METHOD_RETURN,ANY)> ]
-  "4687" -> "4691" 
+"4683" [label = <(METHOD,responseString)> ]
+"4687" [label = <(METHOD_RETURN,ANY)> ]
+  "4683" -> "4687" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/184-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/184-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/184-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/184-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "android_errorWriteLog" {  
-"4692" [label = <(METHOD,android_errorWriteLog)> ]
-"4696" [label = <(METHOD_RETURN,ANY)> ]
-  "4692" -> "4696" 
+"4688" [label = <(METHOD,android_errorWriteLog)> ]
+"4692" [label = <(METHOD_RETURN,ANY)> ]
+  "4688" -> "4692" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/185-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/185-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/185-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/185-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "memcmp" {  
-"4697" [label = <(METHOD,memcmp)> ]
-"4702" [label = <(METHOD_RETURN,ANY)> ]
-  "4697" -> "4702" 
+"4693" [label = <(METHOD,memcmp)> ]
+"4698" [label = <(METHOD_RETURN,ANY)> ]
+  "4693" -> "4698" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/186-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/186-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/186-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/186-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "std::string" {  
-"4703" [label = <(METHOD,std::string)> ]
-"4707" [label = <(METHOD_RETURN,ANY)> ]
-  "4703" -> "4707" 
+"4699" [label = <(METHOD,std::string)> ]
+"4703" [label = <(METHOD_RETURN,ANY)> ]
+  "4699" -> "4703" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/187-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/187-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/187-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/187-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "setPlayPolicy" {  
-"4708" [label = <(METHOD,setPlayPolicy)> ]
-"4710" [label = <(METHOD_RETURN,ANY)> ]
-  "4708" -> "4710" 
+"4704" [label = <(METHOD,setPlayPolicy)> ]
+"4706" [label = <(METHOD_RETURN,ANY)> ]
+  "4704" -> "4706" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/188-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/188-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/188-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/188-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "provideKeyResponse" {  
-"4711" [label = <(METHOD,provideKeyResponse)> ]
-"4715" [label = <(METHOD_RETURN,ANY)> ]
-  "4711" -> "4715" 
+"4707" [label = <(METHOD,provideKeyResponse)> ]
+"4711" [label = <(METHOD_RETURN,ANY)> ]
+  "4707" -> "4711" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/189-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/189-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/189-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/189-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteLicense" {  
-"4716" [label = <(METHOD,DeleteLicense)> ]
-"4720" [label = <(METHOD_RETURN,ANY)> ]
-  "4716" -> "4720" 
+"4712" [label = <(METHOD,DeleteLicense)> ]
+"4716" [label = <(METHOD_RETURN,ANY)> ]
+  "4712" -> "4716" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/190-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/190-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/190-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/190-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "makeKeySetId" {  
-"4721" [label = <(METHOD,makeKeySetId)> ]
-"4724" [label = <(METHOD_RETURN,ANY)> ]
-  "4721" -> "4724" 
+"4717" [label = <(METHOD,makeKeySetId)> ]
+"4720" [label = <(METHOD_RETURN,ANY)> ]
+  "4717" -> "4720" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/191-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/191-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/191-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/191-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "keySetIdVec" {  
-"4725" [label = <(METHOD,keySetIdVec)> ]
-"4729" [label = <(METHOD_RETURN,ANY)> ]
-  "4725" -> "4729" 
+"4721" [label = <(METHOD,keySetIdVec)> ]
+"4725" [label = <(METHOD_RETURN,ANY)> ]
+  "4721" -> "4725" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/192-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/192-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/192-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/192-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "RetrieveLicense" {  
-"4730" [label = <(METHOD,RetrieveLicense)> ]
-"4736" [label = <(METHOD_RETURN,ANY)> ]
-  "4730" -> "4736" 
+"4726" [label = <(METHOD,RetrieveLicense)> ]
+"4732" [label = <(METHOD_RETURN,ANY)> ]
+  "4726" -> "4732" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/193-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/193-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/193-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/193-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "name" {  
-"4737" [label = <(METHOD,name)> ]
-"4740" [label = <(METHOD_RETURN,ANY)> ]
-  "4737" -> "4740" 
+"4733" [label = <(METHOD,name)> ]
+"4736" [label = <(METHOD_RETURN,ANY)> ]
+  "4733" -> "4736" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/194-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/194-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/194-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/194-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "c_str" {  
-"4741" [label = <(METHOD,c_str)> ]
-"4744" [label = <(METHOD_RETURN,ANY)> ]
-  "4741" -> "4744" 
+"4737" [label = <(METHOD,c_str)> ]
+"4740" [label = <(METHOD_RETURN,ANY)> ]
+  "4737" -> "4740" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/195-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/195-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/195-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/195-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "append" {  
-"4745" [label = <(METHOD,append)> ]
-"4749" [label = <(METHOD_RETURN,ANY)> ]
-  "4745" -> "4749" 
+"4741" [label = <(METHOD,append)> ]
+"4745" [label = <(METHOD_RETURN,ANY)> ]
+  "4741" -> "4745" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/196-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/196-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/196-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/196-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGD" {  
-"4750" [label = <(METHOD,ALOGD)> ]
-"4754" [label = <(METHOD_RETURN,ANY)> ]
-  "4750" -> "4754" 
+"4746" [label = <(METHOD,ALOGD)> ]
+"4750" [label = <(METHOD_RETURN,ANY)> ]
+  "4746" -> "4750" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/197-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/197-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/197-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/197-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "hidl_vec&lt;KeyValue&gt;" {  
-"4755" [label = <(METHOD,hidl_vec&lt;KeyValue&gt;)> ]
-"4757" [label = <(METHOD_RETURN,ANY)> ]
-  "4755" -> "4757" 
+"4751" [label = <(METHOD,hidl_vec&lt;KeyValue&gt;)> ]
+"4753" [label = <(METHOD_RETURN,ANY)> ]
+  "4751" -> "4753" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/198-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/198-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/198-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/198-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "numOpenSessions" {  
-"4758" [label = <(METHOD,numOpenSessions)> ]
-"4761" [label = <(METHOD_RETURN,ANY)> ]
-  "4758" -> "4761" 
+"4754" [label = <(METHOD,numOpenSessions)> ]
+"4757" [label = <(METHOD_RETURN,ANY)> ]
+  "4754" -> "4757" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/199-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/199-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/199-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/199-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;" {  
-"4762" [label = <(METHOD,std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;)> ]
-"4767" [label = <(METHOD_RETURN,ANY)> ]
-  "4762" -> "4767" 
+"4758" [label = <(METHOD,std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;)> ]
+"4763" [label = <(METHOD_RETURN,ANY)> ]
+  "4758" -> "4763" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/200-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/200-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/200-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/200-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.arrayInitializer" {  
-"4768" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
-"4773" [label = <(METHOD_RETURN,ANY)> ]
-  "4768" -> "4773" 
+"4764" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
+"4769" [label = <(METHOD_RETURN,ANY)> ]
+  "4764" -> "4769" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/201-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/201-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/201-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/201-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "ListLicenses" {  
-"4774" [label = <(METHOD,ListLicenses)> ]
-"4777" [label = <(METHOD_RETURN,ANY)> ]
-  "4774" -> "4777" 
+"4770" [label = <(METHOD,ListLicenses)> ]
+"4773" [label = <(METHOD_RETURN,ANY)> ]
+  "4770" -> "4773" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/202-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/202-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/202-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/202-cfg.dot	2023-06-07 19:37:55.517374361 +0330
@@ -1,5 +1,5 @@
 digraph "licenseName" {  
-"4778" [label = <(METHOD,licenseName)> ]
-"4782" [label = <(METHOD_RETURN,ANY)> ]
-  "4778" -> "4782" 
+"4774" [label = <(METHOD,licenseName)> ]
+"4778" [label = <(METHOD_RETURN,ANY)> ]
+  "4774" -> "4778" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/203-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/203-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/203-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/203-cfg.dot	2023-06-07 19:37:55.527374359 +0330
@@ -1,5 +1,5 @@
 digraph "unlock" {  
-"4783" [label = <(METHOD,unlock)> ]
-"4786" [label = <(METHOD_RETURN,ANY)> ]
-  "4783" -> "4786" 
+"4779" [label = <(METHOD,unlock)> ]
+"4782" [label = <(METHOD_RETURN,ANY)> ]
+  "4779" -> "4782" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/204-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/204-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/204-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/204-cfg.dot	2023-06-07 19:37:55.527374359 +0330
@@ -1,5 +1,5 @@
 digraph "removeSecureStop" {  
-"4787" [label = <(METHOD,removeSecureStop)> ]
-"4790" [label = <(METHOD_RETURN,ANY)> ]
-  "4787" -> "4790" 
+"4783" [label = <(METHOD,removeSecureStop)> ]
+"4786" [label = <(METHOD_RETURN,ANY)> ]
+  "4783" -> "4786" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/205-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/205-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/205-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/205-cfg.dot	2023-06-07 19:37:55.527374359 +0330
@@ -1,5 +1,5 @@
 digraph "removeAllSecureStops" {  
-"4791" [label = <(METHOD,removeAllSecureStops)> ]
-"4793" [label = <(METHOD_RETURN,ANY)> ]
-  "4791" -> "4793" 
+"4787" [label = <(METHOD,removeAllSecureStops)> ]
+"4789" [label = <(METHOD_RETURN,ANY)> ]
+  "4787" -> "4789" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/206-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/206-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/206-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/206-cfg.dot	2023-06-07 19:37:55.527374359 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.new" {  
-"4794" [label = <(METHOD,&lt;operator&gt;.new)> ]
-"4797" [label = <(METHOD_RETURN,ANY)> ]
-  "4794" -> "4797" 
+"4790" [label = <(METHOD,&lt;operator&gt;.new)> ]
+"4793" [label = <(METHOD_RETURN,ANY)> ]
+  "4790" -> "4793" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/207-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/207-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/207-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/207-cfg.dot	2023-06-07 19:37:55.527374359 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentPlus" {  
-"4798" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
-"4802" [label = <(METHOD_RETURN,ANY)> ]
-  "4798" -> "4802" 
+"4794" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
+"4798" [label = <(METHOD_RETURN,ANY)> ]
+  "4794" -> "4798" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/208-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/208-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/208-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/208-cfg.dot	2023-06-07 19:37:55.527374359 +0330
@@ -1,5 +1,5 @@
 digraph "memcpy" {  
-"4803" [label = <(METHOD,memcpy)> ]
-"4808" [label = <(METHOD_RETURN,ANY)> ]
-  "4803" -> "4808" 
+"4799" [label = <(METHOD,memcpy)> ]
+"4804" [label = <(METHOD_RETURN,ANY)> ]
+  "4799" -> "4804" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/209-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/209-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/209-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/209-cfg.dot	2023-06-07 19:37:55.527374359 +0330
@@ -1,5 +1,5 @@
 digraph "id" {  
-"4809" [label = <(METHOD,id)> ]
-"4813" [label = <(METHOD_RETURN,ANY)> ]
-  "4809" -> "4813" 
+"4805" [label = <(METHOD,id)> ]
+"4809" [label = <(METHOD_RETURN,ANY)> ]
+  "4805" -> "4809" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/210-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/210-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/210-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/210-cfg.dot	2023-06-07 19:37:55.527374359 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.delete" {  
-"4814" [label = <(METHOD,&lt;operator&gt;.delete)> ]
-"4817" [label = <(METHOD_RETURN,ANY)> ]
-  "4814" -> "4817" 
+"4810" [label = <(METHOD,&lt;operator&gt;.delete)> ]
+"4813" [label = <(METHOD_RETURN,ANY)> ]
+  "4810" -> "4813" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/211-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/211-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/211-cfg.dot	2023-06-07 19:37:51.017374286 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/211-cfg.dot	2023-06-07 19:37:55.527374359 +0330
@@ -1,5 +1,5 @@
 digraph "erase" {  
-"4818" [label = <(METHOD,erase)> ]
-"4822" [label = <(METHOD_RETURN,ANY)> ]
-  "4818" -> "4822" 
+"4814" [label = <(METHOD,erase)> ]
+"4818" [label = <(METHOD_RETURN,ANY)> ]
+  "4814" -> "4818" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/54-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/54-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/54-cfg.dot	2023-06-07 19:37:50.897374248 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/54-cfg.dot	2023-06-07 19:37:55.417374369 +0330
@@ -1,17 +1,17 @@
 digraph "processMockError" {  
-"865" [label = <(setMockError,session-&gt;setMockError(mMockError))<SUB>415</SUB>> ]
-"870" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::OK)<SUB>416</SUB>> ]
-"866" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;setMockError)<SUB>415</SUB>> ]
-"872" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>416</SUB>> ]
-"868" [label = <(FIELD_IDENTIFIER,setMockError,setMockError)<SUB>415</SUB>> ]
-"874" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>416</SUB>> ]
-"862" [label = <(METHOD,processMockError)<SUB>414</SUB>> ]
-"875" [label = <(METHOD_RETURN,void)<SUB>414</SUB>> ]
-  "865" -> "874" 
-  "870" -> "875" 
-  "866" -> "865" 
-  "872" -> "870" 
-  "868" -> "866" 
-  "874" -> "872" 
-  "862" -> "868" 
+"864" [label = <(setMockError,session-&gt;setMockError(mMockError))<SUB>414</SUB>> ]
+"869" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::OK)<SUB>415</SUB>> ]
+"865" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;setMockError)<SUB>414</SUB>> ]
+"871" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>415</SUB>> ]
+"867" [label = <(FIELD_IDENTIFIER,setMockError,setMockError)<SUB>414</SUB>> ]
+"873" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>415</SUB>> ]
+"861" [label = <(METHOD,processMockError)<SUB>413</SUB>> ]
+"874" [label = <(METHOD_RETURN,void)<SUB>413</SUB>> ]
+  "864" -> "873" 
+  "869" -> "874" 
+  "865" -> "864" 
+  "871" -> "869" 
+  "867" -> "865" 
+  "873" -> "871" 
+  "861" -> "867" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/55-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/55-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/55-cfg.dot	2023-06-07 19:37:50.907374251 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/55-cfg.dot	2023-06-07 19:37:55.417374369 +0330
@@ -1,27 +1,27 @@
 digraph "&lt;global&gt;" {  
-"886" [label = <(kKeySetIdPrefix,kKeySetIdPrefix(&quot;ckid&quot;))<SUB>31</SUB>> ]
-"889" [label = <(&lt;operator&gt;.assignment,kKeySetIdLength = 16)<SUB>32</SUB>> ]
-"893" [label = <(&lt;operator&gt;.assignment,kSecureStopIdStart = 100)<SUB>33</SUB>> ]
-"897" [label = <(kOfflineLicense,kOfflineLicense(&quot;\&quot;type\&quot;:\&quot;persistent-license\&quot;&quot;))<SUB>34</SUB>> ]
-"900" [label = <(kStreaming,kStreaming(&quot;Streaming&quot;))<SUB>35</SUB>> ]
-"903" [label = <(kTemporaryLicense,kTemporaryLicense(&quot;\&quot;type\&quot;:\&quot;temporary\&quot;&quot;))<SUB>36</SUB>> ]
-"906" [label = <(kTrue,kTrue(&quot;True&quot;))<SUB>37</SUB>> ]
-"909" [label = <(kQueryKeyLicenseType,kQueryKeyLicenseType(&quot;LicenseType&quot;))<SUB>39</SUB>> ]
-"912" [label = <(kQueryKeyPlayAllowed,kQueryKeyPlayAllowed(&quot;PlayAllowed&quot;))<SUB>41</SUB>> ]
-"915" [label = <(kQueryKeyRenewAllowed,kQueryKeyRenewAllowed(&quot;RenewAllowed&quot;))<SUB>43</SUB>> ]
-"918" [label = <(&lt;operator&gt;.assignment,kSecureStopIdSize = 10)<SUB>46</SUB>> ]
-"882" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"4031" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
-  "886" -> "889" 
-  "889" -> "893" 
-  "893" -> "897" 
-  "897" -> "900" 
-  "900" -> "903" 
-  "903" -> "906" 
-  "906" -> "909" 
-  "909" -> "912" 
-  "912" -> "915" 
-  "915" -> "918" 
-  "918" -> "4031" 
-  "882" -> "886" 
+"885" [label = <(kKeySetIdPrefix,kKeySetIdPrefix(&quot;ckid&quot;))<SUB>31</SUB>> ]
+"888" [label = <(&lt;operator&gt;.assignment,kKeySetIdLength = 16)<SUB>32</SUB>> ]
+"892" [label = <(&lt;operator&gt;.assignment,kSecureStopIdStart = 100)<SUB>33</SUB>> ]
+"896" [label = <(kOfflineLicense,kOfflineLicense(&quot;\&quot;type\&quot;:\&quot;persistent-license\&quot;&quot;))<SUB>34</SUB>> ]
+"899" [label = <(kStreaming,kStreaming(&quot;Streaming&quot;))<SUB>35</SUB>> ]
+"902" [label = <(kTemporaryLicense,kTemporaryLicense(&quot;\&quot;type\&quot;:\&quot;temporary\&quot;&quot;))<SUB>36</SUB>> ]
+"905" [label = <(kTrue,kTrue(&quot;True&quot;))<SUB>37</SUB>> ]
+"908" [label = <(kQueryKeyLicenseType,kQueryKeyLicenseType(&quot;LicenseType&quot;))<SUB>39</SUB>> ]
+"911" [label = <(kQueryKeyPlayAllowed,kQueryKeyPlayAllowed(&quot;PlayAllowed&quot;))<SUB>41</SUB>> ]
+"914" [label = <(kQueryKeyRenewAllowed,kQueryKeyRenewAllowed(&quot;RenewAllowed&quot;))<SUB>43</SUB>> ]
+"917" [label = <(&lt;operator&gt;.assignment,kSecureStopIdSize = 10)<SUB>46</SUB>> ]
+"881" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"4027" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+  "885" -> "888" 
+  "888" -> "892" 
+  "892" -> "896" 
+  "896" -> "899" 
+  "899" -> "902" 
+  "902" -> "905" 
+  "905" -> "908" 
+  "908" -> "911" 
+  "911" -> "914" 
+  "914" -> "917" 
+  "917" -> "4027" 
+  "881" -> "885" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/56-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/56-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/56-cfg.dot	2023-06-07 19:37:50.907374251 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/56-cfg.dot	2023-06-07 19:37:55.417374369 +0330
@@ -1,27 +1,27 @@
 digraph "uint32ToVector" {  
-"925" [label = <(memset,memset(buffer, 0, kSecureStopIdSize))<SUB>51</SUB>> ]
-"929" [label = <(UNKNOWN,snprintf(buffer, kSecureStopIdSize, &quot;%&quot; PRIu32, value);,snprintf(buffer, kSecureStopIdSize, &quot;%&quot; PRIu32, value);)<SUB>52</SUB>> ]
-"930" [label = <(RETURN,return std::vector&lt;uint8_t&gt;(buffer, buffer + sizeof(buffer));,return std::vector&lt;uint8_t&gt;(buffer, buffer + sizeof(buffer));)<SUB>53</SUB>> ]
-"931" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt;(buffer, buffer + sizeof(buffer)))<SUB>53</SUB>> ]
-"932" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>53</SUB>> ]
-"937" [label = <(&lt;operator&gt;.bracketedPrimary,(buffer, buffer + sizeof(buffer)))<SUB>53</SUB>> ]
-"933" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>53</SUB>> ]
-"938" [label = <(&lt;operator&gt;.expressionList,buffer, buffer + sizeof(buffer))<SUB>53</SUB>> ]
-"935" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>53</SUB>> ]
-"940" [label = <(&lt;operator&gt;.addition,buffer + sizeof(buffer))<SUB>53</SUB>> ]
-"942" [label = <(&lt;operator&gt;.sizeOf,sizeof(buffer))<SUB>53</SUB>> ]
-"921" [label = <(METHOD,uint32ToVector)<SUB>48</SUB>> ]
-"944" [label = <(METHOD_RETURN,vector&lt;uint8_t&gt;)<SUB>48</SUB>> ]
-  "925" -> "929" 
-  "929" -> "935" 
-  "930" -> "944" 
-  "931" -> "930" 
-  "932" -> "942" 
-  "937" -> "931" 
-  "933" -> "932" 
-  "938" -> "937" 
-  "935" -> "933" 
-  "940" -> "938" 
-  "942" -> "940" 
-  "921" -> "925" 
+"924" [label = <(memset,memset(buffer, 0, kSecureStopIdSize))<SUB>51</SUB>> ]
+"928" [label = <(UNKNOWN,snprintf(buffer, kSecureStopIdSize, &quot;%&quot; PRIu32, value);,snprintf(buffer, kSecureStopIdSize, &quot;%&quot; PRIu32, value);)<SUB>52</SUB>> ]
+"929" [label = <(RETURN,return std::vector&lt;uint8_t&gt;(buffer, buffer + sizeof(buffer));,return std::vector&lt;uint8_t&gt;(buffer, buffer + sizeof(buffer));)<SUB>53</SUB>> ]
+"930" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt;(buffer, buffer + sizeof(buffer)))<SUB>53</SUB>> ]
+"931" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>53</SUB>> ]
+"936" [label = <(&lt;operator&gt;.bracketedPrimary,(buffer, buffer + sizeof(buffer)))<SUB>53</SUB>> ]
+"932" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>53</SUB>> ]
+"937" [label = <(&lt;operator&gt;.expressionList,buffer, buffer + sizeof(buffer))<SUB>53</SUB>> ]
+"934" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>53</SUB>> ]
+"939" [label = <(&lt;operator&gt;.addition,buffer + sizeof(buffer))<SUB>53</SUB>> ]
+"941" [label = <(&lt;operator&gt;.sizeOf,sizeof(buffer))<SUB>53</SUB>> ]
+"920" [label = <(METHOD,uint32ToVector)<SUB>48</SUB>> ]
+"943" [label = <(METHOD_RETURN,vector&lt;uint8_t&gt;)<SUB>48</SUB>> ]
+  "924" -> "928" 
+  "928" -> "934" 
+  "929" -> "943" 
+  "930" -> "929" 
+  "931" -> "941" 
+  "936" -> "930" 
+  "932" -> "931" 
+  "937" -> "936" 
+  "934" -> "932" 
+  "939" -> "937" 
+  "941" -> "939" 
+  "920" -> "924" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/57-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/57-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/57-cfg.dot	2023-06-07 19:37:50.907374251 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/57-cfg.dot	2023-06-07 19:37:55.417374369 +0330
@@ -1,27 +1,27 @@
 digraph "toKeyRequestType_V1_0" {  
-"958" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::NONE)<SUB>66</SUB>> ]
-"962" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::UPDATE)<SUB>67</SUB>> ]
-"965" [label = <(RETURN,return KeyRequestType::UNKNOWN;,return KeyRequestType::UNKNOWN;)<SUB>68</SUB>> ]
-"970" [label = <(RETURN,return static_cast&lt;KeyRequestType&gt;(keyRequestType);,return static_cast&lt;KeyRequestType&gt;(keyRequestType);)<SUB>70</SUB>> ]
-"960" [label = <(FIELD_IDENTIFIER,NONE,NONE)<SUB>66</SUB>> ]
-"964" [label = <(FIELD_IDENTIFIER,UPDATE,UPDATE)<SUB>67</SUB>> ]
-"966" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType::UNKNOWN)<SUB>68</SUB>> ]
-"971" [label = <(&lt;operator&gt;.cast,static_cast&lt;KeyRequestType&gt;(keyRequestType))<SUB>70</SUB>> ]
-"968" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>68</SUB>> ]
-"972" [label = <(UNKNOWN,KeyRequestType,KeyRequestType)<SUB>70</SUB>> ]
-"951" [label = <(METHOD,toKeyRequestType_V1_0)<SUB>64</SUB>> ]
-"974" [label = <(METHOD_RETURN,KeyRequestType)<SUB>64</SUB>> ]
-  "958" -> "964" 
-  "962" -> "968" 
-  "965" -> "974" 
-  "970" -> "974" 
-  "960" -> "958" 
-  "964" -> "962" 
-  "966" -> "965" 
+"957" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::NONE)<SUB>66</SUB>> ]
+"961" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::UPDATE)<SUB>67</SUB>> ]
+"964" [label = <(RETURN,return KeyRequestType::UNKNOWN;,return KeyRequestType::UNKNOWN;)<SUB>68</SUB>> ]
+"969" [label = <(RETURN,return static_cast&lt;KeyRequestType&gt;(keyRequestType);,return static_cast&lt;KeyRequestType&gt;(keyRequestType);)<SUB>70</SUB>> ]
+"959" [label = <(FIELD_IDENTIFIER,NONE,NONE)<SUB>66</SUB>> ]
+"963" [label = <(FIELD_IDENTIFIER,UPDATE,UPDATE)<SUB>67</SUB>> ]
+"965" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType::UNKNOWN)<SUB>68</SUB>> ]
+"970" [label = <(&lt;operator&gt;.cast,static_cast&lt;KeyRequestType&gt;(keyRequestType))<SUB>70</SUB>> ]
+"967" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>68</SUB>> ]
+"971" [label = <(UNKNOWN,KeyRequestType,KeyRequestType)<SUB>70</SUB>> ]
+"950" [label = <(METHOD,toKeyRequestType_V1_0)<SUB>64</SUB>> ]
+"973" [label = <(METHOD_RETURN,KeyRequestType)<SUB>64</SUB>> ]
+  "957" -> "963" 
+  "961" -> "967" 
+  "964" -> "973" 
+  "969" -> "973" 
+  "959" -> "957" 
+  "963" -> "961" 
+  "965" -> "964" 
+  "970" -> "969" 
+  "967" -> "965" 
   "971" -> "970" 
-  "968" -> "966" 
-  "972" -> "971" 
-  "951" -> "960" 
-  "951" -> "964" 
-  "951" -> "972" 
+  "950" -> "959" 
+  "950" -> "963" 
+  "950" -> "971" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/58-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/58-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/58-cfg.dot	2023-06-07 19:37:50.907374251 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/58-cfg.dot	2023-06-07 19:37:55.427374366 +0330
@@ -1,37 +1,37 @@
 digraph "DrmPlugin" {  
-"979" [label = <(clear,mPlayPolicy.clear())<SUB>81</SUB>> ]
-"983" [label = <(initProperties,initProperties())<SUB>82</SUB>> ]
-"984" [label = <(clear,mSecureStops.clear())<SUB>83</SUB>> ]
-"988" [label = <(clear,mReleaseKeysMap.clear())<SUB>84</SUB>> ]
-"992" [label = <(std::srand,std::srand(std::time(nullptr)))<SUB>85</SUB>> ]
-"980" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.clear)<SUB>81</SUB>> ]
-"985" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.clear)<SUB>83</SUB>> ]
-"989" [label = <(&lt;operator&gt;.fieldAccess,mReleaseKeysMap.clear)<SUB>84</SUB>> ]
-"993" [label = <(&lt;operator&gt;.fieldAccess,std::srand)<SUB>85</SUB>> ]
-"996" [label = <(std::time,std::time(nullptr))<SUB>85</SUB>> ]
-"982" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>81</SUB>> ]
-"987" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>83</SUB>> ]
-"991" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>84</SUB>> ]
-"995" [label = <(FIELD_IDENTIFIER,srand,srand)<SUB>85</SUB>> ]
-"997" [label = <(&lt;operator&gt;.fieldAccess,std::time)<SUB>85</SUB>> ]
-"999" [label = <(FIELD_IDENTIFIER,time,time)<SUB>85</SUB>> ]
-"976" [label = <(METHOD,DrmPlugin)<SUB>74</SUB>> ]
-"1001" [label = <(METHOD_RETURN,ANY)<SUB>74</SUB>> ]
-  "979" -> "983" 
-  "983" -> "987" 
-  "984" -> "991" 
-  "988" -> "995" 
-  "992" -> "1001" 
-  "980" -> "979" 
-  "985" -> "984" 
-  "989" -> "988" 
-  "993" -> "999" 
-  "996" -> "992" 
-  "982" -> "980" 
-  "987" -> "985" 
-  "991" -> "989" 
-  "995" -> "993" 
-  "997" -> "996" 
-  "999" -> "997" 
-  "976" -> "982" 
+"978" [label = <(clear,mPlayPolicy.clear())<SUB>81</SUB>> ]
+"982" [label = <(initProperties,initProperties())<SUB>82</SUB>> ]
+"983" [label = <(clear,mSecureStops.clear())<SUB>83</SUB>> ]
+"987" [label = <(clear,mReleaseKeysMap.clear())<SUB>84</SUB>> ]
+"991" [label = <(std::srand,std::srand(std::time(nullptr)))<SUB>85</SUB>> ]
+"979" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.clear)<SUB>81</SUB>> ]
+"984" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.clear)<SUB>83</SUB>> ]
+"988" [label = <(&lt;operator&gt;.fieldAccess,mReleaseKeysMap.clear)<SUB>84</SUB>> ]
+"992" [label = <(&lt;operator&gt;.fieldAccess,std::srand)<SUB>85</SUB>> ]
+"995" [label = <(std::time,std::time(nullptr))<SUB>85</SUB>> ]
+"981" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>81</SUB>> ]
+"986" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>83</SUB>> ]
+"990" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>84</SUB>> ]
+"994" [label = <(FIELD_IDENTIFIER,srand,srand)<SUB>85</SUB>> ]
+"996" [label = <(&lt;operator&gt;.fieldAccess,std::time)<SUB>85</SUB>> ]
+"998" [label = <(FIELD_IDENTIFIER,time,time)<SUB>85</SUB>> ]
+"975" [label = <(METHOD,DrmPlugin)<SUB>74</SUB>> ]
+"1000" [label = <(METHOD_RETURN,ANY)<SUB>74</SUB>> ]
+  "978" -> "982" 
+  "982" -> "986" 
+  "983" -> "990" 
+  "987" -> "994" 
+  "991" -> "1000" 
+  "979" -> "978" 
+  "984" -> "983" 
+  "988" -> "987" 
+  "992" -> "998" 
+  "995" -> "991" 
+  "981" -> "979" 
+  "986" -> "984" 
+  "990" -> "988" 
+  "994" -> "992" 
+  "996" -> "995" 
+  "998" -> "996" 
+  "975" -> "981" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/59-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/59-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/59-cfg.dot	2023-06-07 19:37:50.907374251 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/59-cfg.dot	2023-06-07 19:37:55.427374366 +0330
@@ -1,103 +1,103 @@
 digraph "initProperties" {  
-"1005" [label = <(clear,mStringProperties.clear())<SUB>89</SUB>> ]
-"1009" [label = <(&lt;operator&gt;.assignment,mStringProperties[kVendorKey] = kVendorValue)<SUB>90</SUB>> ]
-"1014" [label = <(&lt;operator&gt;.assignment,mStringProperties[kVersionKey] = kVersionValue)<SUB>91</SUB>> ]
-"1019" [label = <(&lt;operator&gt;.assignment,mStringProperties[kPluginDescriptionKey] = kPluginDescriptionValue)<SUB>92</SUB>> ]
-"1024" [label = <(&lt;operator&gt;.assignment,mStringProperties[kAlgorithmsKey] = kAlgorithmsValue)<SUB>93</SUB>> ]
-"1029" [label = <(&lt;operator&gt;.assignment,mStringProperties[kListenerTestSupportKey] = kListenerTestSupportValue)<SUB>94</SUB>> ]
-"1034" [label = <(&lt;operator&gt;.assignment,mStringProperties[kDrmErrorTestKey] = kDrmErrorTestValue)<SUB>95</SUB>> ]
-"1039" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; valueVector)<SUB>97</SUB>> ]
-"1046" [label = <(clear,valueVector.clear())<SUB>98</SUB>> ]
-"1050" [label = <(insert,valueVector.insert(valueVector.end(),\012            kTestDeviceIdData, kTestDeviceIdData + sizeof(kTestDeviceIdData) / sizeof(uint8_t)))<SUB>99</SUB>> ]
-"1066" [label = <(&lt;operator&gt;.assignment,mByteArrayProperties[kDeviceIdKey] = valueVector)<SUB>101</SUB>> ]
-"1071" [label = <(clear,valueVector.clear())<SUB>103</SUB>> ]
-"1075" [label = <(insert,valueVector.insert(valueVector.end(),\012            kMetricsData, kMetricsData + sizeof(kMetricsData) / sizeof(uint8_t)))<SUB>104</SUB>> ]
-"1091" [label = <(&lt;operator&gt;.assignment,mByteArrayProperties[kMetricsKey] = valueVector)<SUB>106</SUB>> ]
-"1006" [label = <(&lt;operator&gt;.fieldAccess,mStringProperties.clear)<SUB>89</SUB>> ]
-"1010" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kVendorKey])<SUB>90</SUB>> ]
-"1015" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kVersionKey])<SUB>91</SUB>> ]
-"1020" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kPluginDescriptionKey])<SUB>92</SUB>> ]
-"1025" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kAlgorithmsKey])<SUB>93</SUB>> ]
-"1030" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kListenerTestSupportKey])<SUB>94</SUB>> ]
-"1035" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kDrmErrorTestKey])<SUB>95</SUB>> ]
-"1040" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>97</SUB>> ]
-"1047" [label = <(&lt;operator&gt;.fieldAccess,valueVector.clear)<SUB>98</SUB>> ]
-"1051" [label = <(&lt;operator&gt;.fieldAccess,valueVector.insert)<SUB>99</SUB>> ]
-"1054" [label = <(end,valueVector.end())<SUB>99</SUB>> ]
-"1059" [label = <(&lt;operator&gt;.addition,kTestDeviceIdData + sizeof(kTestDeviceIdData) / sizeof(uint8_t))<SUB>100</SUB>> ]
-"1067" [label = <(&lt;operator&gt;.indirectIndexAccess,mByteArrayProperties[kDeviceIdKey])<SUB>101</SUB>> ]
-"1072" [label = <(&lt;operator&gt;.fieldAccess,valueVector.clear)<SUB>103</SUB>> ]
-"1076" [label = <(&lt;operator&gt;.fieldAccess,valueVector.insert)<SUB>104</SUB>> ]
-"1079" [label = <(end,valueVector.end())<SUB>104</SUB>> ]
-"1084" [label = <(&lt;operator&gt;.addition,kMetricsData + sizeof(kMetricsData) / sizeof(uint8_t))<SUB>105</SUB>> ]
-"1092" [label = <(&lt;operator&gt;.indirectIndexAccess,mByteArrayProperties[kMetricsKey])<SUB>106</SUB>> ]
-"1008" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>89</SUB>> ]
-"1041" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>97</SUB>> ]
-"1049" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>98</SUB>> ]
-"1053" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>99</SUB>> ]
-"1055" [label = <(&lt;operator&gt;.fieldAccess,valueVector.end)<SUB>99</SUB>> ]
-"1061" [label = <(&lt;operator&gt;.division,sizeof(kTestDeviceIdData) / sizeof(uint8_t))<SUB>100</SUB>> ]
-"1074" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>103</SUB>> ]
-"1078" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>104</SUB>> ]
-"1080" [label = <(&lt;operator&gt;.fieldAccess,valueVector.end)<SUB>104</SUB>> ]
-"1086" [label = <(&lt;operator&gt;.division,sizeof(kMetricsData) / sizeof(uint8_t))<SUB>105</SUB>> ]
-"1043" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>97</SUB>> ]
-"1057" [label = <(FIELD_IDENTIFIER,end,end)<SUB>99</SUB>> ]
-"1062" [label = <(&lt;operator&gt;.sizeOf,sizeof(kTestDeviceIdData))<SUB>100</SUB>> ]
-"1064" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint8_t))<SUB>100</SUB>> ]
-"1082" [label = <(FIELD_IDENTIFIER,end,end)<SUB>104</SUB>> ]
-"1087" [label = <(&lt;operator&gt;.sizeOf,sizeof(kMetricsData))<SUB>105</SUB>> ]
-"1089" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint8_t))<SUB>105</SUB>> ]
-"1003" [label = <(METHOD,initProperties)<SUB>88</SUB>> ]
-"1096" [label = <(METHOD_RETURN,void)<SUB>88</SUB>> ]
-  "1005" -> "1010" 
-  "1009" -> "1015" 
-  "1014" -> "1020" 
-  "1019" -> "1025" 
-  "1024" -> "1030" 
-  "1029" -> "1035" 
-  "1034" -> "1043" 
-  "1039" -> "1049" 
-  "1046" -> "1053" 
-  "1050" -> "1067" 
-  "1066" -> "1074" 
-  "1071" -> "1078" 
-  "1075" -> "1092" 
-  "1091" -> "1096" 
-  "1006" -> "1005" 
-  "1010" -> "1009" 
-  "1015" -> "1014" 
-  "1020" -> "1019" 
-  "1025" -> "1024" 
-  "1030" -> "1029" 
-  "1035" -> "1034" 
+"1004" [label = <(clear,mStringProperties.clear())<SUB>89</SUB>> ]
+"1008" [label = <(&lt;operator&gt;.assignment,mStringProperties[kVendorKey] = kVendorValue)<SUB>90</SUB>> ]
+"1013" [label = <(&lt;operator&gt;.assignment,mStringProperties[kVersionKey] = kVersionValue)<SUB>91</SUB>> ]
+"1018" [label = <(&lt;operator&gt;.assignment,mStringProperties[kPluginDescriptionKey] = kPluginDescriptionValue)<SUB>92</SUB>> ]
+"1023" [label = <(&lt;operator&gt;.assignment,mStringProperties[kAlgorithmsKey] = kAlgorithmsValue)<SUB>93</SUB>> ]
+"1028" [label = <(&lt;operator&gt;.assignment,mStringProperties[kListenerTestSupportKey] = kListenerTestSupportValue)<SUB>94</SUB>> ]
+"1033" [label = <(&lt;operator&gt;.assignment,mStringProperties[kDrmErrorTestKey] = kDrmErrorTestValue)<SUB>95</SUB>> ]
+"1038" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; valueVector)<SUB>97</SUB>> ]
+"1045" [label = <(clear,valueVector.clear())<SUB>98</SUB>> ]
+"1049" [label = <(insert,valueVector.insert(valueVector.end(),\012            kTestDeviceIdData, kTestDeviceIdData + sizeof(kTestDeviceIdData) / sizeof(uint8_t)))<SUB>99</SUB>> ]
+"1065" [label = <(&lt;operator&gt;.assignment,mByteArrayProperties[kDeviceIdKey] = valueVector)<SUB>101</SUB>> ]
+"1070" [label = <(clear,valueVector.clear())<SUB>103</SUB>> ]
+"1074" [label = <(insert,valueVector.insert(valueVector.end(),\012            kMetricsData, kMetricsData + sizeof(kMetricsData) / sizeof(uint8_t)))<SUB>104</SUB>> ]
+"1090" [label = <(&lt;operator&gt;.assignment,mByteArrayProperties[kMetricsKey] = valueVector)<SUB>106</SUB>> ]
+"1005" [label = <(&lt;operator&gt;.fieldAccess,mStringProperties.clear)<SUB>89</SUB>> ]
+"1009" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kVendorKey])<SUB>90</SUB>> ]
+"1014" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kVersionKey])<SUB>91</SUB>> ]
+"1019" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kPluginDescriptionKey])<SUB>92</SUB>> ]
+"1024" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kAlgorithmsKey])<SUB>93</SUB>> ]
+"1029" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kListenerTestSupportKey])<SUB>94</SUB>> ]
+"1034" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kDrmErrorTestKey])<SUB>95</SUB>> ]
+"1039" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>97</SUB>> ]
+"1046" [label = <(&lt;operator&gt;.fieldAccess,valueVector.clear)<SUB>98</SUB>> ]
+"1050" [label = <(&lt;operator&gt;.fieldAccess,valueVector.insert)<SUB>99</SUB>> ]
+"1053" [label = <(end,valueVector.end())<SUB>99</SUB>> ]
+"1058" [label = <(&lt;operator&gt;.addition,kTestDeviceIdData + sizeof(kTestDeviceIdData) / sizeof(uint8_t))<SUB>100</SUB>> ]
+"1066" [label = <(&lt;operator&gt;.indirectIndexAccess,mByteArrayProperties[kDeviceIdKey])<SUB>101</SUB>> ]
+"1071" [label = <(&lt;operator&gt;.fieldAccess,valueVector.clear)<SUB>103</SUB>> ]
+"1075" [label = <(&lt;operator&gt;.fieldAccess,valueVector.insert)<SUB>104</SUB>> ]
+"1078" [label = <(end,valueVector.end())<SUB>104</SUB>> ]
+"1083" [label = <(&lt;operator&gt;.addition,kMetricsData + sizeof(kMetricsData) / sizeof(uint8_t))<SUB>105</SUB>> ]
+"1091" [label = <(&lt;operator&gt;.indirectIndexAccess,mByteArrayProperties[kMetricsKey])<SUB>106</SUB>> ]
+"1007" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>89</SUB>> ]
+"1040" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>97</SUB>> ]
+"1048" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>98</SUB>> ]
+"1052" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>99</SUB>> ]
+"1054" [label = <(&lt;operator&gt;.fieldAccess,valueVector.end)<SUB>99</SUB>> ]
+"1060" [label = <(&lt;operator&gt;.division,sizeof(kTestDeviceIdData) / sizeof(uint8_t))<SUB>100</SUB>> ]
+"1073" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>103</SUB>> ]
+"1077" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>104</SUB>> ]
+"1079" [label = <(&lt;operator&gt;.fieldAccess,valueVector.end)<SUB>104</SUB>> ]
+"1085" [label = <(&lt;operator&gt;.division,sizeof(kMetricsData) / sizeof(uint8_t))<SUB>105</SUB>> ]
+"1042" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>97</SUB>> ]
+"1056" [label = <(FIELD_IDENTIFIER,end,end)<SUB>99</SUB>> ]
+"1061" [label = <(&lt;operator&gt;.sizeOf,sizeof(kTestDeviceIdData))<SUB>100</SUB>> ]
+"1063" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint8_t))<SUB>100</SUB>> ]
+"1081" [label = <(FIELD_IDENTIFIER,end,end)<SUB>104</SUB>> ]
+"1086" [label = <(&lt;operator&gt;.sizeOf,sizeof(kMetricsData))<SUB>105</SUB>> ]
+"1088" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint8_t))<SUB>105</SUB>> ]
+"1002" [label = <(METHOD,initProperties)<SUB>88</SUB>> ]
+"1095" [label = <(METHOD_RETURN,void)<SUB>88</SUB>> ]
+  "1004" -> "1009" 
+  "1008" -> "1014" 
+  "1013" -> "1019" 
+  "1018" -> "1024" 
+  "1023" -> "1029" 
+  "1028" -> "1034" 
+  "1033" -> "1042" 
+  "1038" -> "1048" 
+  "1045" -> "1052" 
+  "1049" -> "1066" 
+  "1065" -> "1073" 
+  "1070" -> "1077" 
+  "1074" -> "1091" 
+  "1090" -> "1095" 
+  "1005" -> "1004" 
+  "1009" -> "1008" 
+  "1014" -> "1013" 
+  "1019" -> "1018" 
+  "1024" -> "1023" 
+  "1029" -> "1028" 
+  "1034" -> "1033" 
+  "1039" -> "1038" 
+  "1046" -> "1045" 
+  "1050" -> "1056" 
+  "1053" -> "1061" 
+  "1058" -> "1049" 
+  "1066" -> "1065" 
+  "1071" -> "1070" 
+  "1075" -> "1081" 
+  "1078" -> "1086" 
+  "1083" -> "1074" 
+  "1091" -> "1090" 
+  "1007" -> "1005" 
   "1040" -> "1039" 
-  "1047" -> "1046" 
-  "1051" -> "1057" 
-  "1054" -> "1062" 
-  "1059" -> "1050" 
-  "1067" -> "1066" 
-  "1072" -> "1071" 
-  "1076" -> "1082" 
-  "1079" -> "1087" 
-  "1084" -> "1075" 
-  "1092" -> "1091" 
-  "1008" -> "1006" 
-  "1041" -> "1040" 
-  "1049" -> "1047" 
-  "1053" -> "1051" 
-  "1055" -> "1054" 
-  "1061" -> "1059" 
-  "1074" -> "1072" 
-  "1078" -> "1076" 
-  "1080" -> "1079" 
-  "1086" -> "1084" 
-  "1043" -> "1041" 
-  "1057" -> "1055" 
-  "1062" -> "1064" 
-  "1064" -> "1061" 
-  "1082" -> "1080" 
-  "1087" -> "1089" 
-  "1089" -> "1086" 
-  "1003" -> "1008" 
+  "1048" -> "1046" 
+  "1052" -> "1050" 
+  "1054" -> "1053" 
+  "1060" -> "1058" 
+  "1073" -> "1071" 
+  "1077" -> "1075" 
+  "1079" -> "1078" 
+  "1085" -> "1083" 
+  "1042" -> "1040" 
+  "1056" -> "1054" 
+  "1061" -> "1063" 
+  "1063" -> "1060" 
+  "1081" -> "1079" 
+  "1086" -> "1088" 
+  "1088" -> "1085" 
+  "1002" -> "1007" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/60-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/60-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/60-cfg.dot	2023-06-07 19:37:50.907374251 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/60-cfg.dot	2023-06-07 19:37:55.427374366 +0330
@@ -1,55 +1,55 @@
 digraph "installSecureStop" {  
-"1102" [label = <(lock,lock(mSecureStopLock))<SUB>114</SUB>> ]
-"1105" [label = <(&lt;operator&gt;.assignment,clearkeySecureStop.id = uint32ToVector(++mNextSecureStopId))<SUB>117</SUB>> ]
-"1112" [label = <(assign,clearkeySecureStop.data.assign(sessionId.begin(), sessionId.end()))<SUB>118</SUB>> ]
-"1126" [label = <(insert,mSecureStops.insert(std::pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;(\012            clearkeySecureStop.id, clearkeySecureStop)))<SUB>120</SUB>> ]
-"1106" [label = <(&lt;operator&gt;.fieldAccess,clearkeySecureStop.id)<SUB>117</SUB>> ]
-"1109" [label = <(uint32ToVector,uint32ToVector(++mNextSecureStopId))<SUB>117</SUB>> ]
-"1113" [label = <(&lt;operator&gt;.fieldAccess,clearkeySecureStop.data.assign)<SUB>118</SUB>> ]
-"1118" [label = <(begin,sessionId.begin())<SUB>118</SUB>> ]
-"1122" [label = <(end,sessionId.end())<SUB>118</SUB>> ]
-"1127" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.insert)<SUB>120</SUB>> ]
-"1130" [label = <(std::pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;,std::pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;(\012            clearkeySecureStop.id, clearkeySecureStop))<SUB>120</SUB>> ]
-"1108" [label = <(FIELD_IDENTIFIER,id,id)<SUB>117</SUB>> ]
-"1110" [label = <(&lt;operator&gt;.preIncrement,++mNextSecureStopId)<SUB>117</SUB>> ]
-"1114" [label = <(&lt;operator&gt;.fieldAccess,clearkeySecureStop.data)<SUB>118</SUB>> ]
-"1117" [label = <(FIELD_IDENTIFIER,assign,assign)<SUB>118</SUB>> ]
-"1119" [label = <(&lt;operator&gt;.fieldAccess,sessionId.begin)<SUB>118</SUB>> ]
-"1123" [label = <(&lt;operator&gt;.fieldAccess,sessionId.end)<SUB>118</SUB>> ]
-"1129" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>120</SUB>> ]
-"1131" [label = <(&lt;operator&gt;.fieldAccess,std::pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;)<SUB>120</SUB>> ]
-"1134" [label = <(&lt;operator&gt;.fieldAccess,clearkeySecureStop.id)<SUB>121</SUB>> ]
-"1116" [label = <(FIELD_IDENTIFIER,data,data)<SUB>118</SUB>> ]
-"1121" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>118</SUB>> ]
-"1125" [label = <(FIELD_IDENTIFIER,end,end)<SUB>118</SUB>> ]
-"1133" [label = <(FIELD_IDENTIFIER,pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;,pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;)<SUB>120</SUB>> ]
-"1136" [label = <(FIELD_IDENTIFIER,id,id)<SUB>121</SUB>> ]
-"1098" [label = <(METHOD,installSecureStop)<SUB>113</SUB>> ]
-"1138" [label = <(METHOD_RETURN,void)<SUB>113</SUB>> ]
-  "1102" -> "1108" 
-  "1105" -> "1116" 
-  "1112" -> "1129" 
-  "1126" -> "1138" 
-  "1106" -> "1110" 
-  "1109" -> "1105" 
-  "1113" -> "1121" 
-  "1118" -> "1125" 
-  "1122" -> "1112" 
-  "1127" -> "1133" 
-  "1130" -> "1126" 
-  "1108" -> "1106" 
-  "1110" -> "1109" 
-  "1114" -> "1117" 
-  "1117" -> "1113" 
-  "1119" -> "1118" 
-  "1123" -> "1122" 
-  "1129" -> "1127" 
-  "1131" -> "1136" 
-  "1134" -> "1130" 
-  "1116" -> "1114" 
-  "1121" -> "1119" 
-  "1125" -> "1123" 
-  "1133" -> "1131" 
-  "1136" -> "1134" 
-  "1098" -> "1102" 
+"1101" [label = <(lock,lock(mSecureStopLock))<SUB>114</SUB>> ]
+"1104" [label = <(&lt;operator&gt;.assignment,clearkeySecureStop.id = uint32ToVector(++mNextSecureStopId))<SUB>117</SUB>> ]
+"1111" [label = <(assign,clearkeySecureStop.data.assign(sessionId.begin(), sessionId.end()))<SUB>118</SUB>> ]
+"1125" [label = <(insert,mSecureStops.insert(std::pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;(\012            clearkeySecureStop.id, clearkeySecureStop)))<SUB>120</SUB>> ]
+"1105" [label = <(&lt;operator&gt;.fieldAccess,clearkeySecureStop.id)<SUB>117</SUB>> ]
+"1108" [label = <(uint32ToVector,uint32ToVector(++mNextSecureStopId))<SUB>117</SUB>> ]
+"1112" [label = <(&lt;operator&gt;.fieldAccess,clearkeySecureStop.data.assign)<SUB>118</SUB>> ]
+"1117" [label = <(begin,sessionId.begin())<SUB>118</SUB>> ]
+"1121" [label = <(end,sessionId.end())<SUB>118</SUB>> ]
+"1126" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.insert)<SUB>120</SUB>> ]
+"1129" [label = <(std::pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;,std::pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;(\012            clearkeySecureStop.id, clearkeySecureStop))<SUB>120</SUB>> ]
+"1107" [label = <(FIELD_IDENTIFIER,id,id)<SUB>117</SUB>> ]
+"1109" [label = <(&lt;operator&gt;.preIncrement,++mNextSecureStopId)<SUB>117</SUB>> ]
+"1113" [label = <(&lt;operator&gt;.fieldAccess,clearkeySecureStop.data)<SUB>118</SUB>> ]
+"1116" [label = <(FIELD_IDENTIFIER,assign,assign)<SUB>118</SUB>> ]
+"1118" [label = <(&lt;operator&gt;.fieldAccess,sessionId.begin)<SUB>118</SUB>> ]
+"1122" [label = <(&lt;operator&gt;.fieldAccess,sessionId.end)<SUB>118</SUB>> ]
+"1128" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>120</SUB>> ]
+"1130" [label = <(&lt;operator&gt;.fieldAccess,std::pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;)<SUB>120</SUB>> ]
+"1133" [label = <(&lt;operator&gt;.fieldAccess,clearkeySecureStop.id)<SUB>121</SUB>> ]
+"1115" [label = <(FIELD_IDENTIFIER,data,data)<SUB>118</SUB>> ]
+"1120" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>118</SUB>> ]
+"1124" [label = <(FIELD_IDENTIFIER,end,end)<SUB>118</SUB>> ]
+"1132" [label = <(FIELD_IDENTIFIER,pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;,pair&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt;)<SUB>120</SUB>> ]
+"1135" [label = <(FIELD_IDENTIFIER,id,id)<SUB>121</SUB>> ]
+"1097" [label = <(METHOD,installSecureStop)<SUB>113</SUB>> ]
+"1137" [label = <(METHOD_RETURN,void)<SUB>113</SUB>> ]
+  "1101" -> "1107" 
+  "1104" -> "1115" 
+  "1111" -> "1128" 
+  "1125" -> "1137" 
+  "1105" -> "1109" 
+  "1108" -> "1104" 
+  "1112" -> "1120" 
+  "1117" -> "1124" 
+  "1121" -> "1111" 
+  "1126" -> "1132" 
+  "1129" -> "1125" 
+  "1107" -> "1105" 
+  "1109" -> "1108" 
+  "1113" -> "1116" 
+  "1116" -> "1112" 
+  "1118" -> "1117" 
+  "1122" -> "1121" 
+  "1128" -> "1126" 
+  "1130" -> "1135" 
+  "1133" -> "1129" 
+  "1115" -> "1113" 
+  "1120" -> "1118" 
+  "1124" -> "1122" 
+  "1132" -> "1130" 
+  "1135" -> "1133" 
+  "1097" -> "1101" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/61-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/61-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/61-cfg.dot	2023-06-07 19:37:50.907374251 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/61-cfg.dot	2023-06-07 19:37:55.427374366 +0330
@@ -1,51 +1,51 @@
 digraph "openSession" {  
-"1143" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;createSession())<SUB>125</SUB>> ]
-"1154" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; sessionId = session-&gt;sessionId())<SUB>127</SUB>> ]
-"1167" [label = <(&lt;operator&gt;.assignment,status = setSecurityLevel(sessionId, SecurityLevel::SW_SECURE_CRYPTO))<SUB>129</SUB>> ]
-"1174" [label = <(_hidl_cb,_hidl_cb(status, toHidlVec(sessionId)))<SUB>130</SUB>> ]
-"1178" [label = <(&lt;operator&gt;.postIncrement,mOpenSessionOkCount++)<SUB>131</SUB>> ]
-"1180" [label = <(RETURN,return Void();,return Void();)<SUB>132</SUB>> ]
-"1144" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>125</SUB>> ]
-"1149" [label = <(createSession,mSessionLibrary-&gt;createSession())<SUB>125</SUB>> ]
-"1155" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sessionId)<SUB>127</SUB>> ]
-"1162" [label = <(sessionId,session-&gt;sessionId())<SUB>127</SUB>> ]
-"1169" [label = <(setSecurityLevel,setSecurityLevel(sessionId, SecurityLevel::SW_SECURE_CRYPTO))<SUB>129</SUB>> ]
-"1176" [label = <(toHidlVec,toHidlVec(sessionId))<SUB>130</SUB>> ]
-"1181" [label = <(Void,Void())<SUB>132</SUB>> ]
-"1145" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>125</SUB>> ]
-"1150" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;createSession)<SUB>125</SUB>> ]
-"1156" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>127</SUB>> ]
-"1163" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;sessionId)<SUB>127</SUB>> ]
-"1171" [label = <(&lt;operator&gt;.fieldAccess,SecurityLevel::SW_SECURE_CRYPTO)<SUB>129</SUB>> ]
-"1152" [label = <(FIELD_IDENTIFIER,createSession,createSession)<SUB>125</SUB>> ]
-"1157" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>127</SUB>> ]
-"1165" [label = <(FIELD_IDENTIFIER,sessionId,sessionId)<SUB>127</SUB>> ]
-"1173" [label = <(FIELD_IDENTIFIER,SW_SECURE_CRYPTO,SW_SECURE_CRYPTO)<SUB>129</SUB>> ]
-"1159" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>127</SUB>> ]
-"1140" [label = <(METHOD,openSession)<SUB>124</SUB>> ]
-"1182" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>124</SUB>> ]
-  "1143" -> "1159" 
-  "1154" -> "1173" 
-  "1167" -> "1176" 
-  "1174" -> "1178" 
-  "1178" -> "1181" 
-  "1180" -> "1182" 
-  "1144" -> "1152" 
-  "1149" -> "1143" 
-  "1155" -> "1165" 
-  "1162" -> "1154" 
-  "1169" -> "1167" 
-  "1176" -> "1174" 
-  "1181" -> "1180" 
-  "1145" -> "1144" 
-  "1150" -> "1149" 
+"1142" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;createSession())<SUB>125</SUB>> ]
+"1153" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; sessionId = session-&gt;sessionId())<SUB>127</SUB>> ]
+"1166" [label = <(&lt;operator&gt;.assignment,status = setSecurityLevel(sessionId, SecurityLevel::SW_SECURE_CRYPTO))<SUB>129</SUB>> ]
+"1173" [label = <(_hidl_cb,_hidl_cb(status, toHidlVec(sessionId)))<SUB>130</SUB>> ]
+"1177" [label = <(&lt;operator&gt;.postIncrement,mOpenSessionOkCount++)<SUB>131</SUB>> ]
+"1179" [label = <(RETURN,return Void();,return Void();)<SUB>132</SUB>> ]
+"1143" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>125</SUB>> ]
+"1148" [label = <(createSession,mSessionLibrary-&gt;createSession())<SUB>125</SUB>> ]
+"1154" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sessionId)<SUB>127</SUB>> ]
+"1161" [label = <(sessionId,session-&gt;sessionId())<SUB>127</SUB>> ]
+"1168" [label = <(setSecurityLevel,setSecurityLevel(sessionId, SecurityLevel::SW_SECURE_CRYPTO))<SUB>129</SUB>> ]
+"1175" [label = <(toHidlVec,toHidlVec(sessionId))<SUB>130</SUB>> ]
+"1180" [label = <(Void,Void())<SUB>132</SUB>> ]
+"1144" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>125</SUB>> ]
+"1149" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;createSession)<SUB>125</SUB>> ]
+"1155" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>127</SUB>> ]
+"1162" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;sessionId)<SUB>127</SUB>> ]
+"1170" [label = <(&lt;operator&gt;.fieldAccess,SecurityLevel::SW_SECURE_CRYPTO)<SUB>129</SUB>> ]
+"1151" [label = <(FIELD_IDENTIFIER,createSession,createSession)<SUB>125</SUB>> ]
+"1156" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>127</SUB>> ]
+"1164" [label = <(FIELD_IDENTIFIER,sessionId,sessionId)<SUB>127</SUB>> ]
+"1172" [label = <(FIELD_IDENTIFIER,SW_SECURE_CRYPTO,SW_SECURE_CRYPTO)<SUB>129</SUB>> ]
+"1158" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>127</SUB>> ]
+"1139" [label = <(METHOD,openSession)<SUB>124</SUB>> ]
+"1181" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>124</SUB>> ]
+  "1142" -> "1158" 
+  "1153" -> "1172" 
+  "1166" -> "1175" 
+  "1173" -> "1177" 
+  "1177" -> "1180" 
+  "1179" -> "1181" 
+  "1143" -> "1151" 
+  "1148" -> "1142" 
+  "1154" -> "1164" 
+  "1161" -> "1153" 
+  "1168" -> "1166" 
+  "1175" -> "1173" 
+  "1180" -> "1179" 
+  "1144" -> "1143" 
+  "1149" -> "1148" 
+  "1155" -> "1154" 
+  "1162" -> "1161" 
+  "1170" -> "1168" 
+  "1151" -> "1149" 
   "1156" -> "1155" 
-  "1163" -> "1162" 
-  "1171" -> "1169" 
-  "1152" -> "1150" 
-  "1157" -> "1156" 
-  "1165" -> "1163" 
-  "1173" -> "1171" 
-  "1159" -> "1157" 
-  "1140" -> "1145" 
+  "1164" -> "1162" 
+  "1172" -> "1170" 
+  "1158" -> "1156" 
+  "1139" -> "1144" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/62-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/62-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/62-cfg.dot	2023-06-07 19:37:50.907374251 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/62-cfg.dot	2023-06-07 19:37:55.427374366 +0330
@@ -1,66 +1,66 @@
 digraph "openSession_1_1" {  
-"1188" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;createSession())<SUB>137</SUB>> ]
-"1199" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; sessionId = session-&gt;sessionId())<SUB>139</SUB>> ]
-"1212" [label = <(&lt;operator&gt;.assignment,status = setSecurityLevel(sessionId, securityLevel))<SUB>141</SUB>> ]
-"1237" [label = <(_hidl_cb,_hidl_cb(status, toHidlVec(sessionId)))<SUB>148</SUB>> ]
-"1241" [label = <(RETURN,return Void();,return Void();)<SUB>149</SUB>> ]
-"1189" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>137</SUB>> ]
-"1194" [label = <(createSession,mSessionLibrary-&gt;createSession())<SUB>137</SUB>> ]
-"1200" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sessionId)<SUB>139</SUB>> ]
-"1207" [label = <(sessionId,session-&gt;sessionId())<SUB>139</SUB>> ]
-"1214" [label = <(setSecurityLevel,setSecurityLevel(sessionId, securityLevel))<SUB>141</SUB>> ]
-"1218" [label = <(&lt;operator&gt;.equals,status == Status::OK)<SUB>142</SUB>> ]
-"1239" [label = <(toHidlVec,toHidlVec(sessionId))<SUB>148</SUB>> ]
-"1242" [label = <(Void,Void())<SUB>149</SUB>> ]
-"1190" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>137</SUB>> ]
-"1195" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;createSession)<SUB>137</SUB>> ]
-"1201" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>139</SUB>> ]
-"1208" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;sessionId)<SUB>139</SUB>> ]
-"1220" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>142</SUB>> ]
-"1224" [label = <(&lt;operator&gt;.postIncrement,mOpenSessionOkCount++)<SUB>143</SUB>> ]
-"1197" [label = <(FIELD_IDENTIFIER,createSession,createSession)<SUB>137</SUB>> ]
-"1202" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>139</SUB>> ]
-"1210" [label = <(FIELD_IDENTIFIER,sessionId,sessionId)<SUB>139</SUB>> ]
-"1222" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>142</SUB>> ]
-"1228" [label = <(destroySession,mSessionLibrary-&gt;destroySession(session))<SUB>145</SUB>> ]
-"1233" [label = <(clear,sessionId.clear())<SUB>146</SUB>> ]
-"1204" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>139</SUB>> ]
-"1229" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;destroySession)<SUB>145</SUB>> ]
-"1234" [label = <(&lt;operator&gt;.fieldAccess,sessionId.clear)<SUB>146</SUB>> ]
-"1231" [label = <(FIELD_IDENTIFIER,destroySession,destroySession)<SUB>145</SUB>> ]
-"1236" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>146</SUB>> ]
-"1184" [label = <(METHOD,openSession_1_1)<SUB>135</SUB>> ]
-"1243" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>135</SUB>> ]
-  "1188" -> "1204" 
-  "1199" -> "1214" 
-  "1212" -> "1222" 
-  "1237" -> "1242" 
-  "1241" -> "1243" 
-  "1189" -> "1197" 
-  "1194" -> "1188" 
-  "1200" -> "1210" 
-  "1207" -> "1199" 
-  "1214" -> "1212" 
-  "1218" -> "1224" 
-  "1218" -> "1231" 
-  "1239" -> "1237" 
-  "1242" -> "1241" 
-  "1190" -> "1189" 
-  "1195" -> "1194" 
+"1187" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;createSession())<SUB>137</SUB>> ]
+"1198" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; sessionId = session-&gt;sessionId())<SUB>139</SUB>> ]
+"1211" [label = <(&lt;operator&gt;.assignment,status = setSecurityLevel(sessionId, securityLevel))<SUB>141</SUB>> ]
+"1236" [label = <(_hidl_cb,_hidl_cb(status, toHidlVec(sessionId)))<SUB>148</SUB>> ]
+"1240" [label = <(RETURN,return Void();,return Void();)<SUB>149</SUB>> ]
+"1188" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>137</SUB>> ]
+"1193" [label = <(createSession,mSessionLibrary-&gt;createSession())<SUB>137</SUB>> ]
+"1199" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sessionId)<SUB>139</SUB>> ]
+"1206" [label = <(sessionId,session-&gt;sessionId())<SUB>139</SUB>> ]
+"1213" [label = <(setSecurityLevel,setSecurityLevel(sessionId, securityLevel))<SUB>141</SUB>> ]
+"1217" [label = <(&lt;operator&gt;.equals,status == Status::OK)<SUB>142</SUB>> ]
+"1238" [label = <(toHidlVec,toHidlVec(sessionId))<SUB>148</SUB>> ]
+"1241" [label = <(Void,Void())<SUB>149</SUB>> ]
+"1189" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>137</SUB>> ]
+"1194" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;createSession)<SUB>137</SUB>> ]
+"1200" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>139</SUB>> ]
+"1207" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;sessionId)<SUB>139</SUB>> ]
+"1219" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>142</SUB>> ]
+"1223" [label = <(&lt;operator&gt;.postIncrement,mOpenSessionOkCount++)<SUB>143</SUB>> ]
+"1196" [label = <(FIELD_IDENTIFIER,createSession,createSession)<SUB>137</SUB>> ]
+"1201" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>139</SUB>> ]
+"1209" [label = <(FIELD_IDENTIFIER,sessionId,sessionId)<SUB>139</SUB>> ]
+"1221" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>142</SUB>> ]
+"1227" [label = <(destroySession,mSessionLibrary-&gt;destroySession(session))<SUB>145</SUB>> ]
+"1232" [label = <(clear,sessionId.clear())<SUB>146</SUB>> ]
+"1203" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>139</SUB>> ]
+"1228" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;destroySession)<SUB>145</SUB>> ]
+"1233" [label = <(&lt;operator&gt;.fieldAccess,sessionId.clear)<SUB>146</SUB>> ]
+"1230" [label = <(FIELD_IDENTIFIER,destroySession,destroySession)<SUB>145</SUB>> ]
+"1235" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>146</SUB>> ]
+"1183" [label = <(METHOD,openSession_1_1)<SUB>135</SUB>> ]
+"1242" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>135</SUB>> ]
+  "1187" -> "1203" 
+  "1198" -> "1213" 
+  "1211" -> "1221" 
+  "1236" -> "1241" 
+  "1240" -> "1242" 
+  "1188" -> "1196" 
+  "1193" -> "1187" 
+  "1199" -> "1209" 
+  "1206" -> "1198" 
+  "1213" -> "1211" 
+  "1217" -> "1223" 
+  "1217" -> "1230" 
+  "1238" -> "1236" 
+  "1241" -> "1240" 
+  "1189" -> "1188" 
+  "1194" -> "1193" 
+  "1200" -> "1199" 
+  "1207" -> "1206" 
+  "1219" -> "1217" 
+  "1223" -> "1238" 
+  "1196" -> "1194" 
   "1201" -> "1200" 
-  "1208" -> "1207" 
-  "1220" -> "1218" 
-  "1224" -> "1239" 
-  "1197" -> "1195" 
-  "1202" -> "1201" 
-  "1210" -> "1208" 
-  "1222" -> "1220" 
-  "1228" -> "1236" 
-  "1233" -> "1239" 
-  "1204" -> "1202" 
-  "1229" -> "1228" 
-  "1234" -> "1233" 
-  "1231" -> "1229" 
-  "1236" -> "1234" 
-  "1184" -> "1190" 
+  "1209" -> "1207" 
+  "1221" -> "1219" 
+  "1227" -> "1235" 
+  "1232" -> "1238" 
+  "1203" -> "1201" 
+  "1228" -> "1227" 
+  "1233" -> "1232" 
+  "1230" -> "1228" 
+  "1235" -> "1233" 
+  "1183" -> "1189" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/63-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/63-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/63-cfg.dot	2023-06-07 19:37:50.927374258 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/63-cfg.dot	2023-06-07 19:37:55.427374366 +0330
@@ -1,84 +1,84 @@
 digraph "closeSession" {  
-"1260" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;findSession(toVector(sessionId)))<SUB>157</SUB>> ]
-"1305" [label = <(&lt;operator&gt;.postIncrement,mCloseSessionNotOpenedCount++)<SUB>167</SUB>> ]
-"1307" [label = <(RETURN,return Status::ERROR_DRM_SESSION_NOT_OPENED;,return Status::ERROR_DRM_SESSION_NOT_OPENED;)<SUB>168</SUB>> ]
-"1249" [label = <(&lt;operator&gt;.equals,sessionId.size() == 0)<SUB>153</SUB>> ]
-"1261" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>157</SUB>> ]
-"1266" [label = <(findSession,mSessionLibrary-&gt;findSession(toVector(sessionId)))<SUB>157</SUB>> ]
-"1273" [label = <(get,session.get())<SUB>158</SUB>> ]
-"1308" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>168</SUB>> ]
-"1250" [label = <(size,sessionId.size())<SUB>153</SUB>> ]
-"1256" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>154</SUB>> ]
-"1262" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>157</SUB>> ]
-"1267" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>157</SUB>> ]
-"1270" [label = <(toVector,toVector(sessionId))<SUB>157</SUB>> ]
-"1274" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>158</SUB>> ]
-"1278" [label = <(destroySession,mSessionLibrary-&gt;destroySession(session))<SUB>159</SUB>> ]
-"1299" [label = <(&lt;operator&gt;.postIncrement,mCloseSessionOkCount++)<SUB>164</SUB>> ]
-"1301" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>165</SUB>> ]
-"1310" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>168</SUB>> ]
-"1251" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>153</SUB>> ]
-"1257" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>154</SUB>> ]
-"1269" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>157</SUB>> ]
-"1276" [label = <(FIELD_IDENTIFIER,get,get)<SUB>158</SUB>> ]
-"1279" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;destroySession)<SUB>159</SUB>> ]
-"1284" [label = <(&lt;operator&gt;.notEquals,session-&gt;getMockError() != Status_V1_2::OK)<SUB>160</SUB>> ]
-"1302" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>165</SUB>> ]
-"1253" [label = <(FIELD_IDENTIFIER,size,size)<SUB>153</SUB>> ]
-"1259" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>154</SUB>> ]
-"1281" [label = <(FIELD_IDENTIFIER,destroySession,destroySession)<SUB>159</SUB>> ]
-"1285" [label = <(getMockError,session-&gt;getMockError())<SUB>160</SUB>> ]
-"1289" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>160</SUB>> ]
-"1293" [label = <(sendSessionLostState,sendSessionLostState(sessionId))<SUB>161</SUB>> ]
-"1295" [label = <(RETURN,return Status::ERROR_DRM_INVALID_STATE;,return Status::ERROR_DRM_INVALID_STATE;)<SUB>162</SUB>> ]
-"1304" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>165</SUB>> ]
-"1286" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;getMockError)<SUB>160</SUB>> ]
-"1291" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>160</SUB>> ]
-"1296" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_INVALID_STATE)<SUB>162</SUB>> ]
-"1288" [label = <(FIELD_IDENTIFIER,getMockError,getMockError)<SUB>160</SUB>> ]
-"1298" [label = <(FIELD_IDENTIFIER,ERROR_DRM_INVALID_STATE,ERROR_DRM_INVALID_STATE)<SUB>162</SUB>> ]
-"1245" [label = <(METHOD,closeSession)<SUB>152</SUB>> ]
-"1311" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>152</SUB>> ]
-  "1260" -> "1276" 
-  "1305" -> "1310" 
-  "1307" -> "1311" 
-  "1249" -> "1259" 
-  "1249" -> "1262" 
-  "1261" -> "1269" 
-  "1266" -> "1260" 
-  "1273" -> "1281" 
-  "1273" -> "1305" 
-  "1308" -> "1307" 
+"1259" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;findSession(toVector(sessionId)))<SUB>157</SUB>> ]
+"1304" [label = <(&lt;operator&gt;.postIncrement,mCloseSessionNotOpenedCount++)<SUB>167</SUB>> ]
+"1306" [label = <(RETURN,return Status::ERROR_DRM_SESSION_NOT_OPENED;,return Status::ERROR_DRM_SESSION_NOT_OPENED;)<SUB>168</SUB>> ]
+"1248" [label = <(&lt;operator&gt;.equals,sessionId.size() == 0)<SUB>153</SUB>> ]
+"1260" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>157</SUB>> ]
+"1265" [label = <(findSession,mSessionLibrary-&gt;findSession(toVector(sessionId)))<SUB>157</SUB>> ]
+"1272" [label = <(get,session.get())<SUB>158</SUB>> ]
+"1307" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>168</SUB>> ]
+"1249" [label = <(size,sessionId.size())<SUB>153</SUB>> ]
+"1255" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>154</SUB>> ]
+"1261" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>157</SUB>> ]
+"1266" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>157</SUB>> ]
+"1269" [label = <(toVector,toVector(sessionId))<SUB>157</SUB>> ]
+"1273" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>158</SUB>> ]
+"1277" [label = <(destroySession,mSessionLibrary-&gt;destroySession(session))<SUB>159</SUB>> ]
+"1298" [label = <(&lt;operator&gt;.postIncrement,mCloseSessionOkCount++)<SUB>164</SUB>> ]
+"1300" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>165</SUB>> ]
+"1309" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>168</SUB>> ]
+"1250" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>153</SUB>> ]
+"1256" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>154</SUB>> ]
+"1268" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>157</SUB>> ]
+"1275" [label = <(FIELD_IDENTIFIER,get,get)<SUB>158</SUB>> ]
+"1278" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;destroySession)<SUB>159</SUB>> ]
+"1283" [label = <(&lt;operator&gt;.notEquals,session-&gt;getMockError() != Status_V1_2::OK)<SUB>160</SUB>> ]
+"1301" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>165</SUB>> ]
+"1252" [label = <(FIELD_IDENTIFIER,size,size)<SUB>153</SUB>> ]
+"1258" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>154</SUB>> ]
+"1280" [label = <(FIELD_IDENTIFIER,destroySession,destroySession)<SUB>159</SUB>> ]
+"1284" [label = <(getMockError,session-&gt;getMockError())<SUB>160</SUB>> ]
+"1288" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>160</SUB>> ]
+"1292" [label = <(sendSessionLostState,sendSessionLostState(sessionId))<SUB>161</SUB>> ]
+"1294" [label = <(RETURN,return Status::ERROR_DRM_INVALID_STATE;,return Status::ERROR_DRM_INVALID_STATE;)<SUB>162</SUB>> ]
+"1303" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>165</SUB>> ]
+"1285" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;getMockError)<SUB>160</SUB>> ]
+"1290" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>160</SUB>> ]
+"1295" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_INVALID_STATE)<SUB>162</SUB>> ]
+"1287" [label = <(FIELD_IDENTIFIER,getMockError,getMockError)<SUB>160</SUB>> ]
+"1297" [label = <(FIELD_IDENTIFIER,ERROR_DRM_INVALID_STATE,ERROR_DRM_INVALID_STATE)<SUB>162</SUB>> ]
+"1244" [label = <(METHOD,closeSession)<SUB>152</SUB>> ]
+"1310" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>152</SUB>> ]
+  "1259" -> "1275" 
+  "1304" -> "1309" 
+  "1306" -> "1310" 
+  "1248" -> "1258" 
+  "1248" -> "1261" 
+  "1260" -> "1268" 
+  "1265" -> "1259" 
+  "1272" -> "1280" 
+  "1272" -> "1304" 
+  "1307" -> "1306" 
+  "1249" -> "1248" 
+  "1255" -> "1310" 
+  "1261" -> "1260" 
+  "1266" -> "1269" 
+  "1269" -> "1265" 
+  "1273" -> "1272" 
+  "1277" -> "1287" 
+  "1298" -> "1303" 
+  "1300" -> "1310" 
+  "1309" -> "1307" 
   "1250" -> "1249" 
-  "1256" -> "1311" 
-  "1262" -> "1261" 
-  "1267" -> "1270" 
-  "1270" -> "1266" 
-  "1274" -> "1273" 
-  "1278" -> "1288" 
-  "1299" -> "1304" 
-  "1301" -> "1311" 
-  "1310" -> "1308" 
-  "1251" -> "1250" 
-  "1257" -> "1256" 
-  "1269" -> "1267" 
-  "1276" -> "1274" 
-  "1279" -> "1278" 
-  "1284" -> "1293" 
-  "1284" -> "1299" 
-  "1302" -> "1301" 
-  "1253" -> "1251" 
-  "1259" -> "1257" 
-  "1281" -> "1279" 
-  "1285" -> "1291" 
-  "1289" -> "1284" 
-  "1293" -> "1298" 
-  "1295" -> "1311" 
-  "1304" -> "1302" 
-  "1286" -> "1285" 
-  "1291" -> "1289" 
-  "1296" -> "1295" 
-  "1288" -> "1286" 
-  "1298" -> "1296" 
-  "1245" -> "1253" 
+  "1256" -> "1255" 
+  "1268" -> "1266" 
+  "1275" -> "1273" 
+  "1278" -> "1277" 
+  "1283" -> "1292" 
+  "1283" -> "1298" 
+  "1301" -> "1300" 
+  "1252" -> "1250" 
+  "1258" -> "1256" 
+  "1280" -> "1278" 
+  "1284" -> "1290" 
+  "1288" -> "1283" 
+  "1292" -> "1297" 
+  "1294" -> "1310" 
+  "1303" -> "1301" 
+  "1285" -> "1284" 
+  "1290" -> "1288" 
+  "1295" -> "1294" 
+  "1287" -> "1285" 
+  "1297" -> "1295" 
+  "1244" -> "1252" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/64-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/64-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/64-cfg.dot	2023-06-07 19:37:50.927374258 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/64-cfg.dot	2023-06-07 19:37:55.447374366 +0330
@@ -1,349 +1,349 @@
 digraph "getKeyRequestCommon" {  
-"1323" [label = <(UNUSED,UNUSED(optionalParameters))<SUB>179</SUB>> ]
-"1343" [label = <(&lt;operator&gt;.assignment,*defaultUrl = &quot;&quot;)<SUB>189</SUB>> ]
-"1347" [label = <(&lt;operator&gt;.assignment,*keyRequestType = KeyRequestType_V1_1::UNKNOWN)<SUB>190</SUB>> ]
-"1353" [label = <(&lt;operator&gt;.assignment,*request = std::vector&lt;uint8_t&gt;())<SUB>191</SUB>> ]
-"1391" [label = <(&lt;operator&gt;.assignment,scopeId = toVector(scope))<SUB>200</SUB>> ]
-"1395" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>201</SUB>> ]
-"1470" [label = <(&lt;operator&gt;.assignment,status = static_cast&lt;Status_V1_2&gt;(\012            session-&gt;getKeyRequest(initData, mimeType, keyType, request)))<SUB>214</SUB>> ]
-"1600" [label = <(RETURN,return status;,return status;)<SUB>240</SUB>> ]
-"1326" [label = <(&lt;operator&gt;.logicalAnd,keyType == KeyType::OFFLINE &amp;&amp; 0 == initData.size())<SUB>185</SUB>> ]
-"1344" [label = <(&lt;operator&gt;.indirection,*defaultUrl)<SUB>189</SUB>> ]
-"1348" [label = <(&lt;operator&gt;.indirection,*keyRequestType)<SUB>190</SUB>> ]
-"1350" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::UNKNOWN)<SUB>190</SUB>> ]
-"1354" [label = <(&lt;operator&gt;.indirection,*request)<SUB>191</SUB>> ]
-"1356" [label = <(std::vector&lt;uint8_t&gt;,std::vector&lt;uint8_t&gt;())<SUB>191</SUB>> ]
-"1361" [label = <(&lt;operator&gt;.logicalOr,scope.size() == 0 ||\012 (keyType != KeyType::STREAMING &amp;&amp;\012            keyType != KeyType::OFFLINE &amp;&amp;\012            keyType != KeyType::RELEASE))<SUB>193</SUB>> ]
-"1393" [label = <(toVector,toVector(scope))<SUB>200</SUB>> ]
-"1396" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>201</SUB>> ]
-"1401" [label = <(&lt;operator&gt;.logicalOr,keyType == KeyType::STREAMING || keyType == KeyType::OFFLINE)<SUB>202</SUB>> ]
-"1472" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status_V1_2&gt;(\012            session-&gt;getKeyRequest(initData, mimeType, keyType, request)))<SUB>214</SUB>> ]
-"1483" [label = <(&lt;operator&gt;.equals,keyType == KeyType::RELEASE)<SUB>217</SUB>> ]
-"1327" [label = <(&lt;operator&gt;.equals,keyType == KeyType::OFFLINE)<SUB>185</SUB>> ]
-"1332" [label = <(&lt;operator&gt;.equals,0 == initData.size())<SUB>185</SUB>> ]
-"1339" [label = <(RETURN,return Status_V1_2::ERROR_DRM_CANNOT_HANDLE;,return Status_V1_2::ERROR_DRM_CANNOT_HANDLE;)<SUB>186</SUB>> ]
-"1352" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>190</SUB>> ]
-"1357" [label = <(&lt;operator&gt;.fieldAccess,std::vector&lt;uint8_t&gt;)<SUB>191</SUB>> ]
-"1362" [label = <(&lt;operator&gt;.equals,scope.size() == 0)<SUB>193</SUB>> ]
-"1368" [label = <(&lt;operator&gt;.logicalAnd,keyType != KeyType::STREAMING &amp;&amp;\012            keyType != KeyType::OFFLINE &amp;&amp;\012            keyType != KeyType::RELEASE)<SUB>194</SUB>> ]
-"1386" [label = <(RETURN,return Status_V1_2::BAD_VALUE;,return Status_V1_2::BAD_VALUE;)<SUB>197</SUB>> ]
-"1402" [label = <(&lt;operator&gt;.equals,keyType == KeyType::STREAMING)<SUB>202</SUB>> ]
-"1407" [label = <(&lt;operator&gt;.equals,keyType == KeyType::OFFLINE)<SUB>202</SUB>> ]
-"1413" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sessionId(scopeId.begin(), scopeId.end()))<SUB>203</SUB>> ]
-"1428" [label = <(&lt;operator&gt;.assignment,session = mSessionLibrary-&gt;findSession(sessionId))<SUB>204</SUB>> ]
-"1463" [label = <(&lt;operator&gt;.assignment,*keyRequestType = KeyRequestType_V1_1::INITIAL)<SUB>211</SUB>> ]
-"1473" [label = <(UNKNOWN,Status_V1_2,Status_V1_2)<SUB>214</SUB>> ]
-"1474" [label = <(getKeyRequest,session-&gt;getKeyRequest(initData, mimeType, keyType, request))<SUB>215</SUB>> ]
-"1485" [label = <(&lt;operator&gt;.fieldAccess,KeyType::RELEASE)<SUB>217</SUB>> ]
-"1489" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keySetId(scopeId.begin(), scopeId.end()))<SUB>218</SUB>> ]
-"1505" [label = <(requestString,requestString(request-&gt;begin(), request-&gt;end()))<SUB>219</SUB>> ]
-"1594" [label = <(&lt;operator&gt;.assignment,*keyRequestType = KeyRequestType_V1_1::RELEASE)<SUB>238</SUB>> ]
-"1329" [label = <(&lt;operator&gt;.fieldAccess,KeyType::OFFLINE)<SUB>185</SUB>> ]
-"1334" [label = <(size,initData.size())<SUB>185</SUB>> ]
-"1340" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>186</SUB>> ]
-"1359" [label = <(FIELD_IDENTIFIER,vector&lt;uint8_t&gt;,vector&lt;uint8_t&gt;)<SUB>191</SUB>> ]
-"1363" [label = <(size,scope.size())<SUB>193</SUB>> ]
-"1369" [label = <(&lt;operator&gt;.logicalAnd,keyType != KeyType::STREAMING &amp;&amp;\012            keyType != KeyType::OFFLINE)<SUB>194</SUB>> ]
-"1380" [label = <(&lt;operator&gt;.notEquals,keyType != KeyType::RELEASE)<SUB>196</SUB>> ]
-"1387" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::BAD_VALUE)<SUB>197</SUB>> ]
-"1404" [label = <(&lt;operator&gt;.fieldAccess,KeyType::STREAMING)<SUB>202</SUB>> ]
-"1409" [label = <(&lt;operator&gt;.fieldAccess,KeyType::OFFLINE)<SUB>202</SUB>> ]
-"1414" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>203</SUB>> ]
-"1419" [label = <(sessionId,sessionId(scopeId.begin(), scopeId.end()))<SUB>203</SUB>> ]
-"1430" [label = <(findSession,mSessionLibrary-&gt;findSession(sessionId))<SUB>204</SUB>> ]
-"1436" [label = <(&lt;operator&gt;.logicalNot,!session.get())<SUB>205</SUB>> ]
-"1464" [label = <(&lt;operator&gt;.indirection,*keyRequestType)<SUB>211</SUB>> ]
-"1466" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::INITIAL)<SUB>211</SUB>> ]
-"1475" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;getKeyRequest)<SUB>215</SUB>> ]
-"1487" [label = <(FIELD_IDENTIFIER,RELEASE,RELEASE)<SUB>217</SUB>> ]
-"1490" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>218</SUB>> ]
-"1495" [label = <(keySetId,keySetId(scopeId.begin(), scopeId.end()))<SUB>218</SUB>> ]
-"1506" [label = <(begin,request-&gt;begin())<SUB>219</SUB>> ]
-"1510" [label = <(end,request-&gt;end())<SUB>219</SUB>> ]
-"1515" [label = <(&lt;operator&gt;.notEquals,requestString.find(kOfflineLicense) != std::string::npos)<SUB>220</SUB>> ]
-"1595" [label = <(&lt;operator&gt;.indirection,*keyRequestType)<SUB>238</SUB>> ]
-"1597" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::RELEASE)<SUB>238</SUB>> ]
-"1331" [label = <(FIELD_IDENTIFIER,OFFLINE,OFFLINE)<SUB>185</SUB>> ]
-"1335" [label = <(&lt;operator&gt;.fieldAccess,initData.size)<SUB>185</SUB>> ]
-"1342" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>186</SUB>> ]
-"1364" [label = <(&lt;operator&gt;.fieldAccess,scope.size)<SUB>193</SUB>> ]
-"1370" [label = <(&lt;operator&gt;.notEquals,keyType != KeyType::STREAMING)<SUB>194</SUB>> ]
-"1375" [label = <(&lt;operator&gt;.notEquals,keyType != KeyType::OFFLINE)<SUB>195</SUB>> ]
-"1382" [label = <(&lt;operator&gt;.fieldAccess,KeyType::RELEASE)<SUB>196</SUB>> ]
-"1389" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>197</SUB>> ]
-"1406" [label = <(FIELD_IDENTIFIER,STREAMING,STREAMING)<SUB>202</SUB>> ]
-"1411" [label = <(FIELD_IDENTIFIER,OFFLINE,OFFLINE)<SUB>202</SUB>> ]
-"1415" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>203</SUB>> ]
-"1420" [label = <(begin,scopeId.begin())<SUB>203</SUB>> ]
-"1424" [label = <(end,scopeId.end())<SUB>203</SUB>> ]
-"1431" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>204</SUB>> ]
-"1437" [label = <(get,session.get())<SUB>205</SUB>> ]
-"1442" [label = <(RETURN,return Status_V1_2::ERROR_DRM_SESSION_NOT_OPENED;,return Status_V1_2::ERROR_DRM_SESSION_NOT_OPENED;)<SUB>206</SUB>> ]
-"1468" [label = <(FIELD_IDENTIFIER,INITIAL,INITIAL)<SUB>211</SUB>> ]
-"1477" [label = <(FIELD_IDENTIFIER,getKeyRequest,getKeyRequest)<SUB>215</SUB>> ]
-"1491" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>218</SUB>> ]
-"1496" [label = <(begin,scopeId.begin())<SUB>218</SUB>> ]
-"1500" [label = <(end,scopeId.end())<SUB>218</SUB>> ]
-"1507" [label = <(&lt;operator&gt;.indirectFieldAccess,request-&gt;begin)<SUB>219</SUB>> ]
-"1511" [label = <(&lt;operator&gt;.indirectFieldAccess,request-&gt;end)<SUB>219</SUB>> ]
-"1516" [label = <(find,requestString.find(kOfflineLicense))<SUB>220</SUB>> ]
-"1521" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>220</SUB>> ]
-"1529" [label = <(keySetIdString,keySetIdString(keySetId.begin(), keySetId.end()))<SUB>222</SUB>> ]
-"1599" [label = <(FIELD_IDENTIFIER,RELEASE,RELEASE)<SUB>238</SUB>> ]
-"1337" [label = <(FIELD_IDENTIFIER,size,size)<SUB>185</SUB>> ]
-"1366" [label = <(FIELD_IDENTIFIER,size,size)<SUB>193</SUB>> ]
-"1372" [label = <(&lt;operator&gt;.fieldAccess,KeyType::STREAMING)<SUB>194</SUB>> ]
-"1377" [label = <(&lt;operator&gt;.fieldAccess,KeyType::OFFLINE)<SUB>195</SUB>> ]
-"1384" [label = <(FIELD_IDENTIFIER,RELEASE,RELEASE)<SUB>196</SUB>> ]
-"1417" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>203</SUB>> ]
-"1421" [label = <(&lt;operator&gt;.fieldAccess,scopeId.begin)<SUB>203</SUB>> ]
-"1425" [label = <(&lt;operator&gt;.fieldAccess,scopeId.end)<SUB>203</SUB>> ]
-"1433" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>204</SUB>> ]
-"1438" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>205</SUB>> ]
-"1443" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_SESSION_NOT_OPENED)<SUB>206</SUB>> ]
-"1493" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>218</SUB>> ]
-"1497" [label = <(&lt;operator&gt;.fieldAccess,scopeId.begin)<SUB>218</SUB>> ]
-"1501" [label = <(&lt;operator&gt;.fieldAccess,scopeId.end)<SUB>218</SUB>> ]
-"1509" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>219</SUB>> ]
-"1513" [label = <(FIELD_IDENTIFIER,end,end)<SUB>219</SUB>> ]
-"1517" [label = <(&lt;operator&gt;.fieldAccess,requestString.find)<SUB>220</SUB>> ]
-"1522" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>220</SUB>> ]
-"1525" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>220</SUB>> ]
-"1530" [label = <(begin,keySetId.begin())<SUB>222</SUB>> ]
-"1534" [label = <(end,keySetId.end())<SUB>222</SUB>> ]
-"1539" [label = <(&lt;operator&gt;.logicalNot,!mFileHandle.StoreLicense(keySetIdString,\012 DeviceFiles::kLicenseStateReleasing,\012                    emptyResponse))<SUB>223</SUB>> ]
-"1557" [label = <(&lt;operator&gt;.equals,mReleaseKeysMap.find(keySetIdString) == mReleaseKeysMap.end())<SUB>229</SUB>> ]
-"1592" [label = <(ALOGE,ALOGE(&quot;Offline license not found, nothing to release&quot;))<SUB>236</SUB>> ]
-"1374" [label = <(FIELD_IDENTIFIER,STREAMING,STREAMING)<SUB>194</SUB>> ]
-"1379" [label = <(FIELD_IDENTIFIER,OFFLINE,OFFLINE)<SUB>195</SUB>> ]
-"1423" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>203</SUB>> ]
-"1427" [label = <(FIELD_IDENTIFIER,end,end)<SUB>203</SUB>> ]
-"1440" [label = <(FIELD_IDENTIFIER,get,get)<SUB>205</SUB>> ]
-"1445" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>206</SUB>> ]
-"1449" [label = <(&lt;operator&gt;.notEquals,session-&gt;getMockError() != Status_V1_2::OK)<SUB>207</SUB>> ]
-"1499" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>218</SUB>> ]
-"1503" [label = <(FIELD_IDENTIFIER,end,end)<SUB>218</SUB>> ]
-"1519" [label = <(FIELD_IDENTIFIER,find,find)<SUB>220</SUB>> ]
-"1531" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>222</SUB>> ]
-"1535" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>222</SUB>> ]
-"1540" [label = <(StoreLicense,mFileHandle.StoreLicense(keySetIdString,\012 DeviceFiles::kLicenseStateReleasing,\012                    emptyResponse))<SUB>223</SUB>> ]
-"1550" [label = <(ALOGE,ALOGE(&quot;Problem releasing offline license&quot;))<SUB>226</SUB>> ]
-"1552" [label = <(RETURN,return Status_V1_2::ERROR_DRM_UNKNOWN;,return Status_V1_2::ERROR_DRM_UNKNOWN;)<SUB>227</SUB>> ]
-"1558" [label = <(find,mReleaseKeysMap.find(keySetIdString))<SUB>229</SUB>> ]
-"1563" [label = <(end,mReleaseKeysMap.end())<SUB>229</SUB>> ]
-"1568" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;createSession())<SUB>230</SUB>> ]
-"1578" [label = <(&lt;operator&gt;.assignment,mReleaseKeysMap[keySetIdString] = session-&gt;sessionId())<SUB>231</SUB>> ]
-"1450" [label = <(getMockError,session-&gt;getMockError())<SUB>207</SUB>> ]
-"1454" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>207</SUB>> ]
-"1458" [label = <(RETURN,return session-&gt;getMockError();,return session-&gt;getMockError();)<SUB>208</SUB>> ]
-"1533" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>222</SUB>> ]
-"1537" [label = <(FIELD_IDENTIFIER,end,end)<SUB>222</SUB>> ]
-"1541" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.StoreLicense)<SUB>223</SUB>> ]
-"1545" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateReleasing)<SUB>224</SUB>> ]
-"1553" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_UNKNOWN)<SUB>227</SUB>> ]
-"1559" [label = <(&lt;operator&gt;.fieldAccess,mReleaseKeysMap.find)<SUB>229</SUB>> ]
-"1564" [label = <(&lt;operator&gt;.fieldAccess,mReleaseKeysMap.end)<SUB>229</SUB>> ]
-"1569" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>230</SUB>> ]
-"1574" [label = <(createSession,mSessionLibrary-&gt;createSession())<SUB>230</SUB>> ]
-"1579" [label = <(&lt;operator&gt;.indirectIndexAccess,mReleaseKeysMap[keySetIdString])<SUB>231</SUB>> ]
-"1582" [label = <(sessionId,session-&gt;sessionId())<SUB>231</SUB>> ]
-"1588" [label = <(ALOGI,ALOGI(&quot;key is in use, ignore release request&quot;))<SUB>233</SUB>> ]
-"1451" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;getMockError)<SUB>207</SUB>> ]
-"1456" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>207</SUB>> ]
-"1459" [label = <(getMockError,session-&gt;getMockError())<SUB>208</SUB>> ]
-"1543" [label = <(FIELD_IDENTIFIER,StoreLicense,StoreLicense)<SUB>223</SUB>> ]
-"1547" [label = <(FIELD_IDENTIFIER,kLicenseStateReleasing,kLicenseStateReleasing)<SUB>224</SUB>> ]
-"1555" [label = <(FIELD_IDENTIFIER,ERROR_DRM_UNKNOWN,ERROR_DRM_UNKNOWN)<SUB>227</SUB>> ]
-"1561" [label = <(FIELD_IDENTIFIER,find,find)<SUB>229</SUB>> ]
-"1566" [label = <(FIELD_IDENTIFIER,end,end)<SUB>229</SUB>> ]
-"1570" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>230</SUB>> ]
-"1575" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;createSession)<SUB>230</SUB>> ]
-"1583" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;sessionId)<SUB>231</SUB>> ]
-"1453" [label = <(FIELD_IDENTIFIER,getMockError,getMockError)<SUB>207</SUB>> ]
-"1460" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;getMockError)<SUB>208</SUB>> ]
-"1577" [label = <(FIELD_IDENTIFIER,createSession,createSession)<SUB>230</SUB>> ]
-"1585" [label = <(FIELD_IDENTIFIER,sessionId,sessionId)<SUB>231</SUB>> ]
-"1462" [label = <(FIELD_IDENTIFIER,getMockError,getMockError)<SUB>208</SUB>> ]
-"1313" [label = <(METHOD,getKeyRequestCommon)<SUB>171</SUB>> ]
-"1602" [label = <(METHOD_RETURN,Status_V1_2)<SUB>171</SUB>> ]
-  "1323" -> "1331" 
-  "1343" -> "1348" 
-  "1347" -> "1354" 
-  "1353" -> "1366" 
-  "1391" -> "1396" 
-  "1395" -> "1406" 
-  "1470" -> "1487" 
-  "1600" -> "1602" 
-  "1326" -> "1342" 
-  "1326" -> "1344" 
-  "1344" -> "1343" 
-  "1348" -> "1352" 
-  "1350" -> "1347" 
-  "1354" -> "1359" 
-  "1356" -> "1353" 
-  "1361" -> "1389" 
-  "1361" -> "1393" 
-  "1393" -> "1391" 
-  "1396" -> "1395" 
-  "1401" -> "1417" 
-  "1401" -> "1473" 
-  "1472" -> "1470" 
-  "1483" -> "1493" 
-  "1483" -> "1600" 
-  "1327" -> "1326" 
-  "1327" -> "1337" 
-  "1332" -> "1326" 
-  "1339" -> "1602" 
-  "1352" -> "1350" 
-  "1357" -> "1356" 
+"1322" [label = <(UNUSED,UNUSED(optionalParameters))<SUB>179</SUB>> ]
+"1342" [label = <(&lt;operator&gt;.assignment,*defaultUrl = &quot;&quot;)<SUB>189</SUB>> ]
+"1346" [label = <(&lt;operator&gt;.assignment,*keyRequestType = KeyRequestType_V1_1::UNKNOWN)<SUB>190</SUB>> ]
+"1352" [label = <(&lt;operator&gt;.assignment,*request = std::vector&lt;uint8_t&gt;())<SUB>191</SUB>> ]
+"1390" [label = <(&lt;operator&gt;.assignment,scopeId = toVector(scope))<SUB>200</SUB>> ]
+"1394" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>201</SUB>> ]
+"1469" [label = <(&lt;operator&gt;.assignment,status = static_cast&lt;Status_V1_2&gt;(\012            session-&gt;getKeyRequest(initData, mimeType, keyType, request)))<SUB>214</SUB>> ]
+"1599" [label = <(RETURN,return status;,return status;)<SUB>240</SUB>> ]
+"1325" [label = <(&lt;operator&gt;.logicalAnd,keyType == KeyType::OFFLINE &amp;&amp; 0 == initData.size())<SUB>185</SUB>> ]
+"1343" [label = <(&lt;operator&gt;.indirection,*defaultUrl)<SUB>189</SUB>> ]
+"1347" [label = <(&lt;operator&gt;.indirection,*keyRequestType)<SUB>190</SUB>> ]
+"1349" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::UNKNOWN)<SUB>190</SUB>> ]
+"1353" [label = <(&lt;operator&gt;.indirection,*request)<SUB>191</SUB>> ]
+"1355" [label = <(std::vector&lt;uint8_t&gt;,std::vector&lt;uint8_t&gt;())<SUB>191</SUB>> ]
+"1360" [label = <(&lt;operator&gt;.logicalOr,scope.size() == 0 ||\012 (keyType != KeyType::STREAMING &amp;&amp;\012            keyType != KeyType::OFFLINE &amp;&amp;\012            keyType != KeyType::RELEASE))<SUB>193</SUB>> ]
+"1392" [label = <(toVector,toVector(scope))<SUB>200</SUB>> ]
+"1395" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>201</SUB>> ]
+"1400" [label = <(&lt;operator&gt;.logicalOr,keyType == KeyType::STREAMING || keyType == KeyType::OFFLINE)<SUB>202</SUB>> ]
+"1471" [label = <(&lt;operator&gt;.cast,static_cast&lt;Status_V1_2&gt;(\012            session-&gt;getKeyRequest(initData, mimeType, keyType, request)))<SUB>214</SUB>> ]
+"1482" [label = <(&lt;operator&gt;.equals,keyType == KeyType::RELEASE)<SUB>217</SUB>> ]
+"1326" [label = <(&lt;operator&gt;.equals,keyType == KeyType::OFFLINE)<SUB>185</SUB>> ]
+"1331" [label = <(&lt;operator&gt;.equals,0 == initData.size())<SUB>185</SUB>> ]
+"1338" [label = <(RETURN,return Status_V1_2::ERROR_DRM_CANNOT_HANDLE;,return Status_V1_2::ERROR_DRM_CANNOT_HANDLE;)<SUB>186</SUB>> ]
+"1351" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>190</SUB>> ]
+"1356" [label = <(&lt;operator&gt;.fieldAccess,std::vector&lt;uint8_t&gt;)<SUB>191</SUB>> ]
+"1361" [label = <(&lt;operator&gt;.equals,scope.size() == 0)<SUB>193</SUB>> ]
+"1367" [label = <(&lt;operator&gt;.logicalAnd,keyType != KeyType::STREAMING &amp;&amp;\012            keyType != KeyType::OFFLINE &amp;&amp;\012            keyType != KeyType::RELEASE)<SUB>194</SUB>> ]
+"1385" [label = <(RETURN,return Status_V1_2::BAD_VALUE;,return Status_V1_2::BAD_VALUE;)<SUB>197</SUB>> ]
+"1401" [label = <(&lt;operator&gt;.equals,keyType == KeyType::STREAMING)<SUB>202</SUB>> ]
+"1406" [label = <(&lt;operator&gt;.equals,keyType == KeyType::OFFLINE)<SUB>202</SUB>> ]
+"1412" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sessionId(scopeId.begin(), scopeId.end()))<SUB>203</SUB>> ]
+"1427" [label = <(&lt;operator&gt;.assignment,session = mSessionLibrary-&gt;findSession(sessionId))<SUB>204</SUB>> ]
+"1462" [label = <(&lt;operator&gt;.assignment,*keyRequestType = KeyRequestType_V1_1::INITIAL)<SUB>211</SUB>> ]
+"1472" [label = <(UNKNOWN,Status_V1_2,Status_V1_2)<SUB>214</SUB>> ]
+"1473" [label = <(getKeyRequest,session-&gt;getKeyRequest(initData, mimeType, keyType, request))<SUB>215</SUB>> ]
+"1484" [label = <(&lt;operator&gt;.fieldAccess,KeyType::RELEASE)<SUB>217</SUB>> ]
+"1488" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keySetId(scopeId.begin(), scopeId.end()))<SUB>218</SUB>> ]
+"1504" [label = <(requestString,requestString(request-&gt;begin(), request-&gt;end()))<SUB>219</SUB>> ]
+"1593" [label = <(&lt;operator&gt;.assignment,*keyRequestType = KeyRequestType_V1_1::RELEASE)<SUB>238</SUB>> ]
+"1328" [label = <(&lt;operator&gt;.fieldAccess,KeyType::OFFLINE)<SUB>185</SUB>> ]
+"1333" [label = <(size,initData.size())<SUB>185</SUB>> ]
+"1339" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_CANNOT_HANDLE)<SUB>186</SUB>> ]
+"1358" [label = <(FIELD_IDENTIFIER,vector&lt;uint8_t&gt;,vector&lt;uint8_t&gt;)<SUB>191</SUB>> ]
+"1362" [label = <(size,scope.size())<SUB>193</SUB>> ]
+"1368" [label = <(&lt;operator&gt;.logicalAnd,keyType != KeyType::STREAMING &amp;&amp;\012            keyType != KeyType::OFFLINE)<SUB>194</SUB>> ]
+"1379" [label = <(&lt;operator&gt;.notEquals,keyType != KeyType::RELEASE)<SUB>196</SUB>> ]
+"1386" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::BAD_VALUE)<SUB>197</SUB>> ]
+"1403" [label = <(&lt;operator&gt;.fieldAccess,KeyType::STREAMING)<SUB>202</SUB>> ]
+"1408" [label = <(&lt;operator&gt;.fieldAccess,KeyType::OFFLINE)<SUB>202</SUB>> ]
+"1413" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>203</SUB>> ]
+"1418" [label = <(sessionId,sessionId(scopeId.begin(), scopeId.end()))<SUB>203</SUB>> ]
+"1429" [label = <(findSession,mSessionLibrary-&gt;findSession(sessionId))<SUB>204</SUB>> ]
+"1435" [label = <(&lt;operator&gt;.logicalNot,!session.get())<SUB>205</SUB>> ]
+"1463" [label = <(&lt;operator&gt;.indirection,*keyRequestType)<SUB>211</SUB>> ]
+"1465" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::INITIAL)<SUB>211</SUB>> ]
+"1474" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;getKeyRequest)<SUB>215</SUB>> ]
+"1486" [label = <(FIELD_IDENTIFIER,RELEASE,RELEASE)<SUB>217</SUB>> ]
+"1489" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>218</SUB>> ]
+"1494" [label = <(keySetId,keySetId(scopeId.begin(), scopeId.end()))<SUB>218</SUB>> ]
+"1505" [label = <(begin,request-&gt;begin())<SUB>219</SUB>> ]
+"1509" [label = <(end,request-&gt;end())<SUB>219</SUB>> ]
+"1514" [label = <(&lt;operator&gt;.notEquals,requestString.find(kOfflineLicense) != std::string::npos)<SUB>220</SUB>> ]
+"1594" [label = <(&lt;operator&gt;.indirection,*keyRequestType)<SUB>238</SUB>> ]
+"1596" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::RELEASE)<SUB>238</SUB>> ]
+"1330" [label = <(FIELD_IDENTIFIER,OFFLINE,OFFLINE)<SUB>185</SUB>> ]
+"1334" [label = <(&lt;operator&gt;.fieldAccess,initData.size)<SUB>185</SUB>> ]
+"1341" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>186</SUB>> ]
+"1363" [label = <(&lt;operator&gt;.fieldAccess,scope.size)<SUB>193</SUB>> ]
+"1369" [label = <(&lt;operator&gt;.notEquals,keyType != KeyType::STREAMING)<SUB>194</SUB>> ]
+"1374" [label = <(&lt;operator&gt;.notEquals,keyType != KeyType::OFFLINE)<SUB>195</SUB>> ]
+"1381" [label = <(&lt;operator&gt;.fieldAccess,KeyType::RELEASE)<SUB>196</SUB>> ]
+"1388" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>197</SUB>> ]
+"1405" [label = <(FIELD_IDENTIFIER,STREAMING,STREAMING)<SUB>202</SUB>> ]
+"1410" [label = <(FIELD_IDENTIFIER,OFFLINE,OFFLINE)<SUB>202</SUB>> ]
+"1414" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>203</SUB>> ]
+"1419" [label = <(begin,scopeId.begin())<SUB>203</SUB>> ]
+"1423" [label = <(end,scopeId.end())<SUB>203</SUB>> ]
+"1430" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>204</SUB>> ]
+"1436" [label = <(get,session.get())<SUB>205</SUB>> ]
+"1441" [label = <(RETURN,return Status_V1_2::ERROR_DRM_SESSION_NOT_OPENED;,return Status_V1_2::ERROR_DRM_SESSION_NOT_OPENED;)<SUB>206</SUB>> ]
+"1467" [label = <(FIELD_IDENTIFIER,INITIAL,INITIAL)<SUB>211</SUB>> ]
+"1476" [label = <(FIELD_IDENTIFIER,getKeyRequest,getKeyRequest)<SUB>215</SUB>> ]
+"1490" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>218</SUB>> ]
+"1495" [label = <(begin,scopeId.begin())<SUB>218</SUB>> ]
+"1499" [label = <(end,scopeId.end())<SUB>218</SUB>> ]
+"1506" [label = <(&lt;operator&gt;.indirectFieldAccess,request-&gt;begin)<SUB>219</SUB>> ]
+"1510" [label = <(&lt;operator&gt;.indirectFieldAccess,request-&gt;end)<SUB>219</SUB>> ]
+"1515" [label = <(find,requestString.find(kOfflineLicense))<SUB>220</SUB>> ]
+"1520" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>220</SUB>> ]
+"1528" [label = <(keySetIdString,keySetIdString(keySetId.begin(), keySetId.end()))<SUB>222</SUB>> ]
+"1598" [label = <(FIELD_IDENTIFIER,RELEASE,RELEASE)<SUB>238</SUB>> ]
+"1336" [label = <(FIELD_IDENTIFIER,size,size)<SUB>185</SUB>> ]
+"1365" [label = <(FIELD_IDENTIFIER,size,size)<SUB>193</SUB>> ]
+"1371" [label = <(&lt;operator&gt;.fieldAccess,KeyType::STREAMING)<SUB>194</SUB>> ]
+"1376" [label = <(&lt;operator&gt;.fieldAccess,KeyType::OFFLINE)<SUB>195</SUB>> ]
+"1383" [label = <(FIELD_IDENTIFIER,RELEASE,RELEASE)<SUB>196</SUB>> ]
+"1416" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>203</SUB>> ]
+"1420" [label = <(&lt;operator&gt;.fieldAccess,scopeId.begin)<SUB>203</SUB>> ]
+"1424" [label = <(&lt;operator&gt;.fieldAccess,scopeId.end)<SUB>203</SUB>> ]
+"1432" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>204</SUB>> ]
+"1437" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>205</SUB>> ]
+"1442" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_SESSION_NOT_OPENED)<SUB>206</SUB>> ]
+"1492" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>218</SUB>> ]
+"1496" [label = <(&lt;operator&gt;.fieldAccess,scopeId.begin)<SUB>218</SUB>> ]
+"1500" [label = <(&lt;operator&gt;.fieldAccess,scopeId.end)<SUB>218</SUB>> ]
+"1508" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>219</SUB>> ]
+"1512" [label = <(FIELD_IDENTIFIER,end,end)<SUB>219</SUB>> ]
+"1516" [label = <(&lt;operator&gt;.fieldAccess,requestString.find)<SUB>220</SUB>> ]
+"1521" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>220</SUB>> ]
+"1524" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>220</SUB>> ]
+"1529" [label = <(begin,keySetId.begin())<SUB>222</SUB>> ]
+"1533" [label = <(end,keySetId.end())<SUB>222</SUB>> ]
+"1538" [label = <(&lt;operator&gt;.logicalNot,!mFileHandle.StoreLicense(keySetIdString,\012 DeviceFiles::kLicenseStateReleasing,\012                    emptyResponse))<SUB>223</SUB>> ]
+"1556" [label = <(&lt;operator&gt;.equals,mReleaseKeysMap.find(keySetIdString) == mReleaseKeysMap.end())<SUB>229</SUB>> ]
+"1591" [label = <(ALOGE,ALOGE(&quot;Offline license not found, nothing to release&quot;))<SUB>236</SUB>> ]
+"1373" [label = <(FIELD_IDENTIFIER,STREAMING,STREAMING)<SUB>194</SUB>> ]
+"1378" [label = <(FIELD_IDENTIFIER,OFFLINE,OFFLINE)<SUB>195</SUB>> ]
+"1422" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>203</SUB>> ]
+"1426" [label = <(FIELD_IDENTIFIER,end,end)<SUB>203</SUB>> ]
+"1439" [label = <(FIELD_IDENTIFIER,get,get)<SUB>205</SUB>> ]
+"1444" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>206</SUB>> ]
+"1448" [label = <(&lt;operator&gt;.notEquals,session-&gt;getMockError() != Status_V1_2::OK)<SUB>207</SUB>> ]
+"1498" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>218</SUB>> ]
+"1502" [label = <(FIELD_IDENTIFIER,end,end)<SUB>218</SUB>> ]
+"1518" [label = <(FIELD_IDENTIFIER,find,find)<SUB>220</SUB>> ]
+"1530" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>222</SUB>> ]
+"1534" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>222</SUB>> ]
+"1539" [label = <(StoreLicense,mFileHandle.StoreLicense(keySetIdString,\012 DeviceFiles::kLicenseStateReleasing,\012                    emptyResponse))<SUB>223</SUB>> ]
+"1549" [label = <(ALOGE,ALOGE(&quot;Problem releasing offline license&quot;))<SUB>226</SUB>> ]
+"1551" [label = <(RETURN,return Status_V1_2::ERROR_DRM_UNKNOWN;,return Status_V1_2::ERROR_DRM_UNKNOWN;)<SUB>227</SUB>> ]
+"1557" [label = <(find,mReleaseKeysMap.find(keySetIdString))<SUB>229</SUB>> ]
+"1562" [label = <(end,mReleaseKeysMap.end())<SUB>229</SUB>> ]
+"1567" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;createSession())<SUB>230</SUB>> ]
+"1577" [label = <(&lt;operator&gt;.assignment,mReleaseKeysMap[keySetIdString] = session-&gt;sessionId())<SUB>231</SUB>> ]
+"1449" [label = <(getMockError,session-&gt;getMockError())<SUB>207</SUB>> ]
+"1453" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>207</SUB>> ]
+"1457" [label = <(RETURN,return session-&gt;getMockError();,return session-&gt;getMockError();)<SUB>208</SUB>> ]
+"1532" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>222</SUB>> ]
+"1536" [label = <(FIELD_IDENTIFIER,end,end)<SUB>222</SUB>> ]
+"1540" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.StoreLicense)<SUB>223</SUB>> ]
+"1544" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateReleasing)<SUB>224</SUB>> ]
+"1552" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_UNKNOWN)<SUB>227</SUB>> ]
+"1558" [label = <(&lt;operator&gt;.fieldAccess,mReleaseKeysMap.find)<SUB>229</SUB>> ]
+"1563" [label = <(&lt;operator&gt;.fieldAccess,mReleaseKeysMap.end)<SUB>229</SUB>> ]
+"1568" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>230</SUB>> ]
+"1573" [label = <(createSession,mSessionLibrary-&gt;createSession())<SUB>230</SUB>> ]
+"1578" [label = <(&lt;operator&gt;.indirectIndexAccess,mReleaseKeysMap[keySetIdString])<SUB>231</SUB>> ]
+"1581" [label = <(sessionId,session-&gt;sessionId())<SUB>231</SUB>> ]
+"1587" [label = <(ALOGI,ALOGI(&quot;key is in use, ignore release request&quot;))<SUB>233</SUB>> ]
+"1450" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;getMockError)<SUB>207</SUB>> ]
+"1455" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>207</SUB>> ]
+"1458" [label = <(getMockError,session-&gt;getMockError())<SUB>208</SUB>> ]
+"1542" [label = <(FIELD_IDENTIFIER,StoreLicense,StoreLicense)<SUB>223</SUB>> ]
+"1546" [label = <(FIELD_IDENTIFIER,kLicenseStateReleasing,kLicenseStateReleasing)<SUB>224</SUB>> ]
+"1554" [label = <(FIELD_IDENTIFIER,ERROR_DRM_UNKNOWN,ERROR_DRM_UNKNOWN)<SUB>227</SUB>> ]
+"1560" [label = <(FIELD_IDENTIFIER,find,find)<SUB>229</SUB>> ]
+"1565" [label = <(FIELD_IDENTIFIER,end,end)<SUB>229</SUB>> ]
+"1569" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>230</SUB>> ]
+"1574" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;createSession)<SUB>230</SUB>> ]
+"1582" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;sessionId)<SUB>231</SUB>> ]
+"1452" [label = <(FIELD_IDENTIFIER,getMockError,getMockError)<SUB>207</SUB>> ]
+"1459" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;getMockError)<SUB>208</SUB>> ]
+"1576" [label = <(FIELD_IDENTIFIER,createSession,createSession)<SUB>230</SUB>> ]
+"1584" [label = <(FIELD_IDENTIFIER,sessionId,sessionId)<SUB>231</SUB>> ]
+"1461" [label = <(FIELD_IDENTIFIER,getMockError,getMockError)<SUB>208</SUB>> ]
+"1312" [label = <(METHOD,getKeyRequestCommon)<SUB>171</SUB>> ]
+"1601" [label = <(METHOD_RETURN,Status_V1_2)<SUB>171</SUB>> ]
+  "1322" -> "1330" 
+  "1342" -> "1347" 
+  "1346" -> "1353" 
+  "1352" -> "1365" 
+  "1390" -> "1395" 
+  "1394" -> "1405" 
+  "1469" -> "1486" 
+  "1599" -> "1601" 
+  "1325" -> "1341" 
+  "1325" -> "1343" 
+  "1343" -> "1342" 
+  "1347" -> "1351" 
+  "1349" -> "1346" 
+  "1353" -> "1358" 
+  "1355" -> "1352" 
+  "1360" -> "1388" 
+  "1360" -> "1392" 
+  "1392" -> "1390" 
+  "1395" -> "1394" 
+  "1400" -> "1416" 
+  "1400" -> "1472" 
+  "1471" -> "1469" 
+  "1482" -> "1492" 
+  "1482" -> "1599" 
+  "1326" -> "1325" 
+  "1326" -> "1336" 
+  "1331" -> "1325" 
+  "1338" -> "1601" 
+  "1351" -> "1349" 
+  "1356" -> "1355" 
+  "1361" -> "1360" 
+  "1361" -> "1373" 
+  "1367" -> "1360" 
+  "1385" -> "1601" 
+  "1401" -> "1400" 
+  "1401" -> "1410" 
+  "1406" -> "1400" 
+  "1412" -> "1432" 
+  "1427" -> "1439" 
+  "1462" -> "1472" 
+  "1472" -> "1476" 
+  "1473" -> "1471" 
+  "1484" -> "1482" 
+  "1488" -> "1508" 
+  "1504" -> "1518" 
+  "1593" -> "1599" 
+  "1328" -> "1326" 
+  "1333" -> "1331" 
+  "1339" -> "1338" 
+  "1358" -> "1356" 
   "1362" -> "1361" 
-  "1362" -> "1374" 
-  "1368" -> "1361" 
-  "1386" -> "1602" 
-  "1402" -> "1401" 
-  "1402" -> "1411" 
-  "1407" -> "1401" 
-  "1413" -> "1433" 
-  "1428" -> "1440" 
-  "1463" -> "1473" 
-  "1473" -> "1477" 
-  "1474" -> "1472" 
-  "1485" -> "1483" 
-  "1489" -> "1509" 
-  "1505" -> "1519" 
-  "1594" -> "1600" 
-  "1329" -> "1327" 
-  "1334" -> "1332" 
-  "1340" -> "1339" 
-  "1359" -> "1357" 
+  "1368" -> "1367" 
+  "1368" -> "1383" 
+  "1379" -> "1367" 
+  "1386" -> "1385" 
+  "1403" -> "1401" 
+  "1408" -> "1406" 
+  "1413" -> "1422" 
+  "1418" -> "1412" 
+  "1429" -> "1427" 
+  "1435" -> "1444" 
+  "1435" -> "1452" 
+  "1463" -> "1467" 
+  "1465" -> "1462" 
+  "1474" -> "1473" 
+  "1486" -> "1484" 
+  "1489" -> "1498" 
+  "1494" -> "1488" 
+  "1505" -> "1512" 
+  "1509" -> "1504" 
+  "1514" -> "1532" 
+  "1514" -> "1591" 
+  "1594" -> "1598" 
+  "1596" -> "1593" 
+  "1330" -> "1328" 
+  "1334" -> "1333" 
+  "1341" -> "1339" 
   "1363" -> "1362" 
   "1369" -> "1368" 
-  "1369" -> "1384" 
-  "1380" -> "1368" 
-  "1387" -> "1386" 
-  "1404" -> "1402" 
-  "1409" -> "1407" 
-  "1414" -> "1423" 
-  "1419" -> "1413" 
-  "1430" -> "1428" 
-  "1436" -> "1445" 
-  "1436" -> "1453" 
-  "1464" -> "1468" 
-  "1466" -> "1463" 
-  "1475" -> "1474" 
-  "1487" -> "1485" 
-  "1490" -> "1499" 
-  "1495" -> "1489" 
-  "1506" -> "1513" 
-  "1510" -> "1505" 
-  "1515" -> "1533" 
-  "1515" -> "1592" 
-  "1595" -> "1599" 
-  "1597" -> "1594" 
-  "1331" -> "1329" 
-  "1335" -> "1334" 
-  "1342" -> "1340" 
-  "1364" -> "1363" 
-  "1370" -> "1369" 
-  "1370" -> "1379" 
-  "1375" -> "1369" 
-  "1382" -> "1380" 
-  "1389" -> "1387" 
-  "1406" -> "1404" 
-  "1411" -> "1409" 
-  "1415" -> "1414" 
-  "1420" -> "1427" 
-  "1424" -> "1419" 
-  "1431" -> "1430" 
+  "1369" -> "1378" 
+  "1374" -> "1368" 
+  "1381" -> "1379" 
+  "1388" -> "1386" 
+  "1405" -> "1403" 
+  "1410" -> "1408" 
+  "1414" -> "1413" 
+  "1419" -> "1426" 
+  "1423" -> "1418" 
+  "1430" -> "1429" 
+  "1436" -> "1435" 
+  "1441" -> "1601" 
+  "1467" -> "1465" 
+  "1476" -> "1474" 
+  "1490" -> "1489" 
+  "1495" -> "1502" 
+  "1499" -> "1494" 
+  "1506" -> "1505" 
+  "1510" -> "1509" 
+  "1515" -> "1521" 
+  "1520" -> "1514" 
+  "1528" -> "1542" 
+  "1598" -> "1596" 
+  "1336" -> "1334" 
+  "1365" -> "1363" 
+  "1371" -> "1369" 
+  "1376" -> "1374" 
+  "1383" -> "1381" 
+  "1416" -> "1414" 
+  "1420" -> "1419" 
+  "1424" -> "1423" 
+  "1432" -> "1430" 
   "1437" -> "1436" 
-  "1442" -> "1602" 
-  "1468" -> "1466" 
-  "1477" -> "1475" 
-  "1491" -> "1490" 
-  "1496" -> "1503" 
-  "1500" -> "1495" 
-  "1507" -> "1506" 
-  "1511" -> "1510" 
-  "1516" -> "1522" 
-  "1521" -> "1515" 
-  "1529" -> "1543" 
-  "1599" -> "1597" 
-  "1337" -> "1335" 
-  "1366" -> "1364" 
-  "1372" -> "1370" 
-  "1377" -> "1375" 
-  "1384" -> "1382" 
-  "1417" -> "1415" 
-  "1421" -> "1420" 
-  "1425" -> "1424" 
-  "1433" -> "1431" 
-  "1438" -> "1437" 
-  "1443" -> "1442" 
-  "1493" -> "1491" 
-  "1497" -> "1496" 
-  "1501" -> "1500" 
-  "1509" -> "1507" 
-  "1513" -> "1511" 
-  "1517" -> "1516" 
-  "1522" -> "1525" 
-  "1525" -> "1521" 
-  "1530" -> "1537" 
-  "1534" -> "1529" 
-  "1539" -> "1550" 
-  "1539" -> "1561" 
-  "1557" -> "1570" 
-  "1557" -> "1588" 
-  "1592" -> "1595" 
-  "1374" -> "1372" 
-  "1379" -> "1377" 
-  "1423" -> "1421" 
-  "1427" -> "1425" 
-  "1440" -> "1438" 
-  "1445" -> "1443" 
-  "1449" -> "1462" 
-  "1449" -> "1464" 
-  "1499" -> "1497" 
-  "1503" -> "1501" 
-  "1519" -> "1517" 
-  "1531" -> "1530" 
-  "1535" -> "1534" 
-  "1540" -> "1539" 
-  "1550" -> "1555" 
-  "1552" -> "1602" 
-  "1558" -> "1566" 
-  "1563" -> "1557" 
-  "1568" -> "1579" 
-  "1578" -> "1595" 
-  "1450" -> "1456" 
-  "1454" -> "1449" 
-  "1458" -> "1602" 
-  "1533" -> "1531" 
-  "1537" -> "1535" 
-  "1541" -> "1547" 
-  "1545" -> "1540" 
-  "1553" -> "1552" 
-  "1559" -> "1558" 
-  "1564" -> "1563" 
-  "1569" -> "1577" 
-  "1574" -> "1568" 
-  "1579" -> "1585" 
-  "1582" -> "1578" 
-  "1588" -> "1595" 
-  "1451" -> "1450" 
-  "1456" -> "1454" 
+  "1442" -> "1441" 
+  "1492" -> "1490" 
+  "1496" -> "1495" 
+  "1500" -> "1499" 
+  "1508" -> "1506" 
+  "1512" -> "1510" 
+  "1516" -> "1515" 
+  "1521" -> "1524" 
+  "1524" -> "1520" 
+  "1529" -> "1536" 
+  "1533" -> "1528" 
+  "1538" -> "1549" 
+  "1538" -> "1560" 
+  "1556" -> "1569" 
+  "1556" -> "1587" 
+  "1591" -> "1594" 
+  "1373" -> "1371" 
+  "1378" -> "1376" 
+  "1422" -> "1420" 
+  "1426" -> "1424" 
+  "1439" -> "1437" 
+  "1444" -> "1442" 
+  "1448" -> "1461" 
+  "1448" -> "1463" 
+  "1498" -> "1496" 
+  "1502" -> "1500" 
+  "1518" -> "1516" 
+  "1530" -> "1529" 
+  "1534" -> "1533" 
+  "1539" -> "1538" 
+  "1549" -> "1554" 
+  "1551" -> "1601" 
+  "1557" -> "1565" 
+  "1562" -> "1556" 
+  "1567" -> "1578" 
+  "1577" -> "1594" 
+  "1449" -> "1455" 
+  "1453" -> "1448" 
+  "1457" -> "1601" 
+  "1532" -> "1530" 
+  "1536" -> "1534" 
+  "1540" -> "1546" 
+  "1544" -> "1539" 
+  "1552" -> "1551" 
+  "1558" -> "1557" 
+  "1563" -> "1562" 
+  "1568" -> "1576" 
+  "1573" -> "1567" 
+  "1578" -> "1584" 
+  "1581" -> "1577" 
+  "1587" -> "1594" 
+  "1450" -> "1449" 
+  "1455" -> "1453" 
+  "1458" -> "1457" 
+  "1542" -> "1540" 
+  "1546" -> "1544" 
+  "1554" -> "1552" 
+  "1560" -> "1558" 
+  "1565" -> "1563" 
+  "1569" -> "1568" 
+  "1574" -> "1573" 
+  "1582" -> "1581" 
+  "1452" -> "1450" 
   "1459" -> "1458" 
-  "1543" -> "1541" 
-  "1547" -> "1545" 
-  "1555" -> "1553" 
-  "1561" -> "1559" 
-  "1566" -> "1564" 
-  "1570" -> "1569" 
-  "1575" -> "1574" 
-  "1583" -> "1582" 
-  "1453" -> "1451" 
-  "1460" -> "1459" 
-  "1577" -> "1575" 
-  "1585" -> "1583" 
-  "1462" -> "1460" 
-  "1313" -> "1323" 
+  "1576" -> "1574" 
+  "1584" -> "1582" 
+  "1461" -> "1459" 
+  "1312" -> "1322" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/65-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/65-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/65-cfg.dot	2023-06-07 19:37:50.927374258 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/65-cfg.dot	2023-06-07 19:37:55.447374366 +0330
@@ -1,47 +1,47 @@
 digraph "getKeyRequest" {  
-"1612" [label = <(UNUSED,UNUSED(optionalParameters))<SUB>250</SUB>> ]
-"1615" [label = <(&lt;operator&gt;.assignment,keyRequestType = KeyRequestType_V1_1::UNKNOWN)<SUB>252</SUB>> ]
-"1621" [label = <(defaultUrl,defaultUrl(&quot;&quot;))<SUB>253</SUB>> ]
-"1623" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; request)<SUB>254</SUB>> ]
-"1631" [label = <(&lt;operator&gt;.assignment,status = getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>255</SUB>> ]
-"1645" [label = <(_hidl_cb,_hidl_cb(toStatus_1_0(status), toHidlVec(request),\012            toKeyRequestType_V1_0(keyRequestType),\012            hidl_string(defaultUrl)))<SUB>259</SUB>> ]
-"1654" [label = <(RETURN,return Void();,return Void();)<SUB>262</SUB>> ]
-"1617" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::UNKNOWN)<SUB>252</SUB>> ]
-"1624" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>254</SUB>> ]
-"1633" [label = <(getKeyRequestCommon,getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>255</SUB>> ]
-"1646" [label = <(toStatus_1_0,toStatus_1_0(status))<SUB>259</SUB>> ]
-"1648" [label = <(toHidlVec,toHidlVec(request))<SUB>259</SUB>> ]
-"1650" [label = <(toKeyRequestType_V1_0,toKeyRequestType_V1_0(keyRequestType))<SUB>260</SUB>> ]
-"1652" [label = <(hidl_string,hidl_string(defaultUrl))<SUB>261</SUB>> ]
-"1655" [label = <(Void,Void())<SUB>262</SUB>> ]
-"1619" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>252</SUB>> ]
-"1625" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>254</SUB>> ]
-"1639" [label = <(&lt;operator&gt;.addressOf,&amp;request)<SUB>257</SUB>> ]
-"1641" [label = <(&lt;operator&gt;.addressOf,&amp;keyRequestType)<SUB>257</SUB>> ]
-"1643" [label = <(&lt;operator&gt;.addressOf,&amp;defaultUrl)<SUB>257</SUB>> ]
-"1627" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>254</SUB>> ]
-"1604" [label = <(METHOD,getKeyRequest)<SUB>243</SUB>> ]
-"1656" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>243</SUB>> ]
-  "1612" -> "1619" 
-  "1615" -> "1621" 
-  "1621" -> "1627" 
-  "1623" -> "1639" 
-  "1631" -> "1646" 
-  "1645" -> "1655" 
-  "1654" -> "1656" 
-  "1617" -> "1615" 
+"1611" [label = <(UNUSED,UNUSED(optionalParameters))<SUB>250</SUB>> ]
+"1614" [label = <(&lt;operator&gt;.assignment,keyRequestType = KeyRequestType_V1_1::UNKNOWN)<SUB>252</SUB>> ]
+"1620" [label = <(defaultUrl,defaultUrl(&quot;&quot;))<SUB>253</SUB>> ]
+"1622" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; request)<SUB>254</SUB>> ]
+"1630" [label = <(&lt;operator&gt;.assignment,status = getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>255</SUB>> ]
+"1644" [label = <(_hidl_cb,_hidl_cb(toStatus_1_0(status), toHidlVec(request),\012            toKeyRequestType_V1_0(keyRequestType),\012            hidl_string(defaultUrl)))<SUB>259</SUB>> ]
+"1653" [label = <(RETURN,return Void();,return Void();)<SUB>262</SUB>> ]
+"1616" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::UNKNOWN)<SUB>252</SUB>> ]
+"1623" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>254</SUB>> ]
+"1632" [label = <(getKeyRequestCommon,getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>255</SUB>> ]
+"1645" [label = <(toStatus_1_0,toStatus_1_0(status))<SUB>259</SUB>> ]
+"1647" [label = <(toHidlVec,toHidlVec(request))<SUB>259</SUB>> ]
+"1649" [label = <(toKeyRequestType_V1_0,toKeyRequestType_V1_0(keyRequestType))<SUB>260</SUB>> ]
+"1651" [label = <(hidl_string,hidl_string(defaultUrl))<SUB>261</SUB>> ]
+"1654" [label = <(Void,Void())<SUB>262</SUB>> ]
+"1618" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>252</SUB>> ]
+"1624" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>254</SUB>> ]
+"1638" [label = <(&lt;operator&gt;.addressOf,&amp;request)<SUB>257</SUB>> ]
+"1640" [label = <(&lt;operator&gt;.addressOf,&amp;keyRequestType)<SUB>257</SUB>> ]
+"1642" [label = <(&lt;operator&gt;.addressOf,&amp;defaultUrl)<SUB>257</SUB>> ]
+"1626" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>254</SUB>> ]
+"1603" [label = <(METHOD,getKeyRequest)<SUB>243</SUB>> ]
+"1655" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>243</SUB>> ]
+  "1611" -> "1618" 
+  "1614" -> "1620" 
+  "1620" -> "1626" 
+  "1622" -> "1638" 
+  "1630" -> "1645" 
+  "1644" -> "1654" 
+  "1653" -> "1655" 
+  "1616" -> "1614" 
+  "1623" -> "1622" 
+  "1632" -> "1630" 
+  "1645" -> "1647" 
+  "1647" -> "1649" 
+  "1649" -> "1651" 
+  "1651" -> "1644" 
+  "1654" -> "1653" 
+  "1618" -> "1616" 
   "1624" -> "1623" 
-  "1633" -> "1631" 
-  "1646" -> "1648" 
-  "1648" -> "1650" 
-  "1650" -> "1652" 
-  "1652" -> "1645" 
-  "1655" -> "1654" 
-  "1619" -> "1617" 
-  "1625" -> "1624" 
-  "1639" -> "1641" 
-  "1641" -> "1643" 
-  "1643" -> "1633" 
-  "1627" -> "1625" 
-  "1604" -> "1612" 
+  "1638" -> "1640" 
+  "1640" -> "1642" 
+  "1642" -> "1632" 
+  "1626" -> "1624" 
+  "1603" -> "1611" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/66-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/66-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/66-cfg.dot	2023-06-07 19:37:50.937374261 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/66-cfg.dot	2023-06-07 19:37:55.447374366 +0330
@@ -1,45 +1,45 @@
 digraph "getKeyRequest_1_1" {  
-"1666" [label = <(UNUSED,UNUSED(optionalParameters))<SUB>272</SUB>> ]
-"1669" [label = <(&lt;operator&gt;.assignment,keyRequestType = KeyRequestType_V1_1::UNKNOWN)<SUB>274</SUB>> ]
-"1675" [label = <(defaultUrl,defaultUrl(&quot;&quot;))<SUB>275</SUB>> ]
-"1677" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; request)<SUB>276</SUB>> ]
-"1685" [label = <(&lt;operator&gt;.assignment,status = getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>277</SUB>> ]
-"1699" [label = <(_hidl_cb,_hidl_cb(toStatus_1_0(status), toHidlVec(request),\012            keyRequestType, hidl_string(defaultUrl)))<SUB>281</SUB>> ]
-"1707" [label = <(RETURN,return Void();,return Void();)<SUB>283</SUB>> ]
-"1671" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::UNKNOWN)<SUB>274</SUB>> ]
-"1678" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>276</SUB>> ]
-"1687" [label = <(getKeyRequestCommon,getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>277</SUB>> ]
-"1700" [label = <(toStatus_1_0,toStatus_1_0(status))<SUB>281</SUB>> ]
-"1702" [label = <(toHidlVec,toHidlVec(request))<SUB>281</SUB>> ]
-"1705" [label = <(hidl_string,hidl_string(defaultUrl))<SUB>282</SUB>> ]
-"1708" [label = <(Void,Void())<SUB>283</SUB>> ]
-"1673" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>274</SUB>> ]
-"1679" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>276</SUB>> ]
-"1693" [label = <(&lt;operator&gt;.addressOf,&amp;request)<SUB>279</SUB>> ]
-"1695" [label = <(&lt;operator&gt;.addressOf,&amp;keyRequestType)<SUB>279</SUB>> ]
-"1697" [label = <(&lt;operator&gt;.addressOf,&amp;defaultUrl)<SUB>279</SUB>> ]
-"1681" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>276</SUB>> ]
-"1658" [label = <(METHOD,getKeyRequest_1_1)<SUB>265</SUB>> ]
-"1709" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>265</SUB>> ]
-  "1666" -> "1673" 
-  "1669" -> "1675" 
-  "1675" -> "1681" 
-  "1677" -> "1693" 
-  "1685" -> "1700" 
-  "1699" -> "1708" 
-  "1707" -> "1709" 
-  "1671" -> "1669" 
+"1665" [label = <(UNUSED,UNUSED(optionalParameters))<SUB>272</SUB>> ]
+"1668" [label = <(&lt;operator&gt;.assignment,keyRequestType = KeyRequestType_V1_1::UNKNOWN)<SUB>274</SUB>> ]
+"1674" [label = <(defaultUrl,defaultUrl(&quot;&quot;))<SUB>275</SUB>> ]
+"1676" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; request)<SUB>276</SUB>> ]
+"1684" [label = <(&lt;operator&gt;.assignment,status = getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>277</SUB>> ]
+"1698" [label = <(_hidl_cb,_hidl_cb(toStatus_1_0(status), toHidlVec(request),\012            keyRequestType, hidl_string(defaultUrl)))<SUB>281</SUB>> ]
+"1706" [label = <(RETURN,return Void();,return Void();)<SUB>283</SUB>> ]
+"1670" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::UNKNOWN)<SUB>274</SUB>> ]
+"1677" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>276</SUB>> ]
+"1686" [label = <(getKeyRequestCommon,getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>277</SUB>> ]
+"1699" [label = <(toStatus_1_0,toStatus_1_0(status))<SUB>281</SUB>> ]
+"1701" [label = <(toHidlVec,toHidlVec(request))<SUB>281</SUB>> ]
+"1704" [label = <(hidl_string,hidl_string(defaultUrl))<SUB>282</SUB>> ]
+"1707" [label = <(Void,Void())<SUB>283</SUB>> ]
+"1672" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>274</SUB>> ]
+"1678" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>276</SUB>> ]
+"1692" [label = <(&lt;operator&gt;.addressOf,&amp;request)<SUB>279</SUB>> ]
+"1694" [label = <(&lt;operator&gt;.addressOf,&amp;keyRequestType)<SUB>279</SUB>> ]
+"1696" [label = <(&lt;operator&gt;.addressOf,&amp;defaultUrl)<SUB>279</SUB>> ]
+"1680" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>276</SUB>> ]
+"1657" [label = <(METHOD,getKeyRequest_1_1)<SUB>265</SUB>> ]
+"1708" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>265</SUB>> ]
+  "1665" -> "1672" 
+  "1668" -> "1674" 
+  "1674" -> "1680" 
+  "1676" -> "1692" 
+  "1684" -> "1699" 
+  "1698" -> "1707" 
+  "1706" -> "1708" 
+  "1670" -> "1668" 
+  "1677" -> "1676" 
+  "1686" -> "1684" 
+  "1699" -> "1701" 
+  "1701" -> "1704" 
+  "1704" -> "1698" 
+  "1707" -> "1706" 
+  "1672" -> "1670" 
   "1678" -> "1677" 
-  "1687" -> "1685" 
-  "1700" -> "1702" 
-  "1702" -> "1705" 
-  "1705" -> "1699" 
-  "1708" -> "1707" 
-  "1673" -> "1671" 
-  "1679" -> "1678" 
-  "1693" -> "1695" 
-  "1695" -> "1697" 
-  "1697" -> "1687" 
-  "1681" -> "1679" 
-  "1658" -> "1666" 
+  "1692" -> "1694" 
+  "1694" -> "1696" 
+  "1696" -> "1686" 
+  "1680" -> "1678" 
+  "1657" -> "1665" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/67-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/67-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/67-cfg.dot	2023-06-07 19:37:50.937374261 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/67-cfg.dot	2023-06-07 19:37:55.447374366 +0330
@@ -1,43 +1,43 @@
 digraph "getKeyRequest_1_2" {  
-"1719" [label = <(UNUSED,UNUSED(optionalParameters))<SUB>293</SUB>> ]
-"1722" [label = <(&lt;operator&gt;.assignment,keyRequestType = KeyRequestType_V1_1::UNKNOWN)<SUB>295</SUB>> ]
-"1728" [label = <(defaultUrl,defaultUrl(&quot;&quot;))<SUB>296</SUB>> ]
-"1730" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; request)<SUB>297</SUB>> ]
-"1738" [label = <(&lt;operator&gt;.assignment,status = getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>298</SUB>> ]
-"1752" [label = <(_hidl_cb,_hidl_cb(status, toHidlVec(request), keyRequestType, hidl_string(defaultUrl)))<SUB>302</SUB>> ]
-"1759" [label = <(RETURN,return Void();,return Void();)<SUB>303</SUB>> ]
-"1724" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::UNKNOWN)<SUB>295</SUB>> ]
-"1731" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>297</SUB>> ]
-"1740" [label = <(getKeyRequestCommon,getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>298</SUB>> ]
-"1754" [label = <(toHidlVec,toHidlVec(request))<SUB>302</SUB>> ]
-"1757" [label = <(hidl_string,hidl_string(defaultUrl))<SUB>302</SUB>> ]
-"1760" [label = <(Void,Void())<SUB>303</SUB>> ]
-"1726" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>295</SUB>> ]
-"1732" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>297</SUB>> ]
-"1746" [label = <(&lt;operator&gt;.addressOf,&amp;request)<SUB>300</SUB>> ]
-"1748" [label = <(&lt;operator&gt;.addressOf,&amp;keyRequestType)<SUB>300</SUB>> ]
-"1750" [label = <(&lt;operator&gt;.addressOf,&amp;defaultUrl)<SUB>300</SUB>> ]
-"1734" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>297</SUB>> ]
-"1711" [label = <(METHOD,getKeyRequest_1_2)<SUB>286</SUB>> ]
-"1761" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>286</SUB>> ]
-  "1719" -> "1726" 
-  "1722" -> "1728" 
-  "1728" -> "1734" 
-  "1730" -> "1746" 
-  "1738" -> "1754" 
-  "1752" -> "1760" 
-  "1759" -> "1761" 
-  "1724" -> "1722" 
+"1718" [label = <(UNUSED,UNUSED(optionalParameters))<SUB>293</SUB>> ]
+"1721" [label = <(&lt;operator&gt;.assignment,keyRequestType = KeyRequestType_V1_1::UNKNOWN)<SUB>295</SUB>> ]
+"1727" [label = <(defaultUrl,defaultUrl(&quot;&quot;))<SUB>296</SUB>> ]
+"1729" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; request)<SUB>297</SUB>> ]
+"1737" [label = <(&lt;operator&gt;.assignment,status = getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>298</SUB>> ]
+"1751" [label = <(_hidl_cb,_hidl_cb(status, toHidlVec(request), keyRequestType, hidl_string(defaultUrl)))<SUB>302</SUB>> ]
+"1758" [label = <(RETURN,return Void();,return Void();)<SUB>303</SUB>> ]
+"1723" [label = <(&lt;operator&gt;.fieldAccess,KeyRequestType_V1_1::UNKNOWN)<SUB>295</SUB>> ]
+"1730" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>297</SUB>> ]
+"1739" [label = <(getKeyRequestCommon,getKeyRequestCommon(\012            scope, initData, mimeType, keyType, optionalParameters,\012 &amp;request, &amp;keyRequestType, &amp;defaultUrl))<SUB>298</SUB>> ]
+"1753" [label = <(toHidlVec,toHidlVec(request))<SUB>302</SUB>> ]
+"1756" [label = <(hidl_string,hidl_string(defaultUrl))<SUB>302</SUB>> ]
+"1759" [label = <(Void,Void())<SUB>303</SUB>> ]
+"1725" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>295</SUB>> ]
+"1731" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>297</SUB>> ]
+"1745" [label = <(&lt;operator&gt;.addressOf,&amp;request)<SUB>300</SUB>> ]
+"1747" [label = <(&lt;operator&gt;.addressOf,&amp;keyRequestType)<SUB>300</SUB>> ]
+"1749" [label = <(&lt;operator&gt;.addressOf,&amp;defaultUrl)<SUB>300</SUB>> ]
+"1733" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>297</SUB>> ]
+"1710" [label = <(METHOD,getKeyRequest_1_2)<SUB>286</SUB>> ]
+"1760" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>286</SUB>> ]
+  "1718" -> "1725" 
+  "1721" -> "1727" 
+  "1727" -> "1733" 
+  "1729" -> "1745" 
+  "1737" -> "1753" 
+  "1751" -> "1759" 
+  "1758" -> "1760" 
+  "1723" -> "1721" 
+  "1730" -> "1729" 
+  "1739" -> "1737" 
+  "1753" -> "1756" 
+  "1756" -> "1751" 
+  "1759" -> "1758" 
+  "1725" -> "1723" 
   "1731" -> "1730" 
-  "1740" -> "1738" 
-  "1754" -> "1757" 
-  "1757" -> "1752" 
-  "1760" -> "1759" 
-  "1726" -> "1724" 
-  "1732" -> "1731" 
-  "1746" -> "1748" 
-  "1748" -> "1750" 
-  "1750" -> "1740" 
-  "1734" -> "1732" 
-  "1711" -> "1719" 
+  "1745" -> "1747" 
+  "1747" -> "1749" 
+  "1749" -> "1739" 
+  "1733" -> "1731" 
+  "1710" -> "1718" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/68-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/68-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/68-cfg.dot	2023-06-07 19:37:50.937374261 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/68-cfg.dot	2023-06-07 19:37:55.447374366 +0330
@@ -1,61 +1,59 @@
 digraph "setPlayPolicy" {  
-"1766" [label = <(lock,lock(mPlayPolicyLock))<SUB>307</SUB>> ]
-"1768" [label = <(clear,mPlayPolicy.clear())<SUB>308</SUB>> ]
-"1773" [label = <(&lt;operator&gt;.assignment,policy.key = kQueryKeyLicenseType)<SUB>311</SUB>> ]
-"1778" [label = <(&lt;operator&gt;.assignment,policy.value = kStreaming)<SUB>312</SUB>> ]
-"1783" [label = <(push_back,mPlayPolicy.push_back(policy))<SUB>313</SUB>> ]
-"1788" [label = <(&lt;operator&gt;.assignment,policy.key = kQueryKeyPlayAllowed)<SUB>315</SUB>> ]
-"1793" [label = <(&lt;operator&gt;.assignment,policy.value = kTrue)<SUB>316</SUB>> ]
-"1798" [label = <(push_back,mPlayPolicy.push_back(policy))<SUB>317</SUB>> ]
-"1803" [label = <(&lt;operator&gt;.assignment,policy.key = kQueryKeyRenewAllowed)<SUB>319</SUB>> ]
-"1808" [label = <(push_back,mPlayPolicy.push_back(policy))<SUB>320</SUB>> ]
-"1769" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.clear)<SUB>308</SUB>> ]
-"1774" [label = <(&lt;operator&gt;.fieldAccess,policy.key)<SUB>311</SUB>> ]
-"1779" [label = <(&lt;operator&gt;.fieldAccess,policy.value)<SUB>312</SUB>> ]
-"1784" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.push_back)<SUB>313</SUB>> ]
-"1789" [label = <(&lt;operator&gt;.fieldAccess,policy.key)<SUB>315</SUB>> ]
-"1794" [label = <(&lt;operator&gt;.fieldAccess,policy.value)<SUB>316</SUB>> ]
-"1799" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.push_back)<SUB>317</SUB>> ]
-"1804" [label = <(&lt;operator&gt;.fieldAccess,policy.key)<SUB>319</SUB>> ]
-"1809" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.push_back)<SUB>320</SUB>> ]
-"1771" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>308</SUB>> ]
-"1776" [label = <(FIELD_IDENTIFIER,key,key)<SUB>311</SUB>> ]
-"1781" [label = <(FIELD_IDENTIFIER,value,value)<SUB>312</SUB>> ]
-"1786" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>313</SUB>> ]
-"1791" [label = <(FIELD_IDENTIFIER,key,key)<SUB>315</SUB>> ]
-"1796" [label = <(FIELD_IDENTIFIER,value,value)<SUB>316</SUB>> ]
-"1801" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>317</SUB>> ]
-"1806" [label = <(FIELD_IDENTIFIER,key,key)<SUB>319</SUB>> ]
-"1811" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>320</SUB>> ]
-"1763" [label = <(METHOD,setPlayPolicy)<SUB>306</SUB>> ]
-"1813" [label = <(METHOD_RETURN,void)<SUB>306</SUB>> ]
-  "1766" -> "1771" 
-  "1768" -> "1776" 
-  "1773" -> "1781" 
-  "1778" -> "1786" 
-  "1783" -> "1791" 
-  "1788" -> "1796" 
-  "1793" -> "1801" 
-  "1798" -> "1806" 
-  "1803" -> "1811" 
-  "1808" -> "1813" 
-  "1769" -> "1768" 
-  "1774" -> "1773" 
-  "1779" -> "1778" 
-  "1784" -> "1783" 
-  "1789" -> "1788" 
-  "1794" -> "1793" 
-  "1799" -> "1798" 
-  "1804" -> "1803" 
-  "1809" -> "1808" 
-  "1771" -> "1769" 
-  "1776" -> "1774" 
-  "1781" -> "1779" 
-  "1786" -> "1784" 
-  "1791" -> "1789" 
-  "1796" -> "1794" 
-  "1801" -> "1799" 
-  "1806" -> "1804" 
-  "1811" -> "1809" 
-  "1763" -> "1766" 
+"1764" [label = <(clear,mPlayPolicy.clear())<SUB>307</SUB>> ]
+"1769" [label = <(&lt;operator&gt;.assignment,policy.key = kQueryKeyLicenseType)<SUB>310</SUB>> ]
+"1774" [label = <(&lt;operator&gt;.assignment,policy.value = kStreaming)<SUB>311</SUB>> ]
+"1779" [label = <(push_back,mPlayPolicy.push_back(policy))<SUB>312</SUB>> ]
+"1784" [label = <(&lt;operator&gt;.assignment,policy.key = kQueryKeyPlayAllowed)<SUB>314</SUB>> ]
+"1789" [label = <(&lt;operator&gt;.assignment,policy.value = kTrue)<SUB>315</SUB>> ]
+"1794" [label = <(push_back,mPlayPolicy.push_back(policy))<SUB>316</SUB>> ]
+"1799" [label = <(&lt;operator&gt;.assignment,policy.key = kQueryKeyRenewAllowed)<SUB>318</SUB>> ]
+"1804" [label = <(push_back,mPlayPolicy.push_back(policy))<SUB>319</SUB>> ]
+"1765" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.clear)<SUB>307</SUB>> ]
+"1770" [label = <(&lt;operator&gt;.fieldAccess,policy.key)<SUB>310</SUB>> ]
+"1775" [label = <(&lt;operator&gt;.fieldAccess,policy.value)<SUB>311</SUB>> ]
+"1780" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.push_back)<SUB>312</SUB>> ]
+"1785" [label = <(&lt;operator&gt;.fieldAccess,policy.key)<SUB>314</SUB>> ]
+"1790" [label = <(&lt;operator&gt;.fieldAccess,policy.value)<SUB>315</SUB>> ]
+"1795" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.push_back)<SUB>316</SUB>> ]
+"1800" [label = <(&lt;operator&gt;.fieldAccess,policy.key)<SUB>318</SUB>> ]
+"1805" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.push_back)<SUB>319</SUB>> ]
+"1767" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>307</SUB>> ]
+"1772" [label = <(FIELD_IDENTIFIER,key,key)<SUB>310</SUB>> ]
+"1777" [label = <(FIELD_IDENTIFIER,value,value)<SUB>311</SUB>> ]
+"1782" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>312</SUB>> ]
+"1787" [label = <(FIELD_IDENTIFIER,key,key)<SUB>314</SUB>> ]
+"1792" [label = <(FIELD_IDENTIFIER,value,value)<SUB>315</SUB>> ]
+"1797" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>316</SUB>> ]
+"1802" [label = <(FIELD_IDENTIFIER,key,key)<SUB>318</SUB>> ]
+"1807" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>319</SUB>> ]
+"1762" [label = <(METHOD,setPlayPolicy)<SUB>306</SUB>> ]
+"1809" [label = <(METHOD_RETURN,void)<SUB>306</SUB>> ]
+  "1764" -> "1772" 
+  "1769" -> "1777" 
+  "1774" -> "1782" 
+  "1779" -> "1787" 
+  "1784" -> "1792" 
+  "1789" -> "1797" 
+  "1794" -> "1802" 
+  "1799" -> "1807" 
+  "1804" -> "1809" 
+  "1765" -> "1764" 
+  "1770" -> "1769" 
+  "1775" -> "1774" 
+  "1780" -> "1779" 
+  "1785" -> "1784" 
+  "1790" -> "1789" 
+  "1795" -> "1794" 
+  "1800" -> "1799" 
+  "1805" -> "1804" 
+  "1767" -> "1765" 
+  "1772" -> "1770" 
+  "1777" -> "1775" 
+  "1782" -> "1780" 
+  "1787" -> "1785" 
+  "1792" -> "1790" 
+  "1797" -> "1795" 
+  "1802" -> "1800" 
+  "1807" -> "1805" 
+  "1762" -> "1767" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/69-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/69-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/69-cfg.dot	2023-06-07 19:37:50.937374261 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/69-cfg.dot	2023-06-07 19:37:55.457374364 +0330
@@ -1,141 +1,141 @@
 digraph "makeKeySetId" {  
-"1826" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; ksid(kKeySetIdPrefix.begin(), kKeySetIdPrefix.end()))<SUB>328</SUB>> ]
-"1841" [label = <(resize,ksid.resize(kKeySetIdLength))<SUB>329</SUB>> ]
-"1846" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; randomData((kKeySetIdLength - kKeySetIdPrefix.size()) / 2, 0))<SUB>330</SUB>> ]
-"1925" [label = <(RETURN,return true;,return true;)<SUB>344</SUB>> ]
-"1819" [label = <(&lt;operator&gt;.logicalNot,!keySetId)<SUB>324</SUB>> ]
-"1827" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>328</SUB>> ]
-"1832" [label = <(ksid,ksid(kKeySetIdPrefix.begin(), kKeySetIdPrefix.end()))<SUB>328</SUB>> ]
-"1842" [label = <(&lt;operator&gt;.fieldAccess,ksid.resize)<SUB>329</SUB>> ]
-"1847" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>330</SUB>> ]
-"1852" [label = <(randomData,randomData((kKeySetIdLength - kKeySetIdPrefix.size()) / 2, 0))<SUB>330</SUB>> ]
-"1863" [label = <(empty,keySetId-&gt;empty())<SUB>332</SUB>> ]
-"1822" [label = <(ALOGE,ALOGE(&quot;keySetId destination not provided&quot;))<SUB>325</SUB>> ]
-"1824" [label = <(RETURN,return false;,return false;)<SUB>326</SUB>> ]
-"1828" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>328</SUB>> ]
-"1833" [label = <(begin,kKeySetIdPrefix.begin())<SUB>328</SUB>> ]
-"1837" [label = <(end,kKeySetIdPrefix.end())<SUB>328</SUB>> ]
-"1844" [label = <(FIELD_IDENTIFIER,resize,resize)<SUB>329</SUB>> ]
-"1848" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>330</SUB>> ]
-"1853" [label = <(&lt;operator&gt;.division,(kKeySetIdLength - kKeySetIdPrefix.size()) / 2)<SUB>330</SUB>> ]
-"1864" [label = <(&lt;operator&gt;.indirectFieldAccess,keySetId-&gt;empty)<SUB>332</SUB>> ]
-"1895" [label = <(&lt;operator&gt;.assignment,*keySetId = kKeySetIdPrefix + ByteArrayToHexString(\012 reinterpret_cast&lt;const uint8_t*&gt;(randomData.data()), randomData.size()))<SUB>336</SUB>> ]
-"1830" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>328</SUB>> ]
-"1834" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.begin)<SUB>328</SUB>> ]
-"1838" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.end)<SUB>328</SUB>> ]
-"1850" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>330</SUB>> ]
-"1854" [label = <(&lt;operator&gt;.subtraction,kKeySetIdLength - kKeySetIdPrefix.size())<SUB>330</SUB>> ]
-"1866" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>332</SUB>> ]
-"1877" [label = <(&lt;operator&gt;.notEquals,itr != randomData.end())<SUB>333</SUB>> ]
-"1883" [label = <(&lt;operator&gt;.preIncrement,++itr)<SUB>333</SUB>> ]
-"1896" [label = <(&lt;operator&gt;.indirection,*keySetId)<SUB>336</SUB>> ]
-"1898" [label = <(&lt;operator&gt;.addition,kKeySetIdPrefix + ByteArrayToHexString(\012 reinterpret_cast&lt;const uint8_t*&gt;(randomData.data()), randomData.size()))<SUB>336</SUB>> ]
-"1912" [label = <(LicenseExists,mFileHandle.LicenseExists(*keySetId))<SUB>338</SUB>> ]
-"1836" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>328</SUB>> ]
-"1840" [label = <(FIELD_IDENTIFIER,end,end)<SUB>328</SUB>> ]
-"1856" [label = <(size,kKeySetIdPrefix.size())<SUB>330</SUB>> ]
-"1871" [label = <(&lt;operator&gt;.assignment,itr = randomData.begin())<SUB>333</SUB>> ]
-"1879" [label = <(end,randomData.end())<SUB>333</SUB>> ]
-"1886" [label = <(&lt;operator&gt;.assignment,*itr = std::rand() % 0xff)<SUB>334</SUB>> ]
-"1900" [label = <(ByteArrayToHexString,ByteArrayToHexString(\012 reinterpret_cast&lt;const uint8_t*&gt;(randomData.data()), randomData.size()))<SUB>336</SUB>> ]
-"1913" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.LicenseExists)<SUB>338</SUB>> ]
-"1916" [label = <(&lt;operator&gt;.indirection,*keySetId)<SUB>338</SUB>> ]
-"1919" [label = <(ALOGV,ALOGV(&quot;Retry generating KeySetId&quot;))<SUB>340</SUB>> ]
-"1921" [label = <(clear,keySetId-&gt;clear())<SUB>341</SUB>> ]
-"1857" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.size)<SUB>330</SUB>> ]
-"1873" [label = <(begin,randomData.begin())<SUB>333</SUB>> ]
-"1880" [label = <(&lt;operator&gt;.fieldAccess,randomData.end)<SUB>333</SUB>> ]
-"1887" [label = <(&lt;operator&gt;.indirection,*itr)<SUB>334</SUB>> ]
-"1889" [label = <(&lt;operator&gt;.modulo,std::rand() % 0xff)<SUB>334</SUB>> ]
-"1901" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;const uint8_t*&gt;(randomData.data()))<SUB>337</SUB>> ]
-"1907" [label = <(size,randomData.size())<SUB>337</SUB>> ]
-"1915" [label = <(FIELD_IDENTIFIER,LicenseExists,LicenseExists)<SUB>338</SUB>> ]
-"1922" [label = <(&lt;operator&gt;.indirectFieldAccess,keySetId-&gt;clear)<SUB>341</SUB>> ]
-"1859" [label = <(FIELD_IDENTIFIER,size,size)<SUB>330</SUB>> ]
-"1874" [label = <(&lt;operator&gt;.fieldAccess,randomData.begin)<SUB>333</SUB>> ]
-"1882" [label = <(FIELD_IDENTIFIER,end,end)<SUB>333</SUB>> ]
-"1890" [label = <(std::rand,std::rand())<SUB>334</SUB>> ]
-"1902" [label = <(UNKNOWN,const uint8_t*,const uint8_t*)<SUB>337</SUB>> ]
-"1903" [label = <(data,randomData.data())<SUB>337</SUB>> ]
-"1908" [label = <(&lt;operator&gt;.fieldAccess,randomData.size)<SUB>337</SUB>> ]
-"1924" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>341</SUB>> ]
-"1876" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>333</SUB>> ]
-"1891" [label = <(&lt;operator&gt;.fieldAccess,std::rand)<SUB>334</SUB>> ]
-"1904" [label = <(&lt;operator&gt;.fieldAccess,randomData.data)<SUB>337</SUB>> ]
-"1910" [label = <(FIELD_IDENTIFIER,size,size)<SUB>337</SUB>> ]
-"1893" [label = <(FIELD_IDENTIFIER,rand,rand)<SUB>334</SUB>> ]
-"1906" [label = <(FIELD_IDENTIFIER,data,data)<SUB>337</SUB>> ]
-"1815" [label = <(METHOD,makeKeySetId)<SUB>323</SUB>> ]
-"1927" [label = <(METHOD_RETURN,bool)<SUB>323</SUB>> ]
-  "1826" -> "1844" 
-  "1841" -> "1850" 
-  "1846" -> "1866" 
-  "1925" -> "1927" 
-  "1819" -> "1822" 
-  "1819" -> "1830" 
-  "1827" -> "1836" 
-  "1832" -> "1826" 
-  "1842" -> "1841" 
-  "1847" -> "1859" 
-  "1852" -> "1846" 
-  "1863" -> "1876" 
-  "1863" -> "1925" 
-  "1822" -> "1824" 
-  "1824" -> "1927" 
-  "1828" -> "1827" 
-  "1833" -> "1840" 
-  "1837" -> "1832" 
-  "1844" -> "1842" 
-  "1848" -> "1847" 
-  "1853" -> "1852" 
-  "1864" -> "1863" 
-  "1895" -> "1915" 
-  "1830" -> "1828" 
-  "1834" -> "1833" 
+"1822" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; ksid(kKeySetIdPrefix.begin(), kKeySetIdPrefix.end()))<SUB>327</SUB>> ]
+"1837" [label = <(resize,ksid.resize(kKeySetIdLength))<SUB>328</SUB>> ]
+"1842" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; randomData((kKeySetIdLength - kKeySetIdPrefix.size()) / 2, 0))<SUB>329</SUB>> ]
+"1921" [label = <(RETURN,return true;,return true;)<SUB>343</SUB>> ]
+"1815" [label = <(&lt;operator&gt;.logicalNot,!keySetId)<SUB>323</SUB>> ]
+"1823" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>327</SUB>> ]
+"1828" [label = <(ksid,ksid(kKeySetIdPrefix.begin(), kKeySetIdPrefix.end()))<SUB>327</SUB>> ]
+"1838" [label = <(&lt;operator&gt;.fieldAccess,ksid.resize)<SUB>328</SUB>> ]
+"1843" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>329</SUB>> ]
+"1848" [label = <(randomData,randomData((kKeySetIdLength - kKeySetIdPrefix.size()) / 2, 0))<SUB>329</SUB>> ]
+"1859" [label = <(empty,keySetId-&gt;empty())<SUB>331</SUB>> ]
+"1818" [label = <(ALOGE,ALOGE(&quot;keySetId destination not provided&quot;))<SUB>324</SUB>> ]
+"1820" [label = <(RETURN,return false;,return false;)<SUB>325</SUB>> ]
+"1824" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>327</SUB>> ]
+"1829" [label = <(begin,kKeySetIdPrefix.begin())<SUB>327</SUB>> ]
+"1833" [label = <(end,kKeySetIdPrefix.end())<SUB>327</SUB>> ]
+"1840" [label = <(FIELD_IDENTIFIER,resize,resize)<SUB>328</SUB>> ]
+"1844" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>329</SUB>> ]
+"1849" [label = <(&lt;operator&gt;.division,(kKeySetIdLength - kKeySetIdPrefix.size()) / 2)<SUB>329</SUB>> ]
+"1860" [label = <(&lt;operator&gt;.indirectFieldAccess,keySetId-&gt;empty)<SUB>331</SUB>> ]
+"1891" [label = <(&lt;operator&gt;.assignment,*keySetId = kKeySetIdPrefix + ByteArrayToHexString(\012 reinterpret_cast&lt;const uint8_t*&gt;(randomData.data()), randomData.size()))<SUB>335</SUB>> ]
+"1826" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>327</SUB>> ]
+"1830" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.begin)<SUB>327</SUB>> ]
+"1834" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.end)<SUB>327</SUB>> ]
+"1846" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>329</SUB>> ]
+"1850" [label = <(&lt;operator&gt;.subtraction,kKeySetIdLength - kKeySetIdPrefix.size())<SUB>329</SUB>> ]
+"1862" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>331</SUB>> ]
+"1873" [label = <(&lt;operator&gt;.notEquals,itr != randomData.end())<SUB>332</SUB>> ]
+"1879" [label = <(&lt;operator&gt;.preIncrement,++itr)<SUB>332</SUB>> ]
+"1892" [label = <(&lt;operator&gt;.indirection,*keySetId)<SUB>335</SUB>> ]
+"1894" [label = <(&lt;operator&gt;.addition,kKeySetIdPrefix + ByteArrayToHexString(\012 reinterpret_cast&lt;const uint8_t*&gt;(randomData.data()), randomData.size()))<SUB>335</SUB>> ]
+"1908" [label = <(LicenseExists,mFileHandle.LicenseExists(*keySetId))<SUB>337</SUB>> ]
+"1832" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>327</SUB>> ]
+"1836" [label = <(FIELD_IDENTIFIER,end,end)<SUB>327</SUB>> ]
+"1852" [label = <(size,kKeySetIdPrefix.size())<SUB>329</SUB>> ]
+"1867" [label = <(&lt;operator&gt;.assignment,itr = randomData.begin())<SUB>332</SUB>> ]
+"1875" [label = <(end,randomData.end())<SUB>332</SUB>> ]
+"1882" [label = <(&lt;operator&gt;.assignment,*itr = std::rand() % 0xff)<SUB>333</SUB>> ]
+"1896" [label = <(ByteArrayToHexString,ByteArrayToHexString(\012 reinterpret_cast&lt;const uint8_t*&gt;(randomData.data()), randomData.size()))<SUB>335</SUB>> ]
+"1909" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.LicenseExists)<SUB>337</SUB>> ]
+"1912" [label = <(&lt;operator&gt;.indirection,*keySetId)<SUB>337</SUB>> ]
+"1915" [label = <(ALOGV,ALOGV(&quot;Retry generating KeySetId&quot;))<SUB>339</SUB>> ]
+"1917" [label = <(clear,keySetId-&gt;clear())<SUB>340</SUB>> ]
+"1853" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.size)<SUB>329</SUB>> ]
+"1869" [label = <(begin,randomData.begin())<SUB>332</SUB>> ]
+"1876" [label = <(&lt;operator&gt;.fieldAccess,randomData.end)<SUB>332</SUB>> ]
+"1883" [label = <(&lt;operator&gt;.indirection,*itr)<SUB>333</SUB>> ]
+"1885" [label = <(&lt;operator&gt;.modulo,std::rand() % 0xff)<SUB>333</SUB>> ]
+"1897" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;const uint8_t*&gt;(randomData.data()))<SUB>336</SUB>> ]
+"1903" [label = <(size,randomData.size())<SUB>336</SUB>> ]
+"1911" [label = <(FIELD_IDENTIFIER,LicenseExists,LicenseExists)<SUB>337</SUB>> ]
+"1918" [label = <(&lt;operator&gt;.indirectFieldAccess,keySetId-&gt;clear)<SUB>340</SUB>> ]
+"1855" [label = <(FIELD_IDENTIFIER,size,size)<SUB>329</SUB>> ]
+"1870" [label = <(&lt;operator&gt;.fieldAccess,randomData.begin)<SUB>332</SUB>> ]
+"1878" [label = <(FIELD_IDENTIFIER,end,end)<SUB>332</SUB>> ]
+"1886" [label = <(std::rand,std::rand())<SUB>333</SUB>> ]
+"1898" [label = <(UNKNOWN,const uint8_t*,const uint8_t*)<SUB>336</SUB>> ]
+"1899" [label = <(data,randomData.data())<SUB>336</SUB>> ]
+"1904" [label = <(&lt;operator&gt;.fieldAccess,randomData.size)<SUB>336</SUB>> ]
+"1920" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>340</SUB>> ]
+"1872" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>332</SUB>> ]
+"1887" [label = <(&lt;operator&gt;.fieldAccess,std::rand)<SUB>333</SUB>> ]
+"1900" [label = <(&lt;operator&gt;.fieldAccess,randomData.data)<SUB>336</SUB>> ]
+"1906" [label = <(FIELD_IDENTIFIER,size,size)<SUB>336</SUB>> ]
+"1889" [label = <(FIELD_IDENTIFIER,rand,rand)<SUB>333</SUB>> ]
+"1902" [label = <(FIELD_IDENTIFIER,data,data)<SUB>336</SUB>> ]
+"1811" [label = <(METHOD,makeKeySetId)<SUB>322</SUB>> ]
+"1923" [label = <(METHOD_RETURN,bool)<SUB>322</SUB>> ]
+  "1822" -> "1840" 
+  "1837" -> "1846" 
+  "1842" -> "1862" 
+  "1921" -> "1923" 
+  "1815" -> "1818" 
+  "1815" -> "1826" 
+  "1823" -> "1832" 
+  "1828" -> "1822" 
   "1838" -> "1837" 
-  "1850" -> "1848" 
-  "1854" -> "1853" 
-  "1866" -> "1864" 
-  "1877" -> "1887" 
-  "1877" -> "1896" 
-  "1883" -> "1882" 
-  "1896" -> "1902" 
-  "1898" -> "1895" 
-  "1912" -> "1866" 
-  "1912" -> "1919" 
-  "1836" -> "1834" 
+  "1843" -> "1855" 
+  "1848" -> "1842" 
+  "1859" -> "1872" 
+  "1859" -> "1921" 
+  "1818" -> "1820" 
+  "1820" -> "1923" 
+  "1824" -> "1823" 
+  "1829" -> "1836" 
+  "1833" -> "1828" 
   "1840" -> "1838" 
-  "1856" -> "1854" 
-  "1871" -> "1882" 
-  "1879" -> "1877" 
-  "1886" -> "1883" 
-  "1900" -> "1898" 
-  "1913" -> "1916" 
-  "1916" -> "1912" 
-  "1919" -> "1924" 
-  "1921" -> "1866" 
-  "1857" -> "1856" 
-  "1873" -> "1871" 
-  "1880" -> "1879" 
-  "1887" -> "1893" 
-  "1889" -> "1886" 
-  "1901" -> "1910" 
-  "1907" -> "1900" 
-  "1915" -> "1913" 
-  "1922" -> "1921" 
-  "1859" -> "1857" 
-  "1874" -> "1873" 
-  "1882" -> "1880" 
-  "1890" -> "1889" 
-  "1902" -> "1906" 
-  "1903" -> "1901" 
-  "1908" -> "1907" 
-  "1924" -> "1922" 
-  "1876" -> "1874" 
-  "1891" -> "1890" 
+  "1844" -> "1843" 
+  "1849" -> "1848" 
+  "1860" -> "1859" 
+  "1891" -> "1911" 
+  "1826" -> "1824" 
+  "1830" -> "1829" 
+  "1834" -> "1833" 
+  "1846" -> "1844" 
+  "1850" -> "1849" 
+  "1862" -> "1860" 
+  "1873" -> "1883" 
+  "1873" -> "1892" 
+  "1879" -> "1878" 
+  "1892" -> "1898" 
+  "1894" -> "1891" 
+  "1908" -> "1862" 
+  "1908" -> "1915" 
+  "1832" -> "1830" 
+  "1836" -> "1834" 
+  "1852" -> "1850" 
+  "1867" -> "1878" 
+  "1875" -> "1873" 
+  "1882" -> "1879" 
+  "1896" -> "1894" 
+  "1909" -> "1912" 
+  "1912" -> "1908" 
+  "1915" -> "1920" 
+  "1917" -> "1862" 
+  "1853" -> "1852" 
+  "1869" -> "1867" 
+  "1876" -> "1875" 
+  "1883" -> "1889" 
+  "1885" -> "1882" 
+  "1897" -> "1906" 
+  "1903" -> "1896" 
+  "1911" -> "1909" 
+  "1918" -> "1917" 
+  "1855" -> "1853" 
+  "1870" -> "1869" 
+  "1878" -> "1876" 
+  "1886" -> "1885" 
+  "1898" -> "1902" 
+  "1899" -> "1897" 
   "1904" -> "1903" 
-  "1910" -> "1908" 
-  "1893" -> "1891" 
+  "1920" -> "1918" 
+  "1872" -> "1870" 
+  "1887" -> "1886" 
+  "1900" -> "1899" 
   "1906" -> "1904" 
-  "1815" -> "1819" 
+  "1889" -> "1887" 
+  "1902" -> "1900" 
+  "1811" -> "1815" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/70-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/70-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/70-cfg.dot	2023-06-07 19:37:50.947374264 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/70-cfg.dot	2023-06-07 19:37:55.467374365 +0330
@@ -1,508 +1,508 @@
 digraph "provideKeyResponse" {  
-"1957" [label = <(responseString,responseString(\012 reinterpret_cast&lt;const char*&gt;(response.data()), response.size()))<SUB>357</SUB>> ]
-"1969" [label = <(&lt;operator&gt;.assignment,scopeId = toVector(scope))<SUB>359</SUB>> ]
-"1973" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sessionId)<SUB>360</SUB>> ]
-"1982" [label = <(&lt;operator&gt;.assignment,status = Status::OK)<SUB>363</SUB>> ]
-"1988" [label = <(&lt;operator&gt;.assignment,isOfflineLicense = responseString.find(kOfflineLicense) != std::string::npos)<SUB>364</SUB>> ]
-"2023" [label = <(&lt;operator&gt;.assignment,isRelease = (memcmp(scopeId.data(), kKeySetIdPrefix.data(), kKeySetIdPrefix.size()) == 0))<SUB>370</SUB>> ]
-"2116" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;findSession(sessionId))<SUB>384</SUB>> ]
-"2141" [label = <(setPlayPolicy,setPlayPolicy())<SUB>389</SUB>> ]
-"2142" [label = <(&lt;operator&gt;.assignment,status = session-&gt;provideKeyResponse(response))<SUB>391</SUB>> ]
-"2318" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keySetIdVec(keySetId.begin(), keySetId.end()))<SUB>443</SUB>> ]
-"2333" [label = <(_hidl_cb,_hidl_cb(status, toHidlVec(keySetIdVec)))<SUB>444</SUB>> ]
-"2337" [label = <(RETURN,return Void();,return Void();)<SUB>445</SUB>> ]
-"1935" [label = <(&lt;operator&gt;.logicalOr,scope.size() == 0 || response.size() == 0)<SUB>351</SUB>> ]
-"1958" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;const char*&gt;(response.data()))<SUB>358</SUB>> ]
-"1964" [label = <(size,response.size())<SUB>358</SUB>> ]
-"1971" [label = <(toVector,toVector(scope))<SUB>359</SUB>> ]
-"1974" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>360</SUB>> ]
-"1984" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>363</SUB>> ]
-"1990" [label = <(&lt;operator&gt;.notEquals,responseString.find(kOfflineLicense) != std::string::npos)<SUB>364</SUB>> ]
-"2002" [label = <(&lt;operator&gt;.lessThan,scopeId.size() &lt; kKeySetIdPrefix.size())<SUB>365</SUB>> ]
-"2025" [label = <(&lt;operator&gt;.equals,memcmp(scopeId.data(), kKeySetIdPrefix.data(), kKeySetIdPrefix.size()) == 0)<SUB>370</SUB>> ]
-"2117" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>384</SUB>> ]
-"2122" [label = <(findSession,mSessionLibrary-&gt;findSession(sessionId))<SUB>384</SUB>> ]
-"2128" [label = <(&lt;operator&gt;.logicalNot,!session.get())<SUB>385</SUB>> ]
-"2144" [label = <(provideKeyResponse,session-&gt;provideKeyResponse(response))<SUB>391</SUB>> ]
-"2150" [label = <(&lt;operator&gt;.equals,status == Status::OK)<SUB>392</SUB>> ]
-"2319" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>443</SUB>> ]
-"2324" [label = <(keySetIdVec,keySetIdVec(keySetId.begin(), keySetId.end()))<SUB>443</SUB>> ]
-"2335" [label = <(toHidlVec,toHidlVec(keySetIdVec))<SUB>444</SUB>> ]
-"2338" [label = <(Void,Void())<SUB>445</SUB>> ]
-"1936" [label = <(&lt;operator&gt;.equals,scope.size() == 0)<SUB>351</SUB>> ]
-"1942" [label = <(&lt;operator&gt;.equals,response.size() == 0)<SUB>351</SUB>> ]
-"1949" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;()))<SUB>353</SUB>> ]
-"1954" [label = <(RETURN,return Void();,return Void();)<SUB>354</SUB>> ]
-"1959" [label = <(UNKNOWN,const char*,const char*)<SUB>358</SUB>> ]
-"1960" [label = <(data,response.data())<SUB>358</SUB>> ]
-"1965" [label = <(&lt;operator&gt;.fieldAccess,response.size)<SUB>358</SUB>> ]
-"1975" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>360</SUB>> ]
-"1986" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>363</SUB>> ]
-"1991" [label = <(find,responseString.find(kOfflineLicense))<SUB>364</SUB>> ]
-"1996" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>364</SUB>> ]
-"2003" [label = <(size,scopeId.size())<SUB>365</SUB>> ]
-"2007" [label = <(size,kKeySetIdPrefix.size())<SUB>365</SUB>> ]
-"2012" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;144507096&quot;))<SUB>366</SUB>> ]
-"2015" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;()))<SUB>367</SUB>> ]
-"2020" [label = <(RETURN,return Void();,return Void();)<SUB>368</SUB>> ]
-"2026" [label = <(memcmp,memcmp(scopeId.data(), kKeySetIdPrefix.data(), kKeySetIdPrefix.size()))<SUB>370</SUB>> ]
-"2043" [label = <(assign,keySetId.assign(scopeId.begin(), scopeId.end()))<SUB>372</SUB>> ]
-"2056" [label = <(&lt;operator&gt;.assignment,iter = mReleaseKeysMap.find(std::string(keySetId.begin(), keySetId.end())))<SUB>374</SUB>> ]
-"2118" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>384</SUB>> ]
-"2123" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>384</SUB>> ]
-"2129" [label = <(get,session.get())<SUB>385</SUB>> ]
-"2134" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_SESSION_NOT_OPENED, hidl_vec&lt;uint8_t&gt;()))<SUB>386</SUB>> ]
-"2139" [label = <(RETURN,return Void();,return Void();)<SUB>387</SUB>> ]
-"2145" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;provideKeyResponse)<SUB>391</SUB>> ]
-"2152" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>392</SUB>> ]
-"2216" [label = <(sendEvent,sendEvent(EventType::VENDOR_DEFINED, sessionId, sessionId))<SUB>414</SUB>> ]
-"2222" [label = <(sendExpirationUpdate,sendExpirationUpdate(sessionId, 100))<SUB>416</SUB>> ]
-"2227" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; keyId1 = { 0xA, 0xB, 0xC })<SUB>421</SUB>> ]
-"2235" [label = <(&lt;operator&gt;.assignment,keyStatus.keyId = keyId1)<SUB>422</SUB>> ]
-"2240" [label = <(&lt;operator&gt;.assignment,keyStatus.type = V1_2::KeyStatusType::USABLE)<SUB>423</SUB>> ]
-"2249" [label = <(push_back,keysStatus.push_back(keyStatus))<SUB>424</SUB>> ]
-"2254" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; keyId2 = { 0xD, 0xE, 0xF })<SUB>426</SUB>> ]
-"2262" [label = <(&lt;operator&gt;.assignment,keyStatus.keyId = keyId2)<SUB>427</SUB>> ]
-"2267" [label = <(&lt;operator&gt;.assignment,keyStatus.type = V1_2::KeyStatusType::EXPIRED)<SUB>428</SUB>> ]
-"2276" [label = <(push_back,keysStatus.push_back(keyStatus))<SUB>429</SUB>> ]
-"2281" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; keyId3 = { 0x0, 0x1, 0x2 })<SUB>431</SUB>> ]
-"2289" [label = <(&lt;operator&gt;.assignment,keyStatus.keyId = keyId3)<SUB>432</SUB>> ]
-"2294" [label = <(&lt;operator&gt;.assignment,keyStatus.type = V1_2::KeyStatusType::USABLEINFUTURE)<SUB>433</SUB>> ]
-"2303" [label = <(push_back,keysStatus.push_back(keyStatus))<SUB>434</SUB>> ]
-"2308" [label = <(sendKeysChange_1_2,sendKeysChange_1_2(sessionId, keysStatus, true))<SUB>436</SUB>> ]
-"2320" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>443</SUB>> ]
-"2325" [label = <(begin,keySetId.begin())<SUB>443</SUB>> ]
-"2329" [label = <(end,keySetId.end())<SUB>443</SUB>> ]
-"1937" [label = <(size,scope.size())<SUB>351</SUB>> ]
-"1943" [label = <(size,response.size())<SUB>351</SUB>> ]
-"1950" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>353</SUB>> ]
-"1953" [label = <(hidl_vec&lt;uint8_t&gt;,hidl_vec&lt;uint8_t&gt;())<SUB>353</SUB>> ]
-"1955" [label = <(Void,Void())<SUB>354</SUB>> ]
-"1961" [label = <(&lt;operator&gt;.fieldAccess,response.data)<SUB>358</SUB>> ]
-"1967" [label = <(FIELD_IDENTIFIER,size,size)<SUB>358</SUB>> ]
-"1977" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>360</SUB>> ]
-"1992" [label = <(&lt;operator&gt;.fieldAccess,responseString.find)<SUB>364</SUB>> ]
-"1997" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>364</SUB>> ]
-"2000" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>364</SUB>> ]
-"2004" [label = <(&lt;operator&gt;.fieldAccess,scopeId.size)<SUB>365</SUB>> ]
-"2008" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.size)<SUB>365</SUB>> ]
-"2016" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_CANNOT_HANDLE)<SUB>367</SUB>> ]
-"2019" [label = <(hidl_vec&lt;uint8_t&gt;,hidl_vec&lt;uint8_t&gt;())<SUB>367</SUB>> ]
-"2021" [label = <(Void,Void())<SUB>368</SUB>> ]
-"2027" [label = <(data,scopeId.data())<SUB>370</SUB>> ]
-"2031" [label = <(data,kKeySetIdPrefix.data())<SUB>370</SUB>> ]
-"2035" [label = <(size,kKeySetIdPrefix.size())<SUB>370</SUB>> ]
-"2044" [label = <(&lt;operator&gt;.fieldAccess,keySetId.assign)<SUB>372</SUB>> ]
-"2047" [label = <(begin,scopeId.begin())<SUB>372</SUB>> ]
-"2051" [label = <(end,scopeId.end())<SUB>372</SUB>> ]
-"2058" [label = <(find,mReleaseKeysMap.find(std::string(keySetId.begin(), keySetId.end())))<SUB>374</SUB>> ]
-"2075" [label = <(&lt;operator&gt;.notEquals,iter != mReleaseKeysMap.end())<SUB>375</SUB>> ]
-"2100" [label = <(assign,sessionId.assign(scopeId.begin(), scopeId.end()))<SUB>379</SUB>> ]
-"2112" [label = <(clear,keySetId.clear())<SUB>381</SUB>> ]
-"2125" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>384</SUB>> ]
-"2130" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>385</SUB>> ]
-"2135" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>386</SUB>> ]
-"2138" [label = <(hidl_vec&lt;uint8_t&gt;,hidl_vec&lt;uint8_t&gt;())<SUB>386</SUB>> ]
-"2140" [label = <(Void,Void())<SUB>387</SUB>> ]
-"2147" [label = <(FIELD_IDENTIFIER,provideKeyResponse,provideKeyResponse)<SUB>391</SUB>> ]
-"2154" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>392</SUB>> ]
-"2217" [label = <(&lt;operator&gt;.fieldAccess,EventType::VENDOR_DEFINED)<SUB>414</SUB>> ]
-"2228" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keyId1)<SUB>421</SUB>> ]
-"2236" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.keyId)<SUB>422</SUB>> ]
-"2241" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.type)<SUB>423</SUB>> ]
-"2244" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType::USABLE)<SUB>423</SUB>> ]
-"2250" [label = <(&lt;operator&gt;.fieldAccess,keysStatus.push_back)<SUB>424</SUB>> ]
-"2255" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keyId2)<SUB>426</SUB>> ]
-"2263" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.keyId)<SUB>427</SUB>> ]
-"2268" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.type)<SUB>428</SUB>> ]
-"2271" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType::EXPIRED)<SUB>428</SUB>> ]
-"2277" [label = <(&lt;operator&gt;.fieldAccess,keysStatus.push_back)<SUB>429</SUB>> ]
-"2282" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keyId3)<SUB>431</SUB>> ]
-"2290" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.keyId)<SUB>432</SUB>> ]
-"2295" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.type)<SUB>433</SUB>> ]
-"2298" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType::USABLEINFUTURE)<SUB>433</SUB>> ]
-"2304" [label = <(&lt;operator&gt;.fieldAccess,keysStatus.push_back)<SUB>434</SUB>> ]
-"2315" [label = <(ALOGE,ALOGE(&quot;provideKeyResponse returns error=%d&quot;, status))<SUB>440</SUB>> ]
-"2322" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>443</SUB>> ]
-"2326" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>443</SUB>> ]
-"2330" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>443</SUB>> ]
-"1938" [label = <(&lt;operator&gt;.fieldAccess,scope.size)<SUB>351</SUB>> ]
-"1944" [label = <(&lt;operator&gt;.fieldAccess,response.size)<SUB>351</SUB>> ]
-"1952" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>353</SUB>> ]
-"1963" [label = <(FIELD_IDENTIFIER,data,data)<SUB>358</SUB>> ]
-"1994" [label = <(FIELD_IDENTIFIER,find,find)<SUB>364</SUB>> ]
-"2006" [label = <(FIELD_IDENTIFIER,size,size)<SUB>365</SUB>> ]
-"2010" [label = <(FIELD_IDENTIFIER,size,size)<SUB>365</SUB>> ]
-"2018" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>367</SUB>> ]
-"2028" [label = <(&lt;operator&gt;.fieldAccess,scopeId.data)<SUB>370</SUB>> ]
-"2032" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.data)<SUB>370</SUB>> ]
-"2036" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.size)<SUB>370</SUB>> ]
-"2046" [label = <(FIELD_IDENTIFIER,assign,assign)<SUB>372</SUB>> ]
-"2048" [label = <(&lt;operator&gt;.fieldAccess,scopeId.begin)<SUB>372</SUB>> ]
-"2052" [label = <(&lt;operator&gt;.fieldAccess,scopeId.end)<SUB>372</SUB>> ]
-"2059" [label = <(&lt;operator&gt;.fieldAccess,mReleaseKeysMap.find)<SUB>374</SUB>> ]
-"2062" [label = <(std::string,std::string(keySetId.begin(), keySetId.end()))<SUB>374</SUB>> ]
-"2077" [label = <(end,mReleaseKeysMap.end())<SUB>375</SUB>> ]
-"2082" [label = <(assign,sessionId.assign(iter-&gt;second.begin(), iter-&gt;second.end()))<SUB>376</SUB>> ]
-"2101" [label = <(&lt;operator&gt;.fieldAccess,sessionId.assign)<SUB>379</SUB>> ]
-"2104" [label = <(begin,scopeId.begin())<SUB>379</SUB>> ]
-"2108" [label = <(end,scopeId.end())<SUB>379</SUB>> ]
-"2113" [label = <(&lt;operator&gt;.fieldAccess,keySetId.clear)<SUB>381</SUB>> ]
-"2132" [label = <(FIELD_IDENTIFIER,get,get)<SUB>385</SUB>> ]
-"2137" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>386</SUB>> ]
-"2219" [label = <(FIELD_IDENTIFIER,VENDOR_DEFINED,VENDOR_DEFINED)<SUB>414</SUB>> ]
-"2229" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>421</SUB>> ]
-"2238" [label = <(FIELD_IDENTIFIER,keyId,keyId)<SUB>422</SUB>> ]
-"2243" [label = <(FIELD_IDENTIFIER,type,type)<SUB>423</SUB>> ]
-"2245" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType)<SUB>423</SUB>> ]
-"2248" [label = <(FIELD_IDENTIFIER,USABLE,USABLE)<SUB>423</SUB>> ]
-"2252" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>424</SUB>> ]
-"2256" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>426</SUB>> ]
-"2265" [label = <(FIELD_IDENTIFIER,keyId,keyId)<SUB>427</SUB>> ]
-"2270" [label = <(FIELD_IDENTIFIER,type,type)<SUB>428</SUB>> ]
-"2272" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType)<SUB>428</SUB>> ]
-"2275" [label = <(FIELD_IDENTIFIER,EXPIRED,EXPIRED)<SUB>428</SUB>> ]
-"2279" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>429</SUB>> ]
-"2283" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>431</SUB>> ]
-"2292" [label = <(FIELD_IDENTIFIER,keyId,keyId)<SUB>432</SUB>> ]
-"2297" [label = <(FIELD_IDENTIFIER,type,type)<SUB>433</SUB>> ]
-"2299" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType)<SUB>433</SUB>> ]
-"2302" [label = <(FIELD_IDENTIFIER,USABLEINFUTURE,USABLEINFUTURE)<SUB>433</SUB>> ]
-"2306" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>434</SUB>> ]
-"2328" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>443</SUB>> ]
-"2332" [label = <(FIELD_IDENTIFIER,end,end)<SUB>443</SUB>> ]
-"1940" [label = <(FIELD_IDENTIFIER,size,size)<SUB>351</SUB>> ]
-"1946" [label = <(FIELD_IDENTIFIER,size,size)<SUB>351</SUB>> ]
-"2030" [label = <(FIELD_IDENTIFIER,data,data)<SUB>370</SUB>> ]
-"2034" [label = <(FIELD_IDENTIFIER,data,data)<SUB>370</SUB>> ]
-"2038" [label = <(FIELD_IDENTIFIER,size,size)<SUB>370</SUB>> ]
-"2050" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>372</SUB>> ]
-"2054" [label = <(FIELD_IDENTIFIER,end,end)<SUB>372</SUB>> ]
-"2061" [label = <(FIELD_IDENTIFIER,find,find)<SUB>374</SUB>> ]
-"2063" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>374</SUB>> ]
-"2066" [label = <(begin,keySetId.begin())<SUB>374</SUB>> ]
-"2070" [label = <(end,keySetId.end())<SUB>374</SUB>> ]
-"2078" [label = <(&lt;operator&gt;.fieldAccess,mReleaseKeysMap.end)<SUB>375</SUB>> ]
-"2083" [label = <(&lt;operator&gt;.fieldAccess,sessionId.assign)<SUB>376</SUB>> ]
-"2086" [label = <(begin,iter-&gt;second.begin())<SUB>376</SUB>> ]
-"2092" [label = <(end,iter-&gt;second.end())<SUB>376</SUB>> ]
-"2103" [label = <(FIELD_IDENTIFIER,assign,assign)<SUB>379</SUB>> ]
-"2105" [label = <(&lt;operator&gt;.fieldAccess,scopeId.begin)<SUB>379</SUB>> ]
-"2109" [label = <(&lt;operator&gt;.fieldAccess,scopeId.end)<SUB>379</SUB>> ]
-"2115" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>381</SUB>> ]
-"2230" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>421</SUB>> ]
-"2257" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>426</SUB>> ]
-"2284" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>431</SUB>> ]
-"2065" [label = <(FIELD_IDENTIFIER,string,string)<SUB>374</SUB>> ]
-"2067" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>374</SUB>> ]
-"2071" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>374</SUB>> ]
-"2080" [label = <(FIELD_IDENTIFIER,end,end)<SUB>375</SUB>> ]
-"2085" [label = <(FIELD_IDENTIFIER,assign,assign)<SUB>376</SUB>> ]
-"2087" [label = <(&lt;operator&gt;.fieldAccess,iter-&gt;second.begin)<SUB>376</SUB>> ]
-"2093" [label = <(&lt;operator&gt;.fieldAccess,iter-&gt;second.end)<SUB>376</SUB>> ]
-"2107" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>379</SUB>> ]
-"2111" [label = <(FIELD_IDENTIFIER,end,end)<SUB>379</SUB>> ]
-"2162" [label = <(DeleteLicense,mFileHandle.DeleteLicense(keySetId))<SUB>395</SUB>> ]
-"2167" [label = <(destroySession,mSessionLibrary-&gt;destroySession(session))<SUB>396</SUB>> ]
-"2232" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>421</SUB>> ]
-"2259" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>426</SUB>> ]
-"2286" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>431</SUB>> ]
-"2069" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>374</SUB>> ]
-"2073" [label = <(FIELD_IDENTIFIER,end,end)<SUB>374</SUB>> ]
-"2088" [label = <(&lt;operator&gt;.indirectFieldAccess,iter-&gt;second)<SUB>376</SUB>> ]
-"2091" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>376</SUB>> ]
-"2094" [label = <(&lt;operator&gt;.indirectFieldAccess,iter-&gt;second)<SUB>376</SUB>> ]
-"2097" [label = <(FIELD_IDENTIFIER,end,end)<SUB>376</SUB>> ]
-"2163" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.DeleteLicense)<SUB>395</SUB>> ]
-"2168" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;destroySession)<SUB>396</SUB>> ]
-"2188" [label = <(&lt;operator&gt;.assignment,ok = mFileHandle.StoreLicense(\012                        keySetId,\012 DeviceFiles::kLicenseStateActive,\012                        std::string(response.begin(), response.end())))<SUB>403</SUB>> ]
-"2090" [label = <(FIELD_IDENTIFIER,second,second)<SUB>376</SUB>> ]
-"2096" [label = <(FIELD_IDENTIFIER,second,second)<SUB>376</SUB>> ]
-"2165" [label = <(FIELD_IDENTIFIER,DeleteLicense,DeleteLicense)<SUB>395</SUB>> ]
-"2170" [label = <(FIELD_IDENTIFIER,destroySession,destroySession)<SUB>396</SUB>> ]
-"2175" [label = <(&lt;operator&gt;.logicalNot,!makeKeySetId(&amp;keySetId))<SUB>398</SUB>> ]
-"2190" [label = <(StoreLicense,mFileHandle.StoreLicense(\012                        keySetId,\012 DeviceFiles::kLicenseStateActive,\012                        std::string(response.begin(), response.end())))<SUB>403</SUB>> ]
-"2211" [label = <(&lt;operator&gt;.logicalNot,!ok)<SUB>407</SUB>> ]
-"2176" [label = <(makeKeySetId,makeKeySetId(&amp;keySetId))<SUB>398</SUB>> ]
-"2180" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_UNKNOWN, hidl_vec&lt;uint8_t&gt;()))<SUB>399</SUB>> ]
-"2185" [label = <(RETURN,return Void();,return Void();)<SUB>400</SUB>> ]
-"2191" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.StoreLicense)<SUB>403</SUB>> ]
-"2195" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateActive)<SUB>405</SUB>> ]
-"2198" [label = <(std::string,std::string(response.begin(), response.end()))<SUB>406</SUB>> ]
-"2214" [label = <(ALOGE,ALOGE(&quot;Failed to store offline license&quot;))<SUB>408</SUB>> ]
-"2177" [label = <(&lt;operator&gt;.addressOf,&amp;keySetId)<SUB>398</SUB>> ]
-"2181" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_UNKNOWN)<SUB>399</SUB>> ]
-"2184" [label = <(hidl_vec&lt;uint8_t&gt;,hidl_vec&lt;uint8_t&gt;())<SUB>399</SUB>> ]
-"2186" [label = <(Void,Void())<SUB>400</SUB>> ]
-"2193" [label = <(FIELD_IDENTIFIER,StoreLicense,StoreLicense)<SUB>403</SUB>> ]
-"2197" [label = <(FIELD_IDENTIFIER,kLicenseStateActive,kLicenseStateActive)<SUB>405</SUB>> ]
-"2199" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>406</SUB>> ]
-"2202" [label = <(begin,response.begin())<SUB>406</SUB>> ]
-"2206" [label = <(end,response.end())<SUB>406</SUB>> ]
-"2183" [label = <(FIELD_IDENTIFIER,ERROR_DRM_UNKNOWN,ERROR_DRM_UNKNOWN)<SUB>399</SUB>> ]
-"2201" [label = <(FIELD_IDENTIFIER,string,string)<SUB>406</SUB>> ]
-"2203" [label = <(&lt;operator&gt;.fieldAccess,response.begin)<SUB>406</SUB>> ]
-"2207" [label = <(&lt;operator&gt;.fieldAccess,response.end)<SUB>406</SUB>> ]
-"2205" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>406</SUB>> ]
-"2209" [label = <(FIELD_IDENTIFIER,end,end)<SUB>406</SUB>> ]
-"1929" [label = <(METHOD,provideKeyResponse)<SUB>347</SUB>> ]
-"2339" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>347</SUB>> ]
-  "1957" -> "1971" 
-  "1969" -> "1977" 
-  "1973" -> "1986" 
-  "1982" -> "1994" 
-  "1988" -> "2006" 
-  "2023" -> "2046" 
-  "2023" -> "2103" 
-  "2116" -> "2132" 
-  "2141" -> "2147" 
-  "2142" -> "2154" 
-  "2318" -> "2335" 
-  "2333" -> "2338" 
-  "2337" -> "2339" 
-  "1935" -> "1959" 
-  "1935" -> "1952" 
-  "1958" -> "1967" 
-  "1964" -> "1957" 
-  "1971" -> "1969" 
-  "1974" -> "1973" 
-  "1984" -> "1982" 
-  "1990" -> "1988" 
-  "2002" -> "2012" 
-  "2002" -> "2030" 
-  "2025" -> "2023" 
-  "2117" -> "2125" 
-  "2122" -> "2116" 
-  "2128" -> "2141" 
-  "2128" -> "2137" 
-  "2144" -> "2142" 
-  "2150" -> "2165" 
-  "2150" -> "2177" 
-  "2150" -> "2219" 
-  "2150" -> "2315" 
-  "2319" -> "2328" 
-  "2324" -> "2318" 
-  "2335" -> "2333" 
-  "2338" -> "2337" 
-  "1936" -> "1935" 
-  "1936" -> "1946" 
-  "1942" -> "1935" 
-  "1949" -> "1955" 
-  "1954" -> "2339" 
-  "1959" -> "1963" 
-  "1960" -> "1958" 
-  "1965" -> "1964" 
-  "1975" -> "1974" 
+"1953" [label = <(responseString,responseString(\012 reinterpret_cast&lt;const char*&gt;(response.data()), response.size()))<SUB>356</SUB>> ]
+"1965" [label = <(&lt;operator&gt;.assignment,scopeId = toVector(scope))<SUB>358</SUB>> ]
+"1969" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sessionId)<SUB>359</SUB>> ]
+"1978" [label = <(&lt;operator&gt;.assignment,status = Status::OK)<SUB>362</SUB>> ]
+"1984" [label = <(&lt;operator&gt;.assignment,isOfflineLicense = responseString.find(kOfflineLicense) != std::string::npos)<SUB>363</SUB>> ]
+"2019" [label = <(&lt;operator&gt;.assignment,isRelease = (memcmp(scopeId.data(), kKeySetIdPrefix.data(), kKeySetIdPrefix.size()) == 0))<SUB>369</SUB>> ]
+"2112" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;findSession(sessionId))<SUB>383</SUB>> ]
+"2137" [label = <(setPlayPolicy,setPlayPolicy())<SUB>388</SUB>> ]
+"2138" [label = <(&lt;operator&gt;.assignment,status = session-&gt;provideKeyResponse(response))<SUB>390</SUB>> ]
+"2314" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keySetIdVec(keySetId.begin(), keySetId.end()))<SUB>442</SUB>> ]
+"2329" [label = <(_hidl_cb,_hidl_cb(status, toHidlVec(keySetIdVec)))<SUB>443</SUB>> ]
+"2333" [label = <(RETURN,return Void();,return Void();)<SUB>444</SUB>> ]
+"1931" [label = <(&lt;operator&gt;.logicalOr,scope.size() == 0 || response.size() == 0)<SUB>350</SUB>> ]
+"1954" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;const char*&gt;(response.data()))<SUB>357</SUB>> ]
+"1960" [label = <(size,response.size())<SUB>357</SUB>> ]
+"1967" [label = <(toVector,toVector(scope))<SUB>358</SUB>> ]
+"1970" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>359</SUB>> ]
+"1980" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>362</SUB>> ]
+"1986" [label = <(&lt;operator&gt;.notEquals,responseString.find(kOfflineLicense) != std::string::npos)<SUB>363</SUB>> ]
+"1998" [label = <(&lt;operator&gt;.lessThan,scopeId.size() &lt; kKeySetIdPrefix.size())<SUB>364</SUB>> ]
+"2021" [label = <(&lt;operator&gt;.equals,memcmp(scopeId.data(), kKeySetIdPrefix.data(), kKeySetIdPrefix.size()) == 0)<SUB>369</SUB>> ]
+"2113" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>383</SUB>> ]
+"2118" [label = <(findSession,mSessionLibrary-&gt;findSession(sessionId))<SUB>383</SUB>> ]
+"2124" [label = <(&lt;operator&gt;.logicalNot,!session.get())<SUB>384</SUB>> ]
+"2140" [label = <(provideKeyResponse,session-&gt;provideKeyResponse(response))<SUB>390</SUB>> ]
+"2146" [label = <(&lt;operator&gt;.equals,status == Status::OK)<SUB>391</SUB>> ]
+"2315" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>442</SUB>> ]
+"2320" [label = <(keySetIdVec,keySetIdVec(keySetId.begin(), keySetId.end()))<SUB>442</SUB>> ]
+"2331" [label = <(toHidlVec,toHidlVec(keySetIdVec))<SUB>443</SUB>> ]
+"2334" [label = <(Void,Void())<SUB>444</SUB>> ]
+"1932" [label = <(&lt;operator&gt;.equals,scope.size() == 0)<SUB>350</SUB>> ]
+"1938" [label = <(&lt;operator&gt;.equals,response.size() == 0)<SUB>350</SUB>> ]
+"1945" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;()))<SUB>352</SUB>> ]
+"1950" [label = <(RETURN,return Void();,return Void();)<SUB>353</SUB>> ]
+"1955" [label = <(UNKNOWN,const char*,const char*)<SUB>357</SUB>> ]
+"1956" [label = <(data,response.data())<SUB>357</SUB>> ]
+"1961" [label = <(&lt;operator&gt;.fieldAccess,response.size)<SUB>357</SUB>> ]
+"1971" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>359</SUB>> ]
+"1982" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>362</SUB>> ]
+"1987" [label = <(find,responseString.find(kOfflineLicense))<SUB>363</SUB>> ]
+"1992" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>363</SUB>> ]
+"1999" [label = <(size,scopeId.size())<SUB>364</SUB>> ]
+"2003" [label = <(size,kKeySetIdPrefix.size())<SUB>364</SUB>> ]
+"2008" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;144507096&quot;))<SUB>365</SUB>> ]
+"2011" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;()))<SUB>366</SUB>> ]
+"2016" [label = <(RETURN,return Void();,return Void();)<SUB>367</SUB>> ]
+"2022" [label = <(memcmp,memcmp(scopeId.data(), kKeySetIdPrefix.data(), kKeySetIdPrefix.size()))<SUB>369</SUB>> ]
+"2039" [label = <(assign,keySetId.assign(scopeId.begin(), scopeId.end()))<SUB>371</SUB>> ]
+"2052" [label = <(&lt;operator&gt;.assignment,iter = mReleaseKeysMap.find(std::string(keySetId.begin(), keySetId.end())))<SUB>373</SUB>> ]
+"2114" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>383</SUB>> ]
+"2119" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>383</SUB>> ]
+"2125" [label = <(get,session.get())<SUB>384</SUB>> ]
+"2130" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_SESSION_NOT_OPENED, hidl_vec&lt;uint8_t&gt;()))<SUB>385</SUB>> ]
+"2135" [label = <(RETURN,return Void();,return Void();)<SUB>386</SUB>> ]
+"2141" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;provideKeyResponse)<SUB>390</SUB>> ]
+"2148" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>391</SUB>> ]
+"2212" [label = <(sendEvent,sendEvent(EventType::VENDOR_DEFINED, sessionId, sessionId))<SUB>413</SUB>> ]
+"2218" [label = <(sendExpirationUpdate,sendExpirationUpdate(sessionId, 100))<SUB>415</SUB>> ]
+"2223" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; keyId1 = { 0xA, 0xB, 0xC })<SUB>420</SUB>> ]
+"2231" [label = <(&lt;operator&gt;.assignment,keyStatus.keyId = keyId1)<SUB>421</SUB>> ]
+"2236" [label = <(&lt;operator&gt;.assignment,keyStatus.type = V1_2::KeyStatusType::USABLE)<SUB>422</SUB>> ]
+"2245" [label = <(push_back,keysStatus.push_back(keyStatus))<SUB>423</SUB>> ]
+"2250" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; keyId2 = { 0xD, 0xE, 0xF })<SUB>425</SUB>> ]
+"2258" [label = <(&lt;operator&gt;.assignment,keyStatus.keyId = keyId2)<SUB>426</SUB>> ]
+"2263" [label = <(&lt;operator&gt;.assignment,keyStatus.type = V1_2::KeyStatusType::EXPIRED)<SUB>427</SUB>> ]
+"2272" [label = <(push_back,keysStatus.push_back(keyStatus))<SUB>428</SUB>> ]
+"2277" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; keyId3 = { 0x0, 0x1, 0x2 })<SUB>430</SUB>> ]
+"2285" [label = <(&lt;operator&gt;.assignment,keyStatus.keyId = keyId3)<SUB>431</SUB>> ]
+"2290" [label = <(&lt;operator&gt;.assignment,keyStatus.type = V1_2::KeyStatusType::USABLEINFUTURE)<SUB>432</SUB>> ]
+"2299" [label = <(push_back,keysStatus.push_back(keyStatus))<SUB>433</SUB>> ]
+"2304" [label = <(sendKeysChange_1_2,sendKeysChange_1_2(sessionId, keysStatus, true))<SUB>435</SUB>> ]
+"2316" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>442</SUB>> ]
+"2321" [label = <(begin,keySetId.begin())<SUB>442</SUB>> ]
+"2325" [label = <(end,keySetId.end())<SUB>442</SUB>> ]
+"1933" [label = <(size,scope.size())<SUB>350</SUB>> ]
+"1939" [label = <(size,response.size())<SUB>350</SUB>> ]
+"1946" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>352</SUB>> ]
+"1949" [label = <(hidl_vec&lt;uint8_t&gt;,hidl_vec&lt;uint8_t&gt;())<SUB>352</SUB>> ]
+"1951" [label = <(Void,Void())<SUB>353</SUB>> ]
+"1957" [label = <(&lt;operator&gt;.fieldAccess,response.data)<SUB>357</SUB>> ]
+"1963" [label = <(FIELD_IDENTIFIER,size,size)<SUB>357</SUB>> ]
+"1973" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>359</SUB>> ]
+"1988" [label = <(&lt;operator&gt;.fieldAccess,responseString.find)<SUB>363</SUB>> ]
+"1993" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>363</SUB>> ]
+"1996" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>363</SUB>> ]
+"2000" [label = <(&lt;operator&gt;.fieldAccess,scopeId.size)<SUB>364</SUB>> ]
+"2004" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.size)<SUB>364</SUB>> ]
+"2012" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_CANNOT_HANDLE)<SUB>366</SUB>> ]
+"2015" [label = <(hidl_vec&lt;uint8_t&gt;,hidl_vec&lt;uint8_t&gt;())<SUB>366</SUB>> ]
+"2017" [label = <(Void,Void())<SUB>367</SUB>> ]
+"2023" [label = <(data,scopeId.data())<SUB>369</SUB>> ]
+"2027" [label = <(data,kKeySetIdPrefix.data())<SUB>369</SUB>> ]
+"2031" [label = <(size,kKeySetIdPrefix.size())<SUB>369</SUB>> ]
+"2040" [label = <(&lt;operator&gt;.fieldAccess,keySetId.assign)<SUB>371</SUB>> ]
+"2043" [label = <(begin,scopeId.begin())<SUB>371</SUB>> ]
+"2047" [label = <(end,scopeId.end())<SUB>371</SUB>> ]
+"2054" [label = <(find,mReleaseKeysMap.find(std::string(keySetId.begin(), keySetId.end())))<SUB>373</SUB>> ]
+"2071" [label = <(&lt;operator&gt;.notEquals,iter != mReleaseKeysMap.end())<SUB>374</SUB>> ]
+"2096" [label = <(assign,sessionId.assign(scopeId.begin(), scopeId.end()))<SUB>378</SUB>> ]
+"2108" [label = <(clear,keySetId.clear())<SUB>380</SUB>> ]
+"2121" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>383</SUB>> ]
+"2126" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>384</SUB>> ]
+"2131" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>385</SUB>> ]
+"2134" [label = <(hidl_vec&lt;uint8_t&gt;,hidl_vec&lt;uint8_t&gt;())<SUB>385</SUB>> ]
+"2136" [label = <(Void,Void())<SUB>386</SUB>> ]
+"2143" [label = <(FIELD_IDENTIFIER,provideKeyResponse,provideKeyResponse)<SUB>390</SUB>> ]
+"2150" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>391</SUB>> ]
+"2213" [label = <(&lt;operator&gt;.fieldAccess,EventType::VENDOR_DEFINED)<SUB>413</SUB>> ]
+"2224" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keyId1)<SUB>420</SUB>> ]
+"2232" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.keyId)<SUB>421</SUB>> ]
+"2237" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.type)<SUB>422</SUB>> ]
+"2240" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType::USABLE)<SUB>422</SUB>> ]
+"2246" [label = <(&lt;operator&gt;.fieldAccess,keysStatus.push_back)<SUB>423</SUB>> ]
+"2251" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keyId2)<SUB>425</SUB>> ]
+"2259" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.keyId)<SUB>426</SUB>> ]
+"2264" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.type)<SUB>427</SUB>> ]
+"2267" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType::EXPIRED)<SUB>427</SUB>> ]
+"2273" [label = <(&lt;operator&gt;.fieldAccess,keysStatus.push_back)<SUB>428</SUB>> ]
+"2278" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keyId3)<SUB>430</SUB>> ]
+"2286" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.keyId)<SUB>431</SUB>> ]
+"2291" [label = <(&lt;operator&gt;.fieldAccess,keyStatus.type)<SUB>432</SUB>> ]
+"2294" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType::USABLEINFUTURE)<SUB>432</SUB>> ]
+"2300" [label = <(&lt;operator&gt;.fieldAccess,keysStatus.push_back)<SUB>433</SUB>> ]
+"2311" [label = <(ALOGE,ALOGE(&quot;provideKeyResponse returns error=%d&quot;, status))<SUB>439</SUB>> ]
+"2318" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>442</SUB>> ]
+"2322" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>442</SUB>> ]
+"2326" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>442</SUB>> ]
+"1934" [label = <(&lt;operator&gt;.fieldAccess,scope.size)<SUB>350</SUB>> ]
+"1940" [label = <(&lt;operator&gt;.fieldAccess,response.size)<SUB>350</SUB>> ]
+"1948" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>352</SUB>> ]
+"1959" [label = <(FIELD_IDENTIFIER,data,data)<SUB>357</SUB>> ]
+"1990" [label = <(FIELD_IDENTIFIER,find,find)<SUB>363</SUB>> ]
+"2002" [label = <(FIELD_IDENTIFIER,size,size)<SUB>364</SUB>> ]
+"2006" [label = <(FIELD_IDENTIFIER,size,size)<SUB>364</SUB>> ]
+"2014" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>366</SUB>> ]
+"2024" [label = <(&lt;operator&gt;.fieldAccess,scopeId.data)<SUB>369</SUB>> ]
+"2028" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.data)<SUB>369</SUB>> ]
+"2032" [label = <(&lt;operator&gt;.fieldAccess,kKeySetIdPrefix.size)<SUB>369</SUB>> ]
+"2042" [label = <(FIELD_IDENTIFIER,assign,assign)<SUB>371</SUB>> ]
+"2044" [label = <(&lt;operator&gt;.fieldAccess,scopeId.begin)<SUB>371</SUB>> ]
+"2048" [label = <(&lt;operator&gt;.fieldAccess,scopeId.end)<SUB>371</SUB>> ]
+"2055" [label = <(&lt;operator&gt;.fieldAccess,mReleaseKeysMap.find)<SUB>373</SUB>> ]
+"2058" [label = <(std::string,std::string(keySetId.begin(), keySetId.end()))<SUB>373</SUB>> ]
+"2073" [label = <(end,mReleaseKeysMap.end())<SUB>374</SUB>> ]
+"2078" [label = <(assign,sessionId.assign(iter-&gt;second.begin(), iter-&gt;second.end()))<SUB>375</SUB>> ]
+"2097" [label = <(&lt;operator&gt;.fieldAccess,sessionId.assign)<SUB>378</SUB>> ]
+"2100" [label = <(begin,scopeId.begin())<SUB>378</SUB>> ]
+"2104" [label = <(end,scopeId.end())<SUB>378</SUB>> ]
+"2109" [label = <(&lt;operator&gt;.fieldAccess,keySetId.clear)<SUB>380</SUB>> ]
+"2128" [label = <(FIELD_IDENTIFIER,get,get)<SUB>384</SUB>> ]
+"2133" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>385</SUB>> ]
+"2215" [label = <(FIELD_IDENTIFIER,VENDOR_DEFINED,VENDOR_DEFINED)<SUB>413</SUB>> ]
+"2225" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>420</SUB>> ]
+"2234" [label = <(FIELD_IDENTIFIER,keyId,keyId)<SUB>421</SUB>> ]
+"2239" [label = <(FIELD_IDENTIFIER,type,type)<SUB>422</SUB>> ]
+"2241" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType)<SUB>422</SUB>> ]
+"2244" [label = <(FIELD_IDENTIFIER,USABLE,USABLE)<SUB>422</SUB>> ]
+"2248" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>423</SUB>> ]
+"2252" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>425</SUB>> ]
+"2261" [label = <(FIELD_IDENTIFIER,keyId,keyId)<SUB>426</SUB>> ]
+"2266" [label = <(FIELD_IDENTIFIER,type,type)<SUB>427</SUB>> ]
+"2268" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType)<SUB>427</SUB>> ]
+"2271" [label = <(FIELD_IDENTIFIER,EXPIRED,EXPIRED)<SUB>427</SUB>> ]
+"2275" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>428</SUB>> ]
+"2279" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>430</SUB>> ]
+"2288" [label = <(FIELD_IDENTIFIER,keyId,keyId)<SUB>431</SUB>> ]
+"2293" [label = <(FIELD_IDENTIFIER,type,type)<SUB>432</SUB>> ]
+"2295" [label = <(&lt;operator&gt;.fieldAccess,V1_2::KeyStatusType)<SUB>432</SUB>> ]
+"2298" [label = <(FIELD_IDENTIFIER,USABLEINFUTURE,USABLEINFUTURE)<SUB>432</SUB>> ]
+"2302" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>433</SUB>> ]
+"2324" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>442</SUB>> ]
+"2328" [label = <(FIELD_IDENTIFIER,end,end)<SUB>442</SUB>> ]
+"1936" [label = <(FIELD_IDENTIFIER,size,size)<SUB>350</SUB>> ]
+"1942" [label = <(FIELD_IDENTIFIER,size,size)<SUB>350</SUB>> ]
+"2026" [label = <(FIELD_IDENTIFIER,data,data)<SUB>369</SUB>> ]
+"2030" [label = <(FIELD_IDENTIFIER,data,data)<SUB>369</SUB>> ]
+"2034" [label = <(FIELD_IDENTIFIER,size,size)<SUB>369</SUB>> ]
+"2046" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>371</SUB>> ]
+"2050" [label = <(FIELD_IDENTIFIER,end,end)<SUB>371</SUB>> ]
+"2057" [label = <(FIELD_IDENTIFIER,find,find)<SUB>373</SUB>> ]
+"2059" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>373</SUB>> ]
+"2062" [label = <(begin,keySetId.begin())<SUB>373</SUB>> ]
+"2066" [label = <(end,keySetId.end())<SUB>373</SUB>> ]
+"2074" [label = <(&lt;operator&gt;.fieldAccess,mReleaseKeysMap.end)<SUB>374</SUB>> ]
+"2079" [label = <(&lt;operator&gt;.fieldAccess,sessionId.assign)<SUB>375</SUB>> ]
+"2082" [label = <(begin,iter-&gt;second.begin())<SUB>375</SUB>> ]
+"2088" [label = <(end,iter-&gt;second.end())<SUB>375</SUB>> ]
+"2099" [label = <(FIELD_IDENTIFIER,assign,assign)<SUB>378</SUB>> ]
+"2101" [label = <(&lt;operator&gt;.fieldAccess,scopeId.begin)<SUB>378</SUB>> ]
+"2105" [label = <(&lt;operator&gt;.fieldAccess,scopeId.end)<SUB>378</SUB>> ]
+"2111" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>380</SUB>> ]
+"2226" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>420</SUB>> ]
+"2253" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>425</SUB>> ]
+"2280" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>430</SUB>> ]
+"2061" [label = <(FIELD_IDENTIFIER,string,string)<SUB>373</SUB>> ]
+"2063" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>373</SUB>> ]
+"2067" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>373</SUB>> ]
+"2076" [label = <(FIELD_IDENTIFIER,end,end)<SUB>374</SUB>> ]
+"2081" [label = <(FIELD_IDENTIFIER,assign,assign)<SUB>375</SUB>> ]
+"2083" [label = <(&lt;operator&gt;.fieldAccess,iter-&gt;second.begin)<SUB>375</SUB>> ]
+"2089" [label = <(&lt;operator&gt;.fieldAccess,iter-&gt;second.end)<SUB>375</SUB>> ]
+"2103" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>378</SUB>> ]
+"2107" [label = <(FIELD_IDENTIFIER,end,end)<SUB>378</SUB>> ]
+"2158" [label = <(DeleteLicense,mFileHandle.DeleteLicense(keySetId))<SUB>394</SUB>> ]
+"2163" [label = <(destroySession,mSessionLibrary-&gt;destroySession(session))<SUB>395</SUB>> ]
+"2228" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>420</SUB>> ]
+"2255" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>425</SUB>> ]
+"2282" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>430</SUB>> ]
+"2065" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>373</SUB>> ]
+"2069" [label = <(FIELD_IDENTIFIER,end,end)<SUB>373</SUB>> ]
+"2084" [label = <(&lt;operator&gt;.indirectFieldAccess,iter-&gt;second)<SUB>375</SUB>> ]
+"2087" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>375</SUB>> ]
+"2090" [label = <(&lt;operator&gt;.indirectFieldAccess,iter-&gt;second)<SUB>375</SUB>> ]
+"2093" [label = <(FIELD_IDENTIFIER,end,end)<SUB>375</SUB>> ]
+"2159" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.DeleteLicense)<SUB>394</SUB>> ]
+"2164" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;destroySession)<SUB>395</SUB>> ]
+"2184" [label = <(&lt;operator&gt;.assignment,ok = mFileHandle.StoreLicense(\012                        keySetId,\012 DeviceFiles::kLicenseStateActive,\012                        std::string(response.begin(), response.end())))<SUB>402</SUB>> ]
+"2086" [label = <(FIELD_IDENTIFIER,second,second)<SUB>375</SUB>> ]
+"2092" [label = <(FIELD_IDENTIFIER,second,second)<SUB>375</SUB>> ]
+"2161" [label = <(FIELD_IDENTIFIER,DeleteLicense,DeleteLicense)<SUB>394</SUB>> ]
+"2166" [label = <(FIELD_IDENTIFIER,destroySession,destroySession)<SUB>395</SUB>> ]
+"2171" [label = <(&lt;operator&gt;.logicalNot,!makeKeySetId(&amp;keySetId))<SUB>397</SUB>> ]
+"2186" [label = <(StoreLicense,mFileHandle.StoreLicense(\012                        keySetId,\012 DeviceFiles::kLicenseStateActive,\012                        std::string(response.begin(), response.end())))<SUB>402</SUB>> ]
+"2207" [label = <(&lt;operator&gt;.logicalNot,!ok)<SUB>406</SUB>> ]
+"2172" [label = <(makeKeySetId,makeKeySetId(&amp;keySetId))<SUB>397</SUB>> ]
+"2176" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_UNKNOWN, hidl_vec&lt;uint8_t&gt;()))<SUB>398</SUB>> ]
+"2181" [label = <(RETURN,return Void();,return Void();)<SUB>399</SUB>> ]
+"2187" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.StoreLicense)<SUB>402</SUB>> ]
+"2191" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateActive)<SUB>404</SUB>> ]
+"2194" [label = <(std::string,std::string(response.begin(), response.end()))<SUB>405</SUB>> ]
+"2210" [label = <(ALOGE,ALOGE(&quot;Failed to store offline license&quot;))<SUB>407</SUB>> ]
+"2173" [label = <(&lt;operator&gt;.addressOf,&amp;keySetId)<SUB>397</SUB>> ]
+"2177" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_UNKNOWN)<SUB>398</SUB>> ]
+"2180" [label = <(hidl_vec&lt;uint8_t&gt;,hidl_vec&lt;uint8_t&gt;())<SUB>398</SUB>> ]
+"2182" [label = <(Void,Void())<SUB>399</SUB>> ]
+"2189" [label = <(FIELD_IDENTIFIER,StoreLicense,StoreLicense)<SUB>402</SUB>> ]
+"2193" [label = <(FIELD_IDENTIFIER,kLicenseStateActive,kLicenseStateActive)<SUB>404</SUB>> ]
+"2195" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>405</SUB>> ]
+"2198" [label = <(begin,response.begin())<SUB>405</SUB>> ]
+"2202" [label = <(end,response.end())<SUB>405</SUB>> ]
+"2179" [label = <(FIELD_IDENTIFIER,ERROR_DRM_UNKNOWN,ERROR_DRM_UNKNOWN)<SUB>398</SUB>> ]
+"2197" [label = <(FIELD_IDENTIFIER,string,string)<SUB>405</SUB>> ]
+"2199" [label = <(&lt;operator&gt;.fieldAccess,response.begin)<SUB>405</SUB>> ]
+"2203" [label = <(&lt;operator&gt;.fieldAccess,response.end)<SUB>405</SUB>> ]
+"2201" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>405</SUB>> ]
+"2205" [label = <(FIELD_IDENTIFIER,end,end)<SUB>405</SUB>> ]
+"1925" [label = <(METHOD,provideKeyResponse)<SUB>346</SUB>> ]
+"2335" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>346</SUB>> ]
+  "1953" -> "1967" 
+  "1965" -> "1973" 
+  "1969" -> "1982" 
+  "1978" -> "1990" 
+  "1984" -> "2002" 
+  "2019" -> "2042" 
+  "2019" -> "2099" 
+  "2112" -> "2128" 
+  "2137" -> "2143" 
+  "2138" -> "2150" 
+  "2314" -> "2331" 
+  "2329" -> "2334" 
+  "2333" -> "2335" 
+  "1931" -> "1955" 
+  "1931" -> "1948" 
+  "1954" -> "1963" 
+  "1960" -> "1953" 
+  "1967" -> "1965" 
+  "1970" -> "1969" 
+  "1980" -> "1978" 
   "1986" -> "1984" 
-  "1991" -> "1997" 
-  "1996" -> "1990" 
-  "2003" -> "2010" 
-  "2007" -> "2002" 
-  "2012" -> "2018" 
-  "2015" -> "2021" 
-  "2020" -> "2339" 
-  "2026" -> "2025" 
-  "2043" -> "2061" 
-  "2056" -> "2080" 
-  "2118" -> "2117" 
-  "2123" -> "2122" 
-  "2129" -> "2128" 
-  "2134" -> "2140" 
-  "2139" -> "2339" 
-  "2145" -> "2144" 
-  "2152" -> "2150" 
-  "2216" -> "2222" 
-  "2222" -> "2232" 
-  "2227" -> "2238" 
-  "2235" -> "2243" 
-  "2240" -> "2252" 
-  "2249" -> "2259" 
-  "2254" -> "2265" 
-  "2262" -> "2270" 
-  "2267" -> "2279" 
-  "2276" -> "2286" 
-  "2281" -> "2292" 
-  "2289" -> "2297" 
-  "2294" -> "2306" 
-  "2303" -> "2308" 
-  "2308" -> "2322" 
-  "2320" -> "2319" 
-  "2325" -> "2332" 
-  "2329" -> "2324" 
-  "1937" -> "1936" 
-  "1943" -> "1942" 
-  "1950" -> "1953" 
-  "1953" -> "1949" 
-  "1955" -> "1954" 
+  "1998" -> "2008" 
+  "1998" -> "2026" 
+  "2021" -> "2019" 
+  "2113" -> "2121" 
+  "2118" -> "2112" 
+  "2124" -> "2137" 
+  "2124" -> "2133" 
+  "2140" -> "2138" 
+  "2146" -> "2161" 
+  "2146" -> "2173" 
+  "2146" -> "2215" 
+  "2146" -> "2311" 
+  "2315" -> "2324" 
+  "2320" -> "2314" 
+  "2331" -> "2329" 
+  "2334" -> "2333" 
+  "1932" -> "1931" 
+  "1932" -> "1942" 
+  "1938" -> "1931" 
+  "1945" -> "1951" 
+  "1950" -> "2335" 
+  "1955" -> "1959" 
+  "1956" -> "1954" 
   "1961" -> "1960" 
-  "1967" -> "1965" 
-  "1977" -> "1975" 
-  "1992" -> "1991" 
-  "1997" -> "2000" 
-  "2000" -> "1996" 
+  "1971" -> "1970" 
+  "1982" -> "1980" 
+  "1987" -> "1993" 
+  "1992" -> "1986" 
+  "1999" -> "2006" 
+  "2003" -> "1998" 
+  "2008" -> "2014" 
+  "2011" -> "2017" 
+  "2016" -> "2335" 
+  "2022" -> "2021" 
+  "2039" -> "2057" 
+  "2052" -> "2076" 
+  "2114" -> "2113" 
+  "2119" -> "2118" 
+  "2125" -> "2124" 
+  "2130" -> "2136" 
+  "2135" -> "2335" 
+  "2141" -> "2140" 
+  "2148" -> "2146" 
+  "2212" -> "2218" 
+  "2218" -> "2228" 
+  "2223" -> "2234" 
+  "2231" -> "2239" 
+  "2236" -> "2248" 
+  "2245" -> "2255" 
+  "2250" -> "2261" 
+  "2258" -> "2266" 
+  "2263" -> "2275" 
+  "2272" -> "2282" 
+  "2277" -> "2288" 
+  "2285" -> "2293" 
+  "2290" -> "2302" 
+  "2299" -> "2304" 
+  "2304" -> "2318" 
+  "2316" -> "2315" 
+  "2321" -> "2328" 
+  "2325" -> "2320" 
+  "1933" -> "1932" 
+  "1939" -> "1938" 
+  "1946" -> "1949" 
+  "1949" -> "1945" 
+  "1951" -> "1950" 
+  "1957" -> "1956" 
+  "1963" -> "1961" 
+  "1973" -> "1971" 
+  "1988" -> "1987" 
+  "1993" -> "1996" 
+  "1996" -> "1992" 
+  "2000" -> "1999" 
   "2004" -> "2003" 
-  "2008" -> "2007" 
-  "2016" -> "2019" 
-  "2019" -> "2015" 
-  "2021" -> "2020" 
+  "2012" -> "2015" 
+  "2015" -> "2011" 
+  "2017" -> "2016" 
+  "2023" -> "2030" 
   "2027" -> "2034" 
-  "2031" -> "2038" 
-  "2035" -> "2026" 
-  "2044" -> "2050" 
-  "2047" -> "2054" 
-  "2051" -> "2043" 
-  "2058" -> "2056" 
-  "2075" -> "2085" 
-  "2075" -> "2118" 
-  "2100" -> "2115" 
-  "2112" -> "2118" 
-  "2125" -> "2123" 
-  "2130" -> "2129" 
-  "2135" -> "2138" 
-  "2138" -> "2134" 
-  "2140" -> "2139" 
-  "2147" -> "2145" 
-  "2154" -> "2152" 
-  "2217" -> "2216" 
-  "2228" -> "2227" 
-  "2236" -> "2235" 
-  "2241" -> "2245" 
-  "2244" -> "2240" 
-  "2250" -> "2249" 
-  "2255" -> "2254" 
-  "2263" -> "2262" 
-  "2268" -> "2272" 
-  "2271" -> "2267" 
-  "2277" -> "2276" 
-  "2282" -> "2281" 
-  "2290" -> "2289" 
-  "2295" -> "2299" 
-  "2298" -> "2294" 
-  "2304" -> "2303" 
-  "2315" -> "2322" 
-  "2322" -> "2320" 
+  "2031" -> "2022" 
+  "2040" -> "2046" 
+  "2043" -> "2050" 
+  "2047" -> "2039" 
+  "2054" -> "2052" 
+  "2071" -> "2081" 
+  "2071" -> "2114" 
+  "2096" -> "2111" 
+  "2108" -> "2114" 
+  "2121" -> "2119" 
+  "2126" -> "2125" 
+  "2131" -> "2134" 
+  "2134" -> "2130" 
+  "2136" -> "2135" 
+  "2143" -> "2141" 
+  "2150" -> "2148" 
+  "2213" -> "2212" 
+  "2224" -> "2223" 
+  "2232" -> "2231" 
+  "2237" -> "2241" 
+  "2240" -> "2236" 
+  "2246" -> "2245" 
+  "2251" -> "2250" 
+  "2259" -> "2258" 
+  "2264" -> "2268" 
+  "2267" -> "2263" 
+  "2273" -> "2272" 
+  "2278" -> "2277" 
+  "2286" -> "2285" 
+  "2291" -> "2295" 
+  "2294" -> "2290" 
+  "2300" -> "2299" 
+  "2311" -> "2318" 
+  "2318" -> "2316" 
+  "2322" -> "2321" 
   "2326" -> "2325" 
-  "2330" -> "2329" 
-  "1938" -> "1937" 
-  "1944" -> "1943" 
-  "1952" -> "1950" 
-  "1963" -> "1961" 
-  "1994" -> "1992" 
+  "1934" -> "1933" 
+  "1940" -> "1939" 
+  "1948" -> "1946" 
+  "1959" -> "1957" 
+  "1990" -> "1988" 
+  "2002" -> "2000" 
   "2006" -> "2004" 
-  "2010" -> "2008" 
-  "2018" -> "2016" 
+  "2014" -> "2012" 
+  "2024" -> "2023" 
   "2028" -> "2027" 
   "2032" -> "2031" 
-  "2036" -> "2035" 
-  "2046" -> "2044" 
+  "2042" -> "2040" 
+  "2044" -> "2043" 
   "2048" -> "2047" 
-  "2052" -> "2051" 
-  "2059" -> "2065" 
-  "2062" -> "2058" 
-  "2077" -> "2075" 
-  "2082" -> "2118" 
-  "2101" -> "2107" 
-  "2104" -> "2111" 
-  "2108" -> "2100" 
-  "2113" -> "2112" 
-  "2132" -> "2130" 
-  "2137" -> "2135" 
-  "2219" -> "2217" 
-  "2229" -> "2228" 
-  "2238" -> "2236" 
-  "2243" -> "2241" 
-  "2245" -> "2248" 
-  "2248" -> "2244" 
-  "2252" -> "2250" 
-  "2256" -> "2255" 
-  "2265" -> "2263" 
-  "2270" -> "2268" 
-  "2272" -> "2275" 
-  "2275" -> "2271" 
-  "2279" -> "2277" 
-  "2283" -> "2282" 
-  "2292" -> "2290" 
-  "2297" -> "2295" 
-  "2299" -> "2302" 
-  "2302" -> "2298" 
-  "2306" -> "2304" 
+  "2055" -> "2061" 
+  "2058" -> "2054" 
+  "2073" -> "2071" 
+  "2078" -> "2114" 
+  "2097" -> "2103" 
+  "2100" -> "2107" 
+  "2104" -> "2096" 
+  "2109" -> "2108" 
+  "2128" -> "2126" 
+  "2133" -> "2131" 
+  "2215" -> "2213" 
+  "2225" -> "2224" 
+  "2234" -> "2232" 
+  "2239" -> "2237" 
+  "2241" -> "2244" 
+  "2244" -> "2240" 
+  "2248" -> "2246" 
+  "2252" -> "2251" 
+  "2261" -> "2259" 
+  "2266" -> "2264" 
+  "2268" -> "2271" 
+  "2271" -> "2267" 
+  "2275" -> "2273" 
+  "2279" -> "2278" 
+  "2288" -> "2286" 
+  "2293" -> "2291" 
+  "2295" -> "2298" 
+  "2298" -> "2294" 
+  "2302" -> "2300" 
+  "2324" -> "2322" 
   "2328" -> "2326" 
-  "2332" -> "2330" 
-  "1940" -> "1938" 
-  "1946" -> "1944" 
+  "1936" -> "1934" 
+  "1942" -> "1940" 
+  "2026" -> "2024" 
   "2030" -> "2028" 
   "2034" -> "2032" 
-  "2038" -> "2036" 
+  "2046" -> "2044" 
   "2050" -> "2048" 
-  "2054" -> "2052" 
-  "2061" -> "2059" 
-  "2063" -> "2069" 
-  "2066" -> "2073" 
-  "2070" -> "2062" 
-  "2078" -> "2077" 
-  "2083" -> "2090" 
-  "2086" -> "2096" 
-  "2092" -> "2082" 
-  "2103" -> "2101" 
+  "2057" -> "2055" 
+  "2059" -> "2065" 
+  "2062" -> "2069" 
+  "2066" -> "2058" 
+  "2074" -> "2073" 
+  "2079" -> "2086" 
+  "2082" -> "2092" 
+  "2088" -> "2078" 
+  "2099" -> "2097" 
+  "2101" -> "2100" 
   "2105" -> "2104" 
-  "2109" -> "2108" 
-  "2115" -> "2113" 
-  "2230" -> "2229" 
-  "2257" -> "2256" 
-  "2284" -> "2283" 
-  "2065" -> "2063" 
+  "2111" -> "2109" 
+  "2226" -> "2225" 
+  "2253" -> "2252" 
+  "2280" -> "2279" 
+  "2061" -> "2059" 
+  "2063" -> "2062" 
   "2067" -> "2066" 
-  "2071" -> "2070" 
-  "2080" -> "2078" 
-  "2085" -> "2083" 
-  "2087" -> "2086" 
-  "2093" -> "2092" 
+  "2076" -> "2074" 
+  "2081" -> "2079" 
+  "2083" -> "2082" 
+  "2089" -> "2088" 
+  "2103" -> "2101" 
   "2107" -> "2105" 
-  "2111" -> "2109" 
-  "2162" -> "2170" 
-  "2167" -> "2219" 
-  "2232" -> "2230" 
-  "2259" -> "2257" 
-  "2286" -> "2284" 
+  "2158" -> "2166" 
+  "2163" -> "2215" 
+  "2228" -> "2226" 
+  "2255" -> "2253" 
+  "2282" -> "2280" 
+  "2065" -> "2063" 
   "2069" -> "2067" 
-  "2073" -> "2071" 
-  "2088" -> "2091" 
-  "2091" -> "2087" 
-  "2094" -> "2097" 
-  "2097" -> "2093" 
-  "2163" -> "2162" 
-  "2168" -> "2167" 
-  "2188" -> "2211" 
-  "2090" -> "2088" 
-  "2096" -> "2094" 
-  "2165" -> "2163" 
-  "2170" -> "2168" 
-  "2175" -> "2183" 
-  "2175" -> "2193" 
-  "2190" -> "2188" 
-  "2211" -> "2214" 
-  "2211" -> "2219" 
-  "2176" -> "2175" 
-  "2180" -> "2186" 
-  "2185" -> "2339" 
+  "2084" -> "2087" 
+  "2087" -> "2083" 
+  "2090" -> "2093" 
+  "2093" -> "2089" 
+  "2159" -> "2158" 
+  "2164" -> "2163" 
+  "2184" -> "2207" 
+  "2086" -> "2084" 
+  "2092" -> "2090" 
+  "2161" -> "2159" 
+  "2166" -> "2164" 
+  "2171" -> "2179" 
+  "2171" -> "2189" 
+  "2186" -> "2184" 
+  "2207" -> "2210" 
+  "2207" -> "2215" 
+  "2172" -> "2171" 
+  "2176" -> "2182" 
+  "2181" -> "2335" 
+  "2187" -> "2193" 
   "2191" -> "2197" 
-  "2195" -> "2201" 
-  "2198" -> "2190" 
-  "2214" -> "2219" 
-  "2177" -> "2176" 
-  "2181" -> "2184" 
-  "2184" -> "2180" 
-  "2186" -> "2185" 
+  "2194" -> "2186" 
+  "2210" -> "2215" 
+  "2173" -> "2172" 
+  "2177" -> "2180" 
+  "2180" -> "2176" 
+  "2182" -> "2181" 
+  "2189" -> "2187" 
   "2193" -> "2191" 
+  "2195" -> "2201" 
+  "2198" -> "2205" 
+  "2202" -> "2194" 
+  "2179" -> "2177" 
   "2197" -> "2195" 
-  "2199" -> "2205" 
-  "2202" -> "2209" 
-  "2206" -> "2198" 
-  "2183" -> "2181" 
-  "2201" -> "2199" 
+  "2199" -> "2198" 
   "2203" -> "2202" 
-  "2207" -> "2206" 
+  "2201" -> "2199" 
   "2205" -> "2203" 
-  "2209" -> "2207" 
-  "1929" -> "1940" 
+  "1925" -> "1936" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/71-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/71-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/71-cfg.dot	2023-06-07 19:37:50.957374269 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/71-cfg.dot	2023-06-07 19:37:55.467374365 +0330
@@ -1,172 +1,172 @@
 digraph "restoreKeys" {  
-"2367" [label = <(&lt;operator&gt;.assignment,status = Status::OK)<SUB>456</SUB>> ]
-"2421" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;findSession(toVector(sessionId)))<SUB>469</SUB>> ]
-"2444" [label = <(&lt;operator&gt;.assignment,status = session-&gt;provideKeyResponse(std::vector&lt;uint8_t&gt;(offlineLicense.begin(),\012                offlineLicense.end())))<SUB>473</SUB>> ]
-"2475" [label = <(RETURN,return status;,return status;)<SUB>478</SUB>> ]
-"2346" [label = <(&lt;operator&gt;.logicalOr,sessionId.size() == 0 || keySetId.size() == 0)<SUB>450</SUB>> ]
-"2369" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>456</SUB>> ]
-"2373" [label = <(&lt;operator&gt;.logicalNot,!mFileHandle.RetrieveLicense(std::string(keySetId.begin(), keySetId.end()),\012 &amp;licenseState, &amp;offlineLicense))<SUB>457</SUB>> ]
-"2402" [label = <(&lt;operator&gt;.logicalOr,DeviceFiles::kLicenseStateUnknown == licenseState ||\012 DeviceFiles::kLicenseStateReleasing == licenseState)<SUB>463</SUB>> ]
-"2422" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>469</SUB>> ]
-"2427" [label = <(findSession,mSessionLibrary-&gt;findSession(toVector(sessionId)))<SUB>469</SUB>> ]
-"2434" [label = <(&lt;operator&gt;.logicalNot,!session.get())<SUB>470</SUB>> ]
-"2446" [label = <(provideKeyResponse,session-&gt;provideKeyResponse(std::vector&lt;uint8_t&gt;(offlineLicense.begin(),\012                offlineLicense.end())))<SUB>473</SUB>> ]
-"2467" [label = <(&lt;operator&gt;.notEquals,status != Status::OK)<SUB>475</SUB>> ]
-"2347" [label = <(&lt;operator&gt;.equals,sessionId.size() == 0)<SUB>450</SUB>> ]
-"2353" [label = <(&lt;operator&gt;.equals,keySetId.size() == 0)<SUB>450</SUB>> ]
-"2360" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>451</SUB>> ]
-"2371" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>456</SUB>> ]
-"2374" [label = <(RetrieveLicense,mFileHandle.RetrieveLicense(std::string(keySetId.begin(), keySetId.end()),\012 &amp;licenseState, &amp;offlineLicense))<SUB>457</SUB>> ]
-"2395" [label = <(ALOGE,ALOGE(&quot;Failed to restore offline license&quot;))<SUB>459</SUB>> ]
-"2397" [label = <(RETURN,return Status::ERROR_DRM_NO_LICENSE;,return Status::ERROR_DRM_NO_LICENSE;)<SUB>460</SUB>> ]
-"2403" [label = <(&lt;operator&gt;.equals,DeviceFiles::kLicenseStateUnknown == licenseState)<SUB>463</SUB>> ]
-"2408" [label = <(&lt;operator&gt;.equals,DeviceFiles::kLicenseStateReleasing == licenseState)<SUB>464</SUB>> ]
-"2414" [label = <(ALOGE,ALOGE(&quot;Invalid license state=%d&quot;, licenseState))<SUB>465</SUB>> ]
-"2417" [label = <(RETURN,return Status::ERROR_DRM_NO_LICENSE;,return Status::ERROR_DRM_NO_LICENSE;)<SUB>466</SUB>> ]
-"2423" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>469</SUB>> ]
-"2428" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>469</SUB>> ]
-"2431" [label = <(toVector,toVector(sessionId))<SUB>469</SUB>> ]
-"2435" [label = <(get,session.get())<SUB>470</SUB>> ]
-"2440" [label = <(RETURN,return Status::ERROR_DRM_SESSION_NOT_OPENED;,return Status::ERROR_DRM_SESSION_NOT_OPENED;)<SUB>471</SUB>> ]
-"2447" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;provideKeyResponse)<SUB>473</SUB>> ]
-"2450" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt;(offlineLicense.begin(),\012                offlineLicense.end()))<SUB>473</SUB>> ]
-"2469" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>475</SUB>> ]
-"2473" [label = <(ALOGE,ALOGE(&quot;Failed to restore keys&quot;))<SUB>476</SUB>> ]
-"2348" [label = <(size,sessionId.size())<SUB>450</SUB>> ]
-"2354" [label = <(size,keySetId.size())<SUB>450</SUB>> ]
-"2361" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>451</SUB>> ]
-"2375" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.RetrieveLicense)<SUB>457</SUB>> ]
-"2378" [label = <(std::string,std::string(keySetId.begin(), keySetId.end()))<SUB>457</SUB>> ]
-"2390" [label = <(&lt;operator&gt;.addressOf,&amp;licenseState)<SUB>458</SUB>> ]
-"2392" [label = <(&lt;operator&gt;.addressOf,&amp;offlineLicense)<SUB>458</SUB>> ]
-"2398" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_NO_LICENSE)<SUB>460</SUB>> ]
-"2404" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateUnknown)<SUB>463</SUB>> ]
-"2409" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateReleasing)<SUB>464</SUB>> ]
-"2418" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_NO_LICENSE)<SUB>466</SUB>> ]
-"2430" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>469</SUB>> ]
-"2436" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>470</SUB>> ]
-"2441" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>471</SUB>> ]
-"2449" [label = <(FIELD_IDENTIFIER,provideKeyResponse,provideKeyResponse)<SUB>473</SUB>> ]
-"2451" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>473</SUB>> ]
-"2456" [label = <(&lt;operator&gt;.bracketedPrimary,(offlineLicense.begin(),\012                offlineLicense.end()))<SUB>473</SUB>> ]
-"2471" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>475</SUB>> ]
-"2349" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>450</SUB>> ]
-"2355" [label = <(&lt;operator&gt;.fieldAccess,keySetId.size)<SUB>450</SUB>> ]
-"2363" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>451</SUB>> ]
-"2377" [label = <(FIELD_IDENTIFIER,RetrieveLicense,RetrieveLicense)<SUB>457</SUB>> ]
-"2379" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>457</SUB>> ]
-"2382" [label = <(begin,keySetId.begin())<SUB>457</SUB>> ]
-"2386" [label = <(end,keySetId.end())<SUB>457</SUB>> ]
-"2400" [label = <(FIELD_IDENTIFIER,ERROR_DRM_NO_LICENSE,ERROR_DRM_NO_LICENSE)<SUB>460</SUB>> ]
-"2406" [label = <(FIELD_IDENTIFIER,kLicenseStateUnknown,kLicenseStateUnknown)<SUB>463</SUB>> ]
-"2411" [label = <(FIELD_IDENTIFIER,kLicenseStateReleasing,kLicenseStateReleasing)<SUB>464</SUB>> ]
-"2420" [label = <(FIELD_IDENTIFIER,ERROR_DRM_NO_LICENSE,ERROR_DRM_NO_LICENSE)<SUB>466</SUB>> ]
-"2438" [label = <(FIELD_IDENTIFIER,get,get)<SUB>470</SUB>> ]
-"2443" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>471</SUB>> ]
-"2452" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>473</SUB>> ]
-"2457" [label = <(&lt;operator&gt;.expressionList,offlineLicense.begin(),\012                offlineLicense.end())<SUB>473</SUB>> ]
-"2351" [label = <(FIELD_IDENTIFIER,size,size)<SUB>450</SUB>> ]
-"2357" [label = <(FIELD_IDENTIFIER,size,size)<SUB>450</SUB>> ]
-"2381" [label = <(FIELD_IDENTIFIER,string,string)<SUB>457</SUB>> ]
-"2383" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>457</SUB>> ]
-"2387" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>457</SUB>> ]
-"2454" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>473</SUB>> ]
-"2458" [label = <(begin,offlineLicense.begin())<SUB>473</SUB>> ]
-"2462" [label = <(end,offlineLicense.end())<SUB>474</SUB>> ]
-"2385" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>457</SUB>> ]
-"2389" [label = <(FIELD_IDENTIFIER,end,end)<SUB>457</SUB>> ]
-"2459" [label = <(&lt;operator&gt;.fieldAccess,offlineLicense.begin)<SUB>473</SUB>> ]
-"2463" [label = <(&lt;operator&gt;.fieldAccess,offlineLicense.end)<SUB>474</SUB>> ]
-"2461" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>473</SUB>> ]
-"2465" [label = <(FIELD_IDENTIFIER,end,end)<SUB>474</SUB>> ]
-"2341" [label = <(METHOD,restoreKeys)<SUB>448</SUB>> ]
-"2477" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>448</SUB>> ]
-  "2367" -> "2377" 
-  "2421" -> "2438" 
-  "2444" -> "2471" 
-  "2475" -> "2477" 
-  "2346" -> "2363" 
-  "2346" -> "2371" 
-  "2369" -> "2367" 
-  "2373" -> "2395" 
-  "2373" -> "2406" 
-  "2402" -> "2414" 
-  "2402" -> "2423" 
-  "2422" -> "2430" 
-  "2427" -> "2421" 
-  "2434" -> "2443" 
-  "2434" -> "2449" 
-  "2446" -> "2444" 
-  "2467" -> "2473" 
-  "2467" -> "2475" 
-  "2347" -> "2346" 
-  "2347" -> "2357" 
-  "2353" -> "2346" 
-  "2360" -> "2477" 
-  "2371" -> "2369" 
-  "2374" -> "2373" 
-  "2395" -> "2400" 
-  "2397" -> "2477" 
-  "2403" -> "2402" 
-  "2403" -> "2411" 
-  "2408" -> "2402" 
-  "2414" -> "2420" 
-  "2417" -> "2477" 
-  "2423" -> "2422" 
-  "2428" -> "2431" 
-  "2431" -> "2427" 
-  "2435" -> "2434" 
-  "2440" -> "2477" 
-  "2447" -> "2454" 
-  "2450" -> "2446" 
-  "2469" -> "2467" 
-  "2473" -> "2475" 
-  "2348" -> "2347" 
-  "2354" -> "2353" 
-  "2361" -> "2360" 
+"2363" [label = <(&lt;operator&gt;.assignment,status = Status::OK)<SUB>455</SUB>> ]
+"2417" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;findSession(toVector(sessionId)))<SUB>468</SUB>> ]
+"2440" [label = <(&lt;operator&gt;.assignment,status = session-&gt;provideKeyResponse(std::vector&lt;uint8_t&gt;(offlineLicense.begin(),\012                offlineLicense.end())))<SUB>472</SUB>> ]
+"2471" [label = <(RETURN,return status;,return status;)<SUB>477</SUB>> ]
+"2342" [label = <(&lt;operator&gt;.logicalOr,sessionId.size() == 0 || keySetId.size() == 0)<SUB>449</SUB>> ]
+"2365" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>455</SUB>> ]
+"2369" [label = <(&lt;operator&gt;.logicalNot,!mFileHandle.RetrieveLicense(std::string(keySetId.begin(), keySetId.end()),\012 &amp;licenseState, &amp;offlineLicense))<SUB>456</SUB>> ]
+"2398" [label = <(&lt;operator&gt;.logicalOr,DeviceFiles::kLicenseStateUnknown == licenseState ||\012 DeviceFiles::kLicenseStateReleasing == licenseState)<SUB>462</SUB>> ]
+"2418" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>468</SUB>> ]
+"2423" [label = <(findSession,mSessionLibrary-&gt;findSession(toVector(sessionId)))<SUB>468</SUB>> ]
+"2430" [label = <(&lt;operator&gt;.logicalNot,!session.get())<SUB>469</SUB>> ]
+"2442" [label = <(provideKeyResponse,session-&gt;provideKeyResponse(std::vector&lt;uint8_t&gt;(offlineLicense.begin(),\012                offlineLicense.end())))<SUB>472</SUB>> ]
+"2463" [label = <(&lt;operator&gt;.notEquals,status != Status::OK)<SUB>474</SUB>> ]
+"2343" [label = <(&lt;operator&gt;.equals,sessionId.size() == 0)<SUB>449</SUB>> ]
+"2349" [label = <(&lt;operator&gt;.equals,keySetId.size() == 0)<SUB>449</SUB>> ]
+"2356" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>450</SUB>> ]
+"2367" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>455</SUB>> ]
+"2370" [label = <(RetrieveLicense,mFileHandle.RetrieveLicense(std::string(keySetId.begin(), keySetId.end()),\012 &amp;licenseState, &amp;offlineLicense))<SUB>456</SUB>> ]
+"2391" [label = <(ALOGE,ALOGE(&quot;Failed to restore offline license&quot;))<SUB>458</SUB>> ]
+"2393" [label = <(RETURN,return Status::ERROR_DRM_NO_LICENSE;,return Status::ERROR_DRM_NO_LICENSE;)<SUB>459</SUB>> ]
+"2399" [label = <(&lt;operator&gt;.equals,DeviceFiles::kLicenseStateUnknown == licenseState)<SUB>462</SUB>> ]
+"2404" [label = <(&lt;operator&gt;.equals,DeviceFiles::kLicenseStateReleasing == licenseState)<SUB>463</SUB>> ]
+"2410" [label = <(ALOGE,ALOGE(&quot;Invalid license state=%d&quot;, licenseState))<SUB>464</SUB>> ]
+"2413" [label = <(RETURN,return Status::ERROR_DRM_NO_LICENSE;,return Status::ERROR_DRM_NO_LICENSE;)<SUB>465</SUB>> ]
+"2419" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>468</SUB>> ]
+"2424" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>468</SUB>> ]
+"2427" [label = <(toVector,toVector(sessionId))<SUB>468</SUB>> ]
+"2431" [label = <(get,session.get())<SUB>469</SUB>> ]
+"2436" [label = <(RETURN,return Status::ERROR_DRM_SESSION_NOT_OPENED;,return Status::ERROR_DRM_SESSION_NOT_OPENED;)<SUB>470</SUB>> ]
+"2443" [label = <(&lt;operator&gt;.indirectFieldAccess,session-&gt;provideKeyResponse)<SUB>472</SUB>> ]
+"2446" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt;(offlineLicense.begin(),\012                offlineLicense.end()))<SUB>472</SUB>> ]
+"2465" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>474</SUB>> ]
+"2469" [label = <(ALOGE,ALOGE(&quot;Failed to restore keys&quot;))<SUB>475</SUB>> ]
+"2344" [label = <(size,sessionId.size())<SUB>449</SUB>> ]
+"2350" [label = <(size,keySetId.size())<SUB>449</SUB>> ]
+"2357" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>450</SUB>> ]
+"2371" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.RetrieveLicense)<SUB>456</SUB>> ]
+"2374" [label = <(std::string,std::string(keySetId.begin(), keySetId.end()))<SUB>456</SUB>> ]
+"2386" [label = <(&lt;operator&gt;.addressOf,&amp;licenseState)<SUB>457</SUB>> ]
+"2388" [label = <(&lt;operator&gt;.addressOf,&amp;offlineLicense)<SUB>457</SUB>> ]
+"2394" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_NO_LICENSE)<SUB>459</SUB>> ]
+"2400" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateUnknown)<SUB>462</SUB>> ]
+"2405" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateReleasing)<SUB>463</SUB>> ]
+"2414" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_NO_LICENSE)<SUB>465</SUB>> ]
+"2426" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>468</SUB>> ]
+"2432" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>469</SUB>> ]
+"2437" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>470</SUB>> ]
+"2445" [label = <(FIELD_IDENTIFIER,provideKeyResponse,provideKeyResponse)<SUB>472</SUB>> ]
+"2447" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>472</SUB>> ]
+"2452" [label = <(&lt;operator&gt;.bracketedPrimary,(offlineLicense.begin(),\012                offlineLicense.end()))<SUB>472</SUB>> ]
+"2467" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>474</SUB>> ]
+"2345" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>449</SUB>> ]
+"2351" [label = <(&lt;operator&gt;.fieldAccess,keySetId.size)<SUB>449</SUB>> ]
+"2359" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>450</SUB>> ]
+"2373" [label = <(FIELD_IDENTIFIER,RetrieveLicense,RetrieveLicense)<SUB>456</SUB>> ]
+"2375" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>456</SUB>> ]
+"2378" [label = <(begin,keySetId.begin())<SUB>456</SUB>> ]
+"2382" [label = <(end,keySetId.end())<SUB>456</SUB>> ]
+"2396" [label = <(FIELD_IDENTIFIER,ERROR_DRM_NO_LICENSE,ERROR_DRM_NO_LICENSE)<SUB>459</SUB>> ]
+"2402" [label = <(FIELD_IDENTIFIER,kLicenseStateUnknown,kLicenseStateUnknown)<SUB>462</SUB>> ]
+"2407" [label = <(FIELD_IDENTIFIER,kLicenseStateReleasing,kLicenseStateReleasing)<SUB>463</SUB>> ]
+"2416" [label = <(FIELD_IDENTIFIER,ERROR_DRM_NO_LICENSE,ERROR_DRM_NO_LICENSE)<SUB>465</SUB>> ]
+"2434" [label = <(FIELD_IDENTIFIER,get,get)<SUB>469</SUB>> ]
+"2439" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>470</SUB>> ]
+"2448" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>472</SUB>> ]
+"2453" [label = <(&lt;operator&gt;.expressionList,offlineLicense.begin(),\012                offlineLicense.end())<SUB>472</SUB>> ]
+"2347" [label = <(FIELD_IDENTIFIER,size,size)<SUB>449</SUB>> ]
+"2353" [label = <(FIELD_IDENTIFIER,size,size)<SUB>449</SUB>> ]
+"2377" [label = <(FIELD_IDENTIFIER,string,string)<SUB>456</SUB>> ]
+"2379" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>456</SUB>> ]
+"2383" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>456</SUB>> ]
+"2450" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>472</SUB>> ]
+"2454" [label = <(begin,offlineLicense.begin())<SUB>472</SUB>> ]
+"2458" [label = <(end,offlineLicense.end())<SUB>473</SUB>> ]
+"2381" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>456</SUB>> ]
+"2385" [label = <(FIELD_IDENTIFIER,end,end)<SUB>456</SUB>> ]
+"2455" [label = <(&lt;operator&gt;.fieldAccess,offlineLicense.begin)<SUB>472</SUB>> ]
+"2459" [label = <(&lt;operator&gt;.fieldAccess,offlineLicense.end)<SUB>473</SUB>> ]
+"2457" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>472</SUB>> ]
+"2461" [label = <(FIELD_IDENTIFIER,end,end)<SUB>473</SUB>> ]
+"2337" [label = <(METHOD,restoreKeys)<SUB>447</SUB>> ]
+"2473" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>447</SUB>> ]
+  "2363" -> "2373" 
+  "2417" -> "2434" 
+  "2440" -> "2467" 
+  "2471" -> "2473" 
+  "2342" -> "2359" 
+  "2342" -> "2367" 
+  "2365" -> "2363" 
+  "2369" -> "2391" 
+  "2369" -> "2402" 
+  "2398" -> "2410" 
+  "2398" -> "2419" 
+  "2418" -> "2426" 
+  "2423" -> "2417" 
+  "2430" -> "2439" 
+  "2430" -> "2445" 
+  "2442" -> "2440" 
+  "2463" -> "2469" 
+  "2463" -> "2471" 
+  "2343" -> "2342" 
+  "2343" -> "2353" 
+  "2349" -> "2342" 
+  "2356" -> "2473" 
+  "2367" -> "2365" 
+  "2370" -> "2369" 
+  "2391" -> "2396" 
+  "2393" -> "2473" 
+  "2399" -> "2398" 
+  "2399" -> "2407" 
+  "2404" -> "2398" 
+  "2410" -> "2416" 
+  "2413" -> "2473" 
+  "2419" -> "2418" 
+  "2424" -> "2427" 
+  "2427" -> "2423" 
+  "2431" -> "2430" 
+  "2436" -> "2473" 
+  "2443" -> "2450" 
+  "2446" -> "2442" 
+  "2465" -> "2463" 
+  "2469" -> "2471" 
+  "2344" -> "2343" 
+  "2350" -> "2349" 
+  "2357" -> "2356" 
+  "2371" -> "2377" 
+  "2374" -> "2386" 
+  "2386" -> "2388" 
+  "2388" -> "2370" 
+  "2394" -> "2393" 
+  "2400" -> "2399" 
+  "2405" -> "2404" 
+  "2414" -> "2413" 
+  "2426" -> "2424" 
+  "2432" -> "2431" 
+  "2437" -> "2436" 
+  "2445" -> "2443" 
+  "2447" -> "2457" 
+  "2452" -> "2446" 
+  "2467" -> "2465" 
+  "2345" -> "2344" 
+  "2351" -> "2350" 
+  "2359" -> "2357" 
+  "2373" -> "2371" 
   "2375" -> "2381" 
-  "2378" -> "2390" 
-  "2390" -> "2392" 
-  "2392" -> "2374" 
-  "2398" -> "2397" 
-  "2404" -> "2403" 
-  "2409" -> "2408" 
-  "2418" -> "2417" 
-  "2430" -> "2428" 
-  "2436" -> "2435" 
-  "2441" -> "2440" 
-  "2449" -> "2447" 
-  "2451" -> "2461" 
-  "2456" -> "2450" 
-  "2471" -> "2469" 
-  "2349" -> "2348" 
-  "2355" -> "2354" 
-  "2363" -> "2361" 
+  "2378" -> "2385" 
+  "2382" -> "2374" 
+  "2396" -> "2394" 
+  "2402" -> "2400" 
+  "2407" -> "2405" 
+  "2416" -> "2414" 
+  "2434" -> "2432" 
+  "2439" -> "2437" 
+  "2448" -> "2447" 
+  "2453" -> "2452" 
+  "2347" -> "2345" 
+  "2353" -> "2351" 
   "2377" -> "2375" 
-  "2379" -> "2385" 
-  "2382" -> "2389" 
-  "2386" -> "2378" 
-  "2400" -> "2398" 
-  "2406" -> "2404" 
-  "2411" -> "2409" 
-  "2420" -> "2418" 
-  "2438" -> "2436" 
-  "2443" -> "2441" 
-  "2452" -> "2451" 
-  "2457" -> "2456" 
-  "2351" -> "2349" 
-  "2357" -> "2355" 
-  "2381" -> "2379" 
+  "2379" -> "2378" 
   "2383" -> "2382" 
-  "2387" -> "2386" 
-  "2454" -> "2452" 
-  "2458" -> "2465" 
-  "2462" -> "2457" 
+  "2450" -> "2448" 
+  "2454" -> "2461" 
+  "2458" -> "2453" 
+  "2381" -> "2379" 
   "2385" -> "2383" 
-  "2389" -> "2387" 
+  "2455" -> "2454" 
   "2459" -> "2458" 
-  "2463" -> "2462" 
+  "2457" -> "2455" 
   "2461" -> "2459" 
-  "2465" -> "2463" 
-  "2341" -> "2351" 
+  "2337" -> "2347" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/72-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/72-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/72-cfg.dot	2023-06-07 19:37:50.957374269 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/72-cfg.dot	2023-06-07 19:37:55.467374365 +0330
@@ -1,89 +1,89 @@
 digraph "getPropertyString" {  
-"2484" [label = <(name,name(propertyName.c_str()))<SUB>483</SUB>> ]
-"2575" [label = <(_hidl_cb,_hidl_cb(Status::OK, value.c_str()))<SUB>503</SUB>> ]
-"2583" [label = <(RETURN,return Void();,return Void();)<SUB>504</SUB>> ]
-"2485" [label = <(c_str,propertyName.c_str())<SUB>483</SUB>> ]
-"2491" [label = <(&lt;operator&gt;.equals,name == kVendorKey)<SUB>486</SUB>> ]
-"2576" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>503</SUB>> ]
-"2579" [label = <(c_str,value.c_str())<SUB>503</SUB>> ]
-"2584" [label = <(Void,Void())<SUB>504</SUB>> ]
-"2486" [label = <(&lt;operator&gt;.fieldAccess,propertyName.c_str)<SUB>483</SUB>> ]
-"2495" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kVendorKey])<SUB>487</SUB>> ]
-"2578" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>503</SUB>> ]
-"2580" [label = <(&lt;operator&gt;.fieldAccess,value.c_str)<SUB>503</SUB>> ]
-"2488" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>483</SUB>> ]
-"2497" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kVendorKey])<SUB>487</SUB>> ]
-"2582" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>503</SUB>> ]
-"2503" [label = <(&lt;operator&gt;.equals,name == kVersionKey)<SUB>488</SUB>> ]
-"2507" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kVersionKey])<SUB>489</SUB>> ]
-"2509" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kVersionKey])<SUB>489</SUB>> ]
-"2515" [label = <(&lt;operator&gt;.equals,name == kPluginDescriptionKey)<SUB>490</SUB>> ]
-"2519" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kPluginDescriptionKey])<SUB>491</SUB>> ]
-"2521" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kPluginDescriptionKey])<SUB>491</SUB>> ]
-"2527" [label = <(&lt;operator&gt;.equals,name == kAlgorithmsKey)<SUB>492</SUB>> ]
-"2531" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kAlgorithmsKey])<SUB>493</SUB>> ]
-"2533" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kAlgorithmsKey])<SUB>493</SUB>> ]
-"2539" [label = <(&lt;operator&gt;.equals,name == kListenerTestSupportKey)<SUB>494</SUB>> ]
-"2543" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kListenerTestSupportKey])<SUB>495</SUB>> ]
-"2545" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kListenerTestSupportKey])<SUB>495</SUB>> ]
-"2551" [label = <(&lt;operator&gt;.equals,name == kDrmErrorTestKey)<SUB>496</SUB>> ]
-"2555" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kDrmErrorTestKey])<SUB>497</SUB>> ]
-"2557" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kDrmErrorTestKey])<SUB>497</SUB>> ]
-"2562" [label = <(ALOGE,ALOGE(&quot;App requested unknown string property %s&quot;, name.c_str()))<SUB>499</SUB>> ]
-"2568" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, &quot;&quot;))<SUB>500</SUB>> ]
-"2573" [label = <(RETURN,return Void();,return Void();)<SUB>501</SUB>> ]
-"2564" [label = <(c_str,name.c_str())<SUB>499</SUB>> ]
-"2569" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_CANNOT_HANDLE)<SUB>500</SUB>> ]
-"2574" [label = <(Void,Void())<SUB>501</SUB>> ]
-"2565" [label = <(&lt;operator&gt;.fieldAccess,name.c_str)<SUB>499</SUB>> ]
-"2571" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>500</SUB>> ]
-"2567" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>499</SUB>> ]
-"2479" [label = <(METHOD,getPropertyString)<SUB>481</SUB>> ]
-"2585" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>481</SUB>> ]
-  "2484" -> "2491" 
-  "2575" -> "2584" 
-  "2583" -> "2585" 
-  "2485" -> "2484" 
-  "2491" -> "2497" 
-  "2491" -> "2503" 
-  "2576" -> "2582" 
-  "2579" -> "2575" 
-  "2584" -> "2583" 
-  "2486" -> "2485" 
-  "2495" -> "2578" 
-  "2578" -> "2576" 
+"2480" [label = <(name,name(propertyName.c_str()))<SUB>482</SUB>> ]
+"2571" [label = <(_hidl_cb,_hidl_cb(Status::OK, value.c_str()))<SUB>502</SUB>> ]
+"2579" [label = <(RETURN,return Void();,return Void();)<SUB>503</SUB>> ]
+"2481" [label = <(c_str,propertyName.c_str())<SUB>482</SUB>> ]
+"2487" [label = <(&lt;operator&gt;.equals,name == kVendorKey)<SUB>485</SUB>> ]
+"2572" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>502</SUB>> ]
+"2575" [label = <(c_str,value.c_str())<SUB>502</SUB>> ]
+"2580" [label = <(Void,Void())<SUB>503</SUB>> ]
+"2482" [label = <(&lt;operator&gt;.fieldAccess,propertyName.c_str)<SUB>482</SUB>> ]
+"2491" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kVendorKey])<SUB>486</SUB>> ]
+"2574" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>502</SUB>> ]
+"2576" [label = <(&lt;operator&gt;.fieldAccess,value.c_str)<SUB>502</SUB>> ]
+"2484" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>482</SUB>> ]
+"2493" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kVendorKey])<SUB>486</SUB>> ]
+"2578" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>502</SUB>> ]
+"2499" [label = <(&lt;operator&gt;.equals,name == kVersionKey)<SUB>487</SUB>> ]
+"2503" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kVersionKey])<SUB>488</SUB>> ]
+"2505" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kVersionKey])<SUB>488</SUB>> ]
+"2511" [label = <(&lt;operator&gt;.equals,name == kPluginDescriptionKey)<SUB>489</SUB>> ]
+"2515" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kPluginDescriptionKey])<SUB>490</SUB>> ]
+"2517" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kPluginDescriptionKey])<SUB>490</SUB>> ]
+"2523" [label = <(&lt;operator&gt;.equals,name == kAlgorithmsKey)<SUB>491</SUB>> ]
+"2527" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kAlgorithmsKey])<SUB>492</SUB>> ]
+"2529" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kAlgorithmsKey])<SUB>492</SUB>> ]
+"2535" [label = <(&lt;operator&gt;.equals,name == kListenerTestSupportKey)<SUB>493</SUB>> ]
+"2539" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kListenerTestSupportKey])<SUB>494</SUB>> ]
+"2541" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kListenerTestSupportKey])<SUB>494</SUB>> ]
+"2547" [label = <(&lt;operator&gt;.equals,name == kDrmErrorTestKey)<SUB>495</SUB>> ]
+"2551" [label = <(&lt;operator&gt;.assignment,value = mStringProperties[kDrmErrorTestKey])<SUB>496</SUB>> ]
+"2553" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[kDrmErrorTestKey])<SUB>496</SUB>> ]
+"2558" [label = <(ALOGE,ALOGE(&quot;App requested unknown string property %s&quot;, name.c_str()))<SUB>498</SUB>> ]
+"2564" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, &quot;&quot;))<SUB>499</SUB>> ]
+"2569" [label = <(RETURN,return Void();,return Void();)<SUB>500</SUB>> ]
+"2560" [label = <(c_str,name.c_str())<SUB>498</SUB>> ]
+"2565" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_CANNOT_HANDLE)<SUB>499</SUB>> ]
+"2570" [label = <(Void,Void())<SUB>500</SUB>> ]
+"2561" [label = <(&lt;operator&gt;.fieldAccess,name.c_str)<SUB>498</SUB>> ]
+"2567" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>499</SUB>> ]
+"2563" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>498</SUB>> ]
+"2475" [label = <(METHOD,getPropertyString)<SUB>480</SUB>> ]
+"2581" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>480</SUB>> ]
+  "2480" -> "2487" 
+  "2571" -> "2580" 
+  "2579" -> "2581" 
+  "2481" -> "2480" 
+  "2487" -> "2493" 
+  "2487" -> "2499" 
+  "2572" -> "2578" 
+  "2575" -> "2571" 
   "2580" -> "2579" 
-  "2488" -> "2486" 
-  "2497" -> "2495" 
-  "2582" -> "2580" 
-  "2503" -> "2509" 
-  "2503" -> "2515" 
-  "2507" -> "2578" 
-  "2509" -> "2507" 
-  "2515" -> "2521" 
-  "2515" -> "2527" 
-  "2519" -> "2578" 
-  "2521" -> "2519" 
-  "2527" -> "2533" 
-  "2527" -> "2539" 
-  "2531" -> "2578" 
-  "2533" -> "2531" 
-  "2539" -> "2545" 
-  "2539" -> "2551" 
-  "2543" -> "2578" 
-  "2545" -> "2543" 
-  "2551" -> "2557" 
-  "2551" -> "2567" 
-  "2555" -> "2578" 
-  "2557" -> "2555" 
-  "2562" -> "2571" 
-  "2568" -> "2574" 
-  "2573" -> "2585" 
-  "2564" -> "2562" 
-  "2569" -> "2568" 
-  "2574" -> "2573" 
+  "2482" -> "2481" 
+  "2491" -> "2574" 
+  "2574" -> "2572" 
+  "2576" -> "2575" 
+  "2484" -> "2482" 
+  "2493" -> "2491" 
+  "2578" -> "2576" 
+  "2499" -> "2505" 
+  "2499" -> "2511" 
+  "2503" -> "2574" 
+  "2505" -> "2503" 
+  "2511" -> "2517" 
+  "2511" -> "2523" 
+  "2515" -> "2574" 
+  "2517" -> "2515" 
+  "2523" -> "2529" 
+  "2523" -> "2535" 
+  "2527" -> "2574" 
+  "2529" -> "2527" 
+  "2535" -> "2541" 
+  "2535" -> "2547" 
+  "2539" -> "2574" 
+  "2541" -> "2539" 
+  "2547" -> "2553" 
+  "2547" -> "2563" 
+  "2551" -> "2574" 
+  "2553" -> "2551" 
+  "2558" -> "2567" 
+  "2564" -> "2570" 
+  "2569" -> "2581" 
+  "2560" -> "2558" 
   "2565" -> "2564" 
-  "2571" -> "2569" 
+  "2570" -> "2569" 
+  "2561" -> "2560" 
   "2567" -> "2565" 
-  "2479" -> "2488" 
+  "2563" -> "2561" 
+  "2475" -> "2484" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/73-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/73-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/73-cfg.dot	2023-06-07 19:37:50.957374269 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/73-cfg.dot	2023-06-07 19:37:55.467374365 +0330
@@ -1,72 +1,72 @@
 digraph "getPropertyByteArray" {  
-"2592" [label = <(&lt;operator&gt;.assignment,itr =\012            mByteArrayProperties.find(std::string(propertyName.c_str())))<SUB>509</SUB>> ]
-"2630" [label = <(_hidl_cb,_hidl_cb(Status::OK, itr-&gt;second))<SUB>516</SUB>> ]
-"2637" [label = <(RETURN,return Void();,return Void();)<SUB>517</SUB>> ]
-"2594" [label = <(find,mByteArrayProperties.find(std::string(propertyName.c_str())))<SUB>510</SUB>> ]
-"2607" [label = <(&lt;operator&gt;.equals,itr == mByteArrayProperties.end())<SUB>511</SUB>> ]
-"2631" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>516</SUB>> ]
-"2634" [label = <(&lt;operator&gt;.indirectFieldAccess,itr-&gt;second)<SUB>516</SUB>> ]
-"2638" [label = <(Void,Void())<SUB>517</SUB>> ]
-"2595" [label = <(&lt;operator&gt;.fieldAccess,mByteArrayProperties.find)<SUB>510</SUB>> ]
-"2598" [label = <(std::string,std::string(propertyName.c_str()))<SUB>510</SUB>> ]
-"2609" [label = <(end,mByteArrayProperties.end())<SUB>511</SUB>> ]
-"2614" [label = <(ALOGE,ALOGE(&quot;App requested unknown property: %s&quot;, propertyName.c_str()))<SUB>512</SUB>> ]
-"2620" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, std::vector&lt;uint8_t&gt;()))<SUB>513</SUB>> ]
-"2628" [label = <(RETURN,return Void();,return Void();)<SUB>514</SUB>> ]
-"2633" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>516</SUB>> ]
-"2636" [label = <(FIELD_IDENTIFIER,second,second)<SUB>516</SUB>> ]
-"2597" [label = <(FIELD_IDENTIFIER,find,find)<SUB>510</SUB>> ]
-"2599" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>510</SUB>> ]
-"2602" [label = <(c_str,propertyName.c_str())<SUB>510</SUB>> ]
-"2610" [label = <(&lt;operator&gt;.fieldAccess,mByteArrayProperties.end)<SUB>511</SUB>> ]
-"2616" [label = <(c_str,propertyName.c_str())<SUB>512</SUB>> ]
-"2621" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>513</SUB>> ]
-"2624" [label = <(std::vector&lt;uint8_t&gt;,std::vector&lt;uint8_t&gt;())<SUB>513</SUB>> ]
-"2629" [label = <(Void,Void())<SUB>514</SUB>> ]
-"2601" [label = <(FIELD_IDENTIFIER,string,string)<SUB>510</SUB>> ]
-"2603" [label = <(&lt;operator&gt;.fieldAccess,propertyName.c_str)<SUB>510</SUB>> ]
-"2612" [label = <(FIELD_IDENTIFIER,end,end)<SUB>511</SUB>> ]
-"2617" [label = <(&lt;operator&gt;.fieldAccess,propertyName.c_str)<SUB>512</SUB>> ]
-"2623" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>513</SUB>> ]
-"2625" [label = <(&lt;operator&gt;.fieldAccess,std::vector&lt;uint8_t&gt;)<SUB>513</SUB>> ]
-"2605" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>510</SUB>> ]
-"2619" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>512</SUB>> ]
-"2627" [label = <(FIELD_IDENTIFIER,vector&lt;uint8_t&gt;,vector&lt;uint8_t&gt;)<SUB>513</SUB>> ]
-"2587" [label = <(METHOD,getPropertyByteArray)<SUB>507</SUB>> ]
-"2639" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>507</SUB>> ]
-  "2592" -> "2612" 
-  "2630" -> "2638" 
-  "2637" -> "2639" 
-  "2594" -> "2592" 
-  "2607" -> "2619" 
-  "2607" -> "2633" 
-  "2631" -> "2636" 
-  "2634" -> "2630" 
-  "2638" -> "2637" 
+"2588" [label = <(&lt;operator&gt;.assignment,itr =\012            mByteArrayProperties.find(std::string(propertyName.c_str())))<SUB>508</SUB>> ]
+"2626" [label = <(_hidl_cb,_hidl_cb(Status::OK, itr-&gt;second))<SUB>515</SUB>> ]
+"2633" [label = <(RETURN,return Void();,return Void();)<SUB>516</SUB>> ]
+"2590" [label = <(find,mByteArrayProperties.find(std::string(propertyName.c_str())))<SUB>509</SUB>> ]
+"2603" [label = <(&lt;operator&gt;.equals,itr == mByteArrayProperties.end())<SUB>510</SUB>> ]
+"2627" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>515</SUB>> ]
+"2630" [label = <(&lt;operator&gt;.indirectFieldAccess,itr-&gt;second)<SUB>515</SUB>> ]
+"2634" [label = <(Void,Void())<SUB>516</SUB>> ]
+"2591" [label = <(&lt;operator&gt;.fieldAccess,mByteArrayProperties.find)<SUB>509</SUB>> ]
+"2594" [label = <(std::string,std::string(propertyName.c_str()))<SUB>509</SUB>> ]
+"2605" [label = <(end,mByteArrayProperties.end())<SUB>510</SUB>> ]
+"2610" [label = <(ALOGE,ALOGE(&quot;App requested unknown property: %s&quot;, propertyName.c_str()))<SUB>511</SUB>> ]
+"2616" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, std::vector&lt;uint8_t&gt;()))<SUB>512</SUB>> ]
+"2624" [label = <(RETURN,return Void();,return Void();)<SUB>513</SUB>> ]
+"2629" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>515</SUB>> ]
+"2632" [label = <(FIELD_IDENTIFIER,second,second)<SUB>515</SUB>> ]
+"2593" [label = <(FIELD_IDENTIFIER,find,find)<SUB>509</SUB>> ]
+"2595" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>509</SUB>> ]
+"2598" [label = <(c_str,propertyName.c_str())<SUB>509</SUB>> ]
+"2606" [label = <(&lt;operator&gt;.fieldAccess,mByteArrayProperties.end)<SUB>510</SUB>> ]
+"2612" [label = <(c_str,propertyName.c_str())<SUB>511</SUB>> ]
+"2617" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>512</SUB>> ]
+"2620" [label = <(std::vector&lt;uint8_t&gt;,std::vector&lt;uint8_t&gt;())<SUB>512</SUB>> ]
+"2625" [label = <(Void,Void())<SUB>513</SUB>> ]
+"2597" [label = <(FIELD_IDENTIFIER,string,string)<SUB>509</SUB>> ]
+"2599" [label = <(&lt;operator&gt;.fieldAccess,propertyName.c_str)<SUB>509</SUB>> ]
+"2608" [label = <(FIELD_IDENTIFIER,end,end)<SUB>510</SUB>> ]
+"2613" [label = <(&lt;operator&gt;.fieldAccess,propertyName.c_str)<SUB>511</SUB>> ]
+"2619" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>512</SUB>> ]
+"2621" [label = <(&lt;operator&gt;.fieldAccess,std::vector&lt;uint8_t&gt;)<SUB>512</SUB>> ]
+"2601" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>509</SUB>> ]
+"2615" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>511</SUB>> ]
+"2623" [label = <(FIELD_IDENTIFIER,vector&lt;uint8_t&gt;,vector&lt;uint8_t&gt;)<SUB>512</SUB>> ]
+"2583" [label = <(METHOD,getPropertyByteArray)<SUB>506</SUB>> ]
+"2635" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>506</SUB>> ]
+  "2588" -> "2608" 
+  "2626" -> "2634" 
+  "2633" -> "2635" 
+  "2590" -> "2588" 
+  "2603" -> "2615" 
+  "2603" -> "2629" 
+  "2627" -> "2632" 
+  "2630" -> "2626" 
+  "2634" -> "2633" 
+  "2591" -> "2597" 
+  "2594" -> "2590" 
+  "2605" -> "2603" 
+  "2610" -> "2619" 
+  "2616" -> "2625" 
+  "2624" -> "2635" 
+  "2629" -> "2627" 
+  "2632" -> "2630" 
+  "2593" -> "2591" 
   "2595" -> "2601" 
   "2598" -> "2594" 
-  "2609" -> "2607" 
-  "2614" -> "2623" 
-  "2620" -> "2629" 
-  "2628" -> "2639" 
-  "2633" -> "2631" 
-  "2636" -> "2634" 
-  "2597" -> "2595" 
-  "2599" -> "2605" 
-  "2602" -> "2598" 
-  "2610" -> "2609" 
-  "2616" -> "2614" 
-  "2621" -> "2627" 
-  "2624" -> "2620" 
-  "2629" -> "2628" 
-  "2601" -> "2599" 
-  "2603" -> "2602" 
+  "2606" -> "2605" 
   "2612" -> "2610" 
-  "2617" -> "2616" 
-  "2623" -> "2621" 
+  "2617" -> "2623" 
+  "2620" -> "2616" 
   "2625" -> "2624" 
-  "2605" -> "2603" 
+  "2597" -> "2595" 
+  "2599" -> "2598" 
+  "2608" -> "2606" 
+  "2613" -> "2612" 
   "2619" -> "2617" 
-  "2627" -> "2625" 
-  "2587" -> "2597" 
+  "2621" -> "2620" 
+  "2601" -> "2599" 
+  "2615" -> "2613" 
+  "2623" -> "2621" 
+  "2583" -> "2593" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/74-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/74-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/74-cfg.dot	2023-06-07 19:37:50.957374269 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/74-cfg.dot	2023-06-07 19:37:55.477374363 +0330
@@ -1,178 +1,178 @@
 digraph "setPropertyString" {  
-"2646" [label = <(append,immutableKeys.append(kAlgorithmsKey + &quot;,&quot;))<SUB>524</SUB>> ]
-"2653" [label = <(append,immutableKeys.append(kPluginDescriptionKey + &quot;,&quot;))<SUB>525</SUB>> ]
-"2660" [label = <(append,immutableKeys.append(kVendorKey + &quot;,&quot;))<SUB>526</SUB>> ]
-"2667" [label = <(append,immutableKeys.append(kVersionKey + &quot;,&quot;))<SUB>527</SUB>> ]
-"2675" [label = <(&lt;operator&gt;.assignment,key = std::string(name.c_str()))<SUB>529</SUB>> ]
-"2709" [label = <(&lt;operator&gt;.assignment,itr =\012            mStringProperties.find(key))<SUB>535</SUB>> ]
-"2792" [label = <(&lt;operator&gt;.assignment,mStringProperties[key] = std::string(value.c_str()))<SUB>556</SUB>> ]
-"2804" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>557</SUB>> ]
-"2647" [label = <(&lt;operator&gt;.fieldAccess,immutableKeys.append)<SUB>524</SUB>> ]
-"2650" [label = <(&lt;operator&gt;.addition,kAlgorithmsKey + &quot;,&quot;)<SUB>524</SUB>> ]
-"2654" [label = <(&lt;operator&gt;.fieldAccess,immutableKeys.append)<SUB>525</SUB>> ]
-"2657" [label = <(&lt;operator&gt;.addition,kPluginDescriptionKey + &quot;,&quot;)<SUB>525</SUB>> ]
-"2661" [label = <(&lt;operator&gt;.fieldAccess,immutableKeys.append)<SUB>526</SUB>> ]
-"2664" [label = <(&lt;operator&gt;.addition,kVendorKey + &quot;,&quot;)<SUB>526</SUB>> ]
-"2668" [label = <(&lt;operator&gt;.fieldAccess,immutableKeys.append)<SUB>527</SUB>> ]
-"2671" [label = <(&lt;operator&gt;.addition,kVersionKey + &quot;,&quot;)<SUB>527</SUB>> ]
-"2677" [label = <(std::string,std::string(name.c_str()))<SUB>529</SUB>> ]
-"2686" [label = <(&lt;operator&gt;.notEquals,immutableKeys.find(key) != std::string::npos)<SUB>530</SUB>> ]
-"2711" [label = <(find,mStringProperties.find(key))<SUB>536</SUB>> ]
-"2717" [label = <(&lt;operator&gt;.equals,itr == mStringProperties.end())<SUB>537</SUB>> ]
-"2735" [label = <(&lt;operator&gt;.equals,name == kDrmErrorTestKey)<SUB>542</SUB>> ]
-"2793" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[key])<SUB>556</SUB>> ]
-"2796" [label = <(std::string,std::string(value.c_str()))<SUB>556</SUB>> ]
-"2805" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>557</SUB>> ]
-"2649" [label = <(FIELD_IDENTIFIER,append,append)<SUB>524</SUB>> ]
-"2656" [label = <(FIELD_IDENTIFIER,append,append)<SUB>525</SUB>> ]
-"2663" [label = <(FIELD_IDENTIFIER,append,append)<SUB>526</SUB>> ]
-"2670" [label = <(FIELD_IDENTIFIER,append,append)<SUB>527</SUB>> ]
-"2678" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>529</SUB>> ]
-"2681" [label = <(c_str,name.c_str())<SUB>529</SUB>> ]
-"2687" [label = <(find,immutableKeys.find(key))<SUB>530</SUB>> ]
-"2692" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>530</SUB>> ]
-"2698" [label = <(ALOGD,ALOGD(&quot;Cannot set immutable property: %s&quot;, key.c_str()))<SUB>531</SUB>> ]
-"2704" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>532</SUB>> ]
-"2712" [label = <(&lt;operator&gt;.fieldAccess,mStringProperties.find)<SUB>536</SUB>> ]
-"2719" [label = <(end,mStringProperties.end())<SUB>537</SUB>> ]
-"2724" [label = <(ALOGE,ALOGE(&quot;Cannot set undefined property string, key=%s&quot;, key.c_str()))<SUB>538</SUB>> ]
-"2730" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>539</SUB>> ]
-"2797" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>556</SUB>> ]
-"2800" [label = <(c_str,value.c_str())<SUB>556</SUB>> ]
-"2807" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>557</SUB>> ]
-"2680" [label = <(FIELD_IDENTIFIER,string,string)<SUB>529</SUB>> ]
-"2682" [label = <(&lt;operator&gt;.fieldAccess,name.c_str)<SUB>529</SUB>> ]
-"2688" [label = <(&lt;operator&gt;.fieldAccess,immutableKeys.find)<SUB>530</SUB>> ]
-"2693" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>530</SUB>> ]
-"2696" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>530</SUB>> ]
-"2700" [label = <(c_str,key.c_str())<SUB>531</SUB>> ]
-"2705" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>532</SUB>> ]
-"2714" [label = <(FIELD_IDENTIFIER,find,find)<SUB>536</SUB>> ]
-"2720" [label = <(&lt;operator&gt;.fieldAccess,mStringProperties.end)<SUB>537</SUB>> ]
-"2726" [label = <(c_str,key.c_str())<SUB>538</SUB>> ]
-"2731" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>539</SUB>> ]
-"2740" [label = <(&lt;operator&gt;.equals,value == kResourceContentionValue)<SUB>543</SUB>> ]
-"2799" [label = <(FIELD_IDENTIFIER,string,string)<SUB>556</SUB>> ]
-"2801" [label = <(&lt;operator&gt;.fieldAccess,value.c_str)<SUB>556</SUB>> ]
-"2684" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>529</SUB>> ]
-"2690" [label = <(FIELD_IDENTIFIER,find,find)<SUB>530</SUB>> ]
-"2701" [label = <(&lt;operator&gt;.fieldAccess,key.c_str)<SUB>531</SUB>> ]
-"2707" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>532</SUB>> ]
-"2722" [label = <(FIELD_IDENTIFIER,end,end)<SUB>537</SUB>> ]
-"2727" [label = <(&lt;operator&gt;.fieldAccess,key.c_str)<SUB>538</SUB>> ]
-"2733" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>539</SUB>> ]
-"2744" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::ERROR_DRM_RESOURCE_CONTENTION)<SUB>544</SUB>> ]
-"2803" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>556</SUB>> ]
-"2703" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>531</SUB>> ]
-"2729" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>538</SUB>> ]
-"2746" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_RESOURCE_CONTENTION)<SUB>544</SUB>> ]
-"2748" [label = <(FIELD_IDENTIFIER,ERROR_DRM_RESOURCE_CONTENTION,ERROR_DRM_RESOURCE_CONTENTION)<SUB>544</SUB>> ]
-"2752" [label = <(&lt;operator&gt;.equals,value == kLostStateValue)<SUB>545</SUB>> ]
-"2756" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::ERROR_DRM_SESSION_LOST_STATE)<SUB>546</SUB>> ]
-"2758" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_SESSION_LOST_STATE)<SUB>546</SUB>> ]
-"2760" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_LOST_STATE,ERROR_DRM_SESSION_LOST_STATE)<SUB>546</SUB>> ]
-"2764" [label = <(&lt;operator&gt;.equals,value == kFrameTooLargeValue)<SUB>547</SUB>> ]
-"2768" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>548</SUB>> ]
-"2770" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>548</SUB>> ]
-"2772" [label = <(FIELD_IDENTIFIER,ERROR_DRM_FRAME_TOO_LARGE,ERROR_DRM_FRAME_TOO_LARGE)<SUB>548</SUB>> ]
-"2776" [label = <(&lt;operator&gt;.equals,value == kInvalidStateValue)<SUB>549</SUB>> ]
-"2780" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::ERROR_DRM_INVALID_STATE)<SUB>550</SUB>> ]
-"2782" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_INVALID_STATE)<SUB>550</SUB>> ]
-"2787" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::ERROR_DRM_UNKNOWN)<SUB>552</SUB>> ]
-"2784" [label = <(FIELD_IDENTIFIER,ERROR_DRM_INVALID_STATE,ERROR_DRM_INVALID_STATE)<SUB>550</SUB>> ]
-"2789" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_UNKNOWN)<SUB>552</SUB>> ]
-"2791" [label = <(FIELD_IDENTIFIER,ERROR_DRM_UNKNOWN,ERROR_DRM_UNKNOWN)<SUB>552</SUB>> ]
-"2641" [label = <(METHOD,setPropertyString)<SUB>521</SUB>> ]
-"2808" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>521</SUB>> ]
-  "2646" -> "2656" 
-  "2653" -> "2663" 
-  "2660" -> "2670" 
-  "2667" -> "2680" 
-  "2675" -> "2690" 
-  "2709" -> "2722" 
-  "2792" -> "2807" 
-  "2804" -> "2808" 
-  "2647" -> "2650" 
-  "2650" -> "2646" 
-  "2654" -> "2657" 
-  "2657" -> "2653" 
-  "2661" -> "2664" 
-  "2664" -> "2660" 
-  "2668" -> "2671" 
-  "2671" -> "2667" 
-  "2677" -> "2675" 
-  "2686" -> "2703" 
-  "2686" -> "2714" 
-  "2711" -> "2709" 
-  "2717" -> "2729" 
-  "2717" -> "2735" 
-  "2735" -> "2740" 
-  "2735" -> "2793" 
+"2642" [label = <(append,immutableKeys.append(kAlgorithmsKey + &quot;,&quot;))<SUB>523</SUB>> ]
+"2649" [label = <(append,immutableKeys.append(kPluginDescriptionKey + &quot;,&quot;))<SUB>524</SUB>> ]
+"2656" [label = <(append,immutableKeys.append(kVendorKey + &quot;,&quot;))<SUB>525</SUB>> ]
+"2663" [label = <(append,immutableKeys.append(kVersionKey + &quot;,&quot;))<SUB>526</SUB>> ]
+"2671" [label = <(&lt;operator&gt;.assignment,key = std::string(name.c_str()))<SUB>528</SUB>> ]
+"2705" [label = <(&lt;operator&gt;.assignment,itr =\012            mStringProperties.find(key))<SUB>534</SUB>> ]
+"2788" [label = <(&lt;operator&gt;.assignment,mStringProperties[key] = std::string(value.c_str()))<SUB>555</SUB>> ]
+"2800" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>556</SUB>> ]
+"2643" [label = <(&lt;operator&gt;.fieldAccess,immutableKeys.append)<SUB>523</SUB>> ]
+"2646" [label = <(&lt;operator&gt;.addition,kAlgorithmsKey + &quot;,&quot;)<SUB>523</SUB>> ]
+"2650" [label = <(&lt;operator&gt;.fieldAccess,immutableKeys.append)<SUB>524</SUB>> ]
+"2653" [label = <(&lt;operator&gt;.addition,kPluginDescriptionKey + &quot;,&quot;)<SUB>524</SUB>> ]
+"2657" [label = <(&lt;operator&gt;.fieldAccess,immutableKeys.append)<SUB>525</SUB>> ]
+"2660" [label = <(&lt;operator&gt;.addition,kVendorKey + &quot;,&quot;)<SUB>525</SUB>> ]
+"2664" [label = <(&lt;operator&gt;.fieldAccess,immutableKeys.append)<SUB>526</SUB>> ]
+"2667" [label = <(&lt;operator&gt;.addition,kVersionKey + &quot;,&quot;)<SUB>526</SUB>> ]
+"2673" [label = <(std::string,std::string(name.c_str()))<SUB>528</SUB>> ]
+"2682" [label = <(&lt;operator&gt;.notEquals,immutableKeys.find(key) != std::string::npos)<SUB>529</SUB>> ]
+"2707" [label = <(find,mStringProperties.find(key))<SUB>535</SUB>> ]
+"2713" [label = <(&lt;operator&gt;.equals,itr == mStringProperties.end())<SUB>536</SUB>> ]
+"2731" [label = <(&lt;operator&gt;.equals,name == kDrmErrorTestKey)<SUB>541</SUB>> ]
+"2789" [label = <(&lt;operator&gt;.indirectIndexAccess,mStringProperties[key])<SUB>555</SUB>> ]
+"2792" [label = <(std::string,std::string(value.c_str()))<SUB>555</SUB>> ]
+"2801" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>556</SUB>> ]
+"2645" [label = <(FIELD_IDENTIFIER,append,append)<SUB>523</SUB>> ]
+"2652" [label = <(FIELD_IDENTIFIER,append,append)<SUB>524</SUB>> ]
+"2659" [label = <(FIELD_IDENTIFIER,append,append)<SUB>525</SUB>> ]
+"2666" [label = <(FIELD_IDENTIFIER,append,append)<SUB>526</SUB>> ]
+"2674" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>528</SUB>> ]
+"2677" [label = <(c_str,name.c_str())<SUB>528</SUB>> ]
+"2683" [label = <(find,immutableKeys.find(key))<SUB>529</SUB>> ]
+"2688" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>529</SUB>> ]
+"2694" [label = <(ALOGD,ALOGD(&quot;Cannot set immutable property: %s&quot;, key.c_str()))<SUB>530</SUB>> ]
+"2700" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>531</SUB>> ]
+"2708" [label = <(&lt;operator&gt;.fieldAccess,mStringProperties.find)<SUB>535</SUB>> ]
+"2715" [label = <(end,mStringProperties.end())<SUB>536</SUB>> ]
+"2720" [label = <(ALOGE,ALOGE(&quot;Cannot set undefined property string, key=%s&quot;, key.c_str()))<SUB>537</SUB>> ]
+"2726" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>538</SUB>> ]
+"2793" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>555</SUB>> ]
+"2796" [label = <(c_str,value.c_str())<SUB>555</SUB>> ]
+"2803" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>556</SUB>> ]
+"2676" [label = <(FIELD_IDENTIFIER,string,string)<SUB>528</SUB>> ]
+"2678" [label = <(&lt;operator&gt;.fieldAccess,name.c_str)<SUB>528</SUB>> ]
+"2684" [label = <(&lt;operator&gt;.fieldAccess,immutableKeys.find)<SUB>529</SUB>> ]
+"2689" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>529</SUB>> ]
+"2692" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>529</SUB>> ]
+"2696" [label = <(c_str,key.c_str())<SUB>530</SUB>> ]
+"2701" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>531</SUB>> ]
+"2710" [label = <(FIELD_IDENTIFIER,find,find)<SUB>535</SUB>> ]
+"2716" [label = <(&lt;operator&gt;.fieldAccess,mStringProperties.end)<SUB>536</SUB>> ]
+"2722" [label = <(c_str,key.c_str())<SUB>537</SUB>> ]
+"2727" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>538</SUB>> ]
+"2736" [label = <(&lt;operator&gt;.equals,value == kResourceContentionValue)<SUB>542</SUB>> ]
+"2795" [label = <(FIELD_IDENTIFIER,string,string)<SUB>555</SUB>> ]
+"2797" [label = <(&lt;operator&gt;.fieldAccess,value.c_str)<SUB>555</SUB>> ]
+"2680" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>528</SUB>> ]
+"2686" [label = <(FIELD_IDENTIFIER,find,find)<SUB>529</SUB>> ]
+"2697" [label = <(&lt;operator&gt;.fieldAccess,key.c_str)<SUB>530</SUB>> ]
+"2703" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>531</SUB>> ]
+"2718" [label = <(FIELD_IDENTIFIER,end,end)<SUB>536</SUB>> ]
+"2723" [label = <(&lt;operator&gt;.fieldAccess,key.c_str)<SUB>537</SUB>> ]
+"2729" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>538</SUB>> ]
+"2740" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::ERROR_DRM_RESOURCE_CONTENTION)<SUB>543</SUB>> ]
+"2799" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>555</SUB>> ]
+"2699" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>530</SUB>> ]
+"2725" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>537</SUB>> ]
+"2742" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_RESOURCE_CONTENTION)<SUB>543</SUB>> ]
+"2744" [label = <(FIELD_IDENTIFIER,ERROR_DRM_RESOURCE_CONTENTION,ERROR_DRM_RESOURCE_CONTENTION)<SUB>543</SUB>> ]
+"2748" [label = <(&lt;operator&gt;.equals,value == kLostStateValue)<SUB>544</SUB>> ]
+"2752" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::ERROR_DRM_SESSION_LOST_STATE)<SUB>545</SUB>> ]
+"2754" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_SESSION_LOST_STATE)<SUB>545</SUB>> ]
+"2756" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_LOST_STATE,ERROR_DRM_SESSION_LOST_STATE)<SUB>545</SUB>> ]
+"2760" [label = <(&lt;operator&gt;.equals,value == kFrameTooLargeValue)<SUB>546</SUB>> ]
+"2764" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>547</SUB>> ]
+"2766" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_FRAME_TOO_LARGE)<SUB>547</SUB>> ]
+"2768" [label = <(FIELD_IDENTIFIER,ERROR_DRM_FRAME_TOO_LARGE,ERROR_DRM_FRAME_TOO_LARGE)<SUB>547</SUB>> ]
+"2772" [label = <(&lt;operator&gt;.equals,value == kInvalidStateValue)<SUB>548</SUB>> ]
+"2776" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::ERROR_DRM_INVALID_STATE)<SUB>549</SUB>> ]
+"2778" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_INVALID_STATE)<SUB>549</SUB>> ]
+"2783" [label = <(&lt;operator&gt;.assignment,mMockError = Status_V1_2::ERROR_DRM_UNKNOWN)<SUB>551</SUB>> ]
+"2780" [label = <(FIELD_IDENTIFIER,ERROR_DRM_INVALID_STATE,ERROR_DRM_INVALID_STATE)<SUB>549</SUB>> ]
+"2785" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::ERROR_DRM_UNKNOWN)<SUB>551</SUB>> ]
+"2787" [label = <(FIELD_IDENTIFIER,ERROR_DRM_UNKNOWN,ERROR_DRM_UNKNOWN)<SUB>551</SUB>> ]
+"2637" [label = <(METHOD,setPropertyString)<SUB>520</SUB>> ]
+"2804" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>520</SUB>> ]
+  "2642" -> "2652" 
+  "2649" -> "2659" 
+  "2656" -> "2666" 
+  "2663" -> "2676" 
+  "2671" -> "2686" 
+  "2705" -> "2718" 
+  "2788" -> "2803" 
+  "2800" -> "2804" 
+  "2643" -> "2646" 
+  "2646" -> "2642" 
+  "2650" -> "2653" 
+  "2653" -> "2649" 
+  "2657" -> "2660" 
+  "2660" -> "2656" 
+  "2664" -> "2667" 
+  "2667" -> "2663" 
+  "2673" -> "2671" 
+  "2682" -> "2699" 
+  "2682" -> "2710" 
+  "2707" -> "2705" 
+  "2713" -> "2725" 
+  "2713" -> "2731" 
+  "2731" -> "2736" 
+  "2731" -> "2789" 
+  "2789" -> "2795" 
+  "2792" -> "2788" 
+  "2801" -> "2800" 
+  "2645" -> "2643" 
+  "2652" -> "2650" 
+  "2659" -> "2657" 
+  "2666" -> "2664" 
+  "2674" -> "2680" 
+  "2677" -> "2673" 
+  "2683" -> "2689" 
+  "2688" -> "2682" 
+  "2694" -> "2703" 
+  "2700" -> "2804" 
+  "2708" -> "2707" 
+  "2715" -> "2713" 
+  "2720" -> "2729" 
+  "2726" -> "2804" 
   "2793" -> "2799" 
   "2796" -> "2792" 
-  "2805" -> "2804" 
-  "2649" -> "2647" 
-  "2656" -> "2654" 
-  "2663" -> "2661" 
-  "2670" -> "2668" 
-  "2678" -> "2684" 
-  "2681" -> "2677" 
-  "2687" -> "2693" 
-  "2692" -> "2686" 
-  "2698" -> "2707" 
-  "2704" -> "2808" 
-  "2712" -> "2711" 
-  "2719" -> "2717" 
-  "2724" -> "2733" 
-  "2730" -> "2808" 
-  "2797" -> "2803" 
-  "2800" -> "2796" 
-  "2807" -> "2805" 
-  "2680" -> "2678" 
-  "2682" -> "2681" 
-  "2688" -> "2687" 
-  "2693" -> "2696" 
-  "2696" -> "2692" 
-  "2700" -> "2698" 
-  "2705" -> "2704" 
-  "2714" -> "2712" 
-  "2720" -> "2719" 
-  "2726" -> "2724" 
-  "2731" -> "2730" 
-  "2740" -> "2748" 
-  "2740" -> "2752" 
-  "2799" -> "2797" 
-  "2801" -> "2800" 
-  "2684" -> "2682" 
-  "2690" -> "2688" 
+  "2803" -> "2801" 
+  "2676" -> "2674" 
+  "2678" -> "2677" 
+  "2684" -> "2683" 
+  "2689" -> "2692" 
+  "2692" -> "2688" 
+  "2696" -> "2694" 
   "2701" -> "2700" 
-  "2707" -> "2705" 
+  "2710" -> "2708" 
+  "2716" -> "2715" 
   "2722" -> "2720" 
   "2727" -> "2726" 
-  "2733" -> "2731" 
-  "2744" -> "2793" 
-  "2803" -> "2801" 
+  "2736" -> "2744" 
+  "2736" -> "2748" 
+  "2795" -> "2793" 
+  "2797" -> "2796" 
+  "2680" -> "2678" 
+  "2686" -> "2684" 
+  "2697" -> "2696" 
   "2703" -> "2701" 
+  "2718" -> "2716" 
+  "2723" -> "2722" 
   "2729" -> "2727" 
-  "2746" -> "2744" 
-  "2748" -> "2746" 
-  "2752" -> "2760" 
-  "2752" -> "2764" 
-  "2756" -> "2793" 
-  "2758" -> "2756" 
-  "2760" -> "2758" 
-  "2764" -> "2772" 
-  "2764" -> "2776" 
-  "2768" -> "2793" 
-  "2770" -> "2768" 
-  "2772" -> "2770" 
-  "2776" -> "2784" 
-  "2776" -> "2791" 
-  "2780" -> "2793" 
-  "2782" -> "2780" 
-  "2787" -> "2793" 
-  "2784" -> "2782" 
-  "2789" -> "2787" 
-  "2791" -> "2789" 
-  "2641" -> "2649" 
+  "2740" -> "2789" 
+  "2799" -> "2797" 
+  "2699" -> "2697" 
+  "2725" -> "2723" 
+  "2742" -> "2740" 
+  "2744" -> "2742" 
+  "2748" -> "2756" 
+  "2748" -> "2760" 
+  "2752" -> "2789" 
+  "2754" -> "2752" 
+  "2756" -> "2754" 
+  "2760" -> "2768" 
+  "2760" -> "2772" 
+  "2764" -> "2789" 
+  "2766" -> "2764" 
+  "2768" -> "2766" 
+  "2772" -> "2780" 
+  "2772" -> "2787" 
+  "2776" -> "2789" 
+  "2778" -> "2776" 
+  "2783" -> "2789" 
+  "2780" -> "2778" 
+  "2785" -> "2783" 
+  "2787" -> "2785" 
+  "2637" -> "2645" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/75-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/75-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/75-cfg.dot	2023-06-07 19:37:50.957374269 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/75-cfg.dot	2023-06-07 19:37:55.477374363 +0330
@@ -1,53 +1,53 @@
 digraph "setPropertyByteArray" {  
-"2814" [label = <(UNUSED,UNUSED(value))<SUB>562</SUB>> ]
-"2848" [label = <(ALOGE,ALOGE(&quot;Failed to set property byte array, key=%s&quot;, name.c_str()))<SUB>572</SUB>> ]
-"2854" [label = <(RETURN,return Status::ERROR_DRM_CANNOT_HANDLE;,return Status::ERROR_DRM_CANNOT_HANDLE;)<SUB>573</SUB>> ]
-"2817" [label = <(&lt;operator&gt;.equals,name == kDeviceIdKey)<SUB>563</SUB>> ]
-"2850" [label = <(c_str,name.c_str())<SUB>572</SUB>> ]
-"2855" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_CANNOT_HANDLE)<SUB>573</SUB>> ]
-"2821" [label = <(ALOGD,ALOGD(&quot;Cannot set immutable property: %s&quot;, name.c_str()))<SUB>564</SUB>> ]
-"2827" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>565</SUB>> ]
-"2851" [label = <(&lt;operator&gt;.fieldAccess,name.c_str)<SUB>572</SUB>> ]
-"2857" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>573</SUB>> ]
-"2823" [label = <(c_str,name.c_str())<SUB>564</SUB>> ]
-"2828" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>565</SUB>> ]
-"2853" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>572</SUB>> ]
-"2824" [label = <(&lt;operator&gt;.fieldAccess,name.c_str)<SUB>564</SUB>> ]
-"2830" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>565</SUB>> ]
-"2834" [label = <(&lt;operator&gt;.equals,name == kClientIdKey)<SUB>566</SUB>> ]
-"2826" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>564</SUB>> ]
-"2838" [label = <(&lt;operator&gt;.assignment,mByteArrayProperties[kClientIdKey] = toVector(value))<SUB>567</SUB>> ]
-"2844" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>568</SUB>> ]
-"2839" [label = <(&lt;operator&gt;.indirectIndexAccess,mByteArrayProperties[kClientIdKey])<SUB>567</SUB>> ]
-"2842" [label = <(toVector,toVector(value))<SUB>567</SUB>> ]
-"2845" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>568</SUB>> ]
-"2847" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>568</SUB>> ]
-"2810" [label = <(METHOD,setPropertyByteArray)<SUB>560</SUB>> ]
-"2858" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>560</SUB>> ]
-  "2814" -> "2817" 
-  "2848" -> "2857" 
-  "2854" -> "2858" 
-  "2817" -> "2826" 
-  "2817" -> "2834" 
-  "2850" -> "2848" 
-  "2855" -> "2854" 
-  "2821" -> "2830" 
-  "2827" -> "2858" 
+"2810" [label = <(UNUSED,UNUSED(value))<SUB>561</SUB>> ]
+"2844" [label = <(ALOGE,ALOGE(&quot;Failed to set property byte array, key=%s&quot;, name.c_str()))<SUB>571</SUB>> ]
+"2850" [label = <(RETURN,return Status::ERROR_DRM_CANNOT_HANDLE;,return Status::ERROR_DRM_CANNOT_HANDLE;)<SUB>572</SUB>> ]
+"2813" [label = <(&lt;operator&gt;.equals,name == kDeviceIdKey)<SUB>562</SUB>> ]
+"2846" [label = <(c_str,name.c_str())<SUB>571</SUB>> ]
+"2851" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_CANNOT_HANDLE)<SUB>572</SUB>> ]
+"2817" [label = <(ALOGD,ALOGD(&quot;Cannot set immutable property: %s&quot;, name.c_str()))<SUB>563</SUB>> ]
+"2823" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>564</SUB>> ]
+"2847" [label = <(&lt;operator&gt;.fieldAccess,name.c_str)<SUB>571</SUB>> ]
+"2853" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>572</SUB>> ]
+"2819" [label = <(c_str,name.c_str())<SUB>563</SUB>> ]
+"2824" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>564</SUB>> ]
+"2849" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>571</SUB>> ]
+"2820" [label = <(&lt;operator&gt;.fieldAccess,name.c_str)<SUB>563</SUB>> ]
+"2826" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>564</SUB>> ]
+"2830" [label = <(&lt;operator&gt;.equals,name == kClientIdKey)<SUB>565</SUB>> ]
+"2822" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>563</SUB>> ]
+"2834" [label = <(&lt;operator&gt;.assignment,mByteArrayProperties[kClientIdKey] = toVector(value))<SUB>566</SUB>> ]
+"2840" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>567</SUB>> ]
+"2835" [label = <(&lt;operator&gt;.indirectIndexAccess,mByteArrayProperties[kClientIdKey])<SUB>566</SUB>> ]
+"2838" [label = <(toVector,toVector(value))<SUB>566</SUB>> ]
+"2841" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>567</SUB>> ]
+"2843" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>567</SUB>> ]
+"2806" [label = <(METHOD,setPropertyByteArray)<SUB>559</SUB>> ]
+"2854" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>559</SUB>> ]
+  "2810" -> "2813" 
+  "2844" -> "2853" 
+  "2850" -> "2854" 
+  "2813" -> "2822" 
+  "2813" -> "2830" 
+  "2846" -> "2844" 
   "2851" -> "2850" 
-  "2857" -> "2855" 
-  "2823" -> "2821" 
-  "2828" -> "2827" 
+  "2817" -> "2826" 
+  "2823" -> "2854" 
+  "2847" -> "2846" 
   "2853" -> "2851" 
+  "2819" -> "2817" 
   "2824" -> "2823" 
-  "2830" -> "2828" 
-  "2834" -> "2839" 
-  "2834" -> "2853" 
+  "2849" -> "2847" 
+  "2820" -> "2819" 
   "2826" -> "2824" 
-  "2838" -> "2847" 
-  "2844" -> "2858" 
-  "2839" -> "2842" 
-  "2842" -> "2838" 
-  "2845" -> "2844" 
-  "2847" -> "2845" 
-  "2810" -> "2814" 
+  "2830" -> "2835" 
+  "2830" -> "2849" 
+  "2822" -> "2820" 
+  "2834" -> "2843" 
+  "2840" -> "2854" 
+  "2835" -> "2838" 
+  "2838" -> "2834" 
+  "2841" -> "2840" 
+  "2843" -> "2841" 
+  "2806" -> "2810" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/76-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/76-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/76-cfg.dot	2023-06-07 19:37:50.967374269 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/76-cfg.dot	2023-06-07 19:37:55.477374363 +0330
@@ -1,95 +1,95 @@
 digraph "queryKeyStatus" {  
-"2879" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;KeyValue&gt; infoMapVec)<SUB>586</SUB>> ]
-"2886" [label = <(clear,infoMapVec.clear())<SUB>587</SUB>> ]
-"2929" [label = <(_hidl_cb,_hidl_cb(Status::OK, toHidlVec(infoMapVec)))<SUB>595</SUB>> ]
-"2935" [label = <(RETURN,return Void();,return Void();)<SUB>596</SUB>> ]
-"2865" [label = <(&lt;operator&gt;.equals,sessionId.size() == 0)<SUB>580</SUB>> ]
-"2880" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;KeyValue)<SUB>586</SUB>> ]
-"2887" [label = <(&lt;operator&gt;.fieldAccess,infoMapVec.clear)<SUB>587</SUB>> ]
-"2897" [label = <(&lt;operator&gt;.lessThan,i &lt; mPlayPolicy.size())<SUB>590</SUB>> ]
-"2903" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>590</SUB>> ]
-"2930" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>595</SUB>> ]
-"2933" [label = <(toHidlVec,toHidlVec(infoMapVec))<SUB>595</SUB>> ]
-"2936" [label = <(Void,Void())<SUB>596</SUB>> ]
-"2866" [label = <(size,sessionId.size())<SUB>580</SUB>> ]
-"2872" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, hidl_vec&lt;KeyValue&gt;()))<SUB>582</SUB>> ]
-"2877" [label = <(RETURN,return Void();,return Void();)<SUB>583</SUB>> ]
-"2881" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>586</SUB>> ]
-"2889" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>587</SUB>> ]
-"2894" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>590</SUB>> ]
-"2899" [label = <(size,mPlayPolicy.size())<SUB>590</SUB>> ]
-"2906" [label = <(&lt;operator&gt;.assignment,keyValuePair.key = mPlayPolicy[i].key)<SUB>591</SUB>> ]
-"2915" [label = <(&lt;operator&gt;.assignment,keyValuePair.value = mPlayPolicy[i].value)<SUB>592</SUB>> ]
-"2924" [label = <(push_back,infoMapVec.push_back(keyValuePair))<SUB>593</SUB>> ]
-"2932" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>595</SUB>> ]
-"2867" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>580</SUB>> ]
-"2873" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>582</SUB>> ]
-"2876" [label = <(hidl_vec&lt;KeyValue&gt;,hidl_vec&lt;KeyValue&gt;())<SUB>582</SUB>> ]
-"2878" [label = <(Void,Void())<SUB>583</SUB>> ]
-"2883" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>586</SUB>> ]
-"2900" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.size)<SUB>590</SUB>> ]
-"2907" [label = <(&lt;operator&gt;.fieldAccess,keyValuePair.key)<SUB>591</SUB>> ]
-"2910" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy[i].key)<SUB>591</SUB>> ]
-"2916" [label = <(&lt;operator&gt;.fieldAccess,keyValuePair.value)<SUB>592</SUB>> ]
-"2919" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy[i].value)<SUB>592</SUB>> ]
-"2925" [label = <(&lt;operator&gt;.fieldAccess,infoMapVec.push_back)<SUB>593</SUB>> ]
-"2869" [label = <(FIELD_IDENTIFIER,size,size)<SUB>580</SUB>> ]
-"2875" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>582</SUB>> ]
-"2902" [label = <(FIELD_IDENTIFIER,size,size)<SUB>590</SUB>> ]
-"2909" [label = <(FIELD_IDENTIFIER,key,key)<SUB>591</SUB>> ]
-"2911" [label = <(&lt;operator&gt;.indirectIndexAccess,mPlayPolicy[i])<SUB>591</SUB>> ]
-"2914" [label = <(FIELD_IDENTIFIER,key,key)<SUB>591</SUB>> ]
-"2918" [label = <(FIELD_IDENTIFIER,value,value)<SUB>592</SUB>> ]
-"2920" [label = <(&lt;operator&gt;.indirectIndexAccess,mPlayPolicy[i])<SUB>592</SUB>> ]
-"2923" [label = <(FIELD_IDENTIFIER,value,value)<SUB>592</SUB>> ]
-"2927" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>593</SUB>> ]
-"2860" [label = <(METHOD,queryKeyStatus)<SUB>576</SUB>> ]
-"2937" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>576</SUB>> ]
-  "2879" -> "2889" 
-  "2886" -> "2894" 
-  "2929" -> "2936" 
-  "2935" -> "2937" 
-  "2865" -> "2875" 
-  "2865" -> "2883" 
-  "2880" -> "2879" 
-  "2887" -> "2886" 
-  "2897" -> "2909" 
-  "2897" -> "2932" 
-  "2903" -> "2902" 
-  "2930" -> "2933" 
-  "2933" -> "2929" 
-  "2936" -> "2935" 
-  "2866" -> "2865" 
-  "2872" -> "2878" 
-  "2877" -> "2937" 
-  "2881" -> "2880" 
-  "2889" -> "2887" 
-  "2894" -> "2902" 
-  "2899" -> "2897" 
-  "2906" -> "2918" 
-  "2915" -> "2927" 
-  "2924" -> "2903" 
-  "2932" -> "2930" 
-  "2867" -> "2866" 
-  "2873" -> "2876" 
-  "2876" -> "2872" 
-  "2878" -> "2877" 
-  "2883" -> "2881" 
-  "2900" -> "2899" 
-  "2907" -> "2911" 
+"2875" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;KeyValue&gt; infoMapVec)<SUB>585</SUB>> ]
+"2882" [label = <(clear,infoMapVec.clear())<SUB>586</SUB>> ]
+"2925" [label = <(_hidl_cb,_hidl_cb(Status::OK, toHidlVec(infoMapVec)))<SUB>594</SUB>> ]
+"2931" [label = <(RETURN,return Void();,return Void();)<SUB>595</SUB>> ]
+"2861" [label = <(&lt;operator&gt;.equals,sessionId.size() == 0)<SUB>579</SUB>> ]
+"2876" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;KeyValue)<SUB>585</SUB>> ]
+"2883" [label = <(&lt;operator&gt;.fieldAccess,infoMapVec.clear)<SUB>586</SUB>> ]
+"2893" [label = <(&lt;operator&gt;.lessThan,i &lt; mPlayPolicy.size())<SUB>589</SUB>> ]
+"2899" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>589</SUB>> ]
+"2926" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>594</SUB>> ]
+"2929" [label = <(toHidlVec,toHidlVec(infoMapVec))<SUB>594</SUB>> ]
+"2932" [label = <(Void,Void())<SUB>595</SUB>> ]
+"2862" [label = <(size,sessionId.size())<SUB>579</SUB>> ]
+"2868" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, hidl_vec&lt;KeyValue&gt;()))<SUB>581</SUB>> ]
+"2873" [label = <(RETURN,return Void();,return Void();)<SUB>582</SUB>> ]
+"2877" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>585</SUB>> ]
+"2885" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>586</SUB>> ]
+"2890" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>589</SUB>> ]
+"2895" [label = <(size,mPlayPolicy.size())<SUB>589</SUB>> ]
+"2902" [label = <(&lt;operator&gt;.assignment,keyValuePair.key = mPlayPolicy[i].key)<SUB>590</SUB>> ]
+"2911" [label = <(&lt;operator&gt;.assignment,keyValuePair.value = mPlayPolicy[i].value)<SUB>591</SUB>> ]
+"2920" [label = <(push_back,infoMapVec.push_back(keyValuePair))<SUB>592</SUB>> ]
+"2928" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>594</SUB>> ]
+"2863" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>579</SUB>> ]
+"2869" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>581</SUB>> ]
+"2872" [label = <(hidl_vec&lt;KeyValue&gt;,hidl_vec&lt;KeyValue&gt;())<SUB>581</SUB>> ]
+"2874" [label = <(Void,Void())<SUB>582</SUB>> ]
+"2879" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>585</SUB>> ]
+"2896" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy.size)<SUB>589</SUB>> ]
+"2903" [label = <(&lt;operator&gt;.fieldAccess,keyValuePair.key)<SUB>590</SUB>> ]
+"2906" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy[i].key)<SUB>590</SUB>> ]
+"2912" [label = <(&lt;operator&gt;.fieldAccess,keyValuePair.value)<SUB>591</SUB>> ]
+"2915" [label = <(&lt;operator&gt;.fieldAccess,mPlayPolicy[i].value)<SUB>591</SUB>> ]
+"2921" [label = <(&lt;operator&gt;.fieldAccess,infoMapVec.push_back)<SUB>592</SUB>> ]
+"2865" [label = <(FIELD_IDENTIFIER,size,size)<SUB>579</SUB>> ]
+"2871" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>581</SUB>> ]
+"2898" [label = <(FIELD_IDENTIFIER,size,size)<SUB>589</SUB>> ]
+"2905" [label = <(FIELD_IDENTIFIER,key,key)<SUB>590</SUB>> ]
+"2907" [label = <(&lt;operator&gt;.indirectIndexAccess,mPlayPolicy[i])<SUB>590</SUB>> ]
+"2910" [label = <(FIELD_IDENTIFIER,key,key)<SUB>590</SUB>> ]
+"2914" [label = <(FIELD_IDENTIFIER,value,value)<SUB>591</SUB>> ]
+"2916" [label = <(&lt;operator&gt;.indirectIndexAccess,mPlayPolicy[i])<SUB>591</SUB>> ]
+"2919" [label = <(FIELD_IDENTIFIER,value,value)<SUB>591</SUB>> ]
+"2923" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>592</SUB>> ]
+"2856" [label = <(METHOD,queryKeyStatus)<SUB>575</SUB>> ]
+"2933" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>575</SUB>> ]
+  "2875" -> "2885" 
+  "2882" -> "2890" 
+  "2925" -> "2932" 
+  "2931" -> "2933" 
+  "2861" -> "2871" 
+  "2861" -> "2879" 
+  "2876" -> "2875" 
+  "2883" -> "2882" 
+  "2893" -> "2905" 
+  "2893" -> "2928" 
+  "2899" -> "2898" 
+  "2926" -> "2929" 
+  "2929" -> "2925" 
+  "2932" -> "2931" 
+  "2862" -> "2861" 
+  "2868" -> "2874" 
+  "2873" -> "2933" 
+  "2877" -> "2876" 
+  "2885" -> "2883" 
+  "2890" -> "2898" 
+  "2895" -> "2893" 
+  "2902" -> "2914" 
+  "2911" -> "2923" 
+  "2920" -> "2899" 
+  "2928" -> "2926" 
+  "2863" -> "2862" 
+  "2869" -> "2872" 
+  "2872" -> "2868" 
+  "2874" -> "2873" 
+  "2879" -> "2877" 
+  "2896" -> "2895" 
+  "2903" -> "2907" 
+  "2906" -> "2902" 
+  "2912" -> "2916" 
+  "2915" -> "2911" 
+  "2921" -> "2920" 
+  "2865" -> "2863" 
+  "2871" -> "2869" 
+  "2898" -> "2896" 
+  "2905" -> "2903" 
+  "2907" -> "2910" 
   "2910" -> "2906" 
-  "2916" -> "2920" 
+  "2914" -> "2912" 
+  "2916" -> "2919" 
   "2919" -> "2915" 
-  "2925" -> "2924" 
-  "2869" -> "2867" 
-  "2875" -> "2873" 
-  "2902" -> "2900" 
-  "2909" -> "2907" 
-  "2911" -> "2914" 
-  "2914" -> "2910" 
-  "2918" -> "2916" 
-  "2920" -> "2923" 
-  "2923" -> "2919" 
-  "2927" -> "2925" 
-  "2860" -> "2869" 
+  "2923" -> "2921" 
+  "2856" -> "2865" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/77-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/77-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/77-cfg.dot	2023-06-07 19:37:50.967374269 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/77-cfg.dot	2023-06-07 19:37:55.477374363 +0330
@@ -1,25 +1,25 @@
 digraph "getNumberOfSessions" {  
-"2943" [label = <(&lt;operator&gt;.assignment,currentSessions = mSessionLibrary-&gt;numOpenSessions())<SUB>600</SUB>> ]
-"2950" [label = <(&lt;operator&gt;.assignment,maxSessions = 10)<SUB>601</SUB>> ]
-"2953" [label = <(_hidl_cb,_hidl_cb(Status::OK, currentSessions, maxSessions))<SUB>602</SUB>> ]
-"2959" [label = <(RETURN,return Void();,return Void();)<SUB>603</SUB>> ]
-"2945" [label = <(numOpenSessions,mSessionLibrary-&gt;numOpenSessions())<SUB>600</SUB>> ]
-"2954" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>602</SUB>> ]
-"2960" [label = <(Void,Void())<SUB>603</SUB>> ]
-"2946" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;numOpenSessions)<SUB>600</SUB>> ]
-"2956" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>602</SUB>> ]
-"2948" [label = <(FIELD_IDENTIFIER,numOpenSessions,numOpenSessions)<SUB>600</SUB>> ]
-"2939" [label = <(METHOD,getNumberOfSessions)<SUB>599</SUB>> ]
-"2961" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>599</SUB>> ]
-  "2943" -> "2950" 
-  "2950" -> "2956" 
-  "2953" -> "2960" 
-  "2959" -> "2961" 
-  "2945" -> "2943" 
-  "2954" -> "2953" 
-  "2960" -> "2959" 
-  "2946" -> "2945" 
-  "2956" -> "2954" 
-  "2948" -> "2946" 
-  "2939" -> "2948" 
+"2939" [label = <(&lt;operator&gt;.assignment,currentSessions = mSessionLibrary-&gt;numOpenSessions())<SUB>599</SUB>> ]
+"2946" [label = <(&lt;operator&gt;.assignment,maxSessions = 10)<SUB>600</SUB>> ]
+"2949" [label = <(_hidl_cb,_hidl_cb(Status::OK, currentSessions, maxSessions))<SUB>601</SUB>> ]
+"2955" [label = <(RETURN,return Void();,return Void();)<SUB>602</SUB>> ]
+"2941" [label = <(numOpenSessions,mSessionLibrary-&gt;numOpenSessions())<SUB>599</SUB>> ]
+"2950" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>601</SUB>> ]
+"2956" [label = <(Void,Void())<SUB>602</SUB>> ]
+"2942" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;numOpenSessions)<SUB>599</SUB>> ]
+"2952" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>601</SUB>> ]
+"2944" [label = <(FIELD_IDENTIFIER,numOpenSessions,numOpenSessions)<SUB>599</SUB>> ]
+"2935" [label = <(METHOD,getNumberOfSessions)<SUB>598</SUB>> ]
+"2957" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>598</SUB>> ]
+  "2939" -> "2946" 
+  "2946" -> "2952" 
+  "2949" -> "2956" 
+  "2955" -> "2957" 
+  "2941" -> "2939" 
+  "2950" -> "2949" 
+  "2956" -> "2955" 
+  "2942" -> "2941" 
+  "2952" -> "2950" 
+  "2944" -> "2942" 
+  "2935" -> "2944" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/78-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/78-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/78-cfg.dot	2023-06-07 19:37:50.967374269 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/78-cfg.dot	2023-06-07 19:37:55.477374363 +0330
@@ -1,122 +1,122 @@
 digraph "getSecurityLevel" {  
-"2984" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; sid = toVector(sessionId))<SUB>613</SUB>> ]
-"2994" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;findSession(sid))<SUB>614</SUB>> ]
-"3022" [label = <(&lt;operator&gt;.assignment,itr =\012            mSecurityLevel.find(sid))<SUB>620</SUB>> ]
-"3048" [label = <(_hidl_cb,_hidl_cb(Status::OK, itr-&gt;second))<SUB>628</SUB>> ]
-"3055" [label = <(RETURN,return Void();,return Void();)<SUB>629</SUB>> ]
-"2968" [label = <(&lt;operator&gt;.equals,sessionId.size() == 0)<SUB>608</SUB>> ]
-"2985" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sid)<SUB>613</SUB>> ]
-"2992" [label = <(toVector,toVector(sessionId))<SUB>613</SUB>> ]
-"2995" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>614</SUB>> ]
-"3000" [label = <(findSession,mSessionLibrary-&gt;findSession(sid))<SUB>614</SUB>> ]
-"3006" [label = <(&lt;operator&gt;.logicalNot,!session.get())<SUB>615</SUB>> ]
-"3024" [label = <(find,mSecurityLevel.find(sid))<SUB>621</SUB>> ]
-"3030" [label = <(&lt;operator&gt;.equals,itr == mSecurityLevel.end())<SUB>622</SUB>> ]
-"3049" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>628</SUB>> ]
-"3052" [label = <(&lt;operator&gt;.indirectFieldAccess,itr-&gt;second)<SUB>628</SUB>> ]
-"3056" [label = <(Void,Void())<SUB>629</SUB>> ]
-"2969" [label = <(size,sessionId.size())<SUB>608</SUB>> ]
-"2975" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, SecurityLevel::UNKNOWN))<SUB>609</SUB>> ]
-"2982" [label = <(RETURN,return Void();,return Void();)<SUB>610</SUB>> ]
-"2986" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>613</SUB>> ]
-"2996" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>614</SUB>> ]
-"3001" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>614</SUB>> ]
-"3007" [label = <(get,session.get())<SUB>615</SUB>> ]
-"3012" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_SESSION_NOT_OPENED, SecurityLevel::UNKNOWN))<SUB>616</SUB>> ]
-"3019" [label = <(RETURN,return Void();,return Void();)<SUB>617</SUB>> ]
-"3025" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.find)<SUB>621</SUB>> ]
-"3032" [label = <(end,mSecurityLevel.end())<SUB>622</SUB>> ]
-"3037" [label = <(ALOGE,ALOGE(&quot;Session id not found&quot;))<SUB>623</SUB>> ]
-"3039" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_INVALID_STATE, SecurityLevel::UNKNOWN))<SUB>624</SUB>> ]
-"3046" [label = <(RETURN,return Void();,return Void();)<SUB>625</SUB>> ]
-"3051" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>628</SUB>> ]
-"3054" [label = <(FIELD_IDENTIFIER,second,second)<SUB>628</SUB>> ]
-"2970" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>608</SUB>> ]
-"2976" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>609</SUB>> ]
-"2979" [label = <(&lt;operator&gt;.fieldAccess,SecurityLevel::UNKNOWN)<SUB>609</SUB>> ]
-"2983" [label = <(Void,Void())<SUB>610</SUB>> ]
-"2987" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>613</SUB>> ]
-"3003" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>614</SUB>> ]
-"3008" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>615</SUB>> ]
-"3013" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>616</SUB>> ]
-"3016" [label = <(&lt;operator&gt;.fieldAccess,SecurityLevel::UNKNOWN)<SUB>616</SUB>> ]
-"3020" [label = <(Void,Void())<SUB>617</SUB>> ]
-"3027" [label = <(FIELD_IDENTIFIER,find,find)<SUB>621</SUB>> ]
-"3033" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.end)<SUB>622</SUB>> ]
-"3040" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_INVALID_STATE)<SUB>624</SUB>> ]
-"3043" [label = <(&lt;operator&gt;.fieldAccess,SecurityLevel::UNKNOWN)<SUB>624</SUB>> ]
-"3047" [label = <(Void,Void())<SUB>625</SUB>> ]
-"2972" [label = <(FIELD_IDENTIFIER,size,size)<SUB>608</SUB>> ]
-"2978" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>609</SUB>> ]
-"2981" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>609</SUB>> ]
-"2989" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>613</SUB>> ]
-"3010" [label = <(FIELD_IDENTIFIER,get,get)<SUB>615</SUB>> ]
-"3015" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>616</SUB>> ]
-"3018" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>616</SUB>> ]
-"3035" [label = <(FIELD_IDENTIFIER,end,end)<SUB>622</SUB>> ]
-"3042" [label = <(FIELD_IDENTIFIER,ERROR_DRM_INVALID_STATE,ERROR_DRM_INVALID_STATE)<SUB>624</SUB>> ]
-"3045" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>624</SUB>> ]
-"2963" [label = <(METHOD,getSecurityLevel)<SUB>606</SUB>> ]
-"3057" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>606</SUB>> ]
-  "2984" -> "2996" 
-  "2994" -> "3010" 
-  "3022" -> "3035" 
-  "3048" -> "3056" 
-  "3055" -> "3057" 
-  "2968" -> "2978" 
-  "2968" -> "2989" 
-  "2985" -> "2992" 
-  "2992" -> "2984" 
-  "2995" -> "3003" 
-  "3000" -> "2994" 
-  "3006" -> "3015" 
-  "3006" -> "3027" 
-  "3024" -> "3022" 
-  "3030" -> "3037" 
-  "3030" -> "3051" 
-  "3049" -> "3054" 
-  "3052" -> "3048" 
-  "3056" -> "3055" 
-  "2969" -> "2968" 
-  "2975" -> "2983" 
-  "2982" -> "3057" 
-  "2986" -> "2985" 
-  "2996" -> "2995" 
-  "3001" -> "3000" 
-  "3007" -> "3006" 
-  "3012" -> "3020" 
-  "3019" -> "3057" 
-  "3025" -> "3024" 
-  "3032" -> "3030" 
-  "3037" -> "3042" 
-  "3039" -> "3047" 
-  "3046" -> "3057" 
-  "3051" -> "3049" 
-  "3054" -> "3052" 
-  "2970" -> "2969" 
-  "2976" -> "2981" 
-  "2979" -> "2975" 
+"2980" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; sid = toVector(sessionId))<SUB>612</SUB>> ]
+"2990" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;findSession(sid))<SUB>613</SUB>> ]
+"3018" [label = <(&lt;operator&gt;.assignment,itr =\012            mSecurityLevel.find(sid))<SUB>619</SUB>> ]
+"3044" [label = <(_hidl_cb,_hidl_cb(Status::OK, itr-&gt;second))<SUB>627</SUB>> ]
+"3051" [label = <(RETURN,return Void();,return Void();)<SUB>628</SUB>> ]
+"2964" [label = <(&lt;operator&gt;.equals,sessionId.size() == 0)<SUB>607</SUB>> ]
+"2981" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sid)<SUB>612</SUB>> ]
+"2988" [label = <(toVector,toVector(sessionId))<SUB>612</SUB>> ]
+"2991" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>613</SUB>> ]
+"2996" [label = <(findSession,mSessionLibrary-&gt;findSession(sid))<SUB>613</SUB>> ]
+"3002" [label = <(&lt;operator&gt;.logicalNot,!session.get())<SUB>614</SUB>> ]
+"3020" [label = <(find,mSecurityLevel.find(sid))<SUB>620</SUB>> ]
+"3026" [label = <(&lt;operator&gt;.equals,itr == mSecurityLevel.end())<SUB>621</SUB>> ]
+"3045" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>627</SUB>> ]
+"3048" [label = <(&lt;operator&gt;.indirectFieldAccess,itr-&gt;second)<SUB>627</SUB>> ]
+"3052" [label = <(Void,Void())<SUB>628</SUB>> ]
+"2965" [label = <(size,sessionId.size())<SUB>607</SUB>> ]
+"2971" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, SecurityLevel::UNKNOWN))<SUB>608</SUB>> ]
+"2978" [label = <(RETURN,return Void();,return Void();)<SUB>609</SUB>> ]
+"2982" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>612</SUB>> ]
+"2992" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>613</SUB>> ]
+"2997" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>613</SUB>> ]
+"3003" [label = <(get,session.get())<SUB>614</SUB>> ]
+"3008" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_SESSION_NOT_OPENED, SecurityLevel::UNKNOWN))<SUB>615</SUB>> ]
+"3015" [label = <(RETURN,return Void();,return Void();)<SUB>616</SUB>> ]
+"3021" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.find)<SUB>620</SUB>> ]
+"3028" [label = <(end,mSecurityLevel.end())<SUB>621</SUB>> ]
+"3033" [label = <(ALOGE,ALOGE(&quot;Session id not found&quot;))<SUB>622</SUB>> ]
+"3035" [label = <(_hidl_cb,_hidl_cb(Status::ERROR_DRM_INVALID_STATE, SecurityLevel::UNKNOWN))<SUB>623</SUB>> ]
+"3042" [label = <(RETURN,return Void();,return Void();)<SUB>624</SUB>> ]
+"3047" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>627</SUB>> ]
+"3050" [label = <(FIELD_IDENTIFIER,second,second)<SUB>627</SUB>> ]
+"2966" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>607</SUB>> ]
+"2972" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>608</SUB>> ]
+"2975" [label = <(&lt;operator&gt;.fieldAccess,SecurityLevel::UNKNOWN)<SUB>608</SUB>> ]
+"2979" [label = <(Void,Void())<SUB>609</SUB>> ]
+"2983" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>612</SUB>> ]
+"2999" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>613</SUB>> ]
+"3004" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>614</SUB>> ]
+"3009" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>615</SUB>> ]
+"3012" [label = <(&lt;operator&gt;.fieldAccess,SecurityLevel::UNKNOWN)<SUB>615</SUB>> ]
+"3016" [label = <(Void,Void())<SUB>616</SUB>> ]
+"3023" [label = <(FIELD_IDENTIFIER,find,find)<SUB>620</SUB>> ]
+"3029" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.end)<SUB>621</SUB>> ]
+"3036" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_INVALID_STATE)<SUB>623</SUB>> ]
+"3039" [label = <(&lt;operator&gt;.fieldAccess,SecurityLevel::UNKNOWN)<SUB>623</SUB>> ]
+"3043" [label = <(Void,Void())<SUB>624</SUB>> ]
+"2968" [label = <(FIELD_IDENTIFIER,size,size)<SUB>607</SUB>> ]
+"2974" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>608</SUB>> ]
+"2977" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>608</SUB>> ]
+"2985" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>612</SUB>> ]
+"3006" [label = <(FIELD_IDENTIFIER,get,get)<SUB>614</SUB>> ]
+"3011" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>615</SUB>> ]
+"3014" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>615</SUB>> ]
+"3031" [label = <(FIELD_IDENTIFIER,end,end)<SUB>621</SUB>> ]
+"3038" [label = <(FIELD_IDENTIFIER,ERROR_DRM_INVALID_STATE,ERROR_DRM_INVALID_STATE)<SUB>623</SUB>> ]
+"3041" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>623</SUB>> ]
+"2959" [label = <(METHOD,getSecurityLevel)<SUB>605</SUB>> ]
+"3053" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>605</SUB>> ]
+  "2980" -> "2992" 
+  "2990" -> "3006" 
+  "3018" -> "3031" 
+  "3044" -> "3052" 
+  "3051" -> "3053" 
+  "2964" -> "2974" 
+  "2964" -> "2985" 
+  "2981" -> "2988" 
+  "2988" -> "2980" 
+  "2991" -> "2999" 
+  "2996" -> "2990" 
+  "3002" -> "3011" 
+  "3002" -> "3023" 
+  "3020" -> "3018" 
+  "3026" -> "3033" 
+  "3026" -> "3047" 
+  "3045" -> "3050" 
+  "3048" -> "3044" 
+  "3052" -> "3051" 
+  "2965" -> "2964" 
+  "2971" -> "2979" 
+  "2978" -> "3053" 
+  "2982" -> "2981" 
+  "2992" -> "2991" 
+  "2997" -> "2996" 
+  "3003" -> "3002" 
+  "3008" -> "3016" 
+  "3015" -> "3053" 
+  "3021" -> "3020" 
+  "3028" -> "3026" 
+  "3033" -> "3038" 
+  "3035" -> "3043" 
+  "3042" -> "3053" 
+  "3047" -> "3045" 
+  "3050" -> "3048" 
+  "2966" -> "2965" 
+  "2972" -> "2977" 
+  "2975" -> "2971" 
+  "2979" -> "2978" 
   "2983" -> "2982" 
-  "2987" -> "2986" 
-  "3003" -> "3001" 
-  "3008" -> "3007" 
-  "3013" -> "3018" 
-  "3016" -> "3012" 
-  "3020" -> "3019" 
-  "3027" -> "3025" 
-  "3033" -> "3032" 
-  "3040" -> "3045" 
-  "3043" -> "3039" 
-  "3047" -> "3046" 
-  "2972" -> "2970" 
-  "2978" -> "2976" 
-  "2981" -> "2979" 
-  "2989" -> "2987" 
-  "3010" -> "3008" 
-  "3015" -> "3013" 
-  "3018" -> "3016" 
-  "3035" -> "3033" 
-  "3042" -> "3040" 
-  "3045" -> "3043" 
-  "2963" -> "2972" 
+  "2999" -> "2997" 
+  "3004" -> "3003" 
+  "3009" -> "3014" 
+  "3012" -> "3008" 
+  "3016" -> "3015" 
+  "3023" -> "3021" 
+  "3029" -> "3028" 
+  "3036" -> "3041" 
+  "3039" -> "3035" 
+  "3043" -> "3042" 
+  "2968" -> "2966" 
+  "2974" -> "2972" 
+  "2977" -> "2975" 
+  "2985" -> "2983" 
+  "3006" -> "3004" 
+  "3011" -> "3009" 
+  "3014" -> "3012" 
+  "3031" -> "3029" 
+  "3038" -> "3036" 
+  "3041" -> "3039" 
+  "2959" -> "2968" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/79-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/79-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/79-cfg.dot	2023-06-07 19:37:50.967374269 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/79-cfg.dot	2023-06-07 19:37:55.477374363 +0330
@@ -1,130 +1,130 @@
 digraph "setSecurityLevel" {  
-"3090" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; sid = toVector(sessionId))<SUB>644</SUB>> ]
-"3100" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;findSession(sid))<SUB>645</SUB>> ]
-"3123" [label = <(&lt;operator&gt;.assignment,itr =\012            mSecurityLevel.find(sid))<SUB>650</SUB>> ]
-"3166" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>661</SUB>> ]
-"3064" [label = <(&lt;operator&gt;.equals,sessionId.size() == 0)<SUB>634</SUB>> ]
-"3078" [label = <(&lt;operator&gt;.greaterThan,level &gt; SecurityLevel::SW_SECURE_CRYPTO)<SUB>639</SUB>> ]
-"3091" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sid)<SUB>644</SUB>> ]
-"3098" [label = <(toVector,toVector(sessionId))<SUB>644</SUB>> ]
-"3101" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>645</SUB>> ]
-"3106" [label = <(findSession,mSessionLibrary-&gt;findSession(sid))<SUB>645</SUB>> ]
-"3112" [label = <(&lt;operator&gt;.logicalNot,!session.get())<SUB>646</SUB>> ]
-"3125" [label = <(find,mSecurityLevel.find(sid))<SUB>651</SUB>> ]
-"3131" [label = <(&lt;operator&gt;.notEquals,itr != mSecurityLevel.end())<SUB>652</SUB>> ]
-"3167" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>661</SUB>> ]
-"3065" [label = <(size,sessionId.size())<SUB>634</SUB>> ]
-"3071" [label = <(ALOGE,ALOGE(&quot;Invalid empty session id&quot;))<SUB>635</SUB>> ]
-"3073" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>636</SUB>> ]
-"3080" [label = <(&lt;operator&gt;.fieldAccess,SecurityLevel::SW_SECURE_CRYPTO)<SUB>639</SUB>> ]
-"3084" [label = <(ALOGE,ALOGE(&quot;Cannot set security level &gt; max&quot;))<SUB>640</SUB>> ]
-"3086" [label = <(RETURN,return Status::ERROR_DRM_CANNOT_HANDLE;,return Status::ERROR_DRM_CANNOT_HANDLE;)<SUB>641</SUB>> ]
-"3092" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>644</SUB>> ]
-"3102" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>645</SUB>> ]
-"3107" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>645</SUB>> ]
-"3113" [label = <(get,session.get())<SUB>646</SUB>> ]
-"3118" [label = <(RETURN,return Status::ERROR_DRM_SESSION_NOT_OPENED;,return Status::ERROR_DRM_SESSION_NOT_OPENED;)<SUB>647</SUB>> ]
-"3126" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.find)<SUB>651</SUB>> ]
-"3133" [label = <(end,mSecurityLevel.end())<SUB>652</SUB>> ]
-"3138" [label = <(&lt;operator&gt;.assignment,mSecurityLevel[sid] = level)<SUB>653</SUB>> ]
-"3169" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>661</SUB>> ]
-"3066" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>634</SUB>> ]
-"3074" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>636</SUB>> ]
-"3082" [label = <(FIELD_IDENTIFIER,SW_SECURE_CRYPTO,SW_SECURE_CRYPTO)<SUB>639</SUB>> ]
-"3087" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_CANNOT_HANDLE)<SUB>641</SUB>> ]
-"3093" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>644</SUB>> ]
-"3109" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>645</SUB>> ]
-"3114" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>646</SUB>> ]
-"3119" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>647</SUB>> ]
-"3128" [label = <(FIELD_IDENTIFIER,find,find)<SUB>651</SUB>> ]
-"3134" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.end)<SUB>652</SUB>> ]
-"3139" [label = <(&lt;operator&gt;.indirectIndexAccess,mSecurityLevel[sid])<SUB>653</SUB>> ]
-"3068" [label = <(FIELD_IDENTIFIER,size,size)<SUB>634</SUB>> ]
-"3076" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>636</SUB>> ]
-"3089" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>641</SUB>> ]
-"3095" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>644</SUB>> ]
-"3116" [label = <(FIELD_IDENTIFIER,get,get)<SUB>646</SUB>> ]
-"3121" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>647</SUB>> ]
-"3136" [label = <(FIELD_IDENTIFIER,end,end)<SUB>652</SUB>> ]
-"3146" [label = <(&lt;operator&gt;.logicalNot,!mSecurityLevel.insert(\012                std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;(sid, level)).second)<SUB>655</SUB>> ]
-"3147" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.insert(\012                std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;(sid, level)).second)<SUB>655</SUB>> ]
-"3160" [label = <(ALOGE,ALOGE(&quot;Failed to set security level&quot;))<SUB>657</SUB>> ]
-"3162" [label = <(RETURN,return Status::ERROR_DRM_INVALID_STATE;,return Status::ERROR_DRM_INVALID_STATE;)<SUB>658</SUB>> ]
-"3148" [label = <(insert,mSecurityLevel.insert(\012                std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;(sid, level)))<SUB>655</SUB>> ]
-"3158" [label = <(FIELD_IDENTIFIER,second,second)<SUB>655</SUB>> ]
-"3163" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_INVALID_STATE)<SUB>658</SUB>> ]
-"3149" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.insert)<SUB>655</SUB>> ]
-"3152" [label = <(std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;,std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;(sid, level))<SUB>656</SUB>> ]
-"3165" [label = <(FIELD_IDENTIFIER,ERROR_DRM_INVALID_STATE,ERROR_DRM_INVALID_STATE)<SUB>658</SUB>> ]
-"3151" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>655</SUB>> ]
-"3153" [label = <(&lt;operator&gt;.fieldAccess,std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;)<SUB>656</SUB>> ]
-"3155" [label = <(FIELD_IDENTIFIER,pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;,pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;)<SUB>656</SUB>> ]
-"3059" [label = <(METHOD,setSecurityLevel)<SUB>632</SUB>> ]
-"3170" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>632</SUB>> ]
-  "3090" -> "3102" 
-  "3100" -> "3116" 
-  "3123" -> "3136" 
-  "3166" -> "3170" 
-  "3064" -> "3071" 
-  "3064" -> "3082" 
-  "3078" -> "3084" 
-  "3078" -> "3095" 
-  "3091" -> "3098" 
-  "3098" -> "3090" 
-  "3101" -> "3109" 
-  "3106" -> "3100" 
-  "3112" -> "3121" 
-  "3112" -> "3128" 
-  "3125" -> "3123" 
-  "3131" -> "3139" 
-  "3131" -> "3151" 
-  "3167" -> "3166" 
-  "3065" -> "3064" 
-  "3071" -> "3076" 
-  "3073" -> "3170" 
-  "3080" -> "3078" 
-  "3084" -> "3089" 
-  "3086" -> "3170" 
-  "3092" -> "3091" 
-  "3102" -> "3101" 
-  "3107" -> "3106" 
-  "3113" -> "3112" 
-  "3118" -> "3170" 
-  "3126" -> "3125" 
-  "3133" -> "3131" 
-  "3138" -> "3169" 
-  "3169" -> "3167" 
-  "3066" -> "3065" 
-  "3074" -> "3073" 
-  "3082" -> "3080" 
-  "3087" -> "3086" 
-  "3093" -> "3092" 
-  "3109" -> "3107" 
-  "3114" -> "3113" 
-  "3119" -> "3118" 
-  "3128" -> "3126" 
-  "3134" -> "3133" 
-  "3139" -> "3138" 
-  "3068" -> "3066" 
-  "3076" -> "3074" 
-  "3089" -> "3087" 
-  "3095" -> "3093" 
-  "3116" -> "3114" 
+"3086" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; sid = toVector(sessionId))<SUB>643</SUB>> ]
+"3096" [label = <(&lt;operator&gt;.assignment,sp&lt;Session&gt; session = mSessionLibrary-&gt;findSession(sid))<SUB>644</SUB>> ]
+"3119" [label = <(&lt;operator&gt;.assignment,itr =\012            mSecurityLevel.find(sid))<SUB>649</SUB>> ]
+"3162" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>660</SUB>> ]
+"3060" [label = <(&lt;operator&gt;.equals,sessionId.size() == 0)<SUB>633</SUB>> ]
+"3074" [label = <(&lt;operator&gt;.greaterThan,level &gt; SecurityLevel::SW_SECURE_CRYPTO)<SUB>638</SUB>> ]
+"3087" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; sid)<SUB>643</SUB>> ]
+"3094" [label = <(toVector,toVector(sessionId))<SUB>643</SUB>> ]
+"3097" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Session&gt; session)<SUB>644</SUB>> ]
+"3102" [label = <(findSession,mSessionLibrary-&gt;findSession(sid))<SUB>644</SUB>> ]
+"3108" [label = <(&lt;operator&gt;.logicalNot,!session.get())<SUB>645</SUB>> ]
+"3121" [label = <(find,mSecurityLevel.find(sid))<SUB>650</SUB>> ]
+"3127" [label = <(&lt;operator&gt;.notEquals,itr != mSecurityLevel.end())<SUB>651</SUB>> ]
+"3163" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>660</SUB>> ]
+"3061" [label = <(size,sessionId.size())<SUB>633</SUB>> ]
+"3067" [label = <(ALOGE,ALOGE(&quot;Invalid empty session id&quot;))<SUB>634</SUB>> ]
+"3069" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>635</SUB>> ]
+"3076" [label = <(&lt;operator&gt;.fieldAccess,SecurityLevel::SW_SECURE_CRYPTO)<SUB>638</SUB>> ]
+"3080" [label = <(ALOGE,ALOGE(&quot;Cannot set security level &gt; max&quot;))<SUB>639</SUB>> ]
+"3082" [label = <(RETURN,return Status::ERROR_DRM_CANNOT_HANDLE;,return Status::ERROR_DRM_CANNOT_HANDLE;)<SUB>640</SUB>> ]
+"3088" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>643</SUB>> ]
+"3098" [label = <(&lt;operator&gt;.lessThan,sp&lt;Session)<SUB>644</SUB>> ]
+"3103" [label = <(&lt;operator&gt;.indirectFieldAccess,mSessionLibrary-&gt;findSession)<SUB>644</SUB>> ]
+"3109" [label = <(get,session.get())<SUB>645</SUB>> ]
+"3114" [label = <(RETURN,return Status::ERROR_DRM_SESSION_NOT_OPENED;,return Status::ERROR_DRM_SESSION_NOT_OPENED;)<SUB>646</SUB>> ]
+"3122" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.find)<SUB>650</SUB>> ]
+"3129" [label = <(end,mSecurityLevel.end())<SUB>651</SUB>> ]
+"3134" [label = <(&lt;operator&gt;.assignment,mSecurityLevel[sid] = level)<SUB>652</SUB>> ]
+"3165" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>660</SUB>> ]
+"3062" [label = <(&lt;operator&gt;.fieldAccess,sessionId.size)<SUB>633</SUB>> ]
+"3070" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>635</SUB>> ]
+"3078" [label = <(FIELD_IDENTIFIER,SW_SECURE_CRYPTO,SW_SECURE_CRYPTO)<SUB>638</SUB>> ]
+"3083" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_CANNOT_HANDLE)<SUB>640</SUB>> ]
+"3089" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>643</SUB>> ]
+"3105" [label = <(FIELD_IDENTIFIER,findSession,findSession)<SUB>644</SUB>> ]
+"3110" [label = <(&lt;operator&gt;.fieldAccess,session.get)<SUB>645</SUB>> ]
+"3115" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>646</SUB>> ]
+"3124" [label = <(FIELD_IDENTIFIER,find,find)<SUB>650</SUB>> ]
+"3130" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.end)<SUB>651</SUB>> ]
+"3135" [label = <(&lt;operator&gt;.indirectIndexAccess,mSecurityLevel[sid])<SUB>652</SUB>> ]
+"3064" [label = <(FIELD_IDENTIFIER,size,size)<SUB>633</SUB>> ]
+"3072" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>635</SUB>> ]
+"3085" [label = <(FIELD_IDENTIFIER,ERROR_DRM_CANNOT_HANDLE,ERROR_DRM_CANNOT_HANDLE)<SUB>640</SUB>> ]
+"3091" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>643</SUB>> ]
+"3112" [label = <(FIELD_IDENTIFIER,get,get)<SUB>645</SUB>> ]
+"3117" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>646</SUB>> ]
+"3132" [label = <(FIELD_IDENTIFIER,end,end)<SUB>651</SUB>> ]
+"3142" [label = <(&lt;operator&gt;.logicalNot,!mSecurityLevel.insert(\012                std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;(sid, level)).second)<SUB>654</SUB>> ]
+"3143" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.insert(\012                std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;(sid, level)).second)<SUB>654</SUB>> ]
+"3156" [label = <(ALOGE,ALOGE(&quot;Failed to set security level&quot;))<SUB>656</SUB>> ]
+"3158" [label = <(RETURN,return Status::ERROR_DRM_INVALID_STATE;,return Status::ERROR_DRM_INVALID_STATE;)<SUB>657</SUB>> ]
+"3144" [label = <(insert,mSecurityLevel.insert(\012                std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;(sid, level)))<SUB>654</SUB>> ]
+"3154" [label = <(FIELD_IDENTIFIER,second,second)<SUB>654</SUB>> ]
+"3159" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_INVALID_STATE)<SUB>657</SUB>> ]
+"3145" [label = <(&lt;operator&gt;.fieldAccess,mSecurityLevel.insert)<SUB>654</SUB>> ]
+"3148" [label = <(std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;,std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;(sid, level))<SUB>655</SUB>> ]
+"3161" [label = <(FIELD_IDENTIFIER,ERROR_DRM_INVALID_STATE,ERROR_DRM_INVALID_STATE)<SUB>657</SUB>> ]
+"3147" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>654</SUB>> ]
+"3149" [label = <(&lt;operator&gt;.fieldAccess,std::pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;)<SUB>655</SUB>> ]
+"3151" [label = <(FIELD_IDENTIFIER,pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;,pair&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt;)<SUB>655</SUB>> ]
+"3055" [label = <(METHOD,setSecurityLevel)<SUB>631</SUB>> ]
+"3166" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>631</SUB>> ]
+  "3086" -> "3098" 
+  "3096" -> "3112" 
+  "3119" -> "3132" 
+  "3162" -> "3166" 
+  "3060" -> "3067" 
+  "3060" -> "3078" 
+  "3074" -> "3080" 
+  "3074" -> "3091" 
+  "3087" -> "3094" 
+  "3094" -> "3086" 
+  "3097" -> "3105" 
+  "3102" -> "3096" 
+  "3108" -> "3117" 
+  "3108" -> "3124" 
   "3121" -> "3119" 
-  "3136" -> "3134" 
-  "3146" -> "3160" 
-  "3146" -> "3169" 
-  "3147" -> "3146" 
-  "3160" -> "3165" 
-  "3162" -> "3170" 
-  "3148" -> "3158" 
-  "3158" -> "3147" 
+  "3127" -> "3135" 
+  "3127" -> "3147" 
   "3163" -> "3162" 
-  "3149" -> "3155" 
-  "3152" -> "3148" 
+  "3061" -> "3060" 
+  "3067" -> "3072" 
+  "3069" -> "3166" 
+  "3076" -> "3074" 
+  "3080" -> "3085" 
+  "3082" -> "3166" 
+  "3088" -> "3087" 
+  "3098" -> "3097" 
+  "3103" -> "3102" 
+  "3109" -> "3108" 
+  "3114" -> "3166" 
+  "3122" -> "3121" 
+  "3129" -> "3127" 
+  "3134" -> "3165" 
   "3165" -> "3163" 
+  "3062" -> "3061" 
+  "3070" -> "3069" 
+  "3078" -> "3076" 
+  "3083" -> "3082" 
+  "3089" -> "3088" 
+  "3105" -> "3103" 
+  "3110" -> "3109" 
+  "3115" -> "3114" 
+  "3124" -> "3122" 
+  "3130" -> "3129" 
+  "3135" -> "3134" 
+  "3064" -> "3062" 
+  "3072" -> "3070" 
+  "3085" -> "3083" 
+  "3091" -> "3089" 
+  "3112" -> "3110" 
+  "3117" -> "3115" 
+  "3132" -> "3130" 
+  "3142" -> "3156" 
+  "3142" -> "3165" 
+  "3143" -> "3142" 
+  "3156" -> "3161" 
+  "3158" -> "3166" 
+  "3144" -> "3154" 
+  "3154" -> "3143" 
+  "3159" -> "3158" 
+  "3145" -> "3151" 
+  "3148" -> "3144" 
+  "3161" -> "3159" 
+  "3147" -> "3145" 
+  "3149" -> "3148" 
   "3151" -> "3149" 
-  "3153" -> "3152" 
-  "3155" -> "3153" 
-  "3059" -> "3068" 
+  "3055" -> "3064" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/80-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/80-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/80-cfg.dot	2023-06-07 19:37:50.977374273 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/80-cfg.dot	2023-06-07 19:37:55.487374361 +0330
@@ -1,135 +1,135 @@
 digraph "getMetrics" {  
-"3176" [label = <(&lt;operator&gt;.assignment,openSessionOkAttribute = {\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE, (int64_t) Status::OK, 0.0, &quot;&quot;\012 })<SUB>666</SUB>> ]
-"3193" [label = <(&lt;operator&gt;.assignment,openSessionMetricValue = {\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mOpenSessionOkCount, 0.0, &quot;&quot;\012 })<SUB>669</SUB>> ]
-"3206" [label = <(&lt;operator&gt;.assignment,openSessionMetric = {\012 &quot;open_session&quot;, { openSessionOkAttribute }, { openSessionMetricValue }\012 })<SUB>672</SUB>> ]
-"3215" [label = <(&lt;operator&gt;.assignment,closeSessionOkAttribute = {\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE, (int64_t) Status::OK, 0.0, &quot;&quot;\012 })<SUB>677</SUB>> ]
-"3232" [label = <(&lt;operator&gt;.assignment,closeSessionMetricValue = {\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mCloseSessionOkCount, 0.0, &quot;&quot;\012 })<SUB>680</SUB>> ]
-"3245" [label = <(&lt;operator&gt;.assignment,closeSessionMetric = {\012 &quot;close_session&quot;, { closeSessionOkAttribute }, { closeSessionMetricValue }\012 })<SUB>683</SUB>> ]
-"3254" [label = <(&lt;operator&gt;.assignment,closeSessionNotOpenedAttribute = {\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE,\012 (int64_t) Status::ERROR_DRM_SESSION_NOT_OPENED, 0.0, &quot;&quot;\012 })<SUB>688</SUB>> ]
-"3271" [label = <(&lt;operator&gt;.assignment,closeSessionNotOpenedMetricValue = {\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mCloseSessionNotOpenedCount, 0.0, &quot;&quot;\012 })<SUB>692</SUB>> ]
-"3284" [label = <(&lt;operator&gt;.assignment,closeSessionNotOpenedMetric = {\012 &quot;close_session&quot;, { closeSessionNotOpenedAttribute }, { closeSessionNotOpenedMetricValue }\012 })<SUB>695</SUB>> ]
-"3293" [label = <(&lt;operator&gt;.assignment,metrics = { { openSessionMetric, closeSessionMetric,\012                                closeSessionNotOpenedMetric } })<SUB>699</SUB>> ]
-"3300" [label = <(_hidl_cb,_hidl_cb(Status::OK, hidl_vec&lt;DrmMetricGroup&gt;({metrics})))<SUB>702</SUB>> ]
-"3311" [label = <(RETURN,return Void();,return Void();)<SUB>703</SUB>> ]
-"3178" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE, (int64_t) Status::OK, 0.0, &quot;&quot;\012 })<SUB>666</SUB>> ]
-"3195" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mOpenSessionOkCount, 0.0, &quot;&quot;\012 })<SUB>669</SUB>> ]
-"3208" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;open_session&quot;, { openSessionOkAttribute }, { openSessionMetricValue }\012 })<SUB>672</SUB>> ]
-"3217" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE, (int64_t) Status::OK, 0.0, &quot;&quot;\012 })<SUB>677</SUB>> ]
-"3234" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mCloseSessionOkCount, 0.0, &quot;&quot;\012 })<SUB>680</SUB>> ]
-"3247" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;close_session&quot;, { closeSessionOkAttribute }, { closeSessionMetricValue }\012 })<SUB>683</SUB>> ]
-"3256" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE,\012 (int64_t) Status::ERROR_DRM_SESSION_NOT_OPENED, 0.0, &quot;&quot;\012 })<SUB>688</SUB>> ]
-"3273" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mCloseSessionNotOpenedCount, 0.0, &quot;&quot;\012 })<SUB>692</SUB>> ]
-"3286" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;close_session&quot;, { closeSessionNotOpenedAttribute }, { closeSessionNotOpenedMetricValue }\012 })<SUB>695</SUB>> ]
-"3295" [label = <(&lt;operator&gt;.arrayInitializer,{ { openSessionMetric, closeSessionMetric,\012                                closeSessionNotOpenedMetric } })<SUB>699</SUB>> ]
-"3301" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>702</SUB>> ]
-"3304" [label = <(&lt;operator&gt;.greaterThan,hidl_vec&lt;DrmMetricGroup&gt;({metrics}))<SUB>702</SUB>> ]
-"3312" [label = <(Void,Void())<SUB>703</SUB>> ]
-"3180" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>667</SUB>> ]
-"3185" [label = <(&lt;operator&gt;.cast,(int64_t) Status::OK)<SUB>667</SUB>> ]
-"3197" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>670</SUB>> ]
-"3210" [label = <(&lt;operator&gt;.arrayInitializer,{ openSessionOkAttribute })<SUB>673</SUB>> ]
-"3212" [label = <(&lt;operator&gt;.arrayInitializer,{ openSessionMetricValue })<SUB>673</SUB>> ]
-"3219" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>678</SUB>> ]
-"3224" [label = <(&lt;operator&gt;.cast,(int64_t) Status::OK)<SUB>678</SUB>> ]
-"3236" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>681</SUB>> ]
-"3249" [label = <(&lt;operator&gt;.arrayInitializer,{ closeSessionOkAttribute })<SUB>684</SUB>> ]
-"3251" [label = <(&lt;operator&gt;.arrayInitializer,{ closeSessionMetricValue })<SUB>684</SUB>> ]
-"3258" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>689</SUB>> ]
-"3263" [label = <(&lt;operator&gt;.cast,(int64_t) Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>690</SUB>> ]
-"3275" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>693</SUB>> ]
-"3288" [label = <(&lt;operator&gt;.arrayInitializer,{ closeSessionNotOpenedAttribute })<SUB>696</SUB>> ]
-"3290" [label = <(&lt;operator&gt;.arrayInitializer,{ closeSessionNotOpenedMetricValue })<SUB>696</SUB>> ]
-"3296" [label = <(&lt;operator&gt;.arrayInitializer,{ openSessionMetric, closeSessionMetric,\012                                closeSessionNotOpenedMetric })<SUB>699</SUB>> ]
-"3303" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>702</SUB>> ]
-"3305" [label = <(&lt;operator&gt;.lessThan,hidl_vec&lt;DrmMetricGroup)<SUB>702</SUB>> ]
-"3181" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>667</SUB>> ]
-"3184" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>667</SUB>> ]
-"3186" [label = <(UNKNOWN,int64_t,int64_t)<SUB>667</SUB>> ]
-"3187" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>667</SUB>> ]
-"3198" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>670</SUB>> ]
-"3201" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>670</SUB>> ]
-"3220" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>678</SUB>> ]
-"3223" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>678</SUB>> ]
-"3225" [label = <(UNKNOWN,int64_t,int64_t)<SUB>678</SUB>> ]
-"3226" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>678</SUB>> ]
-"3237" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>681</SUB>> ]
-"3240" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>681</SUB>> ]
-"3259" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>689</SUB>> ]
-"3262" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>689</SUB>> ]
-"3264" [label = <(UNKNOWN,int64_t,int64_t)<SUB>690</SUB>> ]
-"3265" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>690</SUB>> ]
-"3276" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>693</SUB>> ]
-"3279" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>693</SUB>> ]
-"3310" [label = <(UNKNOWN,s,s)<SUB>702</SUB>> ]
-"3189" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>667</SUB>> ]
-"3228" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>678</SUB>> ]
-"3267" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>690</SUB>> ]
-"3172" [label = <(METHOD,getMetrics)<SUB>664</SUB>> ]
-"3313" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>664</SUB>> ]
-  "3176" -> "3198" 
-  "3193" -> "3210" 
-  "3206" -> "3220" 
-  "3215" -> "3237" 
-  "3232" -> "3249" 
-  "3245" -> "3259" 
-  "3254" -> "3276" 
-  "3271" -> "3288" 
-  "3284" -> "3296" 
-  "3293" -> "3303" 
-  "3300" -> "3312" 
-  "3311" -> "3313" 
-  "3178" -> "3176" 
-  "3195" -> "3193" 
-  "3208" -> "3206" 
-  "3217" -> "3215" 
-  "3234" -> "3232" 
-  "3247" -> "3245" 
-  "3256" -> "3254" 
-  "3273" -> "3271" 
-  "3286" -> "3284" 
-  "3295" -> "3293" 
-  "3301" -> "3305" 
-  "3304" -> "3300" 
-  "3312" -> "3311" 
-  "3180" -> "3186" 
-  "3185" -> "3178" 
-  "3197" -> "3195" 
-  "3210" -> "3212" 
-  "3212" -> "3208" 
-  "3219" -> "3225" 
-  "3224" -> "3217" 
-  "3236" -> "3234" 
-  "3249" -> "3251" 
-  "3251" -> "3247" 
-  "3258" -> "3264" 
-  "3263" -> "3256" 
-  "3275" -> "3273" 
-  "3288" -> "3290" 
-  "3290" -> "3286" 
-  "3296" -> "3295" 
-  "3303" -> "3301" 
-  "3305" -> "3310" 
-  "3181" -> "3184" 
-  "3184" -> "3180" 
-  "3186" -> "3189" 
-  "3187" -> "3185" 
-  "3198" -> "3201" 
-  "3201" -> "3197" 
-  "3220" -> "3223" 
-  "3223" -> "3219" 
-  "3225" -> "3228" 
-  "3226" -> "3224" 
-  "3237" -> "3240" 
-  "3240" -> "3236" 
-  "3259" -> "3262" 
-  "3262" -> "3258" 
-  "3264" -> "3267" 
-  "3265" -> "3263" 
-  "3276" -> "3279" 
-  "3279" -> "3275" 
-  "3310" -> "3304" 
-  "3189" -> "3187" 
-  "3228" -> "3226" 
-  "3267" -> "3265" 
-  "3172" -> "3181" 
+"3172" [label = <(&lt;operator&gt;.assignment,openSessionOkAttribute = {\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE, (int64_t) Status::OK, 0.0, &quot;&quot;\012 })<SUB>665</SUB>> ]
+"3189" [label = <(&lt;operator&gt;.assignment,openSessionMetricValue = {\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mOpenSessionOkCount, 0.0, &quot;&quot;\012 })<SUB>668</SUB>> ]
+"3202" [label = <(&lt;operator&gt;.assignment,openSessionMetric = {\012 &quot;open_session&quot;, { openSessionOkAttribute }, { openSessionMetricValue }\012 })<SUB>671</SUB>> ]
+"3211" [label = <(&lt;operator&gt;.assignment,closeSessionOkAttribute = {\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE, (int64_t) Status::OK, 0.0, &quot;&quot;\012 })<SUB>676</SUB>> ]
+"3228" [label = <(&lt;operator&gt;.assignment,closeSessionMetricValue = {\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mCloseSessionOkCount, 0.0, &quot;&quot;\012 })<SUB>679</SUB>> ]
+"3241" [label = <(&lt;operator&gt;.assignment,closeSessionMetric = {\012 &quot;close_session&quot;, { closeSessionOkAttribute }, { closeSessionMetricValue }\012 })<SUB>682</SUB>> ]
+"3250" [label = <(&lt;operator&gt;.assignment,closeSessionNotOpenedAttribute = {\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE,\012 (int64_t) Status::ERROR_DRM_SESSION_NOT_OPENED, 0.0, &quot;&quot;\012 })<SUB>687</SUB>> ]
+"3267" [label = <(&lt;operator&gt;.assignment,closeSessionNotOpenedMetricValue = {\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mCloseSessionNotOpenedCount, 0.0, &quot;&quot;\012 })<SUB>691</SUB>> ]
+"3280" [label = <(&lt;operator&gt;.assignment,closeSessionNotOpenedMetric = {\012 &quot;close_session&quot;, { closeSessionNotOpenedAttribute }, { closeSessionNotOpenedMetricValue }\012 })<SUB>694</SUB>> ]
+"3289" [label = <(&lt;operator&gt;.assignment,metrics = { { openSessionMetric, closeSessionMetric,\012                                closeSessionNotOpenedMetric } })<SUB>698</SUB>> ]
+"3296" [label = <(_hidl_cb,_hidl_cb(Status::OK, hidl_vec&lt;DrmMetricGroup&gt;({metrics})))<SUB>701</SUB>> ]
+"3307" [label = <(RETURN,return Void();,return Void();)<SUB>702</SUB>> ]
+"3174" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE, (int64_t) Status::OK, 0.0, &quot;&quot;\012 })<SUB>665</SUB>> ]
+"3191" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mOpenSessionOkCount, 0.0, &quot;&quot;\012 })<SUB>668</SUB>> ]
+"3204" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;open_session&quot;, { openSessionOkAttribute }, { openSessionMetricValue }\012 })<SUB>671</SUB>> ]
+"3213" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE, (int64_t) Status::OK, 0.0, &quot;&quot;\012 })<SUB>676</SUB>> ]
+"3230" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mCloseSessionOkCount, 0.0, &quot;&quot;\012 })<SUB>679</SUB>> ]
+"3243" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;close_session&quot;, { closeSessionOkAttribute }, { closeSessionMetricValue }\012 })<SUB>682</SUB>> ]
+"3252" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;status&quot;, DrmMetricGroup::ValueType::INT64_TYPE,\012 (int64_t) Status::ERROR_DRM_SESSION_NOT_OPENED, 0.0, &quot;&quot;\012 })<SUB>687</SUB>> ]
+"3269" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;count&quot;, DrmMetricGroup::ValueType::INT64_TYPE, mCloseSessionNotOpenedCount, 0.0, &quot;&quot;\012 })<SUB>691</SUB>> ]
+"3282" [label = <(&lt;operator&gt;.arrayInitializer,{\012 &quot;close_session&quot;, { closeSessionNotOpenedAttribute }, { closeSessionNotOpenedMetricValue }\012 })<SUB>694</SUB>> ]
+"3291" [label = <(&lt;operator&gt;.arrayInitializer,{ { openSessionMetric, closeSessionMetric,\012                                closeSessionNotOpenedMetric } })<SUB>698</SUB>> ]
+"3297" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>701</SUB>> ]
+"3300" [label = <(&lt;operator&gt;.greaterThan,hidl_vec&lt;DrmMetricGroup&gt;({metrics}))<SUB>701</SUB>> ]
+"3308" [label = <(Void,Void())<SUB>702</SUB>> ]
+"3176" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>666</SUB>> ]
+"3181" [label = <(&lt;operator&gt;.cast,(int64_t) Status::OK)<SUB>666</SUB>> ]
+"3193" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>669</SUB>> ]
+"3206" [label = <(&lt;operator&gt;.arrayInitializer,{ openSessionOkAttribute })<SUB>672</SUB>> ]
+"3208" [label = <(&lt;operator&gt;.arrayInitializer,{ openSessionMetricValue })<SUB>672</SUB>> ]
+"3215" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>677</SUB>> ]
+"3220" [label = <(&lt;operator&gt;.cast,(int64_t) Status::OK)<SUB>677</SUB>> ]
+"3232" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>680</SUB>> ]
+"3245" [label = <(&lt;operator&gt;.arrayInitializer,{ closeSessionOkAttribute })<SUB>683</SUB>> ]
+"3247" [label = <(&lt;operator&gt;.arrayInitializer,{ closeSessionMetricValue })<SUB>683</SUB>> ]
+"3254" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>688</SUB>> ]
+"3259" [label = <(&lt;operator&gt;.cast,(int64_t) Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>689</SUB>> ]
+"3271" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType::INT64_TYPE)<SUB>692</SUB>> ]
+"3284" [label = <(&lt;operator&gt;.arrayInitializer,{ closeSessionNotOpenedAttribute })<SUB>695</SUB>> ]
+"3286" [label = <(&lt;operator&gt;.arrayInitializer,{ closeSessionNotOpenedMetricValue })<SUB>695</SUB>> ]
+"3292" [label = <(&lt;operator&gt;.arrayInitializer,{ openSessionMetric, closeSessionMetric,\012                                closeSessionNotOpenedMetric })<SUB>698</SUB>> ]
+"3299" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>701</SUB>> ]
+"3301" [label = <(&lt;operator&gt;.lessThan,hidl_vec&lt;DrmMetricGroup)<SUB>701</SUB>> ]
+"3177" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>666</SUB>> ]
+"3180" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>666</SUB>> ]
+"3182" [label = <(UNKNOWN,int64_t,int64_t)<SUB>666</SUB>> ]
+"3183" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>666</SUB>> ]
+"3194" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>669</SUB>> ]
+"3197" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>669</SUB>> ]
+"3216" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>677</SUB>> ]
+"3219" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>677</SUB>> ]
+"3221" [label = <(UNKNOWN,int64_t,int64_t)<SUB>677</SUB>> ]
+"3222" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>677</SUB>> ]
+"3233" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>680</SUB>> ]
+"3236" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>680</SUB>> ]
+"3255" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>688</SUB>> ]
+"3258" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>688</SUB>> ]
+"3260" [label = <(UNKNOWN,int64_t,int64_t)<SUB>689</SUB>> ]
+"3261" [label = <(&lt;operator&gt;.fieldAccess,Status::ERROR_DRM_SESSION_NOT_OPENED)<SUB>689</SUB>> ]
+"3272" [label = <(&lt;operator&gt;.fieldAccess,DrmMetricGroup::ValueType)<SUB>692</SUB>> ]
+"3275" [label = <(FIELD_IDENTIFIER,INT64_TYPE,INT64_TYPE)<SUB>692</SUB>> ]
+"3306" [label = <(UNKNOWN,s,s)<SUB>701</SUB>> ]
+"3185" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>666</SUB>> ]
+"3224" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>677</SUB>> ]
+"3263" [label = <(FIELD_IDENTIFIER,ERROR_DRM_SESSION_NOT_OPENED,ERROR_DRM_SESSION_NOT_OPENED)<SUB>689</SUB>> ]
+"3168" [label = <(METHOD,getMetrics)<SUB>663</SUB>> ]
+"3309" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>663</SUB>> ]
+  "3172" -> "3194" 
+  "3189" -> "3206" 
+  "3202" -> "3216" 
+  "3211" -> "3233" 
+  "3228" -> "3245" 
+  "3241" -> "3255" 
+  "3250" -> "3272" 
+  "3267" -> "3284" 
+  "3280" -> "3292" 
+  "3289" -> "3299" 
+  "3296" -> "3308" 
+  "3307" -> "3309" 
+  "3174" -> "3172" 
+  "3191" -> "3189" 
+  "3204" -> "3202" 
+  "3213" -> "3211" 
+  "3230" -> "3228" 
+  "3243" -> "3241" 
+  "3252" -> "3250" 
+  "3269" -> "3267" 
+  "3282" -> "3280" 
+  "3291" -> "3289" 
+  "3297" -> "3301" 
+  "3300" -> "3296" 
+  "3308" -> "3307" 
+  "3176" -> "3182" 
+  "3181" -> "3174" 
+  "3193" -> "3191" 
+  "3206" -> "3208" 
+  "3208" -> "3204" 
+  "3215" -> "3221" 
+  "3220" -> "3213" 
+  "3232" -> "3230" 
+  "3245" -> "3247" 
+  "3247" -> "3243" 
+  "3254" -> "3260" 
+  "3259" -> "3252" 
+  "3271" -> "3269" 
+  "3284" -> "3286" 
+  "3286" -> "3282" 
+  "3292" -> "3291" 
+  "3299" -> "3297" 
+  "3301" -> "3306" 
+  "3177" -> "3180" 
+  "3180" -> "3176" 
+  "3182" -> "3185" 
+  "3183" -> "3181" 
+  "3194" -> "3197" 
+  "3197" -> "3193" 
+  "3216" -> "3219" 
+  "3219" -> "3215" 
+  "3221" -> "3224" 
+  "3222" -> "3220" 
+  "3233" -> "3236" 
+  "3236" -> "3232" 
+  "3255" -> "3258" 
+  "3258" -> "3254" 
+  "3260" -> "3263" 
+  "3261" -> "3259" 
+  "3272" -> "3275" 
+  "3275" -> "3271" 
+  "3306" -> "3300" 
+  "3185" -> "3183" 
+  "3224" -> "3222" 
+  "3263" -> "3261" 
+  "3168" -> "3177" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/81-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/81-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/81-cfg.dot	2023-06-07 19:37:50.977374273 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/81-cfg.dot	2023-06-07 19:37:55.487374361 +0330
@@ -1,87 +1,87 @@
 digraph "getOfflineLicenseKeySetIds" {  
-"3318" [label = <(&lt;operator&gt;.assignment,std::vector&lt;std::string&gt; licenseNames = mFileHandle.ListLicenses())<SUB>707</SUB>> ]
-"3332" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;KeySetId&gt; keySetIds)<SUB>708</SUB>> ]
-"3376" [label = <(_hidl_cb,_hidl_cb(Status::OK, keySetIds))<SUB>717</SUB>> ]
-"3381" [label = <(RETURN,return Void();,return Void();)<SUB>718</SUB>> ]
-"3319" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;std::string&gt; licenseNames)<SUB>707</SUB>> ]
-"3328" [label = <(ListLicenses,mFileHandle.ListLicenses())<SUB>707</SUB>> ]
-"3333" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;KeySetId)<SUB>708</SUB>> ]
-"3340" [label = <(&lt;operator&gt;.notEquals,mMockError != Status_V1_2::OK)<SUB>709</SUB>> ]
-"3377" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>717</SUB>> ]
-"3382" [label = <(Void,Void())<SUB>718</SUB>> ]
-"3320" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;std::string)<SUB>707</SUB>> ]
-"3329" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.ListLicenses)<SUB>707</SUB>> ]
-"3334" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>708</SUB>> ]
-"3342" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>709</SUB>> ]
-"3346" [label = <(_hidl_cb,_hidl_cb(toStatus_1_0(mMockError), keySetIds))<SUB>710</SUB>> ]
-"3350" [label = <(RETURN,return Void();,return Void();)<SUB>711</SUB>> ]
-"3356" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keySetId(name.begin(), name.end()))<SUB>714</SUB>> ]
-"3371" [label = <(push_back,keySetIds.push_back(keySetId))<SUB>715</SUB>> ]
-"3379" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>717</SUB>> ]
-"3321" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>707</SUB>> ]
-"3324" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>707</SUB>> ]
-"3331" [label = <(FIELD_IDENTIFIER,ListLicenses,ListLicenses)<SUB>707</SUB>> ]
-"3336" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>708</SUB>> ]
-"3344" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>709</SUB>> ]
-"3347" [label = <(toStatus_1_0,toStatus_1_0(mMockError))<SUB>710</SUB>> ]
-"3351" [label = <(Void,Void())<SUB>711</SUB>> ]
-"3357" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>714</SUB>> ]
-"3362" [label = <(keySetId,keySetId(name.begin(), name.end()))<SUB>714</SUB>> ]
-"3372" [label = <(&lt;operator&gt;.fieldAccess,keySetIds.push_back)<SUB>715</SUB>> ]
-"3323" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>707</SUB>> ]
-"3326" [label = <(FIELD_IDENTIFIER,string,string)<SUB>707</SUB>> ]
-"3358" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>714</SUB>> ]
-"3363" [label = <(begin,name.begin())<SUB>714</SUB>> ]
-"3367" [label = <(end,name.end())<SUB>714</SUB>> ]
-"3374" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>715</SUB>> ]
-"3360" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>714</SUB>> ]
-"3364" [label = <(&lt;operator&gt;.fieldAccess,name.begin)<SUB>714</SUB>> ]
-"3368" [label = <(&lt;operator&gt;.fieldAccess,name.end)<SUB>714</SUB>> ]
-"3366" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>714</SUB>> ]
-"3370" [label = <(FIELD_IDENTIFIER,end,end)<SUB>714</SUB>> ]
-"3315" [label = <(METHOD,getOfflineLicenseKeySetIds)<SUB>706</SUB>> ]
-"3383" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>706</SUB>> ]
-  "3318" -> "3336" 
-  "3332" -> "3344" 
-  "3376" -> "3382" 
-  "3381" -> "3383" 
-  "3319" -> "3331" 
-  "3328" -> "3318" 
-  "3333" -> "3332" 
-  "3340" -> "3347" 
-  "3340" -> "3360" 
-  "3377" -> "3376" 
-  "3382" -> "3381" 
-  "3320" -> "3319" 
+"3314" [label = <(&lt;operator&gt;.assignment,std::vector&lt;std::string&gt; licenseNames = mFileHandle.ListLicenses())<SUB>706</SUB>> ]
+"3328" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;KeySetId&gt; keySetIds)<SUB>707</SUB>> ]
+"3372" [label = <(_hidl_cb,_hidl_cb(Status::OK, keySetIds))<SUB>716</SUB>> ]
+"3377" [label = <(RETURN,return Void();,return Void();)<SUB>717</SUB>> ]
+"3315" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;std::string&gt; licenseNames)<SUB>706</SUB>> ]
+"3324" [label = <(ListLicenses,mFileHandle.ListLicenses())<SUB>706</SUB>> ]
+"3329" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;KeySetId)<SUB>707</SUB>> ]
+"3336" [label = <(&lt;operator&gt;.notEquals,mMockError != Status_V1_2::OK)<SUB>708</SUB>> ]
+"3373" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>716</SUB>> ]
+"3378" [label = <(Void,Void())<SUB>717</SUB>> ]
+"3316" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;std::string)<SUB>706</SUB>> ]
+"3325" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.ListLicenses)<SUB>706</SUB>> ]
+"3330" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>707</SUB>> ]
+"3338" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>708</SUB>> ]
+"3342" [label = <(_hidl_cb,_hidl_cb(toStatus_1_0(mMockError), keySetIds))<SUB>709</SUB>> ]
+"3346" [label = <(RETURN,return Void();,return Void();)<SUB>710</SUB>> ]
+"3352" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; keySetId(name.begin(), name.end()))<SUB>713</SUB>> ]
+"3367" [label = <(push_back,keySetIds.push_back(keySetId))<SUB>714</SUB>> ]
+"3375" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>716</SUB>> ]
+"3317" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>706</SUB>> ]
+"3320" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>706</SUB>> ]
+"3327" [label = <(FIELD_IDENTIFIER,ListLicenses,ListLicenses)<SUB>706</SUB>> ]
+"3332" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>707</SUB>> ]
+"3340" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>708</SUB>> ]
+"3343" [label = <(toStatus_1_0,toStatus_1_0(mMockError))<SUB>709</SUB>> ]
+"3347" [label = <(Void,Void())<SUB>710</SUB>> ]
+"3353" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>713</SUB>> ]
+"3358" [label = <(keySetId,keySetId(name.begin(), name.end()))<SUB>713</SUB>> ]
+"3368" [label = <(&lt;operator&gt;.fieldAccess,keySetIds.push_back)<SUB>714</SUB>> ]
+"3319" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>706</SUB>> ]
+"3322" [label = <(FIELD_IDENTIFIER,string,string)<SUB>706</SUB>> ]
+"3354" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>713</SUB>> ]
+"3359" [label = <(begin,name.begin())<SUB>713</SUB>> ]
+"3363" [label = <(end,name.end())<SUB>713</SUB>> ]
+"3370" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>714</SUB>> ]
+"3356" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>713</SUB>> ]
+"3360" [label = <(&lt;operator&gt;.fieldAccess,name.begin)<SUB>713</SUB>> ]
+"3364" [label = <(&lt;operator&gt;.fieldAccess,name.end)<SUB>713</SUB>> ]
+"3362" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>713</SUB>> ]
+"3366" [label = <(FIELD_IDENTIFIER,end,end)<SUB>713</SUB>> ]
+"3311" [label = <(METHOD,getOfflineLicenseKeySetIds)<SUB>705</SUB>> ]
+"3379" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>705</SUB>> ]
+  "3314" -> "3332" 
+  "3328" -> "3340" 
+  "3372" -> "3378" 
+  "3377" -> "3379" 
+  "3315" -> "3327" 
+  "3324" -> "3314" 
   "3329" -> "3328" 
-  "3334" -> "3333" 
-  "3342" -> "3340" 
-  "3346" -> "3351" 
-  "3350" -> "3383" 
-  "3356" -> "3374" 
-  "3371" -> "3360" 
-  "3371" -> "3379" 
-  "3379" -> "3377" 
-  "3321" -> "3326" 
-  "3324" -> "3320" 
-  "3331" -> "3329" 
-  "3336" -> "3334" 
-  "3344" -> "3342" 
+  "3336" -> "3343" 
+  "3336" -> "3356" 
+  "3373" -> "3372" 
+  "3378" -> "3377" 
+  "3316" -> "3315" 
+  "3325" -> "3324" 
+  "3330" -> "3329" 
+  "3338" -> "3336" 
+  "3342" -> "3347" 
+  "3346" -> "3379" 
+  "3352" -> "3370" 
+  "3367" -> "3356" 
+  "3367" -> "3375" 
+  "3375" -> "3373" 
+  "3317" -> "3322" 
+  "3320" -> "3316" 
+  "3327" -> "3325" 
+  "3332" -> "3330" 
+  "3340" -> "3338" 
+  "3343" -> "3342" 
   "3347" -> "3346" 
-  "3351" -> "3350" 
-  "3357" -> "3366" 
-  "3362" -> "3356" 
-  "3372" -> "3371" 
-  "3323" -> "3321" 
-  "3326" -> "3324" 
-  "3358" -> "3357" 
-  "3363" -> "3370" 
-  "3367" -> "3362" 
-  "3374" -> "3372" 
-  "3360" -> "3358" 
-  "3364" -> "3363" 
+  "3353" -> "3362" 
+  "3358" -> "3352" 
   "3368" -> "3367" 
-  "3366" -> "3364" 
+  "3319" -> "3317" 
+  "3322" -> "3320" 
+  "3354" -> "3353" 
+  "3359" -> "3366" 
+  "3363" -> "3358" 
   "3370" -> "3368" 
-  "3315" -> "3323" 
+  "3356" -> "3354" 
+  "3360" -> "3359" 
+  "3364" -> "3363" 
+  "3362" -> "3360" 
+  "3366" -> "3364" 
+  "3311" -> "3319" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/82-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/82-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/82-cfg.dot	2023-06-07 19:37:50.977374273 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/82-cfg.dot	2023-06-07 19:37:55.487374361 +0330
@@ -1,49 +1,49 @@
 digraph "removeOfflineLicense" {  
-"3399" [label = <(licenseName,licenseName(keySetId.begin(), keySetId.end()))<SUB>726</SUB>> ]
-"3419" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>730</SUB>> ]
-"3389" [label = <(&lt;operator&gt;.notEquals,mMockError != Status_V1_2::OK)<SUB>723</SUB>> ]
-"3400" [label = <(begin,keySetId.begin())<SUB>726</SUB>> ]
-"3404" [label = <(end,keySetId.end())<SUB>726</SUB>> ]
-"3409" [label = <(DeleteLicense,mFileHandle.DeleteLicense(licenseName))<SUB>727</SUB>> ]
-"3420" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>730</SUB>> ]
-"3391" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>723</SUB>> ]
-"3395" [label = <(RETURN,return toStatus_1_0(mMockError);,return toStatus_1_0(mMockError);)<SUB>724</SUB>> ]
-"3401" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>726</SUB>> ]
-"3405" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>726</SUB>> ]
-"3410" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.DeleteLicense)<SUB>727</SUB>> ]
-"3415" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>728</SUB>> ]
-"3422" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>730</SUB>> ]
-"3393" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>723</SUB>> ]
-"3396" [label = <(toStatus_1_0,toStatus_1_0(mMockError))<SUB>724</SUB>> ]
-"3403" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>726</SUB>> ]
-"3407" [label = <(FIELD_IDENTIFIER,end,end)<SUB>726</SUB>> ]
-"3412" [label = <(FIELD_IDENTIFIER,DeleteLicense,DeleteLicense)<SUB>727</SUB>> ]
-"3416" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>728</SUB>> ]
-"3418" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>728</SUB>> ]
-"3385" [label = <(METHOD,removeOfflineLicense)<SUB>722</SUB>> ]
-"3423" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>722</SUB>> ]
-  "3399" -> "3412" 
-  "3419" -> "3423" 
-  "3389" -> "3396" 
-  "3389" -> "3403" 
-  "3400" -> "3407" 
-  "3404" -> "3399" 
-  "3409" -> "3418" 
-  "3409" -> "3422" 
-  "3420" -> "3419" 
-  "3391" -> "3389" 
-  "3395" -> "3423" 
-  "3401" -> "3400" 
-  "3405" -> "3404" 
-  "3410" -> "3409" 
-  "3415" -> "3423" 
-  "3422" -> "3420" 
-  "3393" -> "3391" 
-  "3396" -> "3395" 
-  "3403" -> "3401" 
-  "3407" -> "3405" 
-  "3412" -> "3410" 
+"3395" [label = <(licenseName,licenseName(keySetId.begin(), keySetId.end()))<SUB>725</SUB>> ]
+"3415" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>729</SUB>> ]
+"3385" [label = <(&lt;operator&gt;.notEquals,mMockError != Status_V1_2::OK)<SUB>722</SUB>> ]
+"3396" [label = <(begin,keySetId.begin())<SUB>725</SUB>> ]
+"3400" [label = <(end,keySetId.end())<SUB>725</SUB>> ]
+"3405" [label = <(DeleteLicense,mFileHandle.DeleteLicense(licenseName))<SUB>726</SUB>> ]
+"3416" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>729</SUB>> ]
+"3387" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>722</SUB>> ]
+"3391" [label = <(RETURN,return toStatus_1_0(mMockError);,return toStatus_1_0(mMockError);)<SUB>723</SUB>> ]
+"3397" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>725</SUB>> ]
+"3401" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>725</SUB>> ]
+"3406" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.DeleteLicense)<SUB>726</SUB>> ]
+"3411" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>727</SUB>> ]
+"3418" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>729</SUB>> ]
+"3389" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>722</SUB>> ]
+"3392" [label = <(toStatus_1_0,toStatus_1_0(mMockError))<SUB>723</SUB>> ]
+"3399" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>725</SUB>> ]
+"3403" [label = <(FIELD_IDENTIFIER,end,end)<SUB>725</SUB>> ]
+"3408" [label = <(FIELD_IDENTIFIER,DeleteLicense,DeleteLicense)<SUB>726</SUB>> ]
+"3412" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>727</SUB>> ]
+"3414" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>727</SUB>> ]
+"3381" [label = <(METHOD,removeOfflineLicense)<SUB>721</SUB>> ]
+"3419" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>721</SUB>> ]
+  "3395" -> "3408" 
+  "3415" -> "3419" 
+  "3385" -> "3392" 
+  "3385" -> "3399" 
+  "3396" -> "3403" 
+  "3400" -> "3395" 
+  "3405" -> "3414" 
+  "3405" -> "3418" 
   "3416" -> "3415" 
+  "3387" -> "3385" 
+  "3391" -> "3419" 
+  "3397" -> "3396" 
+  "3401" -> "3400" 
+  "3406" -> "3405" 
+  "3411" -> "3419" 
   "3418" -> "3416" 
-  "3385" -> "3393" 
+  "3389" -> "3387" 
+  "3392" -> "3391" 
+  "3399" -> "3397" 
+  "3403" -> "3401" 
+  "3408" -> "3406" 
+  "3412" -> "3411" 
+  "3414" -> "3412" 
+  "3381" -> "3389" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/83-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/83-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/83-cfg.dot	2023-06-07 19:37:50.977374273 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/83-cfg.dot	2023-06-07 19:37:55.487374361 +0330
@@ -1,98 +1,98 @@
 digraph "getOfflineLicenseState" {  
-"3430" [label = <(licenseName,licenseName(keySetId.begin(), keySetId.end()))<SUB>735</SUB>> ]
-"3515" [label = <(RETURN,return Void();,return Void();)<SUB>757</SUB>> ]
-"3431" [label = <(begin,keySetId.begin())<SUB>735</SUB>> ]
-"3435" [label = <(end,keySetId.end())<SUB>735</SUB>> ]
-"3443" [label = <(&lt;operator&gt;.notEquals,mMockError != Status_V1_2::OK)<SUB>739</SUB>> ]
-"3516" [label = <(Void,Void())<SUB>757</SUB>> ]
-"3432" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>735</SUB>> ]
-"3436" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>735</SUB>> ]
-"3445" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>739</SUB>> ]
-"3449" [label = <(_hidl_cb,_hidl_cb(toStatus_1_0(mMockError), OfflineLicenseState::UNKNOWN))<SUB>740</SUB>> ]
-"3434" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>735</SUB>> ]
-"3438" [label = <(FIELD_IDENTIFIER,end,end)<SUB>735</SUB>> ]
-"3447" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>739</SUB>> ]
-"3450" [label = <(toStatus_1_0,toStatus_1_0(mMockError))<SUB>740</SUB>> ]
-"3452" [label = <(&lt;operator&gt;.fieldAccess,OfflineLicenseState::UNKNOWN)<SUB>740</SUB>> ]
-"3454" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>740</SUB>> ]
-"3458" [label = <(RetrieveLicense,mFileHandle.RetrieveLicense(licenseName, &amp;state, &amp;license))<SUB>741</SUB>> ]
-"3459" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.RetrieveLicense)<SUB>741</SUB>> ]
-"3463" [label = <(&lt;operator&gt;.addressOf,&amp;state)<SUB>741</SUB>> ]
-"3465" [label = <(&lt;operator&gt;.addressOf,&amp;license)<SUB>741</SUB>> ]
-"3501" [label = <(_hidl_cb,_hidl_cb(Status::OK, hLicenseState))<SUB>753</SUB>> ]
-"3461" [label = <(FIELD_IDENTIFIER,RetrieveLicense,RetrieveLicense)<SUB>741</SUB>> ]
-"3502" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>753</SUB>> ]
-"3508" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, OfflineLicenseState::UNKNOWN))<SUB>755</SUB>> ]
-"3472" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateActive)<SUB>743</SUB>> ]
-"3475" [label = <(&lt;operator&gt;.assignment,hLicenseState = OfflineLicenseState::USABLE)<SUB>744</SUB>> ]
-"3482" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateReleasing)<SUB>746</SUB>> ]
-"3485" [label = <(&lt;operator&gt;.assignment,hLicenseState = OfflineLicenseState::INACTIVE)<SUB>747</SUB>> ]
-"3492" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateUnknown)<SUB>749</SUB>> ]
-"3495" [label = <(&lt;operator&gt;.assignment,hLicenseState = OfflineLicenseState::UNKNOWN)<SUB>750</SUB>> ]
-"3504" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>753</SUB>> ]
-"3509" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>755</SUB>> ]
-"3512" [label = <(&lt;operator&gt;.fieldAccess,OfflineLicenseState::UNKNOWN)<SUB>755</SUB>> ]
-"3474" [label = <(FIELD_IDENTIFIER,kLicenseStateActive,kLicenseStateActive)<SUB>743</SUB>> ]
-"3477" [label = <(&lt;operator&gt;.fieldAccess,OfflineLicenseState::USABLE)<SUB>744</SUB>> ]
-"3484" [label = <(FIELD_IDENTIFIER,kLicenseStateReleasing,kLicenseStateReleasing)<SUB>746</SUB>> ]
-"3487" [label = <(&lt;operator&gt;.fieldAccess,OfflineLicenseState::INACTIVE)<SUB>747</SUB>> ]
-"3494" [label = <(FIELD_IDENTIFIER,kLicenseStateUnknown,kLicenseStateUnknown)<SUB>749</SUB>> ]
-"3497" [label = <(&lt;operator&gt;.fieldAccess,OfflineLicenseState::UNKNOWN)<SUB>750</SUB>> ]
-"3511" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>755</SUB>> ]
-"3514" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>755</SUB>> ]
-"3479" [label = <(FIELD_IDENTIFIER,USABLE,USABLE)<SUB>744</SUB>> ]
-"3489" [label = <(FIELD_IDENTIFIER,INACTIVE,INACTIVE)<SUB>747</SUB>> ]
-"3499" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>750</SUB>> ]
-"3425" [label = <(METHOD,getOfflineLicenseState)<SUB>733</SUB>> ]
-"3517" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>733</SUB>> ]
-  "3430" -> "3447" 
-  "3515" -> "3517" 
-  "3431" -> "3438" 
-  "3435" -> "3430" 
-  "3443" -> "3450" 
-  "3443" -> "3461" 
-  "3516" -> "3515" 
+"3426" [label = <(licenseName,licenseName(keySetId.begin(), keySetId.end()))<SUB>734</SUB>> ]
+"3511" [label = <(RETURN,return Void();,return Void();)<SUB>756</SUB>> ]
+"3427" [label = <(begin,keySetId.begin())<SUB>734</SUB>> ]
+"3431" [label = <(end,keySetId.end())<SUB>734</SUB>> ]
+"3439" [label = <(&lt;operator&gt;.notEquals,mMockError != Status_V1_2::OK)<SUB>738</SUB>> ]
+"3512" [label = <(Void,Void())<SUB>756</SUB>> ]
+"3428" [label = <(&lt;operator&gt;.fieldAccess,keySetId.begin)<SUB>734</SUB>> ]
+"3432" [label = <(&lt;operator&gt;.fieldAccess,keySetId.end)<SUB>734</SUB>> ]
+"3441" [label = <(&lt;operator&gt;.fieldAccess,Status_V1_2::OK)<SUB>738</SUB>> ]
+"3445" [label = <(_hidl_cb,_hidl_cb(toStatus_1_0(mMockError), OfflineLicenseState::UNKNOWN))<SUB>739</SUB>> ]
+"3430" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>734</SUB>> ]
+"3434" [label = <(FIELD_IDENTIFIER,end,end)<SUB>734</SUB>> ]
+"3443" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>738</SUB>> ]
+"3446" [label = <(toStatus_1_0,toStatus_1_0(mMockError))<SUB>739</SUB>> ]
+"3448" [label = <(&lt;operator&gt;.fieldAccess,OfflineLicenseState::UNKNOWN)<SUB>739</SUB>> ]
+"3450" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>739</SUB>> ]
+"3454" [label = <(RetrieveLicense,mFileHandle.RetrieveLicense(licenseName, &amp;state, &amp;license))<SUB>740</SUB>> ]
+"3455" [label = <(&lt;operator&gt;.fieldAccess,mFileHandle.RetrieveLicense)<SUB>740</SUB>> ]
+"3459" [label = <(&lt;operator&gt;.addressOf,&amp;state)<SUB>740</SUB>> ]
+"3461" [label = <(&lt;operator&gt;.addressOf,&amp;license)<SUB>740</SUB>> ]
+"3497" [label = <(_hidl_cb,_hidl_cb(Status::OK, hLicenseState))<SUB>752</SUB>> ]
+"3457" [label = <(FIELD_IDENTIFIER,RetrieveLicense,RetrieveLicense)<SUB>740</SUB>> ]
+"3498" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>752</SUB>> ]
+"3504" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, OfflineLicenseState::UNKNOWN))<SUB>754</SUB>> ]
+"3468" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateActive)<SUB>742</SUB>> ]
+"3471" [label = <(&lt;operator&gt;.assignment,hLicenseState = OfflineLicenseState::USABLE)<SUB>743</SUB>> ]
+"3478" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateReleasing)<SUB>745</SUB>> ]
+"3481" [label = <(&lt;operator&gt;.assignment,hLicenseState = OfflineLicenseState::INACTIVE)<SUB>746</SUB>> ]
+"3488" [label = <(&lt;operator&gt;.fieldAccess,DeviceFiles::kLicenseStateUnknown)<SUB>748</SUB>> ]
+"3491" [label = <(&lt;operator&gt;.assignment,hLicenseState = OfflineLicenseState::UNKNOWN)<SUB>749</SUB>> ]
+"3500" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>752</SUB>> ]
+"3505" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>754</SUB>> ]
+"3508" [label = <(&lt;operator&gt;.fieldAccess,OfflineLicenseState::UNKNOWN)<SUB>754</SUB>> ]
+"3470" [label = <(FIELD_IDENTIFIER,kLicenseStateActive,kLicenseStateActive)<SUB>742</SUB>> ]
+"3473" [label = <(&lt;operator&gt;.fieldAccess,OfflineLicenseState::USABLE)<SUB>743</SUB>> ]
+"3480" [label = <(FIELD_IDENTIFIER,kLicenseStateReleasing,kLicenseStateReleasing)<SUB>745</SUB>> ]
+"3483" [label = <(&lt;operator&gt;.fieldAccess,OfflineLicenseState::INACTIVE)<SUB>746</SUB>> ]
+"3490" [label = <(FIELD_IDENTIFIER,kLicenseStateUnknown,kLicenseStateUnknown)<SUB>748</SUB>> ]
+"3493" [label = <(&lt;operator&gt;.fieldAccess,OfflineLicenseState::UNKNOWN)<SUB>749</SUB>> ]
+"3507" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>754</SUB>> ]
+"3510" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>754</SUB>> ]
+"3475" [label = <(FIELD_IDENTIFIER,USABLE,USABLE)<SUB>743</SUB>> ]
+"3485" [label = <(FIELD_IDENTIFIER,INACTIVE,INACTIVE)<SUB>746</SUB>> ]
+"3495" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>749</SUB>> ]
+"3421" [label = <(METHOD,getOfflineLicenseState)<SUB>732</SUB>> ]
+"3513" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>732</SUB>> ]
+  "3426" -> "3443" 
+  "3511" -> "3513" 
+  "3427" -> "3434" 
+  "3431" -> "3426" 
+  "3439" -> "3446" 
+  "3439" -> "3457" 
+  "3512" -> "3511" 
+  "3428" -> "3427" 
   "3432" -> "3431" 
-  "3436" -> "3435" 
-  "3445" -> "3443" 
-  "3449" -> "3516" 
+  "3441" -> "3439" 
+  "3445" -> "3512" 
+  "3430" -> "3428" 
   "3434" -> "3432" 
-  "3438" -> "3436" 
-  "3447" -> "3445" 
-  "3450" -> "3454" 
-  "3452" -> "3449" 
-  "3454" -> "3452" 
-  "3458" -> "3474" 
-  "3458" -> "3484" 
-  "3458" -> "3494" 
-  "3458" -> "3504" 
-  "3458" -> "3511" 
-  "3459" -> "3463" 
-  "3463" -> "3465" 
-  "3465" -> "3458" 
-  "3501" -> "3516" 
-  "3461" -> "3459" 
-  "3502" -> "3501" 
-  "3508" -> "3516" 
-  "3472" -> "3479" 
-  "3475" -> "3504" 
-  "3482" -> "3489" 
-  "3485" -> "3504" 
-  "3492" -> "3499" 
-  "3495" -> "3504" 
-  "3504" -> "3502" 
-  "3509" -> "3514" 
-  "3512" -> "3508" 
-  "3474" -> "3472" 
-  "3477" -> "3475" 
-  "3484" -> "3482" 
-  "3487" -> "3485" 
-  "3494" -> "3492" 
-  "3497" -> "3495" 
-  "3511" -> "3509" 
-  "3514" -> "3512" 
-  "3479" -> "3477" 
-  "3489" -> "3487" 
-  "3499" -> "3497" 
-  "3425" -> "3434" 
+  "3443" -> "3441" 
+  "3446" -> "3450" 
+  "3448" -> "3445" 
+  "3450" -> "3448" 
+  "3454" -> "3470" 
+  "3454" -> "3480" 
+  "3454" -> "3490" 
+  "3454" -> "3500" 
+  "3454" -> "3507" 
+  "3455" -> "3459" 
+  "3459" -> "3461" 
+  "3461" -> "3454" 
+  "3497" -> "3512" 
+  "3457" -> "3455" 
+  "3498" -> "3497" 
+  "3504" -> "3512" 
+  "3468" -> "3475" 
+  "3471" -> "3500" 
+  "3478" -> "3485" 
+  "3481" -> "3500" 
+  "3488" -> "3495" 
+  "3491" -> "3500" 
+  "3500" -> "3498" 
+  "3505" -> "3510" 
+  "3508" -> "3504" 
+  "3470" -> "3468" 
+  "3473" -> "3471" 
+  "3480" -> "3478" 
+  "3483" -> "3481" 
+  "3490" -> "3488" 
+  "3493" -> "3491" 
+  "3507" -> "3505" 
+  "3510" -> "3508" 
+  "3475" -> "3473" 
+  "3485" -> "3483" 
+  "3495" -> "3493" 
+  "3421" -> "3430" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/84-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/84-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/84-cfg.dot	2023-06-07 19:37:50.987374276 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/84-cfg.dot	2023-06-07 19:37:55.487374361 +0330
@@ -1,146 +1,146 @@
 digraph "getSecureStops" {  
-"3522" [label = <(lock,mSecureStopLock.lock())<SUB>761</SUB>> ]
-"3526" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;SecureStop&gt; stops)<SUB>762</SUB>> ]
-"3616" [label = <(unlock,mSecureStopLock.unlock())<SUB>773</SUB>> ]
-"3620" [label = <(_hidl_cb,_hidl_cb(Status::OK, stops))<SUB>775</SUB>> ]
-"3625" [label = <(RETURN,return Void();,return Void();)<SUB>776</SUB>> ]
-"3523" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.lock)<SUB>761</SUB>> ]
-"3527" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;SecureStop)<SUB>762</SUB>> ]
-"3542" [label = <(&lt;operator&gt;.notEquals,itr != mSecureStops.end())<SUB>763</SUB>> ]
-"3548" [label = <(&lt;operator&gt;.preIncrement,++itr)<SUB>763</SUB>> ]
-"3617" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.unlock)<SUB>773</SUB>> ]
-"3621" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>775</SUB>> ]
-"3626" [label = <(Void,Void())<SUB>776</SUB>> ]
-"3525" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>761</SUB>> ]
-"3528" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>762</SUB>> ]
-"3536" [label = <(&lt;operator&gt;.assignment,itr = mSecureStops.begin())<SUB>763</SUB>> ]
-"3544" [label = <(end,mSecureStops.end())<SUB>763</SUB>> ]
-"3552" [label = <(&lt;operator&gt;.assignment,clearkeyStop = itr-&gt;second)<SUB>764</SUB>> ]
-"3557" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; stopVec)<SUB>765</SUB>> ]
-"3564" [label = <(insert,stopVec.insert(stopVec.end(), clearkeyStop.id.begin(), clearkeyStop.id.end()))<SUB>766</SUB>> ]
-"3584" [label = <(insert,stopVec.insert(stopVec.end(), clearkeyStop.data.begin(), clearkeyStop.data.end()))<SUB>767</SUB>> ]
-"3605" [label = <(&lt;operator&gt;.assignment,stop.opaqueData = toHidlVec(stopVec))<SUB>770</SUB>> ]
-"3611" [label = <(push_back,stops.push_back(stop))<SUB>771</SUB>> ]
-"3619" [label = <(FIELD_IDENTIFIER,unlock,unlock)<SUB>773</SUB>> ]
-"3623" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>775</SUB>> ]
-"3530" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>762</SUB>> ]
-"3538" [label = <(begin,mSecureStops.begin())<SUB>763</SUB>> ]
-"3545" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.end)<SUB>763</SUB>> ]
-"3554" [label = <(&lt;operator&gt;.indirectFieldAccess,itr-&gt;second)<SUB>764</SUB>> ]
-"3558" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>765</SUB>> ]
-"3565" [label = <(&lt;operator&gt;.fieldAccess,stopVec.insert)<SUB>766</SUB>> ]
-"3568" [label = <(end,stopVec.end())<SUB>766</SUB>> ]
-"3572" [label = <(begin,clearkeyStop.id.begin())<SUB>766</SUB>> ]
-"3578" [label = <(end,clearkeyStop.id.end())<SUB>766</SUB>> ]
-"3585" [label = <(&lt;operator&gt;.fieldAccess,stopVec.insert)<SUB>767</SUB>> ]
-"3588" [label = <(end,stopVec.end())<SUB>767</SUB>> ]
-"3592" [label = <(begin,clearkeyStop.data.begin())<SUB>767</SUB>> ]
-"3598" [label = <(end,clearkeyStop.data.end())<SUB>767</SUB>> ]
-"3606" [label = <(&lt;operator&gt;.fieldAccess,stop.opaqueData)<SUB>770</SUB>> ]
-"3609" [label = <(toHidlVec,toHidlVec(stopVec))<SUB>770</SUB>> ]
-"3612" [label = <(&lt;operator&gt;.fieldAccess,stops.push_back)<SUB>771</SUB>> ]
-"3539" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.begin)<SUB>763</SUB>> ]
-"3547" [label = <(FIELD_IDENTIFIER,end,end)<SUB>763</SUB>> ]
-"3556" [label = <(FIELD_IDENTIFIER,second,second)<SUB>764</SUB>> ]
-"3559" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>765</SUB>> ]
-"3567" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>766</SUB>> ]
-"3569" [label = <(&lt;operator&gt;.fieldAccess,stopVec.end)<SUB>766</SUB>> ]
-"3573" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id.begin)<SUB>766</SUB>> ]
-"3579" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id.end)<SUB>766</SUB>> ]
-"3587" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>767</SUB>> ]
-"3589" [label = <(&lt;operator&gt;.fieldAccess,stopVec.end)<SUB>767</SUB>> ]
-"3593" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data.begin)<SUB>767</SUB>> ]
-"3599" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data.end)<SUB>767</SUB>> ]
-"3608" [label = <(FIELD_IDENTIFIER,opaqueData,opaqueData)<SUB>770</SUB>> ]
-"3614" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>771</SUB>> ]
-"3541" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>763</SUB>> ]
-"3561" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>765</SUB>> ]
-"3571" [label = <(FIELD_IDENTIFIER,end,end)<SUB>766</SUB>> ]
-"3574" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id)<SUB>766</SUB>> ]
-"3577" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>766</SUB>> ]
-"3580" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id)<SUB>766</SUB>> ]
-"3583" [label = <(FIELD_IDENTIFIER,end,end)<SUB>766</SUB>> ]
-"3591" [label = <(FIELD_IDENTIFIER,end,end)<SUB>767</SUB>> ]
-"3594" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data)<SUB>767</SUB>> ]
-"3597" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>767</SUB>> ]
-"3600" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data)<SUB>767</SUB>> ]
-"3603" [label = <(FIELD_IDENTIFIER,end,end)<SUB>767</SUB>> ]
-"3576" [label = <(FIELD_IDENTIFIER,id,id)<SUB>766</SUB>> ]
-"3582" [label = <(FIELD_IDENTIFIER,id,id)<SUB>766</SUB>> ]
-"3596" [label = <(FIELD_IDENTIFIER,data,data)<SUB>767</SUB>> ]
-"3602" [label = <(FIELD_IDENTIFIER,data,data)<SUB>767</SUB>> ]
-"3519" [label = <(METHOD,getSecureStops)<SUB>760</SUB>> ]
-"3627" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>760</SUB>> ]
-  "3522" -> "3530" 
-  "3526" -> "3541" 
-  "3616" -> "3623" 
-  "3620" -> "3626" 
-  "3625" -> "3627" 
+"3518" [label = <(lock,mSecureStopLock.lock())<SUB>760</SUB>> ]
+"3522" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;SecureStop&gt; stops)<SUB>761</SUB>> ]
+"3612" [label = <(unlock,mSecureStopLock.unlock())<SUB>772</SUB>> ]
+"3616" [label = <(_hidl_cb,_hidl_cb(Status::OK, stops))<SUB>774</SUB>> ]
+"3621" [label = <(RETURN,return Void();,return Void();)<SUB>775</SUB>> ]
+"3519" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.lock)<SUB>760</SUB>> ]
+"3523" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;SecureStop)<SUB>761</SUB>> ]
+"3538" [label = <(&lt;operator&gt;.notEquals,itr != mSecureStops.end())<SUB>762</SUB>> ]
+"3544" [label = <(&lt;operator&gt;.preIncrement,++itr)<SUB>762</SUB>> ]
+"3613" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.unlock)<SUB>772</SUB>> ]
+"3617" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>774</SUB>> ]
+"3622" [label = <(Void,Void())<SUB>775</SUB>> ]
+"3521" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>760</SUB>> ]
+"3524" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>761</SUB>> ]
+"3532" [label = <(&lt;operator&gt;.assignment,itr = mSecureStops.begin())<SUB>762</SUB>> ]
+"3540" [label = <(end,mSecureStops.end())<SUB>762</SUB>> ]
+"3548" [label = <(&lt;operator&gt;.assignment,clearkeyStop = itr-&gt;second)<SUB>763</SUB>> ]
+"3553" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; stopVec)<SUB>764</SUB>> ]
+"3560" [label = <(insert,stopVec.insert(stopVec.end(), clearkeyStop.id.begin(), clearkeyStop.id.end()))<SUB>765</SUB>> ]
+"3580" [label = <(insert,stopVec.insert(stopVec.end(), clearkeyStop.data.begin(), clearkeyStop.data.end()))<SUB>766</SUB>> ]
+"3601" [label = <(&lt;operator&gt;.assignment,stop.opaqueData = toHidlVec(stopVec))<SUB>769</SUB>> ]
+"3607" [label = <(push_back,stops.push_back(stop))<SUB>770</SUB>> ]
+"3615" [label = <(FIELD_IDENTIFIER,unlock,unlock)<SUB>772</SUB>> ]
+"3619" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>774</SUB>> ]
+"3526" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>761</SUB>> ]
+"3534" [label = <(begin,mSecureStops.begin())<SUB>762</SUB>> ]
+"3541" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.end)<SUB>762</SUB>> ]
+"3550" [label = <(&lt;operator&gt;.indirectFieldAccess,itr-&gt;second)<SUB>763</SUB>> ]
+"3554" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>764</SUB>> ]
+"3561" [label = <(&lt;operator&gt;.fieldAccess,stopVec.insert)<SUB>765</SUB>> ]
+"3564" [label = <(end,stopVec.end())<SUB>765</SUB>> ]
+"3568" [label = <(begin,clearkeyStop.id.begin())<SUB>765</SUB>> ]
+"3574" [label = <(end,clearkeyStop.id.end())<SUB>765</SUB>> ]
+"3581" [label = <(&lt;operator&gt;.fieldAccess,stopVec.insert)<SUB>766</SUB>> ]
+"3584" [label = <(end,stopVec.end())<SUB>766</SUB>> ]
+"3588" [label = <(begin,clearkeyStop.data.begin())<SUB>766</SUB>> ]
+"3594" [label = <(end,clearkeyStop.data.end())<SUB>766</SUB>> ]
+"3602" [label = <(&lt;operator&gt;.fieldAccess,stop.opaqueData)<SUB>769</SUB>> ]
+"3605" [label = <(toHidlVec,toHidlVec(stopVec))<SUB>769</SUB>> ]
+"3608" [label = <(&lt;operator&gt;.fieldAccess,stops.push_back)<SUB>770</SUB>> ]
+"3535" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.begin)<SUB>762</SUB>> ]
+"3543" [label = <(FIELD_IDENTIFIER,end,end)<SUB>762</SUB>> ]
+"3552" [label = <(FIELD_IDENTIFIER,second,second)<SUB>763</SUB>> ]
+"3555" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>764</SUB>> ]
+"3563" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>765</SUB>> ]
+"3565" [label = <(&lt;operator&gt;.fieldAccess,stopVec.end)<SUB>765</SUB>> ]
+"3569" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id.begin)<SUB>765</SUB>> ]
+"3575" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id.end)<SUB>765</SUB>> ]
+"3583" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>766</SUB>> ]
+"3585" [label = <(&lt;operator&gt;.fieldAccess,stopVec.end)<SUB>766</SUB>> ]
+"3589" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data.begin)<SUB>766</SUB>> ]
+"3595" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data.end)<SUB>766</SUB>> ]
+"3604" [label = <(FIELD_IDENTIFIER,opaqueData,opaqueData)<SUB>769</SUB>> ]
+"3610" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>770</SUB>> ]
+"3537" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>762</SUB>> ]
+"3557" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>764</SUB>> ]
+"3567" [label = <(FIELD_IDENTIFIER,end,end)<SUB>765</SUB>> ]
+"3570" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id)<SUB>765</SUB>> ]
+"3573" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>765</SUB>> ]
+"3576" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id)<SUB>765</SUB>> ]
+"3579" [label = <(FIELD_IDENTIFIER,end,end)<SUB>765</SUB>> ]
+"3587" [label = <(FIELD_IDENTIFIER,end,end)<SUB>766</SUB>> ]
+"3590" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data)<SUB>766</SUB>> ]
+"3593" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>766</SUB>> ]
+"3596" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data)<SUB>766</SUB>> ]
+"3599" [label = <(FIELD_IDENTIFIER,end,end)<SUB>766</SUB>> ]
+"3572" [label = <(FIELD_IDENTIFIER,id,id)<SUB>765</SUB>> ]
+"3578" [label = <(FIELD_IDENTIFIER,id,id)<SUB>765</SUB>> ]
+"3592" [label = <(FIELD_IDENTIFIER,data,data)<SUB>766</SUB>> ]
+"3598" [label = <(FIELD_IDENTIFIER,data,data)<SUB>766</SUB>> ]
+"3515" [label = <(METHOD,getSecureStops)<SUB>759</SUB>> ]
+"3623" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>759</SUB>> ]
+  "3518" -> "3526" 
+  "3522" -> "3537" 
+  "3612" -> "3619" 
+  "3616" -> "3622" 
+  "3621" -> "3623" 
+  "3519" -> "3518" 
   "3523" -> "3522" 
-  "3527" -> "3526" 
-  "3542" -> "3556" 
-  "3542" -> "3619" 
-  "3548" -> "3547" 
+  "3538" -> "3552" 
+  "3538" -> "3615" 
+  "3544" -> "3543" 
+  "3613" -> "3612" 
   "3617" -> "3616" 
-  "3621" -> "3620" 
-  "3626" -> "3625" 
-  "3525" -> "3523" 
-  "3528" -> "3527" 
-  "3536" -> "3547" 
-  "3544" -> "3542" 
-  "3552" -> "3561" 
-  "3557" -> "3567" 
-  "3564" -> "3587" 
-  "3584" -> "3608" 
-  "3605" -> "3614" 
-  "3611" -> "3548" 
+  "3622" -> "3621" 
+  "3521" -> "3519" 
+  "3524" -> "3523" 
+  "3532" -> "3543" 
+  "3540" -> "3538" 
+  "3548" -> "3557" 
+  "3553" -> "3563" 
+  "3560" -> "3583" 
+  "3580" -> "3604" 
+  "3601" -> "3610" 
+  "3607" -> "3544" 
+  "3615" -> "3613" 
   "3619" -> "3617" 
-  "3623" -> "3621" 
-  "3530" -> "3528" 
-  "3538" -> "3536" 
-  "3545" -> "3544" 
-  "3554" -> "3552" 
-  "3558" -> "3557" 
-  "3565" -> "3571" 
-  "3568" -> "3576" 
-  "3572" -> "3582" 
-  "3578" -> "3564" 
-  "3585" -> "3591" 
-  "3588" -> "3596" 
-  "3592" -> "3602" 
-  "3598" -> "3584" 
-  "3606" -> "3609" 
-  "3609" -> "3605" 
-  "3612" -> "3611" 
-  "3539" -> "3538" 
-  "3547" -> "3545" 
-  "3556" -> "3554" 
-  "3559" -> "3558" 
-  "3567" -> "3565" 
+  "3526" -> "3524" 
+  "3534" -> "3532" 
+  "3541" -> "3540" 
+  "3550" -> "3548" 
+  "3554" -> "3553" 
+  "3561" -> "3567" 
+  "3564" -> "3572" 
+  "3568" -> "3578" 
+  "3574" -> "3560" 
+  "3581" -> "3587" 
+  "3584" -> "3592" 
+  "3588" -> "3598" 
+  "3594" -> "3580" 
+  "3602" -> "3605" 
+  "3605" -> "3601" 
+  "3608" -> "3607" 
+  "3535" -> "3534" 
+  "3543" -> "3541" 
+  "3552" -> "3550" 
+  "3555" -> "3554" 
+  "3563" -> "3561" 
+  "3565" -> "3564" 
   "3569" -> "3568" 
-  "3573" -> "3572" 
-  "3579" -> "3578" 
-  "3587" -> "3585" 
+  "3575" -> "3574" 
+  "3583" -> "3581" 
+  "3585" -> "3584" 
   "3589" -> "3588" 
-  "3593" -> "3592" 
-  "3599" -> "3598" 
-  "3608" -> "3606" 
-  "3614" -> "3612" 
-  "3541" -> "3539" 
-  "3561" -> "3559" 
-  "3571" -> "3569" 
-  "3574" -> "3577" 
-  "3577" -> "3573" 
-  "3580" -> "3583" 
-  "3583" -> "3579" 
-  "3591" -> "3589" 
-  "3594" -> "3597" 
-  "3597" -> "3593" 
-  "3600" -> "3603" 
-  "3603" -> "3599" 
-  "3576" -> "3574" 
-  "3582" -> "3580" 
-  "3596" -> "3594" 
-  "3602" -> "3600" 
-  "3519" -> "3525" 
+  "3595" -> "3594" 
+  "3604" -> "3602" 
+  "3610" -> "3608" 
+  "3537" -> "3535" 
+  "3557" -> "3555" 
+  "3567" -> "3565" 
+  "3570" -> "3573" 
+  "3573" -> "3569" 
+  "3576" -> "3579" 
+  "3579" -> "3575" 
+  "3587" -> "3585" 
+  "3590" -> "3593" 
+  "3593" -> "3589" 
+  "3596" -> "3599" 
+  "3599" -> "3595" 
+  "3572" -> "3570" 
+  "3578" -> "3576" 
+  "3592" -> "3590" 
+  "3598" -> "3596" 
+  "3515" -> "3521" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/85-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/85-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/85-cfg.dot	2023-06-07 19:37:50.987374276 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/85-cfg.dot	2023-06-07 19:37:55.497374362 +0330
@@ -1,147 +1,147 @@
 digraph "getSecureStop" {  
-"3633" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; stopVec)<SUB>781</SUB>> ]
-"3640" [label = <(lock,mSecureStopLock.lock())<SUB>783</SUB>> ]
-"3645" [label = <(&lt;operator&gt;.assignment,itr = mSecureStops.find(toVector(secureStopId)))<SUB>784</SUB>> ]
-"3707" [label = <(unlock,mSecureStopLock.unlock())<SUB>790</SUB>> ]
-"3737" [label = <(RETURN,return Void();,return Void();)<SUB>799</SUB>> ]
-"3634" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>781</SUB>> ]
-"3641" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.lock)<SUB>783</SUB>> ]
-"3647" [label = <(find,mSecureStops.find(toVector(secureStopId)))<SUB>784</SUB>> ]
-"3654" [label = <(&lt;operator&gt;.notEquals,itr != mSecureStops.end())<SUB>785</SUB>> ]
-"3708" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.unlock)<SUB>790</SUB>> ]
-"3713" [label = <(&lt;operator&gt;.logicalNot,!stopVec.empty())<SUB>793</SUB>> ]
-"3738" [label = <(Void,Void())<SUB>799</SUB>> ]
-"3635" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>781</SUB>> ]
-"3643" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>783</SUB>> ]
-"3648" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.find)<SUB>784</SUB>> ]
-"3651" [label = <(toVector,toVector(secureStopId))<SUB>784</SUB>> ]
-"3656" [label = <(end,mSecureStops.end())<SUB>785</SUB>> ]
-"3662" [label = <(&lt;operator&gt;.assignment,clearkeyStop = itr-&gt;second)<SUB>786</SUB>> ]
-"3667" [label = <(insert,stopVec.insert(stopVec.end(), clearkeyStop.id.begin(), clearkeyStop.id.end()))<SUB>787</SUB>> ]
-"3687" [label = <(insert,stopVec.insert(stopVec.end(), clearkeyStop.data.begin(), clearkeyStop.data.end()))<SUB>788</SUB>> ]
-"3710" [label = <(FIELD_IDENTIFIER,unlock,unlock)<SUB>790</SUB>> ]
-"3714" [label = <(empty,stopVec.empty())<SUB>793</SUB>> ]
-"3719" [label = <(&lt;operator&gt;.assignment,stop.opaqueData = toHidlVec(stopVec))<SUB>794</SUB>> ]
-"3725" [label = <(_hidl_cb,_hidl_cb(Status::OK, stop))<SUB>795</SUB>> ]
-"3637" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>781</SUB>> ]
-"3650" [label = <(FIELD_IDENTIFIER,find,find)<SUB>784</SUB>> ]
-"3657" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.end)<SUB>785</SUB>> ]
-"3664" [label = <(&lt;operator&gt;.indirectFieldAccess,itr-&gt;second)<SUB>786</SUB>> ]
-"3668" [label = <(&lt;operator&gt;.fieldAccess,stopVec.insert)<SUB>787</SUB>> ]
-"3671" [label = <(end,stopVec.end())<SUB>787</SUB>> ]
-"3675" [label = <(begin,clearkeyStop.id.begin())<SUB>787</SUB>> ]
-"3681" [label = <(end,clearkeyStop.id.end())<SUB>787</SUB>> ]
-"3688" [label = <(&lt;operator&gt;.fieldAccess,stopVec.insert)<SUB>788</SUB>> ]
-"3691" [label = <(end,stopVec.end())<SUB>788</SUB>> ]
-"3695" [label = <(begin,clearkeyStop.data.begin())<SUB>788</SUB>> ]
-"3701" [label = <(end,clearkeyStop.data.end())<SUB>788</SUB>> ]
-"3715" [label = <(&lt;operator&gt;.fieldAccess,stopVec.empty)<SUB>793</SUB>> ]
-"3720" [label = <(&lt;operator&gt;.fieldAccess,stop.opaqueData)<SUB>794</SUB>> ]
-"3723" [label = <(toHidlVec,toHidlVec(stopVec))<SUB>794</SUB>> ]
-"3726" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>795</SUB>> ]
-"3732" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, stop))<SUB>797</SUB>> ]
-"3659" [label = <(FIELD_IDENTIFIER,end,end)<SUB>785</SUB>> ]
-"3666" [label = <(FIELD_IDENTIFIER,second,second)<SUB>786</SUB>> ]
-"3670" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>787</SUB>> ]
-"3672" [label = <(&lt;operator&gt;.fieldAccess,stopVec.end)<SUB>787</SUB>> ]
-"3676" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id.begin)<SUB>787</SUB>> ]
-"3682" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id.end)<SUB>787</SUB>> ]
-"3690" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>788</SUB>> ]
-"3692" [label = <(&lt;operator&gt;.fieldAccess,stopVec.end)<SUB>788</SUB>> ]
-"3696" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data.begin)<SUB>788</SUB>> ]
-"3702" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data.end)<SUB>788</SUB>> ]
-"3717" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>793</SUB>> ]
-"3722" [label = <(FIELD_IDENTIFIER,opaqueData,opaqueData)<SUB>794</SUB>> ]
-"3728" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>795</SUB>> ]
-"3733" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>797</SUB>> ]
-"3674" [label = <(FIELD_IDENTIFIER,end,end)<SUB>787</SUB>> ]
-"3677" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id)<SUB>787</SUB>> ]
-"3680" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>787</SUB>> ]
-"3683" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id)<SUB>787</SUB>> ]
-"3686" [label = <(FIELD_IDENTIFIER,end,end)<SUB>787</SUB>> ]
-"3694" [label = <(FIELD_IDENTIFIER,end,end)<SUB>788</SUB>> ]
-"3697" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data)<SUB>788</SUB>> ]
-"3700" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>788</SUB>> ]
-"3703" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data)<SUB>788</SUB>> ]
-"3706" [label = <(FIELD_IDENTIFIER,end,end)<SUB>788</SUB>> ]
-"3735" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>797</SUB>> ]
-"3679" [label = <(FIELD_IDENTIFIER,id,id)<SUB>787</SUB>> ]
-"3685" [label = <(FIELD_IDENTIFIER,id,id)<SUB>787</SUB>> ]
-"3699" [label = <(FIELD_IDENTIFIER,data,data)<SUB>788</SUB>> ]
-"3705" [label = <(FIELD_IDENTIFIER,data,data)<SUB>788</SUB>> ]
-"3629" [label = <(METHOD,getSecureStop)<SUB>779</SUB>> ]
-"3739" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>779</SUB>> ]
-  "3633" -> "3643" 
-  "3640" -> "3650" 
-  "3645" -> "3659" 
-  "3707" -> "3717" 
-  "3737" -> "3739" 
-  "3634" -> "3633" 
-  "3641" -> "3640" 
-  "3647" -> "3645" 
-  "3654" -> "3666" 
-  "3654" -> "3710" 
-  "3708" -> "3707" 
-  "3713" -> "3722" 
-  "3713" -> "3735" 
-  "3738" -> "3737" 
-  "3635" -> "3634" 
+"3629" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; stopVec)<SUB>780</SUB>> ]
+"3636" [label = <(lock,mSecureStopLock.lock())<SUB>782</SUB>> ]
+"3641" [label = <(&lt;operator&gt;.assignment,itr = mSecureStops.find(toVector(secureStopId)))<SUB>783</SUB>> ]
+"3703" [label = <(unlock,mSecureStopLock.unlock())<SUB>789</SUB>> ]
+"3733" [label = <(RETURN,return Void();,return Void();)<SUB>798</SUB>> ]
+"3630" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>780</SUB>> ]
+"3637" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.lock)<SUB>782</SUB>> ]
+"3643" [label = <(find,mSecureStops.find(toVector(secureStopId)))<SUB>783</SUB>> ]
+"3650" [label = <(&lt;operator&gt;.notEquals,itr != mSecureStops.end())<SUB>784</SUB>> ]
+"3704" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.unlock)<SUB>789</SUB>> ]
+"3709" [label = <(&lt;operator&gt;.logicalNot,!stopVec.empty())<SUB>792</SUB>> ]
+"3734" [label = <(Void,Void())<SUB>798</SUB>> ]
+"3631" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>780</SUB>> ]
+"3639" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>782</SUB>> ]
+"3644" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.find)<SUB>783</SUB>> ]
+"3647" [label = <(toVector,toVector(secureStopId))<SUB>783</SUB>> ]
+"3652" [label = <(end,mSecureStops.end())<SUB>784</SUB>> ]
+"3658" [label = <(&lt;operator&gt;.assignment,clearkeyStop = itr-&gt;second)<SUB>785</SUB>> ]
+"3663" [label = <(insert,stopVec.insert(stopVec.end(), clearkeyStop.id.begin(), clearkeyStop.id.end()))<SUB>786</SUB>> ]
+"3683" [label = <(insert,stopVec.insert(stopVec.end(), clearkeyStop.data.begin(), clearkeyStop.data.end()))<SUB>787</SUB>> ]
+"3706" [label = <(FIELD_IDENTIFIER,unlock,unlock)<SUB>789</SUB>> ]
+"3710" [label = <(empty,stopVec.empty())<SUB>792</SUB>> ]
+"3715" [label = <(&lt;operator&gt;.assignment,stop.opaqueData = toHidlVec(stopVec))<SUB>793</SUB>> ]
+"3721" [label = <(_hidl_cb,_hidl_cb(Status::OK, stop))<SUB>794</SUB>> ]
+"3633" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>780</SUB>> ]
+"3646" [label = <(FIELD_IDENTIFIER,find,find)<SUB>783</SUB>> ]
+"3653" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.end)<SUB>784</SUB>> ]
+"3660" [label = <(&lt;operator&gt;.indirectFieldAccess,itr-&gt;second)<SUB>785</SUB>> ]
+"3664" [label = <(&lt;operator&gt;.fieldAccess,stopVec.insert)<SUB>786</SUB>> ]
+"3667" [label = <(end,stopVec.end())<SUB>786</SUB>> ]
+"3671" [label = <(begin,clearkeyStop.id.begin())<SUB>786</SUB>> ]
+"3677" [label = <(end,clearkeyStop.id.end())<SUB>786</SUB>> ]
+"3684" [label = <(&lt;operator&gt;.fieldAccess,stopVec.insert)<SUB>787</SUB>> ]
+"3687" [label = <(end,stopVec.end())<SUB>787</SUB>> ]
+"3691" [label = <(begin,clearkeyStop.data.begin())<SUB>787</SUB>> ]
+"3697" [label = <(end,clearkeyStop.data.end())<SUB>787</SUB>> ]
+"3711" [label = <(&lt;operator&gt;.fieldAccess,stopVec.empty)<SUB>792</SUB>> ]
+"3716" [label = <(&lt;operator&gt;.fieldAccess,stop.opaqueData)<SUB>793</SUB>> ]
+"3719" [label = <(toHidlVec,toHidlVec(stopVec))<SUB>793</SUB>> ]
+"3722" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>794</SUB>> ]
+"3728" [label = <(_hidl_cb,_hidl_cb(Status::BAD_VALUE, stop))<SUB>796</SUB>> ]
+"3655" [label = <(FIELD_IDENTIFIER,end,end)<SUB>784</SUB>> ]
+"3662" [label = <(FIELD_IDENTIFIER,second,second)<SUB>785</SUB>> ]
+"3666" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>786</SUB>> ]
+"3668" [label = <(&lt;operator&gt;.fieldAccess,stopVec.end)<SUB>786</SUB>> ]
+"3672" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id.begin)<SUB>786</SUB>> ]
+"3678" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id.end)<SUB>786</SUB>> ]
+"3686" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>787</SUB>> ]
+"3688" [label = <(&lt;operator&gt;.fieldAccess,stopVec.end)<SUB>787</SUB>> ]
+"3692" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data.begin)<SUB>787</SUB>> ]
+"3698" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data.end)<SUB>787</SUB>> ]
+"3713" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>792</SUB>> ]
+"3718" [label = <(FIELD_IDENTIFIER,opaqueData,opaqueData)<SUB>793</SUB>> ]
+"3724" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>794</SUB>> ]
+"3729" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>796</SUB>> ]
+"3670" [label = <(FIELD_IDENTIFIER,end,end)<SUB>786</SUB>> ]
+"3673" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id)<SUB>786</SUB>> ]
+"3676" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>786</SUB>> ]
+"3679" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.id)<SUB>786</SUB>> ]
+"3682" [label = <(FIELD_IDENTIFIER,end,end)<SUB>786</SUB>> ]
+"3690" [label = <(FIELD_IDENTIFIER,end,end)<SUB>787</SUB>> ]
+"3693" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data)<SUB>787</SUB>> ]
+"3696" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>787</SUB>> ]
+"3699" [label = <(&lt;operator&gt;.fieldAccess,clearkeyStop.data)<SUB>787</SUB>> ]
+"3702" [label = <(FIELD_IDENTIFIER,end,end)<SUB>787</SUB>> ]
+"3731" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>796</SUB>> ]
+"3675" [label = <(FIELD_IDENTIFIER,id,id)<SUB>786</SUB>> ]
+"3681" [label = <(FIELD_IDENTIFIER,id,id)<SUB>786</SUB>> ]
+"3695" [label = <(FIELD_IDENTIFIER,data,data)<SUB>787</SUB>> ]
+"3701" [label = <(FIELD_IDENTIFIER,data,data)<SUB>787</SUB>> ]
+"3625" [label = <(METHOD,getSecureStop)<SUB>778</SUB>> ]
+"3735" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>778</SUB>> ]
+  "3629" -> "3639" 
+  "3636" -> "3646" 
+  "3641" -> "3655" 
+  "3703" -> "3713" 
+  "3733" -> "3735" 
+  "3630" -> "3629" 
+  "3637" -> "3636" 
   "3643" -> "3641" 
-  "3648" -> "3651" 
-  "3651" -> "3647" 
-  "3656" -> "3654" 
-  "3662" -> "3670" 
-  "3667" -> "3690" 
-  "3687" -> "3710" 
-  "3710" -> "3708" 
-  "3714" -> "3713" 
-  "3719" -> "3728" 
-  "3725" -> "3738" 
-  "3637" -> "3635" 
-  "3650" -> "3648" 
-  "3657" -> "3656" 
-  "3664" -> "3662" 
-  "3668" -> "3674" 
-  "3671" -> "3679" 
-  "3675" -> "3685" 
-  "3681" -> "3667" 
-  "3688" -> "3694" 
-  "3691" -> "3699" 
-  "3695" -> "3705" 
-  "3701" -> "3687" 
-  "3715" -> "3714" 
-  "3720" -> "3723" 
-  "3723" -> "3719" 
-  "3726" -> "3725" 
-  "3732" -> "3738" 
-  "3659" -> "3657" 
+  "3650" -> "3662" 
+  "3650" -> "3706" 
+  "3704" -> "3703" 
+  "3709" -> "3718" 
+  "3709" -> "3731" 
+  "3734" -> "3733" 
+  "3631" -> "3630" 
+  "3639" -> "3637" 
+  "3644" -> "3647" 
+  "3647" -> "3643" 
+  "3652" -> "3650" 
+  "3658" -> "3666" 
+  "3663" -> "3686" 
+  "3683" -> "3706" 
+  "3706" -> "3704" 
+  "3710" -> "3709" 
+  "3715" -> "3724" 
+  "3721" -> "3734" 
+  "3633" -> "3631" 
+  "3646" -> "3644" 
+  "3653" -> "3652" 
+  "3660" -> "3658" 
+  "3664" -> "3670" 
+  "3667" -> "3675" 
+  "3671" -> "3681" 
+  "3677" -> "3663" 
+  "3684" -> "3690" 
+  "3687" -> "3695" 
+  "3691" -> "3701" 
+  "3697" -> "3683" 
+  "3711" -> "3710" 
+  "3716" -> "3719" 
+  "3719" -> "3715" 
+  "3722" -> "3721" 
+  "3728" -> "3734" 
+  "3655" -> "3653" 
+  "3662" -> "3660" 
   "3666" -> "3664" 
-  "3670" -> "3668" 
+  "3668" -> "3667" 
   "3672" -> "3671" 
-  "3676" -> "3675" 
-  "3682" -> "3681" 
-  "3690" -> "3688" 
+  "3678" -> "3677" 
+  "3686" -> "3684" 
+  "3688" -> "3687" 
   "3692" -> "3691" 
-  "3696" -> "3695" 
-  "3702" -> "3701" 
-  "3717" -> "3715" 
-  "3722" -> "3720" 
-  "3728" -> "3726" 
-  "3733" -> "3732" 
-  "3674" -> "3672" 
-  "3677" -> "3680" 
-  "3680" -> "3676" 
-  "3683" -> "3686" 
-  "3686" -> "3682" 
-  "3694" -> "3692" 
-  "3697" -> "3700" 
-  "3700" -> "3696" 
-  "3703" -> "3706" 
-  "3706" -> "3702" 
-  "3735" -> "3733" 
-  "3679" -> "3677" 
-  "3685" -> "3683" 
-  "3699" -> "3697" 
-  "3705" -> "3703" 
-  "3629" -> "3637" 
+  "3698" -> "3697" 
+  "3713" -> "3711" 
+  "3718" -> "3716" 
+  "3724" -> "3722" 
+  "3729" -> "3728" 
+  "3670" -> "3668" 
+  "3673" -> "3676" 
+  "3676" -> "3672" 
+  "3679" -> "3682" 
+  "3682" -> "3678" 
+  "3690" -> "3688" 
+  "3693" -> "3696" 
+  "3696" -> "3692" 
+  "3699" -> "3702" 
+  "3702" -> "3698" 
+  "3731" -> "3729" 
+  "3675" -> "3673" 
+  "3681" -> "3679" 
+  "3695" -> "3693" 
+  "3701" -> "3699" 
+  "3625" -> "3633" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/86-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/86-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/86-cfg.dot	2023-06-07 19:37:50.987374276 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/86-cfg.dot	2023-06-07 19:37:55.497374362 +0330
@@ -1,9 +1,9 @@
 digraph "releaseSecureStop" {  
-"3744" [label = <(RETURN,return removeSecureStop(secureStopId);,return removeSecureStop(secureStopId);)<SUB>803</SUB>> ]
-"3745" [label = <(removeSecureStop,removeSecureStop(secureStopId))<SUB>803</SUB>> ]
-"3741" [label = <(METHOD,releaseSecureStop)<SUB>802</SUB>> ]
-"3747" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>802</SUB>> ]
-  "3744" -> "3747" 
-  "3745" -> "3744" 
-  "3741" -> "3745" 
+"3740" [label = <(RETURN,return removeSecureStop(secureStopId);,return removeSecureStop(secureStopId);)<SUB>802</SUB>> ]
+"3741" [label = <(removeSecureStop,removeSecureStop(secureStopId))<SUB>802</SUB>> ]
+"3737" [label = <(METHOD,releaseSecureStop)<SUB>801</SUB>> ]
+"3743" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>801</SUB>> ]
+  "3740" -> "3743" 
+  "3741" -> "3740" 
+  "3737" -> "3741" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/87-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/87-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/87-cfg.dot	2023-06-07 19:37:50.987374276 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/87-cfg.dot	2023-06-07 19:37:55.497374362 +0330
@@ -1,9 +1,9 @@
 digraph "releaseAllSecureStops" {  
-"3751" [label = <(RETURN,return removeAllSecureStops();,return removeAllSecureStops();)<SUB>807</SUB>> ]
-"3752" [label = <(removeAllSecureStops,removeAllSecureStops())<SUB>807</SUB>> ]
-"3749" [label = <(METHOD,releaseAllSecureStops)<SUB>806</SUB>> ]
-"3753" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>806</SUB>> ]
-  "3751" -> "3753" 
-  "3752" -> "3751" 
-  "3749" -> "3752" 
+"3747" [label = <(RETURN,return removeAllSecureStops();,return removeAllSecureStops();)<SUB>806</SUB>> ]
+"3748" [label = <(removeAllSecureStops,removeAllSecureStops())<SUB>806</SUB>> ]
+"3745" [label = <(METHOD,releaseAllSecureStops)<SUB>805</SUB>> ]
+"3749" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>805</SUB>> ]
+  "3747" -> "3749" 
+  "3748" -> "3747" 
+  "3745" -> "3748" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/88-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/88-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/88-cfg.dot	2023-06-07 19:37:50.987374276 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/88-cfg.dot	2023-06-07 19:37:55.497374362 +0330
@@ -1,66 +1,66 @@
 digraph "getSecureStopIds" {  
-"3758" [label = <(lock,mSecureStopLock.lock())<SUB>811</SUB>> ]
-"3762" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;SecureStopId&gt; ids)<SUB>812</SUB>> ]
-"3794" [label = <(unlock,mSecureStopLock.unlock())<SUB>816</SUB>> ]
-"3798" [label = <(_hidl_cb,_hidl_cb(Status::OK, toHidlVec(ids)))<SUB>818</SUB>> ]
-"3804" [label = <(RETURN,return Void();,return Void();)<SUB>819</SUB>> ]
-"3759" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.lock)<SUB>811</SUB>> ]
-"3763" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;SecureStopId)<SUB>812</SUB>> ]
-"3778" [label = <(&lt;operator&gt;.notEquals,itr != mSecureStops.end())<SUB>813</SUB>> ]
-"3784" [label = <(&lt;operator&gt;.preIncrement,++itr)<SUB>813</SUB>> ]
-"3795" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.unlock)<SUB>816</SUB>> ]
-"3799" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>818</SUB>> ]
-"3802" [label = <(toHidlVec,toHidlVec(ids))<SUB>818</SUB>> ]
-"3805" [label = <(Void,Void())<SUB>819</SUB>> ]
-"3761" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>811</SUB>> ]
-"3764" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>812</SUB>> ]
-"3772" [label = <(&lt;operator&gt;.assignment,itr = mSecureStops.begin())<SUB>813</SUB>> ]
-"3780" [label = <(end,mSecureStops.end())<SUB>813</SUB>> ]
-"3787" [label = <(push_back,ids.push_back(itr-&gt;first))<SUB>814</SUB>> ]
-"3797" [label = <(FIELD_IDENTIFIER,unlock,unlock)<SUB>816</SUB>> ]
-"3801" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>818</SUB>> ]
-"3766" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>812</SUB>> ]
-"3774" [label = <(begin,mSecureStops.begin())<SUB>813</SUB>> ]
-"3781" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.end)<SUB>813</SUB>> ]
-"3788" [label = <(&lt;operator&gt;.fieldAccess,ids.push_back)<SUB>814</SUB>> ]
-"3791" [label = <(&lt;operator&gt;.indirectFieldAccess,itr-&gt;first)<SUB>814</SUB>> ]
-"3775" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.begin)<SUB>813</SUB>> ]
-"3783" [label = <(FIELD_IDENTIFIER,end,end)<SUB>813</SUB>> ]
-"3790" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>814</SUB>> ]
-"3793" [label = <(FIELD_IDENTIFIER,first,first)<SUB>814</SUB>> ]
-"3777" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>813</SUB>> ]
-"3755" [label = <(METHOD,getSecureStopIds)<SUB>810</SUB>> ]
-"3806" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>810</SUB>> ]
-  "3758" -> "3766" 
-  "3762" -> "3777" 
+"3754" [label = <(lock,mSecureStopLock.lock())<SUB>810</SUB>> ]
+"3758" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;SecureStopId&gt; ids)<SUB>811</SUB>> ]
+"3790" [label = <(unlock,mSecureStopLock.unlock())<SUB>815</SUB>> ]
+"3794" [label = <(_hidl_cb,_hidl_cb(Status::OK, toHidlVec(ids)))<SUB>817</SUB>> ]
+"3800" [label = <(RETURN,return Void();,return Void();)<SUB>818</SUB>> ]
+"3755" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.lock)<SUB>810</SUB>> ]
+"3759" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;SecureStopId)<SUB>811</SUB>> ]
+"3774" [label = <(&lt;operator&gt;.notEquals,itr != mSecureStops.end())<SUB>812</SUB>> ]
+"3780" [label = <(&lt;operator&gt;.preIncrement,++itr)<SUB>812</SUB>> ]
+"3791" [label = <(&lt;operator&gt;.fieldAccess,mSecureStopLock.unlock)<SUB>815</SUB>> ]
+"3795" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>817</SUB>> ]
+"3798" [label = <(toHidlVec,toHidlVec(ids))<SUB>817</SUB>> ]
+"3801" [label = <(Void,Void())<SUB>818</SUB>> ]
+"3757" [label = <(FIELD_IDENTIFIER,lock,lock)<SUB>810</SUB>> ]
+"3760" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>811</SUB>> ]
+"3768" [label = <(&lt;operator&gt;.assignment,itr = mSecureStops.begin())<SUB>812</SUB>> ]
+"3776" [label = <(end,mSecureStops.end())<SUB>812</SUB>> ]
+"3783" [label = <(push_back,ids.push_back(itr-&gt;first))<SUB>813</SUB>> ]
+"3793" [label = <(FIELD_IDENTIFIER,unlock,unlock)<SUB>815</SUB>> ]
+"3797" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>817</SUB>> ]
+"3762" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>811</SUB>> ]
+"3770" [label = <(begin,mSecureStops.begin())<SUB>812</SUB>> ]
+"3777" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.end)<SUB>812</SUB>> ]
+"3784" [label = <(&lt;operator&gt;.fieldAccess,ids.push_back)<SUB>813</SUB>> ]
+"3787" [label = <(&lt;operator&gt;.indirectFieldAccess,itr-&gt;first)<SUB>813</SUB>> ]
+"3771" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.begin)<SUB>812</SUB>> ]
+"3779" [label = <(FIELD_IDENTIFIER,end,end)<SUB>812</SUB>> ]
+"3786" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>813</SUB>> ]
+"3789" [label = <(FIELD_IDENTIFIER,first,first)<SUB>813</SUB>> ]
+"3773" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>812</SUB>> ]
+"3751" [label = <(METHOD,getSecureStopIds)<SUB>809</SUB>> ]
+"3802" [label = <(METHOD_RETURN,Return&lt;void&gt;)<SUB>809</SUB>> ]
+  "3754" -> "3762" 
+  "3758" -> "3773" 
+  "3790" -> "3797" 
   "3794" -> "3801" 
-  "3798" -> "3805" 
-  "3804" -> "3806" 
+  "3800" -> "3802" 
+  "3755" -> "3754" 
   "3759" -> "3758" 
-  "3763" -> "3762" 
-  "3778" -> "3790" 
-  "3778" -> "3797" 
-  "3784" -> "3783" 
-  "3795" -> "3794" 
-  "3799" -> "3802" 
-  "3802" -> "3798" 
-  "3805" -> "3804" 
-  "3761" -> "3759" 
-  "3764" -> "3763" 
-  "3772" -> "3783" 
-  "3780" -> "3778" 
-  "3787" -> "3784" 
-  "3797" -> "3795" 
-  "3801" -> "3799" 
-  "3766" -> "3764" 
-  "3774" -> "3772" 
-  "3781" -> "3780" 
-  "3788" -> "3793" 
-  "3791" -> "3787" 
-  "3775" -> "3774" 
-  "3783" -> "3781" 
-  "3790" -> "3788" 
+  "3774" -> "3786" 
+  "3774" -> "3793" 
+  "3780" -> "3779" 
+  "3791" -> "3790" 
+  "3795" -> "3798" 
+  "3798" -> "3794" 
+  "3801" -> "3800" 
+  "3757" -> "3755" 
+  "3760" -> "3759" 
+  "3768" -> "3779" 
+  "3776" -> "3774" 
+  "3783" -> "3780" 
   "3793" -> "3791" 
-  "3777" -> "3775" 
-  "3755" -> "3761" 
+  "3797" -> "3795" 
+  "3762" -> "3760" 
+  "3770" -> "3768" 
+  "3777" -> "3776" 
+  "3784" -> "3789" 
+  "3787" -> "3783" 
+  "3771" -> "3770" 
+  "3779" -> "3777" 
+  "3786" -> "3784" 
+  "3789" -> "3787" 
+  "3773" -> "3771" 
+  "3751" -> "3757" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/89-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/89-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/89-cfg.dot	2023-06-07 19:37:50.987374276 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/89-cfg.dot	2023-06-07 19:37:55.497374362 +0330
@@ -1,184 +1,184 @@
 digraph "releaseSecureStops" {  
-"3812" [label = <(&lt;operator&gt;.assignment,kFourBytesOffset = 4)<SUB>824</SUB>> ]
-"3832" [label = <(&lt;operator&gt;.assignment,status = Status::OK)<SUB>830</SUB>> ]
-"3837" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; input = toVector(ssRelease.opaqueData))<SUB>831</SUB>> ]
-"3866" [label = <(&lt;operator&gt;.assignment,countBufferSize = sizeof(uint32_t))<SUB>844</SUB>> ]
-"3886" [label = <(&lt;operator&gt;.assignment,count = 0)<SUB>850</SUB>> ]
-"3889" [label = <(UNKNOWN,sscanf(reinterpret_cast&lt;char*&gt;(input.data()), &quot;%04&quot; PRIu32, &amp;count);,sscanf(reinterpret_cast&lt;char*&gt;(input.data()), &quot;%04&quot; PRIu32, &amp;count);)<SUB>851</SUB>> ]
-"3902" [label = <(&lt;operator&gt;.assignment,secureStopSize = (input.size() - kFourBytesOffset) / count)<SUB>860</SUB>> ]
-"3924" [label = <(&lt;operator&gt;.assignment,* buffer = new uint8_t[secureStopSize])<SUB>866</SUB>> ]
-"3929" [label = <(&lt;operator&gt;.assignment,offset = kFourBytesOffset)<SUB>867</SUB>> ]
-"3981" [label = <(&lt;operator&gt;.delete,delete[] buffer)<SUB>877</SUB>> ]
-"3983" [label = <(RETURN,return status;,return status;)<SUB>878</SUB>> ]
-"3816" [label = <(&lt;operator&gt;.lessThan,ssRelease.opaqueData.size() &lt; kFourBytesOffset)<SUB>825</SUB>> ]
-"3834" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>830</SUB>> ]
-"3838" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; input)<SUB>831</SUB>> ]
-"3845" [label = <(toVector,toVector(ssRelease.opaqueData))<SUB>831</SUB>> ]
-"3850" [label = <(&lt;operator&gt;.lessThan,input.size() &lt; kSecureStopIdSize + kFourBytesOffset)<SUB>833</SUB>> ]
-"3868" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint32_t))<SUB>844</SUB>> ]
-"3871" [label = <(&lt;operator&gt;.lessThan,input.size() &lt; countBufferSize)<SUB>845</SUB>> ]
-"3891" [label = <(&lt;operator&gt;.equals,count == 0)<SUB>854</SUB>> ]
-"3904" [label = <(&lt;operator&gt;.division,(input.size() - kFourBytesOffset) / count)<SUB>860</SUB>> ]
-"3913" [label = <(&lt;operator&gt;.lessThan,secureStopSize &lt; kSecureStopIdSize)<SUB>861</SUB>> ]
-"3926" [label = <(&lt;operator&gt;.new,new uint8_t[secureStopSize])<SUB>866</SUB>> ]
-"3938" [label = <(&lt;operator&gt;.lessThan,i &lt; count)<SUB>868</SUB>> ]
-"3941" [label = <(&lt;operator&gt;.expressionList,++i, offset += secureStopSize)<SUB>868</SUB>> ]
-"3817" [label = <(size,ssRelease.opaqueData.size())<SUB>825</SUB>> ]
-"3825" [label = <(ALOGE,ALOGE(&quot;Invalid secureStopRelease length&quot;))<SUB>826</SUB>> ]
-"3827" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>827</SUB>> ]
-"3836" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>830</SUB>> ]
-"3839" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>831</SUB>> ]
-"3846" [label = <(&lt;operator&gt;.fieldAccess,ssRelease.opaqueData)<SUB>831</SUB>> ]
-"3851" [label = <(size,input.size())<SUB>833</SUB>> ]
-"3855" [label = <(&lt;operator&gt;.addition,kSecureStopIdSize + kFourBytesOffset)<SUB>833</SUB>> ]
-"3859" [label = <(ALOGE,ALOGE(&quot;Total size of secureStops is too short&quot;))<SUB>836</SUB>> ]
-"3861" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>837</SUB>> ]
-"3872" [label = <(size,input.size())<SUB>845</SUB>> ]
-"3878" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;144766455&quot;))<SUB>847</SUB>> ]
-"3881" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>848</SUB>> ]
-"3895" [label = <(ALOGE,ALOGE(&quot;Invalid 0 secureStop count&quot;))<SUB>855</SUB>> ]
-"3897" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>856</SUB>> ]
-"3905" [label = <(&lt;operator&gt;.subtraction,input.size() - kFourBytesOffset)<SUB>860</SUB>> ]
-"3917" [label = <(ALOGE,ALOGE(&quot;Invalid secureStop size&quot;))<SUB>863</SUB>> ]
-"3919" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>864</SUB>> ]
-"3935" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>868</SUB>> ]
-"3942" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>868</SUB>> ]
-"3944" [label = <(&lt;operator&gt;.assignmentPlus,offset += secureStopSize)<SUB>868</SUB>> ]
-"3948" [label = <(memcpy,memcpy(buffer, input.data() + offset, secureStopSize))<SUB>869</SUB>> ]
-"3957" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; id(buffer, buffer + kSecureStopIdSize))<SUB>872</SUB>> ]
-"3968" [label = <(&lt;operator&gt;.assignment,status = removeSecureStop(toHidlVec(id)))<SUB>873</SUB>> ]
-"3818" [label = <(&lt;operator&gt;.fieldAccess,ssRelease.opaqueData.size)<SUB>825</SUB>> ]
-"3828" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>827</SUB>> ]
-"3840" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>831</SUB>> ]
-"3848" [label = <(FIELD_IDENTIFIER,opaqueData,opaqueData)<SUB>831</SUB>> ]
-"3852" [label = <(&lt;operator&gt;.fieldAccess,input.size)<SUB>833</SUB>> ]
-"3862" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>837</SUB>> ]
-"3873" [label = <(&lt;operator&gt;.fieldAccess,input.size)<SUB>845</SUB>> ]
-"3882" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>848</SUB>> ]
-"3898" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>856</SUB>> ]
-"3906" [label = <(size,input.size())<SUB>860</SUB>> ]
-"3920" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>864</SUB>> ]
-"3950" [label = <(&lt;operator&gt;.addition,input.data() + offset)<SUB>869</SUB>> ]
-"3958" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>872</SUB>> ]
-"3963" [label = <(id,id(buffer, buffer + kSecureStopIdSize))<SUB>872</SUB>> ]
-"3970" [label = <(removeSecureStop,removeSecureStop(toHidlVec(id)))<SUB>873</SUB>> ]
-"3974" [label = <(&lt;operator&gt;.notEquals,Status::OK != status)<SUB>874</SUB>> ]
-"3819" [label = <(&lt;operator&gt;.fieldAccess,ssRelease.opaqueData)<SUB>825</SUB>> ]
-"3822" [label = <(FIELD_IDENTIFIER,size,size)<SUB>825</SUB>> ]
-"3830" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>827</SUB>> ]
-"3842" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>831</SUB>> ]
-"3854" [label = <(FIELD_IDENTIFIER,size,size)<SUB>833</SUB>> ]
-"3864" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>837</SUB>> ]
-"3875" [label = <(FIELD_IDENTIFIER,size,size)<SUB>845</SUB>> ]
-"3884" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>848</SUB>> ]
-"3900" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>856</SUB>> ]
-"3907" [label = <(&lt;operator&gt;.fieldAccess,input.size)<SUB>860</SUB>> ]
-"3922" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>864</SUB>> ]
-"3951" [label = <(data,input.data())<SUB>869</SUB>> ]
-"3959" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>872</SUB>> ]
-"3965" [label = <(&lt;operator&gt;.addition,buffer + kSecureStopIdSize)<SUB>872</SUB>> ]
-"3971" [label = <(toHidlVec,toHidlVec(id))<SUB>873</SUB>> ]
-"3975" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>874</SUB>> ]
-"3821" [label = <(FIELD_IDENTIFIER,opaqueData,opaqueData)<SUB>825</SUB>> ]
-"3909" [label = <(FIELD_IDENTIFIER,size,size)<SUB>860</SUB>> ]
-"3952" [label = <(&lt;operator&gt;.fieldAccess,input.data)<SUB>869</SUB>> ]
-"3961" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>872</SUB>> ]
-"3977" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>874</SUB>> ]
-"3954" [label = <(FIELD_IDENTIFIER,data,data)<SUB>869</SUB>> ]
-"3808" [label = <(METHOD,releaseSecureStops)<SUB>822</SUB>> ]
-"3985" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>822</SUB>> ]
+"3808" [label = <(&lt;operator&gt;.assignment,kFourBytesOffset = 4)<SUB>823</SUB>> ]
+"3828" [label = <(&lt;operator&gt;.assignment,status = Status::OK)<SUB>829</SUB>> ]
+"3833" [label = <(&lt;operator&gt;.assignment,std::vector&lt;uint8_t&gt; input = toVector(ssRelease.opaqueData))<SUB>830</SUB>> ]
+"3862" [label = <(&lt;operator&gt;.assignment,countBufferSize = sizeof(uint32_t))<SUB>843</SUB>> ]
+"3882" [label = <(&lt;operator&gt;.assignment,count = 0)<SUB>849</SUB>> ]
+"3885" [label = <(UNKNOWN,sscanf(reinterpret_cast&lt;char*&gt;(input.data()), &quot;%04&quot; PRIu32, &amp;count);,sscanf(reinterpret_cast&lt;char*&gt;(input.data()), &quot;%04&quot; PRIu32, &amp;count);)<SUB>850</SUB>> ]
+"3898" [label = <(&lt;operator&gt;.assignment,secureStopSize = (input.size() - kFourBytesOffset) / count)<SUB>859</SUB>> ]
+"3920" [label = <(&lt;operator&gt;.assignment,* buffer = new uint8_t[secureStopSize])<SUB>865</SUB>> ]
+"3925" [label = <(&lt;operator&gt;.assignment,offset = kFourBytesOffset)<SUB>866</SUB>> ]
+"3977" [label = <(&lt;operator&gt;.delete,delete[] buffer)<SUB>876</SUB>> ]
+"3979" [label = <(RETURN,return status;,return status;)<SUB>877</SUB>> ]
+"3812" [label = <(&lt;operator&gt;.lessThan,ssRelease.opaqueData.size() &lt; kFourBytesOffset)<SUB>824</SUB>> ]
+"3830" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>829</SUB>> ]
+"3834" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; input)<SUB>830</SUB>> ]
+"3841" [label = <(toVector,toVector(ssRelease.opaqueData))<SUB>830</SUB>> ]
+"3846" [label = <(&lt;operator&gt;.lessThan,input.size() &lt; kSecureStopIdSize + kFourBytesOffset)<SUB>832</SUB>> ]
+"3864" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint32_t))<SUB>843</SUB>> ]
+"3867" [label = <(&lt;operator&gt;.lessThan,input.size() &lt; countBufferSize)<SUB>844</SUB>> ]
+"3887" [label = <(&lt;operator&gt;.equals,count == 0)<SUB>853</SUB>> ]
+"3900" [label = <(&lt;operator&gt;.division,(input.size() - kFourBytesOffset) / count)<SUB>859</SUB>> ]
+"3909" [label = <(&lt;operator&gt;.lessThan,secureStopSize &lt; kSecureStopIdSize)<SUB>860</SUB>> ]
+"3922" [label = <(&lt;operator&gt;.new,new uint8_t[secureStopSize])<SUB>865</SUB>> ]
+"3934" [label = <(&lt;operator&gt;.lessThan,i &lt; count)<SUB>867</SUB>> ]
+"3937" [label = <(&lt;operator&gt;.expressionList,++i, offset += secureStopSize)<SUB>867</SUB>> ]
+"3813" [label = <(size,ssRelease.opaqueData.size())<SUB>824</SUB>> ]
+"3821" [label = <(ALOGE,ALOGE(&quot;Invalid secureStopRelease length&quot;))<SUB>825</SUB>> ]
+"3823" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>826</SUB>> ]
+"3832" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>829</SUB>> ]
+"3835" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>830</SUB>> ]
+"3842" [label = <(&lt;operator&gt;.fieldAccess,ssRelease.opaqueData)<SUB>830</SUB>> ]
+"3847" [label = <(size,input.size())<SUB>832</SUB>> ]
+"3851" [label = <(&lt;operator&gt;.addition,kSecureStopIdSize + kFourBytesOffset)<SUB>832</SUB>> ]
+"3855" [label = <(ALOGE,ALOGE(&quot;Total size of secureStops is too short&quot;))<SUB>835</SUB>> ]
+"3857" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>836</SUB>> ]
+"3868" [label = <(size,input.size())<SUB>844</SUB>> ]
+"3874" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;144766455&quot;))<SUB>846</SUB>> ]
+"3877" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>847</SUB>> ]
+"3891" [label = <(ALOGE,ALOGE(&quot;Invalid 0 secureStop count&quot;))<SUB>854</SUB>> ]
+"3893" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>855</SUB>> ]
+"3901" [label = <(&lt;operator&gt;.subtraction,input.size() - kFourBytesOffset)<SUB>859</SUB>> ]
+"3913" [label = <(ALOGE,ALOGE(&quot;Invalid secureStop size&quot;))<SUB>862</SUB>> ]
+"3915" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>863</SUB>> ]
+"3931" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>867</SUB>> ]
+"3938" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>867</SUB>> ]
+"3940" [label = <(&lt;operator&gt;.assignmentPlus,offset += secureStopSize)<SUB>867</SUB>> ]
+"3944" [label = <(memcpy,memcpy(buffer, input.data() + offset, secureStopSize))<SUB>868</SUB>> ]
+"3953" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;uint8_t&gt; id(buffer, buffer + kSecureStopIdSize))<SUB>871</SUB>> ]
+"3964" [label = <(&lt;operator&gt;.assignment,status = removeSecureStop(toHidlVec(id)))<SUB>872</SUB>> ]
+"3814" [label = <(&lt;operator&gt;.fieldAccess,ssRelease.opaqueData.size)<SUB>824</SUB>> ]
+"3824" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>826</SUB>> ]
+"3836" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>830</SUB>> ]
+"3844" [label = <(FIELD_IDENTIFIER,opaqueData,opaqueData)<SUB>830</SUB>> ]
+"3848" [label = <(&lt;operator&gt;.fieldAccess,input.size)<SUB>832</SUB>> ]
+"3858" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>836</SUB>> ]
+"3869" [label = <(&lt;operator&gt;.fieldAccess,input.size)<SUB>844</SUB>> ]
+"3878" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>847</SUB>> ]
+"3894" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>855</SUB>> ]
+"3902" [label = <(size,input.size())<SUB>859</SUB>> ]
+"3916" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>863</SUB>> ]
+"3946" [label = <(&lt;operator&gt;.addition,input.data() + offset)<SUB>868</SUB>> ]
+"3954" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;uint8_t)<SUB>871</SUB>> ]
+"3959" [label = <(id,id(buffer, buffer + kSecureStopIdSize))<SUB>871</SUB>> ]
+"3966" [label = <(removeSecureStop,removeSecureStop(toHidlVec(id)))<SUB>872</SUB>> ]
+"3970" [label = <(&lt;operator&gt;.notEquals,Status::OK != status)<SUB>873</SUB>> ]
+"3815" [label = <(&lt;operator&gt;.fieldAccess,ssRelease.opaqueData)<SUB>824</SUB>> ]
+"3818" [label = <(FIELD_IDENTIFIER,size,size)<SUB>824</SUB>> ]
+"3826" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>826</SUB>> ]
+"3838" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>830</SUB>> ]
+"3850" [label = <(FIELD_IDENTIFIER,size,size)<SUB>832</SUB>> ]
+"3860" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>836</SUB>> ]
+"3871" [label = <(FIELD_IDENTIFIER,size,size)<SUB>844</SUB>> ]
+"3880" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>847</SUB>> ]
+"3896" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>855</SUB>> ]
+"3903" [label = <(&lt;operator&gt;.fieldAccess,input.size)<SUB>859</SUB>> ]
+"3918" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>863</SUB>> ]
+"3947" [label = <(data,input.data())<SUB>868</SUB>> ]
+"3955" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>871</SUB>> ]
+"3961" [label = <(&lt;operator&gt;.addition,buffer + kSecureStopIdSize)<SUB>871</SUB>> ]
+"3967" [label = <(toHidlVec,toHidlVec(id))<SUB>872</SUB>> ]
+"3971" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>873</SUB>> ]
+"3817" [label = <(FIELD_IDENTIFIER,opaqueData,opaqueData)<SUB>824</SUB>> ]
+"3905" [label = <(FIELD_IDENTIFIER,size,size)<SUB>859</SUB>> ]
+"3948" [label = <(&lt;operator&gt;.fieldAccess,input.data)<SUB>868</SUB>> ]
+"3957" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>871</SUB>> ]
+"3973" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>873</SUB>> ]
+"3950" [label = <(FIELD_IDENTIFIER,data,data)<SUB>868</SUB>> ]
+"3804" [label = <(METHOD,releaseSecureStops)<SUB>821</SUB>> ]
+"3981" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>821</SUB>> ]
+  "3808" -> "3817" 
+  "3828" -> "3838" 
+  "3833" -> "3850" 
+  "3862" -> "3871" 
+  "3882" -> "3885" 
+  "3885" -> "3887" 
+  "3898" -> "3909" 
+  "3920" -> "3925" 
+  "3925" -> "3931" 
+  "3977" -> "3979" 
+  "3979" -> "3981" 
   "3812" -> "3821" 
-  "3832" -> "3842" 
-  "3837" -> "3854" 
-  "3866" -> "3875" 
-  "3886" -> "3889" 
-  "3889" -> "3891" 
-  "3902" -> "3913" 
-  "3924" -> "3929" 
-  "3929" -> "3935" 
-  "3981" -> "3983" 
-  "3983" -> "3985" 
-  "3816" -> "3825" 
-  "3816" -> "3836" 
-  "3834" -> "3832" 
-  "3838" -> "3848" 
-  "3845" -> "3837" 
-  "3850" -> "3859" 
-  "3850" -> "3868" 
-  "3868" -> "3866" 
-  "3871" -> "3878" 
-  "3871" -> "3886" 
-  "3891" -> "3895" 
-  "3891" -> "3909" 
-  "3904" -> "3902" 
-  "3913" -> "3917" 
-  "3913" -> "3926" 
-  "3926" -> "3924" 
-  "3938" -> "3954" 
-  "3938" -> "3981" 
-  "3941" -> "3938" 
-  "3817" -> "3816" 
-  "3825" -> "3830" 
-  "3827" -> "3985" 
-  "3836" -> "3834" 
-  "3839" -> "3838" 
-  "3846" -> "3845" 
-  "3851" -> "3855" 
-  "3855" -> "3850" 
-  "3859" -> "3864" 
-  "3861" -> "3985" 
-  "3872" -> "3871" 
-  "3878" -> "3884" 
-  "3881" -> "3985" 
-  "3895" -> "3900" 
-  "3897" -> "3985" 
-  "3905" -> "3904" 
-  "3917" -> "3922" 
-  "3919" -> "3985" 
-  "3935" -> "3938" 
-  "3942" -> "3944" 
-  "3944" -> "3941" 
-  "3948" -> "3961" 
-  "3957" -> "3971" 
-  "3968" -> "3977" 
-  "3818" -> "3817" 
-  "3828" -> "3827" 
-  "3840" -> "3839" 
-  "3848" -> "3846" 
-  "3852" -> "3851" 
-  "3862" -> "3861" 
-  "3873" -> "3872" 
-  "3882" -> "3881" 
-  "3898" -> "3897" 
-  "3906" -> "3905" 
-  "3920" -> "3919" 
-  "3950" -> "3948" 
-  "3958" -> "3965" 
-  "3963" -> "3957" 
-  "3970" -> "3968" 
-  "3974" -> "3981" 
-  "3974" -> "3942" 
-  "3819" -> "3822" 
-  "3822" -> "3818" 
+  "3812" -> "3832" 
   "3830" -> "3828" 
-  "3842" -> "3840" 
-  "3854" -> "3852" 
+  "3834" -> "3844" 
+  "3841" -> "3833" 
+  "3846" -> "3855" 
+  "3846" -> "3864" 
   "3864" -> "3862" 
-  "3875" -> "3873" 
-  "3884" -> "3882" 
+  "3867" -> "3874" 
+  "3867" -> "3882" 
+  "3887" -> "3891" 
+  "3887" -> "3905" 
   "3900" -> "3898" 
-  "3907" -> "3906" 
+  "3909" -> "3913" 
+  "3909" -> "3922" 
   "3922" -> "3920" 
-  "3951" -> "3950" 
-  "3959" -> "3958" 
-  "3965" -> "3963" 
-  "3971" -> "3970" 
-  "3975" -> "3974" 
-  "3821" -> "3819" 
-  "3909" -> "3907" 
-  "3952" -> "3951" 
+  "3934" -> "3950" 
+  "3934" -> "3977" 
+  "3937" -> "3934" 
+  "3813" -> "3812" 
+  "3821" -> "3826" 
+  "3823" -> "3981" 
+  "3832" -> "3830" 
+  "3835" -> "3834" 
+  "3842" -> "3841" 
+  "3847" -> "3851" 
+  "3851" -> "3846" 
+  "3855" -> "3860" 
+  "3857" -> "3981" 
+  "3868" -> "3867" 
+  "3874" -> "3880" 
+  "3877" -> "3981" 
+  "3891" -> "3896" 
+  "3893" -> "3981" 
+  "3901" -> "3900" 
+  "3913" -> "3918" 
+  "3915" -> "3981" 
+  "3931" -> "3934" 
+  "3938" -> "3940" 
+  "3940" -> "3937" 
+  "3944" -> "3957" 
+  "3953" -> "3967" 
+  "3964" -> "3973" 
+  "3814" -> "3813" 
+  "3824" -> "3823" 
+  "3836" -> "3835" 
+  "3844" -> "3842" 
+  "3848" -> "3847" 
+  "3858" -> "3857" 
+  "3869" -> "3868" 
+  "3878" -> "3877" 
+  "3894" -> "3893" 
+  "3902" -> "3901" 
+  "3916" -> "3915" 
+  "3946" -> "3944" 
+  "3954" -> "3961" 
+  "3959" -> "3953" 
+  "3966" -> "3964" 
+  "3970" -> "3977" 
+  "3970" -> "3938" 
+  "3815" -> "3818" 
+  "3818" -> "3814" 
+  "3826" -> "3824" 
+  "3838" -> "3836" 
+  "3850" -> "3848" 
+  "3860" -> "3858" 
+  "3871" -> "3869" 
+  "3880" -> "3878" 
+  "3896" -> "3894" 
+  "3903" -> "3902" 
+  "3918" -> "3916" 
+  "3947" -> "3946" 
+  "3955" -> "3954" 
   "3961" -> "3959" 
-  "3977" -> "3975" 
-  "3954" -> "3952" 
-  "3808" -> "3812" 
+  "3967" -> "3966" 
+  "3971" -> "3970" 
+  "3817" -> "3815" 
+  "3905" -> "3903" 
+  "3948" -> "3947" 
+  "3957" -> "3955" 
+  "3973" -> "3971" 
+  "3950" -> "3948" 
+  "3804" -> "3808" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/90-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/90-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/90-cfg.dot	2023-06-07 19:37:50.987374276 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/90-cfg.dot	2023-06-07 19:37:55.497374362 +0330
@@ -1,30 +1,30 @@
 digraph "removeSecureStop" {  
-"3991" [label = <(lock,lock(mSecureStopLock))<SUB>882</SUB>> ]
-"4007" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>887</SUB>> ]
-"3994" [label = <(&lt;operator&gt;.notEquals,1 != mSecureStops.erase(toVector(secureStopId)))<SUB>884</SUB>> ]
-"4008" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>887</SUB>> ]
-"3996" [label = <(erase,mSecureStops.erase(toVector(secureStopId)))<SUB>884</SUB>> ]
-"4003" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>885</SUB>> ]
-"4010" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>887</SUB>> ]
-"3997" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.erase)<SUB>884</SUB>> ]
-"4000" [label = <(toVector,toVector(secureStopId))<SUB>884</SUB>> ]
-"4004" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>885</SUB>> ]
-"3999" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>884</SUB>> ]
-"4006" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>885</SUB>> ]
-"3987" [label = <(METHOD,removeSecureStop)<SUB>881</SUB>> ]
-"4011" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>881</SUB>> ]
-  "3991" -> "3999" 
-  "4007" -> "4011" 
-  "3994" -> "4006" 
-  "3994" -> "4010" 
-  "4008" -> "4007" 
-  "3996" -> "3994" 
-  "4003" -> "4011" 
-  "4010" -> "4008" 
-  "3997" -> "4000" 
-  "4000" -> "3996" 
+"3987" [label = <(lock,lock(mSecureStopLock))<SUB>881</SUB>> ]
+"4003" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>886</SUB>> ]
+"3990" [label = <(&lt;operator&gt;.notEquals,1 != mSecureStops.erase(toVector(secureStopId)))<SUB>883</SUB>> ]
+"4004" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>886</SUB>> ]
+"3992" [label = <(erase,mSecureStops.erase(toVector(secureStopId)))<SUB>883</SUB>> ]
+"3999" [label = <(RETURN,return Status::BAD_VALUE;,return Status::BAD_VALUE;)<SUB>884</SUB>> ]
+"4006" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>886</SUB>> ]
+"3993" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.erase)<SUB>883</SUB>> ]
+"3996" [label = <(toVector,toVector(secureStopId))<SUB>883</SUB>> ]
+"4000" [label = <(&lt;operator&gt;.fieldAccess,Status::BAD_VALUE)<SUB>884</SUB>> ]
+"3995" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>883</SUB>> ]
+"4002" [label = <(FIELD_IDENTIFIER,BAD_VALUE,BAD_VALUE)<SUB>884</SUB>> ]
+"3983" [label = <(METHOD,removeSecureStop)<SUB>880</SUB>> ]
+"4007" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>880</SUB>> ]
+  "3987" -> "3995" 
+  "4003" -> "4007" 
+  "3990" -> "4002" 
+  "3990" -> "4006" 
   "4004" -> "4003" 
-  "3999" -> "3997" 
+  "3992" -> "3990" 
+  "3999" -> "4007" 
   "4006" -> "4004" 
-  "3987" -> "3991" 
+  "3993" -> "3996" 
+  "3996" -> "3992" 
+  "4000" -> "3999" 
+  "3995" -> "3993" 
+  "4002" -> "4000" 
+  "3983" -> "3987" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/91-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/91-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/91-cfg.dot	2023-06-07 19:37:50.987374276 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/91-cfg.dot	2023-06-07 19:37:55.497374362 +0330
@@ -1,21 +1,21 @@
 digraph "removeAllSecureStops" {  
-"4016" [label = <(lock,lock(mSecureStopLock))<SUB>891</SUB>> ]
-"4018" [label = <(clear,mSecureStops.clear())<SUB>893</SUB>> ]
-"4022" [label = <(&lt;operator&gt;.assignment,mNextSecureStopId = kSecureStopIdStart)<SUB>894</SUB>> ]
-"4025" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>895</SUB>> ]
-"4019" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.clear)<SUB>893</SUB>> ]
-"4026" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>895</SUB>> ]
-"4021" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>893</SUB>> ]
-"4028" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>895</SUB>> ]
-"4013" [label = <(METHOD,removeAllSecureStops)<SUB>890</SUB>> ]
-"4029" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>890</SUB>> ]
-  "4016" -> "4021" 
-  "4018" -> "4022" 
-  "4022" -> "4028" 
-  "4025" -> "4029" 
-  "4019" -> "4018" 
-  "4026" -> "4025" 
-  "4021" -> "4019" 
-  "4028" -> "4026" 
-  "4013" -> "4016" 
+"4012" [label = <(lock,lock(mSecureStopLock))<SUB>890</SUB>> ]
+"4014" [label = <(clear,mSecureStops.clear())<SUB>892</SUB>> ]
+"4018" [label = <(&lt;operator&gt;.assignment,mNextSecureStopId = kSecureStopIdStart)<SUB>893</SUB>> ]
+"4021" [label = <(RETURN,return Status::OK;,return Status::OK;)<SUB>894</SUB>> ]
+"4015" [label = <(&lt;operator&gt;.fieldAccess,mSecureStops.clear)<SUB>892</SUB>> ]
+"4022" [label = <(&lt;operator&gt;.fieldAccess,Status::OK)<SUB>894</SUB>> ]
+"4017" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>892</SUB>> ]
+"4024" [label = <(FIELD_IDENTIFIER,OK,OK)<SUB>894</SUB>> ]
+"4009" [label = <(METHOD,removeAllSecureStops)<SUB>889</SUB>> ]
+"4025" [label = <(METHOD_RETURN,Return&lt;Status&gt;)<SUB>889</SUB>> ]
+  "4012" -> "4017" 
+  "4014" -> "4018" 
+  "4018" -> "4024" 
+  "4021" -> "4025" 
+  "4015" -> "4014" 
+  "4022" -> "4021" 
+  "4017" -> "4015" 
+  "4024" -> "4022" 
+  "4009" -> "4012" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/92-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/92-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/92-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/92-cfg.dot	2023-06-07 19:37:55.497374362 +0330
@@ -1,7 +1,7 @@
 digraph "&lt;global&gt;" {  
-"4036" [label = <(UNKNOWN,namespace android {\012namespace hardware {\012namespace drm {\012namespace V1_2 {\012namespace clearkey {\012\012namespace drm = ::android::hardware::drm;\012using drm::V1_0::EventType;\012using drm::V1_0::IDrmPluginListener;\012using drm::V1_0::KeyRequestType;\012using drm::V1_0::KeyStatus;\012using drm::V1_0::KeyType;\012using drm::V1_0::KeyValue;\012using drm::V1_0::SecureStop;\012using drm::V1_0::SecureStopId;\012using drm::V1_0::SessionId;\012using drm::V1_0::Status;\012using drm::V1_1::DrmMetricGroup;\012using drm::V1_1::HdcpLevel;\012using drm::V1_1::SecureStopRelease;\012using drm::V1_1::SecurityLevel;\012using drm::V1_2::IDrmPlugin;\012using drm::V1_2::KeySetId;\012using drm::V1_2::OfflineLicenseState;\012\012using ::android::hardware::hidl_string;\012using ::android::hardware::hidl_vec;\012using ::android::hardware::Return;\012using ::android::hardware::Void;\012using ::android::sp;\012\012typedef drm::V1_1::KeyRequestType KeyRequestType_V1_1;\012typedef drm::V1_2::IDrmPluginListener IDrmPluginListener_V1_2;\012typedef drm::V1_2::KeyStatus KeyStatus_V1_2;\012typedef drm::V1_2::Status Status_V1_2;\012typedef drm::V1_2::HdcpLevel HdcpLevel_V1_2;\012\012struct DrmPlugin : public IDrmPlugin {\012 explicit DrmPlugin(SessionLibrary* sessionLibrary);\012\012 virtual ~DrmPlugin() { mFileHandle.DeleteAllLicenses(); }\012\012 Return&lt;void&gt; openSession(openSession_cb _hidl_cb) override;\012 Return&lt;void&gt; openSession_1_1(SecurityLevel securityLevel,\012            openSession_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; closeSession(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) override;\012\012 Return&lt;void&gt; getKeyRequest(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getKeyRequest_1_1(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_1_1_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getKeyRequest_1_2(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_1_2_cb _hidl_cb) override;\012\012 Return&lt;void&gt; provideKeyResponse(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; response,\012        provideKeyResponse_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; removeKeys(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012 if (sessionId.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;Status&gt; restoreKeys(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keySetId) override;\012\012 Return&lt;void&gt; queryKeyStatus(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012        queryKeyStatus_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getProvisionRequest(\012 const hidl_string&amp; certificateType,\012 const hidl_string&amp; certificateAuthority,\012        getProvisionRequest_cb _hidl_cb) {\012        UNUSED(certificateType);\012        UNUSED(certificateAuthority);\012\012        hidl_string defaultUrl;\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), defaultUrl);\012 return Void();\012 }\012\012 Return&lt;void&gt; getProvisionRequest_1_2(\012 const hidl_string&amp; certificateType,\012 const hidl_string&amp; certificateAuthority,\012        getProvisionRequest_1_2_cb _hidl_cb) {\012        UNUSED(certificateType);\012        UNUSED(certificateAuthority);\012\012        hidl_string defaultUrl;\012        _hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), defaultUrl);\012 return Void();\012 }\012\012 Return&lt;void&gt; provideProvisionResponse(\012 const hidl_vec&lt;uint8_t&gt;&amp; response,\012        provideProvisionResponse_cb _hidl_cb) {\012\012 if (response.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;(), hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; getHdcpLevels(getHdcpLevels_cb _hidl_cb) {\012 HdcpLevel connectedLevel = HdcpLevel::HDCP_NONE;\012 HdcpLevel maxLevel = HdcpLevel::HDCP_NO_OUTPUT;\012        _hidl_cb(Status::OK, connectedLevel, maxLevel);\012 return Void();\012 }\012\012 Return&lt;void&gt; getHdcpLevels_1_2(getHdcpLevels_1_2_cb _hidl_cb) {\012 HdcpLevel_V1_2 connectedLevel = HdcpLevel_V1_2::HDCP_NONE;\012 HdcpLevel_V1_2 maxLevel = HdcpLevel_V1_2::HDCP_NO_OUTPUT;\012        _hidl_cb(Status_V1_2::OK, connectedLevel, maxLevel);\012 return Void();\012 }\012\012 Return&lt;void&gt; getNumberOfSessions(getNumberOfSessions_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getSecurityLevel(const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012            getSecurityLevel_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getMetrics(getMetrics_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getOfflineLicenseKeySetIds(getOfflineLicenseKeySetIds_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; removeOfflineLicense(const KeySetId &amp;keySetId) override;\012\012 Return&lt;void&gt; getOfflineLicenseState(const KeySetId &amp;keySetId,\012            getOfflineLicenseState_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getPropertyString(\012 const hidl_string&amp; name,\012        getPropertyString_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getPropertyByteArray(\012 const hidl_string&amp; name,\012        getPropertyByteArray_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; setPropertyString(\012 const hidl_string&amp; name, const hidl_string&amp; value) override;\012\012 Return&lt;Status&gt; setPropertyByteArray(\012 const hidl_string&amp; name, const hidl_vec&lt;uint8_t&gt;&amp; value) override;\012\012 Return&lt;Status&gt; setCipherAlgorithm(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId, const hidl_string&amp; algorithm) {\012 if (sessionId.size() == 0 || algorithm.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;Status&gt; setMacAlgorithm(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId, const hidl_string&amp; algorithm) {\012 if (sessionId.size() == 0 || algorithm.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;void&gt; encrypt(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; input,\012 const hidl_vec&lt;uint8_t&gt;&amp; iv,\012            encrypt_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                input.size() == 0 || iv.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; decrypt(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; input,\012 const hidl_vec&lt;uint8_t&gt;&amp; iv,\012            decrypt_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                input.size() == 0 || iv.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; sign(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012            sign_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                message.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; verify(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012 const hidl_vec&lt;uint8_t&gt;&amp; signature,\012            verify_cb _hidl_cb) {\012\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                message.size() == 0 || signature.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, false);\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, false);\012 return Void();\012 }\012\012 Return&lt;void&gt; signRSA(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_string&amp; algorithm,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012 const hidl_vec&lt;uint8_t&gt;&amp; wrappedKey,\012            signRSA_cb _hidl_cb) {\012 if (sessionId.size() == 0 || algorithm.size() == 0 ||\012                message.size() == 0 || wrappedKey.size() == 0) {\012             _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012         _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; setListener(const sp&lt;IDrmPluginListener&gt;&amp; listener) {\012        mListener = listener;\012        mListenerV1_2 = IDrmPluginListener_V1_2::castFrom(listener);\012 return Void();\012 };\012\012 Return&lt;void&gt; sendEvent(\012 EventType eventType,\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; data) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendEvent(eventType, sessionId, data);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendEvent(eventType, sessionId, data);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendExpirationUpdate(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 int64_t expiryTimeInMS) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendExpirationUpdate(sessionId, expiryTimeInMS);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendExpirationUpdate(sessionId, expiryTimeInMS);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendKeysChange(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;KeyStatus&gt;&amp; keyStatusList, bool hasNewUsableKey) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendKeysChange(sessionId, keyStatusList, hasNewUsableKey);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendKeysChange(sessionId, keyStatusList, hasNewUsableKey);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendKeysChange_1_2(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;KeyStatus_V1_2&gt;&amp; keyStatusList, bool hasNewUsableKey) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendKeysChange_1_2(sessionId, keyStatusList, hasNewUsableKey);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendSessionLostState(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendSessionLostState(sessionId);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; getSecureStops(getSecureStops_cb _hidl_cb);\012\012 Return&lt;void&gt; getSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; secureStopId,\012            getSecureStop_cb _hidl_cb);\012\012 Return&lt;Status&gt; releaseSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; ssRelease);\012\012 Return&lt;Status&gt; releaseAllSecureStops();\012\012 Return&lt;void&gt; getSecureStopIds(getSecureStopIds_cb _hidl_cb);\012\012 Return&lt;Status&gt; releaseSecureStops(const SecureStopRelease&amp; ssRelease);\012\012 Return&lt;Status&gt; removeSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; secureStopId);\012\012 Return&lt;Status&gt; removeAllSecureStops();\012\012private:\012 void initProperties();\012 void installSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; sessionId);\012 bool makeKeySetId(std::string* keySetId);\012 void setPlayPolicy();\012\012 Return&lt;Status&gt; setSecurityLevel(const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 SecurityLevel level);\012\012 Status_V1_2 getKeyRequestCommon(const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012            std::vector&lt;uint8_t&gt; *request,\012 KeyRequestType_V1_1 *getKeyRequestType,\012            std::string *defaultUrl);\012\012 struct ClearkeySecureStop {\012        std::vector&lt;uint8_t&gt; id;\012        std::vector&lt;uint8_t&gt; data;\012 };\012\012    std::map&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt; mSecureStops;\012    std::vector&lt;KeyValue&gt; mPlayPolicy;\012    std::map&lt;std::string, std::string&gt; mStringProperties;\012    std::map&lt;std::string, std::vector&lt;uint8_t&gt; &gt; mByteArrayProperties;\012    std::map&lt;std::string, std::vector&lt;uint8_t&gt; &gt; mReleaseKeysMap;\012    std::map&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt; mSecurityLevel;\012    sp&lt;IDrmPluginListener&gt; mListener;\012    sp&lt;IDrmPluginListener_V1_2&gt; mListenerV1_2;\012 SessionLibrary *mSessionLibrary;\012 int64_t mOpenSessionOkCount;\012 int64_t mCloseSessionOkCount;\012 int64_t mCloseSessionNotOpenedCount;\012 uint32_t mNextSecureStopId;\012    android::Mutex mPlayPolicyLock;\012\012 // set by property to mock error scenarios\012 Status_V1_2 mMockError;\012\012 void processMockError(const sp&lt;Session&gt; &amp;session) {\012        session-&gt;setMockError(mMockError);\012        mMockError = Status_V1_2::OK;\012 }\012\012 DeviceFiles mFileHandle;\012 Mutex mSecureStopLock;\012\012    CLEARKEY_DISALLOW_COPY_AND_ASSIGN_AND_NEW(DrmPlugin);\012};\012\012} // namespace clearkey\012} // namespace V1_2\012} // namespace drm\012} // namespace hardware\012},namespace android {\012namespace hardware {\012namespace drm {\012namespace V1_2 {\012namespace clearkey {\012\012namespace drm = ::android::hardware::drm;\012using drm::V1_0::EventType;\012using drm::V1_0::IDrmPluginListener;\012using drm::V1_0::KeyRequestType;\012using drm::V1_0::KeyStatus;\012using drm::V1_0::KeyType;\012using drm::V1_0::KeyValue;\012using drm::V1_0::SecureStop;\012using drm::V1_0::SecureStopId;\012using drm::V1_0::SessionId;\012using drm::V1_0::Status;\012using drm::V1_1::DrmMetricGroup;\012using drm::V1_1::HdcpLevel;\012using drm::V1_1::SecureStopRelease;\012using drm::V1_1::SecurityLevel;\012using drm::V1_2::IDrmPlugin;\012using drm::V1_2::KeySetId;\012using drm::V1_2::OfflineLicenseState;\012\012using ::android::hardware::hidl_string;\012using ::android::hardware::hidl_vec;\012using ::android::hardware::Return;\012using ::android::hardware::Void;\012using ::android::sp;\012\012typedef drm::V1_1::KeyRequestType KeyRequestType_V1_1;\012typedef drm::V1_2::IDrmPluginListener IDrmPluginListener_V1_2;\012typedef drm::V1_2::KeyStatus KeyStatus_V1_2;\012typedef drm::V1_2::Status Status_V1_2;\012typedef drm::V1_2::HdcpLevel HdcpLevel_V1_2;\012\012struct DrmPlugin : public IDrmPlugin {\012 explicit DrmPlugin(SessionLibrary* sessionLibrary);\012\012 virtual ~DrmPlugin() { mFileHandle.DeleteAllLicenses(); }\012\012 Return&lt;void&gt; openSession(openSession_cb _hidl_cb) override;\012 Return&lt;void&gt; openSession_1_1(SecurityLevel securityLevel,\012            openSession_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; closeSession(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) override;\012\012 Return&lt;void&gt; getKeyRequest(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getKeyRequest_1_1(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_1_1_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getKeyRequest_1_2(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_1_2_cb _hidl_cb) override;\012\012 Return&lt;void&gt; provideKeyResponse(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; response,\012        provideKeyResponse_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; removeKeys(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012 if (sessionId.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;Status&gt; restoreKeys(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keySetId) override;\012\012 Return&lt;void&gt; queryKeyStatus(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012        queryKeyStatus_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getProvisionRequest(\012 const hidl_string&amp; certificateType,\012 const hidl_string&amp; certificateAuthority,\012        getProvisionRequest_cb _hidl_cb) {\012        UNUSED(certificateType);\012        UNUSED(certificateAuthority);\012\012        hidl_string defaultUrl;\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), defaultUrl);\012 return Void();\012 }\012\012 Return&lt;void&gt; getProvisionRequest_1_2(\012 const hidl_string&amp; certificateType,\012 const hidl_string&amp; certificateAuthority,\012        getProvisionRequest_1_2_cb _hidl_cb) {\012        UNUSED(certificateType);\012        UNUSED(certificateAuthority);\012\012        hidl_string defaultUrl;\012        _hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), defaultUrl);\012 return Void();\012 }\012\012 Return&lt;void&gt; provideProvisionResponse(\012 const hidl_vec&lt;uint8_t&gt;&amp; response,\012        provideProvisionResponse_cb _hidl_cb) {\012\012 if (response.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;(), hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; getHdcpLevels(getHdcpLevels_cb _hidl_cb) {\012 HdcpLevel connectedLevel = HdcpLevel::HDCP_NONE;\012 HdcpLevel maxLevel = HdcpLevel::HDCP_NO_OUTPUT;\012        _hidl_cb(Status::OK, connectedLevel, maxLevel);\012 return Void();\012 }\012\012 Return&lt;void&gt; getHdcpLevels_1_2(getHdcpLevels_1_2_cb _hidl_cb) {\012 HdcpLevel_V1_2 connectedLevel = HdcpLevel_V1_2::HDCP_NONE;\012 HdcpLevel_V1_2 maxLevel = HdcpLevel_V1_2::HDCP_NO_OUTPUT;\012        _hidl_cb(Status_V1_2::OK, connectedLevel, maxLevel);\012 return Void();\012 }\012\012 Return&lt;void&gt; getNumberOfSessions(getNumberOfSessions_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getSecurityLevel(const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012            getSecurityLevel_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getMetrics(getMetrics_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getOfflineLicenseKeySetIds(getOfflineLicenseKeySetIds_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; removeOfflineLicense(const KeySetId &amp;keySetId) override;\012\012 Return&lt;void&gt; getOfflineLicenseState(const KeySetId &amp;keySetId,\012            getOfflineLicenseState_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getPropertyString(\012 const hidl_string&amp; name,\012        getPropertyString_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getPropertyByteArray(\012 const hidl_string&amp; name,\012        getPropertyByteArray_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; setPropertyString(\012 const hidl_string&amp; name, const hidl_string&amp; value) override;\012\012 Return&lt;Status&gt; setPropertyByteArray(\012 const hidl_string&amp; name, const hidl_vec&lt;uint8_t&gt;&amp; value) override;\012\012 Return&lt;Status&gt; setCipherAlgorithm(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId, const hidl_string&amp; algorithm) {\012 if (sessionId.size() == 0 || algorithm.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;Status&gt; setMacAlgorithm(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId, const hidl_string&amp; algorithm) {\012 if (sessionId.size() == 0 || algorithm.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;void&gt; encrypt(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; input,\012 const hidl_vec&lt;uint8_t&gt;&amp; iv,\012            encrypt_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                input.size() == 0 || iv.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; decrypt(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; input,\012 const hidl_vec&lt;uint8_t&gt;&amp; iv,\012            decrypt_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                input.size() == 0 || iv.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; sign(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012            sign_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                message.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; verify(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012 const hidl_vec&lt;uint8_t&gt;&amp; signature,\012            verify_cb _hidl_cb) {\012\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                message.size() == 0 || signature.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, false);\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, false);\012 return Void();\012 }\012\012 Return&lt;void&gt; signRSA(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_string&amp; algorithm,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012 const hidl_vec&lt;uint8_t&gt;&amp; wrappedKey,\012            signRSA_cb _hidl_cb) {\012 if (sessionId.size() == 0 || algorithm.size() == 0 ||\012                message.size() == 0 || wrappedKey.size() == 0) {\012             _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012         _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; setListener(const sp&lt;IDrmPluginListener&gt;&amp; listener) {\012        mListener = listener;\012        mListenerV1_2 = IDrmPluginListener_V1_2::castFrom(listener);\012 return Void();\012 };\012\012 Return&lt;void&gt; sendEvent(\012 EventType eventType,\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; data) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendEvent(eventType, sessionId, data);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendEvent(eventType, sessionId, data);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendExpirationUpdate(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 int64_t expiryTimeInMS) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendExpirationUpdate(sessionId, expiryTimeInMS);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendExpirationUpdate(sessionId, expiryTimeInMS);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendKeysChange(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;KeyStatus&gt;&amp; keyStatusList, bool hasNewUsableKey) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendKeysChange(sessionId, keyStatusList, hasNewUsableKey);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendKeysChange(sessionId, keyStatusList, hasNewUsableKey);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendKeysChange_1_2(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;KeyStatus_V1_2&gt;&amp; keyStatusList, bool hasNewUsableKey) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendKeysChange_1_2(sessionId, keyStatusList, hasNewUsableKey);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendSessionLostState(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendSessionLostState(sessionId);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; getSecureStops(getSecureStops_cb _hidl_cb);\012\012 Return&lt;void&gt; getSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; secureStopId,\012            getSecureStop_cb _hidl_cb);\012\012 Return&lt;Status&gt; releaseSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; ssRelease);\012\012 Return&lt;Status&gt; releaseAllSecureStops();\012\012 Return&lt;void&gt; getSecureStopIds(getSecureStopIds_cb _hidl_cb);\012\012 Return&lt;Status&gt; releaseSecureStops(const SecureStopRelease&amp; ssRelease);\012\012 Return&lt;Status&gt; removeSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; secureStopId);\012\012 Return&lt;Status&gt; removeAllSecureStops();\012\012private:\012 void initProperties();\012 void installSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; sessionId);\012 bool makeKeySetId(std::string* keySetId);\012 void setPlayPolicy();\012\012 Return&lt;Status&gt; setSecurityLevel(const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 SecurityLevel level);\012\012 Status_V1_2 getKeyRequestCommon(const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012            std::vector&lt;uint8_t&gt; *request,\012 KeyRequestType_V1_1 *getKeyRequestType,\012            std::string *defaultUrl);\012\012 struct ClearkeySecureStop {\012        std::vector&lt;uint8_t&gt; id;\012        std::vector&lt;uint8_t&gt; data;\012 };\012\012    std::map&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt; mSecureStops;\012    std::vector&lt;KeyValue&gt; mPlayPolicy;\012    std::map&lt;std::string, std::string&gt; mStringProperties;\012    std::map&lt;std::string, std::vector&lt;uint8_t&gt; &gt; mByteArrayProperties;\012    std::map&lt;std::string, std::vector&lt;uint8_t&gt; &gt; mReleaseKeysMap;\012    std::map&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt; mSecurityLevel;\012    sp&lt;IDrmPluginListener&gt; mListener;\012    sp&lt;IDrmPluginListener_V1_2&gt; mListenerV1_2;\012 SessionLibrary *mSessionLibrary;\012 int64_t mOpenSessionOkCount;\012 int64_t mCloseSessionOkCount;\012 int64_t mCloseSessionNotOpenedCount;\012 uint32_t mNextSecureStopId;\012    android::Mutex mPlayPolicyLock;\012\012 // set by property to mock error scenarios\012 Status_V1_2 mMockError;\012\012 void processMockError(const sp&lt;Session&gt; &amp;session) {\012        session-&gt;setMockError(mMockError);\012        mMockError = Status_V1_2::OK;\012 }\012\012 DeviceFiles mFileHandle;\012 Mutex mSecureStopLock;\012\012    CLEARKEY_DISALLOW_COPY_AND_ASSIGN_AND_NEW(DrmPlugin);\012};\012\012} // namespace clearkey\012} // namespace V1_2\012} // namespace drm\012} // namespace hardware\012})<SUB>32</SUB>> ]
-"4034" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"4037" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
-  "4036" -> "4037" 
-  "4034" -> "4036" 
+"4032" [label = <(UNKNOWN,namespace android {\012namespace hardware {\012namespace drm {\012namespace V1_2 {\012namespace clearkey {\012\012namespace drm = ::android::hardware::drm;\012using drm::V1_0::EventType;\012using drm::V1_0::IDrmPluginListener;\012using drm::V1_0::KeyRequestType;\012using drm::V1_0::KeyStatus;\012using drm::V1_0::KeyType;\012using drm::V1_0::KeyValue;\012using drm::V1_0::SecureStop;\012using drm::V1_0::SecureStopId;\012using drm::V1_0::SessionId;\012using drm::V1_0::Status;\012using drm::V1_1::DrmMetricGroup;\012using drm::V1_1::HdcpLevel;\012using drm::V1_1::SecureStopRelease;\012using drm::V1_1::SecurityLevel;\012using drm::V1_2::IDrmPlugin;\012using drm::V1_2::KeySetId;\012using drm::V1_2::OfflineLicenseState;\012\012using ::android::hardware::hidl_string;\012using ::android::hardware::hidl_vec;\012using ::android::hardware::Return;\012using ::android::hardware::Void;\012using ::android::sp;\012\012typedef drm::V1_1::KeyRequestType KeyRequestType_V1_1;\012typedef drm::V1_2::IDrmPluginListener IDrmPluginListener_V1_2;\012typedef drm::V1_2::KeyStatus KeyStatus_V1_2;\012typedef drm::V1_2::Status Status_V1_2;\012typedef drm::V1_2::HdcpLevel HdcpLevel_V1_2;\012\012struct DrmPlugin : public IDrmPlugin {\012 explicit DrmPlugin(SessionLibrary* sessionLibrary);\012\012 virtual ~DrmPlugin() { mFileHandle.DeleteAllLicenses(); }\012\012 Return&lt;void&gt; openSession(openSession_cb _hidl_cb) override;\012 Return&lt;void&gt; openSession_1_1(SecurityLevel securityLevel,\012            openSession_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; closeSession(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) override;\012\012 Return&lt;void&gt; getKeyRequest(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getKeyRequest_1_1(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_1_1_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getKeyRequest_1_2(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_1_2_cb _hidl_cb) override;\012\012 Return&lt;void&gt; provideKeyResponse(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; response,\012        provideKeyResponse_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; removeKeys(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012 if (sessionId.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;Status&gt; restoreKeys(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keySetId) override;\012\012 Return&lt;void&gt; queryKeyStatus(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012        queryKeyStatus_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getProvisionRequest(\012 const hidl_string&amp; certificateType,\012 const hidl_string&amp; certificateAuthority,\012        getProvisionRequest_cb _hidl_cb) {\012        UNUSED(certificateType);\012        UNUSED(certificateAuthority);\012\012        hidl_string defaultUrl;\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), defaultUrl);\012 return Void();\012 }\012\012 Return&lt;void&gt; getProvisionRequest_1_2(\012 const hidl_string&amp; certificateType,\012 const hidl_string&amp; certificateAuthority,\012        getProvisionRequest_1_2_cb _hidl_cb) {\012        UNUSED(certificateType);\012        UNUSED(certificateAuthority);\012\012        hidl_string defaultUrl;\012        _hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), defaultUrl);\012 return Void();\012 }\012\012 Return&lt;void&gt; provideProvisionResponse(\012 const hidl_vec&lt;uint8_t&gt;&amp; response,\012        provideProvisionResponse_cb _hidl_cb) {\012\012 if (response.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;(), hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; getHdcpLevels(getHdcpLevels_cb _hidl_cb) {\012 HdcpLevel connectedLevel = HdcpLevel::HDCP_NONE;\012 HdcpLevel maxLevel = HdcpLevel::HDCP_NO_OUTPUT;\012        _hidl_cb(Status::OK, connectedLevel, maxLevel);\012 return Void();\012 }\012\012 Return&lt;void&gt; getHdcpLevels_1_2(getHdcpLevels_1_2_cb _hidl_cb) {\012 HdcpLevel_V1_2 connectedLevel = HdcpLevel_V1_2::HDCP_NONE;\012 HdcpLevel_V1_2 maxLevel = HdcpLevel_V1_2::HDCP_NO_OUTPUT;\012        _hidl_cb(Status_V1_2::OK, connectedLevel, maxLevel);\012 return Void();\012 }\012\012 Return&lt;void&gt; getNumberOfSessions(getNumberOfSessions_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getSecurityLevel(const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012            getSecurityLevel_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getMetrics(getMetrics_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getOfflineLicenseKeySetIds(getOfflineLicenseKeySetIds_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; removeOfflineLicense(const KeySetId &amp;keySetId) override;\012\012 Return&lt;void&gt; getOfflineLicenseState(const KeySetId &amp;keySetId,\012            getOfflineLicenseState_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getPropertyString(\012 const hidl_string&amp; name,\012        getPropertyString_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getPropertyByteArray(\012 const hidl_string&amp; name,\012        getPropertyByteArray_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; setPropertyString(\012 const hidl_string&amp; name, const hidl_string&amp; value) override;\012\012 Return&lt;Status&gt; setPropertyByteArray(\012 const hidl_string&amp; name, const hidl_vec&lt;uint8_t&gt;&amp; value) override;\012\012 Return&lt;Status&gt; setCipherAlgorithm(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId, const hidl_string&amp; algorithm) {\012 if (sessionId.size() == 0 || algorithm.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;Status&gt; setMacAlgorithm(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId, const hidl_string&amp; algorithm) {\012 if (sessionId.size() == 0 || algorithm.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;void&gt; encrypt(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; input,\012 const hidl_vec&lt;uint8_t&gt;&amp; iv,\012            encrypt_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                input.size() == 0 || iv.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; decrypt(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; input,\012 const hidl_vec&lt;uint8_t&gt;&amp; iv,\012            decrypt_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                input.size() == 0 || iv.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; sign(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012            sign_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                message.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; verify(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012 const hidl_vec&lt;uint8_t&gt;&amp; signature,\012            verify_cb _hidl_cb) {\012\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                message.size() == 0 || signature.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, false);\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, false);\012 return Void();\012 }\012\012 Return&lt;void&gt; signRSA(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_string&amp; algorithm,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012 const hidl_vec&lt;uint8_t&gt;&amp; wrappedKey,\012            signRSA_cb _hidl_cb) {\012 if (sessionId.size() == 0 || algorithm.size() == 0 ||\012                message.size() == 0 || wrappedKey.size() == 0) {\012             _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012         _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; setListener(const sp&lt;IDrmPluginListener&gt;&amp; listener) {\012        mListener = listener;\012        mListenerV1_2 = IDrmPluginListener_V1_2::castFrom(listener);\012 return Void();\012 };\012\012 Return&lt;void&gt; sendEvent(\012 EventType eventType,\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; data) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendEvent(eventType, sessionId, data);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendEvent(eventType, sessionId, data);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendExpirationUpdate(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 int64_t expiryTimeInMS) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendExpirationUpdate(sessionId, expiryTimeInMS);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendExpirationUpdate(sessionId, expiryTimeInMS);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendKeysChange(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;KeyStatus&gt;&amp; keyStatusList, bool hasNewUsableKey) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendKeysChange(sessionId, keyStatusList, hasNewUsableKey);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendKeysChange(sessionId, keyStatusList, hasNewUsableKey);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendKeysChange_1_2(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;KeyStatus_V1_2&gt;&amp; keyStatusList, bool hasNewUsableKey) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendKeysChange_1_2(sessionId, keyStatusList, hasNewUsableKey);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendSessionLostState(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendSessionLostState(sessionId);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; getSecureStops(getSecureStops_cb _hidl_cb);\012\012 Return&lt;void&gt; getSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; secureStopId,\012            getSecureStop_cb _hidl_cb);\012\012 Return&lt;Status&gt; releaseSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; ssRelease);\012\012 Return&lt;Status&gt; releaseAllSecureStops();\012\012 Return&lt;void&gt; getSecureStopIds(getSecureStopIds_cb _hidl_cb);\012\012 Return&lt;Status&gt; releaseSecureStops(const SecureStopRelease&amp; ssRelease);\012\012 Return&lt;Status&gt; removeSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; secureStopId);\012\012 Return&lt;Status&gt; removeAllSecureStops();\012\012private:\012 void initProperties();\012 void installSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; sessionId);\012 bool makeKeySetId(std::string* keySetId);\012 void setPlayPolicy();\012\012 Return&lt;Status&gt; setSecurityLevel(const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 SecurityLevel level);\012\012 Status_V1_2 getKeyRequestCommon(const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012            std::vector&lt;uint8_t&gt; *request,\012 KeyRequestType_V1_1 *getKeyRequestType,\012            std::string *defaultUrl);\012\012 struct ClearkeySecureStop {\012        std::vector&lt;uint8_t&gt; id;\012        std::vector&lt;uint8_t&gt; data;\012 };\012\012    std::map&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt; mSecureStops;\012    std::vector&lt;KeyValue&gt; mPlayPolicy;\012    std::map&lt;std::string, std::string&gt; mStringProperties;\012    std::map&lt;std::string, std::vector&lt;uint8_t&gt; &gt; mByteArrayProperties;\012    std::map&lt;std::string, std::vector&lt;uint8_t&gt; &gt; mReleaseKeysMap;\012    std::map&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt; mSecurityLevel;\012    sp&lt;IDrmPluginListener&gt; mListener;\012    sp&lt;IDrmPluginListener_V1_2&gt; mListenerV1_2;\012 SessionLibrary *mSessionLibrary;\012 int64_t mOpenSessionOkCount;\012 int64_t mCloseSessionOkCount;\012 int64_t mCloseSessionNotOpenedCount;\012 uint32_t mNextSecureStopId;\012\012 // set by property to mock error scenarios\012 Status_V1_2 mMockError;\012\012 void processMockError(const sp&lt;Session&gt; &amp;session) {\012        session-&gt;setMockError(mMockError);\012        mMockError = Status_V1_2::OK;\012 }\012\012 DeviceFiles mFileHandle;\012 Mutex mSecureStopLock;\012\012    CLEARKEY_DISALLOW_COPY_AND_ASSIGN_AND_NEW(DrmPlugin);\012};\012\012} // namespace clearkey\012} // namespace V1_2\012} // namespace drm\012} // namespace hardware\012},namespace android {\012namespace hardware {\012namespace drm {\012namespace V1_2 {\012namespace clearkey {\012\012namespace drm = ::android::hardware::drm;\012using drm::V1_0::EventType;\012using drm::V1_0::IDrmPluginListener;\012using drm::V1_0::KeyRequestType;\012using drm::V1_0::KeyStatus;\012using drm::V1_0::KeyType;\012using drm::V1_0::KeyValue;\012using drm::V1_0::SecureStop;\012using drm::V1_0::SecureStopId;\012using drm::V1_0::SessionId;\012using drm::V1_0::Status;\012using drm::V1_1::DrmMetricGroup;\012using drm::V1_1::HdcpLevel;\012using drm::V1_1::SecureStopRelease;\012using drm::V1_1::SecurityLevel;\012using drm::V1_2::IDrmPlugin;\012using drm::V1_2::KeySetId;\012using drm::V1_2::OfflineLicenseState;\012\012using ::android::hardware::hidl_string;\012using ::android::hardware::hidl_vec;\012using ::android::hardware::Return;\012using ::android::hardware::Void;\012using ::android::sp;\012\012typedef drm::V1_1::KeyRequestType KeyRequestType_V1_1;\012typedef drm::V1_2::IDrmPluginListener IDrmPluginListener_V1_2;\012typedef drm::V1_2::KeyStatus KeyStatus_V1_2;\012typedef drm::V1_2::Status Status_V1_2;\012typedef drm::V1_2::HdcpLevel HdcpLevel_V1_2;\012\012struct DrmPlugin : public IDrmPlugin {\012 explicit DrmPlugin(SessionLibrary* sessionLibrary);\012\012 virtual ~DrmPlugin() { mFileHandle.DeleteAllLicenses(); }\012\012 Return&lt;void&gt; openSession(openSession_cb _hidl_cb) override;\012 Return&lt;void&gt; openSession_1_1(SecurityLevel securityLevel,\012            openSession_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; closeSession(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) override;\012\012 Return&lt;void&gt; getKeyRequest(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getKeyRequest_1_1(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_1_1_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getKeyRequest_1_2(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012        getKeyRequest_1_2_cb _hidl_cb) override;\012\012 Return&lt;void&gt; provideKeyResponse(\012 const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; response,\012        provideKeyResponse_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; removeKeys(const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012 if (sessionId.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;Status&gt; restoreKeys(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keySetId) override;\012\012 Return&lt;void&gt; queryKeyStatus(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012        queryKeyStatus_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getProvisionRequest(\012 const hidl_string&amp; certificateType,\012 const hidl_string&amp; certificateAuthority,\012        getProvisionRequest_cb _hidl_cb) {\012        UNUSED(certificateType);\012        UNUSED(certificateAuthority);\012\012        hidl_string defaultUrl;\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), defaultUrl);\012 return Void();\012 }\012\012 Return&lt;void&gt; getProvisionRequest_1_2(\012 const hidl_string&amp; certificateType,\012 const hidl_string&amp; certificateAuthority,\012        getProvisionRequest_1_2_cb _hidl_cb) {\012        UNUSED(certificateType);\012        UNUSED(certificateAuthority);\012\012        hidl_string defaultUrl;\012        _hidl_cb(Status_V1_2::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), defaultUrl);\012 return Void();\012 }\012\012 Return&lt;void&gt; provideProvisionResponse(\012 const hidl_vec&lt;uint8_t&gt;&amp; response,\012        provideProvisionResponse_cb _hidl_cb) {\012\012 if (response.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;(), hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;(), hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; getHdcpLevels(getHdcpLevels_cb _hidl_cb) {\012 HdcpLevel connectedLevel = HdcpLevel::HDCP_NONE;\012 HdcpLevel maxLevel = HdcpLevel::HDCP_NO_OUTPUT;\012        _hidl_cb(Status::OK, connectedLevel, maxLevel);\012 return Void();\012 }\012\012 Return&lt;void&gt; getHdcpLevels_1_2(getHdcpLevels_1_2_cb _hidl_cb) {\012 HdcpLevel_V1_2 connectedLevel = HdcpLevel_V1_2::HDCP_NONE;\012 HdcpLevel_V1_2 maxLevel = HdcpLevel_V1_2::HDCP_NO_OUTPUT;\012        _hidl_cb(Status_V1_2::OK, connectedLevel, maxLevel);\012 return Void();\012 }\012\012 Return&lt;void&gt; getNumberOfSessions(getNumberOfSessions_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getSecurityLevel(const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012            getSecurityLevel_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getMetrics(getMetrics_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getOfflineLicenseKeySetIds(getOfflineLicenseKeySetIds_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; removeOfflineLicense(const KeySetId &amp;keySetId) override;\012\012 Return&lt;void&gt; getOfflineLicenseState(const KeySetId &amp;keySetId,\012            getOfflineLicenseState_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getPropertyString(\012 const hidl_string&amp; name,\012        getPropertyString_cb _hidl_cb) override;\012\012 Return&lt;void&gt; getPropertyByteArray(\012 const hidl_string&amp; name,\012        getPropertyByteArray_cb _hidl_cb) override;\012\012 Return&lt;Status&gt; setPropertyString(\012 const hidl_string&amp; name, const hidl_string&amp; value) override;\012\012 Return&lt;Status&gt; setPropertyByteArray(\012 const hidl_string&amp; name, const hidl_vec&lt;uint8_t&gt;&amp; value) override;\012\012 Return&lt;Status&gt; setCipherAlgorithm(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId, const hidl_string&amp; algorithm) {\012 if (sessionId.size() == 0 || algorithm.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;Status&gt; setMacAlgorithm(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId, const hidl_string&amp; algorithm) {\012 if (sessionId.size() == 0 || algorithm.size() == 0) {\012 return Status::BAD_VALUE;\012 }\012 return Status::ERROR_DRM_CANNOT_HANDLE;\012 }\012\012 Return&lt;void&gt; encrypt(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; input,\012 const hidl_vec&lt;uint8_t&gt;&amp; iv,\012            encrypt_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                input.size() == 0 || iv.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; decrypt(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; input,\012 const hidl_vec&lt;uint8_t&gt;&amp; iv,\012            decrypt_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                input.size() == 0 || iv.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; sign(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012            sign_cb _hidl_cb) {\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                message.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; verify(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; keyId,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012 const hidl_vec&lt;uint8_t&gt;&amp; signature,\012            verify_cb _hidl_cb) {\012\012 if (sessionId.size() == 0 || keyId.size() == 0 ||\012                message.size() == 0 || signature.size() == 0) {\012            _hidl_cb(Status::BAD_VALUE, false);\012 return Void();\012 }\012        _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, false);\012 return Void();\012 }\012\012 Return&lt;void&gt; signRSA(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_string&amp; algorithm,\012 const hidl_vec&lt;uint8_t&gt;&amp; message,\012 const hidl_vec&lt;uint8_t&gt;&amp; wrappedKey,\012            signRSA_cb _hidl_cb) {\012 if (sessionId.size() == 0 || algorithm.size() == 0 ||\012                message.size() == 0 || wrappedKey.size() == 0) {\012             _hidl_cb(Status::BAD_VALUE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012         _hidl_cb(Status::ERROR_DRM_CANNOT_HANDLE, hidl_vec&lt;uint8_t&gt;());\012 return Void();\012 }\012\012 Return&lt;void&gt; setListener(const sp&lt;IDrmPluginListener&gt;&amp; listener) {\012        mListener = listener;\012        mListenerV1_2 = IDrmPluginListener_V1_2::castFrom(listener);\012 return Void();\012 };\012\012 Return&lt;void&gt; sendEvent(\012 EventType eventType,\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;uint8_t&gt;&amp; data) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendEvent(eventType, sessionId, data);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendEvent(eventType, sessionId, data);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendExpirationUpdate(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 int64_t expiryTimeInMS) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendExpirationUpdate(sessionId, expiryTimeInMS);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendExpirationUpdate(sessionId, expiryTimeInMS);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendKeysChange(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;KeyStatus&gt;&amp; keyStatusList, bool hasNewUsableKey) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendKeysChange(sessionId, keyStatusList, hasNewUsableKey);\012 } else if (mListener != NULL) {\012            mListener-&gt;sendKeysChange(sessionId, keyStatusList, hasNewUsableKey);\012 } else {\012            ALOGE(&quot;Null event listener, event not sent&quot;);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendKeysChange_1_2(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 const hidl_vec&lt;KeyStatus_V1_2&gt;&amp; keyStatusList, bool hasNewUsableKey) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendKeysChange_1_2(sessionId, keyStatusList, hasNewUsableKey);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; sendSessionLostState(\012 const hidl_vec&lt;uint8_t&gt;&amp; sessionId) {\012 if (mListenerV1_2 != NULL) {\012            mListenerV1_2-&gt;sendSessionLostState(sessionId);\012 }\012 return Void();\012 }\012\012 Return&lt;void&gt; getSecureStops(getSecureStops_cb _hidl_cb);\012\012 Return&lt;void&gt; getSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; secureStopId,\012            getSecureStop_cb _hidl_cb);\012\012 Return&lt;Status&gt; releaseSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; ssRelease);\012\012 Return&lt;Status&gt; releaseAllSecureStops();\012\012 Return&lt;void&gt; getSecureStopIds(getSecureStopIds_cb _hidl_cb);\012\012 Return&lt;Status&gt; releaseSecureStops(const SecureStopRelease&amp; ssRelease);\012\012 Return&lt;Status&gt; removeSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; secureStopId);\012\012 Return&lt;Status&gt; removeAllSecureStops();\012\012private:\012 void initProperties();\012 void installSecureStop(const hidl_vec&lt;uint8_t&gt;&amp; sessionId);\012 bool makeKeySetId(std::string* keySetId);\012 void setPlayPolicy();\012\012 Return&lt;Status&gt; setSecurityLevel(const hidl_vec&lt;uint8_t&gt;&amp; sessionId,\012 SecurityLevel level);\012\012 Status_V1_2 getKeyRequestCommon(const hidl_vec&lt;uint8_t&gt;&amp; scope,\012 const hidl_vec&lt;uint8_t&gt;&amp; initData,\012 const hidl_string&amp; mimeType,\012 KeyType keyType,\012 const hidl_vec&lt;KeyValue&gt;&amp; optionalParameters,\012            std::vector&lt;uint8_t&gt; *request,\012 KeyRequestType_V1_1 *getKeyRequestType,\012            std::string *defaultUrl);\012\012 struct ClearkeySecureStop {\012        std::vector&lt;uint8_t&gt; id;\012        std::vector&lt;uint8_t&gt; data;\012 };\012\012    std::map&lt;std::vector&lt;uint8_t&gt;, ClearkeySecureStop&gt; mSecureStops;\012    std::vector&lt;KeyValue&gt; mPlayPolicy;\012    std::map&lt;std::string, std::string&gt; mStringProperties;\012    std::map&lt;std::string, std::vector&lt;uint8_t&gt; &gt; mByteArrayProperties;\012    std::map&lt;std::string, std::vector&lt;uint8_t&gt; &gt; mReleaseKeysMap;\012    std::map&lt;std::vector&lt;uint8_t&gt;, SecurityLevel&gt; mSecurityLevel;\012    sp&lt;IDrmPluginListener&gt; mListener;\012    sp&lt;IDrmPluginListener_V1_2&gt; mListenerV1_2;\012 SessionLibrary *mSessionLibrary;\012 int64_t mOpenSessionOkCount;\012 int64_t mCloseSessionOkCount;\012 int64_t mCloseSessionNotOpenedCount;\012 uint32_t mNextSecureStopId;\012\012 // set by property to mock error scenarios\012 Status_V1_2 mMockError;\012\012 void processMockError(const sp&lt;Session&gt; &amp;session) {\012        session-&gt;setMockError(mMockError);\012        mMockError = Status_V1_2::OK;\012 }\012\012 DeviceFiles mFileHandle;\012 Mutex mSecureStopLock;\012\012    CLEARKEY_DISALLOW_COPY_AND_ASSIGN_AND_NEW(DrmPlugin);\012};\012\012} // namespace clearkey\012} // namespace V1_2\012} // namespace drm\012} // namespace hardware\012})<SUB>32</SUB>> ]
+"4030" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"4033" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+  "4032" -> "4033" 
+  "4030" -> "4032" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/93-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/93-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/93-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/93-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;global&gt;" {  
-"4151" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"4153" [label = <(METHOD_RETURN,ANY)> ]
-  "4151" -> "4153" 
+"4147" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"4149" [label = <(METHOD_RETURN,ANY)> ]
+  "4147" -> "4149" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/94-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/94-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/94-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/94-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteAllLicenses" {  
-"4269" [label = <(METHOD,DeleteAllLicenses)> ]
-"4272" [label = <(METHOD_RETURN,ANY)> ]
-  "4269" -> "4272" 
+"4265" [label = <(METHOD,DeleteAllLicenses)> ]
+"4268" [label = <(METHOD_RETURN,ANY)> ]
+  "4265" -> "4268" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/95-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/95-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/95-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/95-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.fieldAccess" {  
-"4273" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
-"4277" [label = <(METHOD_RETURN,ANY)> ]
-  "4273" -> "4277" 
+"4269" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
+"4273" [label = <(METHOD_RETURN,ANY)> ]
+  "4269" -> "4273" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/96-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/96-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/96-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/96-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.equals" {  
-"4278" [label = <(METHOD,&lt;operator&gt;.equals)> ]
-"4282" [label = <(METHOD_RETURN,ANY)> ]
-  "4278" -> "4282" 
+"4274" [label = <(METHOD,&lt;operator&gt;.equals)> ]
+"4278" [label = <(METHOD_RETURN,ANY)> ]
+  "4274" -> "4278" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/97-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/97-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/97-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/97-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "size" {  
-"4283" [label = <(METHOD,size)> ]
-"4286" [label = <(METHOD_RETURN,ANY)> ]
-  "4283" -> "4286" 
+"4279" [label = <(METHOD,size)> ]
+"4282" [label = <(METHOD_RETURN,ANY)> ]
+  "4279" -> "4282" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/98-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/98-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/98-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/98-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "UNUSED" {  
-"4287" [label = <(METHOD,UNUSED)> ]
-"4290" [label = <(METHOD_RETURN,ANY)> ]
-  "4287" -> "4290" 
+"4283" [label = <(METHOD,UNUSED)> ]
+"4286" [label = <(METHOD_RETURN,ANY)> ]
+  "4283" -> "4286" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/99-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/99-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/secure/out/99-cfg.dot	2023-06-07 19:37:50.997374280 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0437_1/vulnerable/out/99-cfg.dot	2023-06-07 19:37:55.507374360 +0330
@@ -1,5 +1,5 @@
 digraph "_hidl_cb" {  
-"4291" [label = <(METHOD,_hidl_cb)> ]
-"4295" [label = <(METHOD_RETURN,ANY)> ]
-  "4291" -> "4295" 
+"4287" [label = <(METHOD,_hidl_cb)> ]
+"4291" [label = <(METHOD_RETURN,ANY)> ]
+  "4287" -> "4291" 
 }

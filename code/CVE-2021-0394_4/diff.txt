diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/0-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/0-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/0-cfg.dot	2023-06-07 19:34:48.047388423 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/0-cfg.dot	2023-06-07 19:34:54.657387808 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_8" {  
-"3" [label = <(METHOD,anonymous_lambda_8)<SUB>114</SUB>> ]
-"5" [label = <(METHOD_RETURN,ANY)<SUB>114</SUB>> ]
+"3" [label = <(METHOD,anonymous_lambda_8)<SUB>113</SUB>> ]
+"5" [label = <(METHOD_RETURN,ANY)<SUB>113</SUB>> ]
   "3" -> "5" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/1-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/1-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/1-cfg.dot	2023-06-07 19:34:48.047388423 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/1-cfg.dot	2023-06-07 19:34:54.657387808 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_22" {  
-"8" [label = <(METHOD,anonymous_lambda_22)<SUB>2095</SUB>> ]
-"12" [label = <(METHOD_RETURN,ANY)<SUB>2095</SUB>> ]
+"8" [label = <(METHOD,anonymous_lambda_22)<SUB>2093</SUB>> ]
+"12" [label = <(METHOD_RETURN,ANY)<SUB>2093</SUB>> ]
   "8" -> "12" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/10-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/10-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/10-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/10-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,7 +1,7 @@
 digraph "&lt;clinit&gt;" {  
-"271" [label = <(&lt;operator&gt;.assignment,kRuntime = 0)<SUB>180</SUB>> ]
-"274" [label = <(&lt;operator&gt;.assignment,kApexModule = 1)<SUB>181</SUB>> ]
-"277" [label = <(&lt;operator&gt;.assignment,kOther = 2)<SUB>182</SUB>> ]
+"271" [label = <(&lt;operator&gt;.assignment,kRuntime = 0)<SUB>179</SUB>> ]
+"274" [label = <(&lt;operator&gt;.assignment,kApexModule = 1)<SUB>180</SUB>> ]
+"277" [label = <(&lt;operator&gt;.assignment,kOther = 2)<SUB>181</SUB>> ]
 "269" [label = <(METHOD,&lt;clinit&gt;)> ]
 "281" [label = <(METHOD_RETURN,ANY)> ]
   "271" -> "274" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/100-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/100-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/100-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/100-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,24 +1,24 @@
 digraph "CallVoidMethodV" {  
-"4631" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1314</SUB>> ]
-"4648" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1315</SUB>> ]
-"4666" [label = <(soa,soa(env))<SUB>1316</SUB>> ]
-"4668" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1317</SUB>> ]
-"4635" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1314</SUB>> ]
-"4652" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1315</SUB>> ]
-"4636" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1314</SUB>> ]
-"4640" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1314</SUB>> ]
-"4647" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1314</SUB>> ]
-"4653" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1315</SUB>> ]
-"4657" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1315</SUB>> ]
-"4664" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1315</SUB>> ]
-"4641" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1314</SUB>> ]
-"4658" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1315</SUB>> ]
-"4642" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1314</SUB>> ]
-"4644" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1314</SUB>> ]
-"4659" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1315</SUB>> ]
-"4661" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1315</SUB>> ]
-"4625" [label = <(METHOD,CallVoidMethodV)<SUB>1313</SUB>> ]
-"4673" [label = <(METHOD_RETURN,void)<SUB>1313</SUB>> ]
+"4631" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1313</SUB>> ]
+"4648" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1314</SUB>> ]
+"4666" [label = <(soa,soa(env))<SUB>1315</SUB>> ]
+"4668" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1316</SUB>> ]
+"4635" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1313</SUB>> ]
+"4652" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1314</SUB>> ]
+"4636" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1313</SUB>> ]
+"4640" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1313</SUB>> ]
+"4647" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1313</SUB>> ]
+"4653" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1314</SUB>> ]
+"4657" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1314</SUB>> ]
+"4664" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1314</SUB>> ]
+"4641" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1313</SUB>> ]
+"4658" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1314</SUB>> ]
+"4642" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1313</SUB>> ]
+"4644" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1313</SUB>> ]
+"4659" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1314</SUB>> ]
+"4661" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1314</SUB>> ]
+"4625" [label = <(METHOD,CallVoidMethodV)<SUB>1312</SUB>> ]
+"4673" [label = <(METHOD_RETURN,void)<SUB>1312</SUB>> ]
   "4631" -> "4636" 
   "4631" -> "4648" 
   "4648" -> "4653" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/101-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/101-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/101-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/101-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,24 +1,24 @@
 digraph "CallVoidMethodA" {  
-"4681" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1321</SUB>> ]
-"4698" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1322</SUB>> ]
-"4716" [label = <(soa,soa(env))<SUB>1323</SUB>> ]
-"4718" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1324</SUB>> ]
-"4685" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1321</SUB>> ]
-"4702" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1322</SUB>> ]
-"4686" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1321</SUB>> ]
-"4690" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1321</SUB>> ]
-"4697" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1321</SUB>> ]
-"4703" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1322</SUB>> ]
-"4707" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1322</SUB>> ]
-"4714" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1322</SUB>> ]
-"4691" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1321</SUB>> ]
-"4708" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1322</SUB>> ]
-"4692" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1321</SUB>> ]
-"4694" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1321</SUB>> ]
-"4709" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1322</SUB>> ]
-"4711" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1322</SUB>> ]
-"4675" [label = <(METHOD,CallVoidMethodA)<SUB>1320</SUB>> ]
-"4723" [label = <(METHOD_RETURN,void)<SUB>1320</SUB>> ]
+"4681" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1320</SUB>> ]
+"4698" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1321</SUB>> ]
+"4716" [label = <(soa,soa(env))<SUB>1322</SUB>> ]
+"4718" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1323</SUB>> ]
+"4685" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1320</SUB>> ]
+"4702" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1321</SUB>> ]
+"4686" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1320</SUB>> ]
+"4690" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1320</SUB>> ]
+"4697" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1320</SUB>> ]
+"4703" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1321</SUB>> ]
+"4707" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1321</SUB>> ]
+"4714" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1321</SUB>> ]
+"4691" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1320</SUB>> ]
+"4708" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1321</SUB>> ]
+"4692" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1320</SUB>> ]
+"4694" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1320</SUB>> ]
+"4709" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1321</SUB>> ]
+"4711" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1321</SUB>> ]
+"4675" [label = <(METHOD,CallVoidMethodA)<SUB>1319</SUB>> ]
+"4723" [label = <(METHOD_RETURN,void)<SUB>1319</SUB>> ]
   "4681" -> "4686" 
   "4681" -> "4698" 
   "4698" -> "4703" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/102-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/102-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/102-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/102-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,37 +1,37 @@
 digraph "CallNonvirtualObjectMethod" {  
-"4732" [label = <(va_start,va_start(ap, mid))<SUB>1329</SUB>> ]
-"4736" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1330</SUB>> ]
-"4739" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1331</SUB>> ]
-"4757" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1332</SUB>> ]
-"4776" [label = <(soa,soa(env))<SUB>1333</SUB>> ]
-"4779" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1334</SUB>> ]
-"4786" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1335</SUB>> ]
-"4798" [label = <(RETURN,return local_result;,return local_result;)<SUB>1336</SUB>> ]
-"4737" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1330</SUB>> ]
-"4780" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1334</SUB>> ]
-"4788" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1335</SUB>> ]
-"4789" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1335</SUB>> ]
-"4794" [label = <(GetL,result.GetL())<SUB>1335</SUB>> ]
-"4743" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1331</SUB>> ]
-"4761" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1332</SUB>> ]
-"4790" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1335</SUB>> ]
-"4795" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1335</SUB>> ]
-"4744" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1331</SUB>> ]
-"4748" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1331</SUB>> ]
-"4755" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1331</SUB>> ]
-"4762" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1332</SUB>> ]
-"4766" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1332</SUB>> ]
-"4773" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1332</SUB>> ]
-"4792" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1335</SUB>> ]
-"4797" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1335</SUB>> ]
-"4749" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1331</SUB>> ]
-"4767" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1332</SUB>> ]
-"4750" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1331</SUB>> ]
-"4752" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1331</SUB>> ]
-"4768" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1332</SUB>> ]
-"4770" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1332</SUB>> ]
-"4725" [label = <(METHOD,CallNonvirtualObjectMethod)<SUB>1327</SUB>> ]
-"4800" [label = <(METHOD_RETURN,jobject)<SUB>1327</SUB>> ]
+"4732" [label = <(va_start,va_start(ap, mid))<SUB>1328</SUB>> ]
+"4736" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1329</SUB>> ]
+"4739" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1330</SUB>> ]
+"4757" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1331</SUB>> ]
+"4776" [label = <(soa,soa(env))<SUB>1332</SUB>> ]
+"4779" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1333</SUB>> ]
+"4786" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1334</SUB>> ]
+"4798" [label = <(RETURN,return local_result;,return local_result;)<SUB>1335</SUB>> ]
+"4737" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1329</SUB>> ]
+"4780" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1333</SUB>> ]
+"4788" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1334</SUB>> ]
+"4789" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1334</SUB>> ]
+"4794" [label = <(GetL,result.GetL())<SUB>1334</SUB>> ]
+"4743" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1330</SUB>> ]
+"4761" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1331</SUB>> ]
+"4790" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1334</SUB>> ]
+"4795" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1334</SUB>> ]
+"4744" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1330</SUB>> ]
+"4748" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1330</SUB>> ]
+"4755" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1330</SUB>> ]
+"4762" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1331</SUB>> ]
+"4766" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1331</SUB>> ]
+"4773" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1331</SUB>> ]
+"4792" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1334</SUB>> ]
+"4797" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1334</SUB>> ]
+"4749" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1330</SUB>> ]
+"4767" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1331</SUB>> ]
+"4750" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1330</SUB>> ]
+"4752" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1330</SUB>> ]
+"4768" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1331</SUB>> ]
+"4770" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1331</SUB>> ]
+"4725" [label = <(METHOD,CallNonvirtualObjectMethod)<SUB>1326</SUB>> ]
+"4800" [label = <(METHOD_RETURN,jobject)<SUB>1326</SUB>> ]
   "4732" -> "4737" 
   "4736" -> "4739" 
   "4739" -> "4744" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/103-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/103-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/103-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/103-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,33 +1,33 @@
 digraph "CallNonvirtualObjectMethodV" {  
-"4809" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1341</SUB>> ]
-"4827" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1342</SUB>> ]
-"4846" [label = <(soa,soa(env))<SUB>1343</SUB>> ]
-"4849" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, args)))<SUB>1344</SUB>> ]
-"4855" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1345</SUB>> ]
-"4850" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1344</SUB>> ]
-"4856" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1345</SUB>> ]
-"4857" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1345</SUB>> ]
-"4862" [label = <(GetL,result.GetL())<SUB>1345</SUB>> ]
-"4813" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1341</SUB>> ]
-"4831" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1342</SUB>> ]
-"4858" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1345</SUB>> ]
-"4863" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1345</SUB>> ]
-"4814" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1341</SUB>> ]
-"4818" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1341</SUB>> ]
-"4825" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1341</SUB>> ]
-"4832" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1342</SUB>> ]
-"4836" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1342</SUB>> ]
-"4843" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1342</SUB>> ]
-"4860" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1345</SUB>> ]
-"4865" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1345</SUB>> ]
-"4819" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1341</SUB>> ]
-"4837" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1342</SUB>> ]
-"4820" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1341</SUB>> ]
-"4822" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1341</SUB>> ]
-"4838" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1342</SUB>> ]
-"4840" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1342</SUB>> ]
-"4802" [label = <(METHOD,CallNonvirtualObjectMethodV)<SUB>1339</SUB>> ]
-"4866" [label = <(METHOD_RETURN,jobject)<SUB>1339</SUB>> ]
+"4809" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1340</SUB>> ]
+"4827" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1341</SUB>> ]
+"4846" [label = <(soa,soa(env))<SUB>1342</SUB>> ]
+"4849" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, args)))<SUB>1343</SUB>> ]
+"4855" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1344</SUB>> ]
+"4850" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1343</SUB>> ]
+"4856" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1344</SUB>> ]
+"4857" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1344</SUB>> ]
+"4862" [label = <(GetL,result.GetL())<SUB>1344</SUB>> ]
+"4813" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1340</SUB>> ]
+"4831" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1341</SUB>> ]
+"4858" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1344</SUB>> ]
+"4863" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1344</SUB>> ]
+"4814" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1340</SUB>> ]
+"4818" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1340</SUB>> ]
+"4825" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1340</SUB>> ]
+"4832" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1341</SUB>> ]
+"4836" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1341</SUB>> ]
+"4843" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1341</SUB>> ]
+"4860" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1344</SUB>> ]
+"4865" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1344</SUB>> ]
+"4819" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1340</SUB>> ]
+"4837" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1341</SUB>> ]
+"4820" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1340</SUB>> ]
+"4822" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1340</SUB>> ]
+"4838" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1341</SUB>> ]
+"4840" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1341</SUB>> ]
+"4802" [label = <(METHOD,CallNonvirtualObjectMethodV)<SUB>1338</SUB>> ]
+"4866" [label = <(METHOD_RETURN,jobject)<SUB>1338</SUB>> ]
   "4809" -> "4814" 
   "4809" -> "4827" 
   "4827" -> "4832" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/104-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/104-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/104-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/104-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,33 +1,33 @@
 digraph "CallNonvirtualObjectMethodA" {  
-"4875" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1350</SUB>> ]
-"4893" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1351</SUB>> ]
-"4912" [label = <(soa,soa(env))<SUB>1352</SUB>> ]
-"4915" [label = <(result,result(InvokeWithJValues(soa, obj, mid, args)))<SUB>1353</SUB>> ]
-"4921" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1354</SUB>> ]
-"4916" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1353</SUB>> ]
-"4922" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1354</SUB>> ]
-"4923" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1354</SUB>> ]
-"4928" [label = <(GetL,result.GetL())<SUB>1354</SUB>> ]
-"4879" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1350</SUB>> ]
-"4897" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1351</SUB>> ]
-"4924" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1354</SUB>> ]
-"4929" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1354</SUB>> ]
-"4880" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1350</SUB>> ]
-"4884" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1350</SUB>> ]
-"4891" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1350</SUB>> ]
-"4898" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1351</SUB>> ]
-"4902" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1351</SUB>> ]
-"4909" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1351</SUB>> ]
-"4926" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1354</SUB>> ]
-"4931" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1354</SUB>> ]
-"4885" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1350</SUB>> ]
-"4903" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1351</SUB>> ]
-"4886" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1350</SUB>> ]
-"4888" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1350</SUB>> ]
-"4904" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1351</SUB>> ]
-"4906" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1351</SUB>> ]
-"4868" [label = <(METHOD,CallNonvirtualObjectMethodA)<SUB>1348</SUB>> ]
-"4932" [label = <(METHOD_RETURN,jobject)<SUB>1348</SUB>> ]
+"4875" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1349</SUB>> ]
+"4893" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1350</SUB>> ]
+"4912" [label = <(soa,soa(env))<SUB>1351</SUB>> ]
+"4915" [label = <(result,result(InvokeWithJValues(soa, obj, mid, args)))<SUB>1352</SUB>> ]
+"4921" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1353</SUB>> ]
+"4916" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1352</SUB>> ]
+"4922" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1353</SUB>> ]
+"4923" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1353</SUB>> ]
+"4928" [label = <(GetL,result.GetL())<SUB>1353</SUB>> ]
+"4879" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1349</SUB>> ]
+"4897" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1350</SUB>> ]
+"4924" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1353</SUB>> ]
+"4929" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1353</SUB>> ]
+"4880" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1349</SUB>> ]
+"4884" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1349</SUB>> ]
+"4891" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1349</SUB>> ]
+"4898" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1350</SUB>> ]
+"4902" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1350</SUB>> ]
+"4909" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1350</SUB>> ]
+"4926" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1353</SUB>> ]
+"4931" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1353</SUB>> ]
+"4885" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1349</SUB>> ]
+"4903" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1350</SUB>> ]
+"4886" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1349</SUB>> ]
+"4888" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1349</SUB>> ]
+"4904" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1350</SUB>> ]
+"4906" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1350</SUB>> ]
+"4868" [label = <(METHOD,CallNonvirtualObjectMethodA)<SUB>1347</SUB>> ]
+"4932" [label = <(METHOD_RETURN,jobject)<SUB>1347</SUB>> ]
   "4875" -> "4880" 
   "4875" -> "4893" 
   "4893" -> "4898" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/105-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/105-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/105-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/105-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualBooleanMethod" {  
-"4941" [label = <(va_start,va_start(ap, mid))<SUB>1360</SUB>> ]
-"4945" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1361</SUB>> ]
-"4948" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1362</SUB>> ]
-"4966" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1363</SUB>> ]
-"4985" [label = <(soa,soa(env))<SUB>1364</SUB>> ]
-"4988" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1365</SUB>> ]
-"4994" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1366</SUB>> ]
-"4946" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1361</SUB>> ]
-"4989" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1365</SUB>> ]
-"4995" [label = <(GetZ,result.GetZ())<SUB>1366</SUB>> ]
-"4996" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1366</SUB>> ]
-"4952" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1362</SUB>> ]
-"4970" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1363</SUB>> ]
-"4998" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1366</SUB>> ]
-"4953" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1362</SUB>> ]
-"4957" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1362</SUB>> ]
-"4964" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1362</SUB>> ]
-"4971" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1363</SUB>> ]
-"4975" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1363</SUB>> ]
-"4982" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1363</SUB>> ]
-"4958" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1362</SUB>> ]
-"4976" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1363</SUB>> ]
-"4959" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1362</SUB>> ]
-"4961" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1362</SUB>> ]
-"4977" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1363</SUB>> ]
-"4979" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1363</SUB>> ]
-"4934" [label = <(METHOD,CallNonvirtualBooleanMethod)<SUB>1357</SUB>> ]
-"4999" [label = <(METHOD_RETURN,jboolean)<SUB>1357</SUB>> ]
+"4941" [label = <(va_start,va_start(ap, mid))<SUB>1359</SUB>> ]
+"4945" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1360</SUB>> ]
+"4948" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1361</SUB>> ]
+"4966" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1362</SUB>> ]
+"4985" [label = <(soa,soa(env))<SUB>1363</SUB>> ]
+"4988" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1364</SUB>> ]
+"4994" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1365</SUB>> ]
+"4946" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1360</SUB>> ]
+"4989" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1364</SUB>> ]
+"4995" [label = <(GetZ,result.GetZ())<SUB>1365</SUB>> ]
+"4996" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1365</SUB>> ]
+"4952" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1361</SUB>> ]
+"4970" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1362</SUB>> ]
+"4998" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1365</SUB>> ]
+"4953" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1361</SUB>> ]
+"4957" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1361</SUB>> ]
+"4964" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1361</SUB>> ]
+"4971" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1362</SUB>> ]
+"4975" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1362</SUB>> ]
+"4982" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1362</SUB>> ]
+"4958" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1361</SUB>> ]
+"4976" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1362</SUB>> ]
+"4959" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1361</SUB>> ]
+"4961" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1361</SUB>> ]
+"4977" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1362</SUB>> ]
+"4979" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1362</SUB>> ]
+"4934" [label = <(METHOD,CallNonvirtualBooleanMethod)<SUB>1356</SUB>> ]
+"4999" [label = <(METHOD_RETURN,jboolean)<SUB>1356</SUB>> ]
   "4941" -> "4946" 
   "4945" -> "4948" 
   "4948" -> "4953" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/106-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/106-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/106-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/106-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualBooleanMethodV" {  
-"5008" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1371</SUB>> ]
-"5026" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1372</SUB>> ]
-"5045" [label = <(soa,soa(env))<SUB>1373</SUB>> ]
-"5047" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>1374</SUB>> ]
-"5048" [label = <(GetZ,InvokeWithVarArgs(soa, obj, mid, args).GetZ())<SUB>1374</SUB>> ]
-"5049" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetZ)<SUB>1374</SUB>> ]
-"5012" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1371</SUB>> ]
-"5030" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1372</SUB>> ]
-"5050" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1374</SUB>> ]
-"5055" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1374</SUB>> ]
-"5013" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1371</SUB>> ]
-"5017" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1371</SUB>> ]
-"5024" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1371</SUB>> ]
-"5031" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1372</SUB>> ]
-"5035" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1372</SUB>> ]
-"5042" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1372</SUB>> ]
-"5018" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1371</SUB>> ]
-"5036" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1372</SUB>> ]
-"5019" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1371</SUB>> ]
-"5021" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1371</SUB>> ]
-"5037" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1372</SUB>> ]
-"5039" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1372</SUB>> ]
-"5001" [label = <(METHOD,CallNonvirtualBooleanMethodV)<SUB>1369</SUB>> ]
-"5056" [label = <(METHOD_RETURN,jboolean)<SUB>1369</SUB>> ]
+"5008" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1370</SUB>> ]
+"5026" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1371</SUB>> ]
+"5045" [label = <(soa,soa(env))<SUB>1372</SUB>> ]
+"5047" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>1373</SUB>> ]
+"5048" [label = <(GetZ,InvokeWithVarArgs(soa, obj, mid, args).GetZ())<SUB>1373</SUB>> ]
+"5049" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetZ)<SUB>1373</SUB>> ]
+"5012" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1370</SUB>> ]
+"5030" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1371</SUB>> ]
+"5050" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1373</SUB>> ]
+"5055" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1373</SUB>> ]
+"5013" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1370</SUB>> ]
+"5017" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1370</SUB>> ]
+"5024" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1370</SUB>> ]
+"5031" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1371</SUB>> ]
+"5035" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1371</SUB>> ]
+"5042" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1371</SUB>> ]
+"5018" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1370</SUB>> ]
+"5036" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1371</SUB>> ]
+"5019" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1370</SUB>> ]
+"5021" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1370</SUB>> ]
+"5037" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1371</SUB>> ]
+"5039" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1371</SUB>> ]
+"5001" [label = <(METHOD,CallNonvirtualBooleanMethodV)<SUB>1368</SUB>> ]
+"5056" [label = <(METHOD_RETURN,jboolean)<SUB>1368</SUB>> ]
   "5008" -> "5013" 
   "5008" -> "5026" 
   "5026" -> "5031" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/107-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/107-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/107-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/107-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualBooleanMethodA" {  
-"5065" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1379</SUB>> ]
-"5083" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1380</SUB>> ]
-"5102" [label = <(soa,soa(env))<SUB>1381</SUB>> ]
-"5104" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetZ();,return InvokeWithJValues(soa, obj, mid, args).GetZ();)<SUB>1382</SUB>> ]
-"5105" [label = <(GetZ,InvokeWithJValues(soa, obj, mid, args).GetZ())<SUB>1382</SUB>> ]
-"5106" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetZ)<SUB>1382</SUB>> ]
-"5069" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1379</SUB>> ]
-"5087" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1380</SUB>> ]
-"5107" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1382</SUB>> ]
-"5112" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1382</SUB>> ]
-"5070" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1379</SUB>> ]
-"5074" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1379</SUB>> ]
-"5081" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1379</SUB>> ]
-"5088" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1380</SUB>> ]
-"5092" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1380</SUB>> ]
-"5099" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1380</SUB>> ]
-"5075" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1379</SUB>> ]
-"5093" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1380</SUB>> ]
-"5076" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1379</SUB>> ]
-"5078" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1379</SUB>> ]
-"5094" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1380</SUB>> ]
-"5096" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1380</SUB>> ]
-"5058" [label = <(METHOD,CallNonvirtualBooleanMethodA)<SUB>1377</SUB>> ]
-"5113" [label = <(METHOD_RETURN,jboolean)<SUB>1377</SUB>> ]
+"5065" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1378</SUB>> ]
+"5083" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1379</SUB>> ]
+"5102" [label = <(soa,soa(env))<SUB>1380</SUB>> ]
+"5104" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetZ();,return InvokeWithJValues(soa, obj, mid, args).GetZ();)<SUB>1381</SUB>> ]
+"5105" [label = <(GetZ,InvokeWithJValues(soa, obj, mid, args).GetZ())<SUB>1381</SUB>> ]
+"5106" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetZ)<SUB>1381</SUB>> ]
+"5069" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1378</SUB>> ]
+"5087" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1379</SUB>> ]
+"5107" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1381</SUB>> ]
+"5112" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1381</SUB>> ]
+"5070" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1378</SUB>> ]
+"5074" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1378</SUB>> ]
+"5081" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1378</SUB>> ]
+"5088" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1379</SUB>> ]
+"5092" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1379</SUB>> ]
+"5099" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1379</SUB>> ]
+"5075" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1378</SUB>> ]
+"5093" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1379</SUB>> ]
+"5076" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1378</SUB>> ]
+"5078" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1378</SUB>> ]
+"5094" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1379</SUB>> ]
+"5096" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1379</SUB>> ]
+"5058" [label = <(METHOD,CallNonvirtualBooleanMethodA)<SUB>1376</SUB>> ]
+"5113" [label = <(METHOD_RETURN,jboolean)<SUB>1376</SUB>> ]
   "5065" -> "5070" 
   "5065" -> "5083" 
   "5083" -> "5088" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/108-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/108-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/108-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/108-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualByteMethod" {  
-"5122" [label = <(va_start,va_start(ap, mid))<SUB>1387</SUB>> ]
-"5126" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1388</SUB>> ]
-"5129" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1389</SUB>> ]
-"5147" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1390</SUB>> ]
-"5166" [label = <(soa,soa(env))<SUB>1391</SUB>> ]
-"5169" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1392</SUB>> ]
-"5175" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1393</SUB>> ]
-"5127" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1388</SUB>> ]
-"5170" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1392</SUB>> ]
-"5176" [label = <(GetB,result.GetB())<SUB>1393</SUB>> ]
-"5177" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1393</SUB>> ]
-"5133" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1389</SUB>> ]
-"5151" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1390</SUB>> ]
-"5179" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1393</SUB>> ]
-"5134" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1389</SUB>> ]
-"5138" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1389</SUB>> ]
-"5145" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1389</SUB>> ]
-"5152" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1390</SUB>> ]
-"5156" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1390</SUB>> ]
-"5163" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1390</SUB>> ]
-"5139" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1389</SUB>> ]
-"5157" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1390</SUB>> ]
-"5140" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1389</SUB>> ]
-"5142" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1389</SUB>> ]
-"5158" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1390</SUB>> ]
-"5160" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1390</SUB>> ]
-"5115" [label = <(METHOD,CallNonvirtualByteMethod)<SUB>1385</SUB>> ]
-"5180" [label = <(METHOD_RETURN,jbyte)<SUB>1385</SUB>> ]
+"5122" [label = <(va_start,va_start(ap, mid))<SUB>1386</SUB>> ]
+"5126" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1387</SUB>> ]
+"5129" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1388</SUB>> ]
+"5147" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1389</SUB>> ]
+"5166" [label = <(soa,soa(env))<SUB>1390</SUB>> ]
+"5169" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1391</SUB>> ]
+"5175" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1392</SUB>> ]
+"5127" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1387</SUB>> ]
+"5170" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1391</SUB>> ]
+"5176" [label = <(GetB,result.GetB())<SUB>1392</SUB>> ]
+"5177" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1392</SUB>> ]
+"5133" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1388</SUB>> ]
+"5151" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1389</SUB>> ]
+"5179" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1392</SUB>> ]
+"5134" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1388</SUB>> ]
+"5138" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1388</SUB>> ]
+"5145" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1388</SUB>> ]
+"5152" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1389</SUB>> ]
+"5156" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1389</SUB>> ]
+"5163" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1389</SUB>> ]
+"5139" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1388</SUB>> ]
+"5157" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1389</SUB>> ]
+"5140" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1388</SUB>> ]
+"5142" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1388</SUB>> ]
+"5158" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1389</SUB>> ]
+"5160" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1389</SUB>> ]
+"5115" [label = <(METHOD,CallNonvirtualByteMethod)<SUB>1384</SUB>> ]
+"5180" [label = <(METHOD_RETURN,jbyte)<SUB>1384</SUB>> ]
   "5122" -> "5127" 
   "5126" -> "5129" 
   "5129" -> "5134" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/109-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/109-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/109-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/109-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualByteMethodV" {  
-"5189" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1398</SUB>> ]
-"5207" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1399</SUB>> ]
-"5226" [label = <(soa,soa(env))<SUB>1400</SUB>> ]
-"5228" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetB();,return InvokeWithVarArgs(soa, obj, mid, args).GetB();)<SUB>1401</SUB>> ]
-"5229" [label = <(GetB,InvokeWithVarArgs(soa, obj, mid, args).GetB())<SUB>1401</SUB>> ]
-"5230" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetB)<SUB>1401</SUB>> ]
-"5193" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1398</SUB>> ]
-"5211" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1399</SUB>> ]
-"5231" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1401</SUB>> ]
-"5236" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1401</SUB>> ]
-"5194" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1398</SUB>> ]
-"5198" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1398</SUB>> ]
-"5205" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1398</SUB>> ]
-"5212" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1399</SUB>> ]
-"5216" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1399</SUB>> ]
-"5223" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1399</SUB>> ]
-"5199" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1398</SUB>> ]
-"5217" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1399</SUB>> ]
-"5200" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1398</SUB>> ]
-"5202" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1398</SUB>> ]
-"5218" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1399</SUB>> ]
-"5220" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1399</SUB>> ]
-"5182" [label = <(METHOD,CallNonvirtualByteMethodV)<SUB>1396</SUB>> ]
-"5237" [label = <(METHOD_RETURN,jbyte)<SUB>1396</SUB>> ]
+"5189" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1397</SUB>> ]
+"5207" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1398</SUB>> ]
+"5226" [label = <(soa,soa(env))<SUB>1399</SUB>> ]
+"5228" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetB();,return InvokeWithVarArgs(soa, obj, mid, args).GetB();)<SUB>1400</SUB>> ]
+"5229" [label = <(GetB,InvokeWithVarArgs(soa, obj, mid, args).GetB())<SUB>1400</SUB>> ]
+"5230" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetB)<SUB>1400</SUB>> ]
+"5193" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1397</SUB>> ]
+"5211" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1398</SUB>> ]
+"5231" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1400</SUB>> ]
+"5236" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1400</SUB>> ]
+"5194" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1397</SUB>> ]
+"5198" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1397</SUB>> ]
+"5205" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1397</SUB>> ]
+"5212" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1398</SUB>> ]
+"5216" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1398</SUB>> ]
+"5223" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1398</SUB>> ]
+"5199" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1397</SUB>> ]
+"5217" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1398</SUB>> ]
+"5200" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1397</SUB>> ]
+"5202" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1397</SUB>> ]
+"5218" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1398</SUB>> ]
+"5220" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1398</SUB>> ]
+"5182" [label = <(METHOD,CallNonvirtualByteMethodV)<SUB>1395</SUB>> ]
+"5237" [label = <(METHOD_RETURN,jbyte)<SUB>1395</SUB>> ]
   "5189" -> "5194" 
   "5189" -> "5207" 
   "5207" -> "5212" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/11-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/11-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/11-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/11-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,16 +1,16 @@
 digraph "operator &lt;&lt;" {  
-"313" [label = <(RETURN,return os;,return os;)<SUB>197</SUB>> ]
-"290" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kRuntime)<SUB>187</SUB>> ]
-"293" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;Runtime&quot;)<SUB>188</SUB>> ]
-"298" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kApexModule)<SUB>190</SUB>> ]
-"301" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;APEX Module&quot;)<SUB>191</SUB>> ]
-"306" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kOther)<SUB>193</SUB>> ]
-"309" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;Other&quot;)<SUB>194</SUB>> ]
-"292" [label = <(FIELD_IDENTIFIER,kRuntime,kRuntime)<SUB>187</SUB>> ]
-"300" [label = <(FIELD_IDENTIFIER,kApexModule,kApexModule)<SUB>190</SUB>> ]
-"308" [label = <(FIELD_IDENTIFIER,kOther,kOther)<SUB>193</SUB>> ]
-"282" [label = <(METHOD,operator &lt;&lt;)<SUB>185</SUB>> ]
-"315" [label = <(METHOD_RETURN,ostream)<SUB>185</SUB>> ]
+"313" [label = <(RETURN,return os;,return os;)<SUB>196</SUB>> ]
+"290" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kRuntime)<SUB>186</SUB>> ]
+"293" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;Runtime&quot;)<SUB>187</SUB>> ]
+"298" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kApexModule)<SUB>189</SUB>> ]
+"301" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;APEX Module&quot;)<SUB>190</SUB>> ]
+"306" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kOther)<SUB>192</SUB>> ]
+"309" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;Other&quot;)<SUB>193</SUB>> ]
+"292" [label = <(FIELD_IDENTIFIER,kRuntime,kRuntime)<SUB>186</SUB>> ]
+"300" [label = <(FIELD_IDENTIFIER,kApexModule,kApexModule)<SUB>189</SUB>> ]
+"308" [label = <(FIELD_IDENTIFIER,kOther,kOther)<SUB>192</SUB>> ]
+"282" [label = <(METHOD,operator &lt;&lt;)<SUB>184</SUB>> ]
+"315" [label = <(METHOD_RETURN,ostream)<SUB>184</SUB>> ]
   "313" -> "315" 
   "290" -> "293" 
   "293" -> "313" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/110-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/110-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/110-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/110-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualByteMethodA" {  
-"5246" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1406</SUB>> ]
-"5264" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1407</SUB>> ]
-"5283" [label = <(soa,soa(env))<SUB>1408</SUB>> ]
-"5285" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetB();,return InvokeWithJValues(soa, obj, mid, args).GetB();)<SUB>1409</SUB>> ]
-"5286" [label = <(GetB,InvokeWithJValues(soa, obj, mid, args).GetB())<SUB>1409</SUB>> ]
-"5287" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetB)<SUB>1409</SUB>> ]
-"5250" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1406</SUB>> ]
-"5268" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1407</SUB>> ]
-"5288" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1409</SUB>> ]
-"5293" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1409</SUB>> ]
-"5251" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1406</SUB>> ]
-"5255" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1406</SUB>> ]
-"5262" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1406</SUB>> ]
-"5269" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1407</SUB>> ]
-"5273" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1407</SUB>> ]
-"5280" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1407</SUB>> ]
-"5256" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1406</SUB>> ]
-"5274" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1407</SUB>> ]
-"5257" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1406</SUB>> ]
-"5259" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1406</SUB>> ]
-"5275" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1407</SUB>> ]
-"5277" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1407</SUB>> ]
-"5239" [label = <(METHOD,CallNonvirtualByteMethodA)<SUB>1404</SUB>> ]
-"5294" [label = <(METHOD_RETURN,jbyte)<SUB>1404</SUB>> ]
+"5246" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1405</SUB>> ]
+"5264" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1406</SUB>> ]
+"5283" [label = <(soa,soa(env))<SUB>1407</SUB>> ]
+"5285" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetB();,return InvokeWithJValues(soa, obj, mid, args).GetB();)<SUB>1408</SUB>> ]
+"5286" [label = <(GetB,InvokeWithJValues(soa, obj, mid, args).GetB())<SUB>1408</SUB>> ]
+"5287" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetB)<SUB>1408</SUB>> ]
+"5250" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1405</SUB>> ]
+"5268" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1406</SUB>> ]
+"5288" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1408</SUB>> ]
+"5293" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1408</SUB>> ]
+"5251" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1405</SUB>> ]
+"5255" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1405</SUB>> ]
+"5262" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1405</SUB>> ]
+"5269" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1406</SUB>> ]
+"5273" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1406</SUB>> ]
+"5280" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1406</SUB>> ]
+"5256" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1405</SUB>> ]
+"5274" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1406</SUB>> ]
+"5257" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1405</SUB>> ]
+"5259" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1405</SUB>> ]
+"5275" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1406</SUB>> ]
+"5277" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1406</SUB>> ]
+"5239" [label = <(METHOD,CallNonvirtualByteMethodA)<SUB>1403</SUB>> ]
+"5294" [label = <(METHOD_RETURN,jbyte)<SUB>1403</SUB>> ]
   "5246" -> "5251" 
   "5246" -> "5264" 
   "5264" -> "5269" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/111-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/111-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/111-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/111-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualCharMethod" {  
-"5303" [label = <(va_start,va_start(ap, mid))<SUB>1414</SUB>> ]
-"5307" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1415</SUB>> ]
-"5310" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1416</SUB>> ]
-"5328" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1417</SUB>> ]
-"5347" [label = <(soa,soa(env))<SUB>1418</SUB>> ]
-"5350" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1419</SUB>> ]
-"5356" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1420</SUB>> ]
-"5308" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1415</SUB>> ]
-"5351" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1419</SUB>> ]
-"5357" [label = <(GetC,result.GetC())<SUB>1420</SUB>> ]
-"5358" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1420</SUB>> ]
-"5314" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1416</SUB>> ]
-"5332" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1417</SUB>> ]
-"5360" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1420</SUB>> ]
-"5315" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1416</SUB>> ]
-"5319" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1416</SUB>> ]
-"5326" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1416</SUB>> ]
-"5333" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1417</SUB>> ]
-"5337" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1417</SUB>> ]
-"5344" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1417</SUB>> ]
-"5320" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1416</SUB>> ]
-"5338" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1417</SUB>> ]
-"5321" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1416</SUB>> ]
-"5323" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1416</SUB>> ]
-"5339" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1417</SUB>> ]
-"5341" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1417</SUB>> ]
-"5296" [label = <(METHOD,CallNonvirtualCharMethod)<SUB>1412</SUB>> ]
-"5361" [label = <(METHOD_RETURN,jchar)<SUB>1412</SUB>> ]
+"5303" [label = <(va_start,va_start(ap, mid))<SUB>1413</SUB>> ]
+"5307" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1414</SUB>> ]
+"5310" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1415</SUB>> ]
+"5328" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1416</SUB>> ]
+"5347" [label = <(soa,soa(env))<SUB>1417</SUB>> ]
+"5350" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1418</SUB>> ]
+"5356" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1419</SUB>> ]
+"5308" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1414</SUB>> ]
+"5351" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1418</SUB>> ]
+"5357" [label = <(GetC,result.GetC())<SUB>1419</SUB>> ]
+"5358" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1419</SUB>> ]
+"5314" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1415</SUB>> ]
+"5332" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1416</SUB>> ]
+"5360" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1419</SUB>> ]
+"5315" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1415</SUB>> ]
+"5319" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1415</SUB>> ]
+"5326" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1415</SUB>> ]
+"5333" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1416</SUB>> ]
+"5337" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1416</SUB>> ]
+"5344" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1416</SUB>> ]
+"5320" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1415</SUB>> ]
+"5338" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1416</SUB>> ]
+"5321" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1415</SUB>> ]
+"5323" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1415</SUB>> ]
+"5339" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1416</SUB>> ]
+"5341" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1416</SUB>> ]
+"5296" [label = <(METHOD,CallNonvirtualCharMethod)<SUB>1411</SUB>> ]
+"5361" [label = <(METHOD_RETURN,jchar)<SUB>1411</SUB>> ]
   "5303" -> "5308" 
   "5307" -> "5310" 
   "5310" -> "5315" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/112-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/112-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/112-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/112-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualCharMethodV" {  
-"5370" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1425</SUB>> ]
-"5388" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1426</SUB>> ]
-"5407" [label = <(soa,soa(env))<SUB>1427</SUB>> ]
-"5409" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetC();,return InvokeWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1428</SUB>> ]
-"5410" [label = <(GetC,InvokeWithVarArgs(soa, obj, mid, args).GetC())<SUB>1428</SUB>> ]
-"5411" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetC)<SUB>1428</SUB>> ]
-"5374" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1425</SUB>> ]
-"5392" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1426</SUB>> ]
-"5412" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1428</SUB>> ]
-"5417" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1428</SUB>> ]
-"5375" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1425</SUB>> ]
-"5379" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1425</SUB>> ]
-"5386" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1425</SUB>> ]
-"5393" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1426</SUB>> ]
-"5397" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1426</SUB>> ]
-"5404" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1426</SUB>> ]
-"5380" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1425</SUB>> ]
-"5398" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1426</SUB>> ]
-"5381" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1425</SUB>> ]
-"5383" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1425</SUB>> ]
-"5399" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1426</SUB>> ]
-"5401" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1426</SUB>> ]
-"5363" [label = <(METHOD,CallNonvirtualCharMethodV)<SUB>1423</SUB>> ]
-"5418" [label = <(METHOD_RETURN,jchar)<SUB>1423</SUB>> ]
+"5370" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1424</SUB>> ]
+"5388" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1425</SUB>> ]
+"5407" [label = <(soa,soa(env))<SUB>1426</SUB>> ]
+"5409" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetC();,return InvokeWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1427</SUB>> ]
+"5410" [label = <(GetC,InvokeWithVarArgs(soa, obj, mid, args).GetC())<SUB>1427</SUB>> ]
+"5411" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetC)<SUB>1427</SUB>> ]
+"5374" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1424</SUB>> ]
+"5392" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1425</SUB>> ]
+"5412" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1427</SUB>> ]
+"5417" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1427</SUB>> ]
+"5375" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1424</SUB>> ]
+"5379" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1424</SUB>> ]
+"5386" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1424</SUB>> ]
+"5393" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1425</SUB>> ]
+"5397" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1425</SUB>> ]
+"5404" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1425</SUB>> ]
+"5380" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1424</SUB>> ]
+"5398" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1425</SUB>> ]
+"5381" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1424</SUB>> ]
+"5383" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1424</SUB>> ]
+"5399" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1425</SUB>> ]
+"5401" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1425</SUB>> ]
+"5363" [label = <(METHOD,CallNonvirtualCharMethodV)<SUB>1422</SUB>> ]
+"5418" [label = <(METHOD_RETURN,jchar)<SUB>1422</SUB>> ]
   "5370" -> "5375" 
   "5370" -> "5388" 
   "5388" -> "5393" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/113-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/113-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/113-cfg.dot	2023-06-07 19:34:48.337388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/113-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualCharMethodA" {  
-"5427" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1433</SUB>> ]
-"5445" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1434</SUB>> ]
-"5464" [label = <(soa,soa(env))<SUB>1435</SUB>> ]
-"5466" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetC();,return InvokeWithJValues(soa, obj, mid, args).GetC();)<SUB>1436</SUB>> ]
-"5467" [label = <(GetC,InvokeWithJValues(soa, obj, mid, args).GetC())<SUB>1436</SUB>> ]
-"5468" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetC)<SUB>1436</SUB>> ]
-"5431" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1433</SUB>> ]
-"5449" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1434</SUB>> ]
-"5469" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1436</SUB>> ]
-"5474" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1436</SUB>> ]
-"5432" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1433</SUB>> ]
-"5436" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1433</SUB>> ]
-"5443" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1433</SUB>> ]
-"5450" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1434</SUB>> ]
-"5454" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1434</SUB>> ]
-"5461" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1434</SUB>> ]
-"5437" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1433</SUB>> ]
-"5455" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1434</SUB>> ]
-"5438" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1433</SUB>> ]
-"5440" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1433</SUB>> ]
-"5456" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1434</SUB>> ]
-"5458" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1434</SUB>> ]
-"5420" [label = <(METHOD,CallNonvirtualCharMethodA)<SUB>1431</SUB>> ]
-"5475" [label = <(METHOD_RETURN,jchar)<SUB>1431</SUB>> ]
+"5427" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1432</SUB>> ]
+"5445" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1433</SUB>> ]
+"5464" [label = <(soa,soa(env))<SUB>1434</SUB>> ]
+"5466" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetC();,return InvokeWithJValues(soa, obj, mid, args).GetC();)<SUB>1435</SUB>> ]
+"5467" [label = <(GetC,InvokeWithJValues(soa, obj, mid, args).GetC())<SUB>1435</SUB>> ]
+"5468" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetC)<SUB>1435</SUB>> ]
+"5431" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1432</SUB>> ]
+"5449" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1433</SUB>> ]
+"5469" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1435</SUB>> ]
+"5474" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1435</SUB>> ]
+"5432" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1432</SUB>> ]
+"5436" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1432</SUB>> ]
+"5443" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1432</SUB>> ]
+"5450" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1433</SUB>> ]
+"5454" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1433</SUB>> ]
+"5461" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1433</SUB>> ]
+"5437" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1432</SUB>> ]
+"5455" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1433</SUB>> ]
+"5438" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1432</SUB>> ]
+"5440" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1432</SUB>> ]
+"5456" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1433</SUB>> ]
+"5458" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1433</SUB>> ]
+"5420" [label = <(METHOD,CallNonvirtualCharMethodA)<SUB>1430</SUB>> ]
+"5475" [label = <(METHOD_RETURN,jchar)<SUB>1430</SUB>> ]
   "5427" -> "5432" 
   "5427" -> "5445" 
   "5445" -> "5450" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/114-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/114-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/114-cfg.dot	2023-06-07 19:34:48.347388395 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/114-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualShortMethod" {  
-"5484" [label = <(va_start,va_start(ap, mid))<SUB>1441</SUB>> ]
-"5488" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1442</SUB>> ]
-"5491" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1443</SUB>> ]
-"5509" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1444</SUB>> ]
-"5528" [label = <(soa,soa(env))<SUB>1445</SUB>> ]
-"5531" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1446</SUB>> ]
-"5537" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1447</SUB>> ]
-"5489" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1442</SUB>> ]
-"5532" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1446</SUB>> ]
-"5538" [label = <(GetS,result.GetS())<SUB>1447</SUB>> ]
-"5539" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1447</SUB>> ]
-"5495" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1443</SUB>> ]
-"5513" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1444</SUB>> ]
-"5541" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1447</SUB>> ]
-"5496" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1443</SUB>> ]
-"5500" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1443</SUB>> ]
-"5507" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1443</SUB>> ]
-"5514" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1444</SUB>> ]
-"5518" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1444</SUB>> ]
-"5525" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1444</SUB>> ]
-"5501" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1443</SUB>> ]
-"5519" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1444</SUB>> ]
-"5502" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1443</SUB>> ]
-"5504" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1443</SUB>> ]
-"5520" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1444</SUB>> ]
-"5522" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1444</SUB>> ]
-"5477" [label = <(METHOD,CallNonvirtualShortMethod)<SUB>1439</SUB>> ]
-"5542" [label = <(METHOD_RETURN,jshort)<SUB>1439</SUB>> ]
+"5484" [label = <(va_start,va_start(ap, mid))<SUB>1440</SUB>> ]
+"5488" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1441</SUB>> ]
+"5491" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1442</SUB>> ]
+"5509" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1443</SUB>> ]
+"5528" [label = <(soa,soa(env))<SUB>1444</SUB>> ]
+"5531" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1445</SUB>> ]
+"5537" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1446</SUB>> ]
+"5489" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1441</SUB>> ]
+"5532" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1445</SUB>> ]
+"5538" [label = <(GetS,result.GetS())<SUB>1446</SUB>> ]
+"5539" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1446</SUB>> ]
+"5495" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1442</SUB>> ]
+"5513" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1443</SUB>> ]
+"5541" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1446</SUB>> ]
+"5496" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1442</SUB>> ]
+"5500" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1442</SUB>> ]
+"5507" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1442</SUB>> ]
+"5514" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1443</SUB>> ]
+"5518" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1443</SUB>> ]
+"5525" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1443</SUB>> ]
+"5501" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1442</SUB>> ]
+"5519" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1443</SUB>> ]
+"5502" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1442</SUB>> ]
+"5504" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1442</SUB>> ]
+"5520" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1443</SUB>> ]
+"5522" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1443</SUB>> ]
+"5477" [label = <(METHOD,CallNonvirtualShortMethod)<SUB>1438</SUB>> ]
+"5542" [label = <(METHOD_RETURN,jshort)<SUB>1438</SUB>> ]
   "5484" -> "5489" 
   "5488" -> "5491" 
   "5491" -> "5496" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/115-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/115-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/115-cfg.dot	2023-06-07 19:34:48.347388395 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/115-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualShortMethodV" {  
-"5551" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1452</SUB>> ]
-"5569" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1453</SUB>> ]
-"5588" [label = <(soa,soa(env))<SUB>1454</SUB>> ]
-"5590" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetS();,return InvokeWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1455</SUB>> ]
-"5591" [label = <(GetS,InvokeWithVarArgs(soa, obj, mid, args).GetS())<SUB>1455</SUB>> ]
-"5592" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetS)<SUB>1455</SUB>> ]
-"5555" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1452</SUB>> ]
-"5573" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1453</SUB>> ]
-"5593" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1455</SUB>> ]
-"5598" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1455</SUB>> ]
-"5556" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1452</SUB>> ]
-"5560" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1452</SUB>> ]
-"5567" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1452</SUB>> ]
-"5574" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1453</SUB>> ]
-"5578" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1453</SUB>> ]
-"5585" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1453</SUB>> ]
-"5561" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1452</SUB>> ]
-"5579" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1453</SUB>> ]
-"5562" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1452</SUB>> ]
-"5564" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1452</SUB>> ]
-"5580" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1453</SUB>> ]
-"5582" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1453</SUB>> ]
-"5544" [label = <(METHOD,CallNonvirtualShortMethodV)<SUB>1450</SUB>> ]
-"5599" [label = <(METHOD_RETURN,jshort)<SUB>1450</SUB>> ]
+"5551" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1451</SUB>> ]
+"5569" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1452</SUB>> ]
+"5588" [label = <(soa,soa(env))<SUB>1453</SUB>> ]
+"5590" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetS();,return InvokeWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1454</SUB>> ]
+"5591" [label = <(GetS,InvokeWithVarArgs(soa, obj, mid, args).GetS())<SUB>1454</SUB>> ]
+"5592" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetS)<SUB>1454</SUB>> ]
+"5555" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1451</SUB>> ]
+"5573" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1452</SUB>> ]
+"5593" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1454</SUB>> ]
+"5598" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1454</SUB>> ]
+"5556" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1451</SUB>> ]
+"5560" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1451</SUB>> ]
+"5567" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1451</SUB>> ]
+"5574" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1452</SUB>> ]
+"5578" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1452</SUB>> ]
+"5585" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1452</SUB>> ]
+"5561" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1451</SUB>> ]
+"5579" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1452</SUB>> ]
+"5562" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1451</SUB>> ]
+"5564" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1451</SUB>> ]
+"5580" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1452</SUB>> ]
+"5582" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1452</SUB>> ]
+"5544" [label = <(METHOD,CallNonvirtualShortMethodV)<SUB>1449</SUB>> ]
+"5599" [label = <(METHOD_RETURN,jshort)<SUB>1449</SUB>> ]
   "5551" -> "5556" 
   "5551" -> "5569" 
   "5569" -> "5574" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/116-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/116-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/116-cfg.dot	2023-06-07 19:34:48.347388395 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/116-cfg.dot	2023-06-07 19:34:54.937387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualShortMethodA" {  
-"5608" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1460</SUB>> ]
-"5626" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1461</SUB>> ]
-"5645" [label = <(soa,soa(env))<SUB>1462</SUB>> ]
-"5647" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetS();,return InvokeWithJValues(soa, obj, mid, args).GetS();)<SUB>1463</SUB>> ]
-"5648" [label = <(GetS,InvokeWithJValues(soa, obj, mid, args).GetS())<SUB>1463</SUB>> ]
-"5649" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetS)<SUB>1463</SUB>> ]
-"5612" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1460</SUB>> ]
-"5630" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1461</SUB>> ]
-"5650" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1463</SUB>> ]
-"5655" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1463</SUB>> ]
-"5613" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1460</SUB>> ]
-"5617" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1460</SUB>> ]
-"5624" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1460</SUB>> ]
-"5631" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1461</SUB>> ]
-"5635" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1461</SUB>> ]
-"5642" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1461</SUB>> ]
-"5618" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1460</SUB>> ]
-"5636" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1461</SUB>> ]
-"5619" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1460</SUB>> ]
-"5621" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1460</SUB>> ]
-"5637" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1461</SUB>> ]
-"5639" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1461</SUB>> ]
-"5601" [label = <(METHOD,CallNonvirtualShortMethodA)<SUB>1458</SUB>> ]
-"5656" [label = <(METHOD_RETURN,jshort)<SUB>1458</SUB>> ]
+"5608" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1459</SUB>> ]
+"5626" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1460</SUB>> ]
+"5645" [label = <(soa,soa(env))<SUB>1461</SUB>> ]
+"5647" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetS();,return InvokeWithJValues(soa, obj, mid, args).GetS();)<SUB>1462</SUB>> ]
+"5648" [label = <(GetS,InvokeWithJValues(soa, obj, mid, args).GetS())<SUB>1462</SUB>> ]
+"5649" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetS)<SUB>1462</SUB>> ]
+"5612" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1459</SUB>> ]
+"5630" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1460</SUB>> ]
+"5650" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1462</SUB>> ]
+"5655" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1462</SUB>> ]
+"5613" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1459</SUB>> ]
+"5617" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1459</SUB>> ]
+"5624" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1459</SUB>> ]
+"5631" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1460</SUB>> ]
+"5635" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1460</SUB>> ]
+"5642" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1460</SUB>> ]
+"5618" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1459</SUB>> ]
+"5636" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1460</SUB>> ]
+"5619" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1459</SUB>> ]
+"5621" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1459</SUB>> ]
+"5637" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1460</SUB>> ]
+"5639" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1460</SUB>> ]
+"5601" [label = <(METHOD,CallNonvirtualShortMethodA)<SUB>1457</SUB>> ]
+"5656" [label = <(METHOD_RETURN,jshort)<SUB>1457</SUB>> ]
   "5608" -> "5613" 
   "5608" -> "5626" 
   "5626" -> "5631" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/117-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/117-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/117-cfg.dot	2023-06-07 19:34:48.347388395 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/117-cfg.dot	2023-06-07 19:34:54.947387780 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualIntMethod" {  
-"5665" [label = <(va_start,va_start(ap, mid))<SUB>1468</SUB>> ]
-"5669" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1469</SUB>> ]
-"5672" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1470</SUB>> ]
-"5690" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1471</SUB>> ]
-"5709" [label = <(soa,soa(env))<SUB>1472</SUB>> ]
-"5712" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1473</SUB>> ]
-"5718" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1474</SUB>> ]
-"5670" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1469</SUB>> ]
-"5713" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1473</SUB>> ]
-"5719" [label = <(GetI,result.GetI())<SUB>1474</SUB>> ]
-"5720" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1474</SUB>> ]
-"5676" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1470</SUB>> ]
-"5694" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1471</SUB>> ]
-"5722" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1474</SUB>> ]
-"5677" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1470</SUB>> ]
-"5681" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1470</SUB>> ]
-"5688" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1470</SUB>> ]
-"5695" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1471</SUB>> ]
-"5699" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1471</SUB>> ]
-"5706" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1471</SUB>> ]
-"5682" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1470</SUB>> ]
-"5700" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1471</SUB>> ]
-"5683" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1470</SUB>> ]
-"5685" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1470</SUB>> ]
-"5701" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1471</SUB>> ]
-"5703" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1471</SUB>> ]
-"5658" [label = <(METHOD,CallNonvirtualIntMethod)<SUB>1466</SUB>> ]
-"5723" [label = <(METHOD_RETURN,jint)<SUB>1466</SUB>> ]
+"5665" [label = <(va_start,va_start(ap, mid))<SUB>1467</SUB>> ]
+"5669" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1468</SUB>> ]
+"5672" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1469</SUB>> ]
+"5690" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1470</SUB>> ]
+"5709" [label = <(soa,soa(env))<SUB>1471</SUB>> ]
+"5712" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1472</SUB>> ]
+"5718" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1473</SUB>> ]
+"5670" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1468</SUB>> ]
+"5713" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1472</SUB>> ]
+"5719" [label = <(GetI,result.GetI())<SUB>1473</SUB>> ]
+"5720" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1473</SUB>> ]
+"5676" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1469</SUB>> ]
+"5694" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1470</SUB>> ]
+"5722" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1473</SUB>> ]
+"5677" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1469</SUB>> ]
+"5681" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1469</SUB>> ]
+"5688" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1469</SUB>> ]
+"5695" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1470</SUB>> ]
+"5699" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1470</SUB>> ]
+"5706" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1470</SUB>> ]
+"5682" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1469</SUB>> ]
+"5700" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1470</SUB>> ]
+"5683" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1469</SUB>> ]
+"5685" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1469</SUB>> ]
+"5701" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1470</SUB>> ]
+"5703" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1470</SUB>> ]
+"5658" [label = <(METHOD,CallNonvirtualIntMethod)<SUB>1465</SUB>> ]
+"5723" [label = <(METHOD_RETURN,jint)<SUB>1465</SUB>> ]
   "5665" -> "5670" 
   "5669" -> "5672" 
   "5672" -> "5677" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/118-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/118-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/118-cfg.dot	2023-06-07 19:34:48.347388395 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/118-cfg.dot	2023-06-07 19:34:54.947387780 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualIntMethodV" {  
-"5732" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1479</SUB>> ]
-"5750" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1480</SUB>> ]
-"5769" [label = <(soa,soa(env))<SUB>1481</SUB>> ]
-"5771" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetI();,return InvokeWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1482</SUB>> ]
-"5772" [label = <(GetI,InvokeWithVarArgs(soa, obj, mid, args).GetI())<SUB>1482</SUB>> ]
-"5773" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetI)<SUB>1482</SUB>> ]
-"5736" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1479</SUB>> ]
-"5754" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1480</SUB>> ]
-"5774" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1482</SUB>> ]
-"5779" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1482</SUB>> ]
-"5737" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1479</SUB>> ]
-"5741" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1479</SUB>> ]
-"5748" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1479</SUB>> ]
-"5755" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1480</SUB>> ]
-"5759" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1480</SUB>> ]
-"5766" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1480</SUB>> ]
-"5742" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1479</SUB>> ]
-"5760" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1480</SUB>> ]
-"5743" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1479</SUB>> ]
-"5745" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1479</SUB>> ]
-"5761" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1480</SUB>> ]
-"5763" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1480</SUB>> ]
-"5725" [label = <(METHOD,CallNonvirtualIntMethodV)<SUB>1477</SUB>> ]
-"5780" [label = <(METHOD_RETURN,jint)<SUB>1477</SUB>> ]
+"5732" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1478</SUB>> ]
+"5750" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1479</SUB>> ]
+"5769" [label = <(soa,soa(env))<SUB>1480</SUB>> ]
+"5771" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetI();,return InvokeWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1481</SUB>> ]
+"5772" [label = <(GetI,InvokeWithVarArgs(soa, obj, mid, args).GetI())<SUB>1481</SUB>> ]
+"5773" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetI)<SUB>1481</SUB>> ]
+"5736" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1478</SUB>> ]
+"5754" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1479</SUB>> ]
+"5774" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1481</SUB>> ]
+"5779" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1481</SUB>> ]
+"5737" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1478</SUB>> ]
+"5741" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1478</SUB>> ]
+"5748" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1478</SUB>> ]
+"5755" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1479</SUB>> ]
+"5759" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1479</SUB>> ]
+"5766" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1479</SUB>> ]
+"5742" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1478</SUB>> ]
+"5760" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1479</SUB>> ]
+"5743" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1478</SUB>> ]
+"5745" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1478</SUB>> ]
+"5761" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1479</SUB>> ]
+"5763" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1479</SUB>> ]
+"5725" [label = <(METHOD,CallNonvirtualIntMethodV)<SUB>1476</SUB>> ]
+"5780" [label = <(METHOD_RETURN,jint)<SUB>1476</SUB>> ]
   "5732" -> "5737" 
   "5732" -> "5750" 
   "5750" -> "5755" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/119-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/119-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/119-cfg.dot	2023-06-07 19:34:48.347388395 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/119-cfg.dot	2023-06-07 19:34:54.947387780 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualIntMethodA" {  
-"5789" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1487</SUB>> ]
-"5807" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1488</SUB>> ]
-"5826" [label = <(soa,soa(env))<SUB>1489</SUB>> ]
-"5828" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetI();,return InvokeWithJValues(soa, obj, mid, args).GetI();)<SUB>1490</SUB>> ]
-"5829" [label = <(GetI,InvokeWithJValues(soa, obj, mid, args).GetI())<SUB>1490</SUB>> ]
-"5830" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetI)<SUB>1490</SUB>> ]
-"5793" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1487</SUB>> ]
-"5811" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1488</SUB>> ]
-"5831" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1490</SUB>> ]
-"5836" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1490</SUB>> ]
-"5794" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1487</SUB>> ]
-"5798" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1487</SUB>> ]
-"5805" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1487</SUB>> ]
-"5812" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1488</SUB>> ]
-"5816" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1488</SUB>> ]
-"5823" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1488</SUB>> ]
-"5799" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1487</SUB>> ]
-"5817" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1488</SUB>> ]
-"5800" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1487</SUB>> ]
-"5802" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1487</SUB>> ]
-"5818" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1488</SUB>> ]
-"5820" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1488</SUB>> ]
-"5782" [label = <(METHOD,CallNonvirtualIntMethodA)<SUB>1485</SUB>> ]
-"5837" [label = <(METHOD_RETURN,jint)<SUB>1485</SUB>> ]
+"5789" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1486</SUB>> ]
+"5807" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1487</SUB>> ]
+"5826" [label = <(soa,soa(env))<SUB>1488</SUB>> ]
+"5828" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetI();,return InvokeWithJValues(soa, obj, mid, args).GetI();)<SUB>1489</SUB>> ]
+"5829" [label = <(GetI,InvokeWithJValues(soa, obj, mid, args).GetI())<SUB>1489</SUB>> ]
+"5830" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetI)<SUB>1489</SUB>> ]
+"5793" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1486</SUB>> ]
+"5811" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1487</SUB>> ]
+"5831" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1489</SUB>> ]
+"5836" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1489</SUB>> ]
+"5794" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1486</SUB>> ]
+"5798" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1486</SUB>> ]
+"5805" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1486</SUB>> ]
+"5812" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1487</SUB>> ]
+"5816" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1487</SUB>> ]
+"5823" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1487</SUB>> ]
+"5799" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1486</SUB>> ]
+"5817" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1487</SUB>> ]
+"5800" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1486</SUB>> ]
+"5802" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1486</SUB>> ]
+"5818" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1487</SUB>> ]
+"5820" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1487</SUB>> ]
+"5782" [label = <(METHOD,CallNonvirtualIntMethodA)<SUB>1484</SUB>> ]
+"5837" [label = <(METHOD_RETURN,jint)<SUB>1484</SUB>> ]
   "5789" -> "5794" 
   "5789" -> "5807" 
   "5807" -> "5812" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/12-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/12-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/12-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/12-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,7 +1,7 @@
 digraph "GetSingleton" {  
-"321" [label = <(RETURN,return Singleton;,return Singleton;)<SUB>206</SUB>> ]
-"318" [label = <(METHOD,GetSingleton)<SUB>204</SUB>> ]
-"323" [label = <(METHOD_RETURN,CodeRangeCache)<SUB>204</SUB>> ]
+"321" [label = <(RETURN,return Singleton;,return Singleton;)<SUB>205</SUB>> ]
+"318" [label = <(METHOD,GetSingleton)<SUB>203</SUB>> ]
+"323" [label = <(METHOD_RETURN,CodeRangeCache)<SUB>203</SUB>> ]
   "321" -> "323" 
   "318" -> "321" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/120-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/120-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/120-cfg.dot	2023-06-07 19:34:48.347388395 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/120-cfg.dot	2023-06-07 19:34:54.947387780 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualLongMethod" {  
-"5846" [label = <(va_start,va_start(ap, mid))<SUB>1495</SUB>> ]
-"5850" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1496</SUB>> ]
-"5853" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1497</SUB>> ]
-"5871" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1498</SUB>> ]
-"5890" [label = <(soa,soa(env))<SUB>1499</SUB>> ]
-"5893" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1500</SUB>> ]
-"5899" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1501</SUB>> ]
-"5851" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1496</SUB>> ]
-"5894" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1500</SUB>> ]
-"5900" [label = <(GetJ,result.GetJ())<SUB>1501</SUB>> ]
-"5901" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1501</SUB>> ]
-"5857" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1497</SUB>> ]
-"5875" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1498</SUB>> ]
-"5903" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1501</SUB>> ]
-"5858" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1497</SUB>> ]
-"5862" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1497</SUB>> ]
-"5869" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1497</SUB>> ]
-"5876" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1498</SUB>> ]
-"5880" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1498</SUB>> ]
-"5887" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1498</SUB>> ]
-"5863" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1497</SUB>> ]
-"5881" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1498</SUB>> ]
-"5864" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1497</SUB>> ]
-"5866" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1497</SUB>> ]
-"5882" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1498</SUB>> ]
-"5884" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1498</SUB>> ]
-"5839" [label = <(METHOD,CallNonvirtualLongMethod)<SUB>1493</SUB>> ]
-"5904" [label = <(METHOD_RETURN,jlong)<SUB>1493</SUB>> ]
+"5846" [label = <(va_start,va_start(ap, mid))<SUB>1494</SUB>> ]
+"5850" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1495</SUB>> ]
+"5853" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1496</SUB>> ]
+"5871" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1497</SUB>> ]
+"5890" [label = <(soa,soa(env))<SUB>1498</SUB>> ]
+"5893" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1499</SUB>> ]
+"5899" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1500</SUB>> ]
+"5851" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1495</SUB>> ]
+"5894" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1499</SUB>> ]
+"5900" [label = <(GetJ,result.GetJ())<SUB>1500</SUB>> ]
+"5901" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1500</SUB>> ]
+"5857" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1496</SUB>> ]
+"5875" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1497</SUB>> ]
+"5903" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1500</SUB>> ]
+"5858" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1496</SUB>> ]
+"5862" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1496</SUB>> ]
+"5869" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1496</SUB>> ]
+"5876" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1497</SUB>> ]
+"5880" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1497</SUB>> ]
+"5887" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1497</SUB>> ]
+"5863" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1496</SUB>> ]
+"5881" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1497</SUB>> ]
+"5864" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1496</SUB>> ]
+"5866" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1496</SUB>> ]
+"5882" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1497</SUB>> ]
+"5884" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1497</SUB>> ]
+"5839" [label = <(METHOD,CallNonvirtualLongMethod)<SUB>1492</SUB>> ]
+"5904" [label = <(METHOD_RETURN,jlong)<SUB>1492</SUB>> ]
   "5846" -> "5851" 
   "5850" -> "5853" 
   "5853" -> "5858" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/121-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/121-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/121-cfg.dot	2023-06-07 19:34:48.347388395 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/121-cfg.dot	2023-06-07 19:34:54.947387780 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualLongMethodV" {  
-"5913" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1506</SUB>> ]
-"5931" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1507</SUB>> ]
-"5950" [label = <(soa,soa(env))<SUB>1508</SUB>> ]
-"5952" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1509</SUB>> ]
-"5953" [label = <(GetJ,InvokeWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1509</SUB>> ]
-"5954" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1509</SUB>> ]
-"5917" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1506</SUB>> ]
-"5935" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1507</SUB>> ]
-"5955" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1509</SUB>> ]
-"5960" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1509</SUB>> ]
-"5918" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1506</SUB>> ]
-"5922" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1506</SUB>> ]
-"5929" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1506</SUB>> ]
-"5936" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1507</SUB>> ]
-"5940" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1507</SUB>> ]
-"5947" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1507</SUB>> ]
-"5923" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1506</SUB>> ]
-"5941" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1507</SUB>> ]
-"5924" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1506</SUB>> ]
-"5926" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1506</SUB>> ]
-"5942" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1507</SUB>> ]
-"5944" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1507</SUB>> ]
-"5906" [label = <(METHOD,CallNonvirtualLongMethodV)<SUB>1504</SUB>> ]
-"5961" [label = <(METHOD_RETURN,jlong)<SUB>1504</SUB>> ]
+"5913" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1505</SUB>> ]
+"5931" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1506</SUB>> ]
+"5950" [label = <(soa,soa(env))<SUB>1507</SUB>> ]
+"5952" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1508</SUB>> ]
+"5953" [label = <(GetJ,InvokeWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1508</SUB>> ]
+"5954" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1508</SUB>> ]
+"5917" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1505</SUB>> ]
+"5935" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1506</SUB>> ]
+"5955" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1508</SUB>> ]
+"5960" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1508</SUB>> ]
+"5918" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1505</SUB>> ]
+"5922" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1505</SUB>> ]
+"5929" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1505</SUB>> ]
+"5936" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1506</SUB>> ]
+"5940" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1506</SUB>> ]
+"5947" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1506</SUB>> ]
+"5923" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1505</SUB>> ]
+"5941" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1506</SUB>> ]
+"5924" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1505</SUB>> ]
+"5926" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1505</SUB>> ]
+"5942" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1506</SUB>> ]
+"5944" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1506</SUB>> ]
+"5906" [label = <(METHOD,CallNonvirtualLongMethodV)<SUB>1503</SUB>> ]
+"5961" [label = <(METHOD_RETURN,jlong)<SUB>1503</SUB>> ]
   "5913" -> "5918" 
   "5913" -> "5931" 
   "5931" -> "5936" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/122-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/122-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/122-cfg.dot	2023-06-07 19:34:48.347388395 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/122-cfg.dot	2023-06-07 19:34:54.947387780 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualLongMethodA" {  
-"5970" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1514</SUB>> ]
-"5988" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1515</SUB>> ]
-"6007" [label = <(soa,soa(env))<SUB>1516</SUB>> ]
-"6009" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetJ();,return InvokeWithJValues(soa, obj, mid, args).GetJ();)<SUB>1517</SUB>> ]
-"6010" [label = <(GetJ,InvokeWithJValues(soa, obj, mid, args).GetJ())<SUB>1517</SUB>> ]
-"6011" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetJ)<SUB>1517</SUB>> ]
-"5974" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1514</SUB>> ]
-"5992" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1515</SUB>> ]
-"6012" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1517</SUB>> ]
-"6017" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1517</SUB>> ]
-"5975" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1514</SUB>> ]
-"5979" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1514</SUB>> ]
-"5986" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1514</SUB>> ]
-"5993" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1515</SUB>> ]
-"5997" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1515</SUB>> ]
-"6004" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1515</SUB>> ]
-"5980" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1514</SUB>> ]
-"5998" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1515</SUB>> ]
-"5981" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1514</SUB>> ]
-"5983" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1514</SUB>> ]
-"5999" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1515</SUB>> ]
-"6001" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1515</SUB>> ]
-"5963" [label = <(METHOD,CallNonvirtualLongMethodA)<SUB>1512</SUB>> ]
-"6018" [label = <(METHOD_RETURN,jlong)<SUB>1512</SUB>> ]
+"5970" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1513</SUB>> ]
+"5988" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1514</SUB>> ]
+"6007" [label = <(soa,soa(env))<SUB>1515</SUB>> ]
+"6009" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetJ();,return InvokeWithJValues(soa, obj, mid, args).GetJ();)<SUB>1516</SUB>> ]
+"6010" [label = <(GetJ,InvokeWithJValues(soa, obj, mid, args).GetJ())<SUB>1516</SUB>> ]
+"6011" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetJ)<SUB>1516</SUB>> ]
+"5974" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1513</SUB>> ]
+"5992" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1514</SUB>> ]
+"6012" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1516</SUB>> ]
+"6017" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1516</SUB>> ]
+"5975" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1513</SUB>> ]
+"5979" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1513</SUB>> ]
+"5986" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1513</SUB>> ]
+"5993" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1514</SUB>> ]
+"5997" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1514</SUB>> ]
+"6004" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1514</SUB>> ]
+"5980" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1513</SUB>> ]
+"5998" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1514</SUB>> ]
+"5981" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1513</SUB>> ]
+"5983" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1513</SUB>> ]
+"5999" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1514</SUB>> ]
+"6001" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1514</SUB>> ]
+"5963" [label = <(METHOD,CallNonvirtualLongMethodA)<SUB>1511</SUB>> ]
+"6018" [label = <(METHOD_RETURN,jlong)<SUB>1511</SUB>> ]
   "5970" -> "5975" 
   "5970" -> "5988" 
   "5988" -> "5993" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/123-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/123-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/123-cfg.dot	2023-06-07 19:34:48.347388395 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/123-cfg.dot	2023-06-07 19:34:54.947387780 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualFloatMethod" {  
-"6027" [label = <(va_start,va_start(ap, mid))<SUB>1522</SUB>> ]
-"6031" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1523</SUB>> ]
-"6034" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1524</SUB>> ]
-"6052" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1525</SUB>> ]
-"6071" [label = <(soa,soa(env))<SUB>1526</SUB>> ]
-"6074" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1527</SUB>> ]
-"6080" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1528</SUB>> ]
-"6032" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1523</SUB>> ]
-"6075" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1527</SUB>> ]
-"6081" [label = <(GetF,result.GetF())<SUB>1528</SUB>> ]
-"6082" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1528</SUB>> ]
-"6038" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1524</SUB>> ]
-"6056" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1525</SUB>> ]
-"6084" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1528</SUB>> ]
-"6039" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1524</SUB>> ]
-"6043" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1524</SUB>> ]
-"6050" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1524</SUB>> ]
-"6057" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1525</SUB>> ]
-"6061" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1525</SUB>> ]
-"6068" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1525</SUB>> ]
-"6044" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1524</SUB>> ]
-"6062" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1525</SUB>> ]
-"6045" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1524</SUB>> ]
-"6047" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1524</SUB>> ]
-"6063" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1525</SUB>> ]
-"6065" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1525</SUB>> ]
-"6020" [label = <(METHOD,CallNonvirtualFloatMethod)<SUB>1520</SUB>> ]
-"6085" [label = <(METHOD_RETURN,jfloat)<SUB>1520</SUB>> ]
+"6027" [label = <(va_start,va_start(ap, mid))<SUB>1521</SUB>> ]
+"6031" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1522</SUB>> ]
+"6034" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1523</SUB>> ]
+"6052" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1524</SUB>> ]
+"6071" [label = <(soa,soa(env))<SUB>1525</SUB>> ]
+"6074" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1526</SUB>> ]
+"6080" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1527</SUB>> ]
+"6032" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1522</SUB>> ]
+"6075" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1526</SUB>> ]
+"6081" [label = <(GetF,result.GetF())<SUB>1527</SUB>> ]
+"6082" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1527</SUB>> ]
+"6038" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1523</SUB>> ]
+"6056" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1524</SUB>> ]
+"6084" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1527</SUB>> ]
+"6039" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1523</SUB>> ]
+"6043" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1523</SUB>> ]
+"6050" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1523</SUB>> ]
+"6057" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1524</SUB>> ]
+"6061" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1524</SUB>> ]
+"6068" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1524</SUB>> ]
+"6044" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1523</SUB>> ]
+"6062" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1524</SUB>> ]
+"6045" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1523</SUB>> ]
+"6047" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1523</SUB>> ]
+"6063" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1524</SUB>> ]
+"6065" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1524</SUB>> ]
+"6020" [label = <(METHOD,CallNonvirtualFloatMethod)<SUB>1519</SUB>> ]
+"6085" [label = <(METHOD_RETURN,jfloat)<SUB>1519</SUB>> ]
   "6027" -> "6032" 
   "6031" -> "6034" 
   "6034" -> "6039" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/124-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/124-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/124-cfg.dot	2023-06-07 19:34:48.347388395 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/124-cfg.dot	2023-06-07 19:34:54.947387780 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualFloatMethodV" {  
-"6094" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1533</SUB>> ]
-"6112" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1534</SUB>> ]
-"6131" [label = <(soa,soa(env))<SUB>1535</SUB>> ]
-"6133" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetF();,return InvokeWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1536</SUB>> ]
-"6134" [label = <(GetF,InvokeWithVarArgs(soa, obj, mid, args).GetF())<SUB>1536</SUB>> ]
-"6135" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetF)<SUB>1536</SUB>> ]
-"6098" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1533</SUB>> ]
-"6116" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1534</SUB>> ]
-"6136" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1536</SUB>> ]
-"6141" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1536</SUB>> ]
-"6099" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1533</SUB>> ]
-"6103" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1533</SUB>> ]
-"6110" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1533</SUB>> ]
-"6117" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1534</SUB>> ]
-"6121" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1534</SUB>> ]
-"6128" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1534</SUB>> ]
-"6104" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1533</SUB>> ]
-"6122" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1534</SUB>> ]
-"6105" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1533</SUB>> ]
-"6107" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1533</SUB>> ]
-"6123" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1534</SUB>> ]
-"6125" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1534</SUB>> ]
-"6087" [label = <(METHOD,CallNonvirtualFloatMethodV)<SUB>1531</SUB>> ]
-"6142" [label = <(METHOD_RETURN,jfloat)<SUB>1531</SUB>> ]
+"6094" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1532</SUB>> ]
+"6112" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1533</SUB>> ]
+"6131" [label = <(soa,soa(env))<SUB>1534</SUB>> ]
+"6133" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetF();,return InvokeWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1535</SUB>> ]
+"6134" [label = <(GetF,InvokeWithVarArgs(soa, obj, mid, args).GetF())<SUB>1535</SUB>> ]
+"6135" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetF)<SUB>1535</SUB>> ]
+"6098" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1532</SUB>> ]
+"6116" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1533</SUB>> ]
+"6136" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1535</SUB>> ]
+"6141" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1535</SUB>> ]
+"6099" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1532</SUB>> ]
+"6103" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1532</SUB>> ]
+"6110" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1532</SUB>> ]
+"6117" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1533</SUB>> ]
+"6121" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1533</SUB>> ]
+"6128" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1533</SUB>> ]
+"6104" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1532</SUB>> ]
+"6122" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1533</SUB>> ]
+"6105" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1532</SUB>> ]
+"6107" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1532</SUB>> ]
+"6123" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1533</SUB>> ]
+"6125" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1533</SUB>> ]
+"6087" [label = <(METHOD,CallNonvirtualFloatMethodV)<SUB>1530</SUB>> ]
+"6142" [label = <(METHOD_RETURN,jfloat)<SUB>1530</SUB>> ]
   "6094" -> "6099" 
   "6094" -> "6112" 
   "6112" -> "6117" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/125-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/125-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/125-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/125-cfg.dot	2023-06-07 19:34:54.947387780 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualFloatMethodA" {  
-"6151" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1541</SUB>> ]
-"6169" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1542</SUB>> ]
-"6188" [label = <(soa,soa(env))<SUB>1543</SUB>> ]
-"6190" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetF();,return InvokeWithJValues(soa, obj, mid, args).GetF();)<SUB>1544</SUB>> ]
-"6191" [label = <(GetF,InvokeWithJValues(soa, obj, mid, args).GetF())<SUB>1544</SUB>> ]
-"6192" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetF)<SUB>1544</SUB>> ]
-"6155" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1541</SUB>> ]
-"6173" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1542</SUB>> ]
-"6193" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1544</SUB>> ]
-"6198" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1544</SUB>> ]
-"6156" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1541</SUB>> ]
-"6160" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1541</SUB>> ]
-"6167" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1541</SUB>> ]
-"6174" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1542</SUB>> ]
-"6178" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1542</SUB>> ]
-"6185" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1542</SUB>> ]
-"6161" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1541</SUB>> ]
-"6179" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1542</SUB>> ]
-"6162" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1541</SUB>> ]
-"6164" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1541</SUB>> ]
-"6180" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1542</SUB>> ]
-"6182" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1542</SUB>> ]
-"6144" [label = <(METHOD,CallNonvirtualFloatMethodA)<SUB>1539</SUB>> ]
-"6199" [label = <(METHOD_RETURN,jfloat)<SUB>1539</SUB>> ]
+"6151" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1540</SUB>> ]
+"6169" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1541</SUB>> ]
+"6188" [label = <(soa,soa(env))<SUB>1542</SUB>> ]
+"6190" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetF();,return InvokeWithJValues(soa, obj, mid, args).GetF();)<SUB>1543</SUB>> ]
+"6191" [label = <(GetF,InvokeWithJValues(soa, obj, mid, args).GetF())<SUB>1543</SUB>> ]
+"6192" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetF)<SUB>1543</SUB>> ]
+"6155" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1540</SUB>> ]
+"6173" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1541</SUB>> ]
+"6193" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1543</SUB>> ]
+"6198" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1543</SUB>> ]
+"6156" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1540</SUB>> ]
+"6160" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1540</SUB>> ]
+"6167" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1540</SUB>> ]
+"6174" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1541</SUB>> ]
+"6178" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1541</SUB>> ]
+"6185" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1541</SUB>> ]
+"6161" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1540</SUB>> ]
+"6179" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1541</SUB>> ]
+"6162" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1540</SUB>> ]
+"6164" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1540</SUB>> ]
+"6180" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1541</SUB>> ]
+"6182" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1541</SUB>> ]
+"6144" [label = <(METHOD,CallNonvirtualFloatMethodA)<SUB>1538</SUB>> ]
+"6199" [label = <(METHOD_RETURN,jfloat)<SUB>1538</SUB>> ]
   "6151" -> "6156" 
   "6151" -> "6169" 
   "6169" -> "6174" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/126-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/126-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/126-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/126-cfg.dot	2023-06-07 19:34:54.947387780 +0330
@@ -1,32 +1,32 @@
 digraph "CallNonvirtualDoubleMethod" {  
-"6208" [label = <(va_start,va_start(ap, mid))<SUB>1549</SUB>> ]
-"6212" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1550</SUB>> ]
-"6215" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1551</SUB>> ]
-"6233" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1552</SUB>> ]
-"6252" [label = <(soa,soa(env))<SUB>1553</SUB>> ]
-"6255" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1554</SUB>> ]
-"6261" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1555</SUB>> ]
-"6213" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1550</SUB>> ]
-"6256" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1554</SUB>> ]
-"6262" [label = <(GetD,result.GetD())<SUB>1555</SUB>> ]
-"6263" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1555</SUB>> ]
-"6219" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1551</SUB>> ]
-"6237" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1552</SUB>> ]
-"6265" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1555</SUB>> ]
-"6220" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1551</SUB>> ]
-"6224" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1551</SUB>> ]
-"6231" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1551</SUB>> ]
-"6238" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1552</SUB>> ]
-"6242" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1552</SUB>> ]
-"6249" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1552</SUB>> ]
-"6225" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1551</SUB>> ]
-"6243" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1552</SUB>> ]
-"6226" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1551</SUB>> ]
-"6228" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1551</SUB>> ]
-"6244" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1552</SUB>> ]
-"6246" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1552</SUB>> ]
-"6201" [label = <(METHOD,CallNonvirtualDoubleMethod)<SUB>1547</SUB>> ]
-"6266" [label = <(METHOD_RETURN,jdouble)<SUB>1547</SUB>> ]
+"6208" [label = <(va_start,va_start(ap, mid))<SUB>1548</SUB>> ]
+"6212" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1549</SUB>> ]
+"6215" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1550</SUB>> ]
+"6233" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1551</SUB>> ]
+"6252" [label = <(soa,soa(env))<SUB>1552</SUB>> ]
+"6255" [label = <(result,result(InvokeWithVarArgs(soa, obj, mid, ap)))<SUB>1553</SUB>> ]
+"6261" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1554</SUB>> ]
+"6213" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1549</SUB>> ]
+"6256" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1553</SUB>> ]
+"6262" [label = <(GetD,result.GetD())<SUB>1554</SUB>> ]
+"6263" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1554</SUB>> ]
+"6219" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1550</SUB>> ]
+"6237" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1551</SUB>> ]
+"6265" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1554</SUB>> ]
+"6220" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1550</SUB>> ]
+"6224" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1550</SUB>> ]
+"6231" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1550</SUB>> ]
+"6238" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1551</SUB>> ]
+"6242" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1551</SUB>> ]
+"6249" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1551</SUB>> ]
+"6225" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1550</SUB>> ]
+"6243" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1551</SUB>> ]
+"6226" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1550</SUB>> ]
+"6228" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1550</SUB>> ]
+"6244" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1551</SUB>> ]
+"6246" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1551</SUB>> ]
+"6201" [label = <(METHOD,CallNonvirtualDoubleMethod)<SUB>1546</SUB>> ]
+"6266" [label = <(METHOD_RETURN,jdouble)<SUB>1546</SUB>> ]
   "6208" -> "6213" 
   "6212" -> "6215" 
   "6215" -> "6220" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/127-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/127-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/127-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/127-cfg.dot	2023-06-07 19:34:54.947387780 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualDoubleMethodV" {  
-"6275" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1560</SUB>> ]
-"6293" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1561</SUB>> ]
-"6312" [label = <(soa,soa(env))<SUB>1562</SUB>> ]
-"6314" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetD();,return InvokeWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1563</SUB>> ]
-"6315" [label = <(GetD,InvokeWithVarArgs(soa, obj, mid, args).GetD())<SUB>1563</SUB>> ]
-"6316" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetD)<SUB>1563</SUB>> ]
-"6279" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1560</SUB>> ]
-"6297" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1561</SUB>> ]
-"6317" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1563</SUB>> ]
-"6322" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1563</SUB>> ]
-"6280" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1560</SUB>> ]
-"6284" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1560</SUB>> ]
-"6291" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1560</SUB>> ]
-"6298" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1561</SUB>> ]
-"6302" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1561</SUB>> ]
-"6309" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1561</SUB>> ]
-"6285" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1560</SUB>> ]
-"6303" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1561</SUB>> ]
-"6286" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1560</SUB>> ]
-"6288" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1560</SUB>> ]
-"6304" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1561</SUB>> ]
-"6306" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1561</SUB>> ]
-"6268" [label = <(METHOD,CallNonvirtualDoubleMethodV)<SUB>1558</SUB>> ]
-"6323" [label = <(METHOD_RETURN,jdouble)<SUB>1558</SUB>> ]
+"6275" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1559</SUB>> ]
+"6293" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1560</SUB>> ]
+"6312" [label = <(soa,soa(env))<SUB>1561</SUB>> ]
+"6314" [label = <(RETURN,return InvokeWithVarArgs(soa, obj, mid, args).GetD();,return InvokeWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1562</SUB>> ]
+"6315" [label = <(GetD,InvokeWithVarArgs(soa, obj, mid, args).GetD())<SUB>1562</SUB>> ]
+"6316" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, obj, mid, args).GetD)<SUB>1562</SUB>> ]
+"6279" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1559</SUB>> ]
+"6297" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1560</SUB>> ]
+"6317" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1562</SUB>> ]
+"6322" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1562</SUB>> ]
+"6280" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1559</SUB>> ]
+"6284" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1559</SUB>> ]
+"6291" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1559</SUB>> ]
+"6298" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1560</SUB>> ]
+"6302" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1560</SUB>> ]
+"6309" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1560</SUB>> ]
+"6285" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1559</SUB>> ]
+"6303" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1560</SUB>> ]
+"6286" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1559</SUB>> ]
+"6288" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1559</SUB>> ]
+"6304" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1560</SUB>> ]
+"6306" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1560</SUB>> ]
+"6268" [label = <(METHOD,CallNonvirtualDoubleMethodV)<SUB>1557</SUB>> ]
+"6323" [label = <(METHOD_RETURN,jdouble)<SUB>1557</SUB>> ]
   "6275" -> "6280" 
   "6275" -> "6293" 
   "6293" -> "6298" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/128-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/128-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/128-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/128-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,28 +1,28 @@
 digraph "CallNonvirtualDoubleMethodA" {  
-"6332" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1568</SUB>> ]
-"6350" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1569</SUB>> ]
-"6369" [label = <(soa,soa(env))<SUB>1570</SUB>> ]
-"6371" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetD();,return InvokeWithJValues(soa, obj, mid, args).GetD();)<SUB>1571</SUB>> ]
-"6372" [label = <(GetD,InvokeWithJValues(soa, obj, mid, args).GetD())<SUB>1571</SUB>> ]
-"6373" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetD)<SUB>1571</SUB>> ]
-"6336" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1568</SUB>> ]
-"6354" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1569</SUB>> ]
-"6374" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1571</SUB>> ]
-"6379" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1571</SUB>> ]
-"6337" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1568</SUB>> ]
-"6341" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1568</SUB>> ]
-"6348" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1568</SUB>> ]
-"6355" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1569</SUB>> ]
-"6359" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1569</SUB>> ]
-"6366" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1569</SUB>> ]
-"6342" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1568</SUB>> ]
-"6360" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1569</SUB>> ]
-"6343" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1568</SUB>> ]
-"6345" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1568</SUB>> ]
-"6361" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1569</SUB>> ]
-"6363" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1569</SUB>> ]
-"6325" [label = <(METHOD,CallNonvirtualDoubleMethodA)<SUB>1566</SUB>> ]
-"6380" [label = <(METHOD_RETURN,jdouble)<SUB>1566</SUB>> ]
+"6332" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1567</SUB>> ]
+"6350" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1568</SUB>> ]
+"6369" [label = <(soa,soa(env))<SUB>1569</SUB>> ]
+"6371" [label = <(RETURN,return InvokeWithJValues(soa, obj, mid, args).GetD();,return InvokeWithJValues(soa, obj, mid, args).GetD();)<SUB>1570</SUB>> ]
+"6372" [label = <(GetD,InvokeWithJValues(soa, obj, mid, args).GetD())<SUB>1570</SUB>> ]
+"6373" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, obj, mid, args).GetD)<SUB>1570</SUB>> ]
+"6336" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1567</SUB>> ]
+"6354" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1568</SUB>> ]
+"6374" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1570</SUB>> ]
+"6379" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1570</SUB>> ]
+"6337" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1567</SUB>> ]
+"6341" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1567</SUB>> ]
+"6348" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1567</SUB>> ]
+"6355" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1568</SUB>> ]
+"6359" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1568</SUB>> ]
+"6366" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1568</SUB>> ]
+"6342" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1567</SUB>> ]
+"6360" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1568</SUB>> ]
+"6343" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1567</SUB>> ]
+"6345" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1567</SUB>> ]
+"6361" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1568</SUB>> ]
+"6363" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1568</SUB>> ]
+"6325" [label = <(METHOD,CallNonvirtualDoubleMethodA)<SUB>1565</SUB>> ]
+"6380" [label = <(METHOD_RETURN,jdouble)<SUB>1565</SUB>> ]
   "6332" -> "6337" 
   "6332" -> "6350" 
   "6350" -> "6355" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/129-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/129-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/129-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/129-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,27 +1,27 @@
 digraph "CallNonvirtualVoidMethod" {  
-"6389" [label = <(va_start,va_start(ap, mid))<SUB>1576</SUB>> ]
-"6393" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1577</SUB>> ]
-"6396" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1578</SUB>> ]
-"6413" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1579</SUB>> ]
-"6431" [label = <(soa,soa(env))<SUB>1580</SUB>> ]
-"6433" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1581</SUB>> ]
-"6394" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1577</SUB>> ]
-"6400" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1578</SUB>> ]
-"6417" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1579</SUB>> ]
-"6401" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1578</SUB>> ]
-"6405" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1578</SUB>> ]
-"6412" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1578</SUB>> ]
-"6418" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1579</SUB>> ]
-"6422" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1579</SUB>> ]
-"6429" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1579</SUB>> ]
-"6406" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1578</SUB>> ]
-"6423" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1579</SUB>> ]
-"6407" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1578</SUB>> ]
-"6409" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1578</SUB>> ]
-"6424" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1579</SUB>> ]
-"6426" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1579</SUB>> ]
-"6382" [label = <(METHOD,CallNonvirtualVoidMethod)<SUB>1574</SUB>> ]
-"6438" [label = <(METHOD_RETURN,void)<SUB>1574</SUB>> ]
+"6389" [label = <(va_start,va_start(ap, mid))<SUB>1575</SUB>> ]
+"6393" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1576</SUB>> ]
+"6396" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1577</SUB>> ]
+"6413" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1578</SUB>> ]
+"6431" [label = <(soa,soa(env))<SUB>1579</SUB>> ]
+"6433" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, ap))<SUB>1580</SUB>> ]
+"6394" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1576</SUB>> ]
+"6400" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1577</SUB>> ]
+"6417" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1578</SUB>> ]
+"6401" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1577</SUB>> ]
+"6405" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1577</SUB>> ]
+"6412" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1577</SUB>> ]
+"6418" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1578</SUB>> ]
+"6422" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1578</SUB>> ]
+"6429" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1578</SUB>> ]
+"6406" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1577</SUB>> ]
+"6423" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1578</SUB>> ]
+"6407" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1577</SUB>> ]
+"6409" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1577</SUB>> ]
+"6424" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1578</SUB>> ]
+"6426" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1578</SUB>> ]
+"6382" [label = <(METHOD,CallNonvirtualVoidMethod)<SUB>1573</SUB>> ]
+"6438" [label = <(METHOD_RETURN,void)<SUB>1573</SUB>> ]
   "6389" -> "6394" 
   "6393" -> "6396" 
   "6396" -> "6401" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/13-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/13-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/13-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/13-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,15 +1,15 @@
 digraph "GetSharedObjectKind" {  
-"329" [label = <(&lt;operator&gt;.assignment,address = reinterpret_cast&lt;uintptr_t&gt;(pc))<SUB>210</SUB>> ]
-"343" [label = <(RETURN,return SharedObjectKind::kOther;,return SharedObjectKind::kOther;)<SUB>215</SUB>> ]
-"331" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;uintptr_t&gt;(pc))<SUB>210</SUB>> ]
-"336" [label = <(Find,Find(address, &amp;kind))<SUB>212</SUB>> ]
-"344" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kOther)<SUB>215</SUB>> ]
-"332" [label = <(UNKNOWN,uintptr_t,uintptr_t)<SUB>210</SUB>> ]
-"338" [label = <(&lt;operator&gt;.addressOf,&amp;kind)<SUB>212</SUB>> ]
-"341" [label = <(RETURN,return kind;,return kind;)<SUB>213</SUB>> ]
-"346" [label = <(FIELD_IDENTIFIER,kOther,kOther)<SUB>215</SUB>> ]
-"325" [label = <(METHOD,GetSharedObjectKind)<SUB>209</SUB>> ]
-"347" [label = <(METHOD_RETURN,SharedObjectKind)<SUB>209</SUB>> ]
+"329" [label = <(&lt;operator&gt;.assignment,address = reinterpret_cast&lt;uintptr_t&gt;(pc))<SUB>209</SUB>> ]
+"343" [label = <(RETURN,return SharedObjectKind::kOther;,return SharedObjectKind::kOther;)<SUB>214</SUB>> ]
+"331" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;uintptr_t&gt;(pc))<SUB>209</SUB>> ]
+"336" [label = <(Find,Find(address, &amp;kind))<SUB>211</SUB>> ]
+"344" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kOther)<SUB>214</SUB>> ]
+"332" [label = <(UNKNOWN,uintptr_t,uintptr_t)<SUB>209</SUB>> ]
+"338" [label = <(&lt;operator&gt;.addressOf,&amp;kind)<SUB>211</SUB>> ]
+"341" [label = <(RETURN,return kind;,return kind;)<SUB>212</SUB>> ]
+"346" [label = <(FIELD_IDENTIFIER,kOther,kOther)<SUB>214</SUB>> ]
+"325" [label = <(METHOD,GetSharedObjectKind)<SUB>208</SUB>> ]
+"347" [label = <(METHOD_RETURN,SharedObjectKind)<SUB>208</SUB>> ]
   "329" -> "338" 
   "343" -> "347" 
   "331" -> "329" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/130-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/130-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/130-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/130-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,24 +1,24 @@
 digraph "CallNonvirtualVoidMethodV" {  
-"6447" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1586</SUB>> ]
-"6464" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1587</SUB>> ]
-"6482" [label = <(soa,soa(env))<SUB>1588</SUB>> ]
-"6484" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1589</SUB>> ]
-"6451" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1586</SUB>> ]
-"6468" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1587</SUB>> ]
-"6452" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1586</SUB>> ]
-"6456" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1586</SUB>> ]
-"6463" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1586</SUB>> ]
-"6469" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1587</SUB>> ]
-"6473" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1587</SUB>> ]
-"6480" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1587</SUB>> ]
-"6457" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1586</SUB>> ]
-"6474" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1587</SUB>> ]
-"6458" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1586</SUB>> ]
-"6460" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1586</SUB>> ]
-"6475" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1587</SUB>> ]
-"6477" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1587</SUB>> ]
-"6440" [label = <(METHOD,CallNonvirtualVoidMethodV)<SUB>1584</SUB>> ]
-"6489" [label = <(METHOD_RETURN,void)<SUB>1584</SUB>> ]
+"6447" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1585</SUB>> ]
+"6464" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1586</SUB>> ]
+"6482" [label = <(soa,soa(env))<SUB>1587</SUB>> ]
+"6484" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, obj, mid, args))<SUB>1588</SUB>> ]
+"6451" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1585</SUB>> ]
+"6468" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1586</SUB>> ]
+"6452" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1585</SUB>> ]
+"6456" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1585</SUB>> ]
+"6463" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1585</SUB>> ]
+"6469" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1586</SUB>> ]
+"6473" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1586</SUB>> ]
+"6480" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1586</SUB>> ]
+"6457" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1585</SUB>> ]
+"6474" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1586</SUB>> ]
+"6458" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1585</SUB>> ]
+"6460" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1585</SUB>> ]
+"6475" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1586</SUB>> ]
+"6477" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1586</SUB>> ]
+"6440" [label = <(METHOD,CallNonvirtualVoidMethodV)<SUB>1583</SUB>> ]
+"6489" [label = <(METHOD_RETURN,void)<SUB>1583</SUB>> ]
   "6447" -> "6452" 
   "6447" -> "6464" 
   "6464" -> "6469" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/131-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/131-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/131-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/131-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,24 +1,24 @@
 digraph "CallNonvirtualVoidMethodA" {  
-"6498" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1594</SUB>> ]
-"6515" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1595</SUB>> ]
-"6533" [label = <(soa,soa(env))<SUB>1596</SUB>> ]
-"6535" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1597</SUB>> ]
-"6502" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1594</SUB>> ]
-"6519" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1595</SUB>> ]
-"6503" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1594</SUB>> ]
-"6507" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1594</SUB>> ]
-"6514" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1594</SUB>> ]
-"6520" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1595</SUB>> ]
-"6524" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1595</SUB>> ]
-"6531" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1595</SUB>> ]
-"6508" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1594</SUB>> ]
-"6525" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1595</SUB>> ]
-"6509" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1594</SUB>> ]
-"6511" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1594</SUB>> ]
-"6526" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1595</SUB>> ]
-"6528" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1595</SUB>> ]
-"6491" [label = <(METHOD,CallNonvirtualVoidMethodA)<SUB>1592</SUB>> ]
-"6540" [label = <(METHOD_RETURN,void)<SUB>1592</SUB>> ]
+"6498" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1593</SUB>> ]
+"6515" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1594</SUB>> ]
+"6533" [label = <(soa,soa(env))<SUB>1595</SUB>> ]
+"6535" [label = <(InvokeWithJValues,InvokeWithJValues(soa, obj, mid, args))<SUB>1596</SUB>> ]
+"6502" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1593</SUB>> ]
+"6519" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1594</SUB>> ]
+"6503" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1593</SUB>> ]
+"6507" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1593</SUB>> ]
+"6514" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1593</SUB>> ]
+"6520" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1594</SUB>> ]
+"6524" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1594</SUB>> ]
+"6531" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1594</SUB>> ]
+"6508" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1593</SUB>> ]
+"6525" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1594</SUB>> ]
+"6509" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1593</SUB>> ]
+"6511" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1593</SUB>> ]
+"6526" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1594</SUB>> ]
+"6528" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1594</SUB>> ]
+"6491" [label = <(METHOD,CallNonvirtualVoidMethodA)<SUB>1591</SUB>> ]
+"6540" [label = <(METHOD_RETURN,void)<SUB>1591</SUB>> ]
   "6498" -> "6503" 
   "6498" -> "6515" 
   "6515" -> "6520" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/132-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/132-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/132-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/132-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,33 +1,33 @@
 digraph "GetFieldID" {  
-"6548" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1601</SUB>> ]
-"6566" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1602</SUB>> ]
-"6584" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1603</SUB>> ]
-"6603" [label = <(soa,soa(env))<SUB>1604</SUB>> ]
-"6605" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, false);,return FindFieldID(soa, java_class, name, sig, false);)<SUB>1605</SUB>> ]
-"6606" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, false))<SUB>1605</SUB>> ]
-"6552" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1601</SUB>> ]
-"6570" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1602</SUB>> ]
-"6588" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1603</SUB>> ]
-"6553" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1601</SUB>> ]
-"6557" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1601</SUB>> ]
-"6564" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1601</SUB>> ]
-"6571" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1602</SUB>> ]
-"6575" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1602</SUB>> ]
-"6582" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1602</SUB>> ]
-"6589" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1603</SUB>> ]
-"6593" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1603</SUB>> ]
-"6600" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1603</SUB>> ]
-"6558" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1601</SUB>> ]
-"6576" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1602</SUB>> ]
-"6594" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1603</SUB>> ]
-"6559" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1601</SUB>> ]
-"6561" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1601</SUB>> ]
-"6577" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1602</SUB>> ]
-"6579" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1602</SUB>> ]
-"6595" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1603</SUB>> ]
-"6597" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1603</SUB>> ]
-"6542" [label = <(METHOD,GetFieldID)<SUB>1600</SUB>> ]
-"6612" [label = <(METHOD_RETURN,jfieldID)<SUB>1600</SUB>> ]
+"6548" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1600</SUB>> ]
+"6566" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1601</SUB>> ]
+"6584" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1602</SUB>> ]
+"6603" [label = <(soa,soa(env))<SUB>1603</SUB>> ]
+"6605" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, false);,return FindFieldID(soa, java_class, name, sig, false);)<SUB>1604</SUB>> ]
+"6606" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, false))<SUB>1604</SUB>> ]
+"6552" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1600</SUB>> ]
+"6570" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1601</SUB>> ]
+"6588" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1602</SUB>> ]
+"6553" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1600</SUB>> ]
+"6557" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1600</SUB>> ]
+"6564" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1600</SUB>> ]
+"6571" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1601</SUB>> ]
+"6575" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1601</SUB>> ]
+"6582" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1601</SUB>> ]
+"6589" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1602</SUB>> ]
+"6593" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1602</SUB>> ]
+"6600" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1602</SUB>> ]
+"6558" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1600</SUB>> ]
+"6576" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1601</SUB>> ]
+"6594" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1602</SUB>> ]
+"6559" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1600</SUB>> ]
+"6561" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1600</SUB>> ]
+"6577" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1601</SUB>> ]
+"6579" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1601</SUB>> ]
+"6595" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1602</SUB>> ]
+"6597" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1602</SUB>> ]
+"6542" [label = <(METHOD,GetFieldID)<SUB>1599</SUB>> ]
+"6612" [label = <(METHOD_RETURN,jfieldID)<SUB>1599</SUB>> ]
   "6548" -> "6553" 
   "6548" -> "6566" 
   "6566" -> "6571" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/133-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/133-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/133-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/133-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,33 +1,33 @@
 digraph "GetStaticFieldID" {  
-"6620" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1610</SUB>> ]
-"6638" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1611</SUB>> ]
-"6656" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1612</SUB>> ]
-"6675" [label = <(soa,soa(env))<SUB>1613</SUB>> ]
-"6677" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, true);,return FindFieldID(soa, java_class, name, sig, true);)<SUB>1614</SUB>> ]
-"6678" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, true))<SUB>1614</SUB>> ]
-"6624" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1610</SUB>> ]
-"6642" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1611</SUB>> ]
-"6660" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1612</SUB>> ]
-"6625" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1610</SUB>> ]
-"6629" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1610</SUB>> ]
-"6636" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1610</SUB>> ]
-"6643" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1611</SUB>> ]
-"6647" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1611</SUB>> ]
-"6654" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1611</SUB>> ]
-"6661" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1612</SUB>> ]
-"6665" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1612</SUB>> ]
-"6672" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1612</SUB>> ]
-"6630" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1610</SUB>> ]
-"6648" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1611</SUB>> ]
-"6666" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1612</SUB>> ]
-"6631" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1610</SUB>> ]
-"6633" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1610</SUB>> ]
-"6649" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1611</SUB>> ]
-"6651" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1611</SUB>> ]
-"6667" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1612</SUB>> ]
-"6669" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1612</SUB>> ]
-"6614" [label = <(METHOD,GetStaticFieldID)<SUB>1608</SUB>> ]
-"6684" [label = <(METHOD_RETURN,jfieldID)<SUB>1608</SUB>> ]
+"6620" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1609</SUB>> ]
+"6638" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1610</SUB>> ]
+"6656" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1611</SUB>> ]
+"6675" [label = <(soa,soa(env))<SUB>1612</SUB>> ]
+"6677" [label = <(RETURN,return FindFieldID(soa, java_class, name, sig, true);,return FindFieldID(soa, java_class, name, sig, true);)<SUB>1613</SUB>> ]
+"6678" [label = <(FindFieldID,FindFieldID(soa, java_class, name, sig, true))<SUB>1613</SUB>> ]
+"6624" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1609</SUB>> ]
+"6642" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1610</SUB>> ]
+"6660" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1611</SUB>> ]
+"6625" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1609</SUB>> ]
+"6629" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1609</SUB>> ]
+"6636" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1609</SUB>> ]
+"6643" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1610</SUB>> ]
+"6647" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1610</SUB>> ]
+"6654" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1610</SUB>> ]
+"6661" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1611</SUB>> ]
+"6665" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1611</SUB>> ]
+"6672" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1611</SUB>> ]
+"6630" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1609</SUB>> ]
+"6648" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1610</SUB>> ]
+"6666" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1611</SUB>> ]
+"6631" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1609</SUB>> ]
+"6633" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1609</SUB>> ]
+"6649" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1610</SUB>> ]
+"6651" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1610</SUB>> ]
+"6667" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1611</SUB>> ]
+"6669" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1611</SUB>> ]
+"6614" [label = <(METHOD,GetStaticFieldID)<SUB>1607</SUB>> ]
+"6684" [label = <(METHOD_RETURN,jfieldID)<SUB>1607</SUB>> ]
   "6620" -> "6625" 
   "6620" -> "6638" 
   "6638" -> "6643" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/134-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/134-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/134-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/134-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,47 +1,47 @@
 digraph "GetObjectField" {  
-"6691" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1618</SUB>> ]
-"6709" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1619</SUB>> ]
-"6728" [label = <(soa,soa(env))<SUB>1620</SUB>> ]
-"6731" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1621</SUB>> ]
-"6738" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1622</SUB>> ]
-"6741" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1623</SUB>> ]
-"6758" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));)<SUB>1624</SUB>> ]
-"6733" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1621</SUB>> ]
-"6742" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1623</SUB>> ]
-"6749" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1623</SUB>> ]
-"6759" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o)))<SUB>1624</SUB>> ]
-"6734" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1621</SUB>> ]
-"6743" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1623</SUB>> ]
-"6750" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1623</SUB>> ]
-"6760" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1624</SUB>> ]
-"6765" [label = <(GetObject,f-&gt;GetObject(o))<SUB>1624</SUB>> ]
-"6695" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1618</SUB>> ]
-"6713" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1619</SUB>> ]
-"6736" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1621</SUB>> ]
-"6745" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1623</SUB>> ]
-"6751" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1623</SUB>> ]
-"6754" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1623</SUB>> ]
-"6761" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1624</SUB>> ]
-"6766" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1624</SUB>> ]
-"6696" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1618</SUB>> ]
-"6700" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1618</SUB>> ]
-"6707" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1618</SUB>> ]
-"6714" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1619</SUB>> ]
-"6718" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1619</SUB>> ]
-"6725" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1619</SUB>> ]
-"6747" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1623</SUB>> ]
-"6753" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1623</SUB>> ]
-"6756" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1623</SUB>> ]
-"6763" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1624</SUB>> ]
-"6768" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1624</SUB>> ]
-"6701" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1618</SUB>> ]
-"6719" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1619</SUB>> ]
-"6702" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1618</SUB>> ]
-"6704" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1618</SUB>> ]
-"6720" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1619</SUB>> ]
-"6722" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1619</SUB>> ]
-"6686" [label = <(METHOD,GetObjectField)<SUB>1617</SUB>> ]
-"6770" [label = <(METHOD_RETURN,jobject)<SUB>1617</SUB>> ]
+"6691" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1617</SUB>> ]
+"6709" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1618</SUB>> ]
+"6728" [label = <(soa,soa(env))<SUB>1619</SUB>> ]
+"6731" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1620</SUB>> ]
+"6738" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1621</SUB>> ]
+"6741" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1622</SUB>> ]
+"6758" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o));)<SUB>1623</SUB>> ]
+"6733" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1620</SUB>> ]
+"6742" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1622</SUB>> ]
+"6749" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>1622</SUB>> ]
+"6759" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(o)))<SUB>1623</SUB>> ]
+"6734" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1620</SUB>> ]
+"6743" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1622</SUB>> ]
+"6750" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1622</SUB>> ]
+"6760" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1623</SUB>> ]
+"6765" [label = <(GetObject,f-&gt;GetObject(o))<SUB>1623</SUB>> ]
+"6695" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1617</SUB>> ]
+"6713" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1618</SUB>> ]
+"6736" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1620</SUB>> ]
+"6745" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1622</SUB>> ]
+"6751" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1622</SUB>> ]
+"6754" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1622</SUB>> ]
+"6761" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1623</SUB>> ]
+"6766" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1623</SUB>> ]
+"6696" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1617</SUB>> ]
+"6700" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1617</SUB>> ]
+"6707" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1617</SUB>> ]
+"6714" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1618</SUB>> ]
+"6718" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1618</SUB>> ]
+"6725" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1618</SUB>> ]
+"6747" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1622</SUB>> ]
+"6753" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1622</SUB>> ]
+"6756" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1622</SUB>> ]
+"6763" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1623</SUB>> ]
+"6768" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1623</SUB>> ]
+"6701" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1617</SUB>> ]
+"6719" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1618</SUB>> ]
+"6702" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1617</SUB>> ]
+"6704" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1617</SUB>> ]
+"6720" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1618</SUB>> ]
+"6722" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1618</SUB>> ]
+"6686" [label = <(METHOD,GetObjectField)<SUB>1616</SUB>> ]
+"6770" [label = <(METHOD_RETURN,jobject)<SUB>1616</SUB>> ]
   "6691" -> "6696" 
   "6691" -> "6709" 
   "6709" -> "6714" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/135-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/135-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/135-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/135-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,31 +1,31 @@
 digraph "GetStaticObjectField" {  
-"6777" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1628</SUB>> ]
-"6796" [label = <(soa,soa(env))<SUB>1629</SUB>> ]
-"6799" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1630</SUB>> ]
-"6806" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1631</SUB>> ]
-"6809" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));)<SUB>1632</SUB>> ]
-"6801" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1630</SUB>> ]
-"6810" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass())))<SUB>1632</SUB>> ]
-"6802" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1630</SUB>> ]
-"6811" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1632</SUB>> ]
-"6816" [label = <(GetObject,f-&gt;GetObject(f-&gt;GetDeclaringClass()))<SUB>1632</SUB>> ]
-"6781" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1628</SUB>> ]
-"6804" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1630</SUB>> ]
-"6812" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1632</SUB>> ]
-"6817" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1632</SUB>> ]
-"6820" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1632</SUB>> ]
-"6782" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1628</SUB>> ]
-"6786" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1628</SUB>> ]
-"6793" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1628</SUB>> ]
-"6814" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1632</SUB>> ]
-"6819" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1632</SUB>> ]
-"6821" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1632</SUB>> ]
-"6787" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1628</SUB>> ]
-"6823" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1632</SUB>> ]
-"6788" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1628</SUB>> ]
-"6790" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1628</SUB>> ]
-"6772" [label = <(METHOD,GetStaticObjectField)<SUB>1627</SUB>> ]
-"6824" [label = <(METHOD_RETURN,jobject)<SUB>1627</SUB>> ]
+"6777" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>1627</SUB>> ]
+"6796" [label = <(soa,soa(env))<SUB>1628</SUB>> ]
+"6799" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1629</SUB>> ]
+"6806" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1630</SUB>> ]
+"6809" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));,return soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass()));)<SUB>1631</SUB>> ]
+"6801" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1629</SUB>> ]
+"6810" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(f-&gt;GetObject(f-&gt;GetDeclaringClass())))<SUB>1631</SUB>> ]
+"6802" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1629</SUB>> ]
+"6811" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1631</SUB>> ]
+"6816" [label = <(GetObject,f-&gt;GetObject(f-&gt;GetDeclaringClass()))<SUB>1631</SUB>> ]
+"6781" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1627</SUB>> ]
+"6804" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1629</SUB>> ]
+"6812" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1631</SUB>> ]
+"6817" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetObject)<SUB>1631</SUB>> ]
+"6820" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1631</SUB>> ]
+"6782" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1627</SUB>> ]
+"6786" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1627</SUB>> ]
+"6793" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>1627</SUB>> ]
+"6814" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1631</SUB>> ]
+"6819" [label = <(FIELD_IDENTIFIER,GetObject,GetObject)<SUB>1631</SUB>> ]
+"6821" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1631</SUB>> ]
+"6787" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1627</SUB>> ]
+"6823" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1631</SUB>> ]
+"6788" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1627</SUB>> ]
+"6790" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1627</SUB>> ]
+"6772" [label = <(METHOD,GetStaticObjectField)<SUB>1626</SUB>> ]
+"6824" [label = <(METHOD_RETURN,jobject)<SUB>1626</SUB>> ]
   "6777" -> "6782" 
   "6777" -> "6796" 
   "6796" -> "6804" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/136-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/136-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/136-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/136-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,56 +1,56 @@
 digraph "SetObjectField" {  
-"6832" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1636</SUB>> ]
-"6849" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1637</SUB>> ]
-"6867" [label = <(soa,soa(env))<SUB>1638</SUB>> ]
-"6870" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1639</SUB>> ]
-"6877" [label = <(NotifySetObjectField,NotifySetObjectField(f, java_object, java_value))<SUB>1640</SUB>> ]
-"6881" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1641</SUB>> ]
-"6898" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1642</SUB>> ]
-"6915" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(o, v))<SUB>1643</SUB>> ]
-"6872" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1639</SUB>> ]
-"6882" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1641</SUB>> ]
-"6889" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1641</SUB>> ]
-"6899" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1642</SUB>> ]
-"6906" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1642</SUB>> ]
-"6916" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1643</SUB>> ]
-"6921" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1643</SUB>> ]
-"6873" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1639</SUB>> ]
-"6883" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1641</SUB>> ]
-"6890" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1641</SUB>> ]
-"6900" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1642</SUB>> ]
-"6907" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1642</SUB>> ]
-"6917" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1643</SUB>> ]
-"6922" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1643</SUB>> ]
-"6836" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>1636</SUB>> ]
-"6853" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1637</SUB>> ]
-"6875" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1639</SUB>> ]
-"6885" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1641</SUB>> ]
-"6891" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1641</SUB>> ]
-"6894" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1641</SUB>> ]
-"6902" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1642</SUB>> ]
-"6908" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1642</SUB>> ]
-"6911" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1642</SUB>> ]
-"6919" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1643</SUB>> ]
-"6837" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>1636</SUB>> ]
-"6841" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>1636</SUB>> ]
-"6848" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1636</SUB>> ]
-"6854" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1637</SUB>> ]
-"6858" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1637</SUB>> ]
-"6865" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1637</SUB>> ]
-"6887" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1641</SUB>> ]
-"6893" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1641</SUB>> ]
-"6896" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1641</SUB>> ]
-"6904" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1642</SUB>> ]
-"6910" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1642</SUB>> ]
-"6913" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1642</SUB>> ]
-"6842" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1636</SUB>> ]
-"6859" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1637</SUB>> ]
-"6843" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1636</SUB>> ]
-"6845" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1636</SUB>> ]
-"6860" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1637</SUB>> ]
-"6862" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1637</SUB>> ]
-"6826" [label = <(METHOD,SetObjectField)<SUB>1635</SUB>> ]
-"6925" [label = <(METHOD_RETURN,void)<SUB>1635</SUB>> ]
+"6832" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1635</SUB>> ]
+"6849" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1636</SUB>> ]
+"6867" [label = <(soa,soa(env))<SUB>1637</SUB>> ]
+"6870" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1638</SUB>> ]
+"6877" [label = <(NotifySetObjectField,NotifySetObjectField(f, java_object, java_value))<SUB>1639</SUB>> ]
+"6881" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1640</SUB>> ]
+"6898" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1641</SUB>> ]
+"6915" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(o, v))<SUB>1642</SUB>> ]
+"6872" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1638</SUB>> ]
+"6882" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>1640</SUB>> ]
+"6889" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>1640</SUB>> ]
+"6899" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1641</SUB>> ]
+"6906" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1641</SUB>> ]
+"6916" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1642</SUB>> ]
+"6921" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1642</SUB>> ]
+"6873" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1638</SUB>> ]
+"6883" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1640</SUB>> ]
+"6890" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1640</SUB>> ]
+"6900" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1641</SUB>> ]
+"6907" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1641</SUB>> ]
+"6917" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1642</SUB>> ]
+"6922" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1642</SUB>> ]
+"6836" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>1635</SUB>> ]
+"6853" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1636</SUB>> ]
+"6875" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1638</SUB>> ]
+"6885" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1640</SUB>> ]
+"6891" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1640</SUB>> ]
+"6894" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1640</SUB>> ]
+"6902" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1641</SUB>> ]
+"6908" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1641</SUB>> ]
+"6911" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1641</SUB>> ]
+"6919" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1642</SUB>> ]
+"6837" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>1635</SUB>> ]
+"6841" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>1635</SUB>> ]
+"6848" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))<SUB>1635</SUB>> ]
+"6854" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1636</SUB>> ]
+"6858" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1636</SUB>> ]
+"6865" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1636</SUB>> ]
+"6887" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1640</SUB>> ]
+"6893" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1640</SUB>> ]
+"6896" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1640</SUB>> ]
+"6904" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1641</SUB>> ]
+"6910" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1641</SUB>> ]
+"6913" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1641</SUB>> ]
+"6842" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1635</SUB>> ]
+"6859" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1636</SUB>> ]
+"6843" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1635</SUB>> ]
+"6845" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1635</SUB>> ]
+"6860" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1636</SUB>> ]
+"6862" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1636</SUB>> ]
+"6826" [label = <(METHOD,SetObjectField)<SUB>1634</SUB>> ]
+"6925" [label = <(METHOD_RETURN,void)<SUB>1634</SUB>> ]
   "6832" -> "6837" 
   "6832" -> "6849" 
   "6849" -> "6854" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/137-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/137-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/137-cfg.dot	2023-06-07 19:34:48.357388394 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/137-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,40 +1,40 @@
 digraph "SetStaticObjectField" {  
-"6933" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1647</SUB>> ]
-"6951" [label = <(soa,soa(env))<SUB>1648</SUB>> ]
-"6954" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1649</SUB>> ]
-"6961" [label = <(NotifySetObjectField,NotifySetObjectField(f, nullptr, java_value))<SUB>1650</SUB>> ]
-"6965" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1651</SUB>> ]
-"6982" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(f-&gt;GetDeclaringClass(), v))<SUB>1652</SUB>> ]
-"6956" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1649</SUB>> ]
-"6966" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1651</SUB>> ]
-"6973" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1651</SUB>> ]
-"6983" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1652</SUB>> ]
-"6988" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1652</SUB>> ]
-"6957" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1649</SUB>> ]
-"6967" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1651</SUB>> ]
-"6974" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1651</SUB>> ]
-"6984" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1652</SUB>> ]
-"6989" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1652</SUB>> ]
-"6937" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1647</SUB>> ]
-"6959" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1649</SUB>> ]
-"6969" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1651</SUB>> ]
-"6975" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1651</SUB>> ]
-"6978" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1651</SUB>> ]
-"6986" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1652</SUB>> ]
-"6990" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1652</SUB>> ]
-"6938" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1647</SUB>> ]
-"6942" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1647</SUB>> ]
-"6949" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1647</SUB>> ]
-"6971" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1651</SUB>> ]
-"6977" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1651</SUB>> ]
-"6980" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1651</SUB>> ]
-"6991" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1652</SUB>> ]
-"6943" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1647</SUB>> ]
-"6993" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1652</SUB>> ]
-"6944" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1647</SUB>> ]
-"6946" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1647</SUB>> ]
-"6927" [label = <(METHOD,SetStaticObjectField)<SUB>1646</SUB>> ]
-"6995" [label = <(METHOD_RETURN,void)<SUB>1646</SUB>> ]
+"6933" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1646</SUB>> ]
+"6951" [label = <(soa,soa(env))<SUB>1647</SUB>> ]
+"6954" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>1648</SUB>> ]
+"6961" [label = <(NotifySetObjectField,NotifySetObjectField(f, nullptr, java_value))<SUB>1649</SUB>> ]
+"6965" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; v = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1650</SUB>> ]
+"6982" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetObject&lt;false&gt;(f-&gt;GetDeclaringClass(), v))<SUB>1651</SUB>> ]
+"6956" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>1648</SUB>> ]
+"6966" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; v)<SUB>1650</SUB>> ]
+"6973" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>1650</SUB>> ]
+"6983" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetObject&lt;false)<SUB>1651</SUB>> ]
+"6988" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1651</SUB>> ]
+"6957" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>1648</SUB>> ]
+"6967" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1650</SUB>> ]
+"6974" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>1650</SUB>> ]
+"6984" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetObject)<SUB>1651</SUB>> ]
+"6989" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1651</SUB>> ]
+"6937" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1646</SUB>> ]
+"6959" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1648</SUB>> ]
+"6969" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1650</SUB>> ]
+"6975" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1650</SUB>> ]
+"6978" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1650</SUB>> ]
+"6986" [label = <(FIELD_IDENTIFIER,SetObject,SetObject)<SUB>1651</SUB>> ]
+"6990" [label = <(GetDeclaringClass,f-&gt;GetDeclaringClass())<SUB>1651</SUB>> ]
+"6938" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1646</SUB>> ]
+"6942" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1646</SUB>> ]
+"6949" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))<SUB>1646</SUB>> ]
+"6971" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1650</SUB>> ]
+"6977" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1650</SUB>> ]
+"6980" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1650</SUB>> ]
+"6991" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1651</SUB>> ]
+"6943" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1646</SUB>> ]
+"6993" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1651</SUB>> ]
+"6944" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1646</SUB>> ]
+"6946" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1646</SUB>> ]
+"6927" [label = <(METHOD,SetStaticObjectField)<SUB>1645</SUB>> ]
+"6995" [label = <(METHOD_RETURN,void)<SUB>1645</SUB>> ]
   "6933" -> "6938" 
   "6933" -> "6951" 
   "6951" -> "6959" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/138-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/138-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/138-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/138-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,42 +1,42 @@
 digraph "GetBooleanField" {  
-"7002" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1688</SUB>> ]
-"7036" [label = <(soa,ScopedObjectAccess)<SUB>1688</SUB>> ]
-"7039" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1688</SUB>> ]
-"7046" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1688</SUB>> ]
-"7049" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1688</SUB>> ]
-"7066" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj);,GET_PRIMITIVE_FIELD(Boolean, obj);)<SUB>1688</SUB>> ]
-"7021" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1688</SUB>> ]
-"7041" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),jni::DecodeArtField(fid))<SUB>1688</SUB>> ]
-"7050" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1688</SUB>> ]
-"7057" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1688</SUB>> ]
-"7067" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),f-&gt;GetBoolean(o))<SUB>1688</SUB>> ]
-"7022" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1688</SUB>> ]
-"7026" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1688</SUB>> ]
-"7033" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1688</SUB>> ]
-"7042" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1688</SUB>> ]
-"7051" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1688</SUB>> ]
-"7058" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1688</SUB>> ]
-"7068" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1688</SUB>> ]
-"7006" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1688</SUB>> ]
-"7027" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1688</SUB>> ]
-"7044" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1688</SUB>> ]
-"7053" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1688</SUB>> ]
-"7059" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1688</SUB>> ]
-"7062" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1688</SUB>> ]
-"7070" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1688</SUB>> ]
-"7007" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1688</SUB>> ]
-"7011" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1688</SUB>> ]
-"7018" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1688</SUB>> ]
-"7028" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1688</SUB>> ]
-"7030" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1688</SUB>> ]
-"7055" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1688</SUB>> ]
-"7061" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1688</SUB>> ]
-"7064" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1688</SUB>> ]
-"7012" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1688</SUB>> ]
-"7013" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1688</SUB>> ]
-"7015" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1688</SUB>> ]
-"6997" [label = <(METHOD,GetBooleanField)<SUB>1687</SUB>> ]
-"7072" [label = <(METHOD_RETURN,jboolean)<SUB>1687</SUB>> ]
+"7002" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1687</SUB>> ]
+"7036" [label = <(soa,ScopedObjectAccess)<SUB>1687</SUB>> ]
+"7039" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1687</SUB>> ]
+"7046" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1687</SUB>> ]
+"7049" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1687</SUB>> ]
+"7066" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj);,GET_PRIMITIVE_FIELD(Boolean, obj);)<SUB>1687</SUB>> ]
+"7021" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1687</SUB>> ]
+"7041" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),jni::DecodeArtField(fid))<SUB>1687</SUB>> ]
+"7050" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1687</SUB>> ]
+"7057" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1687</SUB>> ]
+"7067" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),f-&gt;GetBoolean(o))<SUB>1687</SUB>> ]
+"7022" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1687</SUB>> ]
+"7026" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1687</SUB>> ]
+"7033" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1687</SUB>> ]
+"7042" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1687</SUB>> ]
+"7051" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1687</SUB>> ]
+"7058" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1687</SUB>> ]
+"7068" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1687</SUB>> ]
+"7006" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1687</SUB>> ]
+"7027" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1687</SUB>> ]
+"7044" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1687</SUB>> ]
+"7053" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1687</SUB>> ]
+"7059" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1687</SUB>> ]
+"7062" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1687</SUB>> ]
+"7070" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1687</SUB>> ]
+"7007" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1687</SUB>> ]
+"7011" [label = <(GET_PRIMITIVE_FIELD(Boolean, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1687</SUB>> ]
+"7018" [label = <(RETURN,GET_PRIMITIVE_FIELD(Boolean, obj),GET_PRIMITIVE_FIELD(Boolean, obj))<SUB>1687</SUB>> ]
+"7028" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1687</SUB>> ]
+"7030" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1687</SUB>> ]
+"7055" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1687</SUB>> ]
+"7061" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1687</SUB>> ]
+"7064" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1687</SUB>> ]
+"7012" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1687</SUB>> ]
+"7013" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1687</SUB>> ]
+"7015" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1687</SUB>> ]
+"6997" [label = <(METHOD,GetBooleanField)<SUB>1686</SUB>> ]
+"7072" [label = <(METHOD_RETURN,jboolean)<SUB>1686</SUB>> ]
   "7002" -> "7007" 
   "7002" -> "7022" 
   "7036" -> "7044" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/139-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/139-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/139-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/139-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,42 +1,42 @@
 digraph "GetByteField" {  
-"7079" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1692</SUB>> ]
-"7113" [label = <(soa,ScopedObjectAccess)<SUB>1692</SUB>> ]
-"7116" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1692</SUB>> ]
-"7123" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1692</SUB>> ]
-"7126" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1692</SUB>> ]
-"7143" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj);,GET_PRIMITIVE_FIELD(Byte, obj);)<SUB>1692</SUB>> ]
-"7098" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1692</SUB>> ]
-"7118" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),jni::DecodeArtField(fid))<SUB>1692</SUB>> ]
-"7127" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1692</SUB>> ]
-"7134" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1692</SUB>> ]
-"7144" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),f-&gt;GetByte(o))<SUB>1692</SUB>> ]
-"7099" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1692</SUB>> ]
-"7103" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1692</SUB>> ]
-"7110" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1692</SUB>> ]
-"7119" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1692</SUB>> ]
-"7128" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1692</SUB>> ]
-"7135" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1692</SUB>> ]
-"7145" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1692</SUB>> ]
-"7083" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1692</SUB>> ]
-"7104" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1692</SUB>> ]
-"7121" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1692</SUB>> ]
-"7130" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1692</SUB>> ]
-"7136" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1692</SUB>> ]
-"7139" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1692</SUB>> ]
-"7147" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1692</SUB>> ]
-"7084" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1692</SUB>> ]
-"7088" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1692</SUB>> ]
-"7095" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1692</SUB>> ]
-"7105" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1692</SUB>> ]
-"7107" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1692</SUB>> ]
-"7132" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1692</SUB>> ]
-"7138" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1692</SUB>> ]
-"7141" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1692</SUB>> ]
-"7089" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1692</SUB>> ]
-"7090" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1692</SUB>> ]
-"7092" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1692</SUB>> ]
-"7074" [label = <(METHOD,GetByteField)<SUB>1691</SUB>> ]
-"7149" [label = <(METHOD_RETURN,jbyte)<SUB>1691</SUB>> ]
+"7079" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1691</SUB>> ]
+"7113" [label = <(soa,ScopedObjectAccess)<SUB>1691</SUB>> ]
+"7116" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1691</SUB>> ]
+"7123" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1691</SUB>> ]
+"7126" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1691</SUB>> ]
+"7143" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj);,GET_PRIMITIVE_FIELD(Byte, obj);)<SUB>1691</SUB>> ]
+"7098" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1691</SUB>> ]
+"7118" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),jni::DecodeArtField(fid))<SUB>1691</SUB>> ]
+"7127" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1691</SUB>> ]
+"7134" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1691</SUB>> ]
+"7144" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),f-&gt;GetByte(o))<SUB>1691</SUB>> ]
+"7099" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1691</SUB>> ]
+"7103" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1691</SUB>> ]
+"7110" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1691</SUB>> ]
+"7119" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1691</SUB>> ]
+"7128" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1691</SUB>> ]
+"7135" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1691</SUB>> ]
+"7145" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1691</SUB>> ]
+"7083" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1691</SUB>> ]
+"7104" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1691</SUB>> ]
+"7121" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1691</SUB>> ]
+"7130" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1691</SUB>> ]
+"7136" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1691</SUB>> ]
+"7139" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1691</SUB>> ]
+"7147" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1691</SUB>> ]
+"7084" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1691</SUB>> ]
+"7088" [label = <(GET_PRIMITIVE_FIELD(Byte, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1691</SUB>> ]
+"7095" [label = <(RETURN,GET_PRIMITIVE_FIELD(Byte, obj),GET_PRIMITIVE_FIELD(Byte, obj))<SUB>1691</SUB>> ]
+"7105" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1691</SUB>> ]
+"7107" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1691</SUB>> ]
+"7132" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1691</SUB>> ]
+"7138" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1691</SUB>> ]
+"7141" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1691</SUB>> ]
+"7089" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1691</SUB>> ]
+"7090" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1691</SUB>> ]
+"7092" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1691</SUB>> ]
+"7074" [label = <(METHOD,GetByteField)<SUB>1690</SUB>> ]
+"7149" [label = <(METHOD_RETURN,jbyte)<SUB>1690</SUB>> ]
   "7079" -> "7084" 
   "7079" -> "7099" 
   "7113" -> "7121" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/14-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/14-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/14-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/14-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,11 +1,11 @@
 digraph "HasCache" {  
-"351" [label = <(RETURN,return memory_type_table_.Size() != 0;,return memory_type_table_.Size() != 0;)<SUB>219</SUB>> ]
-"352" [label = <(&lt;operator&gt;.notEquals,memory_type_table_.Size() != 0)<SUB>219</SUB>> ]
-"353" [label = <(Size,memory_type_table_.Size())<SUB>219</SUB>> ]
-"354" [label = <(&lt;operator&gt;.fieldAccess,memory_type_table_.Size)<SUB>219</SUB>> ]
-"356" [label = <(FIELD_IDENTIFIER,Size,Size)<SUB>219</SUB>> ]
-"349" [label = <(METHOD,HasCache)<SUB>218</SUB>> ]
-"358" [label = <(METHOD_RETURN,bool)<SUB>218</SUB>> ]
+"351" [label = <(RETURN,return memory_type_table_.Size() != 0;,return memory_type_table_.Size() != 0;)<SUB>218</SUB>> ]
+"352" [label = <(&lt;operator&gt;.notEquals,memory_type_table_.Size() != 0)<SUB>218</SUB>> ]
+"353" [label = <(Size,memory_type_table_.Size())<SUB>218</SUB>> ]
+"354" [label = <(&lt;operator&gt;.fieldAccess,memory_type_table_.Size)<SUB>218</SUB>> ]
+"356" [label = <(FIELD_IDENTIFIER,Size,Size)<SUB>218</SUB>> ]
+"349" [label = <(METHOD,HasCache)<SUB>217</SUB>> ]
+"358" [label = <(METHOD_RETURN,bool)<SUB>217</SUB>> ]
   "351" -> "358" 
   "352" -> "351" 
   "353" -> "352" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/140-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/140-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/140-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/140-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,42 +1,42 @@
 digraph "GetCharField" {  
-"7156" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1696</SUB>> ]
-"7190" [label = <(soa,ScopedObjectAccess)<SUB>1696</SUB>> ]
-"7193" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1696</SUB>> ]
-"7200" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1696</SUB>> ]
-"7203" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1696</SUB>> ]
-"7220" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj);,GET_PRIMITIVE_FIELD(Char, obj);)<SUB>1696</SUB>> ]
-"7175" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1696</SUB>> ]
-"7195" [label = <(GET_PRIMITIVE_FIELD(Char, obj),jni::DecodeArtField(fid))<SUB>1696</SUB>> ]
-"7204" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1696</SUB>> ]
-"7211" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1696</SUB>> ]
-"7221" [label = <(GET_PRIMITIVE_FIELD(Char, obj),f-&gt;GetChar(o))<SUB>1696</SUB>> ]
-"7176" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1696</SUB>> ]
-"7180" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1696</SUB>> ]
-"7187" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1696</SUB>> ]
-"7196" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1696</SUB>> ]
-"7205" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1696</SUB>> ]
-"7212" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1696</SUB>> ]
-"7222" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1696</SUB>> ]
-"7160" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1696</SUB>> ]
-"7181" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1696</SUB>> ]
-"7198" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1696</SUB>> ]
-"7207" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1696</SUB>> ]
-"7213" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1696</SUB>> ]
-"7216" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1696</SUB>> ]
-"7224" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1696</SUB>> ]
-"7161" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1696</SUB>> ]
-"7165" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1696</SUB>> ]
-"7172" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1696</SUB>> ]
-"7182" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1696</SUB>> ]
-"7184" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1696</SUB>> ]
-"7209" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1696</SUB>> ]
-"7215" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1696</SUB>> ]
-"7218" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1696</SUB>> ]
-"7166" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1696</SUB>> ]
-"7167" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1696</SUB>> ]
-"7169" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1696</SUB>> ]
-"7151" [label = <(METHOD,GetCharField)<SUB>1695</SUB>> ]
-"7226" [label = <(METHOD_RETURN,jchar)<SUB>1695</SUB>> ]
+"7156" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1695</SUB>> ]
+"7190" [label = <(soa,ScopedObjectAccess)<SUB>1695</SUB>> ]
+"7193" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1695</SUB>> ]
+"7200" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1695</SUB>> ]
+"7203" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1695</SUB>> ]
+"7220" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj);,GET_PRIMITIVE_FIELD(Char, obj);)<SUB>1695</SUB>> ]
+"7175" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1695</SUB>> ]
+"7195" [label = <(GET_PRIMITIVE_FIELD(Char, obj),jni::DecodeArtField(fid))<SUB>1695</SUB>> ]
+"7204" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1695</SUB>> ]
+"7211" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1695</SUB>> ]
+"7221" [label = <(GET_PRIMITIVE_FIELD(Char, obj),f-&gt;GetChar(o))<SUB>1695</SUB>> ]
+"7176" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1695</SUB>> ]
+"7180" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1695</SUB>> ]
+"7187" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1695</SUB>> ]
+"7196" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1695</SUB>> ]
+"7205" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1695</SUB>> ]
+"7212" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1695</SUB>> ]
+"7222" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1695</SUB>> ]
+"7160" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1695</SUB>> ]
+"7181" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1695</SUB>> ]
+"7198" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1695</SUB>> ]
+"7207" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1695</SUB>> ]
+"7213" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1695</SUB>> ]
+"7216" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Char, obj))<SUB>1695</SUB>> ]
+"7224" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1695</SUB>> ]
+"7161" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1695</SUB>> ]
+"7165" [label = <(GET_PRIMITIVE_FIELD(Char, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1695</SUB>> ]
+"7172" [label = <(RETURN,GET_PRIMITIVE_FIELD(Char, obj),GET_PRIMITIVE_FIELD(Char, obj))<SUB>1695</SUB>> ]
+"7182" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1695</SUB>> ]
+"7184" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1695</SUB>> ]
+"7209" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1695</SUB>> ]
+"7215" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1695</SUB>> ]
+"7218" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1695</SUB>> ]
+"7166" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1695</SUB>> ]
+"7167" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1695</SUB>> ]
+"7169" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1695</SUB>> ]
+"7151" [label = <(METHOD,GetCharField)<SUB>1694</SUB>> ]
+"7226" [label = <(METHOD_RETURN,jchar)<SUB>1694</SUB>> ]
   "7156" -> "7161" 
   "7156" -> "7176" 
   "7190" -> "7198" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/141-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/141-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/141-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/141-cfg.dot	2023-06-07 19:34:54.957387781 +0330
@@ -1,42 +1,42 @@
 digraph "GetShortField" {  
-"7233" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1700</SUB>> ]
-"7267" [label = <(soa,ScopedObjectAccess)<SUB>1700</SUB>> ]
-"7270" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1700</SUB>> ]
-"7277" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1700</SUB>> ]
-"7280" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1700</SUB>> ]
-"7297" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj);,GET_PRIMITIVE_FIELD(Short, obj);)<SUB>1700</SUB>> ]
-"7252" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1700</SUB>> ]
-"7272" [label = <(GET_PRIMITIVE_FIELD(Short, obj),jni::DecodeArtField(fid))<SUB>1700</SUB>> ]
-"7281" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1700</SUB>> ]
-"7288" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1700</SUB>> ]
-"7298" [label = <(GET_PRIMITIVE_FIELD(Short, obj),f-&gt;GetShort(o))<SUB>1700</SUB>> ]
-"7253" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1700</SUB>> ]
-"7257" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1700</SUB>> ]
-"7264" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1700</SUB>> ]
-"7273" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1700</SUB>> ]
-"7282" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1700</SUB>> ]
-"7289" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1700</SUB>> ]
-"7299" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1700</SUB>> ]
-"7237" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1700</SUB>> ]
-"7258" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1700</SUB>> ]
-"7275" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1700</SUB>> ]
-"7284" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1700</SUB>> ]
-"7290" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1700</SUB>> ]
-"7293" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1700</SUB>> ]
-"7301" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1700</SUB>> ]
-"7238" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1700</SUB>> ]
-"7242" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1700</SUB>> ]
-"7249" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1700</SUB>> ]
-"7259" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1700</SUB>> ]
-"7261" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1700</SUB>> ]
-"7286" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1700</SUB>> ]
-"7292" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1700</SUB>> ]
-"7295" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1700</SUB>> ]
-"7243" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1700</SUB>> ]
-"7244" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1700</SUB>> ]
-"7246" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1700</SUB>> ]
-"7228" [label = <(METHOD,GetShortField)<SUB>1699</SUB>> ]
-"7303" [label = <(METHOD_RETURN,jshort)<SUB>1699</SUB>> ]
+"7233" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1699</SUB>> ]
+"7267" [label = <(soa,ScopedObjectAccess)<SUB>1699</SUB>> ]
+"7270" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1699</SUB>> ]
+"7277" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1699</SUB>> ]
+"7280" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1699</SUB>> ]
+"7297" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj);,GET_PRIMITIVE_FIELD(Short, obj);)<SUB>1699</SUB>> ]
+"7252" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1699</SUB>> ]
+"7272" [label = <(GET_PRIMITIVE_FIELD(Short, obj),jni::DecodeArtField(fid))<SUB>1699</SUB>> ]
+"7281" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1699</SUB>> ]
+"7288" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1699</SUB>> ]
+"7298" [label = <(GET_PRIMITIVE_FIELD(Short, obj),f-&gt;GetShort(o))<SUB>1699</SUB>> ]
+"7253" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1699</SUB>> ]
+"7257" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1699</SUB>> ]
+"7264" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1699</SUB>> ]
+"7273" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1699</SUB>> ]
+"7282" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1699</SUB>> ]
+"7289" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1699</SUB>> ]
+"7299" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1699</SUB>> ]
+"7237" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1699</SUB>> ]
+"7258" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1699</SUB>> ]
+"7275" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1699</SUB>> ]
+"7284" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1699</SUB>> ]
+"7290" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1699</SUB>> ]
+"7293" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Short, obj))<SUB>1699</SUB>> ]
+"7301" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1699</SUB>> ]
+"7238" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1699</SUB>> ]
+"7242" [label = <(GET_PRIMITIVE_FIELD(Short, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1699</SUB>> ]
+"7249" [label = <(RETURN,GET_PRIMITIVE_FIELD(Short, obj),GET_PRIMITIVE_FIELD(Short, obj))<SUB>1699</SUB>> ]
+"7259" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1699</SUB>> ]
+"7261" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1699</SUB>> ]
+"7286" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1699</SUB>> ]
+"7292" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1699</SUB>> ]
+"7295" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1699</SUB>> ]
+"7243" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1699</SUB>> ]
+"7244" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1699</SUB>> ]
+"7246" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1699</SUB>> ]
+"7228" [label = <(METHOD,GetShortField)<SUB>1698</SUB>> ]
+"7303" [label = <(METHOD_RETURN,jshort)<SUB>1698</SUB>> ]
   "7233" -> "7238" 
   "7233" -> "7253" 
   "7267" -> "7275" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/142-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/142-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/142-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/142-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,42 +1,42 @@
 digraph "GetIntField" {  
-"7310" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1704</SUB>> ]
-"7344" [label = <(soa,ScopedObjectAccess)<SUB>1704</SUB>> ]
-"7347" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1704</SUB>> ]
-"7354" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1704</SUB>> ]
-"7357" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1704</SUB>> ]
-"7374" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj);,GET_PRIMITIVE_FIELD(Int, obj);)<SUB>1704</SUB>> ]
-"7329" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1704</SUB>> ]
-"7349" [label = <(GET_PRIMITIVE_FIELD(Int, obj),jni::DecodeArtField(fid))<SUB>1704</SUB>> ]
-"7358" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1704</SUB>> ]
-"7365" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1704</SUB>> ]
-"7375" [label = <(GET_PRIMITIVE_FIELD(Int, obj),f-&gt;GetInt(o))<SUB>1704</SUB>> ]
-"7330" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1704</SUB>> ]
-"7334" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1704</SUB>> ]
-"7341" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1704</SUB>> ]
-"7350" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1704</SUB>> ]
-"7359" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1704</SUB>> ]
-"7366" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1704</SUB>> ]
-"7376" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1704</SUB>> ]
-"7314" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1704</SUB>> ]
-"7335" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1704</SUB>> ]
-"7352" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1704</SUB>> ]
-"7361" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1704</SUB>> ]
-"7367" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1704</SUB>> ]
-"7370" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1704</SUB>> ]
-"7378" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1704</SUB>> ]
-"7315" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1704</SUB>> ]
-"7319" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1704</SUB>> ]
-"7326" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1704</SUB>> ]
-"7336" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1704</SUB>> ]
-"7338" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1704</SUB>> ]
-"7363" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1704</SUB>> ]
-"7369" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1704</SUB>> ]
-"7372" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1704</SUB>> ]
-"7320" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1704</SUB>> ]
-"7321" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1704</SUB>> ]
-"7323" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1704</SUB>> ]
-"7305" [label = <(METHOD,GetIntField)<SUB>1703</SUB>> ]
-"7380" [label = <(METHOD_RETURN,jint)<SUB>1703</SUB>> ]
+"7310" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1703</SUB>> ]
+"7344" [label = <(soa,ScopedObjectAccess)<SUB>1703</SUB>> ]
+"7347" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1703</SUB>> ]
+"7354" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1703</SUB>> ]
+"7357" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1703</SUB>> ]
+"7374" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj);,GET_PRIMITIVE_FIELD(Int, obj);)<SUB>1703</SUB>> ]
+"7329" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1703</SUB>> ]
+"7349" [label = <(GET_PRIMITIVE_FIELD(Int, obj),jni::DecodeArtField(fid))<SUB>1703</SUB>> ]
+"7358" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1703</SUB>> ]
+"7365" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1703</SUB>> ]
+"7375" [label = <(GET_PRIMITIVE_FIELD(Int, obj),f-&gt;GetInt(o))<SUB>1703</SUB>> ]
+"7330" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1703</SUB>> ]
+"7334" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1703</SUB>> ]
+"7341" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1703</SUB>> ]
+"7350" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1703</SUB>> ]
+"7359" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1703</SUB>> ]
+"7366" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1703</SUB>> ]
+"7376" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1703</SUB>> ]
+"7314" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1703</SUB>> ]
+"7335" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1703</SUB>> ]
+"7352" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1703</SUB>> ]
+"7361" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1703</SUB>> ]
+"7367" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1703</SUB>> ]
+"7370" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Int, obj))<SUB>1703</SUB>> ]
+"7378" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1703</SUB>> ]
+"7315" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1703</SUB>> ]
+"7319" [label = <(GET_PRIMITIVE_FIELD(Int, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1703</SUB>> ]
+"7326" [label = <(RETURN,GET_PRIMITIVE_FIELD(Int, obj),GET_PRIMITIVE_FIELD(Int, obj))<SUB>1703</SUB>> ]
+"7336" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1703</SUB>> ]
+"7338" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1703</SUB>> ]
+"7363" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1703</SUB>> ]
+"7369" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1703</SUB>> ]
+"7372" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1703</SUB>> ]
+"7320" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1703</SUB>> ]
+"7321" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1703</SUB>> ]
+"7323" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1703</SUB>> ]
+"7305" [label = <(METHOD,GetIntField)<SUB>1702</SUB>> ]
+"7380" [label = <(METHOD_RETURN,jint)<SUB>1702</SUB>> ]
   "7310" -> "7315" 
   "7310" -> "7330" 
   "7344" -> "7352" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/143-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/143-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/143-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/143-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,42 +1,42 @@
 digraph "GetLongField" {  
-"7387" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1708</SUB>> ]
-"7421" [label = <(soa,ScopedObjectAccess)<SUB>1708</SUB>> ]
-"7424" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1708</SUB>> ]
-"7431" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1708</SUB>> ]
-"7434" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1708</SUB>> ]
-"7451" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj);,GET_PRIMITIVE_FIELD(Long, obj);)<SUB>1708</SUB>> ]
-"7406" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1708</SUB>> ]
-"7426" [label = <(GET_PRIMITIVE_FIELD(Long, obj),jni::DecodeArtField(fid))<SUB>1708</SUB>> ]
-"7435" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1708</SUB>> ]
-"7442" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1708</SUB>> ]
-"7452" [label = <(GET_PRIMITIVE_FIELD(Long, obj),f-&gt;GetLong(o))<SUB>1708</SUB>> ]
-"7407" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1708</SUB>> ]
-"7411" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1708</SUB>> ]
-"7418" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1708</SUB>> ]
-"7427" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1708</SUB>> ]
-"7436" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1708</SUB>> ]
-"7443" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1708</SUB>> ]
-"7453" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1708</SUB>> ]
-"7391" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1708</SUB>> ]
-"7412" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1708</SUB>> ]
-"7429" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1708</SUB>> ]
-"7438" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1708</SUB>> ]
-"7444" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1708</SUB>> ]
-"7447" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1708</SUB>> ]
-"7455" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1708</SUB>> ]
-"7392" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1708</SUB>> ]
-"7396" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1708</SUB>> ]
-"7403" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1708</SUB>> ]
-"7413" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1708</SUB>> ]
-"7415" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1708</SUB>> ]
-"7440" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1708</SUB>> ]
-"7446" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1708</SUB>> ]
-"7449" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1708</SUB>> ]
-"7397" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1708</SUB>> ]
-"7398" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1708</SUB>> ]
-"7400" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1708</SUB>> ]
-"7382" [label = <(METHOD,GetLongField)<SUB>1707</SUB>> ]
-"7457" [label = <(METHOD_RETURN,jlong)<SUB>1707</SUB>> ]
+"7387" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1707</SUB>> ]
+"7421" [label = <(soa,ScopedObjectAccess)<SUB>1707</SUB>> ]
+"7424" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1707</SUB>> ]
+"7431" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1707</SUB>> ]
+"7434" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1707</SUB>> ]
+"7451" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj);,GET_PRIMITIVE_FIELD(Long, obj);)<SUB>1707</SUB>> ]
+"7406" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1707</SUB>> ]
+"7426" [label = <(GET_PRIMITIVE_FIELD(Long, obj),jni::DecodeArtField(fid))<SUB>1707</SUB>> ]
+"7435" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1707</SUB>> ]
+"7442" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1707</SUB>> ]
+"7452" [label = <(GET_PRIMITIVE_FIELD(Long, obj),f-&gt;GetLong(o))<SUB>1707</SUB>> ]
+"7407" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1707</SUB>> ]
+"7411" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1707</SUB>> ]
+"7418" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1707</SUB>> ]
+"7427" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1707</SUB>> ]
+"7436" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1707</SUB>> ]
+"7443" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1707</SUB>> ]
+"7453" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1707</SUB>> ]
+"7391" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1707</SUB>> ]
+"7412" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1707</SUB>> ]
+"7429" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1707</SUB>> ]
+"7438" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1707</SUB>> ]
+"7444" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1707</SUB>> ]
+"7447" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Long, obj))<SUB>1707</SUB>> ]
+"7455" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1707</SUB>> ]
+"7392" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1707</SUB>> ]
+"7396" [label = <(GET_PRIMITIVE_FIELD(Long, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1707</SUB>> ]
+"7403" [label = <(RETURN,GET_PRIMITIVE_FIELD(Long, obj),GET_PRIMITIVE_FIELD(Long, obj))<SUB>1707</SUB>> ]
+"7413" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1707</SUB>> ]
+"7415" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1707</SUB>> ]
+"7440" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1707</SUB>> ]
+"7446" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1707</SUB>> ]
+"7449" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1707</SUB>> ]
+"7397" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1707</SUB>> ]
+"7398" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1707</SUB>> ]
+"7400" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1707</SUB>> ]
+"7382" [label = <(METHOD,GetLongField)<SUB>1706</SUB>> ]
+"7457" [label = <(METHOD_RETURN,jlong)<SUB>1706</SUB>> ]
   "7387" -> "7392" 
   "7387" -> "7407" 
   "7421" -> "7429" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/144-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/144-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/144-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/144-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,42 +1,42 @@
 digraph "GetFloatField" {  
-"7464" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1712</SUB>> ]
-"7498" [label = <(soa,ScopedObjectAccess)<SUB>1712</SUB>> ]
-"7501" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1712</SUB>> ]
-"7508" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1712</SUB>> ]
-"7511" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1712</SUB>> ]
-"7528" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj);,GET_PRIMITIVE_FIELD(Float, obj);)<SUB>1712</SUB>> ]
-"7483" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1712</SUB>> ]
-"7503" [label = <(GET_PRIMITIVE_FIELD(Float, obj),jni::DecodeArtField(fid))<SUB>1712</SUB>> ]
-"7512" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1712</SUB>> ]
-"7519" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1712</SUB>> ]
-"7529" [label = <(GET_PRIMITIVE_FIELD(Float, obj),f-&gt;GetFloat(o))<SUB>1712</SUB>> ]
-"7484" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1712</SUB>> ]
-"7488" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1712</SUB>> ]
-"7495" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1712</SUB>> ]
-"7504" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1712</SUB>> ]
-"7513" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1712</SUB>> ]
-"7520" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1712</SUB>> ]
-"7530" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1712</SUB>> ]
-"7468" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1712</SUB>> ]
-"7489" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1712</SUB>> ]
-"7506" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1712</SUB>> ]
-"7515" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1712</SUB>> ]
-"7521" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1712</SUB>> ]
-"7524" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1712</SUB>> ]
-"7532" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1712</SUB>> ]
-"7469" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1712</SUB>> ]
-"7473" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1712</SUB>> ]
-"7480" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1712</SUB>> ]
-"7490" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1712</SUB>> ]
-"7492" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1712</SUB>> ]
-"7517" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1712</SUB>> ]
-"7523" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1712</SUB>> ]
-"7526" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1712</SUB>> ]
-"7474" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1712</SUB>> ]
-"7475" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1712</SUB>> ]
-"7477" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1712</SUB>> ]
-"7459" [label = <(METHOD,GetFloatField)<SUB>1711</SUB>> ]
-"7534" [label = <(METHOD_RETURN,jfloat)<SUB>1711</SUB>> ]
+"7464" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1711</SUB>> ]
+"7498" [label = <(soa,ScopedObjectAccess)<SUB>1711</SUB>> ]
+"7501" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1711</SUB>> ]
+"7508" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1711</SUB>> ]
+"7511" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1711</SUB>> ]
+"7528" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj);,GET_PRIMITIVE_FIELD(Float, obj);)<SUB>1711</SUB>> ]
+"7483" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1711</SUB>> ]
+"7503" [label = <(GET_PRIMITIVE_FIELD(Float, obj),jni::DecodeArtField(fid))<SUB>1711</SUB>> ]
+"7512" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1711</SUB>> ]
+"7519" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1711</SUB>> ]
+"7529" [label = <(GET_PRIMITIVE_FIELD(Float, obj),f-&gt;GetFloat(o))<SUB>1711</SUB>> ]
+"7484" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1711</SUB>> ]
+"7488" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1711</SUB>> ]
+"7495" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1711</SUB>> ]
+"7504" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1711</SUB>> ]
+"7513" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1711</SUB>> ]
+"7520" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1711</SUB>> ]
+"7530" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1711</SUB>> ]
+"7468" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1711</SUB>> ]
+"7489" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1711</SUB>> ]
+"7506" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1711</SUB>> ]
+"7515" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1711</SUB>> ]
+"7521" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1711</SUB>> ]
+"7524" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Float, obj))<SUB>1711</SUB>> ]
+"7532" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1711</SUB>> ]
+"7469" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1711</SUB>> ]
+"7473" [label = <(GET_PRIMITIVE_FIELD(Float, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1711</SUB>> ]
+"7480" [label = <(RETURN,GET_PRIMITIVE_FIELD(Float, obj),GET_PRIMITIVE_FIELD(Float, obj))<SUB>1711</SUB>> ]
+"7490" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1711</SUB>> ]
+"7492" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1711</SUB>> ]
+"7517" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1711</SUB>> ]
+"7523" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1711</SUB>> ]
+"7526" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1711</SUB>> ]
+"7474" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1711</SUB>> ]
+"7475" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1711</SUB>> ]
+"7477" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1711</SUB>> ]
+"7459" [label = <(METHOD,GetFloatField)<SUB>1710</SUB>> ]
+"7534" [label = <(METHOD_RETURN,jfloat)<SUB>1710</SUB>> ]
   "7464" -> "7469" 
   "7464" -> "7484" 
   "7498" -> "7506" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/145-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/145-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/145-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/145-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,42 +1,42 @@
 digraph "GetDoubleField" {  
-"7541" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1716</SUB>> ]
-"7575" [label = <(soa,ScopedObjectAccess)<SUB>1716</SUB>> ]
-"7578" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1716</SUB>> ]
-"7585" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1716</SUB>> ]
-"7588" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1716</SUB>> ]
-"7605" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj);,GET_PRIMITIVE_FIELD(Double, obj);)<SUB>1716</SUB>> ]
-"7560" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1716</SUB>> ]
-"7580" [label = <(GET_PRIMITIVE_FIELD(Double, obj),jni::DecodeArtField(fid))<SUB>1716</SUB>> ]
-"7589" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1716</SUB>> ]
-"7596" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1716</SUB>> ]
-"7606" [label = <(GET_PRIMITIVE_FIELD(Double, obj),f-&gt;GetDouble(o))<SUB>1716</SUB>> ]
-"7561" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1716</SUB>> ]
-"7565" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1716</SUB>> ]
-"7572" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1716</SUB>> ]
-"7581" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1716</SUB>> ]
-"7590" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1716</SUB>> ]
-"7597" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1716</SUB>> ]
-"7607" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1716</SUB>> ]
-"7545" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1716</SUB>> ]
-"7566" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1716</SUB>> ]
-"7583" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1716</SUB>> ]
-"7592" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1716</SUB>> ]
-"7598" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1716</SUB>> ]
-"7601" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1716</SUB>> ]
-"7609" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1716</SUB>> ]
-"7546" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1716</SUB>> ]
-"7550" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1716</SUB>> ]
-"7557" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1716</SUB>> ]
-"7567" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1716</SUB>> ]
-"7569" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1716</SUB>> ]
-"7594" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1716</SUB>> ]
-"7600" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1716</SUB>> ]
-"7603" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1716</SUB>> ]
-"7551" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1716</SUB>> ]
-"7552" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1716</SUB>> ]
-"7554" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1716</SUB>> ]
-"7536" [label = <(METHOD,GetDoubleField)<SUB>1715</SUB>> ]
-"7611" [label = <(METHOD_RETURN,jdouble)<SUB>1715</SUB>> ]
+"7541" [label = <(GET_PRIMITIVE_FIELD,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1715</SUB>> ]
+"7575" [label = <(soa,ScopedObjectAccess)<SUB>1715</SUB>> ]
+"7578" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1715</SUB>> ]
+"7585" [label = <(NotifyGetField,NotifyGetField(f, obj))<SUB>1715</SUB>> ]
+"7588" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1715</SUB>> ]
+"7605" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj);,GET_PRIMITIVE_FIELD(Double, obj);)<SUB>1715</SUB>> ]
+"7560" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1715</SUB>> ]
+"7580" [label = <(GET_PRIMITIVE_FIELD(Double, obj),jni::DecodeArtField(fid))<SUB>1715</SUB>> ]
+"7589" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1715</SUB>> ]
+"7596" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1715</SUB>> ]
+"7606" [label = <(GET_PRIMITIVE_FIELD(Double, obj),f-&gt;GetDouble(o))<SUB>1715</SUB>> ]
+"7561" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1715</SUB>> ]
+"7565" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1715</SUB>> ]
+"7572" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1715</SUB>> ]
+"7581" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1715</SUB>> ]
+"7590" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1715</SUB>> ]
+"7597" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1715</SUB>> ]
+"7607" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1715</SUB>> ]
+"7545" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1715</SUB>> ]
+"7566" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1715</SUB>> ]
+"7583" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1715</SUB>> ]
+"7592" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1715</SUB>> ]
+"7598" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1715</SUB>> ]
+"7601" [label = <(&lt;operator&gt;.fieldAccess,GET_PRIMITIVE_FIELD(Double, obj))<SUB>1715</SUB>> ]
+"7609" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1715</SUB>> ]
+"7546" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1715</SUB>> ]
+"7550" [label = <(GET_PRIMITIVE_FIELD(Double, obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1715</SUB>> ]
+"7557" [label = <(RETURN,GET_PRIMITIVE_FIELD(Double, obj),GET_PRIMITIVE_FIELD(Double, obj))<SUB>1715</SUB>> ]
+"7567" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1715</SUB>> ]
+"7569" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1715</SUB>> ]
+"7594" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1715</SUB>> ]
+"7600" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1715</SUB>> ]
+"7603" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1715</SUB>> ]
+"7551" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1715</SUB>> ]
+"7552" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1715</SUB>> ]
+"7554" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1715</SUB>> ]
+"7536" [label = <(METHOD,GetDoubleField)<SUB>1714</SUB>> ]
+"7611" [label = <(METHOD_RETURN,jdouble)<SUB>1714</SUB>> ]
   "7541" -> "7546" 
   "7541" -> "7561" 
   "7575" -> "7583" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/146-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/146-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/146-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/146-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticBooleanField" {  
-"7618" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1720</SUB>> ]
-"7636" [label = <(soa,ScopedObjectAccess)<SUB>1720</SUB>> ]
-"7639" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1720</SUB>> ]
-"7646" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1720</SUB>> ]
-"7649" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean);,GET_STATIC_PRIMITIVE_FIELD(Boolean);)<SUB>1720</SUB>> ]
-"7641" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),jni::DecodeArtField(fid))<SUB>1720</SUB>> ]
-"7650" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetBoolean(f-&gt;GetDeclaringClass()))<SUB>1720</SUB>> ]
-"7642" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1720</SUB>> ]
-"7651" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1720</SUB>> ]
-"7654" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetDeclaringClass())<SUB>1720</SUB>> ]
-"7621" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1720</SUB>> ]
-"7644" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1720</SUB>> ]
-"7653" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1720</SUB>> ]
-"7655" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1720</SUB>> ]
-"7622" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1720</SUB>> ]
-"7626" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1720</SUB>> ]
-"7633" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean),GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1720</SUB>> ]
-"7657" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1720</SUB>> ]
-"7627" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1720</SUB>> ]
-"7628" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1720</SUB>> ]
-"7630" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1720</SUB>> ]
-"7613" [label = <(METHOD,GetStaticBooleanField)<SUB>1719</SUB>> ]
-"7658" [label = <(METHOD_RETURN,jboolean)<SUB>1719</SUB>> ]
+"7618" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1719</SUB>> ]
+"7636" [label = <(soa,ScopedObjectAccess)<SUB>1719</SUB>> ]
+"7639" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1719</SUB>> ]
+"7646" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1719</SUB>> ]
+"7649" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean);,GET_STATIC_PRIMITIVE_FIELD(Boolean);)<SUB>1719</SUB>> ]
+"7641" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),jni::DecodeArtField(fid))<SUB>1719</SUB>> ]
+"7650" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetBoolean(f-&gt;GetDeclaringClass()))<SUB>1719</SUB>> ]
+"7642" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1719</SUB>> ]
+"7651" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetBoolean)<SUB>1719</SUB>> ]
+"7654" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),f-&gt;GetDeclaringClass())<SUB>1719</SUB>> ]
+"7621" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1719</SUB>> ]
+"7644" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1719</SUB>> ]
+"7653" [label = <(FIELD_IDENTIFIER,GetBoolean,GetBoolean)<SUB>1719</SUB>> ]
+"7655" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1719</SUB>> ]
+"7622" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1719</SUB>> ]
+"7626" [label = <(GET_STATIC_PRIMITIVE_FIELD(Boolean),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1719</SUB>> ]
+"7633" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Boolean),GET_STATIC_PRIMITIVE_FIELD(Boolean))<SUB>1719</SUB>> ]
+"7657" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1719</SUB>> ]
+"7627" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1719</SUB>> ]
+"7628" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1719</SUB>> ]
+"7630" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1719</SUB>> ]
+"7613" [label = <(METHOD,GetStaticBooleanField)<SUB>1718</SUB>> ]
+"7658" [label = <(METHOD_RETURN,jboolean)<SUB>1718</SUB>> ]
   "7618" -> "7622" 
   "7618" -> "7636" 
   "7636" -> "7644" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/147-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/147-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/147-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/147-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticByteField" {  
-"7665" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1724</SUB>> ]
-"7683" [label = <(soa,ScopedObjectAccess)<SUB>1724</SUB>> ]
-"7686" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1724</SUB>> ]
-"7693" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1724</SUB>> ]
-"7696" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte);,GET_STATIC_PRIMITIVE_FIELD(Byte);)<SUB>1724</SUB>> ]
-"7688" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),jni::DecodeArtField(fid))<SUB>1724</SUB>> ]
-"7697" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetByte(f-&gt;GetDeclaringClass()))<SUB>1724</SUB>> ]
-"7689" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1724</SUB>> ]
-"7698" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1724</SUB>> ]
-"7701" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetDeclaringClass())<SUB>1724</SUB>> ]
-"7668" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1724</SUB>> ]
-"7691" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1724</SUB>> ]
-"7700" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1724</SUB>> ]
-"7702" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1724</SUB>> ]
-"7669" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1724</SUB>> ]
-"7673" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1724</SUB>> ]
-"7680" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte),GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1724</SUB>> ]
-"7704" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1724</SUB>> ]
-"7674" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1724</SUB>> ]
-"7675" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1724</SUB>> ]
-"7677" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1724</SUB>> ]
-"7660" [label = <(METHOD,GetStaticByteField)<SUB>1723</SUB>> ]
-"7705" [label = <(METHOD_RETURN,jbyte)<SUB>1723</SUB>> ]
+"7665" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1723</SUB>> ]
+"7683" [label = <(soa,ScopedObjectAccess)<SUB>1723</SUB>> ]
+"7686" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1723</SUB>> ]
+"7693" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1723</SUB>> ]
+"7696" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte);,GET_STATIC_PRIMITIVE_FIELD(Byte);)<SUB>1723</SUB>> ]
+"7688" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),jni::DecodeArtField(fid))<SUB>1723</SUB>> ]
+"7697" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetByte(f-&gt;GetDeclaringClass()))<SUB>1723</SUB>> ]
+"7689" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1723</SUB>> ]
+"7698" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetByte)<SUB>1723</SUB>> ]
+"7701" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),f-&gt;GetDeclaringClass())<SUB>1723</SUB>> ]
+"7668" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1723</SUB>> ]
+"7691" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1723</SUB>> ]
+"7700" [label = <(FIELD_IDENTIFIER,GetByte,GetByte)<SUB>1723</SUB>> ]
+"7702" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1723</SUB>> ]
+"7669" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1723</SUB>> ]
+"7673" [label = <(GET_STATIC_PRIMITIVE_FIELD(Byte),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1723</SUB>> ]
+"7680" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Byte),GET_STATIC_PRIMITIVE_FIELD(Byte))<SUB>1723</SUB>> ]
+"7704" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1723</SUB>> ]
+"7674" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1723</SUB>> ]
+"7675" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1723</SUB>> ]
+"7677" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1723</SUB>> ]
+"7660" [label = <(METHOD,GetStaticByteField)<SUB>1722</SUB>> ]
+"7705" [label = <(METHOD_RETURN,jbyte)<SUB>1722</SUB>> ]
   "7665" -> "7669" 
   "7665" -> "7683" 
   "7683" -> "7691" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/148-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/148-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/148-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/148-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticCharField" {  
-"7712" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1728</SUB>> ]
-"7730" [label = <(soa,ScopedObjectAccess)<SUB>1728</SUB>> ]
-"7733" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1728</SUB>> ]
-"7740" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1728</SUB>> ]
-"7743" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char);,GET_STATIC_PRIMITIVE_FIELD(Char);)<SUB>1728</SUB>> ]
-"7735" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),jni::DecodeArtField(fid))<SUB>1728</SUB>> ]
-"7744" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetChar(f-&gt;GetDeclaringClass()))<SUB>1728</SUB>> ]
-"7736" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1728</SUB>> ]
-"7745" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1728</SUB>> ]
-"7748" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetDeclaringClass())<SUB>1728</SUB>> ]
-"7715" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1728</SUB>> ]
-"7738" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1728</SUB>> ]
-"7747" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1728</SUB>> ]
-"7749" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1728</SUB>> ]
-"7716" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1728</SUB>> ]
-"7720" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1728</SUB>> ]
-"7727" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char),GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1728</SUB>> ]
-"7751" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1728</SUB>> ]
-"7721" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1728</SUB>> ]
-"7722" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1728</SUB>> ]
-"7724" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1728</SUB>> ]
-"7707" [label = <(METHOD,GetStaticCharField)<SUB>1727</SUB>> ]
-"7752" [label = <(METHOD_RETURN,jchar)<SUB>1727</SUB>> ]
+"7712" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1727</SUB>> ]
+"7730" [label = <(soa,ScopedObjectAccess)<SUB>1727</SUB>> ]
+"7733" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1727</SUB>> ]
+"7740" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1727</SUB>> ]
+"7743" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char);,GET_STATIC_PRIMITIVE_FIELD(Char);)<SUB>1727</SUB>> ]
+"7735" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),jni::DecodeArtField(fid))<SUB>1727</SUB>> ]
+"7744" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetChar(f-&gt;GetDeclaringClass()))<SUB>1727</SUB>> ]
+"7736" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1727</SUB>> ]
+"7745" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetChar)<SUB>1727</SUB>> ]
+"7748" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),f-&gt;GetDeclaringClass())<SUB>1727</SUB>> ]
+"7715" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1727</SUB>> ]
+"7738" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1727</SUB>> ]
+"7747" [label = <(FIELD_IDENTIFIER,GetChar,GetChar)<SUB>1727</SUB>> ]
+"7749" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1727</SUB>> ]
+"7716" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1727</SUB>> ]
+"7720" [label = <(GET_STATIC_PRIMITIVE_FIELD(Char),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1727</SUB>> ]
+"7727" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Char),GET_STATIC_PRIMITIVE_FIELD(Char))<SUB>1727</SUB>> ]
+"7751" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1727</SUB>> ]
+"7721" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1727</SUB>> ]
+"7722" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1727</SUB>> ]
+"7724" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1727</SUB>> ]
+"7707" [label = <(METHOD,GetStaticCharField)<SUB>1726</SUB>> ]
+"7752" [label = <(METHOD_RETURN,jchar)<SUB>1726</SUB>> ]
   "7712" -> "7716" 
   "7712" -> "7730" 
   "7730" -> "7738" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/149-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/149-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/149-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/149-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticShortField" {  
-"7759" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1732</SUB>> ]
-"7777" [label = <(soa,ScopedObjectAccess)<SUB>1732</SUB>> ]
-"7780" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1732</SUB>> ]
-"7787" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1732</SUB>> ]
-"7790" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short);,GET_STATIC_PRIMITIVE_FIELD(Short);)<SUB>1732</SUB>> ]
-"7782" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),jni::DecodeArtField(fid))<SUB>1732</SUB>> ]
-"7791" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetShort(f-&gt;GetDeclaringClass()))<SUB>1732</SUB>> ]
-"7783" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1732</SUB>> ]
-"7792" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1732</SUB>> ]
-"7795" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetDeclaringClass())<SUB>1732</SUB>> ]
-"7762" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1732</SUB>> ]
-"7785" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1732</SUB>> ]
-"7794" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1732</SUB>> ]
-"7796" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1732</SUB>> ]
-"7763" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1732</SUB>> ]
-"7767" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1732</SUB>> ]
-"7774" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short),GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1732</SUB>> ]
-"7798" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1732</SUB>> ]
-"7768" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1732</SUB>> ]
-"7769" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1732</SUB>> ]
-"7771" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1732</SUB>> ]
-"7754" [label = <(METHOD,GetStaticShortField)<SUB>1731</SUB>> ]
-"7799" [label = <(METHOD_RETURN,jshort)<SUB>1731</SUB>> ]
+"7759" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1731</SUB>> ]
+"7777" [label = <(soa,ScopedObjectAccess)<SUB>1731</SUB>> ]
+"7780" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1731</SUB>> ]
+"7787" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1731</SUB>> ]
+"7790" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short);,GET_STATIC_PRIMITIVE_FIELD(Short);)<SUB>1731</SUB>> ]
+"7782" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),jni::DecodeArtField(fid))<SUB>1731</SUB>> ]
+"7791" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetShort(f-&gt;GetDeclaringClass()))<SUB>1731</SUB>> ]
+"7783" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1731</SUB>> ]
+"7792" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetShort)<SUB>1731</SUB>> ]
+"7795" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),f-&gt;GetDeclaringClass())<SUB>1731</SUB>> ]
+"7762" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1731</SUB>> ]
+"7785" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1731</SUB>> ]
+"7794" [label = <(FIELD_IDENTIFIER,GetShort,GetShort)<SUB>1731</SUB>> ]
+"7796" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1731</SUB>> ]
+"7763" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1731</SUB>> ]
+"7767" [label = <(GET_STATIC_PRIMITIVE_FIELD(Short),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1731</SUB>> ]
+"7774" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Short),GET_STATIC_PRIMITIVE_FIELD(Short))<SUB>1731</SUB>> ]
+"7798" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1731</SUB>> ]
+"7768" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1731</SUB>> ]
+"7769" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1731</SUB>> ]
+"7771" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1731</SUB>> ]
+"7754" [label = <(METHOD,GetStaticShortField)<SUB>1730</SUB>> ]
+"7799" [label = <(METHOD_RETURN,jshort)<SUB>1730</SUB>> ]
   "7759" -> "7763" 
   "7759" -> "7777" 
   "7777" -> "7785" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/15-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/15-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/15-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/15-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,23 +1,23 @@
 digraph "BuildCache" {  
-"362" [label = <(DCHECK,DCHECK(!HasCache()))<SUB>223</SUB>> ]
-"366" [label = <(&lt;operator&gt;.assignment,builder_ = &amp;builder)<SUB>225</SUB>> ]
-"370" [label = <(&lt;operator&gt;.assignment,libjavacore_loaded_ = false)<SUB>226</SUB>> ]
-"373" [label = <(&lt;operator&gt;.assignment,libnativehelper_loaded_ = false)<SUB>227</SUB>> ]
-"376" [label = <(&lt;operator&gt;.assignment,libopenjdk_loaded_ = false)<SUB>228</SUB>> ]
-"379" [label = <(dl_iterate_phdr,dl_iterate_phdr(VisitElfInfo, this))<SUB>231</SUB>> ]
-"382" [label = <(&lt;operator&gt;.assignment,memory_type_table_ = builder_-&gt;Build())<SUB>232</SUB>> ]
-"388" [label = <(CHECK,CHECK(libjavacore_loaded_))<SUB>235</SUB>> ]
-"390" [label = <(CHECK,CHECK(libnativehelper_loaded_))<SUB>236</SUB>> ]
-"392" [label = <(CHECK,CHECK(libopenjdk_loaded_))<SUB>237</SUB>> ]
-"394" [label = <(&lt;operator&gt;.assignment,builder_ = nullptr)<SUB>238</SUB>> ]
-"363" [label = <(&lt;operator&gt;.logicalNot,!HasCache())<SUB>223</SUB>> ]
-"368" [label = <(&lt;operator&gt;.addressOf,&amp;builder)<SUB>225</SUB>> ]
-"384" [label = <(Build,builder_-&gt;Build())<SUB>232</SUB>> ]
-"364" [label = <(HasCache,HasCache())<SUB>223</SUB>> ]
-"385" [label = <(&lt;operator&gt;.indirectFieldAccess,builder_-&gt;Build)<SUB>232</SUB>> ]
-"387" [label = <(FIELD_IDENTIFIER,Build,Build)<SUB>232</SUB>> ]
-"360" [label = <(METHOD,BuildCache)<SUB>222</SUB>> ]
-"397" [label = <(METHOD_RETURN,void)<SUB>222</SUB>> ]
+"362" [label = <(DCHECK,DCHECK(!HasCache()))<SUB>222</SUB>> ]
+"366" [label = <(&lt;operator&gt;.assignment,builder_ = &amp;builder)<SUB>224</SUB>> ]
+"370" [label = <(&lt;operator&gt;.assignment,libjavacore_loaded_ = false)<SUB>225</SUB>> ]
+"373" [label = <(&lt;operator&gt;.assignment,libnativehelper_loaded_ = false)<SUB>226</SUB>> ]
+"376" [label = <(&lt;operator&gt;.assignment,libopenjdk_loaded_ = false)<SUB>227</SUB>> ]
+"379" [label = <(dl_iterate_phdr,dl_iterate_phdr(VisitElfInfo, this))<SUB>230</SUB>> ]
+"382" [label = <(&lt;operator&gt;.assignment,memory_type_table_ = builder_-&gt;Build())<SUB>231</SUB>> ]
+"388" [label = <(CHECK,CHECK(libjavacore_loaded_))<SUB>234</SUB>> ]
+"390" [label = <(CHECK,CHECK(libnativehelper_loaded_))<SUB>235</SUB>> ]
+"392" [label = <(CHECK,CHECK(libopenjdk_loaded_))<SUB>236</SUB>> ]
+"394" [label = <(&lt;operator&gt;.assignment,builder_ = nullptr)<SUB>237</SUB>> ]
+"363" [label = <(&lt;operator&gt;.logicalNot,!HasCache())<SUB>222</SUB>> ]
+"368" [label = <(&lt;operator&gt;.addressOf,&amp;builder)<SUB>224</SUB>> ]
+"384" [label = <(Build,builder_-&gt;Build())<SUB>231</SUB>> ]
+"364" [label = <(HasCache,HasCache())<SUB>222</SUB>> ]
+"385" [label = <(&lt;operator&gt;.indirectFieldAccess,builder_-&gt;Build)<SUB>231</SUB>> ]
+"387" [label = <(FIELD_IDENTIFIER,Build,Build)<SUB>231</SUB>> ]
+"360" [label = <(METHOD,BuildCache)<SUB>221</SUB>> ]
+"397" [label = <(METHOD_RETURN,void)<SUB>221</SUB>> ]
   "362" -> "368" 
   "366" -> "370" 
   "370" -> "373" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/150-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/150-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/150-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/150-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticIntField" {  
-"7806" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1736</SUB>> ]
-"7824" [label = <(soa,ScopedObjectAccess)<SUB>1736</SUB>> ]
-"7827" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1736</SUB>> ]
-"7834" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1736</SUB>> ]
-"7837" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int);,GET_STATIC_PRIMITIVE_FIELD(Int);)<SUB>1736</SUB>> ]
-"7829" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),jni::DecodeArtField(fid))<SUB>1736</SUB>> ]
-"7838" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetInt(f-&gt;GetDeclaringClass()))<SUB>1736</SUB>> ]
-"7830" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1736</SUB>> ]
-"7839" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1736</SUB>> ]
-"7842" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetDeclaringClass())<SUB>1736</SUB>> ]
-"7809" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1736</SUB>> ]
-"7832" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1736</SUB>> ]
-"7841" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1736</SUB>> ]
-"7843" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1736</SUB>> ]
-"7810" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1736</SUB>> ]
-"7814" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1736</SUB>> ]
-"7821" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int),GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1736</SUB>> ]
-"7845" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1736</SUB>> ]
-"7815" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1736</SUB>> ]
-"7816" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1736</SUB>> ]
-"7818" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1736</SUB>> ]
-"7801" [label = <(METHOD,GetStaticIntField)<SUB>1735</SUB>> ]
-"7846" [label = <(METHOD_RETURN,jint)<SUB>1735</SUB>> ]
+"7806" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1735</SUB>> ]
+"7824" [label = <(soa,ScopedObjectAccess)<SUB>1735</SUB>> ]
+"7827" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1735</SUB>> ]
+"7834" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1735</SUB>> ]
+"7837" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int);,GET_STATIC_PRIMITIVE_FIELD(Int);)<SUB>1735</SUB>> ]
+"7829" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),jni::DecodeArtField(fid))<SUB>1735</SUB>> ]
+"7838" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetInt(f-&gt;GetDeclaringClass()))<SUB>1735</SUB>> ]
+"7830" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1735</SUB>> ]
+"7839" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetInt)<SUB>1735</SUB>> ]
+"7842" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),f-&gt;GetDeclaringClass())<SUB>1735</SUB>> ]
+"7809" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1735</SUB>> ]
+"7832" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1735</SUB>> ]
+"7841" [label = <(FIELD_IDENTIFIER,GetInt,GetInt)<SUB>1735</SUB>> ]
+"7843" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1735</SUB>> ]
+"7810" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1735</SUB>> ]
+"7814" [label = <(GET_STATIC_PRIMITIVE_FIELD(Int),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1735</SUB>> ]
+"7821" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Int),GET_STATIC_PRIMITIVE_FIELD(Int))<SUB>1735</SUB>> ]
+"7845" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1735</SUB>> ]
+"7815" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1735</SUB>> ]
+"7816" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1735</SUB>> ]
+"7818" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1735</SUB>> ]
+"7801" [label = <(METHOD,GetStaticIntField)<SUB>1734</SUB>> ]
+"7846" [label = <(METHOD_RETURN,jint)<SUB>1734</SUB>> ]
   "7806" -> "7810" 
   "7806" -> "7824" 
   "7824" -> "7832" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/151-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/151-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/151-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/151-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticLongField" {  
-"7853" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1740</SUB>> ]
-"7871" [label = <(soa,ScopedObjectAccess)<SUB>1740</SUB>> ]
-"7874" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1740</SUB>> ]
-"7881" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1740</SUB>> ]
-"7884" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long);,GET_STATIC_PRIMITIVE_FIELD(Long);)<SUB>1740</SUB>> ]
-"7876" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),jni::DecodeArtField(fid))<SUB>1740</SUB>> ]
-"7885" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetLong(f-&gt;GetDeclaringClass()))<SUB>1740</SUB>> ]
-"7877" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1740</SUB>> ]
-"7886" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1740</SUB>> ]
-"7889" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetDeclaringClass())<SUB>1740</SUB>> ]
-"7856" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1740</SUB>> ]
-"7879" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1740</SUB>> ]
-"7888" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1740</SUB>> ]
-"7890" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1740</SUB>> ]
-"7857" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1740</SUB>> ]
-"7861" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1740</SUB>> ]
-"7868" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long),GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1740</SUB>> ]
-"7892" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1740</SUB>> ]
-"7862" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1740</SUB>> ]
-"7863" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1740</SUB>> ]
-"7865" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1740</SUB>> ]
-"7848" [label = <(METHOD,GetStaticLongField)<SUB>1739</SUB>> ]
-"7893" [label = <(METHOD_RETURN,jlong)<SUB>1739</SUB>> ]
+"7853" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1739</SUB>> ]
+"7871" [label = <(soa,ScopedObjectAccess)<SUB>1739</SUB>> ]
+"7874" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1739</SUB>> ]
+"7881" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1739</SUB>> ]
+"7884" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long);,GET_STATIC_PRIMITIVE_FIELD(Long);)<SUB>1739</SUB>> ]
+"7876" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),jni::DecodeArtField(fid))<SUB>1739</SUB>> ]
+"7885" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetLong(f-&gt;GetDeclaringClass()))<SUB>1739</SUB>> ]
+"7877" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1739</SUB>> ]
+"7886" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetLong)<SUB>1739</SUB>> ]
+"7889" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),f-&gt;GetDeclaringClass())<SUB>1739</SUB>> ]
+"7856" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1739</SUB>> ]
+"7879" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1739</SUB>> ]
+"7888" [label = <(FIELD_IDENTIFIER,GetLong,GetLong)<SUB>1739</SUB>> ]
+"7890" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1739</SUB>> ]
+"7857" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1739</SUB>> ]
+"7861" [label = <(GET_STATIC_PRIMITIVE_FIELD(Long),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1739</SUB>> ]
+"7868" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Long),GET_STATIC_PRIMITIVE_FIELD(Long))<SUB>1739</SUB>> ]
+"7892" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1739</SUB>> ]
+"7862" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1739</SUB>> ]
+"7863" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1739</SUB>> ]
+"7865" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1739</SUB>> ]
+"7848" [label = <(METHOD,GetStaticLongField)<SUB>1738</SUB>> ]
+"7893" [label = <(METHOD_RETURN,jlong)<SUB>1738</SUB>> ]
   "7853" -> "7857" 
   "7853" -> "7871" 
   "7871" -> "7879" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/152-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/152-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/152-cfg.dot	2023-06-07 19:34:48.367388392 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/152-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticFloatField" {  
-"7900" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1744</SUB>> ]
-"7918" [label = <(soa,ScopedObjectAccess)<SUB>1744</SUB>> ]
-"7921" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1744</SUB>> ]
-"7928" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1744</SUB>> ]
-"7931" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float);,GET_STATIC_PRIMITIVE_FIELD(Float);)<SUB>1744</SUB>> ]
-"7923" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),jni::DecodeArtField(fid))<SUB>1744</SUB>> ]
-"7932" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetFloat(f-&gt;GetDeclaringClass()))<SUB>1744</SUB>> ]
-"7924" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1744</SUB>> ]
-"7933" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1744</SUB>> ]
-"7936" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetDeclaringClass())<SUB>1744</SUB>> ]
-"7903" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1744</SUB>> ]
-"7926" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1744</SUB>> ]
-"7935" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1744</SUB>> ]
-"7937" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1744</SUB>> ]
-"7904" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1744</SUB>> ]
-"7908" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1744</SUB>> ]
-"7915" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float),GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1744</SUB>> ]
-"7939" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1744</SUB>> ]
-"7909" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1744</SUB>> ]
-"7910" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1744</SUB>> ]
-"7912" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1744</SUB>> ]
-"7895" [label = <(METHOD,GetStaticFloatField)<SUB>1743</SUB>> ]
-"7940" [label = <(METHOD_RETURN,jfloat)<SUB>1743</SUB>> ]
+"7900" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1743</SUB>> ]
+"7918" [label = <(soa,ScopedObjectAccess)<SUB>1743</SUB>> ]
+"7921" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1743</SUB>> ]
+"7928" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1743</SUB>> ]
+"7931" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float);,GET_STATIC_PRIMITIVE_FIELD(Float);)<SUB>1743</SUB>> ]
+"7923" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),jni::DecodeArtField(fid))<SUB>1743</SUB>> ]
+"7932" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetFloat(f-&gt;GetDeclaringClass()))<SUB>1743</SUB>> ]
+"7924" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1743</SUB>> ]
+"7933" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetFloat)<SUB>1743</SUB>> ]
+"7936" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),f-&gt;GetDeclaringClass())<SUB>1743</SUB>> ]
+"7903" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1743</SUB>> ]
+"7926" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1743</SUB>> ]
+"7935" [label = <(FIELD_IDENTIFIER,GetFloat,GetFloat)<SUB>1743</SUB>> ]
+"7937" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1743</SUB>> ]
+"7904" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1743</SUB>> ]
+"7908" [label = <(GET_STATIC_PRIMITIVE_FIELD(Float),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1743</SUB>> ]
+"7915" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Float),GET_STATIC_PRIMITIVE_FIELD(Float))<SUB>1743</SUB>> ]
+"7939" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1743</SUB>> ]
+"7909" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1743</SUB>> ]
+"7910" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1743</SUB>> ]
+"7912" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1743</SUB>> ]
+"7895" [label = <(METHOD,GetStaticFloatField)<SUB>1742</SUB>> ]
+"7940" [label = <(METHOD_RETURN,jfloat)<SUB>1742</SUB>> ]
   "7900" -> "7904" 
   "7900" -> "7918" 
   "7918" -> "7926" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/153-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/153-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/153-cfg.dot	2023-06-07 19:34:48.377388393 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/153-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,27 +1,27 @@
 digraph "GetStaticDoubleField" {  
-"7947" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1748</SUB>> ]
-"7965" [label = <(soa,ScopedObjectAccess)<SUB>1748</SUB>> ]
-"7968" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1748</SUB>> ]
-"7975" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1748</SUB>> ]
-"7978" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double);,GET_STATIC_PRIMITIVE_FIELD(Double);)<SUB>1748</SUB>> ]
-"7970" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),jni::DecodeArtField(fid))<SUB>1748</SUB>> ]
-"7979" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDouble(f-&gt;GetDeclaringClass()))<SUB>1748</SUB>> ]
-"7971" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1748</SUB>> ]
-"7980" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1748</SUB>> ]
-"7983" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDeclaringClass())<SUB>1748</SUB>> ]
-"7950" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1748</SUB>> ]
-"7973" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1748</SUB>> ]
-"7982" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1748</SUB>> ]
-"7984" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1748</SUB>> ]
-"7951" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1748</SUB>> ]
-"7955" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1748</SUB>> ]
-"7962" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double),GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1748</SUB>> ]
-"7986" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1748</SUB>> ]
-"7956" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1748</SUB>> ]
-"7957" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1748</SUB>> ]
-"7959" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1748</SUB>> ]
-"7942" [label = <(METHOD,GetStaticDoubleField)<SUB>1747</SUB>> ]
-"7987" [label = <(METHOD_RETURN,jdouble)<SUB>1747</SUB>> ]
+"7947" [label = <(GET_STATIC_PRIMITIVE_FIELD,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1747</SUB>> ]
+"7965" [label = <(soa,ScopedObjectAccess)<SUB>1747</SUB>> ]
+"7968" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1747</SUB>> ]
+"7975" [label = <(NotifyGetField,NotifyGetField(f, nullptr))<SUB>1747</SUB>> ]
+"7978" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double);,GET_STATIC_PRIMITIVE_FIELD(Double);)<SUB>1747</SUB>> ]
+"7970" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),jni::DecodeArtField(fid))<SUB>1747</SUB>> ]
+"7979" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDouble(f-&gt;GetDeclaringClass()))<SUB>1747</SUB>> ]
+"7971" [label = <(&lt;operator&gt;.fieldAccess,GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1747</SUB>> ]
+"7980" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDouble)<SUB>1747</SUB>> ]
+"7983" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),f-&gt;GetDeclaringClass())<SUB>1747</SUB>> ]
+"7950" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1747</SUB>> ]
+"7973" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1747</SUB>> ]
+"7982" [label = <(FIELD_IDENTIFIER,GetDouble,GetDouble)<SUB>1747</SUB>> ]
+"7984" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1747</SUB>> ]
+"7951" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1747</SUB>> ]
+"7955" [label = <(GET_STATIC_PRIMITIVE_FIELD(Double),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1747</SUB>> ]
+"7962" [label = <(RETURN,GET_STATIC_PRIMITIVE_FIELD(Double),GET_STATIC_PRIMITIVE_FIELD(Double))<SUB>1747</SUB>> ]
+"7986" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1747</SUB>> ]
+"7956" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1747</SUB>> ]
+"7957" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1747</SUB>> ]
+"7959" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1747</SUB>> ]
+"7942" [label = <(METHOD,GetStaticDoubleField)<SUB>1746</SUB>> ]
+"7987" [label = <(METHOD_RETURN,jdouble)<SUB>1746</SUB>> ]
   "7947" -> "7951" 
   "7947" -> "7965" 
   "7965" -> "7973" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/154-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/154-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/154-cfg.dot	2023-06-07 19:34:48.377388393 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/154-cfg.dot	2023-06-07 19:34:54.967387780 +0330
@@ -1,47 +1,47 @@
 digraph "SetBooleanField" {  
-"7995" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1752</SUB>> ]
-"8027" [label = <(soa,ScopedObjectAccess)<SUB>1752</SUB>> ]
-"8030" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1752</SUB>> ]
-"8037" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v)))<SUB>1752</SUB>> ]
-"8045" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1752</SUB>> ]
-"8062" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (o, v))<SUB>1752</SUB>> ]
-"8013" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1752</SUB>> ]
-"8032" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),jni::DecodeArtField(fid))<SUB>1752</SUB>> ]
-"8040" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v))<SUB>1752</SUB>> ]
-"8046" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1752</SUB>> ]
-"8053" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1752</SUB>> ]
-"8063" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1752</SUB>> ]
-"8068" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1752</SUB>> ]
-"8014" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1752</SUB>> ]
-"8018" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1752</SUB>> ]
-"8025" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1752</SUB>> ]
-"8033" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1752</SUB>> ]
-"8041" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1752</SUB>> ]
-"8047" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1752</SUB>> ]
-"8054" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1752</SUB>> ]
-"8064" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1752</SUB>> ]
-"8069" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1752</SUB>> ]
-"7999" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1752</SUB>> ]
-"8019" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1752</SUB>> ]
-"8035" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1752</SUB>> ]
-"8043" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;)<SUB>1752</SUB>> ]
-"8049" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1752</SUB>> ]
-"8055" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1752</SUB>> ]
-"8058" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1752</SUB>> ]
-"8066" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1752</SUB>> ]
-"8000" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1752</SUB>> ]
-"8004" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1752</SUB>> ]
-"8011" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1752</SUB>> ]
-"8020" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1752</SUB>> ]
-"8022" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1752</SUB>> ]
-"8051" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1752</SUB>> ]
-"8057" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1752</SUB>> ]
-"8060" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1752</SUB>> ]
-"8005" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1752</SUB>> ]
-"8006" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1752</SUB>> ]
-"8008" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1752</SUB>> ]
-"7989" [label = <(METHOD,SetBooleanField)<SUB>1751</SUB>> ]
-"8072" [label = <(METHOD_RETURN,void)<SUB>1751</SUB>> ]
+"7995" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1751</SUB>> ]
+"8027" [label = <(soa,ScopedObjectAccess)<SUB>1751</SUB>> ]
+"8030" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1751</SUB>> ]
+"8037" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v)))<SUB>1751</SUB>> ]
+"8045" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1751</SUB>> ]
+"8062" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (o, v))<SUB>1751</SUB>> ]
+"8013" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1751</SUB>> ]
+"8032" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),jni::DecodeArtField(fid))<SUB>1751</SUB>> ]
+"8040" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;(v))<SUB>1751</SUB>> ]
+"8046" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1751</SUB>> ]
+"8053" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1751</SUB>> ]
+"8063" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1751</SUB>> ]
+"8068" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1751</SUB>> ]
+"8014" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1751</SUB>> ]
+"8018" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1751</SUB>> ]
+"8025" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1751</SUB>> ]
+"8033" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1751</SUB>> ]
+"8041" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1751</SUB>> ]
+"8047" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1751</SUB>> ]
+"8054" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1751</SUB>> ]
+"8064" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1751</SUB>> ]
+"8069" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1751</SUB>> ]
+"7999" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1751</SUB>> ]
+"8019" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1751</SUB>> ]
+"8035" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1751</SUB>> ]
+"8043" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Boolean, obj, v)&gt;)<SUB>1751</SUB>> ]
+"8049" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1751</SUB>> ]
+"8055" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1751</SUB>> ]
+"8058" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1751</SUB>> ]
+"8066" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1751</SUB>> ]
+"8000" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1751</SUB>> ]
+"8004" [label = <(SET_PRIMITIVE_FIELD(Boolean, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1751</SUB>> ]
+"8011" [label = <(RETURN,SET_PRIMITIVE_FIELD(Boolean, obj, v),SET_PRIMITIVE_FIELD(Boolean, obj, v))<SUB>1751</SUB>> ]
+"8020" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1751</SUB>> ]
+"8022" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1751</SUB>> ]
+"8051" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1751</SUB>> ]
+"8057" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1751</SUB>> ]
+"8060" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1751</SUB>> ]
+"8005" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1751</SUB>> ]
+"8006" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1751</SUB>> ]
+"8008" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1751</SUB>> ]
+"7989" [label = <(METHOD,SetBooleanField)<SUB>1750</SUB>> ]
+"8072" [label = <(METHOD_RETURN,void)<SUB>1750</SUB>> ]
   "7995" -> "8000" 
   "7995" -> "8014" 
   "8027" -> "8035" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/155-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/155-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/155-cfg.dot	2023-06-07 19:34:48.377388393 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/155-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,47 +1,47 @@
 digraph "SetByteField" {  
-"8080" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1756</SUB>> ]
-"8112" [label = <(soa,ScopedObjectAccess)<SUB>1756</SUB>> ]
-"8115" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1756</SUB>> ]
-"8122" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v)))<SUB>1756</SUB>> ]
-"8130" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1756</SUB>> ]
-"8147" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (o, v))<SUB>1756</SUB>> ]
-"8098" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1756</SUB>> ]
-"8117" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),jni::DecodeArtField(fid))<SUB>1756</SUB>> ]
-"8125" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v))<SUB>1756</SUB>> ]
-"8131" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1756</SUB>> ]
-"8138" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1756</SUB>> ]
-"8148" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1756</SUB>> ]
-"8153" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1756</SUB>> ]
-"8099" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1756</SUB>> ]
-"8103" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1756</SUB>> ]
-"8110" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1756</SUB>> ]
-"8118" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1756</SUB>> ]
-"8126" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1756</SUB>> ]
-"8132" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1756</SUB>> ]
-"8139" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1756</SUB>> ]
-"8149" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1756</SUB>> ]
-"8154" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1756</SUB>> ]
-"8084" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1756</SUB>> ]
-"8104" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1756</SUB>> ]
-"8120" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1756</SUB>> ]
-"8128" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;)<SUB>1756</SUB>> ]
-"8134" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1756</SUB>> ]
-"8140" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1756</SUB>> ]
-"8143" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1756</SUB>> ]
-"8151" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1756</SUB>> ]
-"8085" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1756</SUB>> ]
-"8089" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1756</SUB>> ]
-"8096" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1756</SUB>> ]
-"8105" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1756</SUB>> ]
-"8107" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1756</SUB>> ]
-"8136" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1756</SUB>> ]
-"8142" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1756</SUB>> ]
-"8145" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1756</SUB>> ]
-"8090" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1756</SUB>> ]
-"8091" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1756</SUB>> ]
-"8093" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1756</SUB>> ]
-"8074" [label = <(METHOD,SetByteField)<SUB>1755</SUB>> ]
-"8157" [label = <(METHOD_RETURN,void)<SUB>1755</SUB>> ]
+"8080" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1755</SUB>> ]
+"8112" [label = <(soa,ScopedObjectAccess)<SUB>1755</SUB>> ]
+"8115" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1755</SUB>> ]
+"8122" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v)))<SUB>1755</SUB>> ]
+"8130" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1755</SUB>> ]
+"8147" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (o, v))<SUB>1755</SUB>> ]
+"8098" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1755</SUB>> ]
+"8117" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),jni::DecodeArtField(fid))<SUB>1755</SUB>> ]
+"8125" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;(v))<SUB>1755</SUB>> ]
+"8131" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1755</SUB>> ]
+"8138" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1755</SUB>> ]
+"8148" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1755</SUB>> ]
+"8153" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1755</SUB>> ]
+"8099" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1755</SUB>> ]
+"8103" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1755</SUB>> ]
+"8110" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1755</SUB>> ]
+"8118" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1755</SUB>> ]
+"8126" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1755</SUB>> ]
+"8132" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1755</SUB>> ]
+"8139" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1755</SUB>> ]
+"8149" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1755</SUB>> ]
+"8154" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1755</SUB>> ]
+"8084" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1755</SUB>> ]
+"8104" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1755</SUB>> ]
+"8120" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1755</SUB>> ]
+"8128" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Byte, obj, v)&gt;)<SUB>1755</SUB>> ]
+"8134" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1755</SUB>> ]
+"8140" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1755</SUB>> ]
+"8143" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1755</SUB>> ]
+"8151" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1755</SUB>> ]
+"8085" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1755</SUB>> ]
+"8089" [label = <(SET_PRIMITIVE_FIELD(Byte, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1755</SUB>> ]
+"8096" [label = <(RETURN,SET_PRIMITIVE_FIELD(Byte, obj, v),SET_PRIMITIVE_FIELD(Byte, obj, v))<SUB>1755</SUB>> ]
+"8105" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1755</SUB>> ]
+"8107" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1755</SUB>> ]
+"8136" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1755</SUB>> ]
+"8142" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1755</SUB>> ]
+"8145" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1755</SUB>> ]
+"8090" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1755</SUB>> ]
+"8091" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1755</SUB>> ]
+"8093" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1755</SUB>> ]
+"8074" [label = <(METHOD,SetByteField)<SUB>1754</SUB>> ]
+"8157" [label = <(METHOD_RETURN,void)<SUB>1754</SUB>> ]
   "8080" -> "8085" 
   "8080" -> "8099" 
   "8112" -> "8120" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/156-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/156-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/156-cfg.dot	2023-06-07 19:34:48.377388393 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/156-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,47 +1,47 @@
 digraph "SetCharField" {  
-"8165" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1760</SUB>> ]
-"8197" [label = <(soa,ScopedObjectAccess)<SUB>1760</SUB>> ]
-"8200" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1760</SUB>> ]
-"8207" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v)))<SUB>1760</SUB>> ]
-"8215" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1760</SUB>> ]
-"8232" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (o, v))<SUB>1760</SUB>> ]
-"8183" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1760</SUB>> ]
-"8202" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),jni::DecodeArtField(fid))<SUB>1760</SUB>> ]
-"8210" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v))<SUB>1760</SUB>> ]
-"8216" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1760</SUB>> ]
-"8223" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1760</SUB>> ]
-"8233" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1760</SUB>> ]
-"8238" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1760</SUB>> ]
-"8184" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1760</SUB>> ]
-"8188" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1760</SUB>> ]
-"8195" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1760</SUB>> ]
-"8203" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1760</SUB>> ]
-"8211" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1760</SUB>> ]
-"8217" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1760</SUB>> ]
-"8224" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1760</SUB>> ]
-"8234" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1760</SUB>> ]
-"8239" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1760</SUB>> ]
-"8169" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1760</SUB>> ]
-"8189" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1760</SUB>> ]
-"8205" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1760</SUB>> ]
-"8213" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;)<SUB>1760</SUB>> ]
-"8219" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1760</SUB>> ]
-"8225" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1760</SUB>> ]
-"8228" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1760</SUB>> ]
-"8236" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1760</SUB>> ]
-"8170" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1760</SUB>> ]
-"8174" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1760</SUB>> ]
-"8181" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1760</SUB>> ]
-"8190" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1760</SUB>> ]
-"8192" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1760</SUB>> ]
-"8221" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1760</SUB>> ]
-"8227" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1760</SUB>> ]
-"8230" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1760</SUB>> ]
-"8175" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1760</SUB>> ]
-"8176" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1760</SUB>> ]
-"8178" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1760</SUB>> ]
-"8159" [label = <(METHOD,SetCharField)<SUB>1759</SUB>> ]
-"8242" [label = <(METHOD_RETURN,void)<SUB>1759</SUB>> ]
+"8165" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1759</SUB>> ]
+"8197" [label = <(soa,ScopedObjectAccess)<SUB>1759</SUB>> ]
+"8200" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1759</SUB>> ]
+"8207" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v)))<SUB>1759</SUB>> ]
+"8215" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1759</SUB>> ]
+"8232" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (o, v))<SUB>1759</SUB>> ]
+"8183" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1759</SUB>> ]
+"8202" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),jni::DecodeArtField(fid))<SUB>1759</SUB>> ]
+"8210" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;(v))<SUB>1759</SUB>> ]
+"8216" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1759</SUB>> ]
+"8223" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1759</SUB>> ]
+"8233" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1759</SUB>> ]
+"8238" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1759</SUB>> ]
+"8184" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1759</SUB>> ]
+"8188" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1759</SUB>> ]
+"8195" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1759</SUB>> ]
+"8203" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1759</SUB>> ]
+"8211" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1759</SUB>> ]
+"8217" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1759</SUB>> ]
+"8224" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1759</SUB>> ]
+"8234" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1759</SUB>> ]
+"8239" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1759</SUB>> ]
+"8169" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1759</SUB>> ]
+"8189" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1759</SUB>> ]
+"8205" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1759</SUB>> ]
+"8213" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Char, obj, v)&gt;)<SUB>1759</SUB>> ]
+"8219" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1759</SUB>> ]
+"8225" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1759</SUB>> ]
+"8228" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1759</SUB>> ]
+"8236" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1759</SUB>> ]
+"8170" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1759</SUB>> ]
+"8174" [label = <(SET_PRIMITIVE_FIELD(Char, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1759</SUB>> ]
+"8181" [label = <(RETURN,SET_PRIMITIVE_FIELD(Char, obj, v),SET_PRIMITIVE_FIELD(Char, obj, v))<SUB>1759</SUB>> ]
+"8190" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1759</SUB>> ]
+"8192" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1759</SUB>> ]
+"8221" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1759</SUB>> ]
+"8227" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1759</SUB>> ]
+"8230" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1759</SUB>> ]
+"8175" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1759</SUB>> ]
+"8176" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1759</SUB>> ]
+"8178" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1759</SUB>> ]
+"8159" [label = <(METHOD,SetCharField)<SUB>1758</SUB>> ]
+"8242" [label = <(METHOD_RETURN,void)<SUB>1758</SUB>> ]
   "8165" -> "8170" 
   "8165" -> "8184" 
   "8197" -> "8205" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/157-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/157-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/157-cfg.dot	2023-06-07 19:34:48.377388393 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/157-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,47 +1,47 @@
 digraph "SetFloatField" {  
-"8250" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1764</SUB>> ]
-"8282" [label = <(soa,ScopedObjectAccess)<SUB>1764</SUB>> ]
-"8285" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1764</SUB>> ]
-"8292" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v)))<SUB>1764</SUB>> ]
-"8300" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1764</SUB>> ]
-"8317" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (o, v))<SUB>1764</SUB>> ]
-"8268" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1764</SUB>> ]
-"8287" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),jni::DecodeArtField(fid))<SUB>1764</SUB>> ]
-"8295" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v))<SUB>1764</SUB>> ]
-"8301" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1764</SUB>> ]
-"8308" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1764</SUB>> ]
-"8318" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1764</SUB>> ]
-"8323" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1764</SUB>> ]
-"8269" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1764</SUB>> ]
-"8273" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1764</SUB>> ]
-"8280" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1764</SUB>> ]
-"8288" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1764</SUB>> ]
-"8296" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1764</SUB>> ]
-"8302" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1764</SUB>> ]
-"8309" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1764</SUB>> ]
-"8319" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1764</SUB>> ]
-"8324" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1764</SUB>> ]
-"8254" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1764</SUB>> ]
-"8274" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1764</SUB>> ]
-"8290" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1764</SUB>> ]
-"8298" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;)<SUB>1764</SUB>> ]
-"8304" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1764</SUB>> ]
-"8310" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1764</SUB>> ]
-"8313" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1764</SUB>> ]
-"8321" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1764</SUB>> ]
-"8255" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1764</SUB>> ]
-"8259" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1764</SUB>> ]
-"8266" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1764</SUB>> ]
-"8275" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1764</SUB>> ]
-"8277" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1764</SUB>> ]
-"8306" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1764</SUB>> ]
-"8312" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1764</SUB>> ]
-"8315" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1764</SUB>> ]
-"8260" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1764</SUB>> ]
-"8261" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1764</SUB>> ]
-"8263" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1764</SUB>> ]
-"8244" [label = <(METHOD,SetFloatField)<SUB>1763</SUB>> ]
-"8327" [label = <(METHOD_RETURN,void)<SUB>1763</SUB>> ]
+"8250" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1763</SUB>> ]
+"8282" [label = <(soa,ScopedObjectAccess)<SUB>1763</SUB>> ]
+"8285" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1763</SUB>> ]
+"8292" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v)))<SUB>1763</SUB>> ]
+"8300" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1763</SUB>> ]
+"8317" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (o, v))<SUB>1763</SUB>> ]
+"8268" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1763</SUB>> ]
+"8287" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),jni::DecodeArtField(fid))<SUB>1763</SUB>> ]
+"8295" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;(v))<SUB>1763</SUB>> ]
+"8301" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1763</SUB>> ]
+"8308" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1763</SUB>> ]
+"8318" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1763</SUB>> ]
+"8323" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1763</SUB>> ]
+"8269" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1763</SUB>> ]
+"8273" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1763</SUB>> ]
+"8280" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1763</SUB>> ]
+"8288" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1763</SUB>> ]
+"8296" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1763</SUB>> ]
+"8302" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1763</SUB>> ]
+"8309" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1763</SUB>> ]
+"8319" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1763</SUB>> ]
+"8324" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1763</SUB>> ]
+"8254" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1763</SUB>> ]
+"8274" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1763</SUB>> ]
+"8290" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1763</SUB>> ]
+"8298" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Float, obj, v)&gt;)<SUB>1763</SUB>> ]
+"8304" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1763</SUB>> ]
+"8310" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1763</SUB>> ]
+"8313" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1763</SUB>> ]
+"8321" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1763</SUB>> ]
+"8255" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1763</SUB>> ]
+"8259" [label = <(SET_PRIMITIVE_FIELD(Float, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1763</SUB>> ]
+"8266" [label = <(RETURN,SET_PRIMITIVE_FIELD(Float, obj, v),SET_PRIMITIVE_FIELD(Float, obj, v))<SUB>1763</SUB>> ]
+"8275" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1763</SUB>> ]
+"8277" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1763</SUB>> ]
+"8306" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1763</SUB>> ]
+"8312" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1763</SUB>> ]
+"8315" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1763</SUB>> ]
+"8260" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1763</SUB>> ]
+"8261" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1763</SUB>> ]
+"8263" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1763</SUB>> ]
+"8244" [label = <(METHOD,SetFloatField)<SUB>1762</SUB>> ]
+"8327" [label = <(METHOD_RETURN,void)<SUB>1762</SUB>> ]
   "8250" -> "8255" 
   "8250" -> "8269" 
   "8282" -> "8290" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/158-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/158-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/158-cfg.dot	2023-06-07 19:34:48.377388393 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/158-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,47 +1,47 @@
 digraph "SetDoubleField" {  
-"8335" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1768</SUB>> ]
-"8367" [label = <(soa,ScopedObjectAccess)<SUB>1768</SUB>> ]
-"8370" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1768</SUB>> ]
-"8377" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v)))<SUB>1768</SUB>> ]
-"8385" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1768</SUB>> ]
-"8402" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (o, v))<SUB>1768</SUB>> ]
-"8353" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1768</SUB>> ]
-"8372" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),jni::DecodeArtField(fid))<SUB>1768</SUB>> ]
-"8380" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v))<SUB>1768</SUB>> ]
-"8386" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1768</SUB>> ]
-"8393" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1768</SUB>> ]
-"8403" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1768</SUB>> ]
-"8408" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1768</SUB>> ]
-"8354" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1768</SUB>> ]
-"8358" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1768</SUB>> ]
-"8365" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1768</SUB>> ]
-"8373" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1768</SUB>> ]
-"8381" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1768</SUB>> ]
-"8387" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1768</SUB>> ]
-"8394" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1768</SUB>> ]
-"8404" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1768</SUB>> ]
-"8409" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1768</SUB>> ]
-"8339" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1768</SUB>> ]
-"8359" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1768</SUB>> ]
-"8375" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1768</SUB>> ]
-"8383" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;)<SUB>1768</SUB>> ]
-"8389" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1768</SUB>> ]
-"8395" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1768</SUB>> ]
-"8398" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1768</SUB>> ]
-"8406" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1768</SUB>> ]
-"8340" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1768</SUB>> ]
-"8344" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1768</SUB>> ]
-"8351" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1768</SUB>> ]
-"8360" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1768</SUB>> ]
-"8362" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1768</SUB>> ]
-"8391" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1768</SUB>> ]
-"8397" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1768</SUB>> ]
-"8400" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1768</SUB>> ]
-"8345" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1768</SUB>> ]
-"8346" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1768</SUB>> ]
-"8348" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1768</SUB>> ]
-"8329" [label = <(METHOD,SetDoubleField)<SUB>1767</SUB>> ]
-"8412" [label = <(METHOD_RETURN,void)<SUB>1767</SUB>> ]
+"8335" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1767</SUB>> ]
+"8367" [label = <(soa,ScopedObjectAccess)<SUB>1767</SUB>> ]
+"8370" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1767</SUB>> ]
+"8377" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v)))<SUB>1767</SUB>> ]
+"8385" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1767</SUB>> ]
+"8402" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (o, v))<SUB>1767</SUB>> ]
+"8353" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1767</SUB>> ]
+"8372" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),jni::DecodeArtField(fid))<SUB>1767</SUB>> ]
+"8380" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;(v))<SUB>1767</SUB>> ]
+"8386" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1767</SUB>> ]
+"8393" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1767</SUB>> ]
+"8403" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1767</SUB>> ]
+"8408" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1767</SUB>> ]
+"8354" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1767</SUB>> ]
+"8358" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1767</SUB>> ]
+"8365" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1767</SUB>> ]
+"8373" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1767</SUB>> ]
+"8381" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1767</SUB>> ]
+"8387" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1767</SUB>> ]
+"8394" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1767</SUB>> ]
+"8404" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1767</SUB>> ]
+"8409" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1767</SUB>> ]
+"8339" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1767</SUB>> ]
+"8359" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1767</SUB>> ]
+"8375" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1767</SUB>> ]
+"8383" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Double, obj, v)&gt;)<SUB>1767</SUB>> ]
+"8389" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1767</SUB>> ]
+"8395" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1767</SUB>> ]
+"8398" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1767</SUB>> ]
+"8406" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1767</SUB>> ]
+"8340" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1767</SUB>> ]
+"8344" [label = <(SET_PRIMITIVE_FIELD(Double, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1767</SUB>> ]
+"8351" [label = <(RETURN,SET_PRIMITIVE_FIELD(Double, obj, v),SET_PRIMITIVE_FIELD(Double, obj, v))<SUB>1767</SUB>> ]
+"8360" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1767</SUB>> ]
+"8362" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1767</SUB>> ]
+"8391" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1767</SUB>> ]
+"8397" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1767</SUB>> ]
+"8400" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1767</SUB>> ]
+"8345" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1767</SUB>> ]
+"8346" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1767</SUB>> ]
+"8348" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1767</SUB>> ]
+"8329" [label = <(METHOD,SetDoubleField)<SUB>1766</SUB>> ]
+"8412" [label = <(METHOD_RETURN,void)<SUB>1766</SUB>> ]
   "8335" -> "8340" 
   "8335" -> "8354" 
   "8367" -> "8375" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/159-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/159-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/159-cfg.dot	2023-06-07 19:34:48.377388393 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/159-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,47 +1,47 @@
 digraph "SetIntField" {  
-"8420" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1772</SUB>> ]
-"8452" [label = <(soa,ScopedObjectAccess)<SUB>1772</SUB>> ]
-"8455" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1772</SUB>> ]
-"8462" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v)))<SUB>1772</SUB>> ]
-"8470" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1772</SUB>> ]
-"8487" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (o, v))<SUB>1772</SUB>> ]
-"8438" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1772</SUB>> ]
-"8457" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),jni::DecodeArtField(fid))<SUB>1772</SUB>> ]
-"8465" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v))<SUB>1772</SUB>> ]
-"8471" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1772</SUB>> ]
-"8478" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1772</SUB>> ]
-"8488" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1772</SUB>> ]
-"8493" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1772</SUB>> ]
-"8439" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1772</SUB>> ]
-"8443" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1772</SUB>> ]
-"8450" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1772</SUB>> ]
-"8458" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1772</SUB>> ]
-"8466" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1772</SUB>> ]
-"8472" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1772</SUB>> ]
-"8479" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1772</SUB>> ]
-"8489" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1772</SUB>> ]
-"8494" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1772</SUB>> ]
-"8424" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1772</SUB>> ]
-"8444" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1772</SUB>> ]
-"8460" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1772</SUB>> ]
-"8468" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;)<SUB>1772</SUB>> ]
-"8474" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1772</SUB>> ]
-"8480" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1772</SUB>> ]
-"8483" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1772</SUB>> ]
-"8491" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1772</SUB>> ]
-"8425" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1772</SUB>> ]
-"8429" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1772</SUB>> ]
-"8436" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1772</SUB>> ]
-"8445" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1772</SUB>> ]
-"8447" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1772</SUB>> ]
-"8476" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1772</SUB>> ]
-"8482" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1772</SUB>> ]
-"8485" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1772</SUB>> ]
-"8430" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1772</SUB>> ]
-"8431" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1772</SUB>> ]
-"8433" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1772</SUB>> ]
-"8414" [label = <(METHOD,SetIntField)<SUB>1771</SUB>> ]
-"8497" [label = <(METHOD_RETURN,void)<SUB>1771</SUB>> ]
+"8420" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1771</SUB>> ]
+"8452" [label = <(soa,ScopedObjectAccess)<SUB>1771</SUB>> ]
+"8455" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1771</SUB>> ]
+"8462" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v)))<SUB>1771</SUB>> ]
+"8470" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1771</SUB>> ]
+"8487" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (o, v))<SUB>1771</SUB>> ]
+"8438" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1771</SUB>> ]
+"8457" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),jni::DecodeArtField(fid))<SUB>1771</SUB>> ]
+"8465" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;(v))<SUB>1771</SUB>> ]
+"8471" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1771</SUB>> ]
+"8478" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1771</SUB>> ]
+"8488" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1771</SUB>> ]
+"8493" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1771</SUB>> ]
+"8439" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1771</SUB>> ]
+"8443" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1771</SUB>> ]
+"8450" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1771</SUB>> ]
+"8458" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1771</SUB>> ]
+"8466" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1771</SUB>> ]
+"8472" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1771</SUB>> ]
+"8479" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1771</SUB>> ]
+"8489" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1771</SUB>> ]
+"8494" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1771</SUB>> ]
+"8424" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1771</SUB>> ]
+"8444" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1771</SUB>> ]
+"8460" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1771</SUB>> ]
+"8468" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Int, obj, v)&gt;)<SUB>1771</SUB>> ]
+"8474" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1771</SUB>> ]
+"8480" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1771</SUB>> ]
+"8483" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1771</SUB>> ]
+"8491" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1771</SUB>> ]
+"8425" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1771</SUB>> ]
+"8429" [label = <(SET_PRIMITIVE_FIELD(Int, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1771</SUB>> ]
+"8436" [label = <(RETURN,SET_PRIMITIVE_FIELD(Int, obj, v),SET_PRIMITIVE_FIELD(Int, obj, v))<SUB>1771</SUB>> ]
+"8445" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1771</SUB>> ]
+"8447" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1771</SUB>> ]
+"8476" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1771</SUB>> ]
+"8482" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1771</SUB>> ]
+"8485" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1771</SUB>> ]
+"8430" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1771</SUB>> ]
+"8431" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1771</SUB>> ]
+"8433" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1771</SUB>> ]
+"8414" [label = <(METHOD,SetIntField)<SUB>1770</SUB>> ]
+"8497" [label = <(METHOD_RETURN,void)<SUB>1770</SUB>> ]
   "8420" -> "8425" 
   "8420" -> "8439" 
   "8452" -> "8460" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/16-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/16-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/16-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/16-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,7 +1,7 @@
 digraph "DropCache" {  
-"401" [label = <(&lt;operator&gt;.assignment,memory_type_table_ = {})<SUB>242</SUB>> ]
-"399" [label = <(METHOD,DropCache)<SUB>241</SUB>> ]
-"403" [label = <(METHOD_RETURN,void)<SUB>241</SUB>> ]
+"401" [label = <(&lt;operator&gt;.assignment,memory_type_table_ = {})<SUB>241</SUB>> ]
+"399" [label = <(METHOD,DropCache)<SUB>240</SUB>> ]
+"403" [label = <(METHOD_RETURN,void)<SUB>240</SUB>> ]
   "401" -> "403" 
   "399" -> "401" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/160-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/160-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/160-cfg.dot	2023-06-07 19:34:48.377388393 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/160-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,47 +1,47 @@
 digraph "SetLongField" {  
-"8505" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1776</SUB>> ]
-"8537" [label = <(soa,ScopedObjectAccess)<SUB>1776</SUB>> ]
-"8540" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1776</SUB>> ]
-"8547" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v)))<SUB>1776</SUB>> ]
-"8555" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1776</SUB>> ]
-"8572" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (o, v))<SUB>1776</SUB>> ]
-"8523" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1776</SUB>> ]
-"8542" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),jni::DecodeArtField(fid))<SUB>1776</SUB>> ]
-"8550" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v))<SUB>1776</SUB>> ]
-"8556" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1776</SUB>> ]
-"8563" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1776</SUB>> ]
-"8573" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1776</SUB>> ]
-"8578" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1776</SUB>> ]
-"8524" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1776</SUB>> ]
-"8528" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1776</SUB>> ]
-"8535" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1776</SUB>> ]
-"8543" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1776</SUB>> ]
-"8551" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1776</SUB>> ]
-"8557" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1776</SUB>> ]
-"8564" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1776</SUB>> ]
-"8574" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1776</SUB>> ]
-"8579" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1776</SUB>> ]
-"8509" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1776</SUB>> ]
-"8529" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1776</SUB>> ]
-"8545" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1776</SUB>> ]
-"8553" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;)<SUB>1776</SUB>> ]
-"8559" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1776</SUB>> ]
-"8565" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1776</SUB>> ]
-"8568" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1776</SUB>> ]
-"8576" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1776</SUB>> ]
-"8510" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1776</SUB>> ]
-"8514" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1776</SUB>> ]
-"8521" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1776</SUB>> ]
-"8530" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1776</SUB>> ]
-"8532" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1776</SUB>> ]
-"8561" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1776</SUB>> ]
-"8567" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1776</SUB>> ]
-"8570" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1776</SUB>> ]
-"8515" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1776</SUB>> ]
-"8516" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1776</SUB>> ]
-"8518" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1776</SUB>> ]
-"8499" [label = <(METHOD,SetLongField)<SUB>1775</SUB>> ]
-"8582" [label = <(METHOD_RETURN,void)<SUB>1775</SUB>> ]
+"8505" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1775</SUB>> ]
+"8537" [label = <(soa,ScopedObjectAccess)<SUB>1775</SUB>> ]
+"8540" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1775</SUB>> ]
+"8547" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v)))<SUB>1775</SUB>> ]
+"8555" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1775</SUB>> ]
+"8572" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (o, v))<SUB>1775</SUB>> ]
+"8523" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1775</SUB>> ]
+"8542" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),jni::DecodeArtField(fid))<SUB>1775</SUB>> ]
+"8550" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;(v))<SUB>1775</SUB>> ]
+"8556" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1775</SUB>> ]
+"8563" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1775</SUB>> ]
+"8573" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1775</SUB>> ]
+"8578" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1775</SUB>> ]
+"8524" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1775</SUB>> ]
+"8528" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1775</SUB>> ]
+"8535" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1775</SUB>> ]
+"8543" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1775</SUB>> ]
+"8551" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1775</SUB>> ]
+"8557" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1775</SUB>> ]
+"8564" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1775</SUB>> ]
+"8574" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1775</SUB>> ]
+"8579" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1775</SUB>> ]
+"8509" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1775</SUB>> ]
+"8529" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1775</SUB>> ]
+"8545" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1775</SUB>> ]
+"8553" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Long, obj, v)&gt;)<SUB>1775</SUB>> ]
+"8559" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1775</SUB>> ]
+"8565" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1775</SUB>> ]
+"8568" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1775</SUB>> ]
+"8576" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1775</SUB>> ]
+"8510" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1775</SUB>> ]
+"8514" [label = <(SET_PRIMITIVE_FIELD(Long, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1775</SUB>> ]
+"8521" [label = <(RETURN,SET_PRIMITIVE_FIELD(Long, obj, v),SET_PRIMITIVE_FIELD(Long, obj, v))<SUB>1775</SUB>> ]
+"8530" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1775</SUB>> ]
+"8532" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1775</SUB>> ]
+"8561" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1775</SUB>> ]
+"8567" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1775</SUB>> ]
+"8570" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1775</SUB>> ]
+"8515" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1775</SUB>> ]
+"8516" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1775</SUB>> ]
+"8518" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1775</SUB>> ]
+"8499" [label = <(METHOD,SetLongField)<SUB>1774</SUB>> ]
+"8582" [label = <(METHOD_RETURN,void)<SUB>1774</SUB>> ]
   "8505" -> "8510" 
   "8505" -> "8524" 
   "8537" -> "8545" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/161-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/161-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/161-cfg.dot	2023-06-07 19:34:48.377388393 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/161-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,47 +1,47 @@
 digraph "SetShortField" {  
-"8590" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1780</SUB>> ]
-"8622" [label = <(soa,ScopedObjectAccess)<SUB>1780</SUB>> ]
-"8625" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1780</SUB>> ]
-"8632" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v)))<SUB>1780</SUB>> ]
-"8640" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1780</SUB>> ]
-"8657" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (o, v))<SUB>1780</SUB>> ]
-"8608" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1780</SUB>> ]
-"8627" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),jni::DecodeArtField(fid))<SUB>1780</SUB>> ]
-"8635" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v))<SUB>1780</SUB>> ]
-"8641" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1780</SUB>> ]
-"8648" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1780</SUB>> ]
-"8658" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1780</SUB>> ]
-"8663" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1780</SUB>> ]
-"8609" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1780</SUB>> ]
-"8613" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1780</SUB>> ]
-"8620" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1780</SUB>> ]
-"8628" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1780</SUB>> ]
-"8636" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1780</SUB>> ]
-"8642" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1780</SUB>> ]
-"8649" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1780</SUB>> ]
-"8659" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1780</SUB>> ]
-"8664" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1780</SUB>> ]
-"8594" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1780</SUB>> ]
-"8614" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1780</SUB>> ]
-"8630" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1780</SUB>> ]
-"8638" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;)<SUB>1780</SUB>> ]
-"8644" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1780</SUB>> ]
-"8650" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1780</SUB>> ]
-"8653" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1780</SUB>> ]
-"8661" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1780</SUB>> ]
-"8595" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1780</SUB>> ]
-"8599" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1780</SUB>> ]
-"8606" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1780</SUB>> ]
-"8615" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1780</SUB>> ]
-"8617" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1780</SUB>> ]
-"8646" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1780</SUB>> ]
-"8652" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1780</SUB>> ]
-"8655" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1780</SUB>> ]
-"8600" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1780</SUB>> ]
-"8601" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1780</SUB>> ]
-"8603" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1780</SUB>> ]
-"8584" [label = <(METHOD,SetShortField)<SUB>1779</SUB>> ]
-"8667" [label = <(METHOD_RETURN,void)<SUB>1779</SUB>> ]
+"8590" [label = <(SET_PRIMITIVE_FIELD,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1779</SUB>> ]
+"8622" [label = <(soa,ScopedObjectAccess)<SUB>1779</SUB>> ]
+"8625" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1779</SUB>> ]
+"8632" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, obj, JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v)))<SUB>1779</SUB>> ]
+"8640" [label = <(&lt;operator&gt;.assignment,ObjPtr &lt; mirror::Object &gt; o = soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1779</SUB>> ]
+"8657" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (o, v))<SUB>1779</SUB>> ]
+"8608" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1779</SUB>> ]
+"8627" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),jni::DecodeArtField(fid))<SUB>1779</SUB>> ]
+"8635" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JValue::FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;(v))<SUB>1779</SUB>> ]
+"8641" [label = <(&lt;operator&gt;.greaterThan,ObjPtr &lt; mirror::Object &gt; o)<SUB>1779</SUB>> ]
+"8648" [label = <(&lt;operator&gt;.greaterThan,soa.Decode &lt; mirror::Object &gt; (obj))<SUB>1779</SUB>> ]
+"8658" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1779</SUB>> ]
+"8663" [label = <(&lt;operator&gt;.bracketedPrimary,(o, v))<SUB>1779</SUB>> ]
+"8609" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1779</SUB>> ]
+"8613" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1779</SUB>> ]
+"8620" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1779</SUB>> ]
+"8628" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1779</SUB>> ]
+"8636" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1779</SUB>> ]
+"8642" [label = <(&lt;operator&gt;.lessThan,ObjPtr &lt; mirror::Object)<SUB>1779</SUB>> ]
+"8649" [label = <(&lt;operator&gt;.lessThan,soa.Decode &lt; mirror::Object)<SUB>1779</SUB>> ]
+"8659" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1779</SUB>> ]
+"8664" [label = <(&lt;operator&gt;.expressionList,o, v)<SUB>1779</SUB>> ]
+"8594" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1779</SUB>> ]
+"8614" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1779</SUB>> ]
+"8630" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1779</SUB>> ]
+"8638" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;,FromPrimitive&lt;SET_PRIMITIVE_FIELD(Short, obj, v)&gt;)<SUB>1779</SUB>> ]
+"8644" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1779</SUB>> ]
+"8650" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1779</SUB>> ]
+"8653" [label = <(&lt;operator&gt;.fieldAccess,SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1779</SUB>> ]
+"8661" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1779</SUB>> ]
+"8595" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1779</SUB>> ]
+"8599" [label = <(SET_PRIMITIVE_FIELD(Short, obj, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1779</SUB>> ]
+"8606" [label = <(RETURN,SET_PRIMITIVE_FIELD(Short, obj, v),SET_PRIMITIVE_FIELD(Short, obj, v))<SUB>1779</SUB>> ]
+"8615" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1779</SUB>> ]
+"8617" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1779</SUB>> ]
+"8646" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1779</SUB>> ]
+"8652" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1779</SUB>> ]
+"8655" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1779</SUB>> ]
+"8600" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1779</SUB>> ]
+"8601" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1779</SUB>> ]
+"8603" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1779</SUB>> ]
+"8584" [label = <(METHOD,SetShortField)<SUB>1778</SUB>> ]
+"8667" [label = <(METHOD_RETURN,void)<SUB>1778</SUB>> ]
   "8590" -> "8595" 
   "8590" -> "8609" 
   "8622" -> "8630" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/162-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/162-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/162-cfg.dot	2023-06-07 19:34:48.377388393 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/162-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticBooleanField" {  
-"8675" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1784</SUB>> ]
-"8692" [label = <(soa,ScopedObjectAccess)<SUB>1784</SUB>> ]
-"8695" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1784</SUB>> ]
-"8702" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v)))<SUB>1784</SUB>> ]
-"8710" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1784</SUB>> ]
-"8697" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),jni::DecodeArtField(fid))<SUB>1784</SUB>> ]
-"8705" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v))<SUB>1784</SUB>> ]
-"8711" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1784</SUB>> ]
-"8716" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1784</SUB>> ]
-"8698" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1784</SUB>> ]
-"8706" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1784</SUB>> ]
-"8712" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1784</SUB>> ]
-"8717" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1784</SUB>> ]
-"8678" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1784</SUB>> ]
-"8700" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1784</SUB>> ]
-"8708" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;)<SUB>1784</SUB>> ]
-"8714" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1784</SUB>> ]
-"8718" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),f-&gt;GetDeclaringClass())<SUB>1784</SUB>> ]
-"8679" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1784</SUB>> ]
-"8683" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1784</SUB>> ]
-"8690" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Boolean, v),SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1784</SUB>> ]
-"8719" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1784</SUB>> ]
-"8684" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1784</SUB>> ]
-"8721" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1784</SUB>> ]
-"8685" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1784</SUB>> ]
-"8687" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1784</SUB>> ]
-"8669" [label = <(METHOD,SetStaticBooleanField)<SUB>1783</SUB>> ]
-"8723" [label = <(METHOD_RETURN,void)<SUB>1783</SUB>> ]
+"8675" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1783</SUB>> ]
+"8692" [label = <(soa,ScopedObjectAccess)<SUB>1783</SUB>> ]
+"8695" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1783</SUB>> ]
+"8702" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v)))<SUB>1783</SUB>> ]
+"8710" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetBoolean &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1783</SUB>> ]
+"8697" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),jni::DecodeArtField(fid))<SUB>1783</SUB>> ]
+"8705" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;(v))<SUB>1783</SUB>> ]
+"8711" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetBoolean &lt; false)<SUB>1783</SUB>> ]
+"8716" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1783</SUB>> ]
+"8698" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1783</SUB>> ]
+"8706" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1783</SUB>> ]
+"8712" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetBoolean)<SUB>1783</SUB>> ]
+"8717" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1783</SUB>> ]
+"8678" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1783</SUB>> ]
+"8700" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1783</SUB>> ]
+"8708" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Boolean, v)&gt;)<SUB>1783</SUB>> ]
+"8714" [label = <(FIELD_IDENTIFIER,SetBoolean,SetBoolean)<SUB>1783</SUB>> ]
+"8718" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),f-&gt;GetDeclaringClass())<SUB>1783</SUB>> ]
+"8679" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1783</SUB>> ]
+"8683" [label = <(SET_STATIC_PRIMITIVE_FIELD(Boolean, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1783</SUB>> ]
+"8690" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Boolean, v),SET_STATIC_PRIMITIVE_FIELD(Boolean, v))<SUB>1783</SUB>> ]
+"8719" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1783</SUB>> ]
+"8684" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1783</SUB>> ]
+"8721" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1783</SUB>> ]
+"8685" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1783</SUB>> ]
+"8687" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1783</SUB>> ]
+"8669" [label = <(METHOD,SetStaticBooleanField)<SUB>1782</SUB>> ]
+"8723" [label = <(METHOD_RETURN,void)<SUB>1782</SUB>> ]
   "8675" -> "8679" 
   "8675" -> "8692" 
   "8692" -> "8700" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/163-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/163-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/163-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/163-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticByteField" {  
-"8731" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1788</SUB>> ]
-"8748" [label = <(soa,ScopedObjectAccess)<SUB>1788</SUB>> ]
-"8751" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1788</SUB>> ]
-"8758" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v)))<SUB>1788</SUB>> ]
-"8766" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1788</SUB>> ]
-"8753" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),jni::DecodeArtField(fid))<SUB>1788</SUB>> ]
-"8761" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v))<SUB>1788</SUB>> ]
-"8767" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1788</SUB>> ]
-"8772" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1788</SUB>> ]
-"8754" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1788</SUB>> ]
-"8762" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1788</SUB>> ]
-"8768" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1788</SUB>> ]
-"8773" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1788</SUB>> ]
-"8734" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1788</SUB>> ]
-"8756" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1788</SUB>> ]
-"8764" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;)<SUB>1788</SUB>> ]
-"8770" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1788</SUB>> ]
-"8774" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),f-&gt;GetDeclaringClass())<SUB>1788</SUB>> ]
-"8735" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1788</SUB>> ]
-"8739" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1788</SUB>> ]
-"8746" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Byte, v),SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1788</SUB>> ]
-"8775" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1788</SUB>> ]
-"8740" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1788</SUB>> ]
-"8777" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1788</SUB>> ]
-"8741" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1788</SUB>> ]
-"8743" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1788</SUB>> ]
-"8725" [label = <(METHOD,SetStaticByteField)<SUB>1787</SUB>> ]
-"8779" [label = <(METHOD_RETURN,void)<SUB>1787</SUB>> ]
+"8731" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1787</SUB>> ]
+"8748" [label = <(soa,ScopedObjectAccess)<SUB>1787</SUB>> ]
+"8751" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1787</SUB>> ]
+"8758" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v)))<SUB>1787</SUB>> ]
+"8766" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetByte &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1787</SUB>> ]
+"8753" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),jni::DecodeArtField(fid))<SUB>1787</SUB>> ]
+"8761" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;(v))<SUB>1787</SUB>> ]
+"8767" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetByte &lt; false)<SUB>1787</SUB>> ]
+"8772" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1787</SUB>> ]
+"8754" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1787</SUB>> ]
+"8762" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1787</SUB>> ]
+"8768" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetByte)<SUB>1787</SUB>> ]
+"8773" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1787</SUB>> ]
+"8734" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1787</SUB>> ]
+"8756" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1787</SUB>> ]
+"8764" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Byte, v)&gt;)<SUB>1787</SUB>> ]
+"8770" [label = <(FIELD_IDENTIFIER,SetByte,SetByte)<SUB>1787</SUB>> ]
+"8774" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),f-&gt;GetDeclaringClass())<SUB>1787</SUB>> ]
+"8735" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1787</SUB>> ]
+"8739" [label = <(SET_STATIC_PRIMITIVE_FIELD(Byte, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1787</SUB>> ]
+"8746" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Byte, v),SET_STATIC_PRIMITIVE_FIELD(Byte, v))<SUB>1787</SUB>> ]
+"8775" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1787</SUB>> ]
+"8740" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1787</SUB>> ]
+"8777" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1787</SUB>> ]
+"8741" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1787</SUB>> ]
+"8743" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1787</SUB>> ]
+"8725" [label = <(METHOD,SetStaticByteField)<SUB>1786</SUB>> ]
+"8779" [label = <(METHOD_RETURN,void)<SUB>1786</SUB>> ]
   "8731" -> "8735" 
   "8731" -> "8748" 
   "8748" -> "8756" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/164-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/164-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/164-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/164-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticCharField" {  
-"8787" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1792</SUB>> ]
-"8804" [label = <(soa,ScopedObjectAccess)<SUB>1792</SUB>> ]
-"8807" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1792</SUB>> ]
-"8814" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v)))<SUB>1792</SUB>> ]
-"8822" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1792</SUB>> ]
-"8809" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),jni::DecodeArtField(fid))<SUB>1792</SUB>> ]
-"8817" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v))<SUB>1792</SUB>> ]
-"8823" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1792</SUB>> ]
-"8828" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1792</SUB>> ]
-"8810" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1792</SUB>> ]
-"8818" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1792</SUB>> ]
-"8824" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1792</SUB>> ]
-"8829" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1792</SUB>> ]
-"8790" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1792</SUB>> ]
-"8812" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1792</SUB>> ]
-"8820" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;)<SUB>1792</SUB>> ]
-"8826" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1792</SUB>> ]
-"8830" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),f-&gt;GetDeclaringClass())<SUB>1792</SUB>> ]
-"8791" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1792</SUB>> ]
-"8795" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1792</SUB>> ]
-"8802" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Char, v),SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1792</SUB>> ]
-"8831" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1792</SUB>> ]
-"8796" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1792</SUB>> ]
-"8833" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1792</SUB>> ]
-"8797" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1792</SUB>> ]
-"8799" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1792</SUB>> ]
-"8781" [label = <(METHOD,SetStaticCharField)<SUB>1791</SUB>> ]
-"8835" [label = <(METHOD_RETURN,void)<SUB>1791</SUB>> ]
+"8787" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1791</SUB>> ]
+"8804" [label = <(soa,ScopedObjectAccess)<SUB>1791</SUB>> ]
+"8807" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1791</SUB>> ]
+"8814" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v)))<SUB>1791</SUB>> ]
+"8822" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetChar &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1791</SUB>> ]
+"8809" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),jni::DecodeArtField(fid))<SUB>1791</SUB>> ]
+"8817" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;(v))<SUB>1791</SUB>> ]
+"8823" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetChar &lt; false)<SUB>1791</SUB>> ]
+"8828" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1791</SUB>> ]
+"8810" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1791</SUB>> ]
+"8818" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1791</SUB>> ]
+"8824" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetChar)<SUB>1791</SUB>> ]
+"8829" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1791</SUB>> ]
+"8790" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1791</SUB>> ]
+"8812" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1791</SUB>> ]
+"8820" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Char, v)&gt;)<SUB>1791</SUB>> ]
+"8826" [label = <(FIELD_IDENTIFIER,SetChar,SetChar)<SUB>1791</SUB>> ]
+"8830" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),f-&gt;GetDeclaringClass())<SUB>1791</SUB>> ]
+"8791" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1791</SUB>> ]
+"8795" [label = <(SET_STATIC_PRIMITIVE_FIELD(Char, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1791</SUB>> ]
+"8802" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Char, v),SET_STATIC_PRIMITIVE_FIELD(Char, v))<SUB>1791</SUB>> ]
+"8831" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1791</SUB>> ]
+"8796" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1791</SUB>> ]
+"8833" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1791</SUB>> ]
+"8797" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1791</SUB>> ]
+"8799" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1791</SUB>> ]
+"8781" [label = <(METHOD,SetStaticCharField)<SUB>1790</SUB>> ]
+"8835" [label = <(METHOD_RETURN,void)<SUB>1790</SUB>> ]
   "8787" -> "8791" 
   "8787" -> "8804" 
   "8804" -> "8812" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/165-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/165-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/165-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/165-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticFloatField" {  
-"8843" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1796</SUB>> ]
-"8860" [label = <(soa,ScopedObjectAccess)<SUB>1796</SUB>> ]
-"8863" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1796</SUB>> ]
-"8870" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v)))<SUB>1796</SUB>> ]
-"8878" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1796</SUB>> ]
-"8865" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),jni::DecodeArtField(fid))<SUB>1796</SUB>> ]
-"8873" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v))<SUB>1796</SUB>> ]
-"8879" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1796</SUB>> ]
-"8884" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1796</SUB>> ]
-"8866" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1796</SUB>> ]
-"8874" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1796</SUB>> ]
-"8880" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1796</SUB>> ]
-"8885" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1796</SUB>> ]
-"8846" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1796</SUB>> ]
-"8868" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1796</SUB>> ]
-"8876" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;)<SUB>1796</SUB>> ]
-"8882" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1796</SUB>> ]
-"8886" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),f-&gt;GetDeclaringClass())<SUB>1796</SUB>> ]
-"8847" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1796</SUB>> ]
-"8851" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1796</SUB>> ]
-"8858" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Float, v),SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1796</SUB>> ]
-"8887" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1796</SUB>> ]
-"8852" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1796</SUB>> ]
-"8889" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1796</SUB>> ]
-"8853" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1796</SUB>> ]
-"8855" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1796</SUB>> ]
-"8837" [label = <(METHOD,SetStaticFloatField)<SUB>1795</SUB>> ]
-"8891" [label = <(METHOD_RETURN,void)<SUB>1795</SUB>> ]
+"8843" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1795</SUB>> ]
+"8860" [label = <(soa,ScopedObjectAccess)<SUB>1795</SUB>> ]
+"8863" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1795</SUB>> ]
+"8870" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v)))<SUB>1795</SUB>> ]
+"8878" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetFloat &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1795</SUB>> ]
+"8865" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),jni::DecodeArtField(fid))<SUB>1795</SUB>> ]
+"8873" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;(v))<SUB>1795</SUB>> ]
+"8879" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetFloat &lt; false)<SUB>1795</SUB>> ]
+"8884" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1795</SUB>> ]
+"8866" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1795</SUB>> ]
+"8874" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1795</SUB>> ]
+"8880" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetFloat)<SUB>1795</SUB>> ]
+"8885" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1795</SUB>> ]
+"8846" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1795</SUB>> ]
+"8868" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1795</SUB>> ]
+"8876" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Float, v)&gt;)<SUB>1795</SUB>> ]
+"8882" [label = <(FIELD_IDENTIFIER,SetFloat,SetFloat)<SUB>1795</SUB>> ]
+"8886" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),f-&gt;GetDeclaringClass())<SUB>1795</SUB>> ]
+"8847" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1795</SUB>> ]
+"8851" [label = <(SET_STATIC_PRIMITIVE_FIELD(Float, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1795</SUB>> ]
+"8858" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Float, v),SET_STATIC_PRIMITIVE_FIELD(Float, v))<SUB>1795</SUB>> ]
+"8887" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1795</SUB>> ]
+"8852" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1795</SUB>> ]
+"8889" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1795</SUB>> ]
+"8853" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1795</SUB>> ]
+"8855" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1795</SUB>> ]
+"8837" [label = <(METHOD,SetStaticFloatField)<SUB>1794</SUB>> ]
+"8891" [label = <(METHOD_RETURN,void)<SUB>1794</SUB>> ]
   "8843" -> "8847" 
   "8843" -> "8860" 
   "8860" -> "8868" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/166-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/166-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/166-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/166-cfg.dot	2023-06-07 19:34:54.977387777 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticDoubleField" {  
-"8899" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1800</SUB>> ]
-"8916" [label = <(soa,ScopedObjectAccess)<SUB>1800</SUB>> ]
-"8919" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1800</SUB>> ]
-"8926" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v)))<SUB>1800</SUB>> ]
-"8934" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1800</SUB>> ]
-"8921" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),jni::DecodeArtField(fid))<SUB>1800</SUB>> ]
-"8929" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v))<SUB>1800</SUB>> ]
-"8935" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1800</SUB>> ]
-"8940" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1800</SUB>> ]
-"8922" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1800</SUB>> ]
-"8930" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1800</SUB>> ]
-"8936" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1800</SUB>> ]
-"8941" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1800</SUB>> ]
-"8902" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1800</SUB>> ]
-"8924" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1800</SUB>> ]
-"8932" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;)<SUB>1800</SUB>> ]
-"8938" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1800</SUB>> ]
-"8942" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),f-&gt;GetDeclaringClass())<SUB>1800</SUB>> ]
-"8903" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1800</SUB>> ]
-"8907" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1800</SUB>> ]
-"8914" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Double, v),SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1800</SUB>> ]
-"8943" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1800</SUB>> ]
-"8908" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1800</SUB>> ]
-"8945" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1800</SUB>> ]
-"8909" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1800</SUB>> ]
-"8911" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1800</SUB>> ]
-"8893" [label = <(METHOD,SetStaticDoubleField)<SUB>1799</SUB>> ]
-"8947" [label = <(METHOD_RETURN,void)<SUB>1799</SUB>> ]
+"8899" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1799</SUB>> ]
+"8916" [label = <(soa,ScopedObjectAccess)<SUB>1799</SUB>> ]
+"8919" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1799</SUB>> ]
+"8926" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v)))<SUB>1799</SUB>> ]
+"8934" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetDouble &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1799</SUB>> ]
+"8921" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),jni::DecodeArtField(fid))<SUB>1799</SUB>> ]
+"8929" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;(v))<SUB>1799</SUB>> ]
+"8935" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetDouble &lt; false)<SUB>1799</SUB>> ]
+"8940" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1799</SUB>> ]
+"8922" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1799</SUB>> ]
+"8930" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1799</SUB>> ]
+"8936" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetDouble)<SUB>1799</SUB>> ]
+"8941" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1799</SUB>> ]
+"8902" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1799</SUB>> ]
+"8924" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1799</SUB>> ]
+"8932" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Double, v)&gt;)<SUB>1799</SUB>> ]
+"8938" [label = <(FIELD_IDENTIFIER,SetDouble,SetDouble)<SUB>1799</SUB>> ]
+"8942" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),f-&gt;GetDeclaringClass())<SUB>1799</SUB>> ]
+"8903" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1799</SUB>> ]
+"8907" [label = <(SET_STATIC_PRIMITIVE_FIELD(Double, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1799</SUB>> ]
+"8914" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Double, v),SET_STATIC_PRIMITIVE_FIELD(Double, v))<SUB>1799</SUB>> ]
+"8943" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1799</SUB>> ]
+"8908" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1799</SUB>> ]
+"8945" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1799</SUB>> ]
+"8909" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1799</SUB>> ]
+"8911" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1799</SUB>> ]
+"8893" [label = <(METHOD,SetStaticDoubleField)<SUB>1798</SUB>> ]
+"8947" [label = <(METHOD_RETURN,void)<SUB>1798</SUB>> ]
   "8899" -> "8903" 
   "8899" -> "8916" 
   "8916" -> "8924" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/167-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/167-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/167-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/167-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticIntField" {  
-"8955" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1804</SUB>> ]
-"8972" [label = <(soa,ScopedObjectAccess)<SUB>1804</SUB>> ]
-"8975" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1804</SUB>> ]
-"8982" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v)))<SUB>1804</SUB>> ]
-"8990" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1804</SUB>> ]
-"8977" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),jni::DecodeArtField(fid))<SUB>1804</SUB>> ]
-"8985" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v))<SUB>1804</SUB>> ]
-"8991" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1804</SUB>> ]
-"8996" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1804</SUB>> ]
-"8978" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1804</SUB>> ]
-"8986" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1804</SUB>> ]
-"8992" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1804</SUB>> ]
-"8997" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1804</SUB>> ]
-"8958" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1804</SUB>> ]
-"8980" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1804</SUB>> ]
-"8988" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;)<SUB>1804</SUB>> ]
-"8994" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1804</SUB>> ]
-"8998" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),f-&gt;GetDeclaringClass())<SUB>1804</SUB>> ]
-"8959" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1804</SUB>> ]
-"8963" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1804</SUB>> ]
-"8970" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Int, v),SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1804</SUB>> ]
-"8999" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1804</SUB>> ]
-"8964" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1804</SUB>> ]
-"9001" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1804</SUB>> ]
-"8965" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1804</SUB>> ]
-"8967" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1804</SUB>> ]
-"8949" [label = <(METHOD,SetStaticIntField)<SUB>1803</SUB>> ]
-"9003" [label = <(METHOD_RETURN,void)<SUB>1803</SUB>> ]
+"8955" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1803</SUB>> ]
+"8972" [label = <(soa,ScopedObjectAccess)<SUB>1803</SUB>> ]
+"8975" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1803</SUB>> ]
+"8982" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v)))<SUB>1803</SUB>> ]
+"8990" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetInt &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1803</SUB>> ]
+"8977" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),jni::DecodeArtField(fid))<SUB>1803</SUB>> ]
+"8985" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;(v))<SUB>1803</SUB>> ]
+"8991" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetInt &lt; false)<SUB>1803</SUB>> ]
+"8996" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1803</SUB>> ]
+"8978" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1803</SUB>> ]
+"8986" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1803</SUB>> ]
+"8992" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetInt)<SUB>1803</SUB>> ]
+"8997" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1803</SUB>> ]
+"8958" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1803</SUB>> ]
+"8980" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1803</SUB>> ]
+"8988" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Int, v)&gt;)<SUB>1803</SUB>> ]
+"8994" [label = <(FIELD_IDENTIFIER,SetInt,SetInt)<SUB>1803</SUB>> ]
+"8998" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),f-&gt;GetDeclaringClass())<SUB>1803</SUB>> ]
+"8959" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1803</SUB>> ]
+"8963" [label = <(SET_STATIC_PRIMITIVE_FIELD(Int, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1803</SUB>> ]
+"8970" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Int, v),SET_STATIC_PRIMITIVE_FIELD(Int, v))<SUB>1803</SUB>> ]
+"8999" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1803</SUB>> ]
+"8964" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1803</SUB>> ]
+"9001" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1803</SUB>> ]
+"8965" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1803</SUB>> ]
+"8967" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1803</SUB>> ]
+"8949" [label = <(METHOD,SetStaticIntField)<SUB>1802</SUB>> ]
+"9003" [label = <(METHOD_RETURN,void)<SUB>1802</SUB>> ]
   "8955" -> "8959" 
   "8955" -> "8972" 
   "8972" -> "8980" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/168-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/168-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/168-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/168-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticLongField" {  
-"9011" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1808</SUB>> ]
-"9028" [label = <(soa,ScopedObjectAccess)<SUB>1808</SUB>> ]
-"9031" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1808</SUB>> ]
-"9038" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v)))<SUB>1808</SUB>> ]
-"9046" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1808</SUB>> ]
-"9033" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),jni::DecodeArtField(fid))<SUB>1808</SUB>> ]
-"9041" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v))<SUB>1808</SUB>> ]
-"9047" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1808</SUB>> ]
-"9052" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1808</SUB>> ]
-"9034" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1808</SUB>> ]
-"9042" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1808</SUB>> ]
-"9048" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1808</SUB>> ]
-"9053" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1808</SUB>> ]
-"9014" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1808</SUB>> ]
-"9036" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1808</SUB>> ]
-"9044" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;)<SUB>1808</SUB>> ]
-"9050" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1808</SUB>> ]
-"9054" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),f-&gt;GetDeclaringClass())<SUB>1808</SUB>> ]
-"9015" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1808</SUB>> ]
-"9019" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1808</SUB>> ]
-"9026" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Long, v),SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1808</SUB>> ]
-"9055" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1808</SUB>> ]
-"9020" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1808</SUB>> ]
-"9057" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1808</SUB>> ]
-"9021" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1808</SUB>> ]
-"9023" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1808</SUB>> ]
-"9005" [label = <(METHOD,SetStaticLongField)<SUB>1807</SUB>> ]
-"9059" [label = <(METHOD_RETURN,void)<SUB>1807</SUB>> ]
+"9011" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1807</SUB>> ]
+"9028" [label = <(soa,ScopedObjectAccess)<SUB>1807</SUB>> ]
+"9031" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1807</SUB>> ]
+"9038" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v)))<SUB>1807</SUB>> ]
+"9046" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetLong &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1807</SUB>> ]
+"9033" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),jni::DecodeArtField(fid))<SUB>1807</SUB>> ]
+"9041" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;(v))<SUB>1807</SUB>> ]
+"9047" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetLong &lt; false)<SUB>1807</SUB>> ]
+"9052" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1807</SUB>> ]
+"9034" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1807</SUB>> ]
+"9042" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1807</SUB>> ]
+"9048" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetLong)<SUB>1807</SUB>> ]
+"9053" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1807</SUB>> ]
+"9014" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1807</SUB>> ]
+"9036" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1807</SUB>> ]
+"9044" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Long, v)&gt;)<SUB>1807</SUB>> ]
+"9050" [label = <(FIELD_IDENTIFIER,SetLong,SetLong)<SUB>1807</SUB>> ]
+"9054" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),f-&gt;GetDeclaringClass())<SUB>1807</SUB>> ]
+"9015" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1807</SUB>> ]
+"9019" [label = <(SET_STATIC_PRIMITIVE_FIELD(Long, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1807</SUB>> ]
+"9026" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Long, v),SET_STATIC_PRIMITIVE_FIELD(Long, v))<SUB>1807</SUB>> ]
+"9055" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1807</SUB>> ]
+"9020" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1807</SUB>> ]
+"9057" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1807</SUB>> ]
+"9021" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1807</SUB>> ]
+"9023" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1807</SUB>> ]
+"9005" [label = <(METHOD,SetStaticLongField)<SUB>1806</SUB>> ]
+"9059" [label = <(METHOD_RETURN,void)<SUB>1806</SUB>> ]
   "9011" -> "9015" 
   "9011" -> "9028" 
   "9028" -> "9036" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/169-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/169-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/169-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/169-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,32 +1,32 @@
 digraph "SetStaticShortField" {  
-"9067" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1812</SUB>> ]
-"9084" [label = <(soa,ScopedObjectAccess)<SUB>1812</SUB>> ]
-"9087" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1812</SUB>> ]
-"9094" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v)))<SUB>1812</SUB>> ]
-"9102" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1812</SUB>> ]
-"9089" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),jni::DecodeArtField(fid))<SUB>1812</SUB>> ]
-"9097" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v))<SUB>1812</SUB>> ]
-"9103" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1812</SUB>> ]
-"9108" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1812</SUB>> ]
-"9090" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1812</SUB>> ]
-"9098" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1812</SUB>> ]
-"9104" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1812</SUB>> ]
-"9109" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1812</SUB>> ]
-"9070" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1812</SUB>> ]
-"9092" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1812</SUB>> ]
-"9100" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;)<SUB>1812</SUB>> ]
-"9106" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1812</SUB>> ]
-"9110" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),f-&gt;GetDeclaringClass())<SUB>1812</SUB>> ]
-"9071" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1812</SUB>> ]
-"9075" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1812</SUB>> ]
-"9082" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Short, v),SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1812</SUB>> ]
-"9111" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1812</SUB>> ]
-"9076" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1812</SUB>> ]
-"9113" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1812</SUB>> ]
-"9077" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1812</SUB>> ]
-"9079" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1812</SUB>> ]
-"9061" [label = <(METHOD,SetStaticShortField)<SUB>1811</SUB>> ]
-"9115" [label = <(METHOD_RETURN,void)<SUB>1811</SUB>> ]
+"9067" [label = <(SET_STATIC_PRIMITIVE_FIELD,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1811</SUB>> ]
+"9084" [label = <(soa,ScopedObjectAccess)<SUB>1811</SUB>> ]
+"9087" [label = <(&lt;operator&gt;.assignment,ArtField *)<SUB>1811</SUB>> ]
+"9094" [label = <(NotifySetPrimitiveField,NotifySetPrimitiveField(f, nullptr, JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v)))<SUB>1811</SUB>> ]
+"9102" [label = <(&lt;operator&gt;.greaterThan,f-&gt;SetShort &lt; false &gt; (f-&gt;GetDeclaringClass(), v))<SUB>1811</SUB>> ]
+"9089" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),jni::DecodeArtField(fid))<SUB>1811</SUB>> ]
+"9097" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JValue::FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;(v))<SUB>1811</SUB>> ]
+"9103" [label = <(&lt;operator&gt;.lessThan,f-&gt;SetShort &lt; false)<SUB>1811</SUB>> ]
+"9108" [label = <(&lt;operator&gt;.bracketedPrimary,(f-&gt;GetDeclaringClass(), v))<SUB>1811</SUB>> ]
+"9090" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1811</SUB>> ]
+"9098" [label = <(&lt;operator&gt;.fieldAccess,SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1811</SUB>> ]
+"9104" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;SetShort)<SUB>1811</SUB>> ]
+"9109" [label = <(&lt;operator&gt;.expressionList,f-&gt;GetDeclaringClass(), v)<SUB>1811</SUB>> ]
+"9070" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>1811</SUB>> ]
+"9092" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>1811</SUB>> ]
+"9100" [label = <(FIELD_IDENTIFIER,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;,FromPrimitive&lt;SET_STATIC_PRIMITIVE_FIELD(Short, v)&gt;)<SUB>1811</SUB>> ]
+"9106" [label = <(FIELD_IDENTIFIER,SetShort,SetShort)<SUB>1811</SUB>> ]
+"9110" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),f-&gt;GetDeclaringClass())<SUB>1811</SUB>> ]
+"9071" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>1811</SUB>> ]
+"9075" [label = <(SET_STATIC_PRIMITIVE_FIELD(Short, v),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>1811</SUB>> ]
+"9082" [label = <(RETURN,SET_STATIC_PRIMITIVE_FIELD(Short, v),SET_STATIC_PRIMITIVE_FIELD(Short, v))<SUB>1811</SUB>> ]
+"9111" [label = <(&lt;operator&gt;.indirectFieldAccess,f-&gt;GetDeclaringClass)<SUB>1811</SUB>> ]
+"9076" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1811</SUB>> ]
+"9113" [label = <(FIELD_IDENTIFIER,GetDeclaringClass,GetDeclaringClass)<SUB>1811</SUB>> ]
+"9077" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1811</SUB>> ]
+"9079" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1811</SUB>> ]
+"9061" [label = <(METHOD,SetStaticShortField)<SUB>1810</SUB>> ]
+"9115" [label = <(METHOD_RETURN,void)<SUB>1810</SUB>> ]
   "9067" -> "9071" 
   "9067" -> "9084" 
   "9084" -> "9092" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/17-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/17-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/17-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/17-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,5 +1,5 @@
 digraph "CodeRangeCache" {  
-"405" [label = <(METHOD,CodeRangeCache)<SUB>246</SUB>> ]
-"407" [label = <(METHOD_RETURN,ANY)<SUB>246</SUB>> ]
+"405" [label = <(METHOD,CodeRangeCache)<SUB>245</SUB>> ]
+"407" [label = <(METHOD_RETURN,ANY)<SUB>245</SUB>> ]
   "405" -> "407" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/170-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/170-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/170-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/170-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,29 +1,29 @@
 digraph "CallStaticObjectMethod" {  
-"9123" [label = <(va_start,va_start(ap, mid))<SUB>1817</SUB>> ]
-"9127" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1818</SUB>> ]
-"9130" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1819</SUB>> ]
-"9149" [label = <(soa,soa(env))<SUB>1820</SUB>> ]
-"9152" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1821</SUB>> ]
-"9159" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1822</SUB>> ]
-"9171" [label = <(RETURN,return local_result;,return local_result;)<SUB>1823</SUB>> ]
-"9128" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1818</SUB>> ]
-"9153" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1821</SUB>> ]
-"9161" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1822</SUB>> ]
-"9162" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1822</SUB>> ]
-"9167" [label = <(GetL,result.GetL())<SUB>1822</SUB>> ]
-"9134" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1819</SUB>> ]
-"9163" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1822</SUB>> ]
-"9168" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1822</SUB>> ]
-"9135" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1819</SUB>> ]
-"9139" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1819</SUB>> ]
-"9146" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1819</SUB>> ]
-"9165" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1822</SUB>> ]
-"9170" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1822</SUB>> ]
-"9140" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1819</SUB>> ]
-"9141" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1819</SUB>> ]
-"9143" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1819</SUB>> ]
-"9117" [label = <(METHOD,CallStaticObjectMethod)<SUB>1815</SUB>> ]
-"9173" [label = <(METHOD_RETURN,jobject)<SUB>1815</SUB>> ]
+"9123" [label = <(va_start,va_start(ap, mid))<SUB>1816</SUB>> ]
+"9127" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1817</SUB>> ]
+"9130" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1818</SUB>> ]
+"9149" [label = <(soa,soa(env))<SUB>1819</SUB>> ]
+"9152" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1820</SUB>> ]
+"9159" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1821</SUB>> ]
+"9171" [label = <(RETURN,return local_result;,return local_result;)<SUB>1822</SUB>> ]
+"9128" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1817</SUB>> ]
+"9153" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1820</SUB>> ]
+"9161" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1821</SUB>> ]
+"9162" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1821</SUB>> ]
+"9167" [label = <(GetL,result.GetL())<SUB>1821</SUB>> ]
+"9134" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1818</SUB>> ]
+"9163" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1821</SUB>> ]
+"9168" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1821</SUB>> ]
+"9135" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1818</SUB>> ]
+"9139" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1818</SUB>> ]
+"9146" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1818</SUB>> ]
+"9165" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1821</SUB>> ]
+"9170" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1821</SUB>> ]
+"9140" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1818</SUB>> ]
+"9141" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1818</SUB>> ]
+"9143" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1818</SUB>> ]
+"9117" [label = <(METHOD,CallStaticObjectMethod)<SUB>1814</SUB>> ]
+"9173" [label = <(METHOD_RETURN,jobject)<SUB>1814</SUB>> ]
   "9123" -> "9128" 
   "9127" -> "9130" 
   "9130" -> "9135" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/171-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/171-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/171-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/171-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,25 +1,25 @@
 digraph "CallStaticObjectMethodV" {  
-"9181" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1827</SUB>> ]
-"9200" [label = <(soa,soa(env))<SUB>1828</SUB>> ]
-"9203" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, args)))<SUB>1829</SUB>> ]
-"9209" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1830</SUB>> ]
-"9204" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1829</SUB>> ]
-"9210" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1830</SUB>> ]
-"9211" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1830</SUB>> ]
-"9216" [label = <(GetL,result.GetL())<SUB>1830</SUB>> ]
-"9185" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1827</SUB>> ]
-"9212" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1830</SUB>> ]
-"9217" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1830</SUB>> ]
-"9186" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1827</SUB>> ]
-"9190" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1827</SUB>> ]
-"9197" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1827</SUB>> ]
-"9214" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1830</SUB>> ]
-"9219" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1830</SUB>> ]
-"9191" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1827</SUB>> ]
-"9192" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1827</SUB>> ]
-"9194" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1827</SUB>> ]
-"9175" [label = <(METHOD,CallStaticObjectMethodV)<SUB>1826</SUB>> ]
-"9220" [label = <(METHOD_RETURN,jobject)<SUB>1826</SUB>> ]
+"9181" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1826</SUB>> ]
+"9200" [label = <(soa,soa(env))<SUB>1827</SUB>> ]
+"9203" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, args)))<SUB>1828</SUB>> ]
+"9209" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1829</SUB>> ]
+"9204" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1828</SUB>> ]
+"9210" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1829</SUB>> ]
+"9211" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1829</SUB>> ]
+"9216" [label = <(GetL,result.GetL())<SUB>1829</SUB>> ]
+"9185" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1826</SUB>> ]
+"9212" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1829</SUB>> ]
+"9217" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1829</SUB>> ]
+"9186" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1826</SUB>> ]
+"9190" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1826</SUB>> ]
+"9197" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1826</SUB>> ]
+"9214" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1829</SUB>> ]
+"9219" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1829</SUB>> ]
+"9191" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1826</SUB>> ]
+"9192" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1826</SUB>> ]
+"9194" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1826</SUB>> ]
+"9175" [label = <(METHOD,CallStaticObjectMethodV)<SUB>1825</SUB>> ]
+"9220" [label = <(METHOD_RETURN,jobject)<SUB>1825</SUB>> ]
   "9181" -> "9186" 
   "9181" -> "9200" 
   "9200" -> "9204" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/172-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/172-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/172-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/172-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,25 +1,25 @@
 digraph "CallStaticObjectMethodA" {  
-"9228" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1834</SUB>> ]
-"9247" [label = <(soa,soa(env))<SUB>1835</SUB>> ]
-"9250" [label = <(result,result(InvokeWithJValues(soa, nullptr, mid, args)))<SUB>1836</SUB>> ]
-"9256" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1837</SUB>> ]
-"9251" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1836</SUB>> ]
-"9257" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1837</SUB>> ]
-"9258" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1837</SUB>> ]
-"9263" [label = <(GetL,result.GetL())<SUB>1837</SUB>> ]
-"9232" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1834</SUB>> ]
-"9259" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1837</SUB>> ]
-"9264" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1837</SUB>> ]
-"9233" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1834</SUB>> ]
-"9237" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1834</SUB>> ]
-"9244" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1834</SUB>> ]
-"9261" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1837</SUB>> ]
-"9266" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1837</SUB>> ]
-"9238" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1834</SUB>> ]
-"9239" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1834</SUB>> ]
-"9241" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1834</SUB>> ]
-"9222" [label = <(METHOD,CallStaticObjectMethodA)<SUB>1833</SUB>> ]
-"9267" [label = <(METHOD_RETURN,jobject)<SUB>1833</SUB>> ]
+"9228" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1833</SUB>> ]
+"9247" [label = <(soa,soa(env))<SUB>1834</SUB>> ]
+"9250" [label = <(result,result(InvokeWithJValues(soa, nullptr, mid, args)))<SUB>1835</SUB>> ]
+"9256" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1836</SUB>> ]
+"9251" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1835</SUB>> ]
+"9257" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1836</SUB>> ]
+"9258" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1836</SUB>> ]
+"9263" [label = <(GetL,result.GetL())<SUB>1836</SUB>> ]
+"9232" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1833</SUB>> ]
+"9259" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1836</SUB>> ]
+"9264" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1836</SUB>> ]
+"9233" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1833</SUB>> ]
+"9237" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1833</SUB>> ]
+"9244" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1833</SUB>> ]
+"9261" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1836</SUB>> ]
+"9266" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1836</SUB>> ]
+"9238" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1833</SUB>> ]
+"9239" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1833</SUB>> ]
+"9241" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1833</SUB>> ]
+"9222" [label = <(METHOD,CallStaticObjectMethodA)<SUB>1832</SUB>> ]
+"9267" [label = <(METHOD_RETURN,jobject)<SUB>1832</SUB>> ]
   "9228" -> "9233" 
   "9228" -> "9247" 
   "9247" -> "9251" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/173-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/173-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/173-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/173-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticBooleanMethod" {  
-"9275" [label = <(va_start,va_start(ap, mid))<SUB>1842</SUB>> ]
-"9279" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1843</SUB>> ]
-"9282" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1844</SUB>> ]
-"9301" [label = <(soa,soa(env))<SUB>1845</SUB>> ]
-"9304" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1846</SUB>> ]
-"9310" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1847</SUB>> ]
-"9280" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1843</SUB>> ]
-"9305" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1846</SUB>> ]
-"9311" [label = <(GetZ,result.GetZ())<SUB>1847</SUB>> ]
-"9312" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1847</SUB>> ]
-"9286" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1844</SUB>> ]
-"9314" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1847</SUB>> ]
-"9287" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1844</SUB>> ]
-"9291" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1844</SUB>> ]
-"9298" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1844</SUB>> ]
-"9292" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1844</SUB>> ]
-"9293" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1844</SUB>> ]
-"9295" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1844</SUB>> ]
-"9269" [label = <(METHOD,CallStaticBooleanMethod)<SUB>1840</SUB>> ]
-"9315" [label = <(METHOD_RETURN,jboolean)<SUB>1840</SUB>> ]
+"9275" [label = <(va_start,va_start(ap, mid))<SUB>1841</SUB>> ]
+"9279" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1842</SUB>> ]
+"9282" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1843</SUB>> ]
+"9301" [label = <(soa,soa(env))<SUB>1844</SUB>> ]
+"9304" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1845</SUB>> ]
+"9310" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1846</SUB>> ]
+"9280" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1842</SUB>> ]
+"9305" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1845</SUB>> ]
+"9311" [label = <(GetZ,result.GetZ())<SUB>1846</SUB>> ]
+"9312" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1846</SUB>> ]
+"9286" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1843</SUB>> ]
+"9314" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1846</SUB>> ]
+"9287" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1843</SUB>> ]
+"9291" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1843</SUB>> ]
+"9298" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1843</SUB>> ]
+"9292" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1843</SUB>> ]
+"9293" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1843</SUB>> ]
+"9295" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1843</SUB>> ]
+"9269" [label = <(METHOD,CallStaticBooleanMethod)<SUB>1839</SUB>> ]
+"9315" [label = <(METHOD_RETURN,jboolean)<SUB>1839</SUB>> ]
   "9275" -> "9280" 
   "9279" -> "9282" 
   "9282" -> "9287" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/174-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/174-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/174-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/174-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticBooleanMethodV" {  
-"9323" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1851</SUB>> ]
-"9342" [label = <(soa,soa(env))<SUB>1852</SUB>> ]
-"9344" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();)<SUB>1853</SUB>> ]
-"9345" [label = <(GetZ,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ())<SUB>1853</SUB>> ]
-"9346" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ)<SUB>1853</SUB>> ]
-"9327" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1851</SUB>> ]
-"9347" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1853</SUB>> ]
-"9352" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1853</SUB>> ]
-"9328" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1851</SUB>> ]
-"9332" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1851</SUB>> ]
-"9339" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1851</SUB>> ]
-"9333" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1851</SUB>> ]
-"9334" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1851</SUB>> ]
-"9336" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1851</SUB>> ]
-"9317" [label = <(METHOD,CallStaticBooleanMethodV)<SUB>1850</SUB>> ]
-"9353" [label = <(METHOD_RETURN,jboolean)<SUB>1850</SUB>> ]
+"9323" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1850</SUB>> ]
+"9342" [label = <(soa,soa(env))<SUB>1851</SUB>> ]
+"9344" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetZ();)<SUB>1852</SUB>> ]
+"9345" [label = <(GetZ,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ())<SUB>1852</SUB>> ]
+"9346" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetZ)<SUB>1852</SUB>> ]
+"9327" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1850</SUB>> ]
+"9347" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1852</SUB>> ]
+"9352" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1852</SUB>> ]
+"9328" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1850</SUB>> ]
+"9332" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1850</SUB>> ]
+"9339" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1850</SUB>> ]
+"9333" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1850</SUB>> ]
+"9334" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1850</SUB>> ]
+"9336" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1850</SUB>> ]
+"9317" [label = <(METHOD,CallStaticBooleanMethodV)<SUB>1849</SUB>> ]
+"9353" [label = <(METHOD_RETURN,jboolean)<SUB>1849</SUB>> ]
   "9323" -> "9328" 
   "9323" -> "9342" 
   "9342" -> "9347" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/175-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/175-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/175-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/175-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticBooleanMethodA" {  
-"9361" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1857</SUB>> ]
-"9380" [label = <(soa,soa(env))<SUB>1858</SUB>> ]
-"9382" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();)<SUB>1859</SUB>> ]
-"9383" [label = <(GetZ,InvokeWithJValues(soa, nullptr, mid, args).GetZ())<SUB>1859</SUB>> ]
-"9384" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetZ)<SUB>1859</SUB>> ]
-"9365" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1857</SUB>> ]
-"9385" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1859</SUB>> ]
-"9390" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1859</SUB>> ]
-"9366" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1857</SUB>> ]
-"9370" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1857</SUB>> ]
-"9377" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1857</SUB>> ]
-"9371" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1857</SUB>> ]
-"9372" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1857</SUB>> ]
-"9374" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1857</SUB>> ]
-"9355" [label = <(METHOD,CallStaticBooleanMethodA)<SUB>1856</SUB>> ]
-"9391" [label = <(METHOD_RETURN,jboolean)<SUB>1856</SUB>> ]
+"9361" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1856</SUB>> ]
+"9380" [label = <(soa,soa(env))<SUB>1857</SUB>> ]
+"9382" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();,return InvokeWithJValues(soa, nullptr, mid, args).GetZ();)<SUB>1858</SUB>> ]
+"9383" [label = <(GetZ,InvokeWithJValues(soa, nullptr, mid, args).GetZ())<SUB>1858</SUB>> ]
+"9384" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetZ)<SUB>1858</SUB>> ]
+"9365" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1856</SUB>> ]
+"9385" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1858</SUB>> ]
+"9390" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1858</SUB>> ]
+"9366" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1856</SUB>> ]
+"9370" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1856</SUB>> ]
+"9377" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1856</SUB>> ]
+"9371" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1856</SUB>> ]
+"9372" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1856</SUB>> ]
+"9374" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1856</SUB>> ]
+"9355" [label = <(METHOD,CallStaticBooleanMethodA)<SUB>1855</SUB>> ]
+"9391" [label = <(METHOD_RETURN,jboolean)<SUB>1855</SUB>> ]
   "9361" -> "9366" 
   "9361" -> "9380" 
   "9380" -> "9385" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/176-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/176-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/176-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/176-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticByteMethod" {  
-"9399" [label = <(va_start,va_start(ap, mid))<SUB>1864</SUB>> ]
-"9403" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1865</SUB>> ]
-"9406" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1866</SUB>> ]
-"9425" [label = <(soa,soa(env))<SUB>1867</SUB>> ]
-"9428" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1868</SUB>> ]
-"9434" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1869</SUB>> ]
-"9404" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1865</SUB>> ]
-"9429" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1868</SUB>> ]
-"9435" [label = <(GetB,result.GetB())<SUB>1869</SUB>> ]
-"9436" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1869</SUB>> ]
-"9410" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1866</SUB>> ]
-"9438" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1869</SUB>> ]
-"9411" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1866</SUB>> ]
-"9415" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1866</SUB>> ]
-"9422" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1866</SUB>> ]
-"9416" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1866</SUB>> ]
-"9417" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1866</SUB>> ]
-"9419" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1866</SUB>> ]
-"9393" [label = <(METHOD,CallStaticByteMethod)<SUB>1862</SUB>> ]
-"9439" [label = <(METHOD_RETURN,jbyte)<SUB>1862</SUB>> ]
+"9399" [label = <(va_start,va_start(ap, mid))<SUB>1863</SUB>> ]
+"9403" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1864</SUB>> ]
+"9406" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1865</SUB>> ]
+"9425" [label = <(soa,soa(env))<SUB>1866</SUB>> ]
+"9428" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1867</SUB>> ]
+"9434" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1868</SUB>> ]
+"9404" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1864</SUB>> ]
+"9429" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1867</SUB>> ]
+"9435" [label = <(GetB,result.GetB())<SUB>1868</SUB>> ]
+"9436" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1868</SUB>> ]
+"9410" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1865</SUB>> ]
+"9438" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1868</SUB>> ]
+"9411" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1865</SUB>> ]
+"9415" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1865</SUB>> ]
+"9422" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1865</SUB>> ]
+"9416" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1865</SUB>> ]
+"9417" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1865</SUB>> ]
+"9419" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1865</SUB>> ]
+"9393" [label = <(METHOD,CallStaticByteMethod)<SUB>1861</SUB>> ]
+"9439" [label = <(METHOD_RETURN,jbyte)<SUB>1861</SUB>> ]
   "9399" -> "9404" 
   "9403" -> "9406" 
   "9406" -> "9411" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/177-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/177-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/177-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/177-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticByteMethodV" {  
-"9447" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1873</SUB>> ]
-"9466" [label = <(soa,soa(env))<SUB>1874</SUB>> ]
-"9468" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();)<SUB>1875</SUB>> ]
-"9469" [label = <(GetB,InvokeWithVarArgs(soa, nullptr, mid, args).GetB())<SUB>1875</SUB>> ]
-"9470" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetB)<SUB>1875</SUB>> ]
-"9451" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1873</SUB>> ]
-"9471" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1875</SUB>> ]
-"9476" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1875</SUB>> ]
-"9452" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1873</SUB>> ]
-"9456" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1873</SUB>> ]
-"9463" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1873</SUB>> ]
-"9457" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1873</SUB>> ]
-"9458" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1873</SUB>> ]
-"9460" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1873</SUB>> ]
-"9441" [label = <(METHOD,CallStaticByteMethodV)<SUB>1872</SUB>> ]
-"9477" [label = <(METHOD_RETURN,jbyte)<SUB>1872</SUB>> ]
+"9447" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1872</SUB>> ]
+"9466" [label = <(soa,soa(env))<SUB>1873</SUB>> ]
+"9468" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetB();)<SUB>1874</SUB>> ]
+"9469" [label = <(GetB,InvokeWithVarArgs(soa, nullptr, mid, args).GetB())<SUB>1874</SUB>> ]
+"9470" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetB)<SUB>1874</SUB>> ]
+"9451" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1872</SUB>> ]
+"9471" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1874</SUB>> ]
+"9476" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1874</SUB>> ]
+"9452" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1872</SUB>> ]
+"9456" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1872</SUB>> ]
+"9463" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1872</SUB>> ]
+"9457" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1872</SUB>> ]
+"9458" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1872</SUB>> ]
+"9460" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1872</SUB>> ]
+"9441" [label = <(METHOD,CallStaticByteMethodV)<SUB>1871</SUB>> ]
+"9477" [label = <(METHOD_RETURN,jbyte)<SUB>1871</SUB>> ]
   "9447" -> "9452" 
   "9447" -> "9466" 
   "9466" -> "9471" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/178-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/178-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/178-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/178-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticByteMethodA" {  
-"9485" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1879</SUB>> ]
-"9504" [label = <(soa,soa(env))<SUB>1880</SUB>> ]
-"9506" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetB();,return InvokeWithJValues(soa, nullptr, mid, args).GetB();)<SUB>1881</SUB>> ]
-"9507" [label = <(GetB,InvokeWithJValues(soa, nullptr, mid, args).GetB())<SUB>1881</SUB>> ]
-"9508" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetB)<SUB>1881</SUB>> ]
-"9489" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1879</SUB>> ]
-"9509" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1881</SUB>> ]
-"9514" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1881</SUB>> ]
-"9490" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1879</SUB>> ]
-"9494" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1879</SUB>> ]
-"9501" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1879</SUB>> ]
-"9495" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1879</SUB>> ]
-"9496" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1879</SUB>> ]
-"9498" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1879</SUB>> ]
-"9479" [label = <(METHOD,CallStaticByteMethodA)<SUB>1878</SUB>> ]
-"9515" [label = <(METHOD_RETURN,jbyte)<SUB>1878</SUB>> ]
+"9485" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1878</SUB>> ]
+"9504" [label = <(soa,soa(env))<SUB>1879</SUB>> ]
+"9506" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetB();,return InvokeWithJValues(soa, nullptr, mid, args).GetB();)<SUB>1880</SUB>> ]
+"9507" [label = <(GetB,InvokeWithJValues(soa, nullptr, mid, args).GetB())<SUB>1880</SUB>> ]
+"9508" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetB)<SUB>1880</SUB>> ]
+"9489" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1878</SUB>> ]
+"9509" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1880</SUB>> ]
+"9514" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1880</SUB>> ]
+"9490" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1878</SUB>> ]
+"9494" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1878</SUB>> ]
+"9501" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1878</SUB>> ]
+"9495" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1878</SUB>> ]
+"9496" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1878</SUB>> ]
+"9498" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1878</SUB>> ]
+"9479" [label = <(METHOD,CallStaticByteMethodA)<SUB>1877</SUB>> ]
+"9515" [label = <(METHOD_RETURN,jbyte)<SUB>1877</SUB>> ]
   "9485" -> "9490" 
   "9485" -> "9504" 
   "9504" -> "9509" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/179-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/179-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/179-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/179-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticCharMethod" {  
-"9523" [label = <(va_start,va_start(ap, mid))<SUB>1886</SUB>> ]
-"9527" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1887</SUB>> ]
-"9530" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1888</SUB>> ]
-"9549" [label = <(soa,soa(env))<SUB>1889</SUB>> ]
-"9552" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1890</SUB>> ]
-"9558" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1891</SUB>> ]
-"9528" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1887</SUB>> ]
-"9553" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1890</SUB>> ]
-"9559" [label = <(GetC,result.GetC())<SUB>1891</SUB>> ]
-"9560" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1891</SUB>> ]
-"9534" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1888</SUB>> ]
-"9562" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1891</SUB>> ]
-"9535" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1888</SUB>> ]
-"9539" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1888</SUB>> ]
-"9546" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1888</SUB>> ]
-"9540" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1888</SUB>> ]
-"9541" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1888</SUB>> ]
-"9543" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1888</SUB>> ]
-"9517" [label = <(METHOD,CallStaticCharMethod)<SUB>1884</SUB>> ]
-"9563" [label = <(METHOD_RETURN,jchar)<SUB>1884</SUB>> ]
+"9523" [label = <(va_start,va_start(ap, mid))<SUB>1885</SUB>> ]
+"9527" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1886</SUB>> ]
+"9530" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1887</SUB>> ]
+"9549" [label = <(soa,soa(env))<SUB>1888</SUB>> ]
+"9552" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1889</SUB>> ]
+"9558" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1890</SUB>> ]
+"9528" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1886</SUB>> ]
+"9553" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1889</SUB>> ]
+"9559" [label = <(GetC,result.GetC())<SUB>1890</SUB>> ]
+"9560" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1890</SUB>> ]
+"9534" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1887</SUB>> ]
+"9562" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1890</SUB>> ]
+"9535" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1887</SUB>> ]
+"9539" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1887</SUB>> ]
+"9546" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1887</SUB>> ]
+"9540" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1887</SUB>> ]
+"9541" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1887</SUB>> ]
+"9543" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1887</SUB>> ]
+"9517" [label = <(METHOD,CallStaticCharMethod)<SUB>1883</SUB>> ]
+"9563" [label = <(METHOD_RETURN,jchar)<SUB>1883</SUB>> ]
   "9523" -> "9528" 
   "9527" -> "9530" 
   "9530" -> "9535" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/18-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/18-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/18-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/18-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,18 +1,18 @@
 digraph "Find" {  
-"414" [label = <(&lt;operator&gt;.assignment,* range = memory_type_table_.Lookup(address))<SUB>249</SUB>> ]
-"428" [label = <(&lt;operator&gt;.assignment,*kind = range-&gt;Type())<SUB>253</SUB>> ]
-"435" [label = <(RETURN,return true;,return true;)<SUB>254</SUB>> ]
-"416" [label = <(Lookup,memory_type_table_.Lookup(address))<SUB>249</SUB>> ]
-"422" [label = <(&lt;operator&gt;.equals,range == nullptr)<SUB>250</SUB>> ]
-"429" [label = <(&lt;operator&gt;.indirection,*kind)<SUB>253</SUB>> ]
-"431" [label = <(Type,range-&gt;Type())<SUB>253</SUB>> ]
-"417" [label = <(&lt;operator&gt;.fieldAccess,memory_type_table_.Lookup)<SUB>249</SUB>> ]
-"426" [label = <(RETURN,return false;,return false;)<SUB>251</SUB>> ]
-"432" [label = <(&lt;operator&gt;.indirectFieldAccess,range-&gt;Type)<SUB>253</SUB>> ]
-"419" [label = <(FIELD_IDENTIFIER,Lookup,Lookup)<SUB>249</SUB>> ]
-"434" [label = <(FIELD_IDENTIFIER,Type,Type)<SUB>253</SUB>> ]
-"409" [label = <(METHOD,Find)<SUB>248</SUB>> ]
-"437" [label = <(METHOD_RETURN,bool)<SUB>248</SUB>> ]
+"414" [label = <(&lt;operator&gt;.assignment,* range = memory_type_table_.Lookup(address))<SUB>248</SUB>> ]
+"428" [label = <(&lt;operator&gt;.assignment,*kind = range-&gt;Type())<SUB>252</SUB>> ]
+"435" [label = <(RETURN,return true;,return true;)<SUB>253</SUB>> ]
+"416" [label = <(Lookup,memory_type_table_.Lookup(address))<SUB>248</SUB>> ]
+"422" [label = <(&lt;operator&gt;.equals,range == nullptr)<SUB>249</SUB>> ]
+"429" [label = <(&lt;operator&gt;.indirection,*kind)<SUB>252</SUB>> ]
+"431" [label = <(Type,range-&gt;Type())<SUB>252</SUB>> ]
+"417" [label = <(&lt;operator&gt;.fieldAccess,memory_type_table_.Lookup)<SUB>248</SUB>> ]
+"426" [label = <(RETURN,return false;,return false;)<SUB>250</SUB>> ]
+"432" [label = <(&lt;operator&gt;.indirectFieldAccess,range-&gt;Type)<SUB>252</SUB>> ]
+"419" [label = <(FIELD_IDENTIFIER,Lookup,Lookup)<SUB>248</SUB>> ]
+"434" [label = <(FIELD_IDENTIFIER,Type,Type)<SUB>252</SUB>> ]
+"409" [label = <(METHOD,Find)<SUB>247</SUB>> ]
+"437" [label = <(METHOD_RETURN,bool)<SUB>247</SUB>> ]
   "414" -> "422" 
   "428" -> "435" 
   "435" -> "437" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/180-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/180-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/180-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/180-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticCharMethodV" {  
-"9571" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1895</SUB>> ]
-"9590" [label = <(soa,soa(env))<SUB>1896</SUB>> ]
-"9592" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();)<SUB>1897</SUB>> ]
-"9593" [label = <(GetC,InvokeWithVarArgs(soa, nullptr, mid, args).GetC())<SUB>1897</SUB>> ]
-"9594" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetC)<SUB>1897</SUB>> ]
-"9575" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1895</SUB>> ]
-"9595" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1897</SUB>> ]
-"9600" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1897</SUB>> ]
-"9576" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1895</SUB>> ]
-"9580" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1895</SUB>> ]
-"9587" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1895</SUB>> ]
-"9581" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1895</SUB>> ]
-"9582" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1895</SUB>> ]
-"9584" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1895</SUB>> ]
-"9565" [label = <(METHOD,CallStaticCharMethodV)<SUB>1894</SUB>> ]
-"9601" [label = <(METHOD_RETURN,jchar)<SUB>1894</SUB>> ]
+"9571" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1894</SUB>> ]
+"9590" [label = <(soa,soa(env))<SUB>1895</SUB>> ]
+"9592" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetC();)<SUB>1896</SUB>> ]
+"9593" [label = <(GetC,InvokeWithVarArgs(soa, nullptr, mid, args).GetC())<SUB>1896</SUB>> ]
+"9594" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetC)<SUB>1896</SUB>> ]
+"9575" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1894</SUB>> ]
+"9595" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1896</SUB>> ]
+"9600" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1896</SUB>> ]
+"9576" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1894</SUB>> ]
+"9580" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1894</SUB>> ]
+"9587" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1894</SUB>> ]
+"9581" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1894</SUB>> ]
+"9582" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1894</SUB>> ]
+"9584" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1894</SUB>> ]
+"9565" [label = <(METHOD,CallStaticCharMethodV)<SUB>1893</SUB>> ]
+"9601" [label = <(METHOD_RETURN,jchar)<SUB>1893</SUB>> ]
   "9571" -> "9576" 
   "9571" -> "9590" 
   "9590" -> "9595" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/181-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/181-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/181-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/181-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticCharMethodA" {  
-"9609" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1901</SUB>> ]
-"9628" [label = <(soa,soa(env))<SUB>1902</SUB>> ]
-"9630" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetC();,return InvokeWithJValues(soa, nullptr, mid, args).GetC();)<SUB>1903</SUB>> ]
-"9631" [label = <(GetC,InvokeWithJValues(soa, nullptr, mid, args).GetC())<SUB>1903</SUB>> ]
-"9632" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetC)<SUB>1903</SUB>> ]
-"9613" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1901</SUB>> ]
-"9633" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1903</SUB>> ]
-"9638" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1903</SUB>> ]
-"9614" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1901</SUB>> ]
-"9618" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1901</SUB>> ]
-"9625" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1901</SUB>> ]
-"9619" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1901</SUB>> ]
-"9620" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1901</SUB>> ]
-"9622" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1901</SUB>> ]
-"9603" [label = <(METHOD,CallStaticCharMethodA)<SUB>1900</SUB>> ]
-"9639" [label = <(METHOD_RETURN,jchar)<SUB>1900</SUB>> ]
+"9609" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1900</SUB>> ]
+"9628" [label = <(soa,soa(env))<SUB>1901</SUB>> ]
+"9630" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetC();,return InvokeWithJValues(soa, nullptr, mid, args).GetC();)<SUB>1902</SUB>> ]
+"9631" [label = <(GetC,InvokeWithJValues(soa, nullptr, mid, args).GetC())<SUB>1902</SUB>> ]
+"9632" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetC)<SUB>1902</SUB>> ]
+"9613" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1900</SUB>> ]
+"9633" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1902</SUB>> ]
+"9638" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1902</SUB>> ]
+"9614" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1900</SUB>> ]
+"9618" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1900</SUB>> ]
+"9625" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1900</SUB>> ]
+"9619" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1900</SUB>> ]
+"9620" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1900</SUB>> ]
+"9622" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1900</SUB>> ]
+"9603" [label = <(METHOD,CallStaticCharMethodA)<SUB>1899</SUB>> ]
+"9639" [label = <(METHOD_RETURN,jchar)<SUB>1899</SUB>> ]
   "9609" -> "9614" 
   "9609" -> "9628" 
   "9628" -> "9633" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/182-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/182-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/182-cfg.dot	2023-06-07 19:34:48.387388391 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/182-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticShortMethod" {  
-"9647" [label = <(va_start,va_start(ap, mid))<SUB>1908</SUB>> ]
-"9651" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1909</SUB>> ]
-"9654" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1910</SUB>> ]
-"9673" [label = <(soa,soa(env))<SUB>1911</SUB>> ]
-"9676" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1912</SUB>> ]
-"9682" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1913</SUB>> ]
-"9652" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1909</SUB>> ]
-"9677" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1912</SUB>> ]
-"9683" [label = <(GetS,result.GetS())<SUB>1913</SUB>> ]
-"9684" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1913</SUB>> ]
-"9658" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1910</SUB>> ]
-"9686" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1913</SUB>> ]
-"9659" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1910</SUB>> ]
-"9663" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1910</SUB>> ]
-"9670" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1910</SUB>> ]
-"9664" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1910</SUB>> ]
-"9665" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1910</SUB>> ]
-"9667" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1910</SUB>> ]
-"9641" [label = <(METHOD,CallStaticShortMethod)<SUB>1906</SUB>> ]
-"9687" [label = <(METHOD_RETURN,jshort)<SUB>1906</SUB>> ]
+"9647" [label = <(va_start,va_start(ap, mid))<SUB>1907</SUB>> ]
+"9651" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1908</SUB>> ]
+"9654" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1909</SUB>> ]
+"9673" [label = <(soa,soa(env))<SUB>1910</SUB>> ]
+"9676" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1911</SUB>> ]
+"9682" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1912</SUB>> ]
+"9652" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1908</SUB>> ]
+"9677" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1911</SUB>> ]
+"9683" [label = <(GetS,result.GetS())<SUB>1912</SUB>> ]
+"9684" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1912</SUB>> ]
+"9658" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1909</SUB>> ]
+"9686" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1912</SUB>> ]
+"9659" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1909</SUB>> ]
+"9663" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1909</SUB>> ]
+"9670" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1909</SUB>> ]
+"9664" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1909</SUB>> ]
+"9665" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1909</SUB>> ]
+"9667" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1909</SUB>> ]
+"9641" [label = <(METHOD,CallStaticShortMethod)<SUB>1905</SUB>> ]
+"9687" [label = <(METHOD_RETURN,jshort)<SUB>1905</SUB>> ]
   "9647" -> "9652" 
   "9651" -> "9654" 
   "9654" -> "9659" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/183-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/183-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/183-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/183-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticShortMethodV" {  
-"9695" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1917</SUB>> ]
-"9714" [label = <(soa,soa(env))<SUB>1918</SUB>> ]
-"9716" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();)<SUB>1919</SUB>> ]
-"9717" [label = <(GetS,InvokeWithVarArgs(soa, nullptr, mid, args).GetS())<SUB>1919</SUB>> ]
-"9718" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetS)<SUB>1919</SUB>> ]
-"9699" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1917</SUB>> ]
-"9719" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1919</SUB>> ]
-"9724" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1919</SUB>> ]
-"9700" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1917</SUB>> ]
-"9704" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1917</SUB>> ]
-"9711" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1917</SUB>> ]
-"9705" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1917</SUB>> ]
-"9706" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1917</SUB>> ]
-"9708" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1917</SUB>> ]
-"9689" [label = <(METHOD,CallStaticShortMethodV)<SUB>1916</SUB>> ]
-"9725" [label = <(METHOD_RETURN,jshort)<SUB>1916</SUB>> ]
+"9695" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1916</SUB>> ]
+"9714" [label = <(soa,soa(env))<SUB>1917</SUB>> ]
+"9716" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetS();)<SUB>1918</SUB>> ]
+"9717" [label = <(GetS,InvokeWithVarArgs(soa, nullptr, mid, args).GetS())<SUB>1918</SUB>> ]
+"9718" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetS)<SUB>1918</SUB>> ]
+"9699" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1916</SUB>> ]
+"9719" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1918</SUB>> ]
+"9724" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1918</SUB>> ]
+"9700" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1916</SUB>> ]
+"9704" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1916</SUB>> ]
+"9711" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1916</SUB>> ]
+"9705" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1916</SUB>> ]
+"9706" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1916</SUB>> ]
+"9708" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1916</SUB>> ]
+"9689" [label = <(METHOD,CallStaticShortMethodV)<SUB>1915</SUB>> ]
+"9725" [label = <(METHOD_RETURN,jshort)<SUB>1915</SUB>> ]
   "9695" -> "9700" 
   "9695" -> "9714" 
   "9714" -> "9719" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/184-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/184-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/184-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/184-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticShortMethodA" {  
-"9733" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1923</SUB>> ]
-"9752" [label = <(soa,soa(env))<SUB>1924</SUB>> ]
-"9754" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetS();,return InvokeWithJValues(soa, nullptr, mid, args).GetS();)<SUB>1925</SUB>> ]
-"9755" [label = <(GetS,InvokeWithJValues(soa, nullptr, mid, args).GetS())<SUB>1925</SUB>> ]
-"9756" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetS)<SUB>1925</SUB>> ]
-"9737" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1923</SUB>> ]
-"9757" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1925</SUB>> ]
-"9762" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1925</SUB>> ]
-"9738" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1923</SUB>> ]
-"9742" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1923</SUB>> ]
-"9749" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1923</SUB>> ]
-"9743" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1923</SUB>> ]
-"9744" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1923</SUB>> ]
-"9746" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1923</SUB>> ]
-"9727" [label = <(METHOD,CallStaticShortMethodA)<SUB>1922</SUB>> ]
-"9763" [label = <(METHOD_RETURN,jshort)<SUB>1922</SUB>> ]
+"9733" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1922</SUB>> ]
+"9752" [label = <(soa,soa(env))<SUB>1923</SUB>> ]
+"9754" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetS();,return InvokeWithJValues(soa, nullptr, mid, args).GetS();)<SUB>1924</SUB>> ]
+"9755" [label = <(GetS,InvokeWithJValues(soa, nullptr, mid, args).GetS())<SUB>1924</SUB>> ]
+"9756" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetS)<SUB>1924</SUB>> ]
+"9737" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1922</SUB>> ]
+"9757" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1924</SUB>> ]
+"9762" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1924</SUB>> ]
+"9738" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1922</SUB>> ]
+"9742" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1922</SUB>> ]
+"9749" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1922</SUB>> ]
+"9743" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1922</SUB>> ]
+"9744" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1922</SUB>> ]
+"9746" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1922</SUB>> ]
+"9727" [label = <(METHOD,CallStaticShortMethodA)<SUB>1921</SUB>> ]
+"9763" [label = <(METHOD_RETURN,jshort)<SUB>1921</SUB>> ]
   "9733" -> "9738" 
   "9733" -> "9752" 
   "9752" -> "9757" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/185-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/185-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/185-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/185-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticIntMethod" {  
-"9771" [label = <(va_start,va_start(ap, mid))<SUB>1930</SUB>> ]
-"9775" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1931</SUB>> ]
-"9778" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1932</SUB>> ]
-"9797" [label = <(soa,soa(env))<SUB>1933</SUB>> ]
-"9800" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1934</SUB>> ]
-"9806" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1935</SUB>> ]
-"9776" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1931</SUB>> ]
-"9801" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1934</SUB>> ]
-"9807" [label = <(GetI,result.GetI())<SUB>1935</SUB>> ]
-"9808" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1935</SUB>> ]
-"9782" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1932</SUB>> ]
-"9810" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1935</SUB>> ]
-"9783" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1932</SUB>> ]
-"9787" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1932</SUB>> ]
-"9794" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1932</SUB>> ]
-"9788" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1932</SUB>> ]
-"9789" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1932</SUB>> ]
-"9791" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1932</SUB>> ]
-"9765" [label = <(METHOD,CallStaticIntMethod)<SUB>1928</SUB>> ]
-"9811" [label = <(METHOD_RETURN,jint)<SUB>1928</SUB>> ]
+"9771" [label = <(va_start,va_start(ap, mid))<SUB>1929</SUB>> ]
+"9775" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1930</SUB>> ]
+"9778" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1931</SUB>> ]
+"9797" [label = <(soa,soa(env))<SUB>1932</SUB>> ]
+"9800" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1933</SUB>> ]
+"9806" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1934</SUB>> ]
+"9776" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1930</SUB>> ]
+"9801" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1933</SUB>> ]
+"9807" [label = <(GetI,result.GetI())<SUB>1934</SUB>> ]
+"9808" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1934</SUB>> ]
+"9782" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1931</SUB>> ]
+"9810" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1934</SUB>> ]
+"9783" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1931</SUB>> ]
+"9787" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1931</SUB>> ]
+"9794" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1931</SUB>> ]
+"9788" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1931</SUB>> ]
+"9789" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1931</SUB>> ]
+"9791" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1931</SUB>> ]
+"9765" [label = <(METHOD,CallStaticIntMethod)<SUB>1927</SUB>> ]
+"9811" [label = <(METHOD_RETURN,jint)<SUB>1927</SUB>> ]
   "9771" -> "9776" 
   "9775" -> "9778" 
   "9778" -> "9783" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/186-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/186-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/186-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/186-cfg.dot	2023-06-07 19:34:54.987387778 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticIntMethodV" {  
-"9819" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1939</SUB>> ]
-"9838" [label = <(soa,soa(env))<SUB>1940</SUB>> ]
-"9840" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();)<SUB>1941</SUB>> ]
-"9841" [label = <(GetI,InvokeWithVarArgs(soa, nullptr, mid, args).GetI())<SUB>1941</SUB>> ]
-"9842" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetI)<SUB>1941</SUB>> ]
-"9823" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1939</SUB>> ]
-"9843" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1941</SUB>> ]
-"9848" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1941</SUB>> ]
-"9824" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1939</SUB>> ]
-"9828" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1939</SUB>> ]
-"9835" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1939</SUB>> ]
-"9829" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1939</SUB>> ]
-"9830" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1939</SUB>> ]
-"9832" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1939</SUB>> ]
-"9813" [label = <(METHOD,CallStaticIntMethodV)<SUB>1938</SUB>> ]
-"9849" [label = <(METHOD_RETURN,jint)<SUB>1938</SUB>> ]
+"9819" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1938</SUB>> ]
+"9838" [label = <(soa,soa(env))<SUB>1939</SUB>> ]
+"9840" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetI();)<SUB>1940</SUB>> ]
+"9841" [label = <(GetI,InvokeWithVarArgs(soa, nullptr, mid, args).GetI())<SUB>1940</SUB>> ]
+"9842" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetI)<SUB>1940</SUB>> ]
+"9823" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1938</SUB>> ]
+"9843" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1940</SUB>> ]
+"9848" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1940</SUB>> ]
+"9824" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1938</SUB>> ]
+"9828" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1938</SUB>> ]
+"9835" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1938</SUB>> ]
+"9829" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1938</SUB>> ]
+"9830" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1938</SUB>> ]
+"9832" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1938</SUB>> ]
+"9813" [label = <(METHOD,CallStaticIntMethodV)<SUB>1937</SUB>> ]
+"9849" [label = <(METHOD_RETURN,jint)<SUB>1937</SUB>> ]
   "9819" -> "9824" 
   "9819" -> "9838" 
   "9838" -> "9843" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/187-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/187-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/187-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/187-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticIntMethodA" {  
-"9857" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1945</SUB>> ]
-"9876" [label = <(soa,soa(env))<SUB>1946</SUB>> ]
-"9878" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetI();,return InvokeWithJValues(soa, nullptr, mid, args).GetI();)<SUB>1947</SUB>> ]
-"9879" [label = <(GetI,InvokeWithJValues(soa, nullptr, mid, args).GetI())<SUB>1947</SUB>> ]
-"9880" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetI)<SUB>1947</SUB>> ]
-"9861" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1945</SUB>> ]
-"9881" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1947</SUB>> ]
-"9886" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1947</SUB>> ]
-"9862" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1945</SUB>> ]
-"9866" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1945</SUB>> ]
-"9873" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1945</SUB>> ]
-"9867" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1945</SUB>> ]
-"9868" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1945</SUB>> ]
-"9870" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1945</SUB>> ]
-"9851" [label = <(METHOD,CallStaticIntMethodA)<SUB>1944</SUB>> ]
-"9887" [label = <(METHOD_RETURN,jint)<SUB>1944</SUB>> ]
+"9857" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1944</SUB>> ]
+"9876" [label = <(soa,soa(env))<SUB>1945</SUB>> ]
+"9878" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetI();,return InvokeWithJValues(soa, nullptr, mid, args).GetI();)<SUB>1946</SUB>> ]
+"9879" [label = <(GetI,InvokeWithJValues(soa, nullptr, mid, args).GetI())<SUB>1946</SUB>> ]
+"9880" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetI)<SUB>1946</SUB>> ]
+"9861" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1944</SUB>> ]
+"9881" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1946</SUB>> ]
+"9886" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1946</SUB>> ]
+"9862" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1944</SUB>> ]
+"9866" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1944</SUB>> ]
+"9873" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1944</SUB>> ]
+"9867" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1944</SUB>> ]
+"9868" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1944</SUB>> ]
+"9870" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1944</SUB>> ]
+"9851" [label = <(METHOD,CallStaticIntMethodA)<SUB>1943</SUB>> ]
+"9887" [label = <(METHOD_RETURN,jint)<SUB>1943</SUB>> ]
   "9857" -> "9862" 
   "9857" -> "9876" 
   "9876" -> "9881" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/188-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/188-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/188-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/188-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticLongMethod" {  
-"9895" [label = <(va_start,va_start(ap, mid))<SUB>1952</SUB>> ]
-"9899" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1953</SUB>> ]
-"9902" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1954</SUB>> ]
-"9921" [label = <(soa,soa(env))<SUB>1955</SUB>> ]
-"9924" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1956</SUB>> ]
-"9930" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1957</SUB>> ]
-"9900" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1953</SUB>> ]
-"9925" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1956</SUB>> ]
-"9931" [label = <(GetJ,result.GetJ())<SUB>1957</SUB>> ]
-"9932" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1957</SUB>> ]
-"9906" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1954</SUB>> ]
-"9934" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1957</SUB>> ]
-"9907" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1954</SUB>> ]
-"9911" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1954</SUB>> ]
-"9918" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1954</SUB>> ]
-"9912" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1954</SUB>> ]
-"9913" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1954</SUB>> ]
-"9915" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1954</SUB>> ]
-"9889" [label = <(METHOD,CallStaticLongMethod)<SUB>1950</SUB>> ]
-"9935" [label = <(METHOD_RETURN,jlong)<SUB>1950</SUB>> ]
+"9895" [label = <(va_start,va_start(ap, mid))<SUB>1951</SUB>> ]
+"9899" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1952</SUB>> ]
+"9902" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1953</SUB>> ]
+"9921" [label = <(soa,soa(env))<SUB>1954</SUB>> ]
+"9924" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1955</SUB>> ]
+"9930" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1956</SUB>> ]
+"9900" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1952</SUB>> ]
+"9925" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1955</SUB>> ]
+"9931" [label = <(GetJ,result.GetJ())<SUB>1956</SUB>> ]
+"9932" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1956</SUB>> ]
+"9906" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1953</SUB>> ]
+"9934" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1956</SUB>> ]
+"9907" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1953</SUB>> ]
+"9911" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1953</SUB>> ]
+"9918" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1953</SUB>> ]
+"9912" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1953</SUB>> ]
+"9913" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1953</SUB>> ]
+"9915" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1953</SUB>> ]
+"9889" [label = <(METHOD,CallStaticLongMethod)<SUB>1949</SUB>> ]
+"9935" [label = <(METHOD_RETURN,jlong)<SUB>1949</SUB>> ]
   "9895" -> "9900" 
   "9899" -> "9902" 
   "9902" -> "9907" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/189-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/189-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/189-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/189-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticLongMethodV" {  
-"9943" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1961</SUB>> ]
-"9962" [label = <(soa,soa(env))<SUB>1962</SUB>> ]
-"9964" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();)<SUB>1963</SUB>> ]
-"9965" [label = <(GetJ,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ())<SUB>1963</SUB>> ]
-"9966" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ)<SUB>1963</SUB>> ]
-"9947" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1961</SUB>> ]
-"9967" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1963</SUB>> ]
-"9972" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1963</SUB>> ]
-"9948" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1961</SUB>> ]
-"9952" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1961</SUB>> ]
-"9959" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1961</SUB>> ]
-"9953" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1961</SUB>> ]
-"9954" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1961</SUB>> ]
-"9956" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1961</SUB>> ]
-"9937" [label = <(METHOD,CallStaticLongMethodV)<SUB>1960</SUB>> ]
-"9973" [label = <(METHOD_RETURN,jlong)<SUB>1960</SUB>> ]
+"9943" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1960</SUB>> ]
+"9962" [label = <(soa,soa(env))<SUB>1961</SUB>> ]
+"9964" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetJ();)<SUB>1962</SUB>> ]
+"9965" [label = <(GetJ,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ())<SUB>1962</SUB>> ]
+"9966" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetJ)<SUB>1962</SUB>> ]
+"9947" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1960</SUB>> ]
+"9967" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1962</SUB>> ]
+"9972" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1962</SUB>> ]
+"9948" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1960</SUB>> ]
+"9952" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1960</SUB>> ]
+"9959" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1960</SUB>> ]
+"9953" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1960</SUB>> ]
+"9954" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1960</SUB>> ]
+"9956" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1960</SUB>> ]
+"9937" [label = <(METHOD,CallStaticLongMethodV)<SUB>1959</SUB>> ]
+"9973" [label = <(METHOD_RETURN,jlong)<SUB>1959</SUB>> ]
   "9943" -> "9948" 
   "9943" -> "9962" 
   "9962" -> "9967" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/19-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/19-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/19-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/19-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,26 +1,26 @@
 digraph "GetKind" {  
-"446" [label = <(&lt;operator&gt;.assignment,runtime_method = reinterpret_cast&lt;uintptr_t&gt;(art::GetJniNativeInterface))<SUB>292</SUB>> ]
-"466" [label = <(RETURN,return art::LocationIsOnApex(so_name) ? SharedObjectKind::kApexModule\012 : SharedObjectKind::kOther;,return art::LocationIsOnApex(so_name) ? SharedObjectKind::kApexModule\012 : SharedObjectKind::kOther;)<SUB>296</SUB>> ]
-"448" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;uintptr_t&gt;(art::GetJniNativeInterface))<SUB>292</SUB>> ]
-"454" [label = <(&lt;operator&gt;.logicalAnd,runtime_method &gt;= start &amp;&amp; runtime_method &lt; limit)<SUB>293</SUB>> ]
-"467" [label = <(&lt;operator&gt;.conditional,art::LocationIsOnApex(so_name) ? SharedObjectKind::kApexModule\012 : SharedObjectKind::kOther)<SUB>296</SUB>> ]
-"449" [label = <(UNKNOWN,uintptr_t,uintptr_t)<SUB>292</SUB>> ]
-"450" [label = <(&lt;operator&gt;.fieldAccess,art::GetJniNativeInterface)<SUB>292</SUB>> ]
-"455" [label = <(&lt;operator&gt;.greaterEqualsThan,runtime_method &gt;= start)<SUB>293</SUB>> ]
-"458" [label = <(&lt;operator&gt;.lessThan,runtime_method &lt; limit)<SUB>293</SUB>> ]
-"462" [label = <(RETURN,return SharedObjectKind::kRuntime;,return SharedObjectKind::kRuntime;)<SUB>294</SUB>> ]
-"468" [label = <(art::LocationIsOnApex,art::LocationIsOnApex(so_name))<SUB>296</SUB>> ]
-"473" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kApexModule)<SUB>296</SUB>> ]
-"476" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kOther)<SUB>297</SUB>> ]
-"452" [label = <(FIELD_IDENTIFIER,GetJniNativeInterface,GetJniNativeInterface)<SUB>292</SUB>> ]
-"463" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kRuntime)<SUB>294</SUB>> ]
-"469" [label = <(&lt;operator&gt;.fieldAccess,art::LocationIsOnApex)<SUB>296</SUB>> ]
-"475" [label = <(FIELD_IDENTIFIER,kApexModule,kApexModule)<SUB>296</SUB>> ]
-"478" [label = <(FIELD_IDENTIFIER,kOther,kOther)<SUB>297</SUB>> ]
-"465" [label = <(FIELD_IDENTIFIER,kRuntime,kRuntime)<SUB>294</SUB>> ]
-"471" [label = <(FIELD_IDENTIFIER,LocationIsOnApex,LocationIsOnApex)<SUB>296</SUB>> ]
-"440" [label = <(METHOD,GetKind)<SUB>291</SUB>> ]
-"479" [label = <(METHOD_RETURN,SharedObjectKind)<SUB>291</SUB>> ]
+"446" [label = <(&lt;operator&gt;.assignment,runtime_method = reinterpret_cast&lt;uintptr_t&gt;(art::GetJniNativeInterface))<SUB>291</SUB>> ]
+"466" [label = <(RETURN,return art::LocationIsOnApex(so_name) ? SharedObjectKind::kApexModule\012 : SharedObjectKind::kOther;,return art::LocationIsOnApex(so_name) ? SharedObjectKind::kApexModule\012 : SharedObjectKind::kOther;)<SUB>295</SUB>> ]
+"448" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;uintptr_t&gt;(art::GetJniNativeInterface))<SUB>291</SUB>> ]
+"454" [label = <(&lt;operator&gt;.logicalAnd,runtime_method &gt;= start &amp;&amp; runtime_method &lt; limit)<SUB>292</SUB>> ]
+"467" [label = <(&lt;operator&gt;.conditional,art::LocationIsOnApex(so_name) ? SharedObjectKind::kApexModule\012 : SharedObjectKind::kOther)<SUB>295</SUB>> ]
+"449" [label = <(UNKNOWN,uintptr_t,uintptr_t)<SUB>291</SUB>> ]
+"450" [label = <(&lt;operator&gt;.fieldAccess,art::GetJniNativeInterface)<SUB>291</SUB>> ]
+"455" [label = <(&lt;operator&gt;.greaterEqualsThan,runtime_method &gt;= start)<SUB>292</SUB>> ]
+"458" [label = <(&lt;operator&gt;.lessThan,runtime_method &lt; limit)<SUB>292</SUB>> ]
+"462" [label = <(RETURN,return SharedObjectKind::kRuntime;,return SharedObjectKind::kRuntime;)<SUB>293</SUB>> ]
+"468" [label = <(art::LocationIsOnApex,art::LocationIsOnApex(so_name))<SUB>295</SUB>> ]
+"473" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kApexModule)<SUB>295</SUB>> ]
+"476" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kOther)<SUB>296</SUB>> ]
+"452" [label = <(FIELD_IDENTIFIER,GetJniNativeInterface,GetJniNativeInterface)<SUB>291</SUB>> ]
+"463" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kRuntime)<SUB>293</SUB>> ]
+"469" [label = <(&lt;operator&gt;.fieldAccess,art::LocationIsOnApex)<SUB>295</SUB>> ]
+"475" [label = <(FIELD_IDENTIFIER,kApexModule,kApexModule)<SUB>295</SUB>> ]
+"478" [label = <(FIELD_IDENTIFIER,kOther,kOther)<SUB>296</SUB>> ]
+"465" [label = <(FIELD_IDENTIFIER,kRuntime,kRuntime)<SUB>293</SUB>> ]
+"471" [label = <(FIELD_IDENTIFIER,LocationIsOnApex,LocationIsOnApex)<SUB>295</SUB>> ]
+"440" [label = <(METHOD,GetKind)<SUB>290</SUB>> ]
+"479" [label = <(METHOD_RETURN,SharedObjectKind)<SUB>290</SUB>> ]
   "446" -> "455" 
   "466" -> "479" 
   "448" -> "446" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/190-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/190-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/190-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/190-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticLongMethodA" {  
-"9981" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1967</SUB>> ]
-"10000" [label = <(soa,soa(env))<SUB>1968</SUB>> ]
-"10002" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();)<SUB>1969</SUB>> ]
-"10003" [label = <(GetJ,InvokeWithJValues(soa, nullptr, mid, args).GetJ())<SUB>1969</SUB>> ]
-"10004" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetJ)<SUB>1969</SUB>> ]
-"9985" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1967</SUB>> ]
-"10005" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1969</SUB>> ]
-"10010" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1969</SUB>> ]
-"9986" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1967</SUB>> ]
-"9990" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1967</SUB>> ]
-"9997" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1967</SUB>> ]
-"9991" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1967</SUB>> ]
-"9992" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1967</SUB>> ]
-"9994" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1967</SUB>> ]
-"9975" [label = <(METHOD,CallStaticLongMethodA)<SUB>1966</SUB>> ]
-"10011" [label = <(METHOD_RETURN,jlong)<SUB>1966</SUB>> ]
+"9981" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1966</SUB>> ]
+"10000" [label = <(soa,soa(env))<SUB>1967</SUB>> ]
+"10002" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();,return InvokeWithJValues(soa, nullptr, mid, args).GetJ();)<SUB>1968</SUB>> ]
+"10003" [label = <(GetJ,InvokeWithJValues(soa, nullptr, mid, args).GetJ())<SUB>1968</SUB>> ]
+"10004" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetJ)<SUB>1968</SUB>> ]
+"9985" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1966</SUB>> ]
+"10005" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1968</SUB>> ]
+"10010" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1968</SUB>> ]
+"9986" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1966</SUB>> ]
+"9990" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1966</SUB>> ]
+"9997" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1966</SUB>> ]
+"9991" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1966</SUB>> ]
+"9992" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1966</SUB>> ]
+"9994" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1966</SUB>> ]
+"9975" [label = <(METHOD,CallStaticLongMethodA)<SUB>1965</SUB>> ]
+"10011" [label = <(METHOD_RETURN,jlong)<SUB>1965</SUB>> ]
   "9981" -> "9986" 
   "9981" -> "10000" 
   "10000" -> "10005" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/191-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/191-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/191-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/191-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticFloatMethod" {  
-"10019" [label = <(va_start,va_start(ap, mid))<SUB>1974</SUB>> ]
-"10023" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1975</SUB>> ]
-"10026" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1976</SUB>> ]
-"10045" [label = <(soa,soa(env))<SUB>1977</SUB>> ]
-"10048" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1978</SUB>> ]
-"10054" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1979</SUB>> ]
-"10024" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1975</SUB>> ]
-"10049" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1978</SUB>> ]
-"10055" [label = <(GetF,result.GetF())<SUB>1979</SUB>> ]
-"10056" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1979</SUB>> ]
-"10030" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1976</SUB>> ]
-"10058" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1979</SUB>> ]
-"10031" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1976</SUB>> ]
-"10035" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1976</SUB>> ]
-"10042" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1976</SUB>> ]
-"10036" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1976</SUB>> ]
-"10037" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1976</SUB>> ]
-"10039" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1976</SUB>> ]
-"10013" [label = <(METHOD,CallStaticFloatMethod)<SUB>1972</SUB>> ]
-"10059" [label = <(METHOD_RETURN,jfloat)<SUB>1972</SUB>> ]
+"10019" [label = <(va_start,va_start(ap, mid))<SUB>1973</SUB>> ]
+"10023" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1974</SUB>> ]
+"10026" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1975</SUB>> ]
+"10045" [label = <(soa,soa(env))<SUB>1976</SUB>> ]
+"10048" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1977</SUB>> ]
+"10054" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1978</SUB>> ]
+"10024" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1974</SUB>> ]
+"10049" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1977</SUB>> ]
+"10055" [label = <(GetF,result.GetF())<SUB>1978</SUB>> ]
+"10056" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1978</SUB>> ]
+"10030" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1975</SUB>> ]
+"10058" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1978</SUB>> ]
+"10031" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1975</SUB>> ]
+"10035" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1975</SUB>> ]
+"10042" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1975</SUB>> ]
+"10036" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1975</SUB>> ]
+"10037" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1975</SUB>> ]
+"10039" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1975</SUB>> ]
+"10013" [label = <(METHOD,CallStaticFloatMethod)<SUB>1971</SUB>> ]
+"10059" [label = <(METHOD_RETURN,jfloat)<SUB>1971</SUB>> ]
   "10019" -> "10024" 
   "10023" -> "10026" 
   "10026" -> "10031" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/192-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/192-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/192-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/192-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticFloatMethodV" {  
-"10067" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1983</SUB>> ]
-"10086" [label = <(soa,soa(env))<SUB>1984</SUB>> ]
-"10088" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();)<SUB>1985</SUB>> ]
-"10089" [label = <(GetF,InvokeWithVarArgs(soa, nullptr, mid, args).GetF())<SUB>1985</SUB>> ]
-"10090" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetF)<SUB>1985</SUB>> ]
-"10071" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1983</SUB>> ]
-"10091" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1985</SUB>> ]
-"10096" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1985</SUB>> ]
-"10072" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1983</SUB>> ]
-"10076" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1983</SUB>> ]
-"10083" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1983</SUB>> ]
-"10077" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1983</SUB>> ]
-"10078" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1983</SUB>> ]
-"10080" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1983</SUB>> ]
-"10061" [label = <(METHOD,CallStaticFloatMethodV)<SUB>1982</SUB>> ]
-"10097" [label = <(METHOD_RETURN,jfloat)<SUB>1982</SUB>> ]
+"10067" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1982</SUB>> ]
+"10086" [label = <(soa,soa(env))<SUB>1983</SUB>> ]
+"10088" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetF();)<SUB>1984</SUB>> ]
+"10089" [label = <(GetF,InvokeWithVarArgs(soa, nullptr, mid, args).GetF())<SUB>1984</SUB>> ]
+"10090" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetF)<SUB>1984</SUB>> ]
+"10071" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1982</SUB>> ]
+"10091" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>1984</SUB>> ]
+"10096" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1984</SUB>> ]
+"10072" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1982</SUB>> ]
+"10076" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1982</SUB>> ]
+"10083" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1982</SUB>> ]
+"10077" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1982</SUB>> ]
+"10078" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1982</SUB>> ]
+"10080" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1982</SUB>> ]
+"10061" [label = <(METHOD,CallStaticFloatMethodV)<SUB>1981</SUB>> ]
+"10097" [label = <(METHOD_RETURN,jfloat)<SUB>1981</SUB>> ]
   "10067" -> "10072" 
   "10067" -> "10086" 
   "10086" -> "10091" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/193-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/193-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/193-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/193-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticFloatMethodA" {  
-"10105" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1989</SUB>> ]
-"10124" [label = <(soa,soa(env))<SUB>1990</SUB>> ]
-"10126" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetF();,return InvokeWithJValues(soa, nullptr, mid, args).GetF();)<SUB>1991</SUB>> ]
-"10127" [label = <(GetF,InvokeWithJValues(soa, nullptr, mid, args).GetF())<SUB>1991</SUB>> ]
-"10128" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetF)<SUB>1991</SUB>> ]
-"10109" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1989</SUB>> ]
-"10129" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1991</SUB>> ]
-"10134" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1991</SUB>> ]
-"10110" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1989</SUB>> ]
-"10114" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1989</SUB>> ]
-"10121" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1989</SUB>> ]
-"10115" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1989</SUB>> ]
-"10116" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1989</SUB>> ]
-"10118" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1989</SUB>> ]
-"10099" [label = <(METHOD,CallStaticFloatMethodA)<SUB>1988</SUB>> ]
-"10135" [label = <(METHOD_RETURN,jfloat)<SUB>1988</SUB>> ]
+"10105" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1988</SUB>> ]
+"10124" [label = <(soa,soa(env))<SUB>1989</SUB>> ]
+"10126" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetF();,return InvokeWithJValues(soa, nullptr, mid, args).GetF();)<SUB>1990</SUB>> ]
+"10127" [label = <(GetF,InvokeWithJValues(soa, nullptr, mid, args).GetF())<SUB>1990</SUB>> ]
+"10128" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetF)<SUB>1990</SUB>> ]
+"10109" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1988</SUB>> ]
+"10129" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>1990</SUB>> ]
+"10134" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1990</SUB>> ]
+"10110" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1988</SUB>> ]
+"10114" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1988</SUB>> ]
+"10121" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1988</SUB>> ]
+"10115" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1988</SUB>> ]
+"10116" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1988</SUB>> ]
+"10118" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1988</SUB>> ]
+"10099" [label = <(METHOD,CallStaticFloatMethodA)<SUB>1987</SUB>> ]
+"10135" [label = <(METHOD_RETURN,jfloat)<SUB>1987</SUB>> ]
   "10105" -> "10110" 
   "10105" -> "10124" 
   "10124" -> "10129" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/194-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/194-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/194-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/194-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,24 +1,24 @@
 digraph "CallStaticDoubleMethod" {  
-"10143" [label = <(va_start,va_start(ap, mid))<SUB>1996</SUB>> ]
-"10147" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1997</SUB>> ]
-"10150" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1998</SUB>> ]
-"10169" [label = <(soa,soa(env))<SUB>1999</SUB>> ]
-"10172" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>2000</SUB>> ]
-"10178" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>2001</SUB>> ]
-"10148" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1997</SUB>> ]
-"10173" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>2000</SUB>> ]
-"10179" [label = <(GetD,result.GetD())<SUB>2001</SUB>> ]
-"10180" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>2001</SUB>> ]
-"10154" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1998</SUB>> ]
-"10182" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>2001</SUB>> ]
-"10155" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1998</SUB>> ]
-"10159" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1998</SUB>> ]
-"10166" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1998</SUB>> ]
-"10160" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1998</SUB>> ]
-"10161" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1998</SUB>> ]
-"10163" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1998</SUB>> ]
-"10137" [label = <(METHOD,CallStaticDoubleMethod)<SUB>1994</SUB>> ]
-"10183" [label = <(METHOD_RETURN,jdouble)<SUB>1994</SUB>> ]
+"10143" [label = <(va_start,va_start(ap, mid))<SUB>1995</SUB>> ]
+"10147" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1996</SUB>> ]
+"10150" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1997</SUB>> ]
+"10169" [label = <(soa,soa(env))<SUB>1998</SUB>> ]
+"10172" [label = <(result,result(InvokeWithVarArgs(soa, nullptr, mid, ap)))<SUB>1999</SUB>> ]
+"10178" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>2000</SUB>> ]
+"10148" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1996</SUB>> ]
+"10173" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>1999</SUB>> ]
+"10179" [label = <(GetD,result.GetD())<SUB>2000</SUB>> ]
+"10180" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>2000</SUB>> ]
+"10154" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1997</SUB>> ]
+"10182" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>2000</SUB>> ]
+"10155" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1997</SUB>> ]
+"10159" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1997</SUB>> ]
+"10166" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1997</SUB>> ]
+"10160" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1997</SUB>> ]
+"10161" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1997</SUB>> ]
+"10163" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1997</SUB>> ]
+"10137" [label = <(METHOD,CallStaticDoubleMethod)<SUB>1993</SUB>> ]
+"10183" [label = <(METHOD_RETURN,jdouble)<SUB>1993</SUB>> ]
   "10143" -> "10148" 
   "10147" -> "10150" 
   "10150" -> "10155" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/195-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/195-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/195-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/195-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticDoubleMethodV" {  
-"10191" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>2005</SUB>> ]
-"10210" [label = <(soa,soa(env))<SUB>2006</SUB>> ]
-"10212" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();)<SUB>2007</SUB>> ]
-"10213" [label = <(GetD,InvokeWithVarArgs(soa, nullptr, mid, args).GetD())<SUB>2007</SUB>> ]
-"10214" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetD)<SUB>2007</SUB>> ]
-"10195" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>2005</SUB>> ]
-"10215" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>2007</SUB>> ]
-"10220" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>2007</SUB>> ]
-"10196" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>2005</SUB>> ]
-"10200" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>2005</SUB>> ]
-"10207" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>2005</SUB>> ]
-"10201" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2005</SUB>> ]
-"10202" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2005</SUB>> ]
-"10204" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2005</SUB>> ]
-"10185" [label = <(METHOD,CallStaticDoubleMethodV)<SUB>2004</SUB>> ]
-"10221" [label = <(METHOD_RETURN,jdouble)<SUB>2004</SUB>> ]
+"10191" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>2004</SUB>> ]
+"10210" [label = <(soa,soa(env))<SUB>2005</SUB>> ]
+"10212" [label = <(RETURN,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();,return InvokeWithVarArgs(soa, nullptr, mid, args).GetD();)<SUB>2006</SUB>> ]
+"10213" [label = <(GetD,InvokeWithVarArgs(soa, nullptr, mid, args).GetD())<SUB>2006</SUB>> ]
+"10214" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithVarArgs(soa, nullptr, mid, args).GetD)<SUB>2006</SUB>> ]
+"10195" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>2004</SUB>> ]
+"10215" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>2006</SUB>> ]
+"10220" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>2006</SUB>> ]
+"10196" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>2004</SUB>> ]
+"10200" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>2004</SUB>> ]
+"10207" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>2004</SUB>> ]
+"10201" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2004</SUB>> ]
+"10202" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2004</SUB>> ]
+"10204" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2004</SUB>> ]
+"10185" [label = <(METHOD,CallStaticDoubleMethodV)<SUB>2003</SUB>> ]
+"10221" [label = <(METHOD_RETURN,jdouble)<SUB>2003</SUB>> ]
   "10191" -> "10196" 
   "10191" -> "10210" 
   "10210" -> "10215" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/196-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/196-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/196-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/196-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,20 +1,20 @@
 digraph "CallStaticDoubleMethodA" {  
-"10229" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>2011</SUB>> ]
-"10248" [label = <(soa,soa(env))<SUB>2012</SUB>> ]
-"10250" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetD();,return InvokeWithJValues(soa, nullptr, mid, args).GetD();)<SUB>2013</SUB>> ]
-"10251" [label = <(GetD,InvokeWithJValues(soa, nullptr, mid, args).GetD())<SUB>2013</SUB>> ]
-"10252" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetD)<SUB>2013</SUB>> ]
-"10233" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>2011</SUB>> ]
-"10253" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>2013</SUB>> ]
-"10258" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>2013</SUB>> ]
-"10234" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>2011</SUB>> ]
-"10238" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>2011</SUB>> ]
-"10245" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>2011</SUB>> ]
-"10239" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2011</SUB>> ]
-"10240" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2011</SUB>> ]
-"10242" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2011</SUB>> ]
-"10223" [label = <(METHOD,CallStaticDoubleMethodA)<SUB>2010</SUB>> ]
-"10259" [label = <(METHOD_RETURN,jdouble)<SUB>2010</SUB>> ]
+"10229" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>2010</SUB>> ]
+"10248" [label = <(soa,soa(env))<SUB>2011</SUB>> ]
+"10250" [label = <(RETURN,return InvokeWithJValues(soa, nullptr, mid, args).GetD();,return InvokeWithJValues(soa, nullptr, mid, args).GetD();)<SUB>2012</SUB>> ]
+"10251" [label = <(GetD,InvokeWithJValues(soa, nullptr, mid, args).GetD())<SUB>2012</SUB>> ]
+"10252" [label = <(&lt;operator&gt;.fieldAccess,InvokeWithJValues(soa, nullptr, mid, args).GetD)<SUB>2012</SUB>> ]
+"10233" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>2010</SUB>> ]
+"10253" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>2012</SUB>> ]
+"10258" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>2012</SUB>> ]
+"10234" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>2010</SUB>> ]
+"10238" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>2010</SUB>> ]
+"10245" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>2010</SUB>> ]
+"10239" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2010</SUB>> ]
+"10240" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2010</SUB>> ]
+"10242" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2010</SUB>> ]
+"10223" [label = <(METHOD,CallStaticDoubleMethodA)<SUB>2009</SUB>> ]
+"10259" [label = <(METHOD_RETURN,jdouble)<SUB>2009</SUB>> ]
   "10229" -> "10234" 
   "10229" -> "10248" 
   "10248" -> "10253" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/197-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/197-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/197-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/197-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,19 +1,19 @@
 digraph "CallStaticVoidMethod" {  
-"10267" [label = <(va_start,va_start(ap, mid))<SUB>2018</SUB>> ]
-"10271" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>2019</SUB>> ]
-"10274" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2020</SUB>> ]
-"10292" [label = <(soa,soa(env))<SUB>2021</SUB>> ]
-"10294" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>2022</SUB>> ]
-"10272" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>2019</SUB>> ]
-"10278" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>2020</SUB>> ]
-"10279" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>2020</SUB>> ]
-"10283" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>2020</SUB>> ]
-"10290" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2020</SUB>> ]
-"10284" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2020</SUB>> ]
-"10285" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2020</SUB>> ]
-"10287" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2020</SUB>> ]
-"10261" [label = <(METHOD,CallStaticVoidMethod)<SUB>2016</SUB>> ]
-"10299" [label = <(METHOD_RETURN,void)<SUB>2016</SUB>> ]
+"10267" [label = <(va_start,va_start(ap, mid))<SUB>2017</SUB>> ]
+"10271" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>2018</SUB>> ]
+"10274" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2019</SUB>> ]
+"10292" [label = <(soa,soa(env))<SUB>2020</SUB>> ]
+"10294" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, ap))<SUB>2021</SUB>> ]
+"10272" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>2018</SUB>> ]
+"10278" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>2019</SUB>> ]
+"10279" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>2019</SUB>> ]
+"10283" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>2019</SUB>> ]
+"10290" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2019</SUB>> ]
+"10284" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2019</SUB>> ]
+"10285" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2019</SUB>> ]
+"10287" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2019</SUB>> ]
+"10261" [label = <(METHOD,CallStaticVoidMethod)<SUB>2015</SUB>> ]
+"10299" [label = <(METHOD_RETURN,void)<SUB>2015</SUB>> ]
   "10267" -> "10272" 
   "10271" -> "10274" 
   "10274" -> "10279" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/198-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/198-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/198-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/198-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,16 +1,16 @@
 digraph "CallStaticVoidMethodV" {  
-"10307" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2026</SUB>> ]
-"10325" [label = <(soa,soa(env))<SUB>2027</SUB>> ]
-"10327" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>2028</SUB>> ]
-"10311" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>2026</SUB>> ]
-"10312" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>2026</SUB>> ]
-"10316" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>2026</SUB>> ]
-"10323" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2026</SUB>> ]
-"10317" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2026</SUB>> ]
-"10318" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2026</SUB>> ]
-"10320" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2026</SUB>> ]
-"10301" [label = <(METHOD,CallStaticVoidMethodV)<SUB>2025</SUB>> ]
-"10332" [label = <(METHOD_RETURN,void)<SUB>2025</SUB>> ]
+"10307" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2025</SUB>> ]
+"10325" [label = <(soa,soa(env))<SUB>2026</SUB>> ]
+"10327" [label = <(InvokeWithVarArgs,InvokeWithVarArgs(soa, nullptr, mid, args))<SUB>2027</SUB>> ]
+"10311" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>2025</SUB>> ]
+"10312" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>2025</SUB>> ]
+"10316" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>2025</SUB>> ]
+"10323" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2025</SUB>> ]
+"10317" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2025</SUB>> ]
+"10318" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2025</SUB>> ]
+"10320" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2025</SUB>> ]
+"10301" [label = <(METHOD,CallStaticVoidMethodV)<SUB>2024</SUB>> ]
+"10332" [label = <(METHOD_RETURN,void)<SUB>2024</SUB>> ]
   "10307" -> "10312" 
   "10307" -> "10325" 
   "10325" -> "10327" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/199-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/199-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/199-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/199-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,16 +1,16 @@
 digraph "CallStaticVoidMethodA" {  
-"10340" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2032</SUB>> ]
-"10358" [label = <(soa,soa(env))<SUB>2033</SUB>> ]
-"10360" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>2034</SUB>> ]
-"10344" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>2032</SUB>> ]
-"10345" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>2032</SUB>> ]
-"10349" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>2032</SUB>> ]
-"10356" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2032</SUB>> ]
-"10350" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2032</SUB>> ]
-"10351" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2032</SUB>> ]
-"10353" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2032</SUB>> ]
-"10334" [label = <(METHOD,CallStaticVoidMethodA)<SUB>2031</SUB>> ]
-"10365" [label = <(METHOD_RETURN,void)<SUB>2031</SUB>> ]
+"10340" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2031</SUB>> ]
+"10358" [label = <(soa,soa(env))<SUB>2032</SUB>> ]
+"10360" [label = <(InvokeWithJValues,InvokeWithJValues(soa, nullptr, mid, args))<SUB>2033</SUB>> ]
+"10344" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>2031</SUB>> ]
+"10345" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>2031</SUB>> ]
+"10349" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>2031</SUB>> ]
+"10356" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>2031</SUB>> ]
+"10350" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2031</SUB>> ]
+"10351" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2031</SUB>> ]
+"10353" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2031</SUB>> ]
+"10334" [label = <(METHOD,CallStaticVoidMethodA)<SUB>2030</SUB>> ]
+"10365" [label = <(METHOD_RETURN,void)<SUB>2030</SUB>> ]
   "10340" -> "10345" 
   "10340" -> "10358" 
   "10358" -> "10360" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/2-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/2-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/2-cfg.dot	2023-06-07 19:34:48.047388423 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/2-cfg.dot	2023-06-07 19:34:54.657387808 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_23" {  
-"15" [label = <(METHOD,anonymous_lambda_23)<SUB>2098</SUB>> ]
-"17" [label = <(METHOD_RETURN,ANY)<SUB>2098</SUB>> ]
+"15" [label = <(METHOD,anonymous_lambda_23)<SUB>2096</SUB>> ]
+"17" [label = <(METHOD_RETURN,ANY)<SUB>2096</SUB>> ]
   "15" -> "17" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/20-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/20-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/20-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/20-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,10 +1,10 @@
 digraph "&lt;clinit&gt;" {  
-"492" [label = <(&lt;operator&gt;.assignment,kLibjavacore = &quot;libjavacore.so&quot;)<SUB>310</SUB>> ]
-"495" [label = <(&lt;operator&gt;.assignment,kLibnativehelper = &quot;libnativehelper.so&quot;)<SUB>311</SUB>> ]
-"498" [label = <(&lt;operator&gt;.assignment,kLibopenjdk = art::kIsDebugBuild ? &quot;libopenjdkd.so&quot;\012 : &quot;libopenjdk.so&quot;)<SUB>312</SUB>> ]
-"500" [label = <(&lt;operator&gt;.conditional,art::kIsDebugBuild ? &quot;libopenjdkd.so&quot;\012 : &quot;libopenjdk.so&quot;)<SUB>312</SUB>> ]
-"501" [label = <(&lt;operator&gt;.fieldAccess,art::kIsDebugBuild)<SUB>312</SUB>> ]
-"503" [label = <(FIELD_IDENTIFIER,kIsDebugBuild,kIsDebugBuild)<SUB>312</SUB>> ]
+"492" [label = <(&lt;operator&gt;.assignment,kLibjavacore = &quot;libjavacore.so&quot;)<SUB>309</SUB>> ]
+"495" [label = <(&lt;operator&gt;.assignment,kLibnativehelper = &quot;libnativehelper.so&quot;)<SUB>310</SUB>> ]
+"498" [label = <(&lt;operator&gt;.assignment,kLibopenjdk = art::kIsDebugBuild ? &quot;libopenjdkd.so&quot;\012 : &quot;libopenjdk.so&quot;)<SUB>311</SUB>> ]
+"500" [label = <(&lt;operator&gt;.conditional,art::kIsDebugBuild ? &quot;libopenjdkd.so&quot;\012 : &quot;libopenjdk.so&quot;)<SUB>311</SUB>> ]
+"501" [label = <(&lt;operator&gt;.fieldAccess,art::kIsDebugBuild)<SUB>311</SUB>> ]
+"503" [label = <(FIELD_IDENTIFIER,kIsDebugBuild,kIsDebugBuild)<SUB>311</SUB>> ]
 "490" [label = <(METHOD,&lt;clinit&gt;)> ]
 "507" [label = <(METHOD_RETURN,ANY)> ]
   "492" -> "495" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/200-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/200-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/200-cfg.dot	2023-06-07 19:34:48.397388390 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/200-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,40 +1,40 @@
 digraph "NewString" {  
-"10408" [label = <(soa,soa(env))<SUB>2046</SUB>> ]
-"10410" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; result = mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>2047</SUB>> ]
-"10430" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>2048</SUB>> ]
-"10373" [label = <(UNLIKELY,UNLIKELY(char_count &lt; 0))<SUB>2038</SUB>> ]
-"10389" [label = <(UNLIKELY,UNLIKELY(chars == nullptr &amp;&amp; char_count &gt; 0))<SUB>2042</SUB>> ]
-"10411" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; result)<SUB>2047</SUB>> ]
-"10418" [label = <(mirror::String::AllocFromUtf16,mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>2047</SUB>> ]
-"10431" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>2048</SUB>> ]
-"10374" [label = <(&lt;operator&gt;.lessThan,char_count &lt; 0)<SUB>2038</SUB>> ]
-"10378" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;char_count &lt; 0: %d&quot;, char_count))<SUB>2039</SUB>> ]
-"10386" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2040</SUB>> ]
-"10390" [label = <(&lt;operator&gt;.logicalAnd,chars == nullptr &amp;&amp; char_count &gt; 0)<SUB>2042</SUB>> ]
-"10398" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;chars == null &amp;&amp; char_count &gt; 0&quot;))<SUB>2043</SUB>> ]
-"10405" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2044</SUB>> ]
-"10412" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2047</SUB>> ]
-"10419" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromUtf16)<SUB>2047</SUB>> ]
-"10424" [label = <(Self,soa.Self())<SUB>2047</SUB>> ]
-"10432" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>2048</SUB>> ]
-"10379" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2039</SUB>> ]
-"10391" [label = <(&lt;operator&gt;.equals,chars == nullptr)<SUB>2042</SUB>> ]
-"10394" [label = <(&lt;operator&gt;.greaterThan,char_count &gt; 0)<SUB>2042</SUB>> ]
-"10399" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2043</SUB>> ]
-"10414" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2047</SUB>> ]
-"10420" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2047</SUB>> ]
-"10423" [label = <(FIELD_IDENTIFIER,AllocFromUtf16,AllocFromUtf16)<SUB>2047</SUB>> ]
-"10425" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2047</SUB>> ]
-"10433" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2048</SUB>> ]
-"10380" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2039</SUB>> ]
-"10382" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2039</SUB>> ]
-"10400" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2043</SUB>> ]
-"10402" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2043</SUB>> ]
-"10416" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2047</SUB>> ]
-"10427" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2047</SUB>> ]
-"10435" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2048</SUB>> ]
-"10367" [label = <(METHOD,NewString)<SUB>2037</SUB>> ]
-"10438" [label = <(METHOD_RETURN,jstring)<SUB>2037</SUB>> ]
+"10408" [label = <(soa,soa(env))<SUB>2045</SUB>> ]
+"10410" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; result = mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>2046</SUB>> ]
+"10430" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>2047</SUB>> ]
+"10373" [label = <(UNLIKELY,UNLIKELY(char_count &lt; 0))<SUB>2037</SUB>> ]
+"10389" [label = <(UNLIKELY,UNLIKELY(chars == nullptr &amp;&amp; char_count &gt; 0))<SUB>2041</SUB>> ]
+"10411" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; result)<SUB>2046</SUB>> ]
+"10418" [label = <(mirror::String::AllocFromUtf16,mirror::String::AllocFromUtf16(soa.Self(), char_count, chars))<SUB>2046</SUB>> ]
+"10431" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>2047</SUB>> ]
+"10374" [label = <(&lt;operator&gt;.lessThan,char_count &lt; 0)<SUB>2037</SUB>> ]
+"10378" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;char_count &lt; 0: %d&quot;, char_count))<SUB>2038</SUB>> ]
+"10386" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2039</SUB>> ]
+"10390" [label = <(&lt;operator&gt;.logicalAnd,chars == nullptr &amp;&amp; char_count &gt; 0)<SUB>2041</SUB>> ]
+"10398" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewString&quot;, &quot;chars == null &amp;&amp; char_count &gt; 0&quot;))<SUB>2042</SUB>> ]
+"10405" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2043</SUB>> ]
+"10412" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2046</SUB>> ]
+"10419" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromUtf16)<SUB>2046</SUB>> ]
+"10424" [label = <(Self,soa.Self())<SUB>2046</SUB>> ]
+"10432" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>2047</SUB>> ]
+"10379" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2038</SUB>> ]
+"10391" [label = <(&lt;operator&gt;.equals,chars == nullptr)<SUB>2041</SUB>> ]
+"10394" [label = <(&lt;operator&gt;.greaterThan,char_count &gt; 0)<SUB>2041</SUB>> ]
+"10399" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2042</SUB>> ]
+"10414" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2046</SUB>> ]
+"10420" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2046</SUB>> ]
+"10423" [label = <(FIELD_IDENTIFIER,AllocFromUtf16,AllocFromUtf16)<SUB>2046</SUB>> ]
+"10425" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2046</SUB>> ]
+"10433" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2047</SUB>> ]
+"10380" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2038</SUB>> ]
+"10382" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2038</SUB>> ]
+"10400" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2042</SUB>> ]
+"10402" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2042</SUB>> ]
+"10416" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2046</SUB>> ]
+"10427" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2046</SUB>> ]
+"10435" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2047</SUB>> ]
+"10367" [label = <(METHOD,NewString)<SUB>2036</SUB>> ]
+"10438" [label = <(METHOD_RETURN,jstring)<SUB>2036</SUB>> ]
   "10408" -> "10416" 
   "10410" -> "10435" 
   "10430" -> "10438" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/201-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/201-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/201-cfg.dot	2023-06-07 19:34:48.407388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/201-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,171 +1,169 @@
 digraph "NewStringUTF" {  
-"10452" [label = <(&lt;operator&gt;.assignment,utf8_length = strlen(utf))<SUB>2060</SUB>> ]
-"10500" [label = <(&lt;operator&gt;.greaterThan,std::optional&lt;std::string&gt; replacement_utf)<SUB>2071</SUB>> ]
-"10510" [label = <(UNKNOWN,t,t)<SUB>2072</SUB>> ]
-"10511" [label = <(UNKNOWN,utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {},utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {})<SUB>2072</SUB>> ]
-"10512" [label = <(UNKNOWN,,\012 /*bad=*/ []() { return true; },,\012 /*bad=*/ []() { return true; })<SUB>2075</SUB>> ]
-"10513" [label = <(UNKNOWN,);,);)<SUB>2076</SUB>> ]
-"10603" [label = <(DCHECK_LE,DCHECK_LE(utf16_length, utf8_length))<SUB>2105</SUB>> ]
-"10606" [label = <(DCHECK_LE,DCHECK_LE(utf8_length, static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>2106</SUB>> ]
-"10621" [label = <(soa,soa(env))<SUB>2108</SUB>> ]
-"10623" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; result =\012        mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>2109</SUB>> ]
-"10644" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>2111</SUB>> ]
-"10445" [label = <(&lt;operator&gt;.equals,utf == nullptr)<SUB>2052</SUB>> ]
-"10454" [label = <(strlen,strlen(utf))<SUB>2060</SUB>> ]
-"10457" [label = <(UNLIKELY,UNLIKELY(utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>2061</SUB>> ]
-"10501" [label = <(&lt;operator&gt;.lessThan,std::optional&lt;std::string)<SUB>2071</SUB>> ]
-"10515" [label = <(UNLIKELY,UNLIKELY(utf8_length != 0u &amp;&amp; utf16_length == 0u))<SUB>2077</SUB>> ]
-"10608" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>2106</SUB>> ]
-"10624" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; result)<SUB>2109</SUB>> ]
-"10631" [label = <(mirror::String::AllocFromModifiedUtf8,mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>2110</SUB>> ]
-"10645" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>2111</SUB>> ]
-"10449" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2053</SUB>> ]
-"10458" [label = <(&lt;operator&gt;.greaterThan,utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>2061</SUB>> ]
-"10474" [label = <(&lt;operator&gt;.assignment,error =\012          android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>2065</SUB>> ]
-"10485" [label = <(soa,soa(env))<SUB>2067</SUB>> ]
-"10487" [label = <(ThrowOutOfMemoryError,soa.Self()-&gt;ThrowOutOfMemoryError(error.c_str()))<SUB>2068</SUB>> ]
-"10498" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2069</SUB>> ]
-"10502" [label = <(&lt;operator&gt;.fieldAccess,std::optional)<SUB>2071</SUB>> ]
-"10505" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>2071</SUB>> ]
-"10516" [label = <(&lt;operator&gt;.logicalAnd,utf8_length != 0u &amp;&amp; utf16_length == 0u)<SUB>2077</SUB>> ]
-"10524" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;172655291&quot;))<SUB>2079</SUB>> ]
-"10528" [label = <(&lt;operator&gt;.assignment,kMinDelay = UINT64_C(10000000000))<SUB>2081</SUB>> ]
-"10533" [label = <(prev_bad_input_time,prev_bad_input_time(UINT64_C(0)))<SUB>2082</SUB>> ]
-"10537" [label = <(&lt;operator&gt;.assignment,prev_time = prev_bad_input_time.load(std::memory_order_relaxed))<SUB>2083</SUB>> ]
-"10547" [label = <(&lt;operator&gt;.assignment,now = NanoTime())<SUB>2084</SUB>> ]
-"10575" [label = <(emplace,replacement_utf.emplace())<SUB>2090</SUB>> ]
-"10579" [label = <(reserve,replacement_utf-&gt;reserve(utf8_length))<SUB>2091</SUB>> ]
-"10584" [label = <(&lt;operator&gt;.assignment,utf16_length = VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>2092</SUB>> ]
-"10591" [label = <(&lt;operator&gt;.assignment,utf = replacement_utf-&gt;c_str())<SUB>2102</SUB>> ]
-"10597" [label = <(&lt;operator&gt;.assignment,utf8_length = replacement_utf-&gt;length())<SUB>2103</SUB>> ]
-"10609" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>2106</SUB>> ]
-"10610" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>2106</SUB>> ]
-"10625" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2109</SUB>> ]
-"10632" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromModifiedUtf8)<SUB>2110</SUB>> ]
-"10637" [label = <(Self,soa.Self())<SUB>2110</SUB>> ]
-"10646" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>2111</SUB>> ]
-"10460" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>2061</SUB>> ]
-"10476" [label = <(android::base::StringPrintf,android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>2066</SUB>> ]
-"10488" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowOutOfMemoryError)<SUB>2068</SUB>> ]
-"10494" [label = <(c_str,error.c_str())<SUB>2068</SUB>> ]
-"10504" [label = <(FIELD_IDENTIFIER,optional,optional)<SUB>2071</SUB>> ]
-"10507" [label = <(FIELD_IDENTIFIER,string,string)<SUB>2071</SUB>> ]
-"10517" [label = <(&lt;operator&gt;.notEquals,utf8_length != 0u)<SUB>2077</SUB>> ]
-"10520" [label = <(&lt;operator&gt;.equals,utf16_length == 0u)<SUB>2077</SUB>> ]
-"10530" [label = <(UINT64_C,UINT64_C(10000000000))<SUB>2081</SUB>> ]
-"10534" [label = <(UINT64_C,UINT64_C(0))<SUB>2082</SUB>> ]
-"10539" [label = <(load,prev_bad_input_time.load(std::memory_order_relaxed))<SUB>2083</SUB>> ]
-"10549" [label = <(NanoTime,NanoTime())<SUB>2084</SUB>> ]
-"10551" [label = <(&lt;operator&gt;.logicalAnd,(prev_time == 0u || now - prev_time &gt;= kMinDelay) &amp;&amp;\012          prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>2085</SUB>> ]
-"10576" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.emplace)<SUB>2090</SUB>> ]
-"10580" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;reserve)<SUB>2091</SUB>> ]
-"10586" [label = <(VisitModifiedUtf8Chars,VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>2092</SUB>> ]
-"10593" [label = <(c_str,replacement_utf-&gt;c_str())<SUB>2102</SUB>> ]
-"10599" [label = <(length,replacement_utf-&gt;length())<SUB>2103</SUB>> ]
-"10611" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>2106</SUB>> ]
-"10616" [label = <(::max,::max())<SUB>2106</SUB>> ]
-"10627" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2109</SUB>> ]
-"10633" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2110</SUB>> ]
-"10636" [label = <(FIELD_IDENTIFIER,AllocFromModifiedUtf8,AllocFromModifiedUtf8)<SUB>2110</SUB>> ]
-"10638" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2110</SUB>> ]
-"10647" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2111</SUB>> ]
-"10461" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>2061</SUB>> ]
-"10462" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>2061</SUB>> ]
-"10477" [label = <(&lt;operator&gt;.fieldAccess,android::base::StringPrintf)<SUB>2066</SUB>> ]
-"10489" [label = <(Self,soa.Self())<SUB>2068</SUB>> ]
-"10493" [label = <(FIELD_IDENTIFIER,ThrowOutOfMemoryError,ThrowOutOfMemoryError)<SUB>2068</SUB>> ]
-"10495" [label = <(&lt;operator&gt;.fieldAccess,error.c_str)<SUB>2068</SUB>> ]
-"10540" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.load)<SUB>2083</SUB>> ]
-"10543" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>2083</SUB>> ]
-"10552" [label = <(&lt;operator&gt;.logicalOr,prev_time == 0u || now - prev_time &gt;= kMinDelay)<SUB>2085</SUB>> ]
-"10561" [label = <(compare_exchange_strong,prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>2086</SUB>> ]
-"10571" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Invalid UTF-8 input to JNI::NewStringUTF()&quot;)<SUB>2087</SUB>> ]
-"10578" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>2090</SUB>> ]
-"10582" [label = <(FIELD_IDENTIFIER,reserve,reserve)<SUB>2091</SUB>> ]
-"10589" [label = <(METHOD_REF,ANY anonymous_lambda_22 (const char* ptr,size_t length),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>2095</SUB>> ]
-"10590" [label = <(METHOD_REF,ANY anonymous_lambda_23 (),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>2098</SUB>> ]
-"10594" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;c_str)<SUB>2102</SUB>> ]
-"10600" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;length)<SUB>2103</SUB>> ]
-"10612" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>2106</SUB>> ]
-"10617" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>2106</SUB>> ]
-"10629" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2109</SUB>> ]
-"10640" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2110</SUB>> ]
-"10649" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2111</SUB>> ]
-"10463" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>2061</SUB>> ]
-"10468" [label = <(::max,::max())<SUB>2061</SUB>> ]
-"10478" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2066</SUB>> ]
-"10481" [label = <(FIELD_IDENTIFIER,StringPrintf,StringPrintf)<SUB>2066</SUB>> ]
-"10490" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2068</SUB>> ]
-"10497" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2068</SUB>> ]
-"10542" [label = <(FIELD_IDENTIFIER,load,load)<SUB>2083</SUB>> ]
-"10545" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>2083</SUB>> ]
-"10553" [label = <(&lt;operator&gt;.equals,prev_time == 0u)<SUB>2085</SUB>> ]
-"10556" [label = <(&lt;operator&gt;.greaterEqualsThan,now - prev_time &gt;= kMinDelay)<SUB>2085</SUB>> ]
-"10562" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.compare_exchange_strong)<SUB>2086</SUB>> ]
-"10567" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>2086</SUB>> ]
-"10572" [label = <(LOG,LOG(ERROR))<SUB>2087</SUB>> ]
-"10596" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2102</SUB>> ]
-"10602" [label = <(FIELD_IDENTIFIER,length,length)<SUB>2103</SUB>> ]
-"10614" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>2106</SUB>> ]
-"10619" [label = <(FIELD_IDENTIFIER,max,max)<SUB>2106</SUB>> ]
-"10464" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>2061</SUB>> ]
-"10469" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>2061</SUB>> ]
-"10492" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2068</SUB>> ]
-"10557" [label = <(&lt;operator&gt;.subtraction,now - prev_time)<SUB>2085</SUB>> ]
-"10564" [label = <(FIELD_IDENTIFIER,compare_exchange_strong,compare_exchange_strong)<SUB>2086</SUB>> ]
-"10569" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>2086</SUB>> ]
-"10466" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>2061</SUB>> ]
-"10471" [label = <(FIELD_IDENTIFIER,max,max)<SUB>2061</SUB>> ]
-"10440" [label = <(METHOD,NewStringUTF)<SUB>2051</SUB>> ]
-"10652" [label = <(METHOD_RETURN,jstring)<SUB>2051</SUB>> ]
+"10452" [label = <(&lt;operator&gt;.assignment,utf8_length = strlen(utf))<SUB>2059</SUB>> ]
+"10500" [label = <(&lt;operator&gt;.greaterThan,std::optional&lt;std::string&gt; replacement_utf)<SUB>2070</SUB>> ]
+"10510" [label = <(UNKNOWN,t,t)<SUB>2071</SUB>> ]
+"10511" [label = <(UNKNOWN,utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {},utf16_length = VisitModifiedUtf8Chars(\012        utf,\012        utf8_length,\012 /*good=*/ [](const char* ptr ATTRIBUTE_UNUSED, size_t length ATTRIBUTE_UNUSED) {})<SUB>2071</SUB>> ]
+"10512" [label = <(UNKNOWN,,\012 /*bad=*/ []() { return true; },,\012 /*bad=*/ []() { return true; })<SUB>2074</SUB>> ]
+"10513" [label = <(UNKNOWN,);,);)<SUB>2075</SUB>> ]
+"10600" [label = <(DCHECK_LE,DCHECK_LE(utf16_length, utf8_length))<SUB>2103</SUB>> ]
+"10603" [label = <(DCHECK_LE,DCHECK_LE(utf8_length, static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>2104</SUB>> ]
+"10618" [label = <(soa,soa(env))<SUB>2106</SUB>> ]
+"10620" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; result =\012        mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>2107</SUB>> ]
+"10641" [label = <(RETURN,return soa.AddLocalReference&lt;jstring&gt;(result);,return soa.AddLocalReference&lt;jstring&gt;(result);)<SUB>2109</SUB>> ]
+"10445" [label = <(&lt;operator&gt;.equals,utf == nullptr)<SUB>2051</SUB>> ]
+"10454" [label = <(strlen,strlen(utf))<SUB>2059</SUB>> ]
+"10457" [label = <(UNLIKELY,UNLIKELY(utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max())))<SUB>2060</SUB>> ]
+"10501" [label = <(&lt;operator&gt;.lessThan,std::optional&lt;std::string)<SUB>2070</SUB>> ]
+"10515" [label = <(UNLIKELY,UNLIKELY(utf8_length != 0u &amp;&amp; utf16_length == 0u))<SUB>2076</SUB>> ]
+"10605" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>2104</SUB>> ]
+"10621" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; result)<SUB>2107</SUB>> ]
+"10628" [label = <(mirror::String::AllocFromModifiedUtf8,mirror::String::AllocFromModifiedUtf8(soa.Self(), utf16_length, utf, utf8_length))<SUB>2108</SUB>> ]
+"10642" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jstring&gt;(result))<SUB>2109</SUB>> ]
+"10449" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2052</SUB>> ]
+"10458" [label = <(&lt;operator&gt;.greaterThan,utf8_length &gt; static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>2060</SUB>> ]
+"10474" [label = <(&lt;operator&gt;.assignment,error =\012          android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>2064</SUB>> ]
+"10485" [label = <(soa,soa(env))<SUB>2066</SUB>> ]
+"10487" [label = <(ThrowOutOfMemoryError,soa.Self()-&gt;ThrowOutOfMemoryError(error.c_str()))<SUB>2067</SUB>> ]
+"10498" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2068</SUB>> ]
+"10502" [label = <(&lt;operator&gt;.fieldAccess,std::optional)<SUB>2070</SUB>> ]
+"10505" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>2070</SUB>> ]
+"10516" [label = <(&lt;operator&gt;.logicalAnd,utf8_length != 0u &amp;&amp; utf16_length == 0u)<SUB>2076</SUB>> ]
+"10525" [label = <(&lt;operator&gt;.assignment,kMinDelay = UINT64_C(10000000000))<SUB>2079</SUB>> ]
+"10530" [label = <(prev_bad_input_time,prev_bad_input_time(UINT64_C(0)))<SUB>2080</SUB>> ]
+"10534" [label = <(&lt;operator&gt;.assignment,prev_time = prev_bad_input_time.load(std::memory_order_relaxed))<SUB>2081</SUB>> ]
+"10544" [label = <(&lt;operator&gt;.assignment,now = NanoTime())<SUB>2082</SUB>> ]
+"10572" [label = <(emplace,replacement_utf.emplace())<SUB>2088</SUB>> ]
+"10576" [label = <(reserve,replacement_utf-&gt;reserve(utf8_length))<SUB>2089</SUB>> ]
+"10581" [label = <(&lt;operator&gt;.assignment,utf16_length = VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>2090</SUB>> ]
+"10588" [label = <(&lt;operator&gt;.assignment,utf = replacement_utf-&gt;c_str())<SUB>2100</SUB>> ]
+"10594" [label = <(&lt;operator&gt;.assignment,utf8_length = replacement_utf-&gt;length())<SUB>2101</SUB>> ]
+"10606" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>2104</SUB>> ]
+"10607" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>2104</SUB>> ]
+"10622" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2107</SUB>> ]
+"10629" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocFromModifiedUtf8)<SUB>2108</SUB>> ]
+"10634" [label = <(Self,soa.Self())<SUB>2108</SUB>> ]
+"10643" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jstring)<SUB>2109</SUB>> ]
+"10460" [label = <(&lt;operator&gt;.cast,static_cast&lt;uint32_t&gt;(std::numeric_limits&lt;int32_t&gt;::max()))<SUB>2060</SUB>> ]
+"10476" [label = <(android::base::StringPrintf,android::base::StringPrintf(&quot;NewStringUTF input is 2 GiB or more: %zu&quot;, utf8_length))<SUB>2065</SUB>> ]
+"10488" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ThrowOutOfMemoryError)<SUB>2067</SUB>> ]
+"10494" [label = <(c_str,error.c_str())<SUB>2067</SUB>> ]
+"10504" [label = <(FIELD_IDENTIFIER,optional,optional)<SUB>2070</SUB>> ]
+"10507" [label = <(FIELD_IDENTIFIER,string,string)<SUB>2070</SUB>> ]
+"10517" [label = <(&lt;operator&gt;.notEquals,utf8_length != 0u)<SUB>2076</SUB>> ]
+"10520" [label = <(&lt;operator&gt;.equals,utf16_length == 0u)<SUB>2076</SUB>> ]
+"10527" [label = <(UINT64_C,UINT64_C(10000000000))<SUB>2079</SUB>> ]
+"10531" [label = <(UINT64_C,UINT64_C(0))<SUB>2080</SUB>> ]
+"10536" [label = <(load,prev_bad_input_time.load(std::memory_order_relaxed))<SUB>2081</SUB>> ]
+"10546" [label = <(NanoTime,NanoTime())<SUB>2082</SUB>> ]
+"10548" [label = <(&lt;operator&gt;.logicalAnd,(prev_time == 0u || now - prev_time &gt;= kMinDelay) &amp;&amp;\012          prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>2083</SUB>> ]
+"10573" [label = <(&lt;operator&gt;.fieldAccess,replacement_utf.emplace)<SUB>2088</SUB>> ]
+"10577" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;reserve)<SUB>2089</SUB>> ]
+"10583" [label = <(VisitModifiedUtf8Chars,VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>2090</SUB>> ]
+"10590" [label = <(c_str,replacement_utf-&gt;c_str())<SUB>2100</SUB>> ]
+"10596" [label = <(length,replacement_utf-&gt;length())<SUB>2101</SUB>> ]
+"10608" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>2104</SUB>> ]
+"10613" [label = <(::max,::max())<SUB>2104</SUB>> ]
+"10624" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2107</SUB>> ]
+"10630" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2108</SUB>> ]
+"10633" [label = <(FIELD_IDENTIFIER,AllocFromModifiedUtf8,AllocFromModifiedUtf8)<SUB>2108</SUB>> ]
+"10635" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2108</SUB>> ]
+"10644" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2109</SUB>> ]
+"10461" [label = <(UNKNOWN,uint32_t,uint32_t)<SUB>2060</SUB>> ]
+"10462" [label = <(&lt;operator&gt;.greaterThan,std::numeric_limits&lt;int32_t&gt;::max())<SUB>2060</SUB>> ]
+"10477" [label = <(&lt;operator&gt;.fieldAccess,android::base::StringPrintf)<SUB>2065</SUB>> ]
+"10489" [label = <(Self,soa.Self())<SUB>2067</SUB>> ]
+"10493" [label = <(FIELD_IDENTIFIER,ThrowOutOfMemoryError,ThrowOutOfMemoryError)<SUB>2067</SUB>> ]
+"10495" [label = <(&lt;operator&gt;.fieldAccess,error.c_str)<SUB>2067</SUB>> ]
+"10537" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.load)<SUB>2081</SUB>> ]
+"10540" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>2081</SUB>> ]
+"10549" [label = <(&lt;operator&gt;.logicalOr,prev_time == 0u || now - prev_time &gt;= kMinDelay)<SUB>2083</SUB>> ]
+"10558" [label = <(compare_exchange_strong,prev_bad_input_time.compare_exchange_strong(prev_time, now, std::memory_order_relaxed))<SUB>2084</SUB>> ]
+"10568" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR) &lt;&lt; &quot;Invalid UTF-8 input to JNI::NewStringUTF()&quot;)<SUB>2085</SUB>> ]
+"10575" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>2088</SUB>> ]
+"10579" [label = <(FIELD_IDENTIFIER,reserve,reserve)<SUB>2089</SUB>> ]
+"10586" [label = <(METHOD_REF,ANY anonymous_lambda_22 (const char* ptr,size_t length),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>2093</SUB>> ]
+"10587" [label = <(METHOD_REF,ANY anonymous_lambda_23 (),VisitModifiedUtf8Chars(\012          utf,\012          utf8_length,\012 /*good=*/ [&amp;](const char* ptr, size_t length) {\012            replacement_utf-&gt;append(ptr, length);\012 },\012 /*bad=*/ [&amp;]() {\012            replacement_utf-&gt;append(kBadUtf8ReplacementChar, sizeof(kBadUtf8ReplacementChar) - 1u);\012 return false; // Continue processing.\012 }))<SUB>2096</SUB>> ]
+"10591" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;c_str)<SUB>2100</SUB>> ]
+"10597" [label = <(&lt;operator&gt;.indirectFieldAccess,replacement_utf-&gt;length)<SUB>2101</SUB>> ]
+"10609" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>2104</SUB>> ]
+"10614" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>2104</SUB>> ]
+"10626" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2107</SUB>> ]
+"10637" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2108</SUB>> ]
+"10646" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2109</SUB>> ]
+"10463" [label = <(&lt;operator&gt;.lessThan,std::numeric_limits&lt;int32_t)<SUB>2060</SUB>> ]
+"10468" [label = <(::max,::max())<SUB>2060</SUB>> ]
+"10478" [label = <(&lt;operator&gt;.fieldAccess,android::base)<SUB>2065</SUB>> ]
+"10481" [label = <(FIELD_IDENTIFIER,StringPrintf,StringPrintf)<SUB>2065</SUB>> ]
+"10490" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2067</SUB>> ]
+"10497" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2067</SUB>> ]
+"10539" [label = <(FIELD_IDENTIFIER,load,load)<SUB>2081</SUB>> ]
+"10542" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>2081</SUB>> ]
+"10550" [label = <(&lt;operator&gt;.equals,prev_time == 0u)<SUB>2083</SUB>> ]
+"10553" [label = <(&lt;operator&gt;.greaterEqualsThan,now - prev_time &gt;= kMinDelay)<SUB>2083</SUB>> ]
+"10559" [label = <(&lt;operator&gt;.fieldAccess,prev_bad_input_time.compare_exchange_strong)<SUB>2084</SUB>> ]
+"10564" [label = <(&lt;operator&gt;.fieldAccess,std::memory_order_relaxed)<SUB>2084</SUB>> ]
+"10569" [label = <(LOG,LOG(ERROR))<SUB>2085</SUB>> ]
+"10593" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2100</SUB>> ]
+"10599" [label = <(FIELD_IDENTIFIER,length,length)<SUB>2101</SUB>> ]
+"10611" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>2104</SUB>> ]
+"10616" [label = <(FIELD_IDENTIFIER,max,max)<SUB>2104</SUB>> ]
+"10464" [label = <(&lt;operator&gt;.fieldAccess,std::numeric_limits)<SUB>2060</SUB>> ]
+"10469" [label = <(&lt;operator&gt;.fieldAccess,::max)<SUB>2060</SUB>> ]
+"10492" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2067</SUB>> ]
+"10554" [label = <(&lt;operator&gt;.subtraction,now - prev_time)<SUB>2083</SUB>> ]
+"10561" [label = <(FIELD_IDENTIFIER,compare_exchange_strong,compare_exchange_strong)<SUB>2084</SUB>> ]
+"10566" [label = <(FIELD_IDENTIFIER,memory_order_relaxed,memory_order_relaxed)<SUB>2084</SUB>> ]
+"10466" [label = <(FIELD_IDENTIFIER,numeric_limits,numeric_limits)<SUB>2060</SUB>> ]
+"10471" [label = <(FIELD_IDENTIFIER,max,max)<SUB>2060</SUB>> ]
+"10440" [label = <(METHOD,NewStringUTF)<SUB>2050</SUB>> ]
+"10649" [label = <(METHOD_RETURN,jstring)<SUB>2050</SUB>> ]
   "10452" -> "10461" 
   "10500" -> "10510" 
   "10510" -> "10511" 
   "10511" -> "10512" 
   "10512" -> "10513" 
   "10513" -> "10517" 
-  "10603" -> "10609" 
-  "10606" -> "10621" 
-  "10621" -> "10629" 
-  "10623" -> "10649" 
-  "10644" -> "10652" 
+  "10600" -> "10606" 
+  "10603" -> "10618" 
+  "10618" -> "10626" 
+  "10620" -> "10646" 
+  "10641" -> "10649" 
   "10445" -> "10449" 
   "10445" -> "10454" 
   "10454" -> "10452" 
   "10457" -> "10478" 
   "10457" -> "10504" 
   "10501" -> "10500" 
-  "10515" -> "10524" 
-  "10515" -> "10603" 
-  "10608" -> "10606" 
-  "10624" -> "10633" 
-  "10631" -> "10623" 
-  "10645" -> "10644" 
-  "10449" -> "10652" 
+  "10515" -> "10527" 
+  "10515" -> "10600" 
+  "10605" -> "10603" 
+  "10621" -> "10630" 
+  "10628" -> "10620" 
+  "10642" -> "10641" 
+  "10449" -> "10649" 
   "10458" -> "10457" 
   "10474" -> "10485" 
   "10485" -> "10492" 
   "10487" -> "10498" 
-  "10498" -> "10652" 
+  "10498" -> "10649" 
   "10502" -> "10507" 
   "10505" -> "10501" 
   "10516" -> "10515" 
-  "10524" -> "10530" 
-  "10528" -> "10534" 
-  "10533" -> "10542" 
-  "10537" -> "10549" 
-  "10547" -> "10553" 
-  "10575" -> "10582" 
-  "10579" -> "10589" 
-  "10584" -> "10596" 
-  "10591" -> "10602" 
-  "10597" -> "10603" 
-  "10609" -> "10614" 
-  "10610" -> "10608" 
-  "10625" -> "10624" 
-  "10632" -> "10640" 
-  "10637" -> "10631" 
-  "10646" -> "10645" 
+  "10525" -> "10531" 
+  "10530" -> "10539" 
+  "10534" -> "10546" 
+  "10544" -> "10550" 
+  "10572" -> "10579" 
+  "10576" -> "10586" 
+  "10581" -> "10593" 
+  "10588" -> "10599" 
+  "10594" -> "10600" 
+  "10606" -> "10611" 
+  "10607" -> "10605" 
+  "10622" -> "10621" 
+  "10629" -> "10637" 
+  "10634" -> "10628" 
+  "10643" -> "10642" 
   "10460" -> "10458" 
   "10476" -> "10474" 
   "10488" -> "10497" 
@@ -175,71 +173,71 @@
   "10517" -> "10516" 
   "10517" -> "10520" 
   "10520" -> "10516" 
-  "10530" -> "10528" 
-  "10534" -> "10533" 
-  "10539" -> "10537" 
-  "10549" -> "10547" 
-  "10551" -> "10572" 
-  "10551" -> "10578" 
-  "10576" -> "10575" 
-  "10580" -> "10579" 
-  "10586" -> "10584" 
-  "10593" -> "10591" 
-  "10599" -> "10597" 
-  "10611" -> "10619" 
-  "10616" -> "10610" 
-  "10627" -> "10625" 
-  "10633" -> "10636" 
-  "10636" -> "10632" 
-  "10638" -> "10637" 
-  "10647" -> "10646" 
+  "10527" -> "10525" 
+  "10531" -> "10530" 
+  "10536" -> "10534" 
+  "10546" -> "10544" 
+  "10548" -> "10569" 
+  "10548" -> "10575" 
+  "10573" -> "10572" 
+  "10577" -> "10576" 
+  "10583" -> "10581" 
+  "10590" -> "10588" 
+  "10596" -> "10594" 
+  "10608" -> "10616" 
+  "10613" -> "10607" 
+  "10624" -> "10622" 
+  "10630" -> "10633" 
+  "10633" -> "10629" 
+  "10635" -> "10634" 
+  "10644" -> "10643" 
   "10461" -> "10466" 
   "10462" -> "10460" 
   "10477" -> "10476" 
   "10489" -> "10493" 
   "10493" -> "10488" 
   "10495" -> "10494" 
-  "10540" -> "10545" 
-  "10543" -> "10539" 
-  "10552" -> "10551" 
-  "10552" -> "10564" 
-  "10561" -> "10551" 
-  "10571" -> "10578" 
-  "10578" -> "10576" 
-  "10582" -> "10580" 
-  "10589" -> "10590" 
-  "10590" -> "10586" 
-  "10594" -> "10593" 
-  "10600" -> "10599" 
-  "10612" -> "10611" 
-  "10617" -> "10616" 
-  "10629" -> "10627" 
-  "10640" -> "10638" 
-  "10649" -> "10647" 
+  "10537" -> "10542" 
+  "10540" -> "10536" 
+  "10549" -> "10548" 
+  "10549" -> "10561" 
+  "10558" -> "10548" 
+  "10568" -> "10575" 
+  "10575" -> "10573" 
+  "10579" -> "10577" 
+  "10586" -> "10587" 
+  "10587" -> "10583" 
+  "10591" -> "10590" 
+  "10597" -> "10596" 
+  "10609" -> "10608" 
+  "10614" -> "10613" 
+  "10626" -> "10624" 
+  "10637" -> "10635" 
+  "10646" -> "10644" 
   "10463" -> "10471" 
   "10468" -> "10462" 
   "10478" -> "10481" 
   "10481" -> "10477" 
   "10490" -> "10489" 
   "10497" -> "10495" 
+  "10539" -> "10537" 
   "10542" -> "10540" 
-  "10545" -> "10543" 
-  "10553" -> "10552" 
-  "10553" -> "10557" 
-  "10556" -> "10552" 
-  "10562" -> "10569" 
-  "10567" -> "10561" 
-  "10572" -> "10571" 
-  "10596" -> "10594" 
-  "10602" -> "10600" 
-  "10614" -> "10612" 
-  "10619" -> "10617" 
+  "10550" -> "10549" 
+  "10550" -> "10554" 
+  "10553" -> "10549" 
+  "10559" -> "10566" 
+  "10564" -> "10558" 
+  "10569" -> "10568" 
+  "10593" -> "10591" 
+  "10599" -> "10597" 
+  "10611" -> "10609" 
+  "10616" -> "10614" 
   "10464" -> "10463" 
   "10469" -> "10468" 
   "10492" -> "10490" 
-  "10557" -> "10556" 
-  "10564" -> "10562" 
-  "10569" -> "10567" 
+  "10554" -> "10553" 
+  "10561" -> "10559" 
+  "10566" -> "10564" 
   "10466" -> "10464" 
   "10471" -> "10469" 
   "10440" -> "10445" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/202-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/202-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/202-cfg.dot	2023-06-07 19:34:48.407388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/202-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,45 +1,45 @@
 digraph "GetStringLength" {  
-"10658" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>2115</SUB>> ]
-"10677" [label = <(soa,soa(env))<SUB>2116</SUB>> ]
-"10679" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();)<SUB>2117</SUB>> ]
-"10680" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength())<SUB>2117</SUB>> ]
-"10681" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2117</SUB>> ]
-"10688" [label = <(GetLength,(java_string)-&gt;GetLength())<SUB>2117</SUB>> ]
-"10662" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2115</SUB>> ]
-"10682" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2117</SUB>> ]
-"10685" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2117</SUB>> ]
-"10689" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetLength)<SUB>2117</SUB>> ]
-"10663" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2115</SUB>> ]
-"10667" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2115</SUB>> ]
-"10674" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>2115</SUB>> ]
-"10684" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2117</SUB>> ]
-"10687" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2117</SUB>> ]
-"10691" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2117</SUB>> ]
-"10668" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2115</SUB>> ]
-"10669" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2115</SUB>> ]
-"10671" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2115</SUB>> ]
-"10654" [label = <(METHOD,GetStringLength)<SUB>2114</SUB>> ]
-"10692" [label = <(METHOD_RETURN,jsize)<SUB>2114</SUB>> ]
-  "10658" -> "10663" 
-  "10658" -> "10677" 
-  "10677" -> "10684" 
-  "10679" -> "10692" 
-  "10680" -> "10679" 
-  "10681" -> "10691" 
-  "10688" -> "10680" 
-  "10662" -> "10669" 
-  "10662" -> "10677" 
-  "10682" -> "10687" 
-  "10685" -> "10681" 
-  "10689" -> "10688" 
-  "10663" -> "10662" 
-  "10667" -> "10674" 
-  "10674" -> "10692" 
+"10655" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>2113</SUB>> ]
+"10674" [label = <(soa,soa(env))<SUB>2114</SUB>> ]
+"10676" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength();)<SUB>2115</SUB>> ]
+"10677" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetLength())<SUB>2115</SUB>> ]
+"10678" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2115</SUB>> ]
+"10685" [label = <(GetLength,(java_string)-&gt;GetLength())<SUB>2115</SUB>> ]
+"10659" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2113</SUB>> ]
+"10679" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2115</SUB>> ]
+"10682" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2115</SUB>> ]
+"10686" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetLength)<SUB>2115</SUB>> ]
+"10660" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2113</SUB>> ]
+"10664" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2113</SUB>> ]
+"10671" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>2113</SUB>> ]
+"10681" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2115</SUB>> ]
+"10684" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2115</SUB>> ]
+"10688" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2115</SUB>> ]
+"10665" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2113</SUB>> ]
+"10666" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2113</SUB>> ]
+"10668" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2113</SUB>> ]
+"10651" [label = <(METHOD,GetStringLength)<SUB>2112</SUB>> ]
+"10689" [label = <(METHOD_RETURN,jsize)<SUB>2112</SUB>> ]
+  "10655" -> "10660" 
+  "10655" -> "10674" 
+  "10674" -> "10681" 
+  "10676" -> "10689" 
+  "10677" -> "10676" 
+  "10678" -> "10688" 
+  "10685" -> "10677" 
+  "10659" -> "10666" 
+  "10659" -> "10674" 
+  "10679" -> "10684" 
+  "10682" -> "10678" 
+  "10686" -> "10685" 
+  "10660" -> "10659" 
+  "10664" -> "10671" 
+  "10671" -> "10689" 
+  "10681" -> "10679" 
   "10684" -> "10682" 
-  "10687" -> "10685" 
-  "10691" -> "10689" 
-  "10668" -> "10667" 
-  "10669" -> "10671" 
-  "10671" -> "10668" 
-  "10654" -> "10658" 
+  "10688" -> "10686" 
+  "10665" -> "10664" 
+  "10666" -> "10668" 
+  "10668" -> "10665" 
+  "10651" -> "10655" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/203-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/203-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/203-cfg.dot	2023-06-07 19:34:48.407388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/203-cfg.dot	2023-06-07 19:34:54.997387777 +0330
@@ -1,45 +1,45 @@
 digraph "GetStringUTFLength" {  
-"10698" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>2121</SUB>> ]
-"10717" [label = <(soa,soa(env))<SUB>2122</SUB>> ]
-"10719" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();)<SUB>2123</SUB>> ]
-"10720" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength())<SUB>2123</SUB>> ]
-"10721" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2123</SUB>> ]
-"10728" [label = <(GetUtfLength,(java_string)-&gt;GetUtfLength())<SUB>2123</SUB>> ]
-"10702" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2121</SUB>> ]
-"10722" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2123</SUB>> ]
-"10725" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2123</SUB>> ]
-"10729" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetUtfLength)<SUB>2123</SUB>> ]
-"10703" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2121</SUB>> ]
-"10707" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2121</SUB>> ]
-"10714" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>2121</SUB>> ]
-"10724" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2123</SUB>> ]
-"10727" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2123</SUB>> ]
-"10731" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>2123</SUB>> ]
-"10708" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2121</SUB>> ]
-"10709" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2121</SUB>> ]
-"10711" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2121</SUB>> ]
-"10694" [label = <(METHOD,GetStringUTFLength)<SUB>2120</SUB>> ]
-"10732" [label = <(METHOD_RETURN,jsize)<SUB>2120</SUB>> ]
-  "10698" -> "10703" 
-  "10698" -> "10717" 
-  "10717" -> "10724" 
-  "10719" -> "10732" 
-  "10720" -> "10719" 
-  "10721" -> "10731" 
-  "10728" -> "10720" 
-  "10702" -> "10709" 
-  "10702" -> "10717" 
-  "10722" -> "10727" 
-  "10725" -> "10721" 
-  "10729" -> "10728" 
-  "10703" -> "10702" 
-  "10707" -> "10714" 
-  "10714" -> "10732" 
+"10695" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>2119</SUB>> ]
+"10714" [label = <(soa,soa(env))<SUB>2120</SUB>> ]
+"10716" [label = <(RETURN,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();,return soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength();)<SUB>2121</SUB>> ]
+"10717" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string)-&gt;GetUtfLength())<SUB>2121</SUB>> ]
+"10718" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2121</SUB>> ]
+"10725" [label = <(GetUtfLength,(java_string)-&gt;GetUtfLength())<SUB>2121</SUB>> ]
+"10699" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2119</SUB>> ]
+"10719" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2121</SUB>> ]
+"10722" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2121</SUB>> ]
+"10726" [label = <(&lt;operator&gt;.indirectFieldAccess,(java_string)-&gt;GetUtfLength)<SUB>2121</SUB>> ]
+"10700" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2119</SUB>> ]
+"10704" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2119</SUB>> ]
+"10711" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))<SUB>2119</SUB>> ]
+"10721" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2121</SUB>> ]
+"10724" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2121</SUB>> ]
+"10728" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>2121</SUB>> ]
+"10705" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2119</SUB>> ]
+"10706" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2119</SUB>> ]
+"10708" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2119</SUB>> ]
+"10691" [label = <(METHOD,GetStringUTFLength)<SUB>2118</SUB>> ]
+"10729" [label = <(METHOD_RETURN,jsize)<SUB>2118</SUB>> ]
+  "10695" -> "10700" 
+  "10695" -> "10714" 
+  "10714" -> "10721" 
+  "10716" -> "10729" 
+  "10717" -> "10716" 
+  "10718" -> "10728" 
+  "10725" -> "10717" 
+  "10699" -> "10706" 
+  "10699" -> "10714" 
+  "10719" -> "10724" 
+  "10722" -> "10718" 
+  "10726" -> "10725" 
+  "10700" -> "10699" 
+  "10704" -> "10711" 
+  "10711" -> "10729" 
+  "10721" -> "10719" 
   "10724" -> "10722" 
-  "10727" -> "10725" 
-  "10731" -> "10729" 
-  "10708" -> "10707" 
-  "10709" -> "10711" 
-  "10711" -> "10708" 
-  "10694" -> "10698" 
+  "10728" -> "10726" 
+  "10705" -> "10704" 
+  "10706" -> "10708" 
+  "10708" -> "10705" 
+  "10691" -> "10695" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/204-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/204-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/204-cfg.dot	2023-06-07 19:34:48.407388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/204-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,149 +1,149 @@
 digraph "GetStringRegion" {  
-"10741" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2128</SUB>> ]
-"10759" [label = <(soa,soa(env))<SUB>2129</SUB>> ]
-"10761" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2130</SUB>> ]
-"10762" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2130</SUB>> ]
-"10769" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2130</SUB>> ]
-"10779" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>2131</SUB>> ]
-"10763" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2130</SUB>> ]
-"10770" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2130</SUB>> ]
-"10780" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2131</SUB>> ]
-"10787" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>2131</SUB>> ]
-"10796" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>2132</SUB>> ]
-"10745" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2128</SUB>> ]
-"10765" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2130</SUB>> ]
-"10771" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2130</SUB>> ]
-"10774" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2130</SUB>> ]
-"10781" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2131</SUB>> ]
-"10784" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2131</SUB>> ]
-"10789" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>2131</SUB>> ]
-"10800" [label = <(GetLength,s-&gt;GetLength())<SUB>2132</SUB>> ]
-"10806" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2134</SUB>> ]
-"10746" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2128</SUB>> ]
-"10750" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2128</SUB>> ]
-"10757" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2128</SUB>> ]
-"10767" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2130</SUB>> ]
-"10773" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2130</SUB>> ]
-"10776" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2130</SUB>> ]
-"10790" [label = <(GetLength,s-&gt;GetLength())<SUB>2131</SUB>> ]
-"10801" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2132</SUB>> ]
-"10829" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2135</SUB>> ]
-"10751" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2128</SUB>> ]
-"10791" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2131</SUB>> ]
-"10803" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2132</SUB>> ]
-"10830" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2135</SUB>> ]
-"10752" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2128</SUB>> ]
-"10754" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2128</SUB>> ]
-"10793" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2131</SUB>> ]
-"10811" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2134</SUB>> ]
-"10832" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2135</SUB>> ]
-"10840" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2136</SUB>> ]
-"10843" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2136</SUB>> ]
-"10862" [label = <(&lt;operator&gt;.assignment,* chars = static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2140</SUB>> ]
-"10870" [label = <(memcpy,memcpy(buf, chars + start, length * sizeof(jchar)))<SUB>2141</SUB>> ]
-"10812" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2134</SUB>> ]
-"10820" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2134</SUB>> ]
-"10827" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2134</SUB>> ]
-"10837" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2136</SUB>> ]
-"10846" [label = <(&lt;operator&gt;.assignment,buf[i] = static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>2137</SUB>> ]
-"10864" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2140</SUB>> ]
-"10872" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>2141</SUB>> ]
-"10875" [label = <(&lt;operator&gt;.multiplication,length * sizeof(jchar))<SUB>2141</SUB>> ]
-"10813" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2134</SUB>> ]
-"10816" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2134</SUB>> ]
-"10821" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2134</SUB>> ]
-"10847" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>2137</SUB>> ]
-"10850" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>2137</SUB>> ]
-"10865" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2140</SUB>> ]
-"10866" [label = <(GetValue,s-&gt;GetValue())<SUB>2140</SUB>> ]
-"10877" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>2141</SUB>> ]
-"10822" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2134</SUB>> ]
-"10824" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2134</SUB>> ]
-"10851" [label = <(UNKNOWN,jchar,jchar)<SUB>2137</SUB>> ]
-"10852" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>2137</SUB>> ]
-"10867" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2140</SUB>> ]
-"10853" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2137</SUB>> ]
-"10856" [label = <(&lt;operator&gt;.addition,start+i)<SUB>2137</SUB>> ]
-"10869" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2140</SUB>> ]
-"10855" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2137</SUB>> ]
-"10734" [label = <(METHOD,GetStringRegion)<SUB>2126</SUB>> ]
-"10879" [label = <(METHOD_RETURN,void)<SUB>2126</SUB>> ]
-  "10741" -> "10746" 
-  "10741" -> "10759" 
-  "10759" -> "10767" 
-  "10761" -> "10781" 
-  "10762" -> "10773" 
-  "10769" -> "10761" 
-  "10779" -> "10803" 
-  "10779" -> "10806" 
-  "10763" -> "10762" 
-  "10770" -> "10769" 
-  "10780" -> "10779" 
-  "10780" -> "10793" 
-  "10787" -> "10779" 
-  "10796" -> "10879" 
-  "10745" -> "10752" 
-  "10745" -> "10759" 
-  "10765" -> "10763" 
-  "10771" -> "10776" 
-  "10774" -> "10770" 
-  "10781" -> "10780" 
-  "10781" -> "10784" 
-  "10784" -> "10780" 
-  "10789" -> "10787" 
-  "10800" -> "10796" 
-  "10806" -> "10813" 
-  "10806" -> "10832" 
-  "10746" -> "10745" 
-  "10750" -> "10757" 
-  "10757" -> "10879" 
-  "10767" -> "10765" 
+"10738" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2126</SUB>> ]
+"10756" [label = <(soa,soa(env))<SUB>2127</SUB>> ]
+"10758" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2128</SUB>> ]
+"10759" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2128</SUB>> ]
+"10766" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2128</SUB>> ]
+"10776" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>2129</SUB>> ]
+"10760" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2128</SUB>> ]
+"10767" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2128</SUB>> ]
+"10777" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2129</SUB>> ]
+"10784" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>2129</SUB>> ]
+"10793" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>2130</SUB>> ]
+"10742" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2126</SUB>> ]
+"10762" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2128</SUB>> ]
+"10768" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2128</SUB>> ]
+"10771" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2128</SUB>> ]
+"10778" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2129</SUB>> ]
+"10781" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2129</SUB>> ]
+"10786" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>2129</SUB>> ]
+"10797" [label = <(GetLength,s-&gt;GetLength())<SUB>2130</SUB>> ]
+"10803" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2132</SUB>> ]
+"10743" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2126</SUB>> ]
+"10747" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2126</SUB>> ]
+"10754" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2126</SUB>> ]
+"10764" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2128</SUB>> ]
+"10770" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2128</SUB>> ]
+"10773" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2128</SUB>> ]
+"10787" [label = <(GetLength,s-&gt;GetLength())<SUB>2129</SUB>> ]
+"10798" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2130</SUB>> ]
+"10826" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2133</SUB>> ]
+"10748" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2126</SUB>> ]
+"10788" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2129</SUB>> ]
+"10800" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2130</SUB>> ]
+"10827" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2133</SUB>> ]
+"10749" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2126</SUB>> ]
+"10751" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2126</SUB>> ]
+"10790" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2129</SUB>> ]
+"10808" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2132</SUB>> ]
+"10829" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2133</SUB>> ]
+"10837" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2134</SUB>> ]
+"10840" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2134</SUB>> ]
+"10859" [label = <(&lt;operator&gt;.assignment,* chars = static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2138</SUB>> ]
+"10867" [label = <(memcpy,memcpy(buf, chars + start, length * sizeof(jchar)))<SUB>2139</SUB>> ]
+"10809" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2132</SUB>> ]
+"10817" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2132</SUB>> ]
+"10824" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2132</SUB>> ]
+"10834" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2134</SUB>> ]
+"10843" [label = <(&lt;operator&gt;.assignment,buf[i] = static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>2135</SUB>> ]
+"10861" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2138</SUB>> ]
+"10869" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>2139</SUB>> ]
+"10872" [label = <(&lt;operator&gt;.multiplication,length * sizeof(jchar))<SUB>2139</SUB>> ]
+"10810" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2132</SUB>> ]
+"10813" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2132</SUB>> ]
+"10818" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2132</SUB>> ]
+"10844" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>2135</SUB>> ]
+"10847" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar&gt;(s-&gt;CharAt(start+i)))<SUB>2135</SUB>> ]
+"10862" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2138</SUB>> ]
+"10863" [label = <(GetValue,s-&gt;GetValue())<SUB>2138</SUB>> ]
+"10874" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>2139</SUB>> ]
+"10819" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2132</SUB>> ]
+"10821" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2132</SUB>> ]
+"10848" [label = <(UNKNOWN,jchar,jchar)<SUB>2135</SUB>> ]
+"10849" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>2135</SUB>> ]
+"10864" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2138</SUB>> ]
+"10850" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2135</SUB>> ]
+"10853" [label = <(&lt;operator&gt;.addition,start+i)<SUB>2135</SUB>> ]
+"10866" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2138</SUB>> ]
+"10852" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2135</SUB>> ]
+"10731" [label = <(METHOD,GetStringRegion)<SUB>2124</SUB>> ]
+"10876" [label = <(METHOD_RETURN,void)<SUB>2124</SUB>> ]
+  "10738" -> "10743" 
+  "10738" -> "10756" 
+  "10756" -> "10764" 
+  "10758" -> "10778" 
+  "10759" -> "10770" 
+  "10766" -> "10758" 
+  "10776" -> "10800" 
+  "10776" -> "10803" 
+  "10760" -> "10759" 
+  "10767" -> "10766" 
+  "10777" -> "10776" 
+  "10777" -> "10790" 
+  "10784" -> "10776" 
+  "10793" -> "10876" 
+  "10742" -> "10749" 
+  "10742" -> "10756" 
+  "10762" -> "10760" 
+  "10768" -> "10773" 
+  "10771" -> "10767" 
+  "10778" -> "10777" 
+  "10778" -> "10781" 
+  "10781" -> "10777" 
+  "10786" -> "10784" 
+  "10797" -> "10793" 
+  "10803" -> "10810" 
+  "10803" -> "10829" 
+  "10743" -> "10742" 
+  "10747" -> "10754" 
+  "10754" -> "10876" 
+  "10764" -> "10762" 
+  "10770" -> "10768" 
   "10773" -> "10771" 
-  "10776" -> "10774" 
-  "10790" -> "10789" 
-  "10801" -> "10800" 
-  "10829" -> "10837" 
-  "10829" -> "10865" 
-  "10751" -> "10750" 
-  "10791" -> "10790" 
-  "10803" -> "10801" 
-  "10830" -> "10829" 
-  "10752" -> "10754" 
-  "10754" -> "10751" 
-  "10793" -> "10791" 
-  "10811" -> "10822" 
-  "10811" -> "10832" 
-  "10832" -> "10830" 
-  "10840" -> "10879" 
-  "10840" -> "10847" 
+  "10787" -> "10786" 
+  "10798" -> "10797" 
+  "10826" -> "10834" 
+  "10826" -> "10862" 
+  "10748" -> "10747" 
+  "10788" -> "10787" 
+  "10800" -> "10798" 
+  "10827" -> "10826" 
+  "10749" -> "10751" 
+  "10751" -> "10748" 
+  "10790" -> "10788" 
+  "10808" -> "10819" 
+  "10808" -> "10829" 
+  "10829" -> "10827" 
+  "10837" -> "10876" 
+  "10837" -> "10844" 
+  "10840" -> "10837" 
+  "10859" -> "10869" 
+  "10867" -> "10876" 
+  "10809" -> "10808" 
+  "10817" -> "10824" 
+  "10824" -> "10876" 
+  "10834" -> "10837" 
   "10843" -> "10840" 
-  "10862" -> "10872" 
-  "10870" -> "10879" 
-  "10812" -> "10811" 
-  "10820" -> "10827" 
-  "10827" -> "10879" 
-  "10837" -> "10840" 
-  "10846" -> "10843" 
-  "10864" -> "10862" 
-  "10872" -> "10877" 
-  "10875" -> "10870" 
-  "10813" -> "10812" 
-  "10813" -> "10816" 
-  "10816" -> "10812" 
-  "10821" -> "10820" 
-  "10847" -> "10851" 
-  "10850" -> "10846" 
-  "10865" -> "10869" 
+  "10861" -> "10859" 
+  "10869" -> "10874" 
+  "10872" -> "10867" 
+  "10810" -> "10809" 
+  "10810" -> "10813" 
+  "10813" -> "10809" 
+  "10818" -> "10817" 
+  "10844" -> "10848" 
+  "10847" -> "10843" 
+  "10862" -> "10866" 
+  "10863" -> "10861" 
+  "10874" -> "10872" 
+  "10819" -> "10821" 
+  "10821" -> "10818" 
+  "10848" -> "10852" 
+  "10849" -> "10847" 
+  "10864" -> "10863" 
+  "10850" -> "10853" 
+  "10853" -> "10849" 
   "10866" -> "10864" 
-  "10877" -> "10875" 
-  "10822" -> "10824" 
-  "10824" -> "10821" 
-  "10851" -> "10855" 
   "10852" -> "10850" 
-  "10867" -> "10866" 
-  "10853" -> "10856" 
-  "10856" -> "10852" 
-  "10869" -> "10867" 
-  "10855" -> "10853" 
-  "10734" -> "10741" 
+  "10731" -> "10738" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/205-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/205-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/205-cfg.dot	2023-06-07 19:34:48.407388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/205-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,143 +1,143 @@
 digraph "GetStringUTFRegion" {  
-"10888" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2148</SUB>> ]
-"10906" [label = <(soa,soa(env))<SUB>2149</SUB>> ]
-"10908" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2150</SUB>> ]
-"10909" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2150</SUB>> ]
-"10916" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2150</SUB>> ]
-"10926" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>2151</SUB>> ]
-"10910" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2150</SUB>> ]
-"10917" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2150</SUB>> ]
-"10927" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2151</SUB>> ]
-"10934" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>2151</SUB>> ]
-"10943" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>2152</SUB>> ]
-"10892" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2148</SUB>> ]
-"10912" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2150</SUB>> ]
-"10918" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2150</SUB>> ]
-"10921" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2150</SUB>> ]
-"10928" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2151</SUB>> ]
-"10931" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2151</SUB>> ]
-"10936" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>2151</SUB>> ]
-"10947" [label = <(GetLength,s-&gt;GetLength())<SUB>2152</SUB>> ]
-"10953" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2154</SUB>> ]
-"10893" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2148</SUB>> ]
-"10897" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2148</SUB>> ]
-"10904" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2148</SUB>> ]
-"10914" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2150</SUB>> ]
-"10920" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2150</SUB>> ]
-"10923" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2150</SUB>> ]
-"10937" [label = <(GetLength,s-&gt;GetLength())<SUB>2151</SUB>> ]
-"10948" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2152</SUB>> ]
-"10976" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2155</SUB>> ]
-"10898" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2148</SUB>> ]
-"10938" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2151</SUB>> ]
-"10950" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2152</SUB>> ]
-"10977" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2155</SUB>> ]
-"10899" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2148</SUB>> ]
-"10901" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2148</SUB>> ]
-"10940" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2151</SUB>> ]
-"10958" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2154</SUB>> ]
-"10979" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2155</SUB>> ]
-"10987" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2156</SUB>> ]
-"10990" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2156</SUB>> ]
-"11007" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>2160</SUB>> ]
-"11014" [label = <(&lt;operator&gt;.assignment,bytes = CountUtf8Bytes(chars + start, length))<SUB>2161</SUB>> ]
-"11021" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(buf, bytes, chars + start, length))<SUB>2162</SUB>> ]
-"10959" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2154</SUB>> ]
-"10967" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2154</SUB>> ]
-"10974" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2154</SUB>> ]
-"10984" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2156</SUB>> ]
-"10993" [label = <(&lt;operator&gt;.assignment,buf[i] = s-&gt;CharAt(start+i))<SUB>2157</SUB>> ]
-"11009" [label = <(GetValue,s-&gt;GetValue())<SUB>2160</SUB>> ]
-"11016" [label = <(CountUtf8Bytes,CountUtf8Bytes(chars + start, length))<SUB>2161</SUB>> ]
-"11024" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>2162</SUB>> ]
-"10960" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2154</SUB>> ]
-"10963" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2154</SUB>> ]
-"10968" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2154</SUB>> ]
-"10994" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>2157</SUB>> ]
-"10997" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>2157</SUB>> ]
-"11010" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2160</SUB>> ]
-"11017" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>2161</SUB>> ]
-"10969" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2154</SUB>> ]
-"10971" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2154</SUB>> ]
-"10998" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2157</SUB>> ]
-"11001" [label = <(&lt;operator&gt;.addition,start+i)<SUB>2157</SUB>> ]
-"11012" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2160</SUB>> ]
-"11000" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2157</SUB>> ]
-"10881" [label = <(METHOD,GetStringUTFRegion)<SUB>2146</SUB>> ]
-"11028" [label = <(METHOD_RETURN,void)<SUB>2146</SUB>> ]
-  "10888" -> "10893" 
-  "10888" -> "10906" 
-  "10906" -> "10914" 
-  "10908" -> "10928" 
-  "10909" -> "10920" 
-  "10916" -> "10908" 
-  "10926" -> "10950" 
-  "10926" -> "10953" 
-  "10910" -> "10909" 
-  "10917" -> "10916" 
-  "10927" -> "10926" 
-  "10927" -> "10940" 
-  "10934" -> "10926" 
-  "10943" -> "11028" 
-  "10892" -> "10899" 
-  "10892" -> "10906" 
-  "10912" -> "10910" 
-  "10918" -> "10923" 
-  "10921" -> "10917" 
-  "10928" -> "10927" 
-  "10928" -> "10931" 
-  "10931" -> "10927" 
-  "10936" -> "10934" 
-  "10947" -> "10943" 
-  "10953" -> "10960" 
-  "10953" -> "10979" 
-  "10893" -> "10892" 
-  "10897" -> "10904" 
-  "10904" -> "11028" 
-  "10914" -> "10912" 
+"10885" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2146</SUB>> ]
+"10903" [label = <(soa,soa(env))<SUB>2147</SUB>> ]
+"10905" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2148</SUB>> ]
+"10906" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2148</SUB>> ]
+"10913" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2148</SUB>> ]
+"10923" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; s-&gt;GetLength() - start)<SUB>2149</SUB>> ]
+"10907" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2148</SUB>> ]
+"10914" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2148</SUB>> ]
+"10924" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2149</SUB>> ]
+"10931" [label = <(&lt;operator&gt;.greaterThan,length &gt; s-&gt;GetLength() - start)<SUB>2149</SUB>> ]
+"10940" [label = <(ThrowSIOOBE,ThrowSIOOBE(soa, start, length, s-&gt;GetLength()))<SUB>2150</SUB>> ]
+"10889" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2146</SUB>> ]
+"10909" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2148</SUB>> ]
+"10915" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2148</SUB>> ]
+"10918" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2148</SUB>> ]
+"10925" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2149</SUB>> ]
+"10928" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2149</SUB>> ]
+"10933" [label = <(&lt;operator&gt;.subtraction,s-&gt;GetLength() - start)<SUB>2149</SUB>> ]
+"10944" [label = <(GetLength,s-&gt;GetLength())<SUB>2150</SUB>> ]
+"10950" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2152</SUB>> ]
+"10890" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2146</SUB>> ]
+"10894" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2146</SUB>> ]
+"10901" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2146</SUB>> ]
+"10911" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2148</SUB>> ]
+"10917" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2148</SUB>> ]
+"10920" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2148</SUB>> ]
+"10934" [label = <(GetLength,s-&gt;GetLength())<SUB>2149</SUB>> ]
+"10945" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2150</SUB>> ]
+"10973" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2153</SUB>> ]
+"10895" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2146</SUB>> ]
+"10935" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2149</SUB>> ]
+"10947" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2150</SUB>> ]
+"10974" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2153</SUB>> ]
+"10896" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2146</SUB>> ]
+"10898" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2146</SUB>> ]
+"10937" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2149</SUB>> ]
+"10955" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2152</SUB>> ]
+"10976" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2153</SUB>> ]
+"10984" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2154</SUB>> ]
+"10987" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2154</SUB>> ]
+"11004" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>2158</SUB>> ]
+"11011" [label = <(&lt;operator&gt;.assignment,bytes = CountUtf8Bytes(chars + start, length))<SUB>2159</SUB>> ]
+"11018" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(buf, bytes, chars + start, length))<SUB>2160</SUB>> ]
+"10956" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2152</SUB>> ]
+"10964" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2152</SUB>> ]
+"10971" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2152</SUB>> ]
+"10981" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2154</SUB>> ]
+"10990" [label = <(&lt;operator&gt;.assignment,buf[i] = s-&gt;CharAt(start+i))<SUB>2155</SUB>> ]
+"11006" [label = <(GetValue,s-&gt;GetValue())<SUB>2158</SUB>> ]
+"11013" [label = <(CountUtf8Bytes,CountUtf8Bytes(chars + start, length))<SUB>2159</SUB>> ]
+"11021" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>2160</SUB>> ]
+"10957" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2152</SUB>> ]
+"10960" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2152</SUB>> ]
+"10965" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2152</SUB>> ]
+"10991" [label = <(&lt;operator&gt;.indirectIndexAccess,buf[i])<SUB>2155</SUB>> ]
+"10994" [label = <(CharAt,s-&gt;CharAt(start+i))<SUB>2155</SUB>> ]
+"11007" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2158</SUB>> ]
+"11014" [label = <(&lt;operator&gt;.addition,chars + start)<SUB>2159</SUB>> ]
+"10966" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2152</SUB>> ]
+"10968" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2152</SUB>> ]
+"10995" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2155</SUB>> ]
+"10998" [label = <(&lt;operator&gt;.addition,start+i)<SUB>2155</SUB>> ]
+"11009" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2158</SUB>> ]
+"10997" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2155</SUB>> ]
+"10878" [label = <(METHOD,GetStringUTFRegion)<SUB>2144</SUB>> ]
+"11025" [label = <(METHOD_RETURN,void)<SUB>2144</SUB>> ]
+  "10885" -> "10890" 
+  "10885" -> "10903" 
+  "10903" -> "10911" 
+  "10905" -> "10925" 
+  "10906" -> "10917" 
+  "10913" -> "10905" 
+  "10923" -> "10947" 
+  "10923" -> "10950" 
+  "10907" -> "10906" 
+  "10914" -> "10913" 
+  "10924" -> "10923" 
+  "10924" -> "10937" 
+  "10931" -> "10923" 
+  "10940" -> "11025" 
+  "10889" -> "10896" 
+  "10889" -> "10903" 
+  "10909" -> "10907" 
+  "10915" -> "10920" 
+  "10918" -> "10914" 
+  "10925" -> "10924" 
+  "10925" -> "10928" 
+  "10928" -> "10924" 
+  "10933" -> "10931" 
+  "10944" -> "10940" 
+  "10950" -> "10957" 
+  "10950" -> "10976" 
+  "10890" -> "10889" 
+  "10894" -> "10901" 
+  "10901" -> "11025" 
+  "10911" -> "10909" 
+  "10917" -> "10915" 
   "10920" -> "10918" 
-  "10923" -> "10921" 
-  "10937" -> "10936" 
-  "10948" -> "10947" 
-  "10976" -> "10984" 
-  "10976" -> "11012" 
-  "10898" -> "10897" 
-  "10938" -> "10937" 
-  "10950" -> "10948" 
-  "10977" -> "10976" 
-  "10899" -> "10901" 
-  "10901" -> "10898" 
-  "10940" -> "10938" 
-  "10958" -> "10969" 
-  "10958" -> "10979" 
-  "10979" -> "10977" 
-  "10987" -> "11028" 
-  "10987" -> "10994" 
+  "10934" -> "10933" 
+  "10945" -> "10944" 
+  "10973" -> "10981" 
+  "10973" -> "11009" 
+  "10895" -> "10894" 
+  "10935" -> "10934" 
+  "10947" -> "10945" 
+  "10974" -> "10973" 
+  "10896" -> "10898" 
+  "10898" -> "10895" 
+  "10937" -> "10935" 
+  "10955" -> "10966" 
+  "10955" -> "10976" 
+  "10976" -> "10974" 
+  "10984" -> "11025" 
+  "10984" -> "10991" 
+  "10987" -> "10984" 
+  "11004" -> "11014" 
+  "11011" -> "11021" 
+  "11018" -> "11025" 
+  "10956" -> "10955" 
+  "10964" -> "10971" 
+  "10971" -> "11025" 
+  "10981" -> "10984" 
   "10990" -> "10987" 
-  "11007" -> "11017" 
-  "11014" -> "11024" 
-  "11021" -> "11028" 
-  "10959" -> "10958" 
-  "10967" -> "10974" 
-  "10974" -> "11028" 
-  "10984" -> "10987" 
-  "10993" -> "10990" 
+  "11006" -> "11004" 
+  "11013" -> "11011" 
+  "11021" -> "11018" 
+  "10957" -> "10956" 
+  "10957" -> "10960" 
+  "10960" -> "10956" 
+  "10965" -> "10964" 
+  "10991" -> "10997" 
+  "10994" -> "10990" 
+  "11007" -> "11006" 
+  "11014" -> "11013" 
+  "10966" -> "10968" 
+  "10968" -> "10965" 
+  "10995" -> "10998" 
+  "10998" -> "10994" 
   "11009" -> "11007" 
-  "11016" -> "11014" 
-  "11024" -> "11021" 
-  "10960" -> "10959" 
-  "10960" -> "10963" 
-  "10963" -> "10959" 
-  "10968" -> "10967" 
-  "10994" -> "11000" 
-  "10997" -> "10993" 
-  "11010" -> "11009" 
-  "11017" -> "11016" 
-  "10969" -> "10971" 
-  "10971" -> "10968" 
-  "10998" -> "11001" 
-  "11001" -> "10997" 
-  "11012" -> "11010" 
-  "11000" -> "10998" 
-  "10881" -> "10888" 
+  "10997" -> "10995" 
+  "10878" -> "10885" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/206-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/206-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/206-cfg.dot	2023-06-07 19:34:48.407388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/206-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,159 +1,159 @@
 digraph "GetStringChars" {  
-"11035" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2168</SUB>> ]
-"11054" [label = <(soa,soa(env))<SUB>2169</SUB>> ]
-"11056" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2170</SUB>> ]
-"11074" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2171</SUB>> ]
-"11169" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2190</SUB>> ]
-"11057" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2170</SUB>> ]
-"11064" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2170</SUB>> ]
-"11076" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2171</SUB>> ]
-"11084" [label = <(&lt;operator&gt;.logicalOr,heap-&gt;IsMovableObject(s) || s-&gt;IsCompressed())<SUB>2172</SUB>> ]
-"11161" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2187</SUB>> ]
-"11170" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2190</SUB>> ]
-"11058" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2170</SUB>> ]
-"11065" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2170</SUB>> ]
-"11077" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2171</SUB>> ]
-"11085" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2172</SUB>> ]
-"11090" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2172</SUB>> ]
-"11096" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[s-&gt;GetLength()])<SUB>2173</SUB>> ]
-"11158" [label = <(RETURN,return chars;,return chars;)<SUB>2185</SUB>> ]
-"11165" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2188</SUB>> ]
-"11171" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2190</SUB>> ]
-"11172" [label = <(GetValue,s-&gt;GetValue())<SUB>2190</SUB>> ]
-"11039" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2168</SUB>> ]
-"11060" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2170</SUB>> ]
-"11066" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2170</SUB>> ]
-"11069" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2170</SUB>> ]
-"11078" [label = <(Runtime::Current,Runtime::Current())<SUB>2171</SUB>> ]
-"11082" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2171</SUB>> ]
-"11086" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2172</SUB>> ]
-"11091" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2172</SUB>> ]
-"11098" [label = <(&lt;operator&gt;.new,new jchar[s-&gt;GetLength()])<SUB>2173</SUB>> ]
-"11101" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2174</SUB>> ]
-"11150" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2182</SUB>> ]
-"11166" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2188</SUB>> ]
-"11173" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2190</SUB>> ]
-"11040" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2168</SUB>> ]
-"11044" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2168</SUB>> ]
-"11051" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2168</SUB>> ]
-"11062" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2170</SUB>> ]
-"11068" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2170</SUB>> ]
-"11071" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2170</SUB>> ]
-"11079" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2171</SUB>> ]
-"11088" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2172</SUB>> ]
-"11093" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2172</SUB>> ]
-"11102" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2174</SUB>> ]
-"11107" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>2175</SUB>> ]
-"11154" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2183</SUB>> ]
-"11175" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2190</SUB>> ]
-"11045" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2168</SUB>> ]
-"11081" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2171</SUB>> ]
-"11104" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2174</SUB>> ]
-"11109" [label = <(GetLength,s-&gt;GetLength())<SUB>2175</SUB>> ]
-"11119" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2176</SUB>> ]
-"11122" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2176</SUB>> ]
-"11136" [label = <(memcpy,memcpy(chars, s-&gt;GetValue(), sizeof(jchar) * s-&gt;GetLength()))<SUB>2180</SUB>> ]
-"11155" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2183</SUB>> ]
-"11046" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2168</SUB>> ]
-"11048" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2168</SUB>> ]
-"11110" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2175</SUB>> ]
-"11116" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2176</SUB>> ]
-"11125" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>2177</SUB>> ]
-"11138" [label = <(GetValue,s-&gt;GetValue())<SUB>2180</SUB>> ]
-"11142" [label = <(&lt;operator&gt;.multiplication,sizeof(jchar) * s-&gt;GetLength())<SUB>2180</SUB>> ]
-"11112" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2175</SUB>> ]
-"11126" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>2177</SUB>> ]
-"11129" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2177</SUB>> ]
-"11139" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2180</SUB>> ]
-"11143" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>2180</SUB>> ]
-"11145" [label = <(GetLength,s-&gt;GetLength())<SUB>2180</SUB>> ]
-"11130" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2177</SUB>> ]
-"11141" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2180</SUB>> ]
-"11146" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2180</SUB>> ]
-"11132" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2177</SUB>> ]
-"11148" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2180</SUB>> ]
-"11030" [label = <(METHOD,GetStringChars)<SUB>2167</SUB>> ]
-"11176" [label = <(METHOD_RETURN,jchar)<SUB>2167</SUB>> ]
-  "11035" -> "11040" 
-  "11035" -> "11054" 
-  "11054" -> "11062" 
-  "11056" -> "11081" 
-  "11074" -> "11088" 
-  "11169" -> "11176" 
-  "11057" -> "11068" 
-  "11064" -> "11056" 
-  "11076" -> "11074" 
-  "11084" -> "11098" 
-  "11084" -> "11161" 
-  "11161" -> "11171" 
-  "11161" -> "11166" 
+"11032" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2166</SUB>> ]
+"11051" [label = <(soa,soa(env))<SUB>2167</SUB>> ]
+"11053" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2168</SUB>> ]
+"11071" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2169</SUB>> ]
+"11166" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2188</SUB>> ]
+"11054" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2168</SUB>> ]
+"11061" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2168</SUB>> ]
+"11073" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2169</SUB>> ]
+"11081" [label = <(&lt;operator&gt;.logicalOr,heap-&gt;IsMovableObject(s) || s-&gt;IsCompressed())<SUB>2170</SUB>> ]
+"11158" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2185</SUB>> ]
+"11167" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2188</SUB>> ]
+"11055" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2168</SUB>> ]
+"11062" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2168</SUB>> ]
+"11074" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2169</SUB>> ]
+"11082" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2170</SUB>> ]
+"11087" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2170</SUB>> ]
+"11093" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[s-&gt;GetLength()])<SUB>2171</SUB>> ]
+"11155" [label = <(RETURN,return chars;,return chars;)<SUB>2183</SUB>> ]
+"11162" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2186</SUB>> ]
+"11168" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2188</SUB>> ]
+"11169" [label = <(GetValue,s-&gt;GetValue())<SUB>2188</SUB>> ]
+"11036" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2166</SUB>> ]
+"11057" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2168</SUB>> ]
+"11063" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2168</SUB>> ]
+"11066" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2168</SUB>> ]
+"11075" [label = <(Runtime::Current,Runtime::Current())<SUB>2169</SUB>> ]
+"11079" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2169</SUB>> ]
+"11083" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2170</SUB>> ]
+"11088" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2170</SUB>> ]
+"11095" [label = <(&lt;operator&gt;.new,new jchar[s-&gt;GetLength()])<SUB>2171</SUB>> ]
+"11098" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2172</SUB>> ]
+"11147" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2180</SUB>> ]
+"11163" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2186</SUB>> ]
+"11170" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2188</SUB>> ]
+"11037" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2166</SUB>> ]
+"11041" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2166</SUB>> ]
+"11048" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2166</SUB>> ]
+"11059" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2168</SUB>> ]
+"11065" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2168</SUB>> ]
+"11068" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2168</SUB>> ]
+"11076" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2169</SUB>> ]
+"11085" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2170</SUB>> ]
+"11090" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2170</SUB>> ]
+"11099" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2172</SUB>> ]
+"11104" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>2173</SUB>> ]
+"11151" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2181</SUB>> ]
+"11172" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2188</SUB>> ]
+"11042" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2166</SUB>> ]
+"11078" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2169</SUB>> ]
+"11101" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2172</SUB>> ]
+"11106" [label = <(GetLength,s-&gt;GetLength())<SUB>2173</SUB>> ]
+"11116" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2174</SUB>> ]
+"11119" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2174</SUB>> ]
+"11133" [label = <(memcpy,memcpy(chars, s-&gt;GetValue(), sizeof(jchar) * s-&gt;GetLength()))<SUB>2178</SUB>> ]
+"11152" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2181</SUB>> ]
+"11043" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2166</SUB>> ]
+"11045" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2166</SUB>> ]
+"11107" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2173</SUB>> ]
+"11113" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2174</SUB>> ]
+"11122" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>2175</SUB>> ]
+"11135" [label = <(GetValue,s-&gt;GetValue())<SUB>2178</SUB>> ]
+"11139" [label = <(&lt;operator&gt;.multiplication,sizeof(jchar) * s-&gt;GetLength())<SUB>2178</SUB>> ]
+"11109" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2173</SUB>> ]
+"11123" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>2175</SUB>> ]
+"11126" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2175</SUB>> ]
+"11136" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2178</SUB>> ]
+"11140" [label = <(&lt;operator&gt;.sizeOf,sizeof(jchar))<SUB>2178</SUB>> ]
+"11142" [label = <(GetLength,s-&gt;GetLength())<SUB>2178</SUB>> ]
+"11127" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2175</SUB>> ]
+"11138" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2178</SUB>> ]
+"11143" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2178</SUB>> ]
+"11129" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2175</SUB>> ]
+"11145" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2178</SUB>> ]
+"11027" [label = <(METHOD,GetStringChars)<SUB>2165</SUB>> ]
+"11173" [label = <(METHOD_RETURN,jchar)<SUB>2165</SUB>> ]
+  "11032" -> "11037" 
+  "11032" -> "11051" 
+  "11051" -> "11059" 
+  "11053" -> "11078" 
+  "11071" -> "11085" 
+  "11166" -> "11173" 
+  "11054" -> "11065" 
+  "11061" -> "11053" 
+  "11073" -> "11071" 
+  "11081" -> "11095" 
+  "11081" -> "11158" 
+  "11158" -> "11168" 
+  "11158" -> "11163" 
+  "11167" -> "11166" 
+  "11055" -> "11054" 
+  "11062" -> "11061" 
+  "11074" -> "11073" 
+  "11082" -> "11081" 
+  "11082" -> "11090" 
+  "11087" -> "11081" 
+  "11093" -> "11101" 
+  "11155" -> "11173" 
+  "11162" -> "11168" 
+  "11168" -> "11172" 
+  "11169" -> "11167" 
+  "11036" -> "11043" 
+  "11036" -> "11051" 
+  "11057" -> "11055" 
+  "11063" -> "11068" 
+  "11066" -> "11062" 
+  "11075" -> "11079" 
+  "11079" -> "11074" 
+  "11083" -> "11082" 
+  "11088" -> "11087" 
+  "11095" -> "11093" 
+  "11098" -> "11109" 
+  "11098" -> "11138" 
+  "11147" -> "11152" 
+  "11147" -> "11155" 
+  "11163" -> "11162" 
   "11170" -> "11169" 
-  "11058" -> "11057" 
-  "11065" -> "11064" 
-  "11077" -> "11076" 
-  "11085" -> "11084" 
-  "11085" -> "11093" 
-  "11090" -> "11084" 
-  "11096" -> "11104" 
-  "11158" -> "11176" 
-  "11165" -> "11171" 
-  "11171" -> "11175" 
-  "11172" -> "11170" 
-  "11039" -> "11046" 
-  "11039" -> "11054" 
-  "11060" -> "11058" 
-  "11066" -> "11071" 
-  "11069" -> "11065" 
-  "11078" -> "11082" 
-  "11082" -> "11077" 
-  "11086" -> "11085" 
-  "11091" -> "11090" 
-  "11098" -> "11096" 
-  "11101" -> "11112" 
-  "11101" -> "11141" 
-  "11150" -> "11155" 
-  "11150" -> "11158" 
-  "11166" -> "11165" 
-  "11173" -> "11172" 
-  "11040" -> "11039" 
-  "11044" -> "11051" 
-  "11051" -> "11176" 
-  "11062" -> "11060" 
+  "11037" -> "11036" 
+  "11041" -> "11048" 
+  "11048" -> "11173" 
+  "11059" -> "11057" 
+  "11065" -> "11063" 
   "11068" -> "11066" 
-  "11071" -> "11069" 
-  "11079" -> "11078" 
-  "11088" -> "11086" 
-  "11093" -> "11091" 
-  "11102" -> "11101" 
-  "11107" -> "11116" 
-  "11154" -> "11158" 
-  "11175" -> "11173" 
-  "11045" -> "11044" 
-  "11081" -> "11079" 
-  "11104" -> "11102" 
-  "11109" -> "11107" 
-  "11119" -> "11126" 
-  "11119" -> "11150" 
+  "11076" -> "11075" 
+  "11085" -> "11083" 
+  "11090" -> "11088" 
+  "11099" -> "11098" 
+  "11104" -> "11113" 
+  "11151" -> "11155" 
+  "11172" -> "11170" 
+  "11042" -> "11041" 
+  "11078" -> "11076" 
+  "11101" -> "11099" 
+  "11106" -> "11104" 
+  "11116" -> "11123" 
+  "11116" -> "11147" 
+  "11119" -> "11116" 
+  "11133" -> "11147" 
+  "11152" -> "11151" 
+  "11043" -> "11045" 
+  "11045" -> "11042" 
+  "11107" -> "11106" 
+  "11113" -> "11116" 
   "11122" -> "11119" 
-  "11136" -> "11150" 
-  "11155" -> "11154" 
-  "11046" -> "11048" 
-  "11048" -> "11045" 
-  "11110" -> "11109" 
-  "11116" -> "11119" 
-  "11125" -> "11122" 
-  "11138" -> "11143" 
-  "11142" -> "11136" 
-  "11112" -> "11110" 
-  "11126" -> "11132" 
-  "11129" -> "11125" 
-  "11139" -> "11138" 
-  "11143" -> "11148" 
-  "11145" -> "11142" 
-  "11130" -> "11129" 
-  "11141" -> "11139" 
-  "11146" -> "11145" 
-  "11132" -> "11130" 
-  "11148" -> "11146" 
-  "11030" -> "11035" 
+  "11135" -> "11140" 
+  "11139" -> "11133" 
+  "11109" -> "11107" 
+  "11123" -> "11129" 
+  "11126" -> "11122" 
+  "11136" -> "11135" 
+  "11140" -> "11145" 
+  "11142" -> "11139" 
+  "11127" -> "11126" 
+  "11138" -> "11136" 
+  "11143" -> "11142" 
+  "11129" -> "11127" 
+  "11145" -> "11143" 
+  "11027" -> "11032" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/207-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/207-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/207-cfg.dot	2023-06-07 19:34:48.407388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/207-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,78 +1,78 @@
 digraph "ReleaseStringChars" {  
-"11183" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2194</SUB>> ]
-"11201" [label = <(soa,soa(env))<SUB>2195</SUB>> ]
-"11203" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2196</SUB>> ]
-"11204" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2196</SUB>> ]
-"11211" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2196</SUB>> ]
-"11221" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue()))<SUB>2197</SUB>> ]
-"11205" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2196</SUB>> ]
-"11212" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2196</SUB>> ]
-"11222" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2197</SUB>> ]
-"11226" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue())<SUB>2197</SUB>> ]
-"11240" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2198</SUB>> ]
-"11187" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2194</SUB>> ]
-"11207" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2196</SUB>> ]
-"11213" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2196</SUB>> ]
-"11216" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2196</SUB>> ]
-"11223" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2197</SUB>> ]
-"11227" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2197</SUB>> ]
-"11233" [label = <(&lt;operator&gt;.notEquals,chars != s-&gt;GetValue())<SUB>2197</SUB>> ]
-"11188" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2194</SUB>> ]
-"11192" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2194</SUB>> ]
-"11199" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2194</SUB>> ]
-"11209" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2196</SUB>> ]
-"11215" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2196</SUB>> ]
-"11218" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2196</SUB>> ]
-"11225" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2197</SUB>> ]
-"11228" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2197</SUB>> ]
-"11235" [label = <(GetValue,s-&gt;GetValue())<SUB>2197</SUB>> ]
-"11193" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2194</SUB>> ]
-"11229" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2197</SUB>> ]
-"11236" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2197</SUB>> ]
-"11194" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2194</SUB>> ]
-"11196" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2194</SUB>> ]
-"11231" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2197</SUB>> ]
-"11238" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2197</SUB>> ]
-"11178" [label = <(METHOD,ReleaseStringChars)<SUB>2193</SUB>> ]
-"11242" [label = <(METHOD_RETURN,void)<SUB>2193</SUB>> ]
-  "11183" -> "11188" 
-  "11183" -> "11201" 
-  "11201" -> "11209" 
-  "11203" -> "11225" 
-  "11204" -> "11215" 
-  "11211" -> "11203" 
-  "11221" -> "11242" 
-  "11221" -> "11240" 
-  "11205" -> "11204" 
-  "11212" -> "11211" 
-  "11222" -> "11221" 
-  "11222" -> "11231" 
-  "11226" -> "11221" 
-  "11240" -> "11242" 
-  "11187" -> "11194" 
-  "11187" -> "11201" 
-  "11207" -> "11205" 
-  "11213" -> "11218" 
-  "11216" -> "11212" 
-  "11223" -> "11222" 
-  "11227" -> "11226" 
-  "11227" -> "11238" 
-  "11233" -> "11226" 
-  "11188" -> "11187" 
-  "11192" -> "11199" 
-  "11199" -> "11242" 
-  "11209" -> "11207" 
+"11180" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2192</SUB>> ]
+"11198" [label = <(soa,soa(env))<SUB>2193</SUB>> ]
+"11200" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2194</SUB>> ]
+"11201" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2194</SUB>> ]
+"11208" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2194</SUB>> ]
+"11218" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue()))<SUB>2195</SUB>> ]
+"11202" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2194</SUB>> ]
+"11209" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2194</SUB>> ]
+"11219" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2195</SUB>> ]
+"11223" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; chars != s-&gt;GetValue())<SUB>2195</SUB>> ]
+"11237" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2196</SUB>> ]
+"11184" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2192</SUB>> ]
+"11204" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2194</SUB>> ]
+"11210" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2194</SUB>> ]
+"11213" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2194</SUB>> ]
+"11220" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2195</SUB>> ]
+"11224" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2195</SUB>> ]
+"11230" [label = <(&lt;operator&gt;.notEquals,chars != s-&gt;GetValue())<SUB>2195</SUB>> ]
+"11185" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2192</SUB>> ]
+"11189" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2192</SUB>> ]
+"11196" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2192</SUB>> ]
+"11206" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2194</SUB>> ]
+"11212" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2194</SUB>> ]
+"11215" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2194</SUB>> ]
+"11222" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2195</SUB>> ]
+"11225" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2195</SUB>> ]
+"11232" [label = <(GetValue,s-&gt;GetValue())<SUB>2195</SUB>> ]
+"11190" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2192</SUB>> ]
+"11226" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2195</SUB>> ]
+"11233" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2195</SUB>> ]
+"11191" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2192</SUB>> ]
+"11193" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2192</SUB>> ]
+"11228" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2195</SUB>> ]
+"11235" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2195</SUB>> ]
+"11175" [label = <(METHOD,ReleaseStringChars)<SUB>2191</SUB>> ]
+"11239" [label = <(METHOD_RETURN,void)<SUB>2191</SUB>> ]
+  "11180" -> "11185" 
+  "11180" -> "11198" 
+  "11198" -> "11206" 
+  "11200" -> "11222" 
+  "11201" -> "11212" 
+  "11208" -> "11200" 
+  "11218" -> "11239" 
+  "11218" -> "11237" 
+  "11202" -> "11201" 
+  "11209" -> "11208" 
+  "11219" -> "11218" 
+  "11219" -> "11228" 
+  "11223" -> "11218" 
+  "11237" -> "11239" 
+  "11184" -> "11191" 
+  "11184" -> "11198" 
+  "11204" -> "11202" 
+  "11210" -> "11215" 
+  "11213" -> "11209" 
+  "11220" -> "11219" 
+  "11224" -> "11223" 
+  "11224" -> "11235" 
+  "11230" -> "11223" 
+  "11185" -> "11184" 
+  "11189" -> "11196" 
+  "11196" -> "11239" 
+  "11206" -> "11204" 
+  "11212" -> "11210" 
   "11215" -> "11213" 
-  "11218" -> "11216" 
-  "11225" -> "11223" 
-  "11228" -> "11227" 
+  "11222" -> "11220" 
+  "11225" -> "11224" 
+  "11232" -> "11230" 
+  "11190" -> "11189" 
+  "11226" -> "11225" 
+  "11233" -> "11232" 
+  "11191" -> "11193" 
+  "11193" -> "11190" 
+  "11228" -> "11226" 
   "11235" -> "11233" 
-  "11193" -> "11192" 
-  "11229" -> "11228" 
-  "11236" -> "11235" 
-  "11194" -> "11196" 
-  "11196" -> "11193" 
-  "11231" -> "11229" 
-  "11238" -> "11236" 
-  "11178" -> "11183" 
+  "11175" -> "11180" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/208-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/208-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/208-cfg.dot	2023-06-07 19:34:48.407388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/208-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,189 +1,189 @@
 digraph "GetStringCritical" {  
-"11249" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2203</SUB>> ]
-"11268" [label = <(soa,soa(env))<SUB>2204</SUB>> ]
-"11270" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2205</SUB>> ]
-"11288" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2206</SUB>> ]
-"11271" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2205</SUB>> ]
-"11278" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2205</SUB>> ]
-"11290" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2206</SUB>> ]
-"11298" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2207</SUB>> ]
-"11349" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2218</SUB>> ]
-"11272" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2205</SUB>> ]
-"11279" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2205</SUB>> ]
-"11291" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2206</SUB>> ]
-"11299" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2207</SUB>> ]
-"11304" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2208</SUB>> ]
-"11313" [label = <(&lt;operator&gt;.greaterThan,HandleWrapperObjPtr&lt;mirror::String&gt; h(hs.NewHandleWrapper(&amp;s)))<SUB>2209</SUB>> ]
-"11350" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2218</SUB>> ]
-"11364" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>2222</SUB>> ]
-"11371" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[length])<SUB>2223</SUB>> ]
-"11396" [label = <(RETURN,return chars;,return chars;)<SUB>2227</SUB>> ]
-"11253" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2203</SUB>> ]
-"11274" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2205</SUB>> ]
-"11280" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2205</SUB>> ]
-"11283" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2205</SUB>> ]
-"11292" [label = <(Runtime::Current,Runtime::Current())<SUB>2206</SUB>> ]
-"11296" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2206</SUB>> ]
-"11301" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2207</SUB>> ]
-"11305" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2208</SUB>> ]
-"11308" [label = <(hs,hs(soa.Self()))<SUB>2208</SUB>> ]
-"11314" [label = <(&lt;operator&gt;.lessThan,HandleWrapperObjPtr&lt;mirror::String)<SUB>2209</SUB>> ]
-"11319" [label = <(h,h(hs.NewHandleWrapper(&amp;s)))<SUB>2209</SUB>> ]
-"11327" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2210</SUB>> ]
-"11352" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2218</SUB>> ]
-"11355" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2219</SUB>> ]
-"11366" [label = <(GetLength,s-&gt;GetLength())<SUB>2222</SUB>> ]
-"11373" [label = <(&lt;operator&gt;.new,new jchar[length])<SUB>2223</SUB>> ]
-"11381" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2224</SUB>> ]
-"11384" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2224</SUB>> ]
-"11409" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2232</SUB>> ]
-"11254" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2203</SUB>> ]
-"11258" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2203</SUB>> ]
-"11265" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2203</SUB>> ]
-"11276" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2205</SUB>> ]
-"11282" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2205</SUB>> ]
-"11285" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2205</SUB>> ]
-"11293" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2206</SUB>> ]
-"11309" [label = <(Self,soa.Self())<SUB>2208</SUB>> ]
-"11316" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2209</SUB>> ]
-"11320" [label = <(NewHandleWrapper,hs.NewHandleWrapper(&amp;s))<SUB>2209</SUB>> ]
-"11330" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2211</SUB>> ]
-"11359" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2220</SUB>> ]
-"11367" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2222</SUB>> ]
-"11378" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2224</SUB>> ]
-"11387" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>2225</SUB>> ]
-"11401" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2229</SUB>> ]
-"11410" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2232</SUB>> ]
-"11259" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2203</SUB>> ]
-"11295" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2206</SUB>> ]
-"11310" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2208</SUB>> ]
-"11318" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2209</SUB>> ]
-"11321" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandleWrapper)<SUB>2209</SUB>> ]
-"11324" [label = <(&lt;operator&gt;.addressOf,&amp;s)<SUB>2209</SUB>> ]
-"11331" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2211</SUB>> ]
-"11334" [label = <(Self,soa.Self())<SUB>2211</SUB>> ]
-"11340" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2215</SUB>> ]
-"11360" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2220</SUB>> ]
-"11369" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2222</SUB>> ]
-"11388" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>2225</SUB>> ]
-"11391" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2225</SUB>> ]
-"11405" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2230</SUB>> ]
-"11411" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2232</SUB>> ]
-"11412" [label = <(GetValue,s-&gt;GetValue())<SUB>2232</SUB>> ]
-"11260" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2203</SUB>> ]
-"11262" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2203</SUB>> ]
-"11312" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2208</SUB>> ]
-"11323" [label = <(FIELD_IDENTIFIER,NewHandleWrapper,NewHandleWrapper)<SUB>2209</SUB>> ]
-"11333" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2211</SUB>> ]
-"11335" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2211</SUB>> ]
-"11341" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2215</SUB>> ]
-"11344" [label = <(Self,soa.Self())<SUB>2215</SUB>> ]
-"11392" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2225</SUB>> ]
-"11406" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2230</SUB>> ]
-"11413" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2232</SUB>> ]
-"11337" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2211</SUB>> ]
-"11343" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2215</SUB>> ]
-"11345" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2215</SUB>> ]
-"11394" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2225</SUB>> ]
-"11415" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2232</SUB>> ]
-"11347" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2215</SUB>> ]
-"11244" [label = <(METHOD,GetStringCritical)<SUB>2202</SUB>> ]
-"11416" [label = <(METHOD_RETURN,jchar)<SUB>2202</SUB>> ]
-  "11249" -> "11254" 
-  "11249" -> "11268" 
-  "11268" -> "11276" 
-  "11270" -> "11295" 
-  "11288" -> "11301" 
-  "11271" -> "11282" 
-  "11278" -> "11270" 
-  "11290" -> "11288" 
-  "11298" -> "11305" 
-  "11298" -> "11352" 
-  "11349" -> "11355" 
-  "11349" -> "11401" 
-  "11272" -> "11271" 
-  "11279" -> "11278" 
-  "11291" -> "11290" 
-  "11299" -> "11298" 
-  "11304" -> "11318" 
-  "11313" -> "11327" 
-  "11350" -> "11349" 
-  "11364" -> "11373" 
-  "11371" -> "11378" 
-  "11396" -> "11416" 
-  "11253" -> "11260" 
-  "11253" -> "11268" 
-  "11274" -> "11272" 
-  "11280" -> "11285" 
-  "11283" -> "11279" 
-  "11292" -> "11296" 
-  "11296" -> "11291" 
-  "11301" -> "11299" 
-  "11305" -> "11312" 
-  "11308" -> "11304" 
-  "11314" -> "11323" 
-  "11319" -> "11313" 
-  "11327" -> "11333" 
-  "11327" -> "11343" 
-  "11352" -> "11350" 
-  "11355" -> "11360" 
-  "11355" -> "11369" 
-  "11366" -> "11364" 
-  "11373" -> "11371" 
-  "11381" -> "11388" 
-  "11381" -> "11396" 
-  "11384" -> "11381" 
-  "11409" -> "11416" 
-  "11254" -> "11253" 
-  "11258" -> "11265" 
-  "11265" -> "11416" 
-  "11276" -> "11274" 
+"11246" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2201</SUB>> ]
+"11265" [label = <(soa,soa(env))<SUB>2202</SUB>> ]
+"11267" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2203</SUB>> ]
+"11285" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2204</SUB>> ]
+"11268" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2203</SUB>> ]
+"11275" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2203</SUB>> ]
+"11287" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2204</SUB>> ]
+"11295" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2205</SUB>> ]
+"11346" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2216</SUB>> ]
+"11269" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2203</SUB>> ]
+"11276" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2203</SUB>> ]
+"11288" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2204</SUB>> ]
+"11296" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2205</SUB>> ]
+"11301" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2206</SUB>> ]
+"11310" [label = <(&lt;operator&gt;.greaterThan,HandleWrapperObjPtr&lt;mirror::String&gt; h(hs.NewHandleWrapper(&amp;s)))<SUB>2207</SUB>> ]
+"11347" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2216</SUB>> ]
+"11361" [label = <(&lt;operator&gt;.assignment,length = s-&gt;GetLength())<SUB>2220</SUB>> ]
+"11368" [label = <(&lt;operator&gt;.assignment,* chars = new jchar[length])<SUB>2221</SUB>> ]
+"11393" [label = <(RETURN,return chars;,return chars;)<SUB>2225</SUB>> ]
+"11250" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2201</SUB>> ]
+"11271" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2203</SUB>> ]
+"11277" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2203</SUB>> ]
+"11280" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2203</SUB>> ]
+"11289" [label = <(Runtime::Current,Runtime::Current())<SUB>2204</SUB>> ]
+"11293" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2204</SUB>> ]
+"11298" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2205</SUB>> ]
+"11302" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2206</SUB>> ]
+"11305" [label = <(hs,hs(soa.Self()))<SUB>2206</SUB>> ]
+"11311" [label = <(&lt;operator&gt;.lessThan,HandleWrapperObjPtr&lt;mirror::String)<SUB>2207</SUB>> ]
+"11316" [label = <(h,h(hs.NewHandleWrapper(&amp;s)))<SUB>2207</SUB>> ]
+"11324" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2208</SUB>> ]
+"11349" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2216</SUB>> ]
+"11352" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2217</SUB>> ]
+"11363" [label = <(GetLength,s-&gt;GetLength())<SUB>2220</SUB>> ]
+"11370" [label = <(&lt;operator&gt;.new,new jchar[length])<SUB>2221</SUB>> ]
+"11378" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2222</SUB>> ]
+"11381" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2222</SUB>> ]
+"11406" [label = <(RETURN,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());,return static_cast&lt;jchar*&gt;(s-&gt;GetValue());)<SUB>2230</SUB>> ]
+"11251" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2201</SUB>> ]
+"11255" [label = <(CHECK_NON_NULL_ARGUMENT(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2201</SUB>> ]
+"11262" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_string),CHECK_NON_NULL_ARGUMENT(java_string))<SUB>2201</SUB>> ]
+"11273" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2203</SUB>> ]
+"11279" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2203</SUB>> ]
+"11282" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2203</SUB>> ]
+"11290" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2204</SUB>> ]
+"11306" [label = <(Self,soa.Self())<SUB>2206</SUB>> ]
+"11313" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2207</SUB>> ]
+"11317" [label = <(NewHandleWrapper,hs.NewHandleWrapper(&amp;s))<SUB>2207</SUB>> ]
+"11327" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2209</SUB>> ]
+"11356" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2218</SUB>> ]
+"11364" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2220</SUB>> ]
+"11375" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2222</SUB>> ]
+"11384" [label = <(&lt;operator&gt;.assignment,chars[i] = s-&gt;CharAt(i))<SUB>2223</SUB>> ]
+"11398" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2227</SUB>> ]
+"11407" [label = <(&lt;operator&gt;.cast,static_cast&lt;jchar*&gt;(s-&gt;GetValue()))<SUB>2230</SUB>> ]
+"11256" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2201</SUB>> ]
+"11292" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2204</SUB>> ]
+"11307" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2206</SUB>> ]
+"11315" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2207</SUB>> ]
+"11318" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandleWrapper)<SUB>2207</SUB>> ]
+"11321" [label = <(&lt;operator&gt;.addressOf,&amp;s)<SUB>2207</SUB>> ]
+"11328" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2209</SUB>> ]
+"11331" [label = <(Self,soa.Self())<SUB>2209</SUB>> ]
+"11337" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2213</SUB>> ]
+"11357" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2218</SUB>> ]
+"11366" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2220</SUB>> ]
+"11385" [label = <(&lt;operator&gt;.indirectIndexAccess,chars[i])<SUB>2223</SUB>> ]
+"11388" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2223</SUB>> ]
+"11402" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2228</SUB>> ]
+"11408" [label = <(UNKNOWN,jchar*,jchar*)<SUB>2230</SUB>> ]
+"11409" [label = <(GetValue,s-&gt;GetValue())<SUB>2230</SUB>> ]
+"11257" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2201</SUB>> ]
+"11259" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2201</SUB>> ]
+"11309" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2206</SUB>> ]
+"11320" [label = <(FIELD_IDENTIFIER,NewHandleWrapper,NewHandleWrapper)<SUB>2207</SUB>> ]
+"11330" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2209</SUB>> ]
+"11332" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2209</SUB>> ]
+"11338" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2213</SUB>> ]
+"11341" [label = <(Self,soa.Self())<SUB>2213</SUB>> ]
+"11389" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2223</SUB>> ]
+"11403" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2228</SUB>> ]
+"11410" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2230</SUB>> ]
+"11334" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2209</SUB>> ]
+"11340" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2213</SUB>> ]
+"11342" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2213</SUB>> ]
+"11391" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2223</SUB>> ]
+"11412" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2230</SUB>> ]
+"11344" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2213</SUB>> ]
+"11241" [label = <(METHOD,GetStringCritical)<SUB>2200</SUB>> ]
+"11413" [label = <(METHOD_RETURN,jchar)<SUB>2200</SUB>> ]
+  "11246" -> "11251" 
+  "11246" -> "11265" 
+  "11265" -> "11273" 
+  "11267" -> "11292" 
+  "11285" -> "11298" 
+  "11268" -> "11279" 
+  "11275" -> "11267" 
+  "11287" -> "11285" 
+  "11295" -> "11302" 
+  "11295" -> "11349" 
+  "11346" -> "11352" 
+  "11346" -> "11398" 
+  "11269" -> "11268" 
+  "11276" -> "11275" 
+  "11288" -> "11287" 
+  "11296" -> "11295" 
+  "11301" -> "11315" 
+  "11310" -> "11324" 
+  "11347" -> "11346" 
+  "11361" -> "11370" 
+  "11368" -> "11375" 
+  "11393" -> "11413" 
+  "11250" -> "11257" 
+  "11250" -> "11265" 
+  "11271" -> "11269" 
+  "11277" -> "11282" 
+  "11280" -> "11276" 
+  "11289" -> "11293" 
+  "11293" -> "11288" 
+  "11298" -> "11296" 
+  "11302" -> "11309" 
+  "11305" -> "11301" 
+  "11311" -> "11320" 
+  "11316" -> "11310" 
+  "11324" -> "11330" 
+  "11324" -> "11340" 
+  "11349" -> "11347" 
+  "11352" -> "11357" 
+  "11352" -> "11366" 
+  "11363" -> "11361" 
+  "11370" -> "11368" 
+  "11378" -> "11385" 
+  "11378" -> "11393" 
+  "11381" -> "11378" 
+  "11406" -> "11413" 
+  "11251" -> "11250" 
+  "11255" -> "11262" 
+  "11262" -> "11413" 
+  "11273" -> "11271" 
+  "11279" -> "11277" 
   "11282" -> "11280" 
-  "11285" -> "11283" 
-  "11293" -> "11292" 
-  "11309" -> "11308" 
-  "11316" -> "11314" 
-  "11320" -> "11319" 
-  "11330" -> "11352" 
-  "11359" -> "11369" 
-  "11367" -> "11366" 
-  "11378" -> "11381" 
-  "11387" -> "11384" 
-  "11401" -> "11411" 
-  "11401" -> "11406" 
+  "11290" -> "11289" 
+  "11306" -> "11305" 
+  "11313" -> "11311" 
+  "11317" -> "11316" 
+  "11327" -> "11349" 
+  "11356" -> "11366" 
+  "11364" -> "11363" 
+  "11375" -> "11378" 
+  "11384" -> "11381" 
+  "11398" -> "11408" 
+  "11398" -> "11403" 
+  "11407" -> "11406" 
+  "11256" -> "11255" 
+  "11292" -> "11290" 
+  "11307" -> "11306" 
+  "11315" -> "11313" 
+  "11318" -> "11321" 
+  "11321" -> "11317" 
+  "11328" -> "11334" 
+  "11331" -> "11327" 
+  "11337" -> "11349" 
+  "11357" -> "11356" 
+  "11366" -> "11364" 
+  "11385" -> "11391" 
+  "11388" -> "11384" 
+  "11402" -> "11408" 
+  "11408" -> "11412" 
+  "11409" -> "11407" 
+  "11257" -> "11259" 
+  "11259" -> "11256" 
+  "11309" -> "11307" 
+  "11320" -> "11318" 
+  "11330" -> "11328" 
+  "11332" -> "11331" 
+  "11338" -> "11344" 
+  "11341" -> "11337" 
+  "11389" -> "11388" 
+  "11403" -> "11402" 
   "11410" -> "11409" 
-  "11259" -> "11258" 
-  "11295" -> "11293" 
-  "11310" -> "11309" 
-  "11318" -> "11316" 
-  "11321" -> "11324" 
-  "11324" -> "11320" 
-  "11331" -> "11337" 
-  "11334" -> "11330" 
-  "11340" -> "11352" 
-  "11360" -> "11359" 
-  "11369" -> "11367" 
-  "11388" -> "11394" 
-  "11391" -> "11387" 
-  "11405" -> "11411" 
-  "11411" -> "11415" 
+  "11334" -> "11332" 
+  "11340" -> "11338" 
+  "11342" -> "11341" 
+  "11391" -> "11389" 
   "11412" -> "11410" 
-  "11260" -> "11262" 
-  "11262" -> "11259" 
-  "11312" -> "11310" 
-  "11323" -> "11321" 
-  "11333" -> "11331" 
-  "11335" -> "11334" 
-  "11341" -> "11347" 
-  "11344" -> "11340" 
-  "11392" -> "11391" 
-  "11406" -> "11405" 
-  "11413" -> "11412" 
-  "11337" -> "11335" 
-  "11343" -> "11341" 
-  "11345" -> "11344" 
-  "11394" -> "11392" 
-  "11415" -> "11413" 
-  "11347" -> "11345" 
-  "11244" -> "11249" 
+  "11344" -> "11342" 
+  "11241" -> "11246" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/209-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/209-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/209-cfg.dot	2023-06-07 19:34:48.407388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/209-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,126 +1,126 @@
 digraph "ReleaseStringCritical" {  
-"11423" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2239</SUB>> ]
-"11441" [label = <(soa,soa(env))<SUB>2240</SUB>> ]
-"11444" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2241</SUB>> ]
-"11453" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2242</SUB>> ]
-"11446" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2241</SUB>> ]
-"11454" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2242</SUB>> ]
-"11461" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2242</SUB>> ]
-"11471" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2243</SUB>> ]
-"11500" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars))<SUB>2250</SUB>> ]
-"11447" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2241</SUB>> ]
-"11455" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2242</SUB>> ]
-"11462" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2242</SUB>> ]
-"11472" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2243</SUB>> ]
-"11501" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2250</SUB>> ]
-"11505" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars)<SUB>2250</SUB>> ]
-"11519" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2251</SUB>> ]
-"11427" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2239</SUB>> ]
-"11448" [label = <(Runtime::Current,Runtime::Current())<SUB>2241</SUB>> ]
-"11452" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2241</SUB>> ]
-"11457" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2242</SUB>> ]
-"11463" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2242</SUB>> ]
-"11466" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2242</SUB>> ]
-"11474" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2243</SUB>> ]
-"11478" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2244</SUB>> ]
-"11502" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2250</SUB>> ]
-"11506" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2250</SUB>> ]
-"11512" [label = <(&lt;operator&gt;.notEquals,s-&gt;GetValue() != chars)<SUB>2250</SUB>> ]
-"11428" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2239</SUB>> ]
-"11432" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2239</SUB>> ]
-"11439" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2239</SUB>> ]
-"11449" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2241</SUB>> ]
-"11459" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2242</SUB>> ]
-"11465" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2242</SUB>> ]
-"11468" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2242</SUB>> ]
-"11481" [label = <(DecrementDisableMovingGC,heap-&gt;DecrementDisableMovingGC(soa.Self()))<SUB>2245</SUB>> ]
-"11504" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2250</SUB>> ]
-"11507" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2250</SUB>> ]
-"11513" [label = <(GetValue,s-&gt;GetValue())<SUB>2250</SUB>> ]
-"11433" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2239</SUB>> ]
-"11451" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2241</SUB>> ]
-"11482" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableMovingGC)<SUB>2245</SUB>> ]
-"11485" [label = <(Self,soa.Self())<SUB>2245</SUB>> ]
-"11491" [label = <(DecrementDisableThreadFlip,heap-&gt;DecrementDisableThreadFlip(soa.Self()))<SUB>2247</SUB>> ]
-"11508" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2250</SUB>> ]
-"11514" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2250</SUB>> ]
-"11434" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2239</SUB>> ]
-"11436" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2239</SUB>> ]
-"11484" [label = <(FIELD_IDENTIFIER,DecrementDisableMovingGC,DecrementDisableMovingGC)<SUB>2245</SUB>> ]
-"11486" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2245</SUB>> ]
-"11492" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableThreadFlip)<SUB>2247</SUB>> ]
-"11495" [label = <(Self,soa.Self())<SUB>2247</SUB>> ]
-"11510" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2250</SUB>> ]
-"11516" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2250</SUB>> ]
-"11488" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2245</SUB>> ]
-"11494" [label = <(FIELD_IDENTIFIER,DecrementDisableThreadFlip,DecrementDisableThreadFlip)<SUB>2247</SUB>> ]
-"11496" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2247</SUB>> ]
-"11498" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2247</SUB>> ]
-"11418" [label = <(METHOD,ReleaseStringCritical)<SUB>2236</SUB>> ]
-"11521" [label = <(METHOD_RETURN,void)<SUB>2236</SUB>> ]
-  "11423" -> "11428" 
-  "11423" -> "11441" 
-  "11441" -> "11451" 
-  "11444" -> "11459" 
-  "11453" -> "11474" 
-  "11446" -> "11444" 
-  "11454" -> "11465" 
-  "11461" -> "11453" 
-  "11471" -> "11478" 
-  "11471" -> "11504" 
-  "11500" -> "11521" 
-  "11500" -> "11519" 
-  "11447" -> "11446" 
-  "11455" -> "11454" 
-  "11462" -> "11461" 
-  "11472" -> "11471" 
-  "11501" -> "11500" 
-  "11501" -> "11510" 
-  "11505" -> "11500" 
-  "11519" -> "11521" 
-  "11427" -> "11434" 
-  "11427" -> "11441" 
-  "11448" -> "11452" 
-  "11452" -> "11447" 
-  "11457" -> "11455" 
-  "11463" -> "11468" 
-  "11466" -> "11462" 
-  "11474" -> "11472" 
-  "11478" -> "11484" 
-  "11478" -> "11494" 
-  "11502" -> "11501" 
-  "11506" -> "11505" 
-  "11506" -> "11516" 
-  "11512" -> "11505" 
-  "11428" -> "11427" 
-  "11432" -> "11439" 
-  "11439" -> "11521" 
-  "11449" -> "11448" 
-  "11459" -> "11457" 
+"11420" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2237</SUB>> ]
+"11438" [label = <(soa,soa(env))<SUB>2238</SUB>> ]
+"11441" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2239</SUB>> ]
+"11450" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2240</SUB>> ]
+"11443" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2239</SUB>> ]
+"11451" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2240</SUB>> ]
+"11458" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2240</SUB>> ]
+"11468" [label = <(IsMovableObject,heap-&gt;IsMovableObject(s))<SUB>2241</SUB>> ]
+"11497" [label = <(&lt;operator&gt;.logicalOr,s-&gt;IsCompressed() || (s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars))<SUB>2248</SUB>> ]
+"11444" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2239</SUB>> ]
+"11452" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2240</SUB>> ]
+"11459" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2240</SUB>> ]
+"11469" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2241</SUB>> ]
+"11498" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2248</SUB>> ]
+"11502" [label = <(&lt;operator&gt;.logicalAnd,s-&gt;IsCompressed() == false &amp;&amp; s-&gt;GetValue() != chars)<SUB>2248</SUB>> ]
+"11516" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2249</SUB>> ]
+"11424" [label = <(UNLIKELY,UNLIKELY((java_string) == nullptr))<SUB>2237</SUB>> ]
+"11445" [label = <(Runtime::Current,Runtime::Current())<SUB>2239</SUB>> ]
+"11449" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2239</SUB>> ]
+"11454" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2240</SUB>> ]
+"11460" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2240</SUB>> ]
+"11463" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2240</SUB>> ]
+"11471" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2241</SUB>> ]
+"11475" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2242</SUB>> ]
+"11499" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2248</SUB>> ]
+"11503" [label = <(&lt;operator&gt;.equals,s-&gt;IsCompressed() == false)<SUB>2248</SUB>> ]
+"11509" [label = <(&lt;operator&gt;.notEquals,s-&gt;GetValue() != chars)<SUB>2248</SUB>> ]
+"11425" [label = <(&lt;operator&gt;.equals,(java_string) == nullptr)<SUB>2237</SUB>> ]
+"11429" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_string == null&quot;))<SUB>2237</SUB>> ]
+"11436" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))<SUB>2237</SUB>> ]
+"11446" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2239</SUB>> ]
+"11456" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2240</SUB>> ]
+"11462" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2240</SUB>> ]
+"11465" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2240</SUB>> ]
+"11478" [label = <(DecrementDisableMovingGC,heap-&gt;DecrementDisableMovingGC(soa.Self()))<SUB>2243</SUB>> ]
+"11501" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2248</SUB>> ]
+"11504" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2248</SUB>> ]
+"11510" [label = <(GetValue,s-&gt;GetValue())<SUB>2248</SUB>> ]
+"11430" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2237</SUB>> ]
+"11448" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2239</SUB>> ]
+"11479" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableMovingGC)<SUB>2243</SUB>> ]
+"11482" [label = <(Self,soa.Self())<SUB>2243</SUB>> ]
+"11488" [label = <(DecrementDisableThreadFlip,heap-&gt;DecrementDisableThreadFlip(soa.Self()))<SUB>2245</SUB>> ]
+"11505" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2248</SUB>> ]
+"11511" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2248</SUB>> ]
+"11431" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2237</SUB>> ]
+"11433" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2237</SUB>> ]
+"11481" [label = <(FIELD_IDENTIFIER,DecrementDisableMovingGC,DecrementDisableMovingGC)<SUB>2243</SUB>> ]
+"11483" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2243</SUB>> ]
+"11489" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;DecrementDisableThreadFlip)<SUB>2245</SUB>> ]
+"11492" [label = <(Self,soa.Self())<SUB>2245</SUB>> ]
+"11507" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2248</SUB>> ]
+"11513" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2248</SUB>> ]
+"11485" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2243</SUB>> ]
+"11491" [label = <(FIELD_IDENTIFIER,DecrementDisableThreadFlip,DecrementDisableThreadFlip)<SUB>2245</SUB>> ]
+"11493" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2245</SUB>> ]
+"11495" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2245</SUB>> ]
+"11415" [label = <(METHOD,ReleaseStringCritical)<SUB>2234</SUB>> ]
+"11518" [label = <(METHOD_RETURN,void)<SUB>2234</SUB>> ]
+  "11420" -> "11425" 
+  "11420" -> "11438" 
+  "11438" -> "11448" 
+  "11441" -> "11456" 
+  "11450" -> "11471" 
+  "11443" -> "11441" 
+  "11451" -> "11462" 
+  "11458" -> "11450" 
+  "11468" -> "11475" 
+  "11468" -> "11501" 
+  "11497" -> "11518" 
+  "11497" -> "11516" 
+  "11444" -> "11443" 
+  "11452" -> "11451" 
+  "11459" -> "11458" 
+  "11469" -> "11468" 
+  "11498" -> "11497" 
+  "11498" -> "11507" 
+  "11502" -> "11497" 
+  "11516" -> "11518" 
+  "11424" -> "11431" 
+  "11424" -> "11438" 
+  "11445" -> "11449" 
+  "11449" -> "11444" 
+  "11454" -> "11452" 
+  "11460" -> "11465" 
+  "11463" -> "11459" 
+  "11471" -> "11469" 
+  "11475" -> "11481" 
+  "11475" -> "11491" 
+  "11499" -> "11498" 
+  "11503" -> "11502" 
+  "11503" -> "11513" 
+  "11509" -> "11502" 
+  "11425" -> "11424" 
+  "11429" -> "11436" 
+  "11436" -> "11518" 
+  "11446" -> "11445" 
+  "11456" -> "11454" 
+  "11462" -> "11460" 
   "11465" -> "11463" 
-  "11468" -> "11466" 
-  "11481" -> "11504" 
-  "11504" -> "11502" 
-  "11507" -> "11506" 
-  "11513" -> "11512" 
-  "11433" -> "11432" 
-  "11451" -> "11449" 
-  "11482" -> "11488" 
-  "11485" -> "11481" 
-  "11491" -> "11504" 
-  "11508" -> "11507" 
-  "11514" -> "11513" 
-  "11434" -> "11436" 
-  "11436" -> "11433" 
-  "11484" -> "11482" 
-  "11486" -> "11485" 
-  "11492" -> "11498" 
-  "11495" -> "11491" 
-  "11510" -> "11508" 
-  "11516" -> "11514" 
-  "11488" -> "11486" 
-  "11494" -> "11492" 
-  "11496" -> "11495" 
-  "11498" -> "11496" 
-  "11418" -> "11423" 
+  "11478" -> "11501" 
+  "11501" -> "11499" 
+  "11504" -> "11503" 
+  "11510" -> "11509" 
+  "11430" -> "11429" 
+  "11448" -> "11446" 
+  "11479" -> "11485" 
+  "11482" -> "11478" 
+  "11488" -> "11501" 
+  "11505" -> "11504" 
+  "11511" -> "11510" 
+  "11431" -> "11433" 
+  "11433" -> "11430" 
+  "11481" -> "11479" 
+  "11483" -> "11482" 
+  "11489" -> "11495" 
+  "11492" -> "11488" 
+  "11507" -> "11505" 
+  "11513" -> "11511" 
+  "11485" -> "11483" 
+  "11491" -> "11489" 
+  "11493" -> "11492" 
+  "11495" -> "11493" 
+  "11415" -> "11420" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/21-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/21-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/21-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/21-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,32 +1,32 @@
 digraph "IsWhitelistedNativeCaller" {  
-"566" [label = <(RETURN,return false;,return false;)<SUB>336</SUB>> ]
-"511" [label = <(&lt;operator&gt;.logicalNot,!art::kIsTargetBuild)<SUB>323</SUB>> ]
-"524" [label = <(&lt;operator&gt;.lessThan,i &lt; kMaxReturnAddressDepth)<SUB>326</SUB>> ]
-"527" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>326</SUB>> ]
-"512" [label = <(&lt;operator&gt;.fieldAccess,art::kIsTargetBuild)<SUB>323</SUB>> ]
-"516" [label = <(RETURN,return false;,return false;)<SUB>324</SUB>> ]
-"521" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>326</SUB>> ]
-"531" [label = <(&lt;operator&gt;.assignment,* return_address = GetReturnAddress(i))<SUB>327</SUB>> ]
-"543" [label = <(&lt;operator&gt;.assignment,kind = CodeRangeCache::GetSingleton().GetSharedObjectKind(return_address))<SUB>331</SUB>> ]
-"514" [label = <(FIELD_IDENTIFIER,kIsTargetBuild,kIsTargetBuild)<SUB>323</SUB>> ]
-"533" [label = <(GetReturnAddress,GetReturnAddress(i))<SUB>327</SUB>> ]
-"536" [label = <(&lt;operator&gt;.equals,return_address == nullptr)<SUB>328</SUB>> ]
-"545" [label = <(GetSharedObjectKind,CodeRangeCache::GetSingleton().GetSharedObjectKind(return_address))<SUB>331</SUB>> ]
-"554" [label = <(&lt;operator&gt;.notEquals,kind != SharedObjectKind::kRuntime)<SUB>332</SUB>> ]
-"540" [label = <(RETURN,return false;,return false;)<SUB>329</SUB>> ]
-"546" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton().GetSharedObjectKind)<SUB>331</SUB>> ]
-"556" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kRuntime)<SUB>332</SUB>> ]
-"560" [label = <(RETURN,return kind == SharedObjectKind::kApexModule;,return kind == SharedObjectKind::kApexModule;)<SUB>333</SUB>> ]
-"547" [label = <(CodeRangeCache::GetSingleton,CodeRangeCache::GetSingleton())<SUB>331</SUB>> ]
-"551" [label = <(FIELD_IDENTIFIER,GetSharedObjectKind,GetSharedObjectKind)<SUB>331</SUB>> ]
-"558" [label = <(FIELD_IDENTIFIER,kRuntime,kRuntime)<SUB>332</SUB>> ]
-"561" [label = <(&lt;operator&gt;.equals,kind == SharedObjectKind::kApexModule)<SUB>333</SUB>> ]
-"548" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton)<SUB>331</SUB>> ]
-"563" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kApexModule)<SUB>333</SUB>> ]
-"550" [label = <(FIELD_IDENTIFIER,GetSingleton,GetSingleton)<SUB>331</SUB>> ]
-"565" [label = <(FIELD_IDENTIFIER,kApexModule,kApexModule)<SUB>333</SUB>> ]
-"508" [label = <(METHOD,IsWhitelistedNativeCaller)<SUB>322</SUB>> ]
-"568" [label = <(METHOD_RETURN,bool)<SUB>322</SUB>> ]
+"566" [label = <(RETURN,return false;,return false;)<SUB>335</SUB>> ]
+"511" [label = <(&lt;operator&gt;.logicalNot,!art::kIsTargetBuild)<SUB>322</SUB>> ]
+"524" [label = <(&lt;operator&gt;.lessThan,i &lt; kMaxReturnAddressDepth)<SUB>325</SUB>> ]
+"527" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>325</SUB>> ]
+"512" [label = <(&lt;operator&gt;.fieldAccess,art::kIsTargetBuild)<SUB>322</SUB>> ]
+"516" [label = <(RETURN,return false;,return false;)<SUB>323</SUB>> ]
+"521" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>325</SUB>> ]
+"531" [label = <(&lt;operator&gt;.assignment,* return_address = GetReturnAddress(i))<SUB>326</SUB>> ]
+"543" [label = <(&lt;operator&gt;.assignment,kind = CodeRangeCache::GetSingleton().GetSharedObjectKind(return_address))<SUB>330</SUB>> ]
+"514" [label = <(FIELD_IDENTIFIER,kIsTargetBuild,kIsTargetBuild)<SUB>322</SUB>> ]
+"533" [label = <(GetReturnAddress,GetReturnAddress(i))<SUB>326</SUB>> ]
+"536" [label = <(&lt;operator&gt;.equals,return_address == nullptr)<SUB>327</SUB>> ]
+"545" [label = <(GetSharedObjectKind,CodeRangeCache::GetSingleton().GetSharedObjectKind(return_address))<SUB>330</SUB>> ]
+"554" [label = <(&lt;operator&gt;.notEquals,kind != SharedObjectKind::kRuntime)<SUB>331</SUB>> ]
+"540" [label = <(RETURN,return false;,return false;)<SUB>328</SUB>> ]
+"546" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton().GetSharedObjectKind)<SUB>330</SUB>> ]
+"556" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kRuntime)<SUB>331</SUB>> ]
+"560" [label = <(RETURN,return kind == SharedObjectKind::kApexModule;,return kind == SharedObjectKind::kApexModule;)<SUB>332</SUB>> ]
+"547" [label = <(CodeRangeCache::GetSingleton,CodeRangeCache::GetSingleton())<SUB>330</SUB>> ]
+"551" [label = <(FIELD_IDENTIFIER,GetSharedObjectKind,GetSharedObjectKind)<SUB>330</SUB>> ]
+"558" [label = <(FIELD_IDENTIFIER,kRuntime,kRuntime)<SUB>331</SUB>> ]
+"561" [label = <(&lt;operator&gt;.equals,kind == SharedObjectKind::kApexModule)<SUB>332</SUB>> ]
+"548" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton)<SUB>330</SUB>> ]
+"563" [label = <(&lt;operator&gt;.fieldAccess,SharedObjectKind::kApexModule)<SUB>332</SUB>> ]
+"550" [label = <(FIELD_IDENTIFIER,GetSingleton,GetSingleton)<SUB>330</SUB>> ]
+"565" [label = <(FIELD_IDENTIFIER,kApexModule,kApexModule)<SUB>332</SUB>> ]
+"508" [label = <(METHOD,IsWhitelistedNativeCaller)<SUB>321</SUB>> ]
+"568" [label = <(METHOD_RETURN,bool)<SUB>321</SUB>> ]
   "566" -> "568" 
   "511" -> "516" 
   "511" -> "521" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/210-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/210-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/210-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/210-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,103 +1,103 @@
 digraph "GetStringUTFChars" {  
-"11545" [label = <(soa,soa(env))<SUB>2262</SUB>> ]
-"11547" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2263</SUB>> ]
-"11565" [label = <(&lt;operator&gt;.assignment,byte_count = s-&gt;GetUtfLength())<SUB>2264</SUB>> ]
-"11572" [label = <(&lt;operator&gt;.assignment,* bytes = new char[byte_count + 1])<SUB>2265</SUB>> ]
-"11576" [label = <(CHECK,CHECK(bytes != nullptr))<SUB>2266</SUB>> ]
-"11624" [label = <(&lt;operator&gt;.assignment,bytes[byte_count] = '\0')<SUB>2275</SUB>> ]
-"11629" [label = <(RETURN,return bytes;,return bytes;)<SUB>2276</SUB>> ]
-"11529" [label = <(&lt;operator&gt;.equals,java_string == nullptr)<SUB>2256</SUB>> ]
-"11536" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2259</SUB>> ]
-"11548" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2263</SUB>> ]
-"11555" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2263</SUB>> ]
-"11567" [label = <(GetUtfLength,s-&gt;GetUtfLength())<SUB>2264</SUB>> ]
-"11574" [label = <(&lt;operator&gt;.new,new char[byte_count + 1])<SUB>2265</SUB>> ]
-"11577" [label = <(&lt;operator&gt;.notEquals,bytes != nullptr)<SUB>2266</SUB>> ]
-"11581" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2267</SUB>> ]
-"11625" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[byte_count])<SUB>2275</SUB>> ]
-"11533" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2257</SUB>> ]
-"11540" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2260</SUB>> ]
-"11549" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2263</SUB>> ]
-"11556" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2263</SUB>> ]
-"11568" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetUtfLength)<SUB>2264</SUB>> ]
-"11582" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2267</SUB>> ]
-"11541" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2260</SUB>> ]
-"11551" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2263</SUB>> ]
-"11557" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2263</SUB>> ]
-"11560" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2263</SUB>> ]
-"11570" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>2264</SUB>> ]
-"11584" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2267</SUB>> ]
-"11592" [label = <(&lt;operator&gt;.lessThan,i &lt; byte_count)<SUB>2268</SUB>> ]
-"11595" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2268</SUB>> ]
-"11610" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>2272</SUB>> ]
-"11616" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(bytes, byte_count, chars, s-&gt;GetLength()))<SUB>2273</SUB>> ]
-"11553" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2263</SUB>> ]
-"11559" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2263</SUB>> ]
-"11562" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2263</SUB>> ]
-"11589" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2268</SUB>> ]
-"11598" [label = <(&lt;operator&gt;.assignment,bytes[i] = s-&gt;CharAt(i))<SUB>2269</SUB>> ]
-"11612" [label = <(GetValue,s-&gt;GetValue())<SUB>2272</SUB>> ]
-"11620" [label = <(GetLength,s-&gt;GetLength())<SUB>2273</SUB>> ]
-"11599" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[i])<SUB>2269</SUB>> ]
-"11602" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2269</SUB>> ]
-"11613" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2272</SUB>> ]
-"11621" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2273</SUB>> ]
-"11603" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2269</SUB>> ]
-"11615" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2272</SUB>> ]
-"11623" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2273</SUB>> ]
-"11605" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2269</SUB>> ]
-"11523" [label = <(METHOD,GetStringUTFChars)<SUB>2255</SUB>> ]
-"11631" [label = <(METHOD_RETURN,const char*)<SUB>2255</SUB>> ]
-  "11545" -> "11553" 
-  "11547" -> "11570" 
-  "11565" -> "11574" 
-  "11572" -> "11577" 
-  "11576" -> "11584" 
-  "11624" -> "11629" 
-  "11629" -> "11631" 
-  "11529" -> "11533" 
-  "11529" -> "11536" 
-  "11536" -> "11541" 
-  "11536" -> "11545" 
-  "11548" -> "11559" 
-  "11555" -> "11547" 
+"11542" [label = <(soa,soa(env))<SUB>2260</SUB>> ]
+"11544" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::String&gt; s = soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2261</SUB>> ]
+"11562" [label = <(&lt;operator&gt;.assignment,byte_count = s-&gt;GetUtfLength())<SUB>2262</SUB>> ]
+"11569" [label = <(&lt;operator&gt;.assignment,* bytes = new char[byte_count + 1])<SUB>2263</SUB>> ]
+"11573" [label = <(CHECK,CHECK(bytes != nullptr))<SUB>2264</SUB>> ]
+"11621" [label = <(&lt;operator&gt;.assignment,bytes[byte_count] = '\0')<SUB>2273</SUB>> ]
+"11626" [label = <(RETURN,return bytes;,return bytes;)<SUB>2274</SUB>> ]
+"11526" [label = <(&lt;operator&gt;.equals,java_string == nullptr)<SUB>2254</SUB>> ]
+"11533" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2257</SUB>> ]
+"11545" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::String&gt; s)<SUB>2261</SUB>> ]
+"11552" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::String&gt;(java_string))<SUB>2261</SUB>> ]
+"11564" [label = <(GetUtfLength,s-&gt;GetUtfLength())<SUB>2262</SUB>> ]
+"11571" [label = <(&lt;operator&gt;.new,new char[byte_count + 1])<SUB>2263</SUB>> ]
+"11574" [label = <(&lt;operator&gt;.notEquals,bytes != nullptr)<SUB>2264</SUB>> ]
+"11578" [label = <(IsCompressed,s-&gt;IsCompressed())<SUB>2265</SUB>> ]
+"11622" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[byte_count])<SUB>2273</SUB>> ]
+"11530" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2255</SUB>> ]
+"11537" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2258</SUB>> ]
+"11546" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::String)<SUB>2261</SUB>> ]
+"11553" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::String)<SUB>2261</SUB>> ]
+"11565" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetUtfLength)<SUB>2262</SUB>> ]
+"11579" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;IsCompressed)<SUB>2265</SUB>> ]
+"11538" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2258</SUB>> ]
+"11548" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2261</SUB>> ]
+"11554" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2261</SUB>> ]
+"11557" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>2261</SUB>> ]
+"11567" [label = <(FIELD_IDENTIFIER,GetUtfLength,GetUtfLength)<SUB>2262</SUB>> ]
+"11581" [label = <(FIELD_IDENTIFIER,IsCompressed,IsCompressed)<SUB>2265</SUB>> ]
+"11589" [label = <(&lt;operator&gt;.lessThan,i &lt; byte_count)<SUB>2266</SUB>> ]
+"11592" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2266</SUB>> ]
+"11607" [label = <(&lt;operator&gt;.assignment,* chars = s-&gt;GetValue())<SUB>2270</SUB>> ]
+"11613" [label = <(ConvertUtf16ToModifiedUtf8,ConvertUtf16ToModifiedUtf8(bytes, byte_count, chars, s-&gt;GetLength()))<SUB>2271</SUB>> ]
+"11550" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2261</SUB>> ]
+"11556" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2261</SUB>> ]
+"11559" [label = <(FIELD_IDENTIFIER,String,String)<SUB>2261</SUB>> ]
+"11586" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2266</SUB>> ]
+"11595" [label = <(&lt;operator&gt;.assignment,bytes[i] = s-&gt;CharAt(i))<SUB>2267</SUB>> ]
+"11609" [label = <(GetValue,s-&gt;GetValue())<SUB>2270</SUB>> ]
+"11617" [label = <(GetLength,s-&gt;GetLength())<SUB>2271</SUB>> ]
+"11596" [label = <(&lt;operator&gt;.indirectIndexAccess,bytes[i])<SUB>2267</SUB>> ]
+"11599" [label = <(CharAt,s-&gt;CharAt(i))<SUB>2267</SUB>> ]
+"11610" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetValue)<SUB>2270</SUB>> ]
+"11618" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;GetLength)<SUB>2271</SUB>> ]
+"11600" [label = <(&lt;operator&gt;.indirectFieldAccess,s-&gt;CharAt)<SUB>2267</SUB>> ]
+"11612" [label = <(FIELD_IDENTIFIER,GetValue,GetValue)<SUB>2270</SUB>> ]
+"11620" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2271</SUB>> ]
+"11602" [label = <(FIELD_IDENTIFIER,CharAt,CharAt)<SUB>2267</SUB>> ]
+"11520" [label = <(METHOD,GetStringUTFChars)<SUB>2253</SUB>> ]
+"11628" [label = <(METHOD_RETURN,const char*)<SUB>2253</SUB>> ]
+  "11542" -> "11550" 
+  "11544" -> "11567" 
+  "11562" -> "11571" 
+  "11569" -> "11574" 
+  "11573" -> "11581" 
+  "11621" -> "11626" 
+  "11626" -> "11628" 
+  "11526" -> "11530" 
+  "11526" -> "11533" 
+  "11533" -> "11538" 
+  "11533" -> "11542" 
+  "11545" -> "11556" 
+  "11552" -> "11544" 
+  "11564" -> "11562" 
+  "11571" -> "11569" 
+  "11574" -> "11573" 
+  "11578" -> "11586" 
+  "11578" -> "11612" 
+  "11622" -> "11621" 
+  "11530" -> "11628" 
+  "11537" -> "11542" 
+  "11546" -> "11545" 
+  "11553" -> "11552" 
+  "11565" -> "11564" 
+  "11579" -> "11578" 
+  "11538" -> "11537" 
+  "11548" -> "11546" 
+  "11554" -> "11559" 
+  "11557" -> "11553" 
   "11567" -> "11565" 
-  "11574" -> "11572" 
-  "11577" -> "11576" 
-  "11581" -> "11589" 
-  "11581" -> "11615" 
-  "11625" -> "11624" 
-  "11533" -> "11631" 
-  "11540" -> "11545" 
-  "11549" -> "11548" 
-  "11556" -> "11555" 
-  "11568" -> "11567" 
-  "11582" -> "11581" 
-  "11541" -> "11540" 
-  "11551" -> "11549" 
-  "11557" -> "11562" 
-  "11560" -> "11556" 
-  "11570" -> "11568" 
-  "11584" -> "11582" 
-  "11592" -> "11599" 
-  "11592" -> "11625" 
-  "11595" -> "11592" 
-  "11610" -> "11623" 
-  "11616" -> "11625" 
-  "11553" -> "11551" 
+  "11581" -> "11579" 
+  "11589" -> "11596" 
+  "11589" -> "11622" 
+  "11592" -> "11589" 
+  "11607" -> "11620" 
+  "11613" -> "11622" 
+  "11550" -> "11548" 
+  "11556" -> "11554" 
   "11559" -> "11557" 
-  "11562" -> "11560" 
-  "11589" -> "11592" 
-  "11598" -> "11595" 
+  "11586" -> "11589" 
+  "11595" -> "11592" 
+  "11609" -> "11607" 
+  "11617" -> "11613" 
+  "11596" -> "11602" 
+  "11599" -> "11595" 
+  "11610" -> "11609" 
+  "11618" -> "11617" 
+  "11600" -> "11599" 
   "11612" -> "11610" 
-  "11620" -> "11616" 
-  "11599" -> "11605" 
-  "11602" -> "11598" 
-  "11613" -> "11612" 
-  "11621" -> "11620" 
-  "11603" -> "11602" 
-  "11615" -> "11613" 
-  "11623" -> "11621" 
-  "11605" -> "11603" 
-  "11523" -> "11529" 
+  "11620" -> "11618" 
+  "11602" -> "11600" 
+  "11520" -> "11526" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/211-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/211-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/211-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/211-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseStringUTFChars" {  
-"11638" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2280</SUB>> ]
-"11633" [label = <(METHOD,ReleaseStringUTFChars)<SUB>2279</SUB>> ]
-"11640" [label = <(METHOD_RETURN,void)<SUB>2279</SUB>> ]
-  "11638" -> "11640" 
-  "11633" -> "11638" 
+"11635" [label = <(&lt;operator&gt;.delete,delete[] chars)<SUB>2278</SUB>> ]
+"11630" [label = <(METHOD,ReleaseStringUTFChars)<SUB>2277</SUB>> ]
+"11637" [label = <(METHOD_RETURN,void)<SUB>2277</SUB>> ]
+  "11635" -> "11637" 
+  "11630" -> "11635" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/212-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/212-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/212-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/212-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,108 +1,108 @@
 digraph "GetArrayLength" {  
-"11646" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2284</SUB>> ]
-"11665" [label = <(soa,soa(env))<SUB>2285</SUB>> ]
-"11667" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2286</SUB>> ]
-"11710" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = obj-&gt;AsArray())<SUB>2291</SUB>> ]
-"11722" [label = <(RETURN,return array-&gt;GetLength();,return array-&gt;GetLength();)<SUB>2292</SUB>> ]
-"11668" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>2286</SUB>> ]
-"11675" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2286</SUB>> ]
-"11685" [label = <(UNLIKELY,UNLIKELY(!obj-&gt;IsArrayInstance()))<SUB>2287</SUB>> ]
-"11711" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2291</SUB>> ]
-"11718" [label = <(AsArray,obj-&gt;AsArray())<SUB>2291</SUB>> ]
-"11723" [label = <(GetLength,array-&gt;GetLength())<SUB>2292</SUB>> ]
-"11669" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2286</SUB>> ]
-"11676" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2286</SUB>> ]
-"11686" [label = <(&lt;operator&gt;.logicalNot,!obj-&gt;IsArrayInstance())<SUB>2287</SUB>> ]
-"11692" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetArrayLength&quot;, &quot;not an array: %s&quot;, obj-&gt;PrettyTypeOf().c_str()))<SUB>2288</SUB>> ]
-"11708" [label = <(RETURN,return 0;,return 0;)<SUB>2289</SUB>> ]
-"11712" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2291</SUB>> ]
-"11719" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;AsArray)<SUB>2291</SUB>> ]
-"11724" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2292</SUB>> ]
-"11650" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2284</SUB>> ]
-"11671" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2286</SUB>> ]
-"11677" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2286</SUB>> ]
-"11680" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2286</SUB>> ]
-"11687" [label = <(IsArrayInstance,obj-&gt;IsArrayInstance())<SUB>2287</SUB>> ]
-"11693" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2288</SUB>> ]
-"11701" [label = <(c_str,obj-&gt;PrettyTypeOf().c_str())<SUB>2288</SUB>> ]
-"11714" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2291</SUB>> ]
-"11721" [label = <(FIELD_IDENTIFIER,AsArray,AsArray)<SUB>2291</SUB>> ]
-"11726" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2292</SUB>> ]
-"11651" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2284</SUB>> ]
-"11655" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2284</SUB>> ]
-"11662" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2284</SUB>> ]
-"11673" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2286</SUB>> ]
-"11679" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2286</SUB>> ]
-"11682" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2286</SUB>> ]
-"11688" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;IsArrayInstance)<SUB>2287</SUB>> ]
-"11694" [label = <(Vm,soa.Vm())<SUB>2288</SUB>> ]
-"11698" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2288</SUB>> ]
-"11702" [label = <(&lt;operator&gt;.fieldAccess,obj-&gt;PrettyTypeOf().c_str)<SUB>2288</SUB>> ]
-"11716" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2291</SUB>> ]
-"11656" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2284</SUB>> ]
-"11690" [label = <(FIELD_IDENTIFIER,IsArrayInstance,IsArrayInstance)<SUB>2287</SUB>> ]
-"11695" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2288</SUB>> ]
-"11703" [label = <(PrettyTypeOf,obj-&gt;PrettyTypeOf())<SUB>2288</SUB>> ]
-"11707" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2288</SUB>> ]
-"11657" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2284</SUB>> ]
-"11659" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2284</SUB>> ]
-"11697" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2288</SUB>> ]
-"11704" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;PrettyTypeOf)<SUB>2288</SUB>> ]
-"11706" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>2288</SUB>> ]
-"11642" [label = <(METHOD,GetArrayLength)<SUB>2283</SUB>> ]
-"11727" [label = <(METHOD_RETURN,jsize)<SUB>2283</SUB>> ]
-  "11646" -> "11651" 
-  "11646" -> "11665" 
-  "11665" -> "11673" 
-  "11667" -> "11690" 
-  "11710" -> "11726" 
-  "11722" -> "11727" 
-  "11668" -> "11679" 
-  "11675" -> "11667" 
-  "11685" -> "11697" 
-  "11685" -> "11716" 
-  "11711" -> "11721" 
-  "11718" -> "11710" 
-  "11723" -> "11722" 
-  "11669" -> "11668" 
-  "11676" -> "11675" 
-  "11686" -> "11685" 
-  "11692" -> "11708" 
-  "11708" -> "11727" 
-  "11712" -> "11711" 
-  "11719" -> "11718" 
-  "11724" -> "11723" 
-  "11650" -> "11657" 
-  "11650" -> "11665" 
-  "11671" -> "11669" 
-  "11677" -> "11682" 
-  "11680" -> "11676" 
-  "11687" -> "11686" 
-  "11693" -> "11706" 
-  "11701" -> "11692" 
-  "11714" -> "11712" 
-  "11721" -> "11719" 
-  "11726" -> "11724" 
-  "11651" -> "11650" 
-  "11655" -> "11662" 
-  "11662" -> "11727" 
-  "11673" -> "11671" 
+"11643" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2282</SUB>> ]
+"11662" [label = <(soa,soa(env))<SUB>2283</SUB>> ]
+"11664" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2284</SUB>> ]
+"11707" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = obj-&gt;AsArray())<SUB>2289</SUB>> ]
+"11719" [label = <(RETURN,return array-&gt;GetLength();,return array-&gt;GetLength();)<SUB>2290</SUB>> ]
+"11665" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>2284</SUB>> ]
+"11672" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_array))<SUB>2284</SUB>> ]
+"11682" [label = <(UNLIKELY,UNLIKELY(!obj-&gt;IsArrayInstance()))<SUB>2285</SUB>> ]
+"11708" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2289</SUB>> ]
+"11715" [label = <(AsArray,obj-&gt;AsArray())<SUB>2289</SUB>> ]
+"11720" [label = <(GetLength,array-&gt;GetLength())<SUB>2290</SUB>> ]
+"11666" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2284</SUB>> ]
+"11673" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2284</SUB>> ]
+"11683" [label = <(&lt;operator&gt;.logicalNot,!obj-&gt;IsArrayInstance())<SUB>2285</SUB>> ]
+"11689" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetArrayLength&quot;, &quot;not an array: %s&quot;, obj-&gt;PrettyTypeOf().c_str()))<SUB>2286</SUB>> ]
+"11705" [label = <(RETURN,return 0;,return 0;)<SUB>2287</SUB>> ]
+"11709" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2289</SUB>> ]
+"11716" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;AsArray)<SUB>2289</SUB>> ]
+"11721" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2290</SUB>> ]
+"11647" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2282</SUB>> ]
+"11668" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2284</SUB>> ]
+"11674" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2284</SUB>> ]
+"11677" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2284</SUB>> ]
+"11684" [label = <(IsArrayInstance,obj-&gt;IsArrayInstance())<SUB>2285</SUB>> ]
+"11690" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2286</SUB>> ]
+"11698" [label = <(c_str,obj-&gt;PrettyTypeOf().c_str())<SUB>2286</SUB>> ]
+"11711" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2289</SUB>> ]
+"11718" [label = <(FIELD_IDENTIFIER,AsArray,AsArray)<SUB>2289</SUB>> ]
+"11723" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2290</SUB>> ]
+"11648" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2282</SUB>> ]
+"11652" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2282</SUB>> ]
+"11659" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))<SUB>2282</SUB>> ]
+"11670" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2284</SUB>> ]
+"11676" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2284</SUB>> ]
+"11679" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2284</SUB>> ]
+"11685" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;IsArrayInstance)<SUB>2285</SUB>> ]
+"11691" [label = <(Vm,soa.Vm())<SUB>2286</SUB>> ]
+"11695" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2286</SUB>> ]
+"11699" [label = <(&lt;operator&gt;.fieldAccess,obj-&gt;PrettyTypeOf().c_str)<SUB>2286</SUB>> ]
+"11713" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2289</SUB>> ]
+"11653" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2282</SUB>> ]
+"11687" [label = <(FIELD_IDENTIFIER,IsArrayInstance,IsArrayInstance)<SUB>2285</SUB>> ]
+"11692" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2286</SUB>> ]
+"11700" [label = <(PrettyTypeOf,obj-&gt;PrettyTypeOf())<SUB>2286</SUB>> ]
+"11704" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2286</SUB>> ]
+"11654" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2282</SUB>> ]
+"11656" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2282</SUB>> ]
+"11694" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2286</SUB>> ]
+"11701" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;PrettyTypeOf)<SUB>2286</SUB>> ]
+"11703" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>2286</SUB>> ]
+"11639" [label = <(METHOD,GetArrayLength)<SUB>2281</SUB>> ]
+"11724" [label = <(METHOD_RETURN,jsize)<SUB>2281</SUB>> ]
+  "11643" -> "11648" 
+  "11643" -> "11662" 
+  "11662" -> "11670" 
+  "11664" -> "11687" 
+  "11707" -> "11723" 
+  "11719" -> "11724" 
+  "11665" -> "11676" 
+  "11672" -> "11664" 
+  "11682" -> "11694" 
+  "11682" -> "11713" 
+  "11708" -> "11718" 
+  "11715" -> "11707" 
+  "11720" -> "11719" 
+  "11666" -> "11665" 
+  "11673" -> "11672" 
+  "11683" -> "11682" 
+  "11689" -> "11705" 
+  "11705" -> "11724" 
+  "11709" -> "11708" 
+  "11716" -> "11715" 
+  "11721" -> "11720" 
+  "11647" -> "11654" 
+  "11647" -> "11662" 
+  "11668" -> "11666" 
+  "11674" -> "11679" 
+  "11677" -> "11673" 
+  "11684" -> "11683" 
+  "11690" -> "11703" 
+  "11698" -> "11689" 
+  "11711" -> "11709" 
+  "11718" -> "11716" 
+  "11723" -> "11721" 
+  "11648" -> "11647" 
+  "11652" -> "11659" 
+  "11659" -> "11724" 
+  "11670" -> "11668" 
+  "11676" -> "11674" 
   "11679" -> "11677" 
-  "11682" -> "11680" 
-  "11688" -> "11687" 
-  "11694" -> "11698" 
-  "11698" -> "11693" 
-  "11702" -> "11701" 
-  "11716" -> "11714" 
-  "11656" -> "11655" 
-  "11690" -> "11688" 
-  "11695" -> "11694" 
-  "11703" -> "11707" 
-  "11707" -> "11702" 
-  "11657" -> "11659" 
-  "11659" -> "11656" 
-  "11697" -> "11695" 
-  "11704" -> "11703" 
-  "11706" -> "11704" 
-  "11642" -> "11646" 
+  "11685" -> "11684" 
+  "11691" -> "11695" 
+  "11695" -> "11690" 
+  "11699" -> "11698" 
+  "11713" -> "11711" 
+  "11653" -> "11652" 
+  "11687" -> "11685" 
+  "11692" -> "11691" 
+  "11700" -> "11704" 
+  "11704" -> "11699" 
+  "11654" -> "11656" 
+  "11656" -> "11653" 
+  "11694" -> "11692" 
+  "11701" -> "11700" 
+  "11703" -> "11701" 
+  "11639" -> "11643" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/213-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/213-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/213-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/213-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,75 +1,75 @@
 digraph "GetObjectArrayElement" {  
-"11734" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2296</SUB>> ]
-"11753" [label = <(soa,soa(env))<SUB>2297</SUB>> ]
-"11755" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2298</SUB>> ]
-"11780" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));)<SUB>2300</SUB>> ]
-"11756" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2298</SUB>> ]
-"11767" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2299</SUB>> ]
-"11781" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index)))<SUB>2300</SUB>> ]
-"11757" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2298</SUB>> ]
-"11762" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2298</SUB>> ]
-"11768" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2299</SUB>> ]
-"11775" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2299</SUB>> ]
-"11782" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>2300</SUB>> ]
-"11787" [label = <(Get,array-&gt;Get(index))<SUB>2300</SUB>> ]
-"11738" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2296</SUB>> ]
-"11759" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2298</SUB>> ]
-"11763" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2298</SUB>> ]
-"11769" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2299</SUB>> ]
-"11772" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2299</SUB>> ]
-"11776" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2299</SUB>> ]
-"11783" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2300</SUB>> ]
-"11788" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Get)<SUB>2300</SUB>> ]
-"11739" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2296</SUB>> ]
-"11743" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2296</SUB>> ]
-"11750" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2296</SUB>> ]
-"11761" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2298</SUB>> ]
-"11765" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2298</SUB>> ]
-"11771" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2299</SUB>> ]
-"11774" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2299</SUB>> ]
-"11778" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2299</SUB>> ]
-"11785" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2300</SUB>> ]
-"11790" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2300</SUB>> ]
-"11744" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2296</SUB>> ]
-"11745" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2296</SUB>> ]
-"11747" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2296</SUB>> ]
-"11729" [label = <(METHOD,GetObjectArrayElement)<SUB>2295</SUB>> ]
-"11792" [label = <(METHOD_RETURN,jobject)<SUB>2295</SUB>> ]
-  "11734" -> "11739" 
-  "11734" -> "11753" 
-  "11753" -> "11761" 
-  "11755" -> "11785" 
-  "11780" -> "11792" 
-  "11756" -> "11771" 
-  "11767" -> "11755" 
-  "11781" -> "11780" 
-  "11757" -> "11765" 
-  "11762" -> "11756" 
-  "11768" -> "11778" 
-  "11775" -> "11767" 
-  "11782" -> "11790" 
-  "11787" -> "11781" 
-  "11738" -> "11745" 
-  "11738" -> "11753" 
-  "11759" -> "11757" 
-  "11763" -> "11762" 
-  "11769" -> "11774" 
-  "11772" -> "11768" 
-  "11776" -> "11775" 
-  "11783" -> "11782" 
-  "11788" -> "11787" 
-  "11739" -> "11738" 
-  "11743" -> "11750" 
-  "11750" -> "11792" 
-  "11761" -> "11759" 
-  "11765" -> "11763" 
+"11731" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2294</SUB>> ]
+"11750" [label = <(soa,soa(env))<SUB>2295</SUB>> ]
+"11752" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2296</SUB>> ]
+"11777" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));,return soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index));)<SUB>2298</SUB>> ]
+"11753" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2296</SUB>> ]
+"11764" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2297</SUB>> ]
+"11778" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(array-&gt;Get(index)))<SUB>2298</SUB>> ]
+"11754" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2296</SUB>> ]
+"11759" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2296</SUB>> ]
+"11765" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2297</SUB>> ]
+"11772" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2297</SUB>> ]
+"11779" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>2298</SUB>> ]
+"11784" [label = <(Get,array-&gt;Get(index))<SUB>2298</SUB>> ]
+"11735" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2294</SUB>> ]
+"11756" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2296</SUB>> ]
+"11760" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2296</SUB>> ]
+"11766" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2297</SUB>> ]
+"11769" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2297</SUB>> ]
+"11773" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2297</SUB>> ]
+"11780" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2298</SUB>> ]
+"11785" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Get)<SUB>2298</SUB>> ]
+"11736" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2294</SUB>> ]
+"11740" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2294</SUB>> ]
+"11747" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2294</SUB>> ]
+"11758" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2296</SUB>> ]
+"11762" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2296</SUB>> ]
+"11768" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2297</SUB>> ]
+"11771" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2297</SUB>> ]
+"11775" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2297</SUB>> ]
+"11782" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2298</SUB>> ]
+"11787" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2298</SUB>> ]
+"11741" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2294</SUB>> ]
+"11742" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2294</SUB>> ]
+"11744" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2294</SUB>> ]
+"11726" [label = <(METHOD,GetObjectArrayElement)<SUB>2293</SUB>> ]
+"11789" [label = <(METHOD_RETURN,jobject)<SUB>2293</SUB>> ]
+  "11731" -> "11736" 
+  "11731" -> "11750" 
+  "11750" -> "11758" 
+  "11752" -> "11782" 
+  "11777" -> "11789" 
+  "11753" -> "11768" 
+  "11764" -> "11752" 
+  "11778" -> "11777" 
+  "11754" -> "11762" 
+  "11759" -> "11753" 
+  "11765" -> "11775" 
+  "11772" -> "11764" 
+  "11779" -> "11787" 
+  "11784" -> "11778" 
+  "11735" -> "11742" 
+  "11735" -> "11750" 
+  "11756" -> "11754" 
+  "11760" -> "11759" 
+  "11766" -> "11771" 
+  "11769" -> "11765" 
+  "11773" -> "11772" 
+  "11780" -> "11779" 
+  "11785" -> "11784" 
+  "11736" -> "11735" 
+  "11740" -> "11747" 
+  "11747" -> "11789" 
+  "11758" -> "11756" 
+  "11762" -> "11760" 
+  "11768" -> "11766" 
   "11771" -> "11769" 
-  "11774" -> "11772" 
-  "11778" -> "11776" 
-  "11785" -> "11783" 
-  "11790" -> "11788" 
-  "11744" -> "11743" 
-  "11745" -> "11747" 
-  "11747" -> "11744" 
-  "11729" -> "11734" 
+  "11775" -> "11773" 
+  "11782" -> "11780" 
+  "11787" -> "11785" 
+  "11741" -> "11740" 
+  "11742" -> "11744" 
+  "11744" -> "11741" 
+  "11726" -> "11731" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/214-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/214-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/214-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/214-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,93 +1,93 @@
 digraph "SetObjectArrayElement" {  
-"11800" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2305</SUB>> ]
-"11818" [label = <(soa,soa(env))<SUB>2306</SUB>> ]
-"11820" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2307</SUB>> ]
-"11845" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; value = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2309</SUB>> ]
-"11862" [label = <(&lt;operator&gt;.greaterThan,array-&gt;Set&lt;false&gt;(index, value))<SUB>2310</SUB>> ]
-"11821" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2307</SUB>> ]
-"11832" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2308</SUB>> ]
-"11846" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; value)<SUB>2309</SUB>> ]
-"11853" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2309</SUB>> ]
-"11863" [label = <(&lt;operator&gt;.lessThan,array-&gt;Set&lt;false)<SUB>2310</SUB>> ]
-"11868" [label = <(&lt;operator&gt;.bracketedPrimary,(index, value))<SUB>2310</SUB>> ]
-"11822" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2307</SUB>> ]
-"11827" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2307</SUB>> ]
-"11833" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2308</SUB>> ]
-"11840" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2308</SUB>> ]
-"11847" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2309</SUB>> ]
-"11854" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2309</SUB>> ]
-"11864" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Set)<SUB>2310</SUB>> ]
-"11869" [label = <(&lt;operator&gt;.expressionList,index, value)<SUB>2310</SUB>> ]
-"11804" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2305</SUB>> ]
-"11824" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2307</SUB>> ]
-"11828" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2307</SUB>> ]
-"11834" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2308</SUB>> ]
-"11837" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2308</SUB>> ]
-"11841" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2308</SUB>> ]
-"11849" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2309</SUB>> ]
-"11855" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2309</SUB>> ]
-"11858" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2309</SUB>> ]
-"11866" [label = <(FIELD_IDENTIFIER,Set,Set)<SUB>2310</SUB>> ]
-"11805" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2305</SUB>> ]
-"11809" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2305</SUB>> ]
-"11816" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2305</SUB>> ]
-"11826" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2307</SUB>> ]
-"11830" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2307</SUB>> ]
-"11836" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2308</SUB>> ]
-"11839" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2308</SUB>> ]
-"11843" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2308</SUB>> ]
-"11851" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2309</SUB>> ]
-"11857" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2309</SUB>> ]
-"11860" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2309</SUB>> ]
-"11810" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2305</SUB>> ]
-"11811" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2305</SUB>> ]
-"11813" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2305</SUB>> ]
-"11794" [label = <(METHOD,SetObjectArrayElement)<SUB>2303</SUB>> ]
-"11872" [label = <(METHOD_RETURN,void)<SUB>2303</SUB>> ]
-  "11800" -> "11805" 
-  "11800" -> "11818" 
-  "11818" -> "11826" 
-  "11820" -> "11851" 
-  "11845" -> "11866" 
-  "11862" -> "11872" 
-  "11821" -> "11836" 
-  "11832" -> "11820" 
-  "11846" -> "11857" 
-  "11853" -> "11845" 
-  "11863" -> "11869" 
-  "11868" -> "11862" 
-  "11822" -> "11830" 
-  "11827" -> "11821" 
-  "11833" -> "11843" 
-  "11840" -> "11832" 
-  "11847" -> "11846" 
-  "11854" -> "11853" 
-  "11864" -> "11863" 
-  "11869" -> "11868" 
-  "11804" -> "11811" 
-  "11804" -> "11818" 
-  "11824" -> "11822" 
-  "11828" -> "11827" 
-  "11834" -> "11839" 
-  "11837" -> "11833" 
-  "11841" -> "11840" 
-  "11849" -> "11847" 
-  "11855" -> "11860" 
-  "11858" -> "11854" 
-  "11866" -> "11864" 
-  "11805" -> "11804" 
-  "11809" -> "11816" 
-  "11816" -> "11872" 
-  "11826" -> "11824" 
-  "11830" -> "11828" 
+"11797" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2303</SUB>> ]
+"11815" [label = <(soa,soa(env))<SUB>2304</SUB>> ]
+"11817" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array =\012        soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2305</SUB>> ]
+"11842" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; value = soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2307</SUB>> ]
+"11859" [label = <(&lt;operator&gt;.greaterThan,array-&gt;Set&lt;false&gt;(index, value))<SUB>2308</SUB>> ]
+"11818" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; array)<SUB>2305</SUB>> ]
+"11829" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;(java_array))<SUB>2306</SUB>> ]
+"11843" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; value)<SUB>2307</SUB>> ]
+"11850" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_value))<SUB>2307</SUB>> ]
+"11860" [label = <(&lt;operator&gt;.lessThan,array-&gt;Set&lt;false)<SUB>2308</SUB>> ]
+"11865" [label = <(&lt;operator&gt;.bracketedPrimary,(index, value))<SUB>2308</SUB>> ]
+"11819" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2305</SUB>> ]
+"11824" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; array)<SUB>2305</SUB>> ]
+"11830" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ObjectArray)<SUB>2306</SUB>> ]
+"11837" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt;(java_array))<SUB>2306</SUB>> ]
+"11844" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2307</SUB>> ]
+"11851" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2307</SUB>> ]
+"11861" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;Set)<SUB>2308</SUB>> ]
+"11866" [label = <(&lt;operator&gt;.expressionList,index, value)<SUB>2308</SUB>> ]
+"11801" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2303</SUB>> ]
+"11821" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2305</SUB>> ]
+"11825" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2305</SUB>> ]
+"11831" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2306</SUB>> ]
+"11834" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2306</SUB>> ]
+"11838" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2306</SUB>> ]
+"11846" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2307</SUB>> ]
+"11852" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2307</SUB>> ]
+"11855" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2307</SUB>> ]
+"11863" [label = <(FIELD_IDENTIFIER,Set,Set)<SUB>2308</SUB>> ]
+"11802" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2303</SUB>> ]
+"11806" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2303</SUB>> ]
+"11813" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2303</SUB>> ]
+"11823" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2305</SUB>> ]
+"11827" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2305</SUB>> ]
+"11833" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2306</SUB>> ]
+"11836" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2306</SUB>> ]
+"11840" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2306</SUB>> ]
+"11848" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2307</SUB>> ]
+"11854" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2307</SUB>> ]
+"11857" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2307</SUB>> ]
+"11807" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2303</SUB>> ]
+"11808" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2303</SUB>> ]
+"11810" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2303</SUB>> ]
+"11791" [label = <(METHOD,SetObjectArrayElement)<SUB>2301</SUB>> ]
+"11869" [label = <(METHOD_RETURN,void)<SUB>2301</SUB>> ]
+  "11797" -> "11802" 
+  "11797" -> "11815" 
+  "11815" -> "11823" 
+  "11817" -> "11848" 
+  "11842" -> "11863" 
+  "11859" -> "11869" 
+  "11818" -> "11833" 
+  "11829" -> "11817" 
+  "11843" -> "11854" 
+  "11850" -> "11842" 
+  "11860" -> "11866" 
+  "11865" -> "11859" 
+  "11819" -> "11827" 
+  "11824" -> "11818" 
+  "11830" -> "11840" 
+  "11837" -> "11829" 
+  "11844" -> "11843" 
+  "11851" -> "11850" 
+  "11861" -> "11860" 
+  "11866" -> "11865" 
+  "11801" -> "11808" 
+  "11801" -> "11815" 
+  "11821" -> "11819" 
+  "11825" -> "11824" 
+  "11831" -> "11836" 
+  "11834" -> "11830" 
+  "11838" -> "11837" 
+  "11846" -> "11844" 
+  "11852" -> "11857" 
+  "11855" -> "11851" 
+  "11863" -> "11861" 
+  "11802" -> "11801" 
+  "11806" -> "11813" 
+  "11813" -> "11869" 
+  "11823" -> "11821" 
+  "11827" -> "11825" 
+  "11833" -> "11831" 
   "11836" -> "11834" 
-  "11839" -> "11837" 
-  "11843" -> "11841" 
-  "11851" -> "11849" 
+  "11840" -> "11838" 
+  "11848" -> "11846" 
+  "11854" -> "11852" 
   "11857" -> "11855" 
-  "11860" -> "11858" 
-  "11810" -> "11809" 
-  "11811" -> "11813" 
-  "11813" -> "11810" 
-  "11794" -> "11800" 
+  "11807" -> "11806" 
+  "11808" -> "11810" 
+  "11810" -> "11807" 
+  "11791" -> "11797" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/215-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/215-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/215-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/215-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,9 +1,9 @@
 digraph "NewBooleanArray" {  
-"11878" [label = <(RETURN,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);)<SUB>2314</SUB>> ]
-"11879" [label = <(NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;,NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length))<SUB>2314</SUB>> ]
-"11874" [label = <(METHOD,NewBooleanArray)<SUB>2313</SUB>> ]
-"11882" [label = <(METHOD_RETURN,jbooleanArray)<SUB>2313</SUB>> ]
-  "11878" -> "11882" 
-  "11879" -> "11878" 
-  "11874" -> "11879" 
+"11875" [label = <(RETURN,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);,return NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length);)<SUB>2312</SUB>> ]
+"11876" [label = <(NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;,NewPrimitiveArray&lt;jbooleanArray, mirror::BooleanArray&gt;(env, length))<SUB>2312</SUB>> ]
+"11871" [label = <(METHOD,NewBooleanArray)<SUB>2311</SUB>> ]
+"11879" [label = <(METHOD_RETURN,jbooleanArray)<SUB>2311</SUB>> ]
+  "11875" -> "11879" 
+  "11876" -> "11875" 
+  "11871" -> "11876" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/216-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/216-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/216-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/216-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,9 +1,9 @@
 digraph "NewByteArray" {  
-"11888" [label = <(RETURN,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);)<SUB>2318</SUB>> ]
-"11889" [label = <(NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;,NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length))<SUB>2318</SUB>> ]
-"11884" [label = <(METHOD,NewByteArray)<SUB>2317</SUB>> ]
-"11892" [label = <(METHOD_RETURN,jbyteArray)<SUB>2317</SUB>> ]
-  "11888" -> "11892" 
-  "11889" -> "11888" 
-  "11884" -> "11889" 
+"11885" [label = <(RETURN,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);,return NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length);)<SUB>2316</SUB>> ]
+"11886" [label = <(NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;,NewPrimitiveArray&lt;jbyteArray, mirror::ByteArray&gt;(env, length))<SUB>2316</SUB>> ]
+"11881" [label = <(METHOD,NewByteArray)<SUB>2315</SUB>> ]
+"11889" [label = <(METHOD_RETURN,jbyteArray)<SUB>2315</SUB>> ]
+  "11885" -> "11889" 
+  "11886" -> "11885" 
+  "11881" -> "11886" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/217-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/217-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/217-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/217-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,9 +1,9 @@
 digraph "NewCharArray" {  
-"11898" [label = <(RETURN,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);)<SUB>2322</SUB>> ]
-"11899" [label = <(NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;,NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length))<SUB>2322</SUB>> ]
-"11894" [label = <(METHOD,NewCharArray)<SUB>2321</SUB>> ]
-"11902" [label = <(METHOD_RETURN,jcharArray)<SUB>2321</SUB>> ]
-  "11898" -> "11902" 
-  "11899" -> "11898" 
-  "11894" -> "11899" 
+"11895" [label = <(RETURN,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);,return NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length);)<SUB>2320</SUB>> ]
+"11896" [label = <(NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;,NewPrimitiveArray&lt;jcharArray, mirror::CharArray&gt;(env, length))<SUB>2320</SUB>> ]
+"11891" [label = <(METHOD,NewCharArray)<SUB>2319</SUB>> ]
+"11899" [label = <(METHOD_RETURN,jcharArray)<SUB>2319</SUB>> ]
+  "11895" -> "11899" 
+  "11896" -> "11895" 
+  "11891" -> "11896" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/218-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/218-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/218-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/218-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,9 +1,9 @@
 digraph "NewDoubleArray" {  
-"11908" [label = <(RETURN,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);)<SUB>2326</SUB>> ]
-"11909" [label = <(NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;,NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length))<SUB>2326</SUB>> ]
-"11904" [label = <(METHOD,NewDoubleArray)<SUB>2325</SUB>> ]
-"11912" [label = <(METHOD_RETURN,jdoubleArray)<SUB>2325</SUB>> ]
-  "11908" -> "11912" 
-  "11909" -> "11908" 
-  "11904" -> "11909" 
+"11905" [label = <(RETURN,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);,return NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length);)<SUB>2324</SUB>> ]
+"11906" [label = <(NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;,NewPrimitiveArray&lt;jdoubleArray, mirror::DoubleArray&gt;(env, length))<SUB>2324</SUB>> ]
+"11901" [label = <(METHOD,NewDoubleArray)<SUB>2323</SUB>> ]
+"11909" [label = <(METHOD_RETURN,jdoubleArray)<SUB>2323</SUB>> ]
+  "11905" -> "11909" 
+  "11906" -> "11905" 
+  "11901" -> "11906" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/219-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/219-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/219-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/219-cfg.dot	2023-06-07 19:34:55.007387775 +0330
@@ -1,9 +1,9 @@
 digraph "NewFloatArray" {  
-"11918" [label = <(RETURN,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);)<SUB>2330</SUB>> ]
-"11919" [label = <(NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;,NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length))<SUB>2330</SUB>> ]
-"11914" [label = <(METHOD,NewFloatArray)<SUB>2329</SUB>> ]
-"11922" [label = <(METHOD_RETURN,jfloatArray)<SUB>2329</SUB>> ]
-  "11918" -> "11922" 
-  "11919" -> "11918" 
-  "11914" -> "11919" 
+"11915" [label = <(RETURN,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);,return NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length);)<SUB>2328</SUB>> ]
+"11916" [label = <(NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;,NewPrimitiveArray&lt;jfloatArray, mirror::FloatArray&gt;(env, length))<SUB>2328</SUB>> ]
+"11911" [label = <(METHOD,NewFloatArray)<SUB>2327</SUB>> ]
+"11919" [label = <(METHOD_RETURN,jfloatArray)<SUB>2327</SUB>> ]
+  "11915" -> "11919" 
+  "11916" -> "11915" 
+  "11911" -> "11916" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/22-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/22-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/22-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/22-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,5 +1,5 @@
 digraph "NotifySetObjectField" {  
-"575" [label = <(METHOD,NotifySetObjectField)<SUB>367</SUB>> ]
-"580" [label = <(METHOD_RETURN,void)<SUB>367</SUB>> ]
+"575" [label = <(METHOD,NotifySetObjectField)<SUB>366</SUB>> ]
+"580" [label = <(METHOD_RETURN,void)<SUB>366</SUB>> ]
   "575" -> "580" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/220-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/220-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/220-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/220-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,9 +1,9 @@
 digraph "NewIntArray" {  
-"11928" [label = <(RETURN,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);)<SUB>2334</SUB>> ]
-"11929" [label = <(NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;,NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length))<SUB>2334</SUB>> ]
-"11924" [label = <(METHOD,NewIntArray)<SUB>2333</SUB>> ]
-"11932" [label = <(METHOD_RETURN,jintArray)<SUB>2333</SUB>> ]
-  "11928" -> "11932" 
-  "11929" -> "11928" 
-  "11924" -> "11929" 
+"11925" [label = <(RETURN,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);,return NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length);)<SUB>2332</SUB>> ]
+"11926" [label = <(NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;,NewPrimitiveArray&lt;jintArray, mirror::IntArray&gt;(env, length))<SUB>2332</SUB>> ]
+"11921" [label = <(METHOD,NewIntArray)<SUB>2331</SUB>> ]
+"11929" [label = <(METHOD_RETURN,jintArray)<SUB>2331</SUB>> ]
+  "11925" -> "11929" 
+  "11926" -> "11925" 
+  "11921" -> "11926" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/221-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/221-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/221-cfg.dot	2023-06-07 19:34:48.417388389 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/221-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,9 +1,9 @@
 digraph "NewLongArray" {  
-"11938" [label = <(RETURN,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);)<SUB>2338</SUB>> ]
-"11939" [label = <(NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;,NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length))<SUB>2338</SUB>> ]
-"11934" [label = <(METHOD,NewLongArray)<SUB>2337</SUB>> ]
-"11942" [label = <(METHOD_RETURN,jlongArray)<SUB>2337</SUB>> ]
-  "11938" -> "11942" 
-  "11939" -> "11938" 
-  "11934" -> "11939" 
+"11935" [label = <(RETURN,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);,return NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length);)<SUB>2336</SUB>> ]
+"11936" [label = <(NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;,NewPrimitiveArray&lt;jlongArray, mirror::LongArray&gt;(env, length))<SUB>2336</SUB>> ]
+"11931" [label = <(METHOD,NewLongArray)<SUB>2335</SUB>> ]
+"11939" [label = <(METHOD_RETURN,jlongArray)<SUB>2335</SUB>> ]
+  "11935" -> "11939" 
+  "11936" -> "11935" 
+  "11931" -> "11936" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/222-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/222-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/222-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/222-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,327 +1,327 @@
 digraph "NewObjectArray" {  
-"11966" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2347</SUB>> ]
-"11985" [label = <(soa,soa(env))<SUB>2350</SUB>> ]
-"11987" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; array_class)<SUB>2351</SUB>> ]
-"12066" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; result =\012        mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2368</SUB>> ]
-"12209" [label = <(RETURN,return soa.AddLocalReference&lt;jobjectArray&gt;(result);,return soa.AddLocalReference&lt;jobjectArray&gt;(result);)<SUB>2387</SUB>> ]
-"11951" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2343</SUB>> ]
-"11988" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2351</SUB>> ]
-"11995" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = soa.Decode&lt;mirror::Class&gt;(element_jclass))<SUB>2353</SUB>> ]
-"12038" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>2360</SUB>> ]
-"12047" [label = <(&lt;operator&gt;.assignment,array_class = class_linker-&gt;FindArrayClass(soa.Self(), element_class))<SUB>2361</SUB>> ]
-"12067" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; result)<SUB>2368</SUB>> ]
-"12078" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2369</SUB>> ]
-"12097" [label = <(&lt;operator&gt;.logicalAnd,result != nullptr &amp;&amp; initial_element != nullptr)<SUB>2370</SUB>> ]
-"12210" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>2387</SUB>> ]
-"11952" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2343</SUB>> ]
-"11956" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2344</SUB>> ]
-"11964" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2345</SUB>> ]
-"11990" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2351</SUB>> ]
-"11996" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2353</SUB>> ]
-"12003" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(element_jclass))<SUB>2353</SUB>> ]
-"12013" [label = <(UNLIKELY,UNLIKELY(element_class-&gt;IsPrimitive()))<SUB>2354</SUB>> ]
-"12040" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2360</SUB>> ]
-"12049" [label = <(FindArrayClass,class_linker-&gt;FindArrayClass(soa.Self(), element_class))<SUB>2361</SUB>> ]
-"12059" [label = <(UNLIKELY,UNLIKELY(array_class == nullptr))<SUB>2362</SUB>> ]
-"12068" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2368</SUB>> ]
-"12073" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; result)<SUB>2368</SUB>> ]
-"12079" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2369</SUB>> ]
-"12086" [label = <(::Alloc,::Alloc(soa.Self(), array_class, length))<SUB>2369</SUB>> ]
-"12098" [label = <(&lt;operator&gt;.notEquals,result != nullptr)<SUB>2370</SUB>> ]
-"12101" [label = <(&lt;operator&gt;.notEquals,initial_element != nullptr)<SUB>2370</SUB>> ]
-"12105" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; initial_object = soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2371</SUB>> ]
-"12211" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>2387</SUB>> ]
-"11957" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2344</SUB>> ]
-"11970" [label = <(UNLIKELY,UNLIKELY((element_jclass) == nullptr))<SUB>2347</SUB>> ]
-"11992" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2351</SUB>> ]
-"11997" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2353</SUB>> ]
-"12004" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2353</SUB>> ]
-"12014" [label = <(IsPrimitive,element_class-&gt;IsPrimitive())<SUB>2354</SUB>> ]
-"12019" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;,\012 &quot;not an object type: %s&quot;,\012                            element_class-&gt;PrettyDescriptor().c_str()))<SUB>2355</SUB>> ]
-"12035" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2358</SUB>> ]
-"12041" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2360</SUB>> ]
-"12050" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindArrayClass)<SUB>2361</SUB>> ]
-"12053" [label = <(Self,soa.Self())<SUB>2361</SUB>> ]
-"12060" [label = <(&lt;operator&gt;.equals,array_class == nullptr)<SUB>2362</SUB>> ]
-"12064" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2363</SUB>> ]
-"12070" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2368</SUB>> ]
-"12074" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2368</SUB>> ]
-"12080" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2369</SUB>> ]
-"12083" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2369</SUB>> ]
-"12087" [label = <(&lt;operator&gt;.fieldAccess,::Alloc)<SUB>2369</SUB>> ]
-"12090" [label = <(Self,soa.Self())<SUB>2369</SUB>> ]
-"12106" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; initial_object)<SUB>2371</SUB>> ]
-"12113" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2371</SUB>> ]
-"12123" [label = <(&lt;operator&gt;.notEquals,initial_object != nullptr)<SUB>2372</SUB>> ]
-"12212" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2387</SUB>> ]
-"11958" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2344</SUB>> ]
-"11960" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2344</SUB>> ]
-"11971" [label = <(&lt;operator&gt;.equals,(element_jclass) == nullptr)<SUB>2347</SUB>> ]
-"11975" [label = <(CHECK_NON_NULL_ARGUMENT(element_jclass),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;element_jclass == null&quot;))<SUB>2347</SUB>> ]
-"11982" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(element_jclass),CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2347</SUB>> ]
-"11999" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2353</SUB>> ]
-"12005" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2353</SUB>> ]
-"12008" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2353</SUB>> ]
-"12015" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsPrimitive)<SUB>2354</SUB>> ]
-"12020" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2355</SUB>> ]
-"12028" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2357</SUB>> ]
-"12042" [label = <(Runtime::Current,Runtime::Current())<SUB>2360</SUB>> ]
-"12046" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2360</SUB>> ]
-"12052" [label = <(FIELD_IDENTIFIER,FindArrayClass,FindArrayClass)<SUB>2361</SUB>> ]
-"12054" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2361</SUB>> ]
-"12072" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2368</SUB>> ]
-"12076" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2368</SUB>> ]
-"12082" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2369</SUB>> ]
-"12085" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2369</SUB>> ]
-"12089" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2369</SUB>> ]
-"12091" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2369</SUB>> ]
-"12107" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2371</SUB>> ]
-"12114" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2371</SUB>> ]
-"12127" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = result-&gt;GetClass()-&gt;GetComponentType())<SUB>2373</SUB>> ]
-"12214" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2387</SUB>> ]
-"11976" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2347</SUB>> ]
-"12001" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2353</SUB>> ]
-"12007" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2353</SUB>> ]
-"12010" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2353</SUB>> ]
-"12017" [label = <(FIELD_IDENTIFIER,IsPrimitive,IsPrimitive)<SUB>2354</SUB>> ]
-"12021" [label = <(Vm,soa.Vm())<SUB>2355</SUB>> ]
-"12025" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2355</SUB>> ]
-"12029" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2357</SUB>> ]
-"12043" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2360</SUB>> ]
-"12056" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2361</SUB>> ]
-"12093" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2369</SUB>> ]
-"12109" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2371</SUB>> ]
-"12115" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2371</SUB>> ]
-"12118" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2371</SUB>> ]
-"12128" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2373</SUB>> ]
-"12135" [label = <(GetComponentType,result-&gt;GetClass()-&gt;GetComponentType())<SUB>2373</SUB>> ]
-"12143" [label = <(UNLIKELY,UNLIKELY(!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass())))<SUB>2374</SUB>> ]
-"11977" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2347</SUB>> ]
-"11979" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2347</SUB>> ]
-"12022" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2355</SUB>> ]
-"12030" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2357</SUB>> ]
-"12034" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2357</SUB>> ]
-"12045" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2360</SUB>> ]
-"12111" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2371</SUB>> ]
-"12117" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2371</SUB>> ]
-"12120" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2371</SUB>> ]
-"12129" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2373</SUB>> ]
-"12136" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass()-&gt;GetComponentType)<SUB>2373</SUB>> ]
-"12144" [label = <(&lt;operator&gt;.logicalNot,!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2374</SUB>> ]
-"12154" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;cannot assign object of type '%s' to array with &quot;\012 &quot;element type of '%s'&quot;,\012                              mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str(),\012                              element_class-&gt;PrettyDescriptor().c_str()))<SUB>2375</SUB>> ]
-"12183" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2379</SUB>> ]
-"12024" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2355</SUB>> ]
-"12031" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2357</SUB>> ]
-"12131" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2373</SUB>> ]
-"12137" [label = <(GetClass,result-&gt;GetClass())<SUB>2373</SUB>> ]
-"12141" [label = <(FIELD_IDENTIFIER,GetComponentType,GetComponentType)<SUB>2373</SUB>> ]
-"12145" [label = <(IsAssignableFrom,element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2374</SUB>> ]
-"12155" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2375</SUB>> ]
-"12163" [label = <(c_str,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str())<SUB>2377</SUB>> ]
-"12176" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2378</SUB>> ]
-"12033" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2357</SUB>> ]
-"12133" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2373</SUB>> ]
-"12138" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass)<SUB>2373</SUB>> ]
-"12146" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsAssignableFrom)<SUB>2374</SUB>> ]
-"12149" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2374</SUB>> ]
-"12156" [label = <(Vm,soa.Vm())<SUB>2375</SUB>> ]
-"12160" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2375</SUB>> ]
-"12164" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str)<SUB>2377</SUB>> ]
-"12177" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2378</SUB>> ]
-"12193" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2381</SUB>> ]
-"12196" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2381</SUB>> ]
-"12140" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2373</SUB>> ]
-"12148" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2374</SUB>> ]
-"12150" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2374</SUB>> ]
-"12157" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2375</SUB>> ]
-"12165" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()))<SUB>2377</SUB>> ]
-"12175" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2377</SUB>> ]
-"12178" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2378</SUB>> ]
-"12182" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2378</SUB>> ]
-"12190" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2381</SUB>> ]
-"12199" [label = <(&lt;operator&gt;.greaterThan,result-&gt;SetWithoutChecks&lt;false&gt;(i, initial_object))<SUB>2382</SUB>> ]
-"12152" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2374</SUB>> ]
-"12159" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2375</SUB>> ]
-"12166" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2377</SUB>> ]
-"12171" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2377</SUB>> ]
-"12179" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2378</SUB>> ]
-"12200" [label = <(&lt;operator&gt;.lessThan,result-&gt;SetWithoutChecks&lt;false)<SUB>2382</SUB>> ]
-"12205" [label = <(&lt;operator&gt;.bracketedPrimary,(i, initial_object))<SUB>2382</SUB>> ]
-"12167" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2377</SUB>> ]
-"12170" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2377</SUB>> ]
-"12172" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2377</SUB>> ]
-"12181" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2378</SUB>> ]
-"12201" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;SetWithoutChecks)<SUB>2382</SUB>> ]
-"12206" [label = <(&lt;operator&gt;.expressionList,i, initial_object)<SUB>2382</SUB>> ]
-"12174" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2377</SUB>> ]
-"12203" [label = <(FIELD_IDENTIFIER,SetWithoutChecks,SetWithoutChecks)<SUB>2382</SUB>> ]
-"11944" [label = <(METHOD,NewObjectArray)<SUB>2341</SUB>> ]
-"12217" [label = <(METHOD_RETURN,jobjectArray)<SUB>2341</SUB>> ]
-  "11966" -> "11971" 
-  "11966" -> "11985" 
-  "11985" -> "11992" 
-  "11987" -> "12001" 
-  "12066" -> "12098" 
-  "12209" -> "12217" 
-  "11951" -> "11958" 
-  "11951" -> "11966" 
-  "11988" -> "11987" 
-  "11995" -> "12017" 
-  "12038" -> "12052" 
-  "12047" -> "12060" 
-  "12067" -> "12082" 
-  "12078" -> "12066" 
-  "12097" -> "12111" 
-  "12097" -> "12214" 
-  "12210" -> "12209" 
-  "11952" -> "11951" 
-  "11956" -> "11964" 
-  "11964" -> "12217" 
-  "11990" -> "11988" 
-  "11996" -> "12007" 
-  "12003" -> "11995" 
-  "12013" -> "12024" 
-  "12013" -> "12045" 
-  "12040" -> "12038" 
+"11963" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2345</SUB>> ]
+"11982" [label = <(soa,soa(env))<SUB>2348</SUB>> ]
+"11984" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; array_class)<SUB>2349</SUB>> ]
+"12063" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; result =\012        mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2366</SUB>> ]
+"12206" [label = <(RETURN,return soa.AddLocalReference&lt;jobjectArray&gt;(result);,return soa.AddLocalReference&lt;jobjectArray&gt;(result);)<SUB>2385</SUB>> ]
+"11948" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2341</SUB>> ]
+"11985" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2349</SUB>> ]
+"11992" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = soa.Decode&lt;mirror::Class&gt;(element_jclass))<SUB>2351</SUB>> ]
+"12035" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>2358</SUB>> ]
+"12044" [label = <(&lt;operator&gt;.assignment,array_class = class_linker-&gt;FindArrayClass(soa.Self(), element_class))<SUB>2359</SUB>> ]
+"12064" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; result)<SUB>2366</SUB>> ]
+"12075" [label = <(&lt;operator&gt;.greaterThan,mirror::ObjectArray&lt;mirror::Object&gt;::Alloc(soa.Self(), array_class, length))<SUB>2367</SUB>> ]
+"12094" [label = <(&lt;operator&gt;.logicalAnd,result != nullptr &amp;&amp; initial_element != nullptr)<SUB>2368</SUB>> ]
+"12207" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>2385</SUB>> ]
+"11949" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2341</SUB>> ]
+"11953" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2342</SUB>> ]
+"11961" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2343</SUB>> ]
+"11987" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2349</SUB>> ]
+"11993" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2351</SUB>> ]
+"12000" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(element_jclass))<SUB>2351</SUB>> ]
+"12010" [label = <(UNLIKELY,UNLIKELY(element_class-&gt;IsPrimitive()))<SUB>2352</SUB>> ]
+"12037" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2358</SUB>> ]
+"12046" [label = <(FindArrayClass,class_linker-&gt;FindArrayClass(soa.Self(), element_class))<SUB>2359</SUB>> ]
+"12056" [label = <(UNLIKELY,UNLIKELY(array_class == nullptr))<SUB>2360</SUB>> ]
+"12065" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::ObjectArray)<SUB>2366</SUB>> ]
+"12070" [label = <(&lt;operator&gt;.arithmeticShiftRight,mirror::Object&gt;&gt; result)<SUB>2366</SUB>> ]
+"12076" [label = <(&lt;operator&gt;.lessThan,mirror::ObjectArray&lt;mirror::Object)<SUB>2367</SUB>> ]
+"12083" [label = <(::Alloc,::Alloc(soa.Self(), array_class, length))<SUB>2367</SUB>> ]
+"12095" [label = <(&lt;operator&gt;.notEquals,result != nullptr)<SUB>2368</SUB>> ]
+"12098" [label = <(&lt;operator&gt;.notEquals,initial_element != nullptr)<SUB>2368</SUB>> ]
+"12102" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; initial_object = soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2369</SUB>> ]
+"12208" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>2385</SUB>> ]
+"11954" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2342</SUB>> ]
+"11967" [label = <(UNLIKELY,UNLIKELY((element_jclass) == nullptr))<SUB>2345</SUB>> ]
+"11989" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2349</SUB>> ]
+"11994" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2351</SUB>> ]
+"12001" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2351</SUB>> ]
+"12011" [label = <(IsPrimitive,element_class-&gt;IsPrimitive())<SUB>2352</SUB>> ]
+"12016" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;,\012 &quot;not an object type: %s&quot;,\012                            element_class-&gt;PrettyDescriptor().c_str()))<SUB>2353</SUB>> ]
+"12032" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2356</SUB>> ]
+"12038" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2358</SUB>> ]
+"12047" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindArrayClass)<SUB>2359</SUB>> ]
+"12050" [label = <(Self,soa.Self())<SUB>2359</SUB>> ]
+"12057" [label = <(&lt;operator&gt;.equals,array_class == nullptr)<SUB>2360</SUB>> ]
+"12061" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2361</SUB>> ]
+"12067" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2366</SUB>> ]
+"12071" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2366</SUB>> ]
+"12077" [label = <(&lt;operator&gt;.fieldAccess,mirror::ObjectArray)<SUB>2367</SUB>> ]
+"12080" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2367</SUB>> ]
+"12084" [label = <(&lt;operator&gt;.fieldAccess,::Alloc)<SUB>2367</SUB>> ]
+"12087" [label = <(Self,soa.Self())<SUB>2367</SUB>> ]
+"12103" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; initial_object)<SUB>2369</SUB>> ]
+"12110" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(initial_element))<SUB>2369</SUB>> ]
+"12120" [label = <(&lt;operator&gt;.notEquals,initial_object != nullptr)<SUB>2370</SUB>> ]
+"12209" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2385</SUB>> ]
+"11955" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2342</SUB>> ]
+"11957" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2342</SUB>> ]
+"11968" [label = <(&lt;operator&gt;.equals,(element_jclass) == nullptr)<SUB>2345</SUB>> ]
+"11972" [label = <(CHECK_NON_NULL_ARGUMENT(element_jclass),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;element_jclass == null&quot;))<SUB>2345</SUB>> ]
+"11979" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(element_jclass),CHECK_NON_NULL_ARGUMENT(element_jclass))<SUB>2345</SUB>> ]
+"11996" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2351</SUB>> ]
+"12002" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2351</SUB>> ]
+"12005" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2351</SUB>> ]
+"12012" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsPrimitive)<SUB>2352</SUB>> ]
+"12017" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2353</SUB>> ]
+"12025" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2355</SUB>> ]
+"12039" [label = <(Runtime::Current,Runtime::Current())<SUB>2358</SUB>> ]
+"12043" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2358</SUB>> ]
+"12049" [label = <(FIELD_IDENTIFIER,FindArrayClass,FindArrayClass)<SUB>2359</SUB>> ]
+"12051" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2359</SUB>> ]
+"12069" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2366</SUB>> ]
+"12073" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2366</SUB>> ]
+"12079" [label = <(FIELD_IDENTIFIER,ObjectArray,ObjectArray)<SUB>2367</SUB>> ]
+"12082" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2367</SUB>> ]
+"12086" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2367</SUB>> ]
+"12088" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2367</SUB>> ]
+"12104" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>2369</SUB>> ]
+"12111" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>2369</SUB>> ]
+"12124" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; element_class = result-&gt;GetClass()-&gt;GetComponentType())<SUB>2371</SUB>> ]
+"12211" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2385</SUB>> ]
+"11973" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2345</SUB>> ]
+"11998" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2351</SUB>> ]
+"12004" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2351</SUB>> ]
+"12007" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2351</SUB>> ]
+"12014" [label = <(FIELD_IDENTIFIER,IsPrimitive,IsPrimitive)<SUB>2352</SUB>> ]
+"12018" [label = <(Vm,soa.Vm())<SUB>2353</SUB>> ]
+"12022" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2353</SUB>> ]
+"12026" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2355</SUB>> ]
+"12040" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2358</SUB>> ]
+"12053" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2359</SUB>> ]
+"12090" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2367</SUB>> ]
+"12106" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2369</SUB>> ]
+"12112" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2369</SUB>> ]
+"12115" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>2369</SUB>> ]
+"12125" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; element_class)<SUB>2371</SUB>> ]
+"12132" [label = <(GetComponentType,result-&gt;GetClass()-&gt;GetComponentType())<SUB>2371</SUB>> ]
+"12140" [label = <(UNLIKELY,UNLIKELY(!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass())))<SUB>2372</SUB>> ]
+"11974" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2345</SUB>> ]
+"11976" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2345</SUB>> ]
+"12019" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2353</SUB>> ]
+"12027" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2355</SUB>> ]
+"12031" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2355</SUB>> ]
+"12042" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2358</SUB>> ]
+"12108" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2369</SUB>> ]
+"12114" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2369</SUB>> ]
+"12117" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>2369</SUB>> ]
+"12126" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2371</SUB>> ]
+"12133" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass()-&gt;GetComponentType)<SUB>2371</SUB>> ]
+"12141" [label = <(&lt;operator&gt;.logicalNot,!element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2372</SUB>> ]
+"12151" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewObjectArray&quot;, &quot;cannot assign object of type '%s' to array with &quot;\012 &quot;element type of '%s'&quot;,\012                              mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str(),\012                              element_class-&gt;PrettyDescriptor().c_str()))<SUB>2373</SUB>> ]
+"12180" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2377</SUB>> ]
+"12021" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2353</SUB>> ]
+"12028" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2355</SUB>> ]
+"12128" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2371</SUB>> ]
+"12134" [label = <(GetClass,result-&gt;GetClass())<SUB>2371</SUB>> ]
+"12138" [label = <(FIELD_IDENTIFIER,GetComponentType,GetComponentType)<SUB>2371</SUB>> ]
+"12142" [label = <(IsAssignableFrom,element_class-&gt;IsAssignableFrom(initial_object-&gt;GetClass()))<SUB>2372</SUB>> ]
+"12152" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2373</SUB>> ]
+"12160" [label = <(c_str,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str())<SUB>2375</SUB>> ]
+"12173" [label = <(c_str,element_class-&gt;PrettyDescriptor().c_str())<SUB>2376</SUB>> ]
+"12030" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2355</SUB>> ]
+"12130" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2371</SUB>> ]
+"12135" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;GetClass)<SUB>2371</SUB>> ]
+"12143" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;IsAssignableFrom)<SUB>2372</SUB>> ]
+"12146" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2372</SUB>> ]
+"12153" [label = <(Vm,soa.Vm())<SUB>2373</SUB>> ]
+"12157" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2373</SUB>> ]
+"12161" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()).c_str)<SUB>2375</SUB>> ]
+"12174" [label = <(&lt;operator&gt;.fieldAccess,element_class-&gt;PrettyDescriptor().c_str)<SUB>2376</SUB>> ]
+"12190" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>2379</SUB>> ]
+"12193" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2379</SUB>> ]
+"12137" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2371</SUB>> ]
+"12145" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>2372</SUB>> ]
+"12147" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2372</SUB>> ]
+"12154" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2373</SUB>> ]
+"12162" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(initial_object-&gt;GetClass()))<SUB>2375</SUB>> ]
+"12172" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2375</SUB>> ]
+"12175" [label = <(PrettyDescriptor,element_class-&gt;PrettyDescriptor())<SUB>2376</SUB>> ]
+"12179" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2376</SUB>> ]
+"12187" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2379</SUB>> ]
+"12196" [label = <(&lt;operator&gt;.greaterThan,result-&gt;SetWithoutChecks&lt;false&gt;(i, initial_object))<SUB>2380</SUB>> ]
+"12149" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2372</SUB>> ]
+"12156" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2373</SUB>> ]
+"12163" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2375</SUB>> ]
+"12168" [label = <(GetClass,initial_object-&gt;GetClass())<SUB>2375</SUB>> ]
+"12176" [label = <(&lt;operator&gt;.indirectFieldAccess,element_class-&gt;PrettyDescriptor)<SUB>2376</SUB>> ]
+"12197" [label = <(&lt;operator&gt;.lessThan,result-&gt;SetWithoutChecks&lt;false)<SUB>2380</SUB>> ]
+"12202" [label = <(&lt;operator&gt;.bracketedPrimary,(i, initial_object))<SUB>2380</SUB>> ]
+"12164" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2375</SUB>> ]
+"12167" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2375</SUB>> ]
+"12169" [label = <(&lt;operator&gt;.indirectFieldAccess,initial_object-&gt;GetClass)<SUB>2375</SUB>> ]
+"12178" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2376</SUB>> ]
+"12198" [label = <(&lt;operator&gt;.indirectFieldAccess,result-&gt;SetWithoutChecks)<SUB>2380</SUB>> ]
+"12203" [label = <(&lt;operator&gt;.expressionList,i, initial_object)<SUB>2380</SUB>> ]
+"12171" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2375</SUB>> ]
+"12200" [label = <(FIELD_IDENTIFIER,SetWithoutChecks,SetWithoutChecks)<SUB>2380</SUB>> ]
+"11941" [label = <(METHOD,NewObjectArray)<SUB>2339</SUB>> ]
+"12214" [label = <(METHOD_RETURN,jobjectArray)<SUB>2339</SUB>> ]
+  "11963" -> "11968" 
+  "11963" -> "11982" 
+  "11982" -> "11989" 
+  "11984" -> "11998" 
+  "12063" -> "12095" 
+  "12206" -> "12214" 
+  "11948" -> "11955" 
+  "11948" -> "11963" 
+  "11985" -> "11984" 
+  "11992" -> "12014" 
+  "12035" -> "12049" 
+  "12044" -> "12057" 
+  "12064" -> "12079" 
+  "12075" -> "12063" 
+  "12094" -> "12108" 
+  "12094" -> "12211" 
+  "12207" -> "12206" 
+  "11949" -> "11948" 
+  "11953" -> "11961" 
+  "11961" -> "12214" 
+  "11987" -> "11985" 
+  "11993" -> "12004" 
+  "12000" -> "11992" 
+  "12010" -> "12021" 
+  "12010" -> "12042" 
+  "12037" -> "12035" 
+  "12046" -> "12044" 
+  "12056" -> "12061" 
+  "12056" -> "12069" 
+  "12065" -> "12073" 
+  "12070" -> "12064" 
+  "12076" -> "12086" 
+  "12083" -> "12075" 
+  "12095" -> "12094" 
+  "12095" -> "12098" 
+  "12098" -> "12094" 
+  "12102" -> "12120" 
+  "12208" -> "12207" 
+  "11954" -> "11953" 
+  "11967" -> "11974" 
+  "11967" -> "11982" 
+  "11989" -> "11987" 
+  "11994" -> "11993" 
+  "12001" -> "12000" 
+  "12011" -> "12010" 
+  "12016" -> "12032" 
+  "12032" -> "12214" 
+  "12038" -> "12037" 
+  "12047" -> "12053" 
+  "12050" -> "12046" 
+  "12057" -> "12056" 
+  "12061" -> "12214" 
+  "12067" -> "12065" 
+  "12071" -> "12070" 
+  "12077" -> "12082" 
+  "12080" -> "12076" 
+  "12084" -> "12090" 
+  "12087" -> "12083" 
+  "12103" -> "12114" 
+  "12110" -> "12102" 
+  "12120" -> "12130" 
+  "12120" -> "12211" 
+  "12209" -> "12208" 
+  "11955" -> "11957" 
+  "11957" -> "11954" 
+  "11968" -> "11967" 
+  "11972" -> "11979" 
+  "11979" -> "12214" 
+  "11996" -> "11994" 
+  "12002" -> "12007" 
+  "12005" -> "12001" 
+  "12012" -> "12011" 
+  "12017" -> "12030" 
+  "12025" -> "12016" 
+  "12039" -> "12043" 
+  "12043" -> "12038" 
   "12049" -> "12047" 
-  "12059" -> "12064" 
-  "12059" -> "12072" 
-  "12068" -> "12076" 
-  "12073" -> "12067" 
-  "12079" -> "12089" 
-  "12086" -> "12078" 
-  "12098" -> "12097" 
-  "12098" -> "12101" 
-  "12101" -> "12097" 
-  "12105" -> "12123" 
-  "12211" -> "12210" 
-  "11957" -> "11956" 
-  "11970" -> "11977" 
-  "11970" -> "11985" 
-  "11992" -> "11990" 
-  "11997" -> "11996" 
-  "12004" -> "12003" 
-  "12014" -> "12013" 
-  "12019" -> "12035" 
-  "12035" -> "12217" 
-  "12041" -> "12040" 
-  "12050" -> "12056" 
-  "12053" -> "12049" 
-  "12060" -> "12059" 
-  "12064" -> "12217" 
-  "12070" -> "12068" 
-  "12074" -> "12073" 
-  "12080" -> "12085" 
-  "12083" -> "12079" 
-  "12087" -> "12093" 
-  "12090" -> "12086" 
-  "12106" -> "12117" 
-  "12113" -> "12105" 
-  "12123" -> "12133" 
-  "12123" -> "12214" 
-  "12212" -> "12211" 
-  "11958" -> "11960" 
-  "11960" -> "11957" 
-  "11971" -> "11970" 
-  "11975" -> "11982" 
-  "11982" -> "12217" 
-  "11999" -> "11997" 
-  "12005" -> "12010" 
-  "12008" -> "12004" 
-  "12015" -> "12014" 
-  "12020" -> "12033" 
-  "12028" -> "12019" 
-  "12042" -> "12046" 
-  "12046" -> "12041" 
-  "12052" -> "12050" 
-  "12054" -> "12053" 
-  "12072" -> "12070" 
-  "12076" -> "12074" 
+  "12051" -> "12050" 
+  "12069" -> "12067" 
+  "12073" -> "12071" 
+  "12079" -> "12077" 
   "12082" -> "12080" 
-  "12085" -> "12083" 
-  "12089" -> "12087" 
-  "12091" -> "12090" 
-  "12107" -> "12106" 
-  "12114" -> "12113" 
-  "12127" -> "12148" 
-  "12214" -> "12212" 
-  "11976" -> "11975" 
-  "12001" -> "11999" 
+  "12086" -> "12084" 
+  "12088" -> "12087" 
+  "12104" -> "12103" 
+  "12111" -> "12110" 
+  "12124" -> "12145" 
+  "12211" -> "12209" 
+  "11973" -> "11972" 
+  "11998" -> "11996" 
+  "12004" -> "12002" 
   "12007" -> "12005" 
-  "12010" -> "12008" 
-  "12017" -> "12015" 
-  "12021" -> "12025" 
-  "12025" -> "12020" 
-  "12029" -> "12028" 
-  "12043" -> "12042" 
-  "12056" -> "12054" 
-  "12093" -> "12091" 
-  "12109" -> "12107" 
-  "12115" -> "12120" 
-  "12118" -> "12114" 
-  "12128" -> "12140" 
-  "12135" -> "12127" 
-  "12143" -> "12159" 
-  "12143" -> "12190" 
-  "11977" -> "11979" 
-  "11979" -> "11976" 
-  "12022" -> "12021" 
-  "12030" -> "12034" 
-  "12034" -> "12029" 
-  "12045" -> "12043" 
-  "12111" -> "12109" 
+  "12014" -> "12012" 
+  "12018" -> "12022" 
+  "12022" -> "12017" 
+  "12026" -> "12025" 
+  "12040" -> "12039" 
+  "12053" -> "12051" 
+  "12090" -> "12088" 
+  "12106" -> "12104" 
+  "12112" -> "12117" 
+  "12115" -> "12111" 
+  "12125" -> "12137" 
+  "12132" -> "12124" 
+  "12140" -> "12156" 
+  "12140" -> "12187" 
+  "11974" -> "11976" 
+  "11976" -> "11973" 
+  "12019" -> "12018" 
+  "12027" -> "12031" 
+  "12031" -> "12026" 
+  "12042" -> "12040" 
+  "12108" -> "12106" 
+  "12114" -> "12112" 
   "12117" -> "12115" 
-  "12120" -> "12118" 
-  "12129" -> "12128" 
-  "12136" -> "12135" 
-  "12144" -> "12143" 
-  "12154" -> "12183" 
-  "12183" -> "12217" 
-  "12024" -> "12022" 
-  "12031" -> "12030" 
-  "12131" -> "12129" 
-  "12137" -> "12141" 
-  "12141" -> "12136" 
-  "12145" -> "12144" 
-  "12155" -> "12167" 
-  "12163" -> "12181" 
-  "12176" -> "12154" 
-  "12033" -> "12031" 
-  "12133" -> "12131" 
-  "12138" -> "12137" 
-  "12146" -> "12152" 
-  "12149" -> "12145" 
-  "12156" -> "12160" 
-  "12160" -> "12155" 
-  "12164" -> "12163" 
-  "12177" -> "12176" 
-  "12193" -> "12203" 
-  "12193" -> "12214" 
+  "12126" -> "12125" 
+  "12133" -> "12132" 
+  "12141" -> "12140" 
+  "12151" -> "12180" 
+  "12180" -> "12214" 
+  "12021" -> "12019" 
+  "12028" -> "12027" 
+  "12128" -> "12126" 
+  "12134" -> "12138" 
+  "12138" -> "12133" 
+  "12142" -> "12141" 
+  "12152" -> "12164" 
+  "12160" -> "12178" 
+  "12173" -> "12151" 
+  "12030" -> "12028" 
+  "12130" -> "12128" 
+  "12135" -> "12134" 
+  "12143" -> "12149" 
+  "12146" -> "12142" 
+  "12153" -> "12157" 
+  "12157" -> "12152" 
+  "12161" -> "12160" 
+  "12174" -> "12173" 
+  "12190" -> "12200" 
+  "12190" -> "12211" 
+  "12193" -> "12190" 
+  "12137" -> "12135" 
+  "12145" -> "12143" 
+  "12147" -> "12146" 
+  "12154" -> "12153" 
+  "12162" -> "12172" 
+  "12172" -> "12161" 
+  "12175" -> "12179" 
+  "12179" -> "12174" 
+  "12187" -> "12190" 
   "12196" -> "12193" 
-  "12140" -> "12138" 
-  "12148" -> "12146" 
-  "12150" -> "12149" 
-  "12157" -> "12156" 
-  "12165" -> "12175" 
-  "12175" -> "12164" 
-  "12178" -> "12182" 
-  "12182" -> "12177" 
-  "12190" -> "12193" 
-  "12199" -> "12196" 
-  "12152" -> "12150" 
-  "12159" -> "12157" 
-  "12166" -> "12174" 
-  "12171" -> "12165" 
-  "12179" -> "12178" 
-  "12200" -> "12206" 
-  "12205" -> "12199" 
-  "12167" -> "12170" 
-  "12170" -> "12166" 
-  "12172" -> "12171" 
-  "12181" -> "12179" 
-  "12201" -> "12200" 
-  "12206" -> "12205" 
-  "12174" -> "12172" 
-  "12203" -> "12201" 
-  "11944" -> "11952" 
+  "12149" -> "12147" 
+  "12156" -> "12154" 
+  "12163" -> "12171" 
+  "12168" -> "12162" 
+  "12176" -> "12175" 
+  "12197" -> "12203" 
+  "12202" -> "12196" 
+  "12164" -> "12167" 
+  "12167" -> "12163" 
+  "12169" -> "12168" 
+  "12178" -> "12176" 
+  "12198" -> "12197" 
+  "12203" -> "12202" 
+  "12171" -> "12169" 
+  "12200" -> "12198" 
+  "11941" -> "11949" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/223-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/223-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/223-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/223-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,9 +1,9 @@
 digraph "NewShortArray" {  
-"12223" [label = <(RETURN,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);)<SUB>2391</SUB>> ]
-"12224" [label = <(NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;,NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length))<SUB>2391</SUB>> ]
-"12219" [label = <(METHOD,NewShortArray)<SUB>2390</SUB>> ]
-"12227" [label = <(METHOD_RETURN,jshortArray)<SUB>2390</SUB>> ]
-  "12223" -> "12227" 
-  "12224" -> "12223" 
-  "12219" -> "12224" 
+"12220" [label = <(RETURN,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);,return NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length);)<SUB>2389</SUB>> ]
+"12221" [label = <(NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;,NewPrimitiveArray&lt;jshortArray, mirror::ShortArray&gt;(env, length))<SUB>2389</SUB>> ]
+"12216" [label = <(METHOD,NewShortArray)<SUB>2388</SUB>> ]
+"12224" [label = <(METHOD_RETURN,jshortArray)<SUB>2388</SUB>> ]
+  "12220" -> "12224" 
+  "12221" -> "12220" 
+  "12216" -> "12221" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/224-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/224-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/224-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/224-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,185 +1,185 @@
 digraph "GetPrimitiveArrayCritical" {  
-"12234" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2395</SUB>> ]
-"12253" [label = <(soa,soa(env))<SUB>2396</SUB>> ]
-"12255" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2397</SUB>> ]
-"12305" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2403</SUB>> ]
-"12363" [label = <(RETURN,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);)<SUB>2418</SUB>> ]
-"12256" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2397</SUB>> ]
-"12263" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2397</SUB>> ]
-"12273" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2398</SUB>> ]
-"12307" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2403</SUB>> ]
-"12315" [label = <(IsMovableObject,heap-&gt;IsMovableObject(array))<SUB>2404</SUB>> ]
-"12355" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2415</SUB>> ]
-"12364" [label = <(GetRawData,array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0))<SUB>2418</SUB>> ]
-"12257" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2397</SUB>> ]
-"12264" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2397</SUB>> ]
-"12274" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2398</SUB>> ]
-"12283" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetPrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2399</SUB>> ]
-"12302" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2401</SUB>> ]
-"12308" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2403</SUB>> ]
-"12316" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2404</SUB>> ]
-"12343" [label = <(&lt;operator&gt;.assignment,array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2413</SUB>> ]
-"12359" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2416</SUB>> ]
-"12365" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetRawData)<SUB>2418</SUB>> ]
-"12368" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2418</SUB>> ]
-"12238" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2395</SUB>> ]
-"12259" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2397</SUB>> ]
-"12265" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2397</SUB>> ]
-"12268" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2397</SUB>> ]
-"12275" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2398</SUB>> ]
-"12284" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2399</SUB>> ]
-"12292" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2400</SUB>> ]
-"12309" [label = <(Runtime::Current,Runtime::Current())<SUB>2403</SUB>> ]
-"12313" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2403</SUB>> ]
-"12318" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2404</SUB>> ]
-"12322" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2405</SUB>> ]
-"12345" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2413</SUB>> ]
-"12360" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2416</SUB>> ]
-"12367" [label = <(FIELD_IDENTIFIER,GetRawData,GetRawData)<SUB>2418</SUB>> ]
-"12369" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2418</SUB>> ]
-"12239" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2395</SUB>> ]
-"12243" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2395</SUB>> ]
-"12250" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2395</SUB>> ]
-"12261" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2397</SUB>> ]
-"12267" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2397</SUB>> ]
-"12270" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2397</SUB>> ]
-"12276" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2398</SUB>> ]
-"12285" [label = <(Vm,soa.Vm())<SUB>2399</SUB>> ]
-"12289" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2399</SUB>> ]
-"12293" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2400</SUB>> ]
-"12310" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2403</SUB>> ]
-"12325" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2406</SUB>> ]
-"12346" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2413</SUB>> ]
-"12370" [label = <(GetClass,array-&gt;GetClass())<SUB>2418</SUB>> ]
-"12374" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2418</SUB>> ]
-"12244" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2395</SUB>> ]
-"12277" [label = <(GetClass,array-&gt;GetClass())<SUB>2398</SUB>> ]
-"12281" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2398</SUB>> ]
-"12286" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2399</SUB>> ]
-"12294" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2400</SUB>> ]
-"12301" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2400</SUB>> ]
-"12312" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2403</SUB>> ]
-"12326" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2406</SUB>> ]
-"12329" [label = <(Self,soa.Self())<SUB>2406</SUB>> ]
-"12335" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2410</SUB>> ]
-"12347" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2413</SUB>> ]
-"12350" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2413</SUB>> ]
-"12371" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2418</SUB>> ]
-"12245" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2395</SUB>> ]
-"12247" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2395</SUB>> ]
-"12278" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2398</SUB>> ]
-"12288" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2399</SUB>> ]
-"12295" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2400</SUB>> ]
-"12328" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2406</SUB>> ]
-"12330" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2406</SUB>> ]
-"12336" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2410</SUB>> ]
-"12339" [label = <(Self,soa.Self())<SUB>2410</SUB>> ]
-"12349" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2413</SUB>> ]
-"12352" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2413</SUB>> ]
-"12373" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2418</SUB>> ]
-"12280" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2398</SUB>> ]
-"12296" [label = <(GetClass,array-&gt;GetClass())<SUB>2400</SUB>> ]
-"12300" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2400</SUB>> ]
-"12332" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2406</SUB>> ]
-"12338" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2410</SUB>> ]
-"12340" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2410</SUB>> ]
-"12297" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2400</SUB>> ]
-"12342" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2410</SUB>> ]
-"12299" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2400</SUB>> ]
-"12229" [label = <(METHOD,GetPrimitiveArrayCritical)<SUB>2394</SUB>> ]
-"12376" [label = <(METHOD_RETURN,void*)<SUB>2394</SUB>> ]
-  "12234" -> "12239" 
-  "12234" -> "12253" 
-  "12253" -> "12261" 
-  "12255" -> "12280" 
-  "12305" -> "12318" 
-  "12363" -> "12376" 
-  "12256" -> "12267" 
-  "12263" -> "12255" 
-  "12273" -> "12288" 
-  "12273" -> "12312" 
-  "12307" -> "12305" 
-  "12315" -> "12322" 
-  "12315" -> "12355" 
-  "12355" -> "12360" 
-  "12355" -> "12367" 
-  "12364" -> "12363" 
-  "12257" -> "12256" 
-  "12264" -> "12263" 
-  "12274" -> "12273" 
-  "12283" -> "12302" 
-  "12302" -> "12376" 
-  "12308" -> "12307" 
-  "12316" -> "12315" 
-  "12343" -> "12355" 
-  "12359" -> "12367" 
-  "12365" -> "12373" 
-  "12368" -> "12364" 
-  "12238" -> "12245" 
-  "12238" -> "12253" 
-  "12259" -> "12257" 
-  "12265" -> "12270" 
-  "12268" -> "12264" 
-  "12275" -> "12274" 
-  "12284" -> "12299" 
-  "12292" -> "12283" 
-  "12309" -> "12313" 
-  "12313" -> "12308" 
-  "12318" -> "12316" 
-  "12322" -> "12328" 
-  "12322" -> "12338" 
-  "12345" -> "12343" 
-  "12360" -> "12359" 
-  "12367" -> "12365" 
-  "12369" -> "12368" 
-  "12239" -> "12238" 
-  "12243" -> "12250" 
-  "12250" -> "12376" 
-  "12261" -> "12259" 
+"12231" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2393</SUB>> ]
+"12250" [label = <(soa,soa(env))<SUB>2394</SUB>> ]
+"12252" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2395</SUB>> ]
+"12302" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2401</SUB>> ]
+"12360" [label = <(RETURN,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);,return array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0);)<SUB>2416</SUB>> ]
+"12253" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2395</SUB>> ]
+"12260" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2395</SUB>> ]
+"12270" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2396</SUB>> ]
+"12304" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2401</SUB>> ]
+"12312" [label = <(IsMovableObject,heap-&gt;IsMovableObject(array))<SUB>2402</SUB>> ]
+"12352" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2413</SUB>> ]
+"12361" [label = <(GetRawData,array-&gt;GetRawData(array-&gt;GetClass()-&gt;GetComponentSize(), 0))<SUB>2416</SUB>> ]
+"12254" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2395</SUB>> ]
+"12261" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2395</SUB>> ]
+"12271" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2396</SUB>> ]
+"12280" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;GetPrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2397</SUB>> ]
+"12299" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2399</SUB>> ]
+"12305" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2401</SUB>> ]
+"12313" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IsMovableObject)<SUB>2402</SUB>> ]
+"12340" [label = <(&lt;operator&gt;.assignment,array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2411</SUB>> ]
+"12356" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2414</SUB>> ]
+"12362" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetRawData)<SUB>2416</SUB>> ]
+"12365" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2416</SUB>> ]
+"12235" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2393</SUB>> ]
+"12256" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2395</SUB>> ]
+"12262" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2395</SUB>> ]
+"12265" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2395</SUB>> ]
+"12272" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2396</SUB>> ]
+"12281" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2397</SUB>> ]
+"12289" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2398</SUB>> ]
+"12306" [label = <(Runtime::Current,Runtime::Current())<SUB>2401</SUB>> ]
+"12310" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2401</SUB>> ]
+"12315" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2402</SUB>> ]
+"12319" [label = <(&lt;operator&gt;.logicalNot,!kUseReadBarrier)<SUB>2403</SUB>> ]
+"12342" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2411</SUB>> ]
+"12357" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2414</SUB>> ]
+"12364" [label = <(FIELD_IDENTIFIER,GetRawData,GetRawData)<SUB>2416</SUB>> ]
+"12366" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2416</SUB>> ]
+"12236" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2393</SUB>> ]
+"12240" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2393</SUB>> ]
+"12247" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2393</SUB>> ]
+"12258" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2395</SUB>> ]
+"12264" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2395</SUB>> ]
+"12267" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2395</SUB>> ]
+"12273" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2396</SUB>> ]
+"12282" [label = <(Vm,soa.Vm())<SUB>2397</SUB>> ]
+"12286" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2397</SUB>> ]
+"12290" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2398</SUB>> ]
+"12307" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2401</SUB>> ]
+"12322" [label = <(IncrementDisableMovingGC,heap-&gt;IncrementDisableMovingGC(soa.Self()))<SUB>2404</SUB>> ]
+"12343" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2411</SUB>> ]
+"12367" [label = <(GetClass,array-&gt;GetClass())<SUB>2416</SUB>> ]
+"12371" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2416</SUB>> ]
+"12241" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2393</SUB>> ]
+"12274" [label = <(GetClass,array-&gt;GetClass())<SUB>2396</SUB>> ]
+"12278" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2396</SUB>> ]
+"12283" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2397</SUB>> ]
+"12291" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2398</SUB>> ]
+"12298" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2398</SUB>> ]
+"12309" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2401</SUB>> ]
+"12323" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableMovingGC)<SUB>2404</SUB>> ]
+"12326" [label = <(Self,soa.Self())<SUB>2404</SUB>> ]
+"12332" [label = <(IncrementDisableThreadFlip,heap-&gt;IncrementDisableThreadFlip(soa.Self()))<SUB>2408</SUB>> ]
+"12344" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2411</SUB>> ]
+"12347" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2411</SUB>> ]
+"12368" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2416</SUB>> ]
+"12242" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2393</SUB>> ]
+"12244" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2393</SUB>> ]
+"12275" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2396</SUB>> ]
+"12285" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2397</SUB>> ]
+"12292" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2398</SUB>> ]
+"12325" [label = <(FIELD_IDENTIFIER,IncrementDisableMovingGC,IncrementDisableMovingGC)<SUB>2404</SUB>> ]
+"12327" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2404</SUB>> ]
+"12333" [label = <(&lt;operator&gt;.indirectFieldAccess,heap-&gt;IncrementDisableThreadFlip)<SUB>2408</SUB>> ]
+"12336" [label = <(Self,soa.Self())<SUB>2408</SUB>> ]
+"12346" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2411</SUB>> ]
+"12349" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2411</SUB>> ]
+"12370" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2416</SUB>> ]
+"12277" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2396</SUB>> ]
+"12293" [label = <(GetClass,array-&gt;GetClass())<SUB>2398</SUB>> ]
+"12297" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2398</SUB>> ]
+"12329" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2404</SUB>> ]
+"12335" [label = <(FIELD_IDENTIFIER,IncrementDisableThreadFlip,IncrementDisableThreadFlip)<SUB>2408</SUB>> ]
+"12337" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2408</SUB>> ]
+"12294" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2398</SUB>> ]
+"12339" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2408</SUB>> ]
+"12296" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2398</SUB>> ]
+"12226" [label = <(METHOD,GetPrimitiveArrayCritical)<SUB>2392</SUB>> ]
+"12373" [label = <(METHOD_RETURN,void*)<SUB>2392</SUB>> ]
+  "12231" -> "12236" 
+  "12231" -> "12250" 
+  "12250" -> "12258" 
+  "12252" -> "12277" 
+  "12302" -> "12315" 
+  "12360" -> "12373" 
+  "12253" -> "12264" 
+  "12260" -> "12252" 
+  "12270" -> "12285" 
+  "12270" -> "12309" 
+  "12304" -> "12302" 
+  "12312" -> "12319" 
+  "12312" -> "12352" 
+  "12352" -> "12357" 
+  "12352" -> "12364" 
+  "12361" -> "12360" 
+  "12254" -> "12253" 
+  "12261" -> "12260" 
+  "12271" -> "12270" 
+  "12280" -> "12299" 
+  "12299" -> "12373" 
+  "12305" -> "12304" 
+  "12313" -> "12312" 
+  "12340" -> "12352" 
+  "12356" -> "12364" 
+  "12362" -> "12370" 
+  "12365" -> "12361" 
+  "12235" -> "12242" 
+  "12235" -> "12250" 
+  "12256" -> "12254" 
+  "12262" -> "12267" 
+  "12265" -> "12261" 
+  "12272" -> "12271" 
+  "12281" -> "12296" 
+  "12289" -> "12280" 
+  "12306" -> "12310" 
+  "12310" -> "12305" 
+  "12315" -> "12313" 
+  "12319" -> "12325" 
+  "12319" -> "12335" 
+  "12342" -> "12340" 
+  "12357" -> "12356" 
+  "12364" -> "12362" 
+  "12366" -> "12365" 
+  "12236" -> "12235" 
+  "12240" -> "12247" 
+  "12247" -> "12373" 
+  "12258" -> "12256" 
+  "12264" -> "12262" 
   "12267" -> "12265" 
-  "12270" -> "12268" 
-  "12276" -> "12275" 
-  "12285" -> "12289" 
-  "12289" -> "12284" 
-  "12293" -> "12292" 
-  "12310" -> "12309" 
-  "12325" -> "12349" 
-  "12346" -> "12345" 
-  "12370" -> "12374" 
-  "12374" -> "12369" 
-  "12244" -> "12243" 
-  "12277" -> "12281" 
-  "12281" -> "12276" 
-  "12286" -> "12285" 
-  "12294" -> "12301" 
-  "12301" -> "12293" 
-  "12312" -> "12310" 
-  "12326" -> "12332" 
-  "12329" -> "12325" 
-  "12335" -> "12349" 
-  "12347" -> "12352" 
-  "12350" -> "12346" 
-  "12371" -> "12370" 
-  "12245" -> "12247" 
-  "12247" -> "12244" 
-  "12278" -> "12277" 
-  "12288" -> "12286" 
-  "12295" -> "12294" 
-  "12328" -> "12326" 
-  "12330" -> "12329" 
-  "12336" -> "12342" 
-  "12339" -> "12335" 
+  "12273" -> "12272" 
+  "12282" -> "12286" 
+  "12286" -> "12281" 
+  "12290" -> "12289" 
+  "12307" -> "12306" 
+  "12322" -> "12346" 
+  "12343" -> "12342" 
+  "12367" -> "12371" 
+  "12371" -> "12366" 
+  "12241" -> "12240" 
+  "12274" -> "12278" 
+  "12278" -> "12273" 
+  "12283" -> "12282" 
+  "12291" -> "12298" 
+  "12298" -> "12290" 
+  "12309" -> "12307" 
+  "12323" -> "12329" 
+  "12326" -> "12322" 
+  "12332" -> "12346" 
+  "12344" -> "12349" 
+  "12347" -> "12343" 
+  "12368" -> "12367" 
+  "12242" -> "12244" 
+  "12244" -> "12241" 
+  "12275" -> "12274" 
+  "12285" -> "12283" 
+  "12292" -> "12291" 
+  "12325" -> "12323" 
+  "12327" -> "12326" 
+  "12333" -> "12339" 
+  "12336" -> "12332" 
+  "12346" -> "12344" 
   "12349" -> "12347" 
-  "12352" -> "12350" 
-  "12373" -> "12371" 
-  "12280" -> "12278" 
-  "12296" -> "12300" 
-  "12300" -> "12295" 
-  "12332" -> "12330" 
-  "12338" -> "12336" 
-  "12340" -> "12339" 
-  "12297" -> "12296" 
-  "12342" -> "12340" 
-  "12299" -> "12297" 
-  "12229" -> "12234" 
+  "12370" -> "12368" 
+  "12277" -> "12275" 
+  "12293" -> "12297" 
+  "12297" -> "12292" 
+  "12329" -> "12327" 
+  "12335" -> "12333" 
+  "12337" -> "12336" 
+  "12294" -> "12293" 
+  "12339" -> "12337" 
+  "12296" -> "12294" 
+  "12226" -> "12231" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/225-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/225-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/225-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/225-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,112 +1,112 @@
 digraph "ReleasePrimitiveArrayCritical" {  
-"12384" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2423</SUB>> ]
-"12402" [label = <(soa,soa(env))<SUB>2424</SUB>> ]
-"12404" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2425</SUB>> ]
-"12453" [label = <(&lt;operator&gt;.assignment,component_size = array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2431</SUB>> ]
-"12462" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, component_size, elements, mode))<SUB>2432</SUB>> ]
-"12405" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2425</SUB>> ]
-"12412" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2425</SUB>> ]
-"12422" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2426</SUB>> ]
-"12455" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2431</SUB>> ]
-"12406" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2425</SUB>> ]
-"12413" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2425</SUB>> ]
-"12423" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2426</SUB>> ]
-"12432" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;ReleasePrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2427</SUB>> ]
-"12451" [label = <(RETURN,return;,return;)<SUB>2429</SUB>> ]
-"12456" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2431</SUB>> ]
-"12388" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2423</SUB>> ]
-"12408" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2425</SUB>> ]
-"12414" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2425</SUB>> ]
-"12417" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2425</SUB>> ]
-"12424" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2426</SUB>> ]
-"12433" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2427</SUB>> ]
-"12441" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2428</SUB>> ]
-"12457" [label = <(GetClass,array-&gt;GetClass())<SUB>2431</SUB>> ]
-"12461" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2431</SUB>> ]
-"12389" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2423</SUB>> ]
-"12393" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2423</SUB>> ]
-"12400" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2423</SUB>> ]
-"12410" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2425</SUB>> ]
-"12416" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2425</SUB>> ]
-"12419" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2425</SUB>> ]
-"12425" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2426</SUB>> ]
-"12434" [label = <(Vm,soa.Vm())<SUB>2427</SUB>> ]
-"12438" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2427</SUB>> ]
-"12442" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2428</SUB>> ]
-"12458" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2431</SUB>> ]
-"12394" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2423</SUB>> ]
-"12426" [label = <(GetClass,array-&gt;GetClass())<SUB>2426</SUB>> ]
-"12430" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2426</SUB>> ]
-"12435" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2427</SUB>> ]
-"12443" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2428</SUB>> ]
-"12450" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2428</SUB>> ]
-"12460" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2431</SUB>> ]
-"12395" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2423</SUB>> ]
-"12397" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2423</SUB>> ]
-"12427" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2426</SUB>> ]
-"12437" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2427</SUB>> ]
-"12444" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2428</SUB>> ]
-"12429" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2426</SUB>> ]
-"12445" [label = <(GetClass,array-&gt;GetClass())<SUB>2428</SUB>> ]
-"12449" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2428</SUB>> ]
-"12446" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2428</SUB>> ]
-"12448" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2428</SUB>> ]
-"12378" [label = <(METHOD,ReleasePrimitiveArrayCritical)<SUB>2421</SUB>> ]
-"12468" [label = <(METHOD_RETURN,void)<SUB>2421</SUB>> ]
-  "12384" -> "12389" 
-  "12384" -> "12402" 
-  "12402" -> "12410" 
-  "12404" -> "12429" 
-  "12453" -> "12462" 
-  "12462" -> "12468" 
-  "12405" -> "12416" 
-  "12412" -> "12404" 
-  "12422" -> "12437" 
-  "12422" -> "12460" 
-  "12455" -> "12453" 
-  "12406" -> "12405" 
-  "12413" -> "12412" 
-  "12423" -> "12422" 
-  "12432" -> "12451" 
-  "12451" -> "12468" 
-  "12456" -> "12455" 
-  "12388" -> "12395" 
-  "12388" -> "12402" 
-  "12408" -> "12406" 
-  "12414" -> "12419" 
-  "12417" -> "12413" 
-  "12424" -> "12423" 
-  "12433" -> "12448" 
-  "12441" -> "12432" 
-  "12457" -> "12461" 
-  "12461" -> "12456" 
-  "12389" -> "12388" 
-  "12393" -> "12400" 
-  "12400" -> "12468" 
-  "12410" -> "12408" 
+"12381" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2421</SUB>> ]
+"12399" [label = <(soa,soa(env))<SUB>2422</SUB>> ]
+"12401" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Array&gt; array = soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2423</SUB>> ]
+"12450" [label = <(&lt;operator&gt;.assignment,component_size = array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2429</SUB>> ]
+"12459" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, component_size, elements, mode))<SUB>2430</SUB>> ]
+"12402" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Array&gt; array)<SUB>2423</SUB>> ]
+"12409" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Array&gt;(java_array))<SUB>2423</SUB>> ]
+"12419" [label = <(UNLIKELY,UNLIKELY(!array-&gt;GetClass()-&gt;IsPrimitiveArray()))<SUB>2424</SUB>> ]
+"12452" [label = <(GetComponentSize,array-&gt;GetClass()-&gt;GetComponentSize())<SUB>2429</SUB>> ]
+"12403" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Array)<SUB>2423</SUB>> ]
+"12410" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Array)<SUB>2423</SUB>> ]
+"12420" [label = <(&lt;operator&gt;.logicalNot,!array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2424</SUB>> ]
+"12429" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;ReleasePrimitiveArrayCritical&quot;, &quot;expected primitive array, given %s&quot;,\012                          array-&gt;GetClass()-&gt;PrettyDescriptor().c_str()))<SUB>2425</SUB>> ]
+"12448" [label = <(RETURN,return;,return;)<SUB>2427</SUB>> ]
+"12453" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;GetComponentSize)<SUB>2429</SUB>> ]
+"12385" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2421</SUB>> ]
+"12405" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2423</SUB>> ]
+"12411" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2423</SUB>> ]
+"12414" [label = <(&lt;operator&gt;.fieldAccess,mirror::Array)<SUB>2423</SUB>> ]
+"12421" [label = <(IsPrimitiveArray,array-&gt;GetClass()-&gt;IsPrimitiveArray())<SUB>2424</SUB>> ]
+"12430" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2425</SUB>> ]
+"12438" [label = <(c_str,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str())<SUB>2426</SUB>> ]
+"12454" [label = <(GetClass,array-&gt;GetClass())<SUB>2429</SUB>> ]
+"12458" [label = <(FIELD_IDENTIFIER,GetComponentSize,GetComponentSize)<SUB>2429</SUB>> ]
+"12386" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2421</SUB>> ]
+"12390" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2421</SUB>> ]
+"12397" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2421</SUB>> ]
+"12407" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2423</SUB>> ]
+"12413" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2423</SUB>> ]
+"12416" [label = <(FIELD_IDENTIFIER,Array,Array)<SUB>2423</SUB>> ]
+"12422" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;IsPrimitiveArray)<SUB>2424</SUB>> ]
+"12431" [label = <(Vm,soa.Vm())<SUB>2425</SUB>> ]
+"12435" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2425</SUB>> ]
+"12439" [label = <(&lt;operator&gt;.fieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor().c_str)<SUB>2426</SUB>> ]
+"12455" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2429</SUB>> ]
+"12391" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2421</SUB>> ]
+"12423" [label = <(GetClass,array-&gt;GetClass())<SUB>2424</SUB>> ]
+"12427" [label = <(FIELD_IDENTIFIER,IsPrimitiveArray,IsPrimitiveArray)<SUB>2424</SUB>> ]
+"12432" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2425</SUB>> ]
+"12440" [label = <(PrettyDescriptor,array-&gt;GetClass()-&gt;PrettyDescriptor())<SUB>2426</SUB>> ]
+"12447" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2426</SUB>> ]
+"12457" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2429</SUB>> ]
+"12392" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2421</SUB>> ]
+"12394" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2421</SUB>> ]
+"12424" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2424</SUB>> ]
+"12434" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2425</SUB>> ]
+"12441" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass()-&gt;PrettyDescriptor)<SUB>2426</SUB>> ]
+"12426" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2424</SUB>> ]
+"12442" [label = <(GetClass,array-&gt;GetClass())<SUB>2426</SUB>> ]
+"12446" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2426</SUB>> ]
+"12443" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetClass)<SUB>2426</SUB>> ]
+"12445" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>2426</SUB>> ]
+"12375" [label = <(METHOD,ReleasePrimitiveArrayCritical)<SUB>2419</SUB>> ]
+"12465" [label = <(METHOD_RETURN,void)<SUB>2419</SUB>> ]
+  "12381" -> "12386" 
+  "12381" -> "12399" 
+  "12399" -> "12407" 
+  "12401" -> "12426" 
+  "12450" -> "12459" 
+  "12459" -> "12465" 
+  "12402" -> "12413" 
+  "12409" -> "12401" 
+  "12419" -> "12434" 
+  "12419" -> "12457" 
+  "12452" -> "12450" 
+  "12403" -> "12402" 
+  "12410" -> "12409" 
+  "12420" -> "12419" 
+  "12429" -> "12448" 
+  "12448" -> "12465" 
+  "12453" -> "12452" 
+  "12385" -> "12392" 
+  "12385" -> "12399" 
+  "12405" -> "12403" 
+  "12411" -> "12416" 
+  "12414" -> "12410" 
+  "12421" -> "12420" 
+  "12430" -> "12445" 
+  "12438" -> "12429" 
+  "12454" -> "12458" 
+  "12458" -> "12453" 
+  "12386" -> "12385" 
+  "12390" -> "12397" 
+  "12397" -> "12465" 
+  "12407" -> "12405" 
+  "12413" -> "12411" 
   "12416" -> "12414" 
-  "12419" -> "12417" 
-  "12425" -> "12424" 
-  "12434" -> "12438" 
-  "12438" -> "12433" 
-  "12442" -> "12441" 
-  "12458" -> "12457" 
-  "12394" -> "12393" 
-  "12426" -> "12430" 
-  "12430" -> "12425" 
-  "12435" -> "12434" 
-  "12443" -> "12450" 
-  "12450" -> "12442" 
-  "12460" -> "12458" 
-  "12395" -> "12397" 
-  "12397" -> "12394" 
-  "12427" -> "12426" 
-  "12437" -> "12435" 
-  "12444" -> "12443" 
-  "12429" -> "12427" 
-  "12445" -> "12449" 
-  "12449" -> "12444" 
-  "12446" -> "12445" 
-  "12448" -> "12446" 
-  "12378" -> "12384" 
+  "12422" -> "12421" 
+  "12431" -> "12435" 
+  "12435" -> "12430" 
+  "12439" -> "12438" 
+  "12455" -> "12454" 
+  "12391" -> "12390" 
+  "12423" -> "12427" 
+  "12427" -> "12422" 
+  "12432" -> "12431" 
+  "12440" -> "12447" 
+  "12447" -> "12439" 
+  "12457" -> "12455" 
+  "12392" -> "12394" 
+  "12394" -> "12391" 
+  "12424" -> "12423" 
+  "12434" -> "12432" 
+  "12441" -> "12440" 
+  "12426" -> "12424" 
+  "12442" -> "12446" 
+  "12446" -> "12441" 
+  "12443" -> "12442" 
+  "12445" -> "12443" 
+  "12375" -> "12381" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/226-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/226-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/226-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/226-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,9 +1,9 @@
 digraph "GetBooleanArrayElements" {  
-"12475" [label = <(RETURN,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);)<SUB>2436</SUB>> ]
-"12476" [label = <(GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy))<SUB>2436</SUB>> ]
-"12470" [label = <(METHOD,GetBooleanArrayElements)<SUB>2435</SUB>> ]
-"12480" [label = <(METHOD_RETURN,jboolean)<SUB>2435</SUB>> ]
-  "12475" -> "12480" 
-  "12476" -> "12475" 
-  "12470" -> "12476" 
+"12472" [label = <(RETURN,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy);)<SUB>2434</SUB>> ]
+"12473" [label = <(GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, is_copy))<SUB>2434</SUB>> ]
+"12467" [label = <(METHOD,GetBooleanArrayElements)<SUB>2433</SUB>> ]
+"12477" [label = <(METHOD_RETURN,jboolean)<SUB>2433</SUB>> ]
+  "12472" -> "12477" 
+  "12473" -> "12472" 
+  "12467" -> "12473" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/227-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/227-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/227-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/227-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,9 +1,9 @@
 digraph "GetByteArrayElements" {  
-"12487" [label = <(RETURN,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);)<SUB>2440</SUB>> ]
-"12488" [label = <(GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy))<SUB>2440</SUB>> ]
-"12482" [label = <(METHOD,GetByteArrayElements)<SUB>2439</SUB>> ]
-"12492" [label = <(METHOD_RETURN,jbyte)<SUB>2439</SUB>> ]
-  "12487" -> "12492" 
-  "12488" -> "12487" 
-  "12482" -> "12488" 
+"12484" [label = <(RETURN,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy);)<SUB>2438</SUB>> ]
+"12485" [label = <(GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, is_copy))<SUB>2438</SUB>> ]
+"12479" [label = <(METHOD,GetByteArrayElements)<SUB>2437</SUB>> ]
+"12489" [label = <(METHOD_RETURN,jbyte)<SUB>2437</SUB>> ]
+  "12484" -> "12489" 
+  "12485" -> "12484" 
+  "12479" -> "12485" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/228-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/228-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/228-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/228-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,9 +1,9 @@
 digraph "GetCharArrayElements" {  
-"12499" [label = <(RETURN,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);)<SUB>2444</SUB>> ]
-"12500" [label = <(GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy))<SUB>2444</SUB>> ]
-"12494" [label = <(METHOD,GetCharArrayElements)<SUB>2443</SUB>> ]
-"12504" [label = <(METHOD_RETURN,jchar)<SUB>2443</SUB>> ]
-  "12499" -> "12504" 
-  "12500" -> "12499" 
-  "12494" -> "12500" 
+"12496" [label = <(RETURN,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy);)<SUB>2442</SUB>> ]
+"12497" [label = <(GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, is_copy))<SUB>2442</SUB>> ]
+"12491" [label = <(METHOD,GetCharArrayElements)<SUB>2441</SUB>> ]
+"12501" [label = <(METHOD_RETURN,jchar)<SUB>2441</SUB>> ]
+  "12496" -> "12501" 
+  "12497" -> "12496" 
+  "12491" -> "12497" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/229-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/229-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/229-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/229-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,9 +1,9 @@
 digraph "GetDoubleArrayElements" {  
-"12511" [label = <(RETURN,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);)<SUB>2448</SUB>> ]
-"12512" [label = <(GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy))<SUB>2448</SUB>> ]
-"12506" [label = <(METHOD,GetDoubleArrayElements)<SUB>2447</SUB>> ]
-"12516" [label = <(METHOD_RETURN,jdouble)<SUB>2447</SUB>> ]
-  "12511" -> "12516" 
-  "12512" -> "12511" 
-  "12506" -> "12512" 
+"12508" [label = <(RETURN,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy);)<SUB>2446</SUB>> ]
+"12509" [label = <(GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, is_copy))<SUB>2446</SUB>> ]
+"12503" [label = <(METHOD,GetDoubleArrayElements)<SUB>2445</SUB>> ]
+"12513" [label = <(METHOD_RETURN,jdouble)<SUB>2445</SUB>> ]
+  "12508" -> "12513" 
+  "12509" -> "12508" 
+  "12503" -> "12509" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/23-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/23-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/23-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/23-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,5 +1,5 @@
 digraph "NotifySetPrimitiveField" {  
-"595" [label = <(METHOD,NotifySetPrimitiveField)<SUB>394</SUB>> ]
-"600" [label = <(METHOD_RETURN,void)<SUB>394</SUB>> ]
+"595" [label = <(METHOD,NotifySetPrimitiveField)<SUB>393</SUB>> ]
+"600" [label = <(METHOD_RETURN,void)<SUB>393</SUB>> ]
   "595" -> "600" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/230-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/230-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/230-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/230-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,9 +1,9 @@
 digraph "GetFloatArrayElements" {  
-"12523" [label = <(RETURN,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);)<SUB>2452</SUB>> ]
-"12524" [label = <(GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy))<SUB>2452</SUB>> ]
-"12518" [label = <(METHOD,GetFloatArrayElements)<SUB>2451</SUB>> ]
-"12528" [label = <(METHOD_RETURN,jfloat)<SUB>2451</SUB>> ]
-  "12523" -> "12528" 
-  "12524" -> "12523" 
-  "12518" -> "12524" 
+"12520" [label = <(RETURN,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy);)<SUB>2450</SUB>> ]
+"12521" [label = <(GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, is_copy))<SUB>2450</SUB>> ]
+"12515" [label = <(METHOD,GetFloatArrayElements)<SUB>2449</SUB>> ]
+"12525" [label = <(METHOD_RETURN,jfloat)<SUB>2449</SUB>> ]
+  "12520" -> "12525" 
+  "12521" -> "12520" 
+  "12515" -> "12521" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/231-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/231-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/231-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/231-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,9 +1,9 @@
 digraph "GetIntArrayElements" {  
-"12535" [label = <(RETURN,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);)<SUB>2456</SUB>> ]
-"12536" [label = <(GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy))<SUB>2456</SUB>> ]
-"12530" [label = <(METHOD,GetIntArrayElements)<SUB>2455</SUB>> ]
-"12540" [label = <(METHOD_RETURN,jint)<SUB>2455</SUB>> ]
-  "12535" -> "12540" 
-  "12536" -> "12535" 
-  "12530" -> "12536" 
+"12532" [label = <(RETURN,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy);)<SUB>2454</SUB>> ]
+"12533" [label = <(GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, is_copy))<SUB>2454</SUB>> ]
+"12527" [label = <(METHOD,GetIntArrayElements)<SUB>2453</SUB>> ]
+"12537" [label = <(METHOD_RETURN,jint)<SUB>2453</SUB>> ]
+  "12532" -> "12537" 
+  "12533" -> "12532" 
+  "12527" -> "12533" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/232-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/232-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/232-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/232-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,9 +1,9 @@
 digraph "GetLongArrayElements" {  
-"12547" [label = <(RETURN,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);)<SUB>2460</SUB>> ]
-"12548" [label = <(GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy))<SUB>2460</SUB>> ]
-"12542" [label = <(METHOD,GetLongArrayElements)<SUB>2459</SUB>> ]
-"12552" [label = <(METHOD_RETURN,jlong)<SUB>2459</SUB>> ]
-  "12547" -> "12552" 
-  "12548" -> "12547" 
-  "12542" -> "12548" 
+"12544" [label = <(RETURN,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy);)<SUB>2458</SUB>> ]
+"12545" [label = <(GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, is_copy))<SUB>2458</SUB>> ]
+"12539" [label = <(METHOD,GetLongArrayElements)<SUB>2457</SUB>> ]
+"12549" [label = <(METHOD_RETURN,jlong)<SUB>2457</SUB>> ]
+  "12544" -> "12549" 
+  "12545" -> "12544" 
+  "12539" -> "12545" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/233-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/233-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/233-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/233-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,9 +1,9 @@
 digraph "GetShortArrayElements" {  
-"12559" [label = <(RETURN,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);)<SUB>2464</SUB>> ]
-"12560" [label = <(GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy))<SUB>2464</SUB>> ]
-"12554" [label = <(METHOD,GetShortArrayElements)<SUB>2463</SUB>> ]
-"12564" [label = <(METHOD_RETURN,jshort)<SUB>2463</SUB>> ]
-  "12559" -> "12564" 
-  "12560" -> "12559" 
-  "12554" -> "12560" 
+"12556" [label = <(RETURN,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);,return GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy);)<SUB>2462</SUB>> ]
+"12557" [label = <(GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, is_copy))<SUB>2462</SUB>> ]
+"12551" [label = <(METHOD,GetShortArrayElements)<SUB>2461</SUB>> ]
+"12561" [label = <(METHOD_RETURN,jshort)<SUB>2461</SUB>> ]
+  "12556" -> "12561" 
+  "12557" -> "12556" 
+  "12551" -> "12557" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/234-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/234-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/234-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/234-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseBooleanArrayElements" {  
-"12572" [label = <(ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,ReleasePrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, elements,\012                                                                         mode))<SUB>2469</SUB>> ]
-"12566" [label = <(METHOD,ReleaseBooleanArrayElements)<SUB>2467</SUB>> ]
-"12577" [label = <(METHOD_RETURN,void)<SUB>2467</SUB>> ]
-  "12572" -> "12577" 
-  "12566" -> "12572" 
+"12569" [label = <(ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,ReleasePrimitiveArray&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, elements,\012                                                                         mode))<SUB>2467</SUB>> ]
+"12563" [label = <(METHOD,ReleaseBooleanArrayElements)<SUB>2465</SUB>> ]
+"12574" [label = <(METHOD_RETURN,void)<SUB>2465</SUB>> ]
+  "12569" -> "12574" 
+  "12563" -> "12569" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/235-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/235-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/235-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/235-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseByteArrayElements" {  
-"12585" [label = <(ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,ReleasePrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, elements, mode))<SUB>2474</SUB>> ]
-"12579" [label = <(METHOD,ReleaseByteArrayElements)<SUB>2473</SUB>> ]
-"12590" [label = <(METHOD_RETURN,void)<SUB>2473</SUB>> ]
-  "12585" -> "12590" 
-  "12579" -> "12585" 
+"12582" [label = <(ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,ReleasePrimitiveArray&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, elements, mode))<SUB>2472</SUB>> ]
+"12576" [label = <(METHOD,ReleaseByteArrayElements)<SUB>2471</SUB>> ]
+"12587" [label = <(METHOD_RETURN,void)<SUB>2471</SUB>> ]
+  "12582" -> "12587" 
+  "12576" -> "12582" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/236-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/236-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/236-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/236-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseCharArrayElements" {  
-"12598" [label = <(ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,ReleasePrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, elements, mode))<SUB>2478</SUB>> ]
-"12592" [label = <(METHOD,ReleaseCharArrayElements)<SUB>2477</SUB>> ]
-"12603" [label = <(METHOD_RETURN,void)<SUB>2477</SUB>> ]
-  "12598" -> "12603" 
-  "12592" -> "12598" 
+"12595" [label = <(ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;,ReleasePrimitiveArray&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, elements, mode))<SUB>2476</SUB>> ]
+"12589" [label = <(METHOD,ReleaseCharArrayElements)<SUB>2475</SUB>> ]
+"12600" [label = <(METHOD_RETURN,void)<SUB>2475</SUB>> ]
+  "12595" -> "12600" 
+  "12589" -> "12595" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/237-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/237-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/237-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/237-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseDoubleArrayElements" {  
-"12611" [label = <(ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,ReleasePrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, elements, mode))<SUB>2483</SUB>> ]
-"12605" [label = <(METHOD,ReleaseDoubleArrayElements)<SUB>2481</SUB>> ]
-"12616" [label = <(METHOD_RETURN,void)<SUB>2481</SUB>> ]
-  "12611" -> "12616" 
-  "12605" -> "12611" 
+"12608" [label = <(ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,ReleasePrimitiveArray&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, elements, mode))<SUB>2481</SUB>> ]
+"12602" [label = <(METHOD,ReleaseDoubleArrayElements)<SUB>2479</SUB>> ]
+"12613" [label = <(METHOD_RETURN,void)<SUB>2479</SUB>> ]
+  "12608" -> "12613" 
+  "12602" -> "12608" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/238-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/238-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/238-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/238-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseFloatArrayElements" {  
-"12624" [label = <(ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,ReleasePrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, elements, mode))<SUB>2488</SUB>> ]
-"12618" [label = <(METHOD,ReleaseFloatArrayElements)<SUB>2486</SUB>> ]
-"12629" [label = <(METHOD_RETURN,void)<SUB>2486</SUB>> ]
-  "12624" -> "12629" 
-  "12618" -> "12624" 
+"12621" [label = <(ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,ReleasePrimitiveArray&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, elements, mode))<SUB>2486</SUB>> ]
+"12615" [label = <(METHOD,ReleaseFloatArrayElements)<SUB>2484</SUB>> ]
+"12626" [label = <(METHOD_RETURN,void)<SUB>2484</SUB>> ]
+  "12621" -> "12626" 
+  "12615" -> "12621" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/239-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/239-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/239-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/239-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseIntArrayElements" {  
-"12637" [label = <(ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,ReleasePrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, elements, mode))<SUB>2492</SUB>> ]
-"12631" [label = <(METHOD,ReleaseIntArrayElements)<SUB>2491</SUB>> ]
-"12642" [label = <(METHOD_RETURN,void)<SUB>2491</SUB>> ]
-  "12637" -> "12642" 
-  "12631" -> "12637" 
+"12634" [label = <(ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;,ReleasePrimitiveArray&lt;jintArray, jint, mirror::IntArray&gt;(env, array, elements, mode))<SUB>2490</SUB>> ]
+"12628" [label = <(METHOD,ReleaseIntArrayElements)<SUB>2489</SUB>> ]
+"12639" [label = <(METHOD_RETURN,void)<SUB>2489</SUB>> ]
+  "12634" -> "12639" 
+  "12628" -> "12634" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/24-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/24-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/24-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/24-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,5 +1,5 @@
 digraph "NotifyGetField" {  
-"616" [label = <(METHOD,NotifyGetField)<SUB>419</SUB>> ]
-"620" [label = <(METHOD_RETURN,void)<SUB>419</SUB>> ]
+"616" [label = <(METHOD,NotifyGetField)<SUB>418</SUB>> ]
+"620" [label = <(METHOD_RETURN,void)<SUB>418</SUB>> ]
   "616" -> "620" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/240-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/240-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/240-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/240-cfg.dot	2023-06-07 19:34:55.017387776 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseLongArrayElements" {  
-"12650" [label = <(ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,ReleasePrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, elements, mode))<SUB>2496</SUB>> ]
-"12644" [label = <(METHOD,ReleaseLongArrayElements)<SUB>2495</SUB>> ]
-"12655" [label = <(METHOD_RETURN,void)<SUB>2495</SUB>> ]
-  "12650" -> "12655" 
-  "12644" -> "12650" 
+"12647" [label = <(ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;,ReleasePrimitiveArray&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, elements, mode))<SUB>2494</SUB>> ]
+"12641" [label = <(METHOD,ReleaseLongArrayElements)<SUB>2493</SUB>> ]
+"12652" [label = <(METHOD_RETURN,void)<SUB>2493</SUB>> ]
+  "12647" -> "12652" 
+  "12641" -> "12647" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/241-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/241-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/241-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/241-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "ReleaseShortArrayElements" {  
-"12663" [label = <(ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,ReleasePrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, elements, mode))<SUB>2501</SUB>> ]
-"12657" [label = <(METHOD,ReleaseShortArrayElements)<SUB>2499</SUB>> ]
-"12668" [label = <(METHOD_RETURN,void)<SUB>2499</SUB>> ]
-  "12663" -> "12668" 
-  "12657" -> "12663" 
+"12660" [label = <(ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;,ReleasePrimitiveArray&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, elements, mode))<SUB>2499</SUB>> ]
+"12654" [label = <(METHOD,ReleaseShortArrayElements)<SUB>2497</SUB>> ]
+"12665" [label = <(METHOD_RETURN,void)<SUB>2497</SUB>> ]
+  "12660" -> "12665" 
+  "12654" -> "12660" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/242-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/242-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/242-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/242-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "GetBooleanArrayRegion" {  
-"12677" [label = <(GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2506</SUB>> ]
-"12670" [label = <(METHOD,GetBooleanArrayRegion)<SUB>2504</SUB>> ]
-"12683" [label = <(METHOD_RETURN,void)<SUB>2504</SUB>> ]
-  "12677" -> "12683" 
-  "12670" -> "12677" 
+"12674" [label = <(GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,GetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2504</SUB>> ]
+"12667" [label = <(METHOD,GetBooleanArrayRegion)<SUB>2502</SUB>> ]
+"12680" [label = <(METHOD_RETURN,void)<SUB>2502</SUB>> ]
+  "12674" -> "12680" 
+  "12667" -> "12674" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/243-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/243-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/243-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/243-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "GetByteArrayRegion" {  
-"12692" [label = <(GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2512</SUB>> ]
-"12685" [label = <(METHOD,GetByteArrayRegion)<SUB>2510</SUB>> ]
-"12698" [label = <(METHOD_RETURN,void)<SUB>2510</SUB>> ]
-  "12692" -> "12698" 
-  "12685" -> "12692" 
+"12689" [label = <(GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,GetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2510</SUB>> ]
+"12682" [label = <(METHOD,GetByteArrayRegion)<SUB>2508</SUB>> ]
+"12695" [label = <(METHOD_RETURN,void)<SUB>2508</SUB>> ]
+  "12689" -> "12695" 
+  "12682" -> "12689" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/244-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/244-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/244-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/244-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "GetCharArrayRegion" {  
-"12707" [label = <(GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2517</SUB>> ]
-"12700" [label = <(METHOD,GetCharArrayRegion)<SUB>2515</SUB>> ]
-"12713" [label = <(METHOD_RETURN,void)<SUB>2515</SUB>> ]
-  "12707" -> "12713" 
-  "12700" -> "12707" 
+"12704" [label = <(GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,GetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2515</SUB>> ]
+"12697" [label = <(METHOD,GetCharArrayRegion)<SUB>2513</SUB>> ]
+"12710" [label = <(METHOD_RETURN,void)<SUB>2513</SUB>> ]
+  "12704" -> "12710" 
+  "12697" -> "12704" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/245-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/245-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/245-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/245-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "GetDoubleArrayRegion" {  
-"12722" [label = <(GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2522</SUB>> ]
-"12715" [label = <(METHOD,GetDoubleArrayRegion)<SUB>2520</SUB>> ]
-"12728" [label = <(METHOD_RETURN,void)<SUB>2520</SUB>> ]
-  "12722" -> "12728" 
-  "12715" -> "12722" 
+"12719" [label = <(GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,GetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2520</SUB>> ]
+"12712" [label = <(METHOD,GetDoubleArrayRegion)<SUB>2518</SUB>> ]
+"12725" [label = <(METHOD_RETURN,void)<SUB>2518</SUB>> ]
+  "12719" -> "12725" 
+  "12712" -> "12719" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/246-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/246-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/246-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/246-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "GetFloatArrayRegion" {  
-"12737" [label = <(GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2528</SUB>> ]
-"12730" [label = <(METHOD,GetFloatArrayRegion)<SUB>2526</SUB>> ]
-"12743" [label = <(METHOD_RETURN,void)<SUB>2526</SUB>> ]
-  "12737" -> "12743" 
-  "12730" -> "12737" 
+"12734" [label = <(GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,GetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2526</SUB>> ]
+"12727" [label = <(METHOD,GetFloatArrayRegion)<SUB>2524</SUB>> ]
+"12740" [label = <(METHOD_RETURN,void)<SUB>2524</SUB>> ]
+  "12734" -> "12740" 
+  "12727" -> "12734" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/247-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/247-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/247-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/247-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "GetIntArrayRegion" {  
-"12752" [label = <(GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2534</SUB>> ]
-"12745" [label = <(METHOD,GetIntArrayRegion)<SUB>2532</SUB>> ]
-"12758" [label = <(METHOD_RETURN,void)<SUB>2532</SUB>> ]
-  "12752" -> "12758" 
-  "12745" -> "12752" 
+"12749" [label = <(GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,GetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2532</SUB>> ]
+"12742" [label = <(METHOD,GetIntArrayRegion)<SUB>2530</SUB>> ]
+"12755" [label = <(METHOD_RETURN,void)<SUB>2530</SUB>> ]
+  "12749" -> "12755" 
+  "12742" -> "12749" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/248-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/248-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/248-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/248-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "GetLongArrayRegion" {  
-"12767" [label = <(GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2539</SUB>> ]
-"12760" [label = <(METHOD,GetLongArrayRegion)<SUB>2537</SUB>> ]
-"12773" [label = <(METHOD_RETURN,void)<SUB>2537</SUB>> ]
-  "12767" -> "12773" 
-  "12760" -> "12767" 
+"12764" [label = <(GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,GetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2537</SUB>> ]
+"12757" [label = <(METHOD,GetLongArrayRegion)<SUB>2535</SUB>> ]
+"12770" [label = <(METHOD_RETURN,void)<SUB>2535</SUB>> ]
+  "12764" -> "12770" 
+  "12757" -> "12764" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/249-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/249-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/249-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/249-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "GetShortArrayRegion" {  
-"12782" [label = <(GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2544</SUB>> ]
-"12775" [label = <(METHOD,GetShortArrayRegion)<SUB>2542</SUB>> ]
-"12788" [label = <(METHOD_RETURN,void)<SUB>2542</SUB>> ]
-  "12782" -> "12788" 
-  "12775" -> "12782" 
+"12779" [label = <(GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,GetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2542</SUB>> ]
+"12772" [label = <(METHOD,GetShortArrayRegion)<SUB>2540</SUB>> ]
+"12785" [label = <(METHOD_RETURN,void)<SUB>2540</SUB>> ]
+  "12779" -> "12785" 
+  "12772" -> "12779" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/25-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/25-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/25-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/25-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,34 +1,34 @@
 digraph "NormalizeJniClassDescriptor" {  
-"688" [label = <(RETURN,return result;,return result;)<SUB>463</SUB>> ]
-"631" [label = <(&lt;operator&gt;.equals,name[0] == '[')<SUB>450</SUB>> ]
-"652" [label = <(&lt;operator&gt;.notEquals,result.find('.') != std::string::npos)<SUB>458</SUB>> ]
-"632" [label = <(&lt;operator&gt;.indirectIndexAccess,name[0])<SUB>450</SUB>> ]
-"637" [label = <(&lt;operator&gt;.assignment,result = name)<SUB>451</SUB>> ]
-"653" [label = <(find,result.find('.'))<SUB>458</SUB>> ]
-"658" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>458</SUB>> ]
-"664" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot;&quot;)<SUB>459</SUB>> ]
-"674" [label = <(std::replace,std::replace(result.begin(), result.end(), '.', '/'))<SUB>461</SUB>> ]
-"642" [label = <(&lt;operator&gt;.assignmentPlus,result += 'L')<SUB>453</SUB>> ]
-"645" [label = <(&lt;operator&gt;.assignmentPlus,result += name)<SUB>454</SUB>> ]
-"648" [label = <(&lt;operator&gt;.assignmentPlus,result += ';')<SUB>455</SUB>> ]
-"654" [label = <(&lt;operator&gt;.fieldAccess,result.find)<SUB>458</SUB>> ]
-"659" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>458</SUB>> ]
-"662" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>458</SUB>> ]
-"665" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name)<SUB>459</SUB>> ]
-"675" [label = <(&lt;operator&gt;.fieldAccess,std::replace)<SUB>461</SUB>> ]
-"678" [label = <(begin,result.begin())<SUB>461</SUB>> ]
-"682" [label = <(end,result.end())<SUB>461</SUB>> ]
-"656" [label = <(FIELD_IDENTIFIER,find,find)<SUB>458</SUB>> ]
-"666" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot;)<SUB>459</SUB>> ]
-"677" [label = <(FIELD_IDENTIFIER,replace,replace)<SUB>461</SUB>> ]
-"679" [label = <(&lt;operator&gt;.fieldAccess,result.begin)<SUB>461</SUB>> ]
-"683" [label = <(&lt;operator&gt;.fieldAccess,result.end)<SUB>461</SUB>> ]
-"667" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;)<SUB>459</SUB>> ]
-"681" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>461</SUB>> ]
-"685" [label = <(FIELD_IDENTIFIER,end,end)<SUB>461</SUB>> ]
-"668" [label = <(LOG,LOG(WARNING))<SUB>459</SUB>> ]
-"626" [label = <(METHOD,NormalizeJniClassDescriptor)<SUB>447</SUB>> ]
-"690" [label = <(METHOD_RETURN,string)<SUB>447</SUB>> ]
+"688" [label = <(RETURN,return result;,return result;)<SUB>462</SUB>> ]
+"631" [label = <(&lt;operator&gt;.equals,name[0] == '[')<SUB>449</SUB>> ]
+"652" [label = <(&lt;operator&gt;.notEquals,result.find('.') != std::string::npos)<SUB>457</SUB>> ]
+"632" [label = <(&lt;operator&gt;.indirectIndexAccess,name[0])<SUB>449</SUB>> ]
+"637" [label = <(&lt;operator&gt;.assignment,result = name)<SUB>450</SUB>> ]
+"653" [label = <(find,result.find('.'))<SUB>457</SUB>> ]
+"658" [label = <(&lt;operator&gt;.fieldAccess,std::string::npos)<SUB>457</SUB>> ]
+"664" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot;&quot;)<SUB>458</SUB>> ]
+"674" [label = <(std::replace,std::replace(result.begin(), result.end(), '.', '/'))<SUB>460</SUB>> ]
+"642" [label = <(&lt;operator&gt;.assignmentPlus,result += 'L')<SUB>452</SUB>> ]
+"645" [label = <(&lt;operator&gt;.assignmentPlus,result += name)<SUB>453</SUB>> ]
+"648" [label = <(&lt;operator&gt;.assignmentPlus,result += ';')<SUB>454</SUB>> ]
+"654" [label = <(&lt;operator&gt;.fieldAccess,result.find)<SUB>457</SUB>> ]
+"659" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>457</SUB>> ]
+"662" [label = <(FIELD_IDENTIFIER,npos,npos)<SUB>457</SUB>> ]
+"665" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot; &lt;&lt; name)<SUB>458</SUB>> ]
+"675" [label = <(&lt;operator&gt;.fieldAccess,std::replace)<SUB>460</SUB>> ]
+"678" [label = <(begin,result.begin())<SUB>460</SUB>> ]
+"682" [label = <(end,result.end())<SUB>460</SUB>> ]
+"656" [label = <(FIELD_IDENTIFIER,find,find)<SUB>457</SUB>> ]
+"666" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;\012 &lt;&lt; &quot;\&quot;&quot;)<SUB>458</SUB>> ]
+"677" [label = <(FIELD_IDENTIFIER,replace,replace)<SUB>460</SUB>> ]
+"679" [label = <(&lt;operator&gt;.fieldAccess,result.begin)<SUB>460</SUB>> ]
+"683" [label = <(&lt;operator&gt;.fieldAccess,result.end)<SUB>460</SUB>> ]
+"667" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;Call to JNI FindClass with dots in name: &quot;)<SUB>458</SUB>> ]
+"681" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>460</SUB>> ]
+"685" [label = <(FIELD_IDENTIFIER,end,end)<SUB>460</SUB>> ]
+"668" [label = <(LOG,LOG(WARNING))<SUB>458</SUB>> ]
+"626" [label = <(METHOD,NormalizeJniClassDescriptor)<SUB>446</SUB>> ]
+"690" [label = <(METHOD_RETURN,string)<SUB>446</SUB>> ]
   "688" -> "690" 
   "631" -> "637" 
   "631" -> "642" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/250-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/250-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/250-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/250-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "SetBooleanArrayRegion" {  
-"12797" [label = <(SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,SetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2550</SUB>> ]
-"12790" [label = <(METHOD,SetBooleanArrayRegion)<SUB>2548</SUB>> ]
-"12803" [label = <(METHOD_RETURN,void)<SUB>2548</SUB>> ]
-  "12797" -> "12803" 
-  "12790" -> "12797" 
+"12794" [label = <(SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;,SetPrimitiveArrayRegion&lt;jbooleanArray, jboolean, mirror::BooleanArray&gt;(env, array, start,\012                                                                           length, buf))<SUB>2548</SUB>> ]
+"12787" [label = <(METHOD,SetBooleanArrayRegion)<SUB>2546</SUB>> ]
+"12800" [label = <(METHOD_RETURN,void)<SUB>2546</SUB>> ]
+  "12794" -> "12800" 
+  "12787" -> "12794" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/251-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/251-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/251-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/251-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "SetByteArrayRegion" {  
-"12812" [label = <(SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,SetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2556</SUB>> ]
-"12805" [label = <(METHOD,SetByteArrayRegion)<SUB>2554</SUB>> ]
-"12818" [label = <(METHOD_RETURN,void)<SUB>2554</SUB>> ]
-  "12812" -> "12818" 
-  "12805" -> "12812" 
+"12809" [label = <(SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;,SetPrimitiveArrayRegion&lt;jbyteArray, jbyte, mirror::ByteArray&gt;(env, array, start, length, buf))<SUB>2554</SUB>> ]
+"12802" [label = <(METHOD,SetByteArrayRegion)<SUB>2552</SUB>> ]
+"12815" [label = <(METHOD_RETURN,void)<SUB>2552</SUB>> ]
+  "12809" -> "12815" 
+  "12802" -> "12809" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/252-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/252-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/252-cfg.dot	2023-06-07 19:34:48.427388387 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/252-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "SetCharArrayRegion" {  
-"12827" [label = <(SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,SetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2561</SUB>> ]
-"12820" [label = <(METHOD,SetCharArrayRegion)<SUB>2559</SUB>> ]
-"12833" [label = <(METHOD_RETURN,void)<SUB>2559</SUB>> ]
-  "12827" -> "12833" 
-  "12820" -> "12827" 
+"12824" [label = <(SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;,SetPrimitiveArrayRegion&lt;jcharArray, jchar, mirror::CharArray&gt;(env, array, start, length, buf))<SUB>2559</SUB>> ]
+"12817" [label = <(METHOD,SetCharArrayRegion)<SUB>2557</SUB>> ]
+"12830" [label = <(METHOD_RETURN,void)<SUB>2557</SUB>> ]
+  "12824" -> "12830" 
+  "12817" -> "12824" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/253-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/253-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/253-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/253-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "SetDoubleArrayRegion" {  
-"12842" [label = <(SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,SetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2566</SUB>> ]
-"12835" [label = <(METHOD,SetDoubleArrayRegion)<SUB>2564</SUB>> ]
-"12848" [label = <(METHOD_RETURN,void)<SUB>2564</SUB>> ]
-  "12842" -> "12848" 
-  "12835" -> "12842" 
+"12839" [label = <(SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;,SetPrimitiveArrayRegion&lt;jdoubleArray, jdouble, mirror::DoubleArray&gt;(env, array, start, length,\012                                                                        buf))<SUB>2564</SUB>> ]
+"12832" [label = <(METHOD,SetDoubleArrayRegion)<SUB>2562</SUB>> ]
+"12845" [label = <(METHOD_RETURN,void)<SUB>2562</SUB>> ]
+  "12839" -> "12845" 
+  "12832" -> "12839" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/254-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/254-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/254-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/254-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "SetFloatArrayRegion" {  
-"12857" [label = <(SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,SetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2572</SUB>> ]
-"12850" [label = <(METHOD,SetFloatArrayRegion)<SUB>2570</SUB>> ]
-"12863" [label = <(METHOD_RETURN,void)<SUB>2570</SUB>> ]
-  "12857" -> "12863" 
-  "12850" -> "12857" 
+"12854" [label = <(SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;,SetPrimitiveArrayRegion&lt;jfloatArray, jfloat, mirror::FloatArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2570</SUB>> ]
+"12847" [label = <(METHOD,SetFloatArrayRegion)<SUB>2568</SUB>> ]
+"12860" [label = <(METHOD_RETURN,void)<SUB>2568</SUB>> ]
+  "12854" -> "12860" 
+  "12847" -> "12854" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/255-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/255-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/255-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/255-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "SetIntArrayRegion" {  
-"12872" [label = <(SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,SetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2578</SUB>> ]
-"12865" [label = <(METHOD,SetIntArrayRegion)<SUB>2576</SUB>> ]
-"12878" [label = <(METHOD_RETURN,void)<SUB>2576</SUB>> ]
-  "12872" -> "12878" 
-  "12865" -> "12872" 
+"12869" [label = <(SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;,SetPrimitiveArrayRegion&lt;jintArray, jint, mirror::IntArray&gt;(env, array, start, length, buf))<SUB>2576</SUB>> ]
+"12862" [label = <(METHOD,SetIntArrayRegion)<SUB>2574</SUB>> ]
+"12875" [label = <(METHOD_RETURN,void)<SUB>2574</SUB>> ]
+  "12869" -> "12875" 
+  "12862" -> "12869" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/256-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/256-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/256-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/256-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "SetLongArrayRegion" {  
-"12887" [label = <(SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,SetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2583</SUB>> ]
-"12880" [label = <(METHOD,SetLongArrayRegion)<SUB>2581</SUB>> ]
-"12893" [label = <(METHOD_RETURN,void)<SUB>2581</SUB>> ]
-  "12887" -> "12893" 
-  "12880" -> "12887" 
+"12884" [label = <(SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;,SetPrimitiveArrayRegion&lt;jlongArray, jlong, mirror::LongArray&gt;(env, array, start, length, buf))<SUB>2581</SUB>> ]
+"12877" [label = <(METHOD,SetLongArrayRegion)<SUB>2579</SUB>> ]
+"12890" [label = <(METHOD_RETURN,void)<SUB>2579</SUB>> ]
+  "12884" -> "12890" 
+  "12877" -> "12884" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/257-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/257-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/257-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/257-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,7 +1,7 @@
 digraph "SetShortArrayRegion" {  
-"12902" [label = <(SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,SetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2588</SUB>> ]
-"12895" [label = <(METHOD,SetShortArrayRegion)<SUB>2586</SUB>> ]
-"12908" [label = <(METHOD_RETURN,void)<SUB>2586</SUB>> ]
-  "12902" -> "12908" 
-  "12895" -> "12902" 
+"12899" [label = <(SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;,SetPrimitiveArrayRegion&lt;jshortArray, jshort, mirror::ShortArray&gt;(env, array, start, length,\012                                                                     buf))<SUB>2586</SUB>> ]
+"12892" [label = <(METHOD,SetShortArrayRegion)<SUB>2584</SUB>> ]
+"12905" [label = <(METHOD_RETURN,void)<SUB>2584</SUB>> ]
+  "12899" -> "12905" 
+  "12892" -> "12899" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/258-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/258-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/258-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/258-cfg.dot	2023-06-07 19:34:55.027387774 +0330
@@ -1,437 +1,437 @@
 digraph "RegisterNatives" {  
-"12932" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2601</SUB>> ]
-"12953" [label = <(soa,soa(env))<SUB>2602</SUB>> ]
-"12955" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2603</SUB>> ]
-"12964" [label = <(&lt;operator&gt;.assignment,Handle&lt;mirror::Class&gt; c = hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2604</SUB>> ]
-"13002" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2610</SUB>> ]
-"13343" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2721</SUB>> ]
-"12917" [label = <(UNLIKELY,UNLIKELY(method_count &lt; 0))<SUB>2596</SUB>> ]
-"12956" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2603</SUB>> ]
-"12959" [label = <(hs,hs(soa.Self()))<SUB>2603</SUB>> ]
-"12965" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Class&gt; c)<SUB>2604</SUB>> ]
-"12972" [label = <(NewHandle,hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2604</SUB>> ]
-"12986" [label = <(UNLIKELY,UNLIKELY(method_count == 0))<SUB>2605</SUB>> ]
-"13028" [label = <(&lt;operator&gt;.lessThan,i &lt; method_count)<SUB>2611</SUB>> ]
-"13031" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2611</SUB>> ]
-"12918" [label = <(&lt;operator&gt;.lessThan,method_count &lt; 0)<SUB>2596</SUB>> ]
-"12922" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;negative method count: %d&quot;,\012                                       method_count))<SUB>2597</SUB>> ]
-"12930" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2599</SUB>> ]
-"12960" [label = <(Self,soa.Self())<SUB>2603</SUB>> ]
-"12966" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Class)<SUB>2604</SUB>> ]
-"12973" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>2604</SUB>> ]
-"12976" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2604</SUB>> ]
-"12987" [label = <(&lt;operator&gt;.equals,method_count == 0)<SUB>2605</SUB>> ]
-"12991" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2606</SUB>> ]
-"13000" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2608</SUB>> ]
-"13025" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2611</SUB>> ]
-"13035" [label = <(&lt;operator&gt;.assignment,* name = methods[i].name)<SUB>2612</SUB>> ]
-"13043" [label = <(&lt;operator&gt;.assignment,* sig = methods[i].signature)<SUB>2613</SUB>> ]
-"13051" [label = <(&lt;operator&gt;.assignment,* fnPtr = methods[i].fnPtr)<SUB>2614</SUB>> ]
-"13111" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2625</SUB>> ]
-"13126" [label = <(&lt;operator&gt;.assignment,* m = nullptr)<SUB>2663</SUB>> ]
-"13130" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2664</SUB>> ]
-"13306" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod() &lt;&lt; &quot;]&quot;)<SUB>2704</SUB>> ]
-"13334" [label = <(&lt;operator&gt;.assignment,* final_function_ptr = m-&gt;RegisterNative(fnPtr))<SUB>2718</SUB>> ]
-"13341" [label = <(UNUSED,UNUSED(final_function_ptr))<SUB>2719</SUB>> ]
-"12923" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2597</SUB>> ]
-"12938" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2601</SUB>> ]
-"12961" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2603</SUB>> ]
-"12968" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2604</SUB>> ]
-"12975" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>2604</SUB>> ]
-"12977" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2604</SUB>> ]
-"12992" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;)<SUB>2606</SUB>> ]
-"12996" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2607</SUB>> ]
-"13008" [label = <(UNLIKELY,UNLIKELY((methods) == nullptr))<SUB>2610</SUB>> ]
-"13037" [label = <(&lt;operator&gt;.fieldAccess,methods[i].name)<SUB>2612</SUB>> ]
-"13045" [label = <(&lt;operator&gt;.fieldAccess,methods[i].signature)<SUB>2613</SUB>> ]
-"13053" [label = <(&lt;operator&gt;.fieldAccess,methods[i].fnPtr)<SUB>2614</SUB>> ]
-"13059" [label = <(UNLIKELY,UNLIKELY(name == nullptr))<SUB>2615</SUB>> ]
-"13115" [label = <(&lt;operator&gt;.equals,*sig == '!')<SUB>2655</SUB>> ]
-"13132" [label = <(IsCheckJniEnabled,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2664</SUB>> ]
-"13154" [label = <(&lt;operator&gt;.notEquals,current_class != nullptr)<SUB>2666</SUB>> ]
-"13157" [label = <(&lt;operator&gt;.assignment,current_class = current_class-&gt;GetSuperClass())<SUB>2667</SUB>> ]
-"13215" [label = <(&lt;operator&gt;.equals,m == nullptr)<SUB>2687</SUB>> ]
-"13307" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2704</SUB>> ]
-"13318" [label = <(UNLIKELY,UNLIKELY(is_fast))<SUB>2706</SUB>> ]
-"13336" [label = <(RegisterNative,m-&gt;RegisterNative(fnPtr))<SUB>2718</SUB>> ]
-"12924" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2597</SUB>> ]
-"12926" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2597</SUB>> ]
-"12939" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2601</SUB>> ]
-"12943" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;java_class == null&quot;))<SUB>2601</SUB>> ]
-"12950" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2601</SUB>> ]
-"12963" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2603</SUB>> ]
-"12970" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2604</SUB>> ]
-"12978" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2604</SUB>> ]
-"12981" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2604</SUB>> ]
-"12993" [label = <(LOG,LOG(WARNING))<SUB>2606</SUB>> ]
-"12997" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2607</SUB>> ]
-"13009" [label = <(&lt;operator&gt;.equals,(methods) == nullptr)<SUB>2610</SUB>> ]
-"13013" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;methods == null&quot;))<SUB>2610</SUB>> ]
-"13020" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2610</SUB>> ]
-"13038" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2612</SUB>> ]
-"13041" [label = <(FIELD_IDENTIFIER,name,name)<SUB>2612</SUB>> ]
-"13046" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2613</SUB>> ]
-"13049" [label = <(FIELD_IDENTIFIER,signature,signature)<SUB>2613</SUB>> ]
-"13054" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2614</SUB>> ]
-"13057" [label = <(FIELD_IDENTIFIER,fnPtr,fnPtr)<SUB>2614</SUB>> ]
-"13060" [label = <(&lt;operator&gt;.equals,name == nullptr)<SUB>2615</SUB>> ]
-"13064" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method name&quot;, i))<SUB>2616</SUB>> ]
-"13072" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2617</SUB>> ]
-"13116" [label = <(&lt;operator&gt;.indirection,*sig)<SUB>2655</SUB>> ]
-"13120" [label = <(&lt;operator&gt;.assignment,is_fast = true)<SUB>2656</SUB>> ]
-"13123" [label = <(&lt;operator&gt;.preIncrement,++sig)<SUB>2657</SUB>> ]
-"13133" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled)<SUB>2664</SUB>> ]
-"13142" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; current_class = c.Get())<SUB>2665</SUB>> ]
-"13159" [label = <(GetSuperClass,current_class-&gt;GetSuperClass())<SUB>2667</SUB>> ]
-"13164" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;true&gt;(current_class, name, sig))<SUB>2669</SUB>> ]
-"13181" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;false&gt;(current_class, name, sig))<SUB>2675</SUB>> ]
-"13219" [label = <(DumpClass,c-&gt;DumpClass(LOG_STREAM(ERROR), mirror::Class::kDumpClassFullDetail))<SUB>2688</SUB>> ]
-"13230" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;\012 &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2689</SUB>> ]
-"13258" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;static or non-static&quot;))<SUB>2693</SUB>> ]
-"13267" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2694</SUB>> ]
-"13308" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot;)<SUB>2704</SUB>> ]
-"13312" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2704</SUB>> ]
-"13321" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2713</SUB>> ]
-"13330" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2714</SUB>> ]
-"13337" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;RegisterNative)<SUB>2718</SUB>> ]
-"12944" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2601</SUB>> ]
-"12980" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2604</SUB>> ]
-"12983" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2604</SUB>> ]
-"12999" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2607</SUB>> ]
-"13014" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2610</SUB>> ]
-"13066" [label = <(Get,c.Get())<SUB>2616</SUB>> ]
-"13134" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>2664</SUB>> ]
-"13139" [label = <(FIELD_IDENTIFIER,IsCheckJniEnabled,IsCheckJniEnabled)<SUB>2664</SUB>> ]
-"13143" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; current_class)<SUB>2665</SUB>> ]
-"13150" [label = <(Get,c.Get())<SUB>2665</SUB>> ]
-"13160" [label = <(&lt;operator&gt;.indirectFieldAccess,current_class-&gt;GetSuperClass)<SUB>2667</SUB>> ]
-"13166" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;true&gt;(current_class, name, sig))<SUB>2669</SUB>> ]
-"13176" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2670</SUB>> ]
-"13183" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;false&gt;(current_class, name, sig))<SUB>2675</SUB>> ]
-"13193" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2676</SUB>> ]
-"13220" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;DumpClass)<SUB>2688</SUB>> ]
-"13223" [label = <(LOG_STREAM,LOG_STREAM(ERROR))<SUB>2688</SUB>> ]
-"13225" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::kDumpClassFullDetail)<SUB>2688</SUB>> ]
-"13231" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;)<SUB>2689</SUB>> ]
-"13248" [label = <(ToModifiedUtf8,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2692</SUB>> ]
-"13260" [label = <(Get,c.Get())<SUB>2693</SUB>> ]
-"13309" [label = <(VLOG,VLOG(jni))<SUB>2704</SUB>> ]
-"13313" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2704</SUB>> ]
-"13322" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot;)<SUB>2713</SUB>> ]
-"13326" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2713</SUB>> ]
-"13339" [label = <(FIELD_IDENTIFIER,RegisterNative,RegisterNative)<SUB>2718</SUB>> ]
-"12945" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2601</SUB>> ]
-"12947" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2601</SUB>> ]
-"13015" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2610</SUB>> ]
-"13017" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2610</SUB>> ]
-"13067" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2616</SUB>> ]
-"13077" [label = <(UNLIKELY,UNLIKELY(sig == nullptr))<SUB>2618</SUB>> ]
-"13135" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>2664</SUB>> ]
-"13144" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2665</SUB>> ]
-"13151" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2665</SUB>> ]
-"13162" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>2667</SUB>> ]
-"13167" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;true)<SUB>2669</SUB>> ]
-"13170" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class, name, sig))<SUB>2669</SUB>> ]
-"13184" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;false)<SUB>2675</SUB>> ]
-"13187" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class, name, sig))<SUB>2675</SUB>> ]
-"13201" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;\012 &lt;&lt; &quot;This is slow, consider changing your RegisterNatives calls.&quot;)<SUB>2681</SUB>> ]
-"13211" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = false)<SUB>2683</SUB>> ]
-"13222" [label = <(FIELD_IDENTIFIER,DumpClass,DumpClass)<SUB>2688</SUB>> ]
-"13226" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2688</SUB>> ]
-"13229" [label = <(FIELD_IDENTIFIER,kDumpClassFullDetail,kDumpClassFullDetail)<SUB>2688</SUB>> ]
-"13232" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2689</SUB>> ]
-"13249" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8)<SUB>2692</SUB>> ]
-"13261" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2693</SUB>> ]
-"13272" [label = <(&lt;operator&gt;.logicalNot,!m-&gt;IsNative())<SUB>2695</SUB>> ]
-"13315" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2704</SUB>> ]
-"13323" [label = <(LOG,LOG(WARNING))<SUB>2713</SUB>> ]
-"13327" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2713</SUB>> ]
-"13069" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2616</SUB>> ]
-"13078" [label = <(&lt;operator&gt;.equals,sig == nullptr)<SUB>2618</SUB>> ]
-"13082" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method signature&quot;, i))<SUB>2619</SUB>> ]
-"13090" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2620</SUB>> ]
-"13136" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>2664</SUB>> ]
-"13138" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>2664</SUB>> ]
-"13146" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2665</SUB>> ]
-"13153" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2665</SUB>> ]
-"13171" [label = <(&lt;operator&gt;.expressionList,current_class, name, sig)<SUB>2669</SUB>> ]
-"13188" [label = <(&lt;operator&gt;.expressionList,current_class, name, sig)<SUB>2675</SUB>> ]
-"13202" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;)<SUB>2681</SUB>> ]
-"13233" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2689</SUB>> ]
-"13250" [label = <(GetLocation,c-&gt;GetDexCache()-&gt;GetLocation())<SUB>2692</SUB>> ]
-"13257" [label = <(FIELD_IDENTIFIER,ToModifiedUtf8,ToModifiedUtf8)<SUB>2692</SUB>> ]
-"13263" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2693</SUB>> ]
-"13273" [label = <(IsNative,m-&gt;IsNative())<SUB>2695</SUB>> ]
-"13278" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig\012 &lt;&lt; &quot; as native&quot;)<SUB>2696</SUB>> ]
-"13295" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;native&quot;))<SUB>2700</SUB>> ]
-"13304" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2701</SUB>> ]
-"13329" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2713</SUB>> ]
-"13084" [label = <(Get,c.Get())<SUB>2619</SUB>> ]
-"13148" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2665</SUB>> ]
-"13203" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name)<SUB>2681</SUB>> ]
-"13234" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2689</SUB>> ]
-"13251" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation)<SUB>2692</SUB>> ]
-"13274" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsNative)<SUB>2695</SUB>> ]
-"13279" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2696</SUB>> ]
-"13297" [label = <(Get,c.Get())<SUB>2700</SUB>> ]
-"13085" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2619</SUB>> ]
-"13095" [label = <(UNLIKELY,UNLIKELY(fnPtr == nullptr))<SUB>2621</SUB>> ]
-"13204" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot;)<SUB>2681</SUB>> ]
-"13235" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2689</SUB>> ]
-"13252" [label = <(GetDexCache,c-&gt;GetDexCache())<SUB>2692</SUB>> ]
-"13256" [label = <(FIELD_IDENTIFIER,GetLocation,GetLocation)<SUB>2692</SUB>> ]
-"13276" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2695</SUB>> ]
-"13280" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2696</SUB>> ]
-"13298" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2700</SUB>> ]
-"13087" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2619</SUB>> ]
-"13096" [label = <(&lt;operator&gt;.equals,fnPtr == nullptr)<SUB>2621</SUB>> ]
-"13100" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;native function&quot;, i))<SUB>2622</SUB>> ]
-"13108" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2623</SUB>> ]
-"13205" [label = <(LOG,LOG(WARNING))<SUB>2681</SUB>> ]
-"13236" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;)<SUB>2689</SUB>> ]
-"13240" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2691</SUB>> ]
-"13253" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache)<SUB>2692</SUB>> ]
-"13281" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2696</SUB>> ]
-"13300" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2700</SUB>> ]
-"13102" [label = <(Get,c.Get())<SUB>2622</SUB>> ]
-"13237" [label = <(LOG,LOG(ERROR))<SUB>2689</SUB>> ]
-"13241" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2691</SUB>> ]
-"13255" [label = <(FIELD_IDENTIFIER,GetDexCache,GetDexCache)<SUB>2692</SUB>> ]
-"13282" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2696</SUB>> ]
-"13103" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2622</SUB>> ]
-"13243" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2691</SUB>> ]
-"13283" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;)<SUB>2696</SUB>> ]
-"13287" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2698</SUB>> ]
-"13105" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2622</SUB>> ]
-"13284" [label = <(LOG,LOG(ERROR))<SUB>2696</SUB>> ]
-"13288" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2698</SUB>> ]
-"13290" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2698</SUB>> ]
-"12910" [label = <(METHOD,RegisterNatives)<SUB>2592</SUB>> ]
-"13345" [label = <(METHOD_RETURN,jint)<SUB>2592</SUB>> ]
-  "12932" -> "12939" 
-  "12932" -> "12953" 
-  "12953" -> "12956" 
-  "12955" -> "12970" 
-  "12964" -> "12987" 
-  "13002" -> "13009" 
-  "13002" -> "13025" 
-  "13343" -> "13345" 
-  "12917" -> "12924" 
-  "12917" -> "12932" 
-  "12956" -> "12963" 
-  "12959" -> "12955" 
-  "12965" -> "12975" 
-  "12972" -> "12964" 
-  "12986" -> "12993" 
-  "12986" -> "13002" 
-  "13028" -> "13038" 
-  "13028" -> "13343" 
-  "13031" -> "13028" 
-  "12918" -> "12917" 
-  "12922" -> "12930" 
-  "12930" -> "13345" 
-  "12960" -> "12959" 
-  "12966" -> "12965" 
-  "12973" -> "12980" 
-  "12976" -> "12972" 
-  "12987" -> "12986" 
-  "12991" -> "13000" 
-  "13000" -> "13345" 
-  "13025" -> "13028" 
-  "13035" -> "13046" 
-  "13043" -> "13054" 
-  "13051" -> "13060" 
-  "13111" -> "13116" 
-  "13126" -> "13136" 
-  "13130" -> "13148" 
-  "13306" -> "13318" 
-  "13334" -> "13341" 
-  "13341" -> "13031" 
-  "12923" -> "12922" 
-  "12938" -> "12945" 
-  "12938" -> "12953" 
-  "12961" -> "12960" 
-  "12968" -> "12966" 
-  "12975" -> "12973" 
-  "12977" -> "12976" 
-  "12992" -> "12999" 
-  "12996" -> "12991" 
-  "13008" -> "13015" 
-  "13008" -> "13025" 
-  "13037" -> "13035" 
-  "13045" -> "13043" 
-  "13053" -> "13051" 
-  "13059" -> "13069" 
-  "13059" -> "13078" 
-  "13115" -> "13120" 
-  "13115" -> "13126" 
-  "13132" -> "13130" 
-  "13154" -> "13167" 
-  "13154" -> "13215" 
-  "13157" -> "13154" 
-  "13215" -> "13222" 
-  "13215" -> "13276" 
-  "13307" -> "13306" 
-  "13318" -> "13323" 
-  "13318" -> "13339" 
-  "13336" -> "13334" 
-  "12924" -> "12926" 
-  "12926" -> "12923" 
-  "12939" -> "12938" 
-  "12943" -> "12950" 
-  "12950" -> "13345" 
-  "12963" -> "12961" 
-  "12970" -> "12968" 
-  "12978" -> "12983" 
-  "12981" -> "12977" 
-  "12993" -> "12992" 
-  "12997" -> "12996" 
-  "13009" -> "13008" 
-  "13013" -> "13020" 
-  "13020" -> "13345" 
-  "13038" -> "13041" 
-  "13041" -> "13037" 
-  "13046" -> "13049" 
-  "13049" -> "13045" 
-  "13054" -> "13057" 
-  "13057" -> "13053" 
-  "13060" -> "13059" 
-  "13064" -> "13072" 
-  "13072" -> "13345" 
-  "13116" -> "13115" 
+"12929" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2599</SUB>> ]
+"12950" [label = <(soa,soa(env))<SUB>2600</SUB>> ]
+"12952" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>2601</SUB>> ]
+"12961" [label = <(&lt;operator&gt;.assignment,Handle&lt;mirror::Class&gt; c = hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2602</SUB>> ]
+"12999" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2608</SUB>> ]
+"13340" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2719</SUB>> ]
+"12914" [label = <(UNLIKELY,UNLIKELY(method_count &lt; 0))<SUB>2594</SUB>> ]
+"12953" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>2601</SUB>> ]
+"12956" [label = <(hs,hs(soa.Self()))<SUB>2601</SUB>> ]
+"12962" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Class&gt; c)<SUB>2602</SUB>> ]
+"12969" [label = <(NewHandle,hs.NewHandle(soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>2602</SUB>> ]
+"12983" [label = <(UNLIKELY,UNLIKELY(method_count == 0))<SUB>2603</SUB>> ]
+"13025" [label = <(&lt;operator&gt;.lessThan,i &lt; method_count)<SUB>2609</SUB>> ]
+"13028" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>2609</SUB>> ]
+"12915" [label = <(&lt;operator&gt;.lessThan,method_count &lt; 0)<SUB>2594</SUB>> ]
+"12919" [label = <(JniAbortF,JavaVmExtFromEnv(env)-&gt;JniAbortF(&quot;RegisterNatives&quot;, &quot;negative method count: %d&quot;,\012                                       method_count))<SUB>2595</SUB>> ]
+"12927" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2597</SUB>> ]
+"12957" [label = <(Self,soa.Self())<SUB>2601</SUB>> ]
+"12963" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Class)<SUB>2602</SUB>> ]
+"12970" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>2602</SUB>> ]
+"12973" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2602</SUB>> ]
+"12984" [label = <(&lt;operator&gt;.equals,method_count == 0)<SUB>2603</SUB>> ]
+"12988" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2604</SUB>> ]
+"12997" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2606</SUB>> ]
+"13022" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2609</SUB>> ]
+"13032" [label = <(&lt;operator&gt;.assignment,* name = methods[i].name)<SUB>2610</SUB>> ]
+"13040" [label = <(&lt;operator&gt;.assignment,* sig = methods[i].signature)<SUB>2611</SUB>> ]
+"13048" [label = <(&lt;operator&gt;.assignment,* fnPtr = methods[i].fnPtr)<SUB>2612</SUB>> ]
+"13108" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2623</SUB>> ]
+"13123" [label = <(&lt;operator&gt;.assignment,* m = nullptr)<SUB>2661</SUB>> ]
+"13127" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2662</SUB>> ]
+"13303" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod() &lt;&lt; &quot;]&quot;)<SUB>2702</SUB>> ]
+"13331" [label = <(&lt;operator&gt;.assignment,* final_function_ptr = m-&gt;RegisterNative(fnPtr))<SUB>2716</SUB>> ]
+"13338" [label = <(UNUSED,UNUSED(final_function_ptr))<SUB>2717</SUB>> ]
+"12920" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbortF)<SUB>2595</SUB>> ]
+"12935" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2599</SUB>> ]
+"12958" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2601</SUB>> ]
+"12965" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2602</SUB>> ]
+"12972" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>2602</SUB>> ]
+"12974" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2602</SUB>> ]
+"12989" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI RegisterNativeMethods: attempt to register 0 native methods for &quot;)<SUB>2604</SUB>> ]
+"12993" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2605</SUB>> ]
+"13005" [label = <(UNLIKELY,UNLIKELY((methods) == nullptr))<SUB>2608</SUB>> ]
+"13034" [label = <(&lt;operator&gt;.fieldAccess,methods[i].name)<SUB>2610</SUB>> ]
+"13042" [label = <(&lt;operator&gt;.fieldAccess,methods[i].signature)<SUB>2611</SUB>> ]
+"13050" [label = <(&lt;operator&gt;.fieldAccess,methods[i].fnPtr)<SUB>2612</SUB>> ]
+"13056" [label = <(UNLIKELY,UNLIKELY(name == nullptr))<SUB>2613</SUB>> ]
+"13112" [label = <(&lt;operator&gt;.equals,*sig == '!')<SUB>2653</SUB>> ]
+"13129" [label = <(IsCheckJniEnabled,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled())<SUB>2662</SUB>> ]
+"13151" [label = <(&lt;operator&gt;.notEquals,current_class != nullptr)<SUB>2664</SUB>> ]
+"13154" [label = <(&lt;operator&gt;.assignment,current_class = current_class-&gt;GetSuperClass())<SUB>2665</SUB>> ]
+"13212" [label = <(&lt;operator&gt;.equals,m == nullptr)<SUB>2685</SUB>> ]
+"13304" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2702</SUB>> ]
+"13315" [label = <(UNLIKELY,UNLIKELY(is_fast))<SUB>2704</SUB>> ]
+"13333" [label = <(RegisterNative,m-&gt;RegisterNative(fnPtr))<SUB>2716</SUB>> ]
+"12921" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2595</SUB>> ]
+"12923" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2595</SUB>> ]
+"12936" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2599</SUB>> ]
+"12940" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;java_class == null&quot;))<SUB>2599</SUB>> ]
+"12947" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))<SUB>2599</SUB>> ]
+"12960" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2601</SUB>> ]
+"12967" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2602</SUB>> ]
+"12975" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2602</SUB>> ]
+"12978" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2602</SUB>> ]
+"12990" [label = <(LOG,LOG(WARNING))<SUB>2604</SUB>> ]
+"12994" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2605</SUB>> ]
+"13006" [label = <(&lt;operator&gt;.equals,(methods) == nullptr)<SUB>2608</SUB>> ]
+"13010" [label = <(CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(&quot;RegisterNatives&quot;, &quot;methods == null&quot;))<SUB>2608</SUB>> ]
+"13017" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR),CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))<SUB>2608</SUB>> ]
+"13035" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2610</SUB>> ]
+"13038" [label = <(FIELD_IDENTIFIER,name,name)<SUB>2610</SUB>> ]
+"13043" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2611</SUB>> ]
+"13046" [label = <(FIELD_IDENTIFIER,signature,signature)<SUB>2611</SUB>> ]
+"13051" [label = <(&lt;operator&gt;.indirectIndexAccess,methods[i])<SUB>2612</SUB>> ]
+"13054" [label = <(FIELD_IDENTIFIER,fnPtr,fnPtr)<SUB>2612</SUB>> ]
+"13057" [label = <(&lt;operator&gt;.equals,name == nullptr)<SUB>2613</SUB>> ]
+"13061" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method name&quot;, i))<SUB>2614</SUB>> ]
+"13069" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2615</SUB>> ]
+"13113" [label = <(&lt;operator&gt;.indirection,*sig)<SUB>2653</SUB>> ]
+"13117" [label = <(&lt;operator&gt;.assignment,is_fast = true)<SUB>2654</SUB>> ]
+"13120" [label = <(&lt;operator&gt;.preIncrement,++sig)<SUB>2655</SUB>> ]
+"13130" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm()-&gt;IsCheckJniEnabled)<SUB>2662</SUB>> ]
+"13139" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; current_class = c.Get())<SUB>2663</SUB>> ]
+"13156" [label = <(GetSuperClass,current_class-&gt;GetSuperClass())<SUB>2665</SUB>> ]
+"13161" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;true&gt;(current_class, name, sig))<SUB>2667</SUB>> ]
+"13178" [label = <(&lt;operator&gt;.assignment,m = FindMethod&lt;false&gt;(current_class, name, sig))<SUB>2673</SUB>> ]
+"13216" [label = <(DumpClass,c-&gt;DumpClass(LOG_STREAM(ERROR), mirror::Class::kDumpClassFullDetail))<SUB>2686</SUB>> ]
+"13227" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;\012 &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2687</SUB>> ]
+"13255" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;static or non-static&quot;))<SUB>2691</SUB>> ]
+"13264" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2692</SUB>> ]
+"13305" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Registering JNI native method &quot;)<SUB>2702</SUB>> ]
+"13309" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2702</SUB>> ]
+"13318" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot; &lt;&lt; m-&gt;PrettyMethod())<SUB>2711</SUB>> ]
+"13327" [label = <(&lt;operator&gt;.assignment,is_fast = false)<SUB>2712</SUB>> ]
+"13334" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;RegisterNative)<SUB>2716</SUB>> ]
+"12941" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2599</SUB>> ]
+"12977" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2602</SUB>> ]
+"12980" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2602</SUB>> ]
+"12996" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2605</SUB>> ]
+"13011" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2608</SUB>> ]
+"13063" [label = <(Get,c.Get())<SUB>2614</SUB>> ]
+"13131" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>2662</SUB>> ]
+"13136" [label = <(FIELD_IDENTIFIER,IsCheckJniEnabled,IsCheckJniEnabled)<SUB>2662</SUB>> ]
+"13140" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; current_class)<SUB>2663</SUB>> ]
+"13147" [label = <(Get,c.Get())<SUB>2663</SUB>> ]
+"13157" [label = <(&lt;operator&gt;.indirectFieldAccess,current_class-&gt;GetSuperClass)<SUB>2665</SUB>> ]
+"13163" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;true&gt;(current_class, name, sig))<SUB>2667</SUB>> ]
+"13173" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2668</SUB>> ]
+"13180" [label = <(&lt;operator&gt;.greaterThan,FindMethod&lt;false&gt;(current_class, name, sig))<SUB>2673</SUB>> ]
+"13190" [label = <(&lt;operator&gt;.notEquals,m != nullptr)<SUB>2674</SUB>> ]
+"13217" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;DumpClass)<SUB>2686</SUB>> ]
+"13220" [label = <(LOG_STREAM,LOG_STREAM(ERROR))<SUB>2686</SUB>> ]
+"13222" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::kDumpClassFullDetail)<SUB>2686</SUB>> ]
+"13228" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig &lt;&lt; &quot; in &quot;)<SUB>2687</SUB>> ]
+"13245" [label = <(ToModifiedUtf8,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8())<SUB>2690</SUB>> ]
+"13257" [label = <(Get,c.Get())<SUB>2691</SUB>> ]
+"13306" [label = <(VLOG,VLOG(jni))<SUB>2702</SUB>> ]
+"13310" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2702</SUB>> ]
+"13319" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;!bang JNI is deprecated. Switch to @FastNative for &quot;)<SUB>2711</SUB>> ]
+"13323" [label = <(PrettyMethod,m-&gt;PrettyMethod())<SUB>2711</SUB>> ]
+"13336" [label = <(FIELD_IDENTIFIER,RegisterNative,RegisterNative)<SUB>2716</SUB>> ]
+"12942" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2599</SUB>> ]
+"12944" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2599</SUB>> ]
+"13012" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2608</SUB>> ]
+"13014" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2608</SUB>> ]
+"13064" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2614</SUB>> ]
+"13074" [label = <(UNLIKELY,UNLIKELY(sig == nullptr))<SUB>2616</SUB>> ]
+"13132" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>2662</SUB>> ]
+"13141" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2663</SUB>> ]
+"13148" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2663</SUB>> ]
+"13159" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>2665</SUB>> ]
+"13164" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;true)<SUB>2667</SUB>> ]
+"13167" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class, name, sig))<SUB>2667</SUB>> ]
+"13181" [label = <(&lt;operator&gt;.lessThan,FindMethod&lt;false)<SUB>2673</SUB>> ]
+"13184" [label = <(&lt;operator&gt;.bracketedPrimary,(current_class, name, sig))<SUB>2673</SUB>> ]
+"13198" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;\012 &lt;&lt; &quot;This is slow, consider changing your RegisterNatives calls.&quot;)<SUB>2679</SUB>> ]
+"13208" [label = <(&lt;operator&gt;.assignment,warn_on_going_to_parent = false)<SUB>2681</SUB>> ]
+"13219" [label = <(FIELD_IDENTIFIER,DumpClass,DumpClass)<SUB>2686</SUB>> ]
+"13223" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2686</SUB>> ]
+"13226" [label = <(FIELD_IDENTIFIER,kDumpClassFullDetail,kDumpClassFullDetail)<SUB>2686</SUB>> ]
+"13229" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2687</SUB>> ]
+"13246" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8)<SUB>2690</SUB>> ]
+"13258" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2691</SUB>> ]
+"13269" [label = <(&lt;operator&gt;.logicalNot,!m-&gt;IsNative())<SUB>2693</SUB>> ]
+"13312" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2702</SUB>> ]
+"13320" [label = <(LOG,LOG(WARNING))<SUB>2711</SUB>> ]
+"13324" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;PrettyMethod)<SUB>2711</SUB>> ]
+"13066" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2614</SUB>> ]
+"13075" [label = <(&lt;operator&gt;.equals,sig == nullptr)<SUB>2616</SUB>> ]
+"13079" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;method signature&quot;, i))<SUB>2617</SUB>> ]
+"13087" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2618</SUB>> ]
+"13133" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>2662</SUB>> ]
+"13135" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>2662</SUB>> ]
+"13143" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2663</SUB>> ]
+"13150" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2663</SUB>> ]
+"13168" [label = <(&lt;operator&gt;.expressionList,current_class, name, sig)<SUB>2667</SUB>> ]
+"13185" [label = <(&lt;operator&gt;.expressionList,current_class, name, sig)<SUB>2673</SUB>> ]
+"13199" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot; not in the given class. &quot;)<SUB>2679</SUB>> ]
+"13230" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2687</SUB>> ]
+"13247" [label = <(GetLocation,c-&gt;GetDexCache()-&gt;GetLocation())<SUB>2690</SUB>> ]
+"13254" [label = <(FIELD_IDENTIFIER,ToModifiedUtf8,ToModifiedUtf8)<SUB>2690</SUB>> ]
+"13260" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2691</SUB>> ]
+"13270" [label = <(IsNative,m-&gt;IsNative())<SUB>2693</SUB>> ]
+"13275" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig\012 &lt;&lt; &quot; as native&quot;)<SUB>2694</SUB>> ]
+"13292" [label = <(ThrowNoSuchMethodError,ThrowNoSuchMethodError(soa, c.Get(), name, sig, &quot;native&quot;))<SUB>2698</SUB>> ]
+"13301" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2699</SUB>> ]
+"13326" [label = <(FIELD_IDENTIFIER,PrettyMethod,PrettyMethod)<SUB>2711</SUB>> ]
+"13081" [label = <(Get,c.Get())<SUB>2617</SUB>> ]
+"13145" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2663</SUB>> ]
+"13200" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot; &lt;&lt; name)<SUB>2679</SUB>> ]
+"13231" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2687</SUB>> ]
+"13248" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache()-&gt;GetLocation)<SUB>2690</SUB>> ]
+"13271" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsNative)<SUB>2693</SUB>> ]
+"13276" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name &lt;&lt; sig)<SUB>2694</SUB>> ]
+"13294" [label = <(Get,c.Get())<SUB>2698</SUB>> ]
+"13082" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2617</SUB>> ]
+"13092" [label = <(UNLIKELY,UNLIKELY(fnPtr == nullptr))<SUB>2619</SUB>> ]
+"13201" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;CheckJNI: method to register \&quot;&quot;)<SUB>2679</SUB>> ]
+"13232" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2687</SUB>> ]
+"13249" [label = <(GetDexCache,c-&gt;GetDexCache())<SUB>2690</SUB>> ]
+"13253" [label = <(FIELD_IDENTIFIER,GetLocation,GetLocation)<SUB>2690</SUB>> ]
+"13273" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2693</SUB>> ]
+"13277" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot; &lt;&lt; name)<SUB>2694</SUB>> ]
+"13295" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2698</SUB>> ]
+"13084" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2617</SUB>> ]
+"13093" [label = <(&lt;operator&gt;.equals,fnPtr == nullptr)<SUB>2619</SUB>> ]
+"13097" [label = <(ReportInvalidJNINativeMethod,ReportInvalidJNINativeMethod(soa, c.Get(), &quot;native function&quot;, i))<SUB>2620</SUB>> ]
+"13105" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>2621</SUB>> ]
+"13202" [label = <(LOG,LOG(WARNING))<SUB>2679</SUB>> ]
+"13233" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method &quot;)<SUB>2687</SUB>> ]
+"13237" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2689</SUB>> ]
+"13250" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetDexCache)<SUB>2690</SUB>> ]
+"13278" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor() &lt;&lt; &quot;.&quot;)<SUB>2694</SUB>> ]
+"13297" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2698</SUB>> ]
+"13099" [label = <(Get,c.Get())<SUB>2620</SUB>> ]
+"13234" [label = <(LOG,LOG(ERROR))<SUB>2687</SUB>> ]
+"13238" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2689</SUB>> ]
+"13252" [label = <(FIELD_IDENTIFIER,GetDexCache,GetDexCache)<SUB>2690</SUB>> ]
+"13279" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;\012 &lt;&lt; c-&gt;PrettyDescriptor())<SUB>2694</SUB>> ]
+"13100" [label = <(&lt;operator&gt;.fieldAccess,c.Get)<SUB>2620</SUB>> ]
+"13240" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2689</SUB>> ]
+"13280" [label = <(&lt;operator&gt;.shiftLeft,LOG(ERROR)\012 &lt;&lt; &quot;Failed to register non-native method &quot;)<SUB>2694</SUB>> ]
+"13284" [label = <(PrettyDescriptor,c-&gt;PrettyDescriptor())<SUB>2696</SUB>> ]
+"13102" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>2620</SUB>> ]
+"13281" [label = <(LOG,LOG(ERROR))<SUB>2694</SUB>> ]
+"13285" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;PrettyDescriptor)<SUB>2696</SUB>> ]
+"13287" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2696</SUB>> ]
+"12907" [label = <(METHOD,RegisterNatives)<SUB>2590</SUB>> ]
+"13342" [label = <(METHOD_RETURN,jint)<SUB>2590</SUB>> ]
+  "12929" -> "12936" 
+  "12929" -> "12950" 
+  "12950" -> "12953" 
+  "12952" -> "12967" 
+  "12961" -> "12984" 
+  "12999" -> "13006" 
+  "12999" -> "13022" 
+  "13340" -> "13342" 
+  "12914" -> "12921" 
+  "12914" -> "12929" 
+  "12953" -> "12960" 
+  "12956" -> "12952" 
+  "12962" -> "12972" 
+  "12969" -> "12961" 
+  "12983" -> "12990" 
+  "12983" -> "12999" 
+  "13025" -> "13035" 
+  "13025" -> "13340" 
+  "13028" -> "13025" 
+  "12915" -> "12914" 
+  "12919" -> "12927" 
+  "12927" -> "13342" 
+  "12957" -> "12956" 
+  "12963" -> "12962" 
+  "12970" -> "12977" 
+  "12973" -> "12969" 
+  "12984" -> "12983" 
+  "12988" -> "12997" 
+  "12997" -> "13342" 
+  "13022" -> "13025" 
+  "13032" -> "13043" 
+  "13040" -> "13051" 
+  "13048" -> "13057" 
+  "13108" -> "13113" 
+  "13123" -> "13133" 
+  "13127" -> "13145" 
+  "13303" -> "13315" 
+  "13331" -> "13338" 
+  "13338" -> "13028" 
+  "12920" -> "12919" 
+  "12935" -> "12942" 
+  "12935" -> "12950" 
+  "12958" -> "12957" 
+  "12965" -> "12963" 
+  "12972" -> "12970" 
+  "12974" -> "12973" 
+  "12989" -> "12996" 
+  "12993" -> "12988" 
+  "13005" -> "13012" 
+  "13005" -> "13022" 
+  "13034" -> "13032" 
+  "13042" -> "13040" 
+  "13050" -> "13048" 
+  "13056" -> "13066" 
+  "13056" -> "13075" 
+  "13112" -> "13117" 
+  "13112" -> "13123" 
+  "13129" -> "13127" 
+  "13151" -> "13164" 
+  "13151" -> "13212" 
+  "13154" -> "13151" 
+  "13212" -> "13219" 
+  "13212" -> "13273" 
+  "13304" -> "13303" 
+  "13315" -> "13320" 
+  "13315" -> "13336" 
+  "13333" -> "13331" 
+  "12921" -> "12923" 
+  "12923" -> "12920" 
+  "12936" -> "12935" 
+  "12940" -> "12947" 
+  "12947" -> "13342" 
+  "12960" -> "12958" 
+  "12967" -> "12965" 
+  "12975" -> "12980" 
+  "12978" -> "12974" 
+  "12990" -> "12989" 
+  "12994" -> "12993" 
+  "13006" -> "13005" 
+  "13010" -> "13017" 
+  "13017" -> "13342" 
+  "13035" -> "13038" 
+  "13038" -> "13034" 
+  "13043" -> "13046" 
+  "13046" -> "13042" 
+  "13051" -> "13054" 
+  "13054" -> "13050" 
+  "13057" -> "13056" 
+  "13061" -> "13069" 
+  "13069" -> "13342" 
+  "13113" -> "13112" 
+  "13117" -> "13120" 
   "13120" -> "13123" 
-  "13123" -> "13126" 
-  "13133" -> "13132" 
-  "13142" -> "13154" 
-  "13159" -> "13157" 
-  "13164" -> "13176" 
-  "13181" -> "13193" 
-  "13219" -> "13237" 
-  "13230" -> "13263" 
-  "13258" -> "13267" 
-  "13267" -> "13345" 
-  "13308" -> "13315" 
-  "13312" -> "13307" 
-  "13321" -> "13330" 
-  "13330" -> "13339" 
-  "13337" -> "13336" 
-  "12944" -> "12943" 
+  "13130" -> "13129" 
+  "13139" -> "13151" 
+  "13156" -> "13154" 
+  "13161" -> "13173" 
+  "13178" -> "13190" 
+  "13216" -> "13234" 
+  "13227" -> "13260" 
+  "13255" -> "13264" 
+  "13264" -> "13342" 
+  "13305" -> "13312" 
+  "13309" -> "13304" 
+  "13318" -> "13327" 
+  "13327" -> "13336" 
+  "13334" -> "13333" 
+  "12941" -> "12940" 
+  "12977" -> "12975" 
   "12980" -> "12978" 
-  "12983" -> "12981" 
-  "12999" -> "12997" 
-  "13014" -> "13013" 
-  "13066" -> "13064" 
-  "13134" -> "13139" 
-  "13139" -> "13133" 
-  "13143" -> "13153" 
-  "13150" -> "13142" 
-  "13160" -> "13159" 
-  "13166" -> "13164" 
-  "13176" -> "13215" 
-  "13176" -> "13184" 
-  "13183" -> "13181" 
-  "13193" -> "13215" 
-  "13193" -> "13205" 
-  "13193" -> "13162" 
+  "12996" -> "12994" 
+  "13011" -> "13010" 
+  "13063" -> "13061" 
+  "13131" -> "13136" 
+  "13136" -> "13130" 
+  "13140" -> "13150" 
+  "13147" -> "13139" 
+  "13157" -> "13156" 
+  "13163" -> "13161" 
+  "13173" -> "13212" 
+  "13173" -> "13181" 
+  "13180" -> "13178" 
+  "13190" -> "13212" 
+  "13190" -> "13202" 
+  "13190" -> "13159" 
+  "13217" -> "13220" 
   "13220" -> "13223" 
+  "13222" -> "13216" 
+  "13228" -> "13252" 
+  "13245" -> "13227" 
+  "13257" -> "13255" 
+  "13306" -> "13305" 
+  "13310" -> "13309" 
+  "13319" -> "13326" 
+  "13323" -> "13318" 
+  "13336" -> "13334" 
+  "12942" -> "12944" 
+  "12944" -> "12941" 
+  "13012" -> "13014" 
+  "13014" -> "13011" 
+  "13064" -> "13063" 
+  "13074" -> "13084" 
+  "13074" -> "13093" 
+  "13132" -> "13131" 
+  "13141" -> "13140" 
+  "13148" -> "13147" 
+  "13159" -> "13157" 
+  "13164" -> "13168" 
+  "13167" -> "13163" 
+  "13181" -> "13185" 
+  "13184" -> "13180" 
+  "13198" -> "13208" 
+  "13208" -> "13159" 
+  "13219" -> "13217" 
   "13223" -> "13226" 
-  "13225" -> "13219" 
-  "13231" -> "13255" 
-  "13248" -> "13230" 
+  "13226" -> "13222" 
+  "13229" -> "13228" 
+  "13246" -> "13245" 
+  "13258" -> "13257" 
+  "13269" -> "13281" 
+  "13269" -> "13306" 
+  "13312" -> "13310" 
+  "13320" -> "13319" 
+  "13324" -> "13323" 
+  "13066" -> "13064" 
+  "13075" -> "13074" 
+  "13079" -> "13087" 
+  "13087" -> "13342" 
+  "13133" -> "13135" 
+  "13135" -> "13132" 
+  "13143" -> "13141" 
+  "13150" -> "13148" 
+  "13168" -> "13167" 
+  "13185" -> "13184" 
+  "13199" -> "13198" 
+  "13230" -> "13229" 
+  "13247" -> "13254" 
+  "13254" -> "13246" 
   "13260" -> "13258" 
-  "13309" -> "13308" 
-  "13313" -> "13312" 
-  "13322" -> "13329" 
-  "13326" -> "13321" 
-  "13339" -> "13337" 
-  "12945" -> "12947" 
-  "12947" -> "12944" 
-  "13015" -> "13017" 
-  "13017" -> "13014" 
-  "13067" -> "13066" 
-  "13077" -> "13087" 
-  "13077" -> "13096" 
-  "13135" -> "13134" 
-  "13144" -> "13143" 
-  "13151" -> "13150" 
-  "13162" -> "13160" 
-  "13167" -> "13171" 
-  "13170" -> "13166" 
-  "13184" -> "13188" 
-  "13187" -> "13183" 
-  "13201" -> "13211" 
-  "13211" -> "13162" 
-  "13222" -> "13220" 
-  "13226" -> "13229" 
-  "13229" -> "13225" 
+  "13270" -> "13269" 
+  "13275" -> "13297" 
+  "13292" -> "13301" 
+  "13301" -> "13342" 
+  "13326" -> "13324" 
+  "13081" -> "13079" 
+  "13145" -> "13143" 
+  "13200" -> "13199" 
+  "13231" -> "13230" 
+  "13248" -> "13247" 
+  "13271" -> "13270" 
+  "13276" -> "13275" 
+  "13294" -> "13292" 
+  "13082" -> "13081" 
+  "13092" -> "13102" 
+  "13092" -> "13108" 
+  "13201" -> "13200" 
   "13232" -> "13231" 
-  "13249" -> "13248" 
-  "13261" -> "13260" 
-  "13272" -> "13284" 
-  "13272" -> "13309" 
-  "13315" -> "13313" 
-  "13323" -> "13322" 
-  "13327" -> "13326" 
-  "13069" -> "13067" 
-  "13078" -> "13077" 
-  "13082" -> "13090" 
-  "13090" -> "13345" 
-  "13136" -> "13138" 
-  "13138" -> "13135" 
-  "13146" -> "13144" 
-  "13153" -> "13151" 
-  "13171" -> "13170" 
-  "13188" -> "13187" 
-  "13202" -> "13201" 
-  "13233" -> "13232" 
-  "13250" -> "13257" 
-  "13257" -> "13249" 
-  "13263" -> "13261" 
-  "13273" -> "13272" 
-  "13278" -> "13300" 
-  "13295" -> "13304" 
-  "13304" -> "13345" 
-  "13329" -> "13327" 
+  "13249" -> "13253" 
+  "13253" -> "13248" 
+  "13273" -> "13271" 
+  "13277" -> "13276" 
+  "13295" -> "13294" 
   "13084" -> "13082" 
-  "13148" -> "13146" 
-  "13203" -> "13202" 
+  "13093" -> "13092" 
+  "13097" -> "13105" 
+  "13105" -> "13342" 
+  "13202" -> "13201" 
+  "13233" -> "13240" 
+  "13237" -> "13232" 
+  "13250" -> "13249" 
+  "13278" -> "13277" 
+  "13297" -> "13295" 
+  "13099" -> "13097" 
   "13234" -> "13233" 
-  "13251" -> "13250" 
-  "13274" -> "13273" 
+  "13238" -> "13237" 
+  "13252" -> "13250" 
   "13279" -> "13278" 
-  "13297" -> "13295" 
-  "13085" -> "13084" 
-  "13095" -> "13105" 
-  "13095" -> "13111" 
-  "13204" -> "13203" 
-  "13235" -> "13234" 
-  "13252" -> "13256" 
-  "13256" -> "13251" 
-  "13276" -> "13274" 
-  "13280" -> "13279" 
-  "13298" -> "13297" 
-  "13087" -> "13085" 
-  "13096" -> "13095" 
-  "13100" -> "13108" 
-  "13108" -> "13345" 
-  "13205" -> "13204" 
-  "13236" -> "13243" 
-  "13240" -> "13235" 
-  "13253" -> "13252" 
-  "13281" -> "13280" 
-  "13300" -> "13298" 
+  "13100" -> "13099" 
+  "13240" -> "13238" 
+  "13280" -> "13287" 
+  "13284" -> "13279" 
   "13102" -> "13100" 
-  "13237" -> "13236" 
-  "13241" -> "13240" 
-  "13255" -> "13253" 
-  "13282" -> "13281" 
-  "13103" -> "13102" 
-  "13243" -> "13241" 
-  "13283" -> "13290" 
-  "13287" -> "13282" 
-  "13105" -> "13103" 
-  "13284" -> "13283" 
-  "13288" -> "13287" 
-  "13290" -> "13288" 
-  "12910" -> "12918" 
+  "13281" -> "13280" 
+  "13285" -> "13284" 
+  "13287" -> "13285" 
+  "12907" -> "12915" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/259-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/259-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/259-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/259-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,123 +1,123 @@
 digraph "UnregisterNatives" {  
-"13351" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2725</SUB>> ]
-"13371" [label = <(soa,soa(env))<SUB>2726</SUB>> ]
-"13373" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2727</SUB>> ]
-"13390" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c) &lt;&lt; &quot;]&quot;)<SUB>2729</SUB>> ]
-"13405" [label = <(&lt;operator&gt;.assignment,unregistered_count = 0)<SUB>2731</SUB>> ]
-"13409" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2732</SUB>> ]
-"13460" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2744</SUB>> ]
-"13374" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>2727</SUB>> ]
-"13381" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2727</SUB>> ]
-"13391" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c))<SUB>2729</SUB>> ]
-"13411" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2732</SUB>> ]
-"13442" [label = <(&lt;operator&gt;.equals,unregistered_count == 0)<SUB>2740</SUB>> ]
-"13375" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2727</SUB>> ]
-"13382" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2727</SUB>> ]
-"13392" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot;)<SUB>2729</SUB>> ]
-"13396" [label = <(mirror::Class::PrettyClass,mirror::Class::PrettyClass(c))<SUB>2729</SUB>> ]
-"13412" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>2732</SUB>> ]
-"13446" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c) &lt;&lt; &quot;' that contains no native methods&quot;)<SUB>2741</SUB>> ]
-"13356" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2725</SUB>> ]
-"13377" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2727</SUB>> ]
-"13383" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2727</SUB>> ]
-"13386" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2727</SUB>> ]
-"13393" [label = <(VLOG,VLOG(jni))<SUB>2729</SUB>> ]
-"13397" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyClass)<SUB>2729</SUB>> ]
-"13413" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2732</SUB>> ]
-"13420" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>2732</SUB>> ]
-"13430" [label = <(IsNative,m.IsNative())<SUB>2734</SUB>> ]
-"13447" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c))<SUB>2741</SUB>> ]
-"13357" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2725</SUB>> ]
-"13361" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>2725</SUB>> ]
-"13368" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2725</SUB>> ]
-"13379" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2727</SUB>> ]
-"13385" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2727</SUB>> ]
-"13388" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2727</SUB>> ]
-"13398" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2729</SUB>> ]
-"13401" [label = <(FIELD_IDENTIFIER,PrettyClass,PrettyClass)<SUB>2729</SUB>> ]
-"13414" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2732</SUB>> ]
-"13431" [label = <(&lt;operator&gt;.fieldAccess,m.IsNative)<SUB>2734</SUB>> ]
-"13435" [label = <(UnregisterNative,m.UnregisterNative())<SUB>2735</SUB>> ]
-"13439" [label = <(&lt;operator&gt;.postIncrement,unregistered_count++)<SUB>2736</SUB>> ]
-"13448" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;)<SUB>2741</SUB>> ]
-"13452" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(c))<SUB>2742</SUB>> ]
-"13362" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2725</SUB>> ]
-"13415" [label = <(Runtime::Current,Runtime::Current())<SUB>2732</SUB>> ]
-"13419" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2732</SUB>> ]
-"13433" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2734</SUB>> ]
-"13436" [label = <(&lt;operator&gt;.fieldAccess,m.UnregisterNative)<SUB>2735</SUB>> ]
-"13449" [label = <(LOG,LOG(WARNING))<SUB>2741</SUB>> ]
-"13453" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2742</SUB>> ]
-"13363" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2725</SUB>> ]
-"13365" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2725</SUB>> ]
-"13416" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2732</SUB>> ]
-"13438" [label = <(FIELD_IDENTIFIER,UnregisterNative,UnregisterNative)<SUB>2735</SUB>> ]
-"13454" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2742</SUB>> ]
-"13457" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2742</SUB>> ]
-"13418" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2732</SUB>> ]
-"13347" [label = <(METHOD,UnregisterNatives)<SUB>2724</SUB>> ]
-"13462" [label = <(METHOD_RETURN,jint)<SUB>2724</SUB>> ]
-  "13351" -> "13357" 
-  "13351" -> "13371" 
-  "13371" -> "13379" 
-  "13373" -> "13393" 
-  "13390" -> "13405" 
-  "13405" -> "13418" 
-  "13409" -> "13433" 
-  "13460" -> "13462" 
-  "13374" -> "13385" 
-  "13381" -> "13373" 
-  "13391" -> "13390" 
-  "13411" -> "13409" 
-  "13442" -> "13449" 
-  "13442" -> "13460" 
-  "13375" -> "13374" 
-  "13382" -> "13381" 
-  "13392" -> "13398" 
-  "13396" -> "13391" 
-  "13412" -> "13411" 
-  "13446" -> "13460" 
-  "13356" -> "13363" 
-  "13356" -> "13371" 
-  "13377" -> "13375" 
-  "13383" -> "13388" 
-  "13386" -> "13382" 
-  "13393" -> "13392" 
-  "13397" -> "13396" 
-  "13413" -> "13420" 
-  "13420" -> "13412" 
-  "13430" -> "13433" 
-  "13430" -> "13438" 
-  "13430" -> "13442" 
-  "13447" -> "13446" 
-  "13357" -> "13356" 
-  "13361" -> "13368" 
-  "13368" -> "13462" 
-  "13379" -> "13377" 
+"13348" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2723</SUB>> ]
+"13368" [label = <(soa,soa(env))<SUB>2724</SUB>> ]
+"13370" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2725</SUB>> ]
+"13387" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c) &lt;&lt; &quot;]&quot;)<SUB>2727</SUB>> ]
+"13402" [label = <(&lt;operator&gt;.assignment,unregistered_count = 0)<SUB>2729</SUB>> ]
+"13406" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2730</SUB>> ]
+"13457" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>2742</SUB>> ]
+"13371" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>2725</SUB>> ]
+"13378" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>2725</SUB>> ]
+"13388" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot; &lt;&lt; mirror::Class::PrettyClass(c))<SUB>2727</SUB>> ]
+"13408" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>2730</SUB>> ]
+"13439" [label = <(&lt;operator&gt;.equals,unregistered_count == 0)<SUB>2738</SUB>> ]
+"13372" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>2725</SUB>> ]
+"13379" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>2725</SUB>> ]
+"13389" [label = <(&lt;operator&gt;.shiftLeft,VLOG(jni) &lt;&lt; &quot;[Unregistering JNI native methods for &quot;)<SUB>2727</SUB>> ]
+"13393" [label = <(mirror::Class::PrettyClass,mirror::Class::PrettyClass(c))<SUB>2727</SUB>> ]
+"13409" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>2730</SUB>> ]
+"13443" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c) &lt;&lt; &quot;' that contains no native methods&quot;)<SUB>2739</SUB>> ]
+"13353" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>2723</SUB>> ]
+"13374" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2725</SUB>> ]
+"13380" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>2725</SUB>> ]
+"13383" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2725</SUB>> ]
+"13390" [label = <(VLOG,VLOG(jni))<SUB>2727</SUB>> ]
+"13394" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyClass)<SUB>2727</SUB>> ]
+"13410" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>2730</SUB>> ]
+"13417" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>2730</SUB>> ]
+"13427" [label = <(IsNative,m.IsNative())<SUB>2732</SUB>> ]
+"13444" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;\012 &lt;&lt; mirror::Class::PrettyDescriptor(c))<SUB>2739</SUB>> ]
+"13354" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>2723</SUB>> ]
+"13358" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>2723</SUB>> ]
+"13365" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))<SUB>2723</SUB>> ]
+"13376" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2725</SUB>> ]
+"13382" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>2725</SUB>> ]
+"13385" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>2725</SUB>> ]
+"13395" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2727</SUB>> ]
+"13398" [label = <(FIELD_IDENTIFIER,PrettyClass,PrettyClass)<SUB>2727</SUB>> ]
+"13411" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>2730</SUB>> ]
+"13428" [label = <(&lt;operator&gt;.fieldAccess,m.IsNative)<SUB>2732</SUB>> ]
+"13432" [label = <(UnregisterNative,m.UnregisterNative())<SUB>2733</SUB>> ]
+"13436" [label = <(&lt;operator&gt;.postIncrement,unregistered_count++)<SUB>2734</SUB>> ]
+"13445" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI UnregisterNatives: attempt to unregister native methods of class '&quot;)<SUB>2739</SUB>> ]
+"13449" [label = <(mirror::Class::PrettyDescriptor,mirror::Class::PrettyDescriptor(c))<SUB>2740</SUB>> ]
+"13359" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2723</SUB>> ]
+"13412" [label = <(Runtime::Current,Runtime::Current())<SUB>2730</SUB>> ]
+"13416" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>2730</SUB>> ]
+"13430" [label = <(FIELD_IDENTIFIER,IsNative,IsNative)<SUB>2732</SUB>> ]
+"13433" [label = <(&lt;operator&gt;.fieldAccess,m.UnregisterNative)<SUB>2733</SUB>> ]
+"13446" [label = <(LOG,LOG(WARNING))<SUB>2739</SUB>> ]
+"13450" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class::PrettyDescriptor)<SUB>2740</SUB>> ]
+"13360" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2723</SUB>> ]
+"13362" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2723</SUB>> ]
+"13413" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2730</SUB>> ]
+"13435" [label = <(FIELD_IDENTIFIER,UnregisterNative,UnregisterNative)<SUB>2733</SUB>> ]
+"13451" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>2740</SUB>> ]
+"13454" [label = <(FIELD_IDENTIFIER,PrettyDescriptor,PrettyDescriptor)<SUB>2740</SUB>> ]
+"13415" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2730</SUB>> ]
+"13344" [label = <(METHOD,UnregisterNatives)<SUB>2722</SUB>> ]
+"13459" [label = <(METHOD_RETURN,jint)<SUB>2722</SUB>> ]
+  "13348" -> "13354" 
+  "13348" -> "13368" 
+  "13368" -> "13376" 
+  "13370" -> "13390" 
+  "13387" -> "13402" 
+  "13402" -> "13415" 
+  "13406" -> "13430" 
+  "13457" -> "13459" 
+  "13371" -> "13382" 
+  "13378" -> "13370" 
+  "13388" -> "13387" 
+  "13408" -> "13406" 
+  "13439" -> "13446" 
+  "13439" -> "13457" 
+  "13372" -> "13371" 
+  "13379" -> "13378" 
+  "13389" -> "13395" 
+  "13393" -> "13388" 
+  "13409" -> "13408" 
+  "13443" -> "13457" 
+  "13353" -> "13360" 
+  "13353" -> "13368" 
+  "13374" -> "13372" 
+  "13380" -> "13385" 
+  "13383" -> "13379" 
+  "13390" -> "13389" 
+  "13394" -> "13393" 
+  "13410" -> "13417" 
+  "13417" -> "13409" 
+  "13427" -> "13430" 
+  "13427" -> "13435" 
+  "13427" -> "13439" 
+  "13444" -> "13443" 
+  "13354" -> "13353" 
+  "13358" -> "13365" 
+  "13365" -> "13459" 
+  "13376" -> "13374" 
+  "13382" -> "13380" 
   "13385" -> "13383" 
-  "13388" -> "13386" 
-  "13398" -> "13401" 
-  "13401" -> "13397" 
-  "13414" -> "13413" 
-  "13431" -> "13430" 
-  "13435" -> "13439" 
-  "13439" -> "13433" 
-  "13439" -> "13442" 
-  "13448" -> "13454" 
-  "13452" -> "13447" 
-  "13362" -> "13361" 
-  "13415" -> "13419" 
-  "13419" -> "13414" 
-  "13433" -> "13431" 
-  "13436" -> "13435" 
-  "13449" -> "13448" 
-  "13453" -> "13452" 
-  "13363" -> "13365" 
-  "13365" -> "13362" 
-  "13416" -> "13415" 
-  "13438" -> "13436" 
-  "13454" -> "13457" 
-  "13457" -> "13453" 
-  "13418" -> "13416" 
-  "13347" -> "13351" 
+  "13395" -> "13398" 
+  "13398" -> "13394" 
+  "13411" -> "13410" 
+  "13428" -> "13427" 
+  "13432" -> "13436" 
+  "13436" -> "13430" 
+  "13436" -> "13439" 
+  "13445" -> "13451" 
+  "13449" -> "13444" 
+  "13359" -> "13358" 
+  "13412" -> "13416" 
+  "13416" -> "13411" 
+  "13430" -> "13428" 
+  "13433" -> "13432" 
+  "13446" -> "13445" 
+  "13450" -> "13449" 
+  "13360" -> "13362" 
+  "13362" -> "13359" 
+  "13413" -> "13412" 
+  "13435" -> "13433" 
+  "13451" -> "13454" 
+  "13454" -> "13450" 
+  "13415" -> "13413" 
+  "13344" -> "13348" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/26-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/26-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/26-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/26-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowNoSuchMethodError" {  
-"692" [label = <(METHOD,ThrowNoSuchMethodError)<SUB>466</SUB>> ]
-"699" [label = <(METHOD_RETURN,void)<SUB>466</SUB>> ]
+"692" [label = <(METHOD,ThrowNoSuchMethodError)<SUB>465</SUB>> ]
+"699" [label = <(METHOD_RETURN,void)<SUB>465</SUB>> ]
   "692" -> "699" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/260-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/260-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/260-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/260-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,5 +1,5 @@
 digraph "MonitorEnter" {  
-"13464" [label = <(METHOD,MonitorEnter)<SUB>2747</SUB>> ]
-"13468" [label = <(METHOD_RETURN,jint)<SUB>2747</SUB>> ]
-  "13464" -> "13468" 
+"13461" [label = <(METHOD,MonitorEnter)<SUB>2745</SUB>> ]
+"13465" [label = <(METHOD_RETURN,jint)<SUB>2745</SUB>> ]
+  "13461" -> "13465" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/261-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/261-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/261-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/261-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,5 +1,5 @@
 digraph "MonitorExit" {  
-"13472" [label = <(METHOD,MonitorExit)<SUB>2761</SUB>> ]
-"13476" [label = <(METHOD_RETURN,jint)<SUB>2761</SUB>> ]
-  "13472" -> "13476" 
+"13469" [label = <(METHOD,MonitorExit)<SUB>2759</SUB>> ]
+"13473" [label = <(METHOD_RETURN,jint)<SUB>2759</SUB>> ]
+  "13469" -> "13473" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/262-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/262-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/262-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/262-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,56 +1,56 @@
 digraph "GetJavaVM" {  
-"13484" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2777</SUB>> ]
-"13504" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>2778</SUB>> ]
-"13528" [label = <(RETURN,return (*vm != nullptr) ? JNI_OK : JNI_ERR;,return (*vm != nullptr) ? JNI_OK : JNI_ERR;)<SUB>2784</SUB>> ]
-"13506" [label = <(Runtime::Current,Runtime::Current())<SUB>2778</SUB>> ]
-"13511" [label = <(&lt;operator&gt;.notEquals,runtime != nullptr)<SUB>2779</SUB>> ]
-"13529" [label = <(&lt;operator&gt;.conditional,(*vm != nullptr) ? JNI_OK : JNI_ERR)<SUB>2784</SUB>> ]
-"13507" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2778</SUB>> ]
-"13515" [label = <(&lt;operator&gt;.assignment,*vm = runtime-&gt;GetJavaVM())<SUB>2780</SUB>> ]
-"13530" [label = <(&lt;operator&gt;.notEquals,*vm != nullptr)<SUB>2784</SUB>> ]
-"13489" [label = <(UNLIKELY,UNLIKELY((vm) == nullptr))<SUB>2777</SUB>> ]
-"13509" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2778</SUB>> ]
-"13516" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2780</SUB>> ]
-"13518" [label = <(GetJavaVM,runtime-&gt;GetJavaVM())<SUB>2780</SUB>> ]
-"13524" [label = <(&lt;operator&gt;.assignment,*vm = nullptr)<SUB>2782</SUB>> ]
-"13531" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2784</SUB>> ]
-"13490" [label = <(&lt;operator&gt;.equals,(vm) == nullptr)<SUB>2777</SUB>> ]
-"13494" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;vm == null&quot;))<SUB>2777</SUB>> ]
-"13501" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2777</SUB>> ]
-"13519" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetJavaVM)<SUB>2780</SUB>> ]
-"13525" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2782</SUB>> ]
-"13495" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2777</SUB>> ]
-"13521" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>2780</SUB>> ]
-"13496" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2777</SUB>> ]
-"13498" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2777</SUB>> ]
-"13480" [label = <(METHOD,GetJavaVM)<SUB>2776</SUB>> ]
-"13536" [label = <(METHOD_RETURN,jint)<SUB>2776</SUB>> ]
-  "13484" -> "13490" 
-  "13484" -> "13509" 
-  "13504" -> "13511" 
-  "13528" -> "13536" 
+"13481" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2775</SUB>> ]
+"13501" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>2776</SUB>> ]
+"13525" [label = <(RETURN,return (*vm != nullptr) ? JNI_OK : JNI_ERR;,return (*vm != nullptr) ? JNI_OK : JNI_ERR;)<SUB>2782</SUB>> ]
+"13503" [label = <(Runtime::Current,Runtime::Current())<SUB>2776</SUB>> ]
+"13508" [label = <(&lt;operator&gt;.notEquals,runtime != nullptr)<SUB>2777</SUB>> ]
+"13526" [label = <(&lt;operator&gt;.conditional,(*vm != nullptr) ? JNI_OK : JNI_ERR)<SUB>2782</SUB>> ]
+"13504" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2776</SUB>> ]
+"13512" [label = <(&lt;operator&gt;.assignment,*vm = runtime-&gt;GetJavaVM())<SUB>2778</SUB>> ]
+"13527" [label = <(&lt;operator&gt;.notEquals,*vm != nullptr)<SUB>2782</SUB>> ]
+"13486" [label = <(UNLIKELY,UNLIKELY((vm) == nullptr))<SUB>2775</SUB>> ]
+"13506" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2776</SUB>> ]
+"13513" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2778</SUB>> ]
+"13515" [label = <(GetJavaVM,runtime-&gt;GetJavaVM())<SUB>2778</SUB>> ]
+"13521" [label = <(&lt;operator&gt;.assignment,*vm = nullptr)<SUB>2780</SUB>> ]
+"13528" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2782</SUB>> ]
+"13487" [label = <(&lt;operator&gt;.equals,(vm) == nullptr)<SUB>2775</SUB>> ]
+"13491" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;vm == null&quot;))<SUB>2775</SUB>> ]
+"13498" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))<SUB>2775</SUB>> ]
+"13516" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetJavaVM)<SUB>2778</SUB>> ]
+"13522" [label = <(&lt;operator&gt;.indirection,*vm)<SUB>2780</SUB>> ]
+"13492" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2775</SUB>> ]
+"13518" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>2778</SUB>> ]
+"13493" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2775</SUB>> ]
+"13495" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2775</SUB>> ]
+"13477" [label = <(METHOD,GetJavaVM)<SUB>2774</SUB>> ]
+"13533" [label = <(METHOD_RETURN,jint)<SUB>2774</SUB>> ]
+  "13481" -> "13487" 
+  "13481" -> "13506" 
+  "13501" -> "13508" 
+  "13525" -> "13533" 
+  "13503" -> "13501" 
+  "13508" -> "13513" 
+  "13508" -> "13522" 
+  "13526" -> "13525" 
+  "13504" -> "13503" 
+  "13512" -> "13528" 
+  "13527" -> "13526" 
+  "13486" -> "13493" 
+  "13486" -> "13506" 
   "13506" -> "13504" 
-  "13511" -> "13516" 
-  "13511" -> "13525" 
-  "13529" -> "13528" 
-  "13507" -> "13506" 
-  "13515" -> "13531" 
-  "13530" -> "13529" 
-  "13489" -> "13496" 
-  "13489" -> "13509" 
-  "13509" -> "13507" 
-  "13516" -> "13521" 
-  "13518" -> "13515" 
-  "13524" -> "13531" 
-  "13531" -> "13530" 
-  "13490" -> "13489" 
-  "13494" -> "13501" 
-  "13501" -> "13536" 
-  "13519" -> "13518" 
-  "13525" -> "13524" 
-  "13495" -> "13494" 
-  "13521" -> "13519" 
-  "13496" -> "13498" 
-  "13498" -> "13495" 
-  "13480" -> "13484" 
+  "13513" -> "13518" 
+  "13515" -> "13512" 
+  "13521" -> "13528" 
+  "13528" -> "13527" 
+  "13487" -> "13486" 
+  "13491" -> "13498" 
+  "13498" -> "13533" 
+  "13516" -> "13515" 
+  "13522" -> "13521" 
+  "13492" -> "13491" 
+  "13518" -> "13516" 
+  "13493" -> "13495" 
+  "13495" -> "13492" 
+  "13477" -> "13481" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/263-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/263-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/263-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/263-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,83 +1,83 @@
 digraph "NewDirectByteBuffer" {  
-"13578" [label = <(&lt;operator&gt;.assignment,address_arg = reinterpret_cast&lt;jlong&gt;(address))<SUB>2806</SUB>> ]
-"13584" [label = <(&lt;operator&gt;.assignment,capacity_arg = static_cast&lt;jint&gt;(capacity))<SUB>2807</SUB>> ]
-"13590" [label = <(&lt;operator&gt;.assignment,result = env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2809</SUB>> ]
-"13604" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;)<SUB>2812</SUB>> ]
-"13544" [label = <(&lt;operator&gt;.lessThan,capacity &lt; 0)<SUB>2788</SUB>> ]
-"13554" [label = <(&lt;operator&gt;.logicalAnd,address == nullptr &amp;&amp; capacity != 0)<SUB>2793</SUB>> ]
-"13568" [label = <(&lt;operator&gt;.greaterThan,capacity &gt; INT_MAX)<SUB>2800</SUB>> ]
-"13580" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;jlong&gt;(address))<SUB>2806</SUB>> ]
-"13586" [label = <(&lt;operator&gt;.cast,static_cast&lt;jint&gt;(capacity))<SUB>2807</SUB>> ]
-"13592" [label = <(NewObject,env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2809</SUB>> ]
-"13605" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result)<SUB>2812</SUB>> ]
-"13549" [label = <(UNKNOWN,),))<SUB>2789</SUB>> ]
-"13550" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);)<SUB>2789</SUB>> ]
-"13551" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2791</SUB>> ]
-"13555" [label = <(&lt;operator&gt;.equals,address == nullptr)<SUB>2793</SUB>> ]
-"13558" [label = <(&lt;operator&gt;.notEquals,capacity != 0)<SUB>2793</SUB>> ]
-"13563" [label = <(UNKNOWN,),))<SUB>2794</SUB>> ]
-"13564" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);)<SUB>2794</SUB>> ]
-"13565" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2796</SUB>> ]
-"13573" [label = <(UNKNOWN,),))<SUB>2801</SUB>> ]
-"13574" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);)<SUB>2801</SUB>> ]
-"13575" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2804</SUB>> ]
-"13581" [label = <(UNKNOWN,jlong,jlong)<SUB>2806</SUB>> ]
-"13587" [label = <(UNKNOWN,jint,jint)<SUB>2807</SUB>> ]
-"13593" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;NewObject)<SUB>2809</SUB>> ]
-"13596" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer)<SUB>2809</SUB>> ]
-"13599" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_init)<SUB>2810</SUB>> ]
-"13606" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>2812</SUB>> ]
-"13595" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2809</SUB>> ]
-"13598" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer,java_nio_DirectByteBuffer)<SUB>2809</SUB>> ]
-"13601" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_init,java_nio_DirectByteBuffer_init)<SUB>2810</SUB>> ]
-"13607" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>2812</SUB>> ]
-"13608" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>2812</SUB>> ]
-"13613" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>2812</SUB>> ]
-"13609" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>2812</SUB>> ]
-"13612" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>2812</SUB>> ]
-"13610" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>2812</SUB>> ]
-"13538" [label = <(METHOD,NewDirectByteBuffer)<SUB>2787</SUB>> ]
-"13616" [label = <(METHOD_RETURN,jobject)<SUB>2787</SUB>> ]
-  "13578" -> "13587" 
-  "13584" -> "13595" 
-  "13590" -> "13610" 
-  "13604" -> "13616" 
-  "13544" -> "13549" 
-  "13544" -> "13555" 
-  "13554" -> "13563" 
-  "13554" -> "13568" 
-  "13568" -> "13573" 
-  "13568" -> "13581" 
-  "13580" -> "13578" 
-  "13586" -> "13584" 
-  "13592" -> "13590" 
-  "13605" -> "13604" 
-  "13549" -> "13550" 
-  "13550" -> "13551" 
-  "13551" -> "13616" 
-  "13555" -> "13554" 
-  "13555" -> "13558" 
-  "13558" -> "13554" 
-  "13563" -> "13564" 
-  "13564" -> "13565" 
-  "13565" -> "13616" 
-  "13573" -> "13574" 
-  "13574" -> "13575" 
-  "13575" -> "13616" 
-  "13581" -> "13580" 
-  "13587" -> "13586" 
+"13575" [label = <(&lt;operator&gt;.assignment,address_arg = reinterpret_cast&lt;jlong&gt;(address))<SUB>2804</SUB>> ]
+"13581" [label = <(&lt;operator&gt;.assignment,capacity_arg = static_cast&lt;jint&gt;(capacity))<SUB>2805</SUB>> ]
+"13587" [label = <(&lt;operator&gt;.assignment,result = env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2807</SUB>> ]
+"13601" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result;)<SUB>2810</SUB>> ]
+"13541" [label = <(&lt;operator&gt;.lessThan,capacity &lt; 0)<SUB>2786</SUB>> ]
+"13551" [label = <(&lt;operator&gt;.logicalAnd,address == nullptr &amp;&amp; capacity != 0)<SUB>2791</SUB>> ]
+"13565" [label = <(&lt;operator&gt;.greaterThan,capacity &gt; INT_MAX)<SUB>2798</SUB>> ]
+"13577" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;jlong&gt;(address))<SUB>2804</SUB>> ]
+"13583" [label = <(&lt;operator&gt;.cast,static_cast&lt;jint&gt;(capacity))<SUB>2805</SUB>> ]
+"13589" [label = <(NewObject,env-&gt;NewObject(WellKnownClasses::java_nio_DirectByteBuffer,\012 WellKnownClasses::java_nio_DirectByteBuffer_init,\012                                    address_arg, capacity_arg))<SUB>2807</SUB>> ]
+"13602" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? nullptr : result)<SUB>2810</SUB>> ]
+"13546" [label = <(UNKNOWN,),))<SUB>2787</SUB>> ]
+"13547" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;, &quot;negative buffer capacity: %&quot; PRId64,\012                                       capacity);)<SUB>2787</SUB>> ]
+"13548" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2789</SUB>> ]
+"13552" [label = <(&lt;operator&gt;.equals,address == nullptr)<SUB>2791</SUB>> ]
+"13555" [label = <(&lt;operator&gt;.notEquals,capacity != 0)<SUB>2791</SUB>> ]
+"13560" [label = <(UNKNOWN,),))<SUB>2792</SUB>> ]
+"13561" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;non-zero capacity for nullptr pointer: %&quot; PRId64, capacity);)<SUB>2792</SUB>> ]
+"13562" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2794</SUB>> ]
+"13570" [label = <(UNKNOWN,),))<SUB>2799</SUB>> ]
+"13571" [label = <(UNKNOWN,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);,-&gt;JniAbortF(&quot;NewDirectByteBuffer&quot;,\012 &quot;buffer capacity greater than maximum jint: %&quot; PRId64,\012                                       capacity);)<SUB>2799</SUB>> ]
+"13572" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2802</SUB>> ]
+"13578" [label = <(UNKNOWN,jlong,jlong)<SUB>2804</SUB>> ]
+"13584" [label = <(UNKNOWN,jint,jint)<SUB>2805</SUB>> ]
+"13590" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;NewObject)<SUB>2807</SUB>> ]
+"13593" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer)<SUB>2807</SUB>> ]
+"13596" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_init)<SUB>2808</SUB>> ]
+"13603" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>2810</SUB>> ]
+"13592" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>2807</SUB>> ]
+"13595" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer,java_nio_DirectByteBuffer)<SUB>2807</SUB>> ]
+"13598" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_init,java_nio_DirectByteBuffer_init)<SUB>2808</SUB>> ]
+"13604" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>2810</SUB>> ]
+"13605" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>2810</SUB>> ]
+"13610" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>2810</SUB>> ]
+"13606" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>2810</SUB>> ]
+"13609" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>2810</SUB>> ]
+"13607" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>2810</SUB>> ]
+"13535" [label = <(METHOD,NewDirectByteBuffer)<SUB>2785</SUB>> ]
+"13613" [label = <(METHOD_RETURN,jobject)<SUB>2785</SUB>> ]
+  "13575" -> "13584" 
+  "13581" -> "13592" 
+  "13587" -> "13607" 
+  "13601" -> "13613" 
+  "13541" -> "13546" 
+  "13541" -> "13552" 
+  "13551" -> "13560" 
+  "13551" -> "13565" 
+  "13565" -> "13570" 
+  "13565" -> "13578" 
+  "13577" -> "13575" 
+  "13583" -> "13581" 
+  "13589" -> "13587" 
+  "13602" -> "13601" 
+  "13546" -> "13547" 
+  "13547" -> "13548" 
+  "13548" -> "13613" 
+  "13552" -> "13551" 
+  "13552" -> "13555" 
+  "13555" -> "13551" 
+  "13560" -> "13561" 
+  "13561" -> "13562" 
+  "13562" -> "13613" 
+  "13570" -> "13571" 
+  "13571" -> "13572" 
+  "13572" -> "13613" 
+  "13578" -> "13577" 
+  "13584" -> "13583" 
+  "13590" -> "13595" 
   "13593" -> "13598" 
-  "13596" -> "13601" 
-  "13599" -> "13592" 
-  "13606" -> "13605" 
+  "13596" -> "13589" 
+  "13603" -> "13602" 
+  "13592" -> "13590" 
   "13595" -> "13593" 
   "13598" -> "13596" 
-  "13601" -> "13599" 
+  "13604" -> "13603" 
+  "13605" -> "13610" 
+  "13610" -> "13604" 
+  "13606" -> "13609" 
+  "13609" -> "13605" 
   "13607" -> "13606" 
-  "13608" -> "13613" 
-  "13613" -> "13607" 
-  "13609" -> "13612" 
-  "13612" -> "13608" 
-  "13610" -> "13609" 
-  "13538" -> "13544" 
+  "13535" -> "13541" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/264-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/264-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/264-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/264-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,21 +1,21 @@
 digraph "GetDirectBufferAddress" {  
-"13622" [label = <(RETURN,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));)<SUB>2816</SUB>> ]
-"13623" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)))<SUB>2816</SUB>> ]
-"13624" [label = <(UNKNOWN,void*,void*)<SUB>2816</SUB>> ]
-"13625" [label = <(GetLongField,env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress))<SUB>2816</SUB>> ]
-"13626" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetLongField)<SUB>2816</SUB>> ]
-"13630" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2817</SUB>> ]
-"13628" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2816</SUB>> ]
-"13632" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_effectiveDirectAddress,java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2817</SUB>> ]
-"13618" [label = <(METHOD,GetDirectBufferAddress)<SUB>2815</SUB>> ]
-"13633" [label = <(METHOD_RETURN,void*)<SUB>2815</SUB>> ]
-  "13622" -> "13633" 
-  "13623" -> "13622" 
-  "13624" -> "13628" 
+"13619" [label = <(RETURN,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));,return reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress));)<SUB>2814</SUB>> ]
+"13620" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;void*&gt;(env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)))<SUB>2814</SUB>> ]
+"13621" [label = <(UNKNOWN,void*,void*)<SUB>2814</SUB>> ]
+"13622" [label = <(GetLongField,env-&gt;GetLongField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress))<SUB>2814</SUB>> ]
+"13623" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetLongField)<SUB>2814</SUB>> ]
+"13627" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2815</SUB>> ]
+"13625" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>2814</SUB>> ]
+"13629" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_effectiveDirectAddress,java_nio_DirectByteBuffer_effectiveDirectAddress)<SUB>2815</SUB>> ]
+"13615" [label = <(METHOD,GetDirectBufferAddress)<SUB>2813</SUB>> ]
+"13630" [label = <(METHOD_RETURN,void*)<SUB>2813</SUB>> ]
+  "13619" -> "13630" 
+  "13620" -> "13619" 
+  "13621" -> "13625" 
+  "13622" -> "13620" 
+  "13623" -> "13629" 
+  "13627" -> "13622" 
   "13625" -> "13623" 
-  "13626" -> "13632" 
-  "13630" -> "13625" 
-  "13628" -> "13626" 
-  "13632" -> "13630" 
-  "13618" -> "13624" 
+  "13629" -> "13627" 
+  "13615" -> "13621" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/265-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/265-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/265-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/265-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,21 +1,21 @@
 digraph "GetDirectBufferCapacity" {  
-"13639" [label = <(RETURN,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));)<SUB>2821</SUB>> ]
-"13640" [label = <(&lt;operator&gt;.cast,static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity)))<SUB>2821</SUB>> ]
-"13641" [label = <(UNKNOWN,jlong,jlong)<SUB>2821</SUB>> ]
-"13642" [label = <(GetIntField,env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity))<SUB>2821</SUB>> ]
-"13643" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetIntField)<SUB>2821</SUB>> ]
-"13647" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_capacity)<SUB>2822</SUB>> ]
-"13645" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2821</SUB>> ]
-"13649" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_capacity,java_nio_DirectByteBuffer_capacity)<SUB>2822</SUB>> ]
-"13635" [label = <(METHOD,GetDirectBufferCapacity)<SUB>2820</SUB>> ]
-"13650" [label = <(METHOD_RETURN,jlong)<SUB>2820</SUB>> ]
-  "13639" -> "13650" 
-  "13640" -> "13639" 
-  "13641" -> "13645" 
+"13636" [label = <(RETURN,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));,return static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity));)<SUB>2819</SUB>> ]
+"13637" [label = <(&lt;operator&gt;.cast,static_cast&lt;jlong&gt;(env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity)))<SUB>2819</SUB>> ]
+"13638" [label = <(UNKNOWN,jlong,jlong)<SUB>2819</SUB>> ]
+"13639" [label = <(GetIntField,env-&gt;GetIntField(\012        java_buffer, WellKnownClasses::java_nio_DirectByteBuffer_capacity))<SUB>2819</SUB>> ]
+"13640" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetIntField)<SUB>2819</SUB>> ]
+"13644" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_nio_DirectByteBuffer_capacity)<SUB>2820</SUB>> ]
+"13642" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>2819</SUB>> ]
+"13646" [label = <(FIELD_IDENTIFIER,java_nio_DirectByteBuffer_capacity,java_nio_DirectByteBuffer_capacity)<SUB>2820</SUB>> ]
+"13632" [label = <(METHOD,GetDirectBufferCapacity)<SUB>2818</SUB>> ]
+"13647" [label = <(METHOD_RETURN,jlong)<SUB>2818</SUB>> ]
+  "13636" -> "13647" 
+  "13637" -> "13636" 
+  "13638" -> "13642" 
+  "13639" -> "13637" 
+  "13640" -> "13646" 
+  "13644" -> "13639" 
   "13642" -> "13640" 
-  "13643" -> "13649" 
-  "13647" -> "13642" 
-  "13645" -> "13643" 
-  "13649" -> "13647" 
-  "13635" -> "13641" 
+  "13646" -> "13644" 
+  "13632" -> "13638" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/266-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/266-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/266-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/266-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureLocalCapacityInternal" {  
-"13653" [label = <(METHOD,EnsureLocalCapacityInternal)<SUB>2849</SUB>> ]
-"13658" [label = <(METHOD_RETURN,jint)<SUB>2849</SUB>> ]
-  "13653" -> "13658" 
+"13650" [label = <(METHOD,EnsureLocalCapacityInternal)<SUB>2847</SUB>> ]
+"13655" [label = <(METHOD_RETURN,jint)<SUB>2847</SUB>> ]
+  "13650" -> "13655" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/267-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/267-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/267-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/267-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,50 +1,50 @@
 digraph "NewPrimitiveArray" {  
-"13671" [label = <(soa,soa(env))<SUB>2868</SUB>> ]
-"13692" [label = <(&lt;operator&gt;.assignment,result = ArtT::Alloc(soa.Self(), length))<SUB>2873</SUB>> ]
-"13703" [label = <(RETURN,return soa.AddLocalReference&lt;JniT&gt;(result);,return soa.AddLocalReference&lt;JniT&gt;(result);)<SUB>2874</SUB>> ]
-"13674" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2869</SUB>> ]
-"13694" [label = <(ArtT::Alloc,ArtT::Alloc(soa.Self(), length))<SUB>2873</SUB>> ]
-"13704" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;JniT&gt;(result))<SUB>2874</SUB>> ]
-"13675" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2869</SUB>> ]
-"13679" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewPrimitiveArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2870</SUB>> ]
-"13689" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2871</SUB>> ]
-"13695" [label = <(&lt;operator&gt;.fieldAccess,ArtT::Alloc)<SUB>2873</SUB>> ]
-"13698" [label = <(Self,soa.Self())<SUB>2873</SUB>> ]
-"13705" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;JniT)<SUB>2874</SUB>> ]
-"13680" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2870</SUB>> ]
-"13697" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2873</SUB>> ]
-"13699" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2873</SUB>> ]
-"13706" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2874</SUB>> ]
-"13681" [label = <(Vm,soa.Vm())<SUB>2870</SUB>> ]
-"13685" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2870</SUB>> ]
-"13701" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2873</SUB>> ]
-"13708" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2874</SUB>> ]
-"13682" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2870</SUB>> ]
-"13684" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2870</SUB>> ]
-"13666" [label = <(METHOD,NewPrimitiveArray)<SUB>2867</SUB>> ]
-"13711" [label = <(METHOD_RETURN,JniT)<SUB>2867</SUB>> ]
-  "13671" -> "13675" 
-  "13692" -> "13708" 
-  "13703" -> "13711" 
-  "13674" -> "13684" 
-  "13674" -> "13697" 
+"13668" [label = <(soa,soa(env))<SUB>2866</SUB>> ]
+"13689" [label = <(&lt;operator&gt;.assignment,result = ArtT::Alloc(soa.Self(), length))<SUB>2871</SUB>> ]
+"13700" [label = <(RETURN,return soa.AddLocalReference&lt;JniT&gt;(result);,return soa.AddLocalReference&lt;JniT&gt;(result);)<SUB>2872</SUB>> ]
+"13671" [label = <(UNLIKELY,UNLIKELY(length &lt; 0))<SUB>2867</SUB>> ]
+"13691" [label = <(ArtT::Alloc,ArtT::Alloc(soa.Self(), length))<SUB>2871</SUB>> ]
+"13701" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;JniT&gt;(result))<SUB>2872</SUB>> ]
+"13672" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2867</SUB>> ]
+"13676" [label = <(JniAbortF,soa.Vm()-&gt;JniAbortF(&quot;NewPrimitiveArray&quot;, &quot;negative array length: %d&quot;, length))<SUB>2868</SUB>> ]
+"13686" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2869</SUB>> ]
+"13692" [label = <(&lt;operator&gt;.fieldAccess,ArtT::Alloc)<SUB>2871</SUB>> ]
+"13695" [label = <(Self,soa.Self())<SUB>2871</SUB>> ]
+"13702" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;JniT)<SUB>2872</SUB>> ]
+"13677" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;JniAbortF)<SUB>2868</SUB>> ]
+"13694" [label = <(FIELD_IDENTIFIER,Alloc,Alloc)<SUB>2871</SUB>> ]
+"13696" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>2871</SUB>> ]
+"13703" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>2872</SUB>> ]
+"13678" [label = <(Vm,soa.Vm())<SUB>2868</SUB>> ]
+"13682" [label = <(FIELD_IDENTIFIER,JniAbortF,JniAbortF)<SUB>2868</SUB>> ]
+"13698" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>2871</SUB>> ]
+"13705" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>2872</SUB>> ]
+"13679" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>2868</SUB>> ]
+"13681" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>2868</SUB>> ]
+"13663" [label = <(METHOD,NewPrimitiveArray)<SUB>2865</SUB>> ]
+"13708" [label = <(METHOD_RETURN,JniT)<SUB>2865</SUB>> ]
+  "13668" -> "13672" 
+  "13689" -> "13705" 
+  "13700" -> "13708" 
+  "13671" -> "13681" 
+  "13671" -> "13694" 
+  "13691" -> "13689" 
+  "13701" -> "13700" 
+  "13672" -> "13671" 
+  "13676" -> "13686" 
+  "13686" -> "13708" 
+  "13692" -> "13698" 
+  "13695" -> "13691" 
+  "13702" -> "13701" 
+  "13677" -> "13676" 
   "13694" -> "13692" 
-  "13704" -> "13703" 
-  "13675" -> "13674" 
-  "13679" -> "13689" 
-  "13689" -> "13711" 
-  "13695" -> "13701" 
-  "13698" -> "13694" 
-  "13705" -> "13704" 
-  "13680" -> "13679" 
-  "13697" -> "13695" 
-  "13699" -> "13698" 
-  "13706" -> "13705" 
-  "13681" -> "13685" 
-  "13685" -> "13680" 
-  "13701" -> "13699" 
-  "13708" -> "13706" 
-  "13682" -> "13681" 
-  "13684" -> "13682" 
-  "13666" -> "13671" 
+  "13696" -> "13695" 
+  "13703" -> "13702" 
+  "13678" -> "13682" 
+  "13682" -> "13677" 
+  "13698" -> "13696" 
+  "13705" -> "13703" 
+  "13679" -> "13678" 
+  "13681" -> "13679" 
+  "13663" -> "13668" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/268-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/268-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/268-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/268-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,5 +1,5 @@
 digraph "DecodeAndCheckArrayType" {  
-"13713" [label = <(METHOD,DecodeAndCheckArrayType)<SUB>2878</SUB>> ]
-"13719" [label = <(METHOD_RETURN,ObjPtr&lt;ArtArrayT&gt;)<SUB>2878</SUB>> ]
-  "13713" -> "13719" 
+"13710" [label = <(METHOD,DecodeAndCheckArrayType)<SUB>2876</SUB>> ]
+"13716" [label = <(METHOD_RETURN,ObjPtr&lt;ArtArrayT&gt;)<SUB>2876</SUB>> ]
+  "13710" -> "13716" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/269-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/269-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/269-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/269-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,113 +1,113 @@
 digraph "GetPrimitiveArray" {  
-"13736" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2900</SUB>> ]
-"13755" [label = <(soa,soa(env))<SUB>2901</SUB>> ]
-"13758" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetArrayElements&quot;, &quot;get&quot;))<SUB>2902</SUB>> ]
-"13760" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetArrayElements&quot;, &quot;get&quot;))<SUB>2902</SUB>> ]
-"13766" [label = <(UNLIKELY,UNLIKELY(array == nullptr))<SUB>2904</SUB>> ]
-"13774" [label = <(IsMovableObject,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject(array))<SUB>2908</SUB>> ]
-"13767" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2904</SUB>> ]
-"13771" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2905</SUB>> ]
-"13775" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject)<SUB>2908</SUB>> ]
-"13796" [label = <(&lt;operator&gt;.assignment,component_size = sizeof(ElementT))<SUB>2912</SUB>> ]
-"13801" [label = <(&lt;operator&gt;.assignment,size = array-&gt;GetLength() * component_size)<SUB>2913</SUB>> ]
-"13810" [label = <(&lt;operator&gt;.assignment,* data = new uint64_t[RoundUp(size, 8) / 8])<SUB>2914</SUB>> ]
-"13814" [label = <(memcpy,memcpy(data, array-&gt;GetData(), size))<SUB>2915</SUB>> ]
-"13821" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(data);,return reinterpret_cast&lt;ElementT*&gt;(data);)<SUB>2916</SUB>> ]
-"13740" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2900</SUB>> ]
-"13776" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2908</SUB>> ]
-"13783" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2908</SUB>> ]
-"13787" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2909</SUB>> ]
-"13798" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2912</SUB>> ]
-"13803" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2913</SUB>> ]
-"13812" [label = <(&lt;operator&gt;.new,new uint64_t[RoundUp(size, 8) / 8])<SUB>2914</SUB>> ]
-"13816" [label = <(GetData,array-&gt;GetData())<SUB>2915</SUB>> ]
-"13822" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(data))<SUB>2916</SUB>> ]
-"13836" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());)<SUB>2921</SUB>> ]
-"13741" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2900</SUB>> ]
-"13745" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2900</SUB>> ]
-"13752" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2900</SUB>> ]
-"13777" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2908</SUB>> ]
-"13791" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2910</SUB>> ]
-"13804" [label = <(GetLength,array-&gt;GetLength())<SUB>2913</SUB>> ]
-"13817" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2915</SUB>> ]
-"13823" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2916</SUB>> ]
-"13828" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2918</SUB>> ]
-"13837" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData()))<SUB>2921</SUB>> ]
-"13746" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2900</SUB>> ]
-"13778" [label = <(Runtime::Current,Runtime::Current())<SUB>2908</SUB>> ]
-"13782" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2908</SUB>> ]
-"13792" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2910</SUB>> ]
-"13805" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2913</SUB>> ]
-"13819" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2915</SUB>> ]
-"13832" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2919</SUB>> ]
-"13838" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2921</SUB>> ]
-"13839" [label = <(GetData,array-&gt;GetData())<SUB>2921</SUB>> ]
-"13747" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2900</SUB>> ]
-"13749" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2900</SUB>> ]
-"13779" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2908</SUB>> ]
-"13807" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2913</SUB>> ]
-"13833" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2919</SUB>> ]
-"13840" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2921</SUB>> ]
-"13781" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2908</SUB>> ]
-"13842" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2921</SUB>> ]
-"13731" [label = <(METHOD,GetPrimitiveArray)<SUB>2899</SUB>> ]
-"13843" [label = <(METHOD_RETURN,ElementT)<SUB>2899</SUB>> ]
-  "13736" -> "13741" 
-  "13736" -> "13755" 
-  "13755" -> "13760" 
-  "13758" -> "13767" 
-  "13760" -> "13758" 
-  "13766" -> "13771" 
-  "13766" -> "13781" 
-  "13774" -> "13787" 
-  "13774" -> "13828" 
-  "13767" -> "13766" 
-  "13771" -> "13843" 
-  "13775" -> "13774" 
-  "13796" -> "13807" 
-  "13801" -> "13812" 
-  "13810" -> "13819" 
-  "13814" -> "13823" 
-  "13821" -> "13843" 
-  "13740" -> "13747" 
-  "13740" -> "13755" 
-  "13776" -> "13783" 
-  "13783" -> "13775" 
-  "13787" -> "13792" 
-  "13787" -> "13798" 
-  "13798" -> "13796" 
-  "13803" -> "13801" 
-  "13812" -> "13810" 
+"13733" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2898</SUB>> ]
+"13752" [label = <(soa,soa(env))<SUB>2899</SUB>> ]
+"13755" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetArrayElements&quot;, &quot;get&quot;))<SUB>2900</SUB>> ]
+"13757" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetArrayElements&quot;, &quot;get&quot;))<SUB>2900</SUB>> ]
+"13763" [label = <(UNLIKELY,UNLIKELY(array == nullptr))<SUB>2902</SUB>> ]
+"13771" [label = <(IsMovableObject,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject(array))<SUB>2906</SUB>> ]
+"13764" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2902</SUB>> ]
+"13768" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>2903</SUB>> ]
+"13772" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;IsMovableObject)<SUB>2906</SUB>> ]
+"13793" [label = <(&lt;operator&gt;.assignment,component_size = sizeof(ElementT))<SUB>2910</SUB>> ]
+"13798" [label = <(&lt;operator&gt;.assignment,size = array-&gt;GetLength() * component_size)<SUB>2911</SUB>> ]
+"13807" [label = <(&lt;operator&gt;.assignment,* data = new uint64_t[RoundUp(size, 8) / 8])<SUB>2912</SUB>> ]
+"13811" [label = <(memcpy,memcpy(data, array-&gt;GetData(), size))<SUB>2913</SUB>> ]
+"13818" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(data);,return reinterpret_cast&lt;ElementT*&gt;(data);)<SUB>2914</SUB>> ]
+"13737" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2898</SUB>> ]
+"13773" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2906</SUB>> ]
+"13780" [label = <(FIELD_IDENTIFIER,IsMovableObject,IsMovableObject)<SUB>2906</SUB>> ]
+"13784" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2907</SUB>> ]
+"13795" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2910</SUB>> ]
+"13800" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2911</SUB>> ]
+"13809" [label = <(&lt;operator&gt;.new,new uint64_t[RoundUp(size, 8) / 8])<SUB>2912</SUB>> ]
+"13813" [label = <(GetData,array-&gt;GetData())<SUB>2913</SUB>> ]
+"13819" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(data))<SUB>2914</SUB>> ]
+"13833" [label = <(RETURN,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());,return reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData());)<SUB>2919</SUB>> ]
+"13738" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2898</SUB>> ]
+"13742" [label = <(CHECK_NON_NULL_ARGUMENT(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2898</SUB>> ]
+"13749" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_array),CHECK_NON_NULL_ARGUMENT(java_array))<SUB>2898</SUB>> ]
+"13774" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2906</SUB>> ]
+"13788" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_TRUE)<SUB>2908</SUB>> ]
+"13801" [label = <(GetLength,array-&gt;GetLength())<SUB>2911</SUB>> ]
+"13814" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2913</SUB>> ]
+"13820" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2914</SUB>> ]
+"13825" [label = <(&lt;operator&gt;.notEquals,is_copy != nullptr)<SUB>2916</SUB>> ]
+"13834" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ElementT*&gt;(array-&gt;GetData()))<SUB>2919</SUB>> ]
+"13743" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2898</SUB>> ]
+"13775" [label = <(Runtime::Current,Runtime::Current())<SUB>2906</SUB>> ]
+"13779" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2906</SUB>> ]
+"13789" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2908</SUB>> ]
+"13802" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2911</SUB>> ]
+"13816" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2913</SUB>> ]
+"13829" [label = <(&lt;operator&gt;.assignment,*is_copy = JNI_FALSE)<SUB>2917</SUB>> ]
+"13835" [label = <(UNKNOWN,ElementT*,ElementT*)<SUB>2919</SUB>> ]
+"13836" [label = <(GetData,array-&gt;GetData())<SUB>2919</SUB>> ]
+"13744" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2898</SUB>> ]
+"13746" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2898</SUB>> ]
+"13776" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2906</SUB>> ]
+"13804" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2911</SUB>> ]
+"13830" [label = <(&lt;operator&gt;.indirection,*is_copy)<SUB>2917</SUB>> ]
+"13837" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2919</SUB>> ]
+"13778" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2906</SUB>> ]
+"13839" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2919</SUB>> ]
+"13728" [label = <(METHOD,GetPrimitiveArray)<SUB>2897</SUB>> ]
+"13840" [label = <(METHOD_RETURN,ElementT)<SUB>2897</SUB>> ]
+  "13733" -> "13738" 
+  "13733" -> "13752" 
+  "13752" -> "13757" 
+  "13755" -> "13764" 
+  "13757" -> "13755" 
+  "13763" -> "13768" 
+  "13763" -> "13778" 
+  "13771" -> "13784" 
+  "13771" -> "13825" 
+  "13764" -> "13763" 
+  "13768" -> "13840" 
+  "13772" -> "13771" 
+  "13793" -> "13804" 
+  "13798" -> "13809" 
+  "13807" -> "13816" 
+  "13811" -> "13820" 
+  "13818" -> "13840" 
+  "13737" -> "13744" 
+  "13737" -> "13752" 
+  "13773" -> "13780" 
+  "13780" -> "13772" 
+  "13784" -> "13789" 
+  "13784" -> "13795" 
+  "13795" -> "13793" 
+  "13800" -> "13798" 
+  "13809" -> "13807" 
+  "13813" -> "13811" 
+  "13819" -> "13818" 
+  "13833" -> "13840" 
+  "13738" -> "13737" 
+  "13742" -> "13749" 
+  "13749" -> "13840" 
+  "13774" -> "13773" 
+  "13788" -> "13795" 
+  "13801" -> "13800" 
+  "13814" -> "13813" 
+  "13820" -> "13819" 
+  "13825" -> "13835" 
+  "13825" -> "13830" 
+  "13834" -> "13833" 
+  "13743" -> "13742" 
+  "13775" -> "13779" 
+  "13779" -> "13774" 
+  "13789" -> "13788" 
+  "13802" -> "13801" 
   "13816" -> "13814" 
-  "13822" -> "13821" 
-  "13836" -> "13843" 
-  "13741" -> "13740" 
-  "13745" -> "13752" 
-  "13752" -> "13843" 
-  "13777" -> "13776" 
-  "13791" -> "13798" 
-  "13804" -> "13803" 
-  "13817" -> "13816" 
-  "13823" -> "13822" 
-  "13828" -> "13838" 
-  "13828" -> "13833" 
+  "13829" -> "13835" 
+  "13835" -> "13839" 
+  "13836" -> "13834" 
+  "13744" -> "13746" 
+  "13746" -> "13743" 
+  "13776" -> "13775" 
+  "13804" -> "13802" 
+  "13830" -> "13829" 
   "13837" -> "13836" 
-  "13746" -> "13745" 
-  "13778" -> "13782" 
-  "13782" -> "13777" 
-  "13792" -> "13791" 
-  "13805" -> "13804" 
-  "13819" -> "13817" 
-  "13832" -> "13838" 
-  "13838" -> "13842" 
+  "13778" -> "13776" 
   "13839" -> "13837" 
-  "13747" -> "13749" 
-  "13749" -> "13746" 
-  "13779" -> "13778" 
-  "13807" -> "13805" 
-  "13833" -> "13832" 
-  "13840" -> "13839" 
-  "13781" -> "13779" 
-  "13842" -> "13840" 
-  "13731" -> "13736" 
+  "13728" -> "13733" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/27-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/27-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/27-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/27-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,5 +1,5 @@
 digraph "ReportInvalidJNINativeMethod" {  
-"705" [label = <(METHOD,ReportInvalidJNINativeMethod)<SUB>481</SUB>> ]
-"711" [label = <(METHOD_RETURN,void)<SUB>481</SUB>> ]
+"705" [label = <(METHOD,ReportInvalidJNINativeMethod)<SUB>480</SUB>> ]
+"711" [label = <(METHOD_RETURN,void)<SUB>480</SUB>> ]
   "705" -> "711" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/270-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/270-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/270-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/270-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,38 +1,38 @@
 digraph "ReleasePrimitiveArray" {  
-"13851" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2927</SUB>> ]
-"13869" [label = <(soa,soa(env))<SUB>2928</SUB>> ]
-"13872" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;ReleaseArrayElements&quot;, &quot;release&quot;))<SUB>2929</SUB>> ]
-"13885" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, sizeof(ElementT), elements, mode))<SUB>2934</SUB>> ]
-"13874" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;ReleaseArrayElements&quot;, &quot;release&quot;))<SUB>2929</SUB>> ]
-"13880" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2931</SUB>> ]
-"13888" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2934</SUB>> ]
-"13884" [label = <(RETURN,return;,return;)<SUB>2932</SUB>> ]
-"13855" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2927</SUB>> ]
-"13856" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2927</SUB>> ]
-"13860" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2927</SUB>> ]
-"13867" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2927</SUB>> ]
-"13861" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2927</SUB>> ]
-"13862" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2927</SUB>> ]
-"13864" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2927</SUB>> ]
-"13845" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2926</SUB>> ]
-"13892" [label = <(METHOD_RETURN,void)<SUB>2926</SUB>> ]
-  "13851" -> "13856" 
-  "13851" -> "13869" 
-  "13869" -> "13874" 
-  "13872" -> "13880" 
-  "13885" -> "13892" 
-  "13874" -> "13872" 
-  "13880" -> "13884" 
-  "13880" -> "13888" 
-  "13888" -> "13885" 
-  "13884" -> "13892" 
-  "13855" -> "13862" 
-  "13855" -> "13869" 
-  "13856" -> "13855" 
-  "13860" -> "13867" 
-  "13867" -> "13892" 
-  "13861" -> "13860" 
-  "13862" -> "13864" 
-  "13864" -> "13861" 
-  "13845" -> "13851" 
+"13848" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2925</SUB>> ]
+"13866" [label = <(soa,soa(env))<SUB>2926</SUB>> ]
+"13869" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;ReleaseArrayElements&quot;, &quot;release&quot;))<SUB>2927</SUB>> ]
+"13882" [label = <(ReleasePrimitiveArray,ReleasePrimitiveArray(soa, array, sizeof(ElementT), elements, mode))<SUB>2932</SUB>> ]
+"13871" [label = <(DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;ArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;ReleaseArrayElements&quot;, &quot;release&quot;))<SUB>2927</SUB>> ]
+"13877" [label = <(&lt;operator&gt;.equals,array == nullptr)<SUB>2929</SUB>> ]
+"13885" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2932</SUB>> ]
+"13881" [label = <(RETURN,return;,return;)<SUB>2930</SUB>> ]
+"13852" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2925</SUB>> ]
+"13853" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2925</SUB>> ]
+"13857" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2925</SUB>> ]
+"13864" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2925</SUB>> ]
+"13858" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2925</SUB>> ]
+"13859" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2925</SUB>> ]
+"13861" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2925</SUB>> ]
+"13842" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2924</SUB>> ]
+"13889" [label = <(METHOD_RETURN,void)<SUB>2924</SUB>> ]
+  "13848" -> "13853" 
+  "13848" -> "13866" 
+  "13866" -> "13871" 
+  "13869" -> "13877" 
+  "13882" -> "13889" 
+  "13871" -> "13869" 
+  "13877" -> "13881" 
+  "13877" -> "13885" 
+  "13885" -> "13882" 
+  "13881" -> "13889" 
+  "13852" -> "13859" 
+  "13852" -> "13866" 
+  "13853" -> "13852" 
+  "13857" -> "13864" 
+  "13864" -> "13889" 
+  "13858" -> "13857" 
+  "13859" -> "13861" 
+  "13861" -> "13858" 
+  "13842" -> "13848" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/271-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/271-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/271-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/271-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,5 +1,5 @@
 digraph "ReleasePrimitiveArray" {  
-"13894" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2937</SUB>> ]
-"13901" [label = <(METHOD_RETURN,void)<SUB>2937</SUB>> ]
-  "13894" -> "13901" 
+"13891" [label = <(METHOD,ReleasePrimitiveArray)<SUB>2935</SUB>> ]
+"13898" [label = <(METHOD_RETURN,void)<SUB>2935</SUB>> ]
+  "13891" -> "13898" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/272-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/272-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/272-cfg.dot	2023-06-07 19:34:48.437388385 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/272-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,94 +1,94 @@
 digraph "GetPrimitiveArrayRegion" {  
-"13940" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2982</SUB>> ]
-"13958" [label = <(soa,soa(env))<SUB>2983</SUB>> ]
-"13961" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetPrimitiveArrayRegion&quot;, &quot;get region of&quot;))<SUB>2984</SUB>> ]
-"13963" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetPrimitiveArrayRegion&quot;, &quot;get region of&quot;))<SUB>2984</SUB>> ]
-"13969" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2986</SUB>> ]
-"13944" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2982</SUB>> ]
-"13974" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2987</SUB>> ]
-"13945" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2982</SUB>> ]
-"13949" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2982</SUB>> ]
-"13956" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2982</SUB>> ]
-"13975" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2987</SUB>> ]
-"13982" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2987</SUB>> ]
-"13991" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;src&quot;))<SUB>2988</SUB>> ]
-"13950" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2982</SUB>> ]
-"13976" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2987</SUB>> ]
-"13979" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2987</SUB>> ]
-"13984" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2987</SUB>> ]
-"13999" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2990</SUB>> ]
-"14022" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2991</SUB>> ]
-"14028" [label = <(memcpy,memcpy(buf, data + start, length * sizeof(ElementT)))<SUB>2992</SUB>> ]
-"13951" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2982</SUB>> ]
-"13953" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2982</SUB>> ]
-"13985" [label = <(GetLength,array-&gt;GetLength())<SUB>2987</SUB>> ]
-"14024" [label = <(GetData,array-&gt;GetData())<SUB>2991</SUB>> ]
-"14030" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2992</SUB>> ]
-"14033" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2992</SUB>> ]
-"13986" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2987</SUB>> ]
-"14025" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2991</SUB>> ]
-"14035" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2992</SUB>> ]
-"13988" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2987</SUB>> ]
-"14004" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2990</SUB>> ]
-"14027" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2991</SUB>> ]
-"14005" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2990</SUB>> ]
-"14013" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2990</SUB>> ]
-"14020" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2990</SUB>> ]
-"14006" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2990</SUB>> ]
-"14009" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2990</SUB>> ]
-"14014" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2990</SUB>> ]
-"14015" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2990</SUB>> ]
-"14017" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2990</SUB>> ]
-"13933" [label = <(METHOD,GetPrimitiveArrayRegion)<SUB>2980</SUB>> ]
-"14037" [label = <(METHOD_RETURN,void)<SUB>2980</SUB>> ]
-  "13940" -> "13945" 
-  "13940" -> "13958" 
-  "13958" -> "13963" 
-  "13961" -> "13969" 
-  "13963" -> "13961" 
-  "13969" -> "14037" 
-  "13969" -> "13976" 
-  "13944" -> "13951" 
-  "13944" -> "13958" 
-  "13974" -> "13991" 
-  "13974" -> "13999" 
-  "13945" -> "13944" 
-  "13949" -> "13956" 
-  "13956" -> "14037" 
-  "13975" -> "13974" 
-  "13975" -> "13988" 
-  "13982" -> "13974" 
-  "13991" -> "14037" 
-  "13950" -> "13949" 
-  "13976" -> "13975" 
-  "13976" -> "13979" 
-  "13979" -> "13975" 
-  "13984" -> "13982" 
-  "13999" -> "14006" 
-  "13999" -> "14027" 
-  "14022" -> "14030" 
-  "14028" -> "14037" 
-  "13951" -> "13953" 
-  "13953" -> "13950" 
-  "13985" -> "13984" 
+"13937" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2980</SUB>> ]
+"13955" [label = <(soa,soa(env))<SUB>2981</SUB>> ]
+"13958" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetPrimitiveArrayRegion&quot;, &quot;get region of&quot;))<SUB>2982</SUB>> ]
+"13960" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;GetPrimitiveArrayRegion&quot;, &quot;get region of&quot;))<SUB>2982</SUB>> ]
+"13966" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>2984</SUB>> ]
+"13941" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2980</SUB>> ]
+"13971" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>2985</SUB>> ]
+"13942" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2980</SUB>> ]
+"13946" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2980</SUB>> ]
+"13953" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2980</SUB>> ]
+"13972" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>2985</SUB>> ]
+"13979" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>2985</SUB>> ]
+"13988" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;src&quot;))<SUB>2986</SUB>> ]
+"13947" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2980</SUB>> ]
+"13973" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>2985</SUB>> ]
+"13976" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>2985</SUB>> ]
+"13981" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>2985</SUB>> ]
+"13996" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2988</SUB>> ]
+"14019" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>2989</SUB>> ]
+"14025" [label = <(memcpy,memcpy(buf, data + start, length * sizeof(ElementT)))<SUB>2990</SUB>> ]
+"13948" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2980</SUB>> ]
+"13950" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2980</SUB>> ]
+"13982" [label = <(GetLength,array-&gt;GetLength())<SUB>2985</SUB>> ]
+"14021" [label = <(GetData,array-&gt;GetData())<SUB>2989</SUB>> ]
+"14027" [label = <(&lt;operator&gt;.addition,data + start)<SUB>2990</SUB>> ]
+"14030" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>2990</SUB>> ]
+"13983" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2985</SUB>> ]
+"14022" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>2989</SUB>> ]
+"14032" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>2990</SUB>> ]
+"13985" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2985</SUB>> ]
+"14001" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>2988</SUB>> ]
+"14024" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>2989</SUB>> ]
+"14002" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>2988</SUB>> ]
+"14010" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>2988</SUB>> ]
+"14017" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>2988</SUB>> ]
+"14003" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>2988</SUB>> ]
+"14006" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>2988</SUB>> ]
+"14011" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2988</SUB>> ]
+"14012" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2988</SUB>> ]
+"14014" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2988</SUB>> ]
+"13930" [label = <(METHOD,GetPrimitiveArrayRegion)<SUB>2978</SUB>> ]
+"14034" [label = <(METHOD_RETURN,void)<SUB>2978</SUB>> ]
+  "13937" -> "13942" 
+  "13937" -> "13955" 
+  "13955" -> "13960" 
+  "13958" -> "13966" 
+  "13960" -> "13958" 
+  "13966" -> "14034" 
+  "13966" -> "13973" 
+  "13941" -> "13948" 
+  "13941" -> "13955" 
+  "13971" -> "13988" 
+  "13971" -> "13996" 
+  "13942" -> "13941" 
+  "13946" -> "13953" 
+  "13953" -> "14034" 
+  "13972" -> "13971" 
+  "13972" -> "13985" 
+  "13979" -> "13971" 
+  "13988" -> "14034" 
+  "13947" -> "13946" 
+  "13973" -> "13972" 
+  "13973" -> "13976" 
+  "13976" -> "13972" 
+  "13981" -> "13979" 
+  "13996" -> "14003" 
+  "13996" -> "14024" 
+  "14019" -> "14027" 
+  "14025" -> "14034" 
+  "13948" -> "13950" 
+  "13950" -> "13947" 
+  "13982" -> "13981" 
+  "14021" -> "14019" 
+  "14027" -> "14032" 
+  "14030" -> "14025" 
+  "13983" -> "13982" 
+  "14022" -> "14021" 
+  "14032" -> "14030" 
+  "13985" -> "13983" 
+  "14001" -> "14012" 
+  "14001" -> "14024" 
   "14024" -> "14022" 
-  "14030" -> "14035" 
-  "14033" -> "14028" 
-  "13986" -> "13985" 
-  "14025" -> "14024" 
-  "14035" -> "14033" 
-  "13988" -> "13986" 
-  "14004" -> "14015" 
-  "14004" -> "14027" 
-  "14027" -> "14025" 
-  "14005" -> "14004" 
-  "14013" -> "14020" 
-  "14020" -> "14037" 
-  "14006" -> "14005" 
-  "14006" -> "14009" 
-  "14009" -> "14005" 
-  "14014" -> "14013" 
-  "14015" -> "14017" 
-  "14017" -> "14014" 
-  "13933" -> "13940" 
+  "14002" -> "14001" 
+  "14010" -> "14017" 
+  "14017" -> "14034" 
+  "14003" -> "14002" 
+  "14003" -> "14006" 
+  "14006" -> "14002" 
+  "14011" -> "14010" 
+  "14012" -> "14014" 
+  "14014" -> "14011" 
+  "13930" -> "13937" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/273-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/273-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/273-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/273-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,94 +1,94 @@
 digraph "SetPrimitiveArrayRegion" {  
-"14046" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>3000</SUB>> ]
-"14064" [label = <(soa,soa(env))<SUB>3001</SUB>> ]
-"14067" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;SetPrimitiveArrayRegion&quot;, &quot;set region of&quot;))<SUB>3002</SUB>> ]
-"14069" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;SetPrimitiveArrayRegion&quot;, &quot;set region of&quot;))<SUB>3002</SUB>> ]
-"14075" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>3004</SUB>> ]
-"14050" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>3000</SUB>> ]
-"14080" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>3005</SUB>> ]
-"14051" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>3000</SUB>> ]
-"14055" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>3000</SUB>> ]
-"14062" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>3000</SUB>> ]
-"14081" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>3005</SUB>> ]
-"14088" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>3005</SUB>> ]
-"14097" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;dst&quot;))<SUB>3006</SUB>> ]
-"14056" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>3000</SUB>> ]
-"14082" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>3005</SUB>> ]
-"14085" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>3005</SUB>> ]
-"14090" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>3005</SUB>> ]
-"14105" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>3008</SUB>> ]
-"14128" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>3009</SUB>> ]
-"14134" [label = <(memcpy,memcpy(data + start, buf, length * sizeof(ElementT)))<SUB>3010</SUB>> ]
-"14057" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>3000</SUB>> ]
-"14059" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>3000</SUB>> ]
-"14091" [label = <(GetLength,array-&gt;GetLength())<SUB>3005</SUB>> ]
-"14130" [label = <(GetData,array-&gt;GetData())<SUB>3009</SUB>> ]
-"14135" [label = <(&lt;operator&gt;.addition,data + start)<SUB>3010</SUB>> ]
-"14139" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>3010</SUB>> ]
-"14092" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>3005</SUB>> ]
-"14131" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>3009</SUB>> ]
-"14141" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>3010</SUB>> ]
-"14094" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>3005</SUB>> ]
-"14110" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>3008</SUB>> ]
-"14133" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>3009</SUB>> ]
-"14111" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>3008</SUB>> ]
-"14119" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>3008</SUB>> ]
-"14126" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>3008</SUB>> ]
-"14112" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>3008</SUB>> ]
-"14115" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>3008</SUB>> ]
-"14120" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>3008</SUB>> ]
-"14121" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>3008</SUB>> ]
-"14123" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>3008</SUB>> ]
-"14039" [label = <(METHOD,SetPrimitiveArrayRegion)<SUB>2998</SUB>> ]
-"14143" [label = <(METHOD_RETURN,void)<SUB>2998</SUB>> ]
-  "14046" -> "14051" 
-  "14046" -> "14064" 
-  "14064" -> "14069" 
-  "14067" -> "14075" 
-  "14069" -> "14067" 
-  "14075" -> "14143" 
-  "14075" -> "14082" 
-  "14050" -> "14057" 
-  "14050" -> "14064" 
-  "14080" -> "14097" 
-  "14080" -> "14105" 
-  "14051" -> "14050" 
-  "14055" -> "14062" 
-  "14062" -> "14143" 
-  "14081" -> "14080" 
-  "14081" -> "14094" 
-  "14088" -> "14080" 
-  "14097" -> "14143" 
-  "14056" -> "14055" 
-  "14082" -> "14081" 
-  "14082" -> "14085" 
-  "14085" -> "14081" 
-  "14090" -> "14088" 
-  "14105" -> "14112" 
-  "14105" -> "14133" 
-  "14128" -> "14135" 
-  "14134" -> "14143" 
-  "14057" -> "14059" 
-  "14059" -> "14056" 
-  "14091" -> "14090" 
+"14043" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2998</SUB>> ]
+"14061" [label = <(soa,soa(env))<SUB>2999</SUB>> ]
+"14064" [label = <(&lt;operator&gt;.assignment,array = DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;SetPrimitiveArrayRegion&quot;, &quot;set region of&quot;))<SUB>3000</SUB>> ]
+"14066" [label = <(DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;,DecodeAndCheckArrayType&lt;JArrayT, ElementT, ArtArrayT&gt;(\012        soa, java_array, &quot;SetPrimitiveArrayRegion&quot;, &quot;set region of&quot;))<SUB>3000</SUB>> ]
+"14072" [label = <(&lt;operator&gt;.notEquals,array != nullptr)<SUB>3002</SUB>> ]
+"14047" [label = <(UNLIKELY,UNLIKELY((java_array) == nullptr))<SUB>2998</SUB>> ]
+"14077" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0 || length &gt; array-&gt;GetLength() - start)<SUB>3003</SUB>> ]
+"14048" [label = <(&lt;operator&gt;.equals,(java_array) == nullptr)<SUB>2998</SUB>> ]
+"14052" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_array == null&quot;))<SUB>2998</SUB>> ]
+"14059" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))<SUB>2998</SUB>> ]
+"14078" [label = <(&lt;operator&gt;.logicalOr,start &lt; 0 || length &lt; 0)<SUB>3003</SUB>> ]
+"14085" [label = <(&lt;operator&gt;.greaterThan,length &gt; array-&gt;GetLength() - start)<SUB>3003</SUB>> ]
+"14094" [label = <(ThrowAIOOBE,ThrowAIOOBE(soa, array, start, length, &quot;dst&quot;))<SUB>3004</SUB>> ]
+"14053" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>2998</SUB>> ]
+"14079" [label = <(&lt;operator&gt;.lessThan,start &lt; 0)<SUB>3003</SUB>> ]
+"14082" [label = <(&lt;operator&gt;.lessThan,length &lt; 0)<SUB>3003</SUB>> ]
+"14087" [label = <(&lt;operator&gt;.subtraction,array-&gt;GetLength() - start)<SUB>3003</SUB>> ]
+"14102" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>3006</SUB>> ]
+"14125" [label = <(&lt;operator&gt;.assignment,* data = array-&gt;GetData())<SUB>3007</SUB>> ]
+"14131" [label = <(memcpy,memcpy(data + start, buf, length * sizeof(ElementT)))<SUB>3008</SUB>> ]
+"14054" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>2998</SUB>> ]
+"14056" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>2998</SUB>> ]
+"14088" [label = <(GetLength,array-&gt;GetLength())<SUB>3003</SUB>> ]
+"14127" [label = <(GetData,array-&gt;GetData())<SUB>3007</SUB>> ]
+"14132" [label = <(&lt;operator&gt;.addition,data + start)<SUB>3008</SUB>> ]
+"14136" [label = <(&lt;operator&gt;.multiplication,length * sizeof(ElementT))<SUB>3008</SUB>> ]
+"14089" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>3003</SUB>> ]
+"14128" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetData)<SUB>3007</SUB>> ]
+"14138" [label = <(&lt;operator&gt;.sizeOf,sizeof(ElementT))<SUB>3008</SUB>> ]
+"14091" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>3003</SUB>> ]
+"14107" [label = <(UNLIKELY,UNLIKELY((length) != 0 &amp;&amp; (buf) == nullptr))<SUB>3006</SUB>> ]
+"14130" [label = <(FIELD_IDENTIFIER,GetData,GetData)<SUB>3007</SUB>> ]
+"14108" [label = <(&lt;operator&gt;.logicalAnd,(length) != 0 &amp;&amp; (buf) == nullptr)<SUB>3006</SUB>> ]
+"14116" [label = <(CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;buf == null&quot;))<SUB>3006</SUB>> ]
+"14123" [label = <(RETURN,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf),CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))<SUB>3006</SUB>> ]
+"14109" [label = <(&lt;operator&gt;.notEquals,(length) != 0)<SUB>3006</SUB>> ]
+"14112" [label = <(&lt;operator&gt;.equals,(buf) == nullptr)<SUB>3006</SUB>> ]
+"14117" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>3006</SUB>> ]
+"14118" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>3006</SUB>> ]
+"14120" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>3006</SUB>> ]
+"14036" [label = <(METHOD,SetPrimitiveArrayRegion)<SUB>2996</SUB>> ]
+"14140" [label = <(METHOD_RETURN,void)<SUB>2996</SUB>> ]
+  "14043" -> "14048" 
+  "14043" -> "14061" 
+  "14061" -> "14066" 
+  "14064" -> "14072" 
+  "14066" -> "14064" 
+  "14072" -> "14140" 
+  "14072" -> "14079" 
+  "14047" -> "14054" 
+  "14047" -> "14061" 
+  "14077" -> "14094" 
+  "14077" -> "14102" 
+  "14048" -> "14047" 
+  "14052" -> "14059" 
+  "14059" -> "14140" 
+  "14078" -> "14077" 
+  "14078" -> "14091" 
+  "14085" -> "14077" 
+  "14094" -> "14140" 
+  "14053" -> "14052" 
+  "14079" -> "14078" 
+  "14079" -> "14082" 
+  "14082" -> "14078" 
+  "14087" -> "14085" 
+  "14102" -> "14109" 
+  "14102" -> "14130" 
+  "14125" -> "14132" 
+  "14131" -> "14140" 
+  "14054" -> "14056" 
+  "14056" -> "14053" 
+  "14088" -> "14087" 
+  "14127" -> "14125" 
+  "14132" -> "14138" 
+  "14136" -> "14131" 
+  "14089" -> "14088" 
+  "14128" -> "14127" 
+  "14138" -> "14136" 
+  "14091" -> "14089" 
+  "14107" -> "14118" 
+  "14107" -> "14130" 
   "14130" -> "14128" 
-  "14135" -> "14141" 
-  "14139" -> "14134" 
-  "14092" -> "14091" 
-  "14131" -> "14130" 
-  "14141" -> "14139" 
-  "14094" -> "14092" 
-  "14110" -> "14121" 
-  "14110" -> "14133" 
-  "14133" -> "14131" 
-  "14111" -> "14110" 
-  "14119" -> "14126" 
-  "14126" -> "14143" 
-  "14112" -> "14111" 
-  "14112" -> "14115" 
-  "14115" -> "14111" 
-  "14120" -> "14119" 
-  "14121" -> "14123" 
-  "14123" -> "14120" 
-  "14039" -> "14046" 
+  "14108" -> "14107" 
+  "14116" -> "14123" 
+  "14123" -> "14140" 
+  "14109" -> "14108" 
+  "14109" -> "14112" 
+  "14112" -> "14108" 
+  "14117" -> "14116" 
+  "14118" -> "14120" 
+  "14120" -> "14117" 
+  "14036" -> "14043" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/274-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/274-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/274-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/274-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,9 +1,9 @@
 digraph "GetJniNativeInterface" {  
-"14843" [label = <(RETURN,return &amp;gJniNativeInterface;,return &amp;gJniNativeInterface;)<SUB>3253</SUB>> ]
-"14844" [label = <(&lt;operator&gt;.addressOf,&amp;gJniNativeInterface)<SUB>3253</SUB>> ]
-"14841" [label = <(METHOD,GetJniNativeInterface)<SUB>3252</SUB>> ]
-"14846" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3252</SUB>> ]
-  "14843" -> "14846" 
-  "14844" -> "14843" 
-  "14841" -> "14844" 
+"14840" [label = <(RETURN,return &amp;gJniNativeInterface;,return &amp;gJniNativeInterface;)<SUB>3251</SUB>> ]
+"14841" [label = <(&lt;operator&gt;.addressOf,&amp;gJniNativeInterface)<SUB>3251</SUB>> ]
+"14838" [label = <(METHOD,GetJniNativeInterface)<SUB>3250</SUB>> ]
+"14843" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3250</SUB>> ]
+  "14840" -> "14843" 
+  "14841" -> "14840" 
+  "14838" -> "14841" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/275-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/275-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/275-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/275-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,5 +1,5 @@
 digraph "gJniSleepForeverStub" {  
-"14848" [label = <(METHOD,gJniSleepForeverStub)<SUB>3256</SUB>> ]
-"14850" [label = <(METHOD_RETURN,void)<SUB>3256</SUB>> ]
-  "14848" -> "14850" 
+"14845" [label = <(METHOD,gJniSleepForeverStub)<SUB>3254</SUB>> ]
+"14847" [label = <(METHOD_RETURN,void)<SUB>3254</SUB>> ]
+  "14845" -> "14847" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/276-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/276-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/276-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/276-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,13 +1,13 @@
 digraph "GetRuntimeShutdownNativeInterface" {  
-"15090" [label = <(RETURN,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);)<SUB>3493</SUB>> ]
-"15091" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub))<SUB>3493</SUB>> ]
-"15092" [label = <(UNKNOWN,JNINativeInterface*,JNINativeInterface*)<SUB>3493</SUB>> ]
-"15093" [label = <(&lt;operator&gt;.addressOf,&amp;gJniSleepForeverStub)<SUB>3493</SUB>> ]
-"15088" [label = <(METHOD,GetRuntimeShutdownNativeInterface)<SUB>3492</SUB>> ]
-"15095" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3492</SUB>> ]
-  "15090" -> "15095" 
-  "15091" -> "15090" 
-  "15092" -> "15093" 
-  "15093" -> "15091" 
-  "15088" -> "15092" 
+"15087" [label = <(RETURN,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);,return reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub);)<SUB>3491</SUB>> ]
+"15088" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNINativeInterface*&gt;(&amp;gJniSleepForeverStub))<SUB>3491</SUB>> ]
+"15089" [label = <(UNKNOWN,JNINativeInterface*,JNINativeInterface*)<SUB>3491</SUB>> ]
+"15090" [label = <(&lt;operator&gt;.addressOf,&amp;gJniSleepForeverStub)<SUB>3491</SUB>> ]
+"15085" [label = <(METHOD,GetRuntimeShutdownNativeInterface)<SUB>3490</SUB>> ]
+"15092" [label = <(METHOD_RETURN,JNINativeInterface)<SUB>3490</SUB>> ]
+  "15087" -> "15092" 
+  "15088" -> "15087" 
+  "15089" -> "15090" 
+  "15090" -> "15088" 
+  "15085" -> "15089" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/277-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/277-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/277-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/277-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,33 +1,33 @@
 digraph "JniInitializeNativeCallerCheck" {  
-"15099" [label = <(DCHECK,DCHECK(!CodeRangeCache::GetSingleton().HasCache()))<SUB>3498</SUB>> ]
-"15108" [label = <(BuildCache,CodeRangeCache::GetSingleton().BuildCache())<SUB>3499</SUB>> ]
-"15100" [label = <(&lt;operator&gt;.logicalNot,!CodeRangeCache::GetSingleton().HasCache())<SUB>3498</SUB>> ]
-"15109" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton().BuildCache)<SUB>3499</SUB>> ]
-"15101" [label = <(HasCache,CodeRangeCache::GetSingleton().HasCache())<SUB>3498</SUB>> ]
-"15110" [label = <(CodeRangeCache::GetSingleton,CodeRangeCache::GetSingleton())<SUB>3499</SUB>> ]
-"15114" [label = <(FIELD_IDENTIFIER,BuildCache,BuildCache)<SUB>3499</SUB>> ]
-"15102" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton().HasCache)<SUB>3498</SUB>> ]
-"15111" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton)<SUB>3499</SUB>> ]
-"15103" [label = <(CodeRangeCache::GetSingleton,CodeRangeCache::GetSingleton())<SUB>3498</SUB>> ]
-"15107" [label = <(FIELD_IDENTIFIER,HasCache,HasCache)<SUB>3498</SUB>> ]
-"15113" [label = <(FIELD_IDENTIFIER,GetSingleton,GetSingleton)<SUB>3499</SUB>> ]
-"15104" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton)<SUB>3498</SUB>> ]
-"15106" [label = <(FIELD_IDENTIFIER,GetSingleton,GetSingleton)<SUB>3498</SUB>> ]
-"15097" [label = <(METHOD,JniInitializeNativeCallerCheck)<SUB>3496</SUB>> ]
-"15115" [label = <(METHOD_RETURN,void)<SUB>3496</SUB>> ]
-  "15099" -> "15113" 
-  "15108" -> "15115" 
-  "15100" -> "15099" 
-  "15109" -> "15108" 
+"15096" [label = <(DCHECK,DCHECK(!CodeRangeCache::GetSingleton().HasCache()))<SUB>3496</SUB>> ]
+"15105" [label = <(BuildCache,CodeRangeCache::GetSingleton().BuildCache())<SUB>3497</SUB>> ]
+"15097" [label = <(&lt;operator&gt;.logicalNot,!CodeRangeCache::GetSingleton().HasCache())<SUB>3496</SUB>> ]
+"15106" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton().BuildCache)<SUB>3497</SUB>> ]
+"15098" [label = <(HasCache,CodeRangeCache::GetSingleton().HasCache())<SUB>3496</SUB>> ]
+"15107" [label = <(CodeRangeCache::GetSingleton,CodeRangeCache::GetSingleton())<SUB>3497</SUB>> ]
+"15111" [label = <(FIELD_IDENTIFIER,BuildCache,BuildCache)<SUB>3497</SUB>> ]
+"15099" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton().HasCache)<SUB>3496</SUB>> ]
+"15108" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton)<SUB>3497</SUB>> ]
+"15100" [label = <(CodeRangeCache::GetSingleton,CodeRangeCache::GetSingleton())<SUB>3496</SUB>> ]
+"15104" [label = <(FIELD_IDENTIFIER,HasCache,HasCache)<SUB>3496</SUB>> ]
+"15110" [label = <(FIELD_IDENTIFIER,GetSingleton,GetSingleton)<SUB>3497</SUB>> ]
+"15101" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton)<SUB>3496</SUB>> ]
+"15103" [label = <(FIELD_IDENTIFIER,GetSingleton,GetSingleton)<SUB>3496</SUB>> ]
+"15094" [label = <(METHOD,JniInitializeNativeCallerCheck)<SUB>3494</SUB>> ]
+"15112" [label = <(METHOD_RETURN,void)<SUB>3494</SUB>> ]
+  "15096" -> "15110" 
+  "15105" -> "15112" 
+  "15097" -> "15096" 
+  "15106" -> "15105" 
+  "15098" -> "15097" 
+  "15107" -> "15111" 
+  "15111" -> "15106" 
+  "15099" -> "15098" 
+  "15108" -> "15107" 
+  "15100" -> "15104" 
+  "15104" -> "15099" 
+  "15110" -> "15108" 
   "15101" -> "15100" 
-  "15110" -> "15114" 
-  "15114" -> "15109" 
-  "15102" -> "15101" 
-  "15111" -> "15110" 
-  "15103" -> "15107" 
-  "15107" -> "15102" 
-  "15113" -> "15111" 
-  "15104" -> "15103" 
-  "15106" -> "15104" 
-  "15097" -> "15106" 
+  "15103" -> "15101" 
+  "15094" -> "15103" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/278-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/278-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/278-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/278-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,17 +1,17 @@
 digraph "JniShutdownNativeCallerCheck" {  
-"15119" [label = <(DropCache,CodeRangeCache::GetSingleton().DropCache())<SUB>3503</SUB>> ]
-"15120" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton().DropCache)<SUB>3503</SUB>> ]
-"15121" [label = <(CodeRangeCache::GetSingleton,CodeRangeCache::GetSingleton())<SUB>3503</SUB>> ]
-"15125" [label = <(FIELD_IDENTIFIER,DropCache,DropCache)<SUB>3503</SUB>> ]
-"15122" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton)<SUB>3503</SUB>> ]
-"15124" [label = <(FIELD_IDENTIFIER,GetSingleton,GetSingleton)<SUB>3503</SUB>> ]
-"15117" [label = <(METHOD,JniShutdownNativeCallerCheck)<SUB>3502</SUB>> ]
-"15126" [label = <(METHOD_RETURN,void)<SUB>3502</SUB>> ]
-  "15119" -> "15126" 
-  "15120" -> "15119" 
-  "15121" -> "15125" 
-  "15125" -> "15120" 
-  "15122" -> "15121" 
-  "15124" -> "15122" 
-  "15117" -> "15124" 
+"15116" [label = <(DropCache,CodeRangeCache::GetSingleton().DropCache())<SUB>3501</SUB>> ]
+"15117" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton().DropCache)<SUB>3501</SUB>> ]
+"15118" [label = <(CodeRangeCache::GetSingleton,CodeRangeCache::GetSingleton())<SUB>3501</SUB>> ]
+"15122" [label = <(FIELD_IDENTIFIER,DropCache,DropCache)<SUB>3501</SUB>> ]
+"15119" [label = <(&lt;operator&gt;.fieldAccess,CodeRangeCache::GetSingleton)<SUB>3501</SUB>> ]
+"15121" [label = <(FIELD_IDENTIFIER,GetSingleton,GetSingleton)<SUB>3501</SUB>> ]
+"15114" [label = <(METHOD,JniShutdownNativeCallerCheck)<SUB>3500</SUB>> ]
+"15123" [label = <(METHOD_RETURN,void)<SUB>3500</SUB>> ]
+  "15116" -> "15123" 
+  "15117" -> "15116" 
+  "15118" -> "15122" 
+  "15122" -> "15117" 
+  "15119" -> "15118" 
+  "15121" -> "15119" 
+  "15114" -> "15121" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/279-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/279-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/279-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/279-cfg.dot	2023-06-07 19:34:55.037387772 +0330
@@ -1,39 +1,39 @@
 digraph "operator &lt;&lt;" {  
-"15138" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIInvalidRefType&quot;)<SUB>3511</SUB>> ]
-"15141" [label = <(RETURN,return os;,return os;)<SUB>3512</SUB>> ]
-"15145" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNILocalRefType&quot;)<SUB>3514</SUB>> ]
-"15148" [label = <(RETURN,return os;,return os;)<SUB>3515</SUB>> ]
-"15152" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIGlobalRefType&quot;)<SUB>3517</SUB>> ]
-"15155" [label = <(RETURN,return os;,return os;)<SUB>3518</SUB>> ]
-"15159" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIWeakGlobalRefType&quot;)<SUB>3520</SUB>> ]
-"15162" [label = <(RETURN,return os;,return os;)<SUB>3521</SUB>> ]
-"15165" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs) &lt;&lt; &quot;]&quot;)<SUB>3523</SUB>> ]
-"15175" [label = <(UNREACHABLE,UNREACHABLE())<SUB>3524</SUB>> ]
-"15166" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs))<SUB>3523</SUB>> ]
-"15167" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot;)<SUB>3523</SUB>> ]
-"15171" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(rhs))<SUB>3523</SUB>> ]
-"15168" [label = <(LOG,LOG(FATAL))<SUB>3523</SUB>> ]
-"15172" [label = <(UNKNOWN,int,int)<SUB>3523</SUB>> ]
-"15129" [label = <(METHOD,operator &lt;&lt;)<SUB>3508</SUB>> ]
-"15176" [label = <(METHOD_RETURN,ostream)<SUB>3508</SUB>> ]
-  "15138" -> "15141" 
-  "15141" -> "15176" 
-  "15145" -> "15148" 
-  "15148" -> "15176" 
-  "15152" -> "15155" 
-  "15155" -> "15176" 
-  "15159" -> "15162" 
-  "15162" -> "15176" 
-  "15165" -> "15175" 
-  "15175" -> "15176" 
-  "15166" -> "15165" 
-  "15167" -> "15172" 
-  "15171" -> "15166" 
-  "15168" -> "15167" 
-  "15172" -> "15171" 
-  "15129" -> "15138" 
-  "15129" -> "15145" 
-  "15129" -> "15152" 
-  "15129" -> "15159" 
-  "15129" -> "15168" 
+"15135" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIInvalidRefType&quot;)<SUB>3509</SUB>> ]
+"15138" [label = <(RETURN,return os;,return os;)<SUB>3510</SUB>> ]
+"15142" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNILocalRefType&quot;)<SUB>3512</SUB>> ]
+"15145" [label = <(RETURN,return os;,return os;)<SUB>3513</SUB>> ]
+"15149" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIGlobalRefType&quot;)<SUB>3515</SUB>> ]
+"15152" [label = <(RETURN,return os;,return os;)<SUB>3516</SUB>> ]
+"15156" [label = <(&lt;operator&gt;.shiftLeft,os &lt;&lt; &quot;JNIWeakGlobalRefType&quot;)<SUB>3518</SUB>> ]
+"15159" [label = <(RETURN,return os;,return os;)<SUB>3519</SUB>> ]
+"15162" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs) &lt;&lt; &quot;]&quot;)<SUB>3521</SUB>> ]
+"15172" [label = <(UNREACHABLE,UNREACHABLE())<SUB>3522</SUB>> ]
+"15163" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot; &lt;&lt; static_cast&lt;int&gt;(rhs))<SUB>3521</SUB>> ]
+"15164" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;jobjectRefType[&quot;)<SUB>3521</SUB>> ]
+"15168" [label = <(&lt;operator&gt;.cast,static_cast&lt;int&gt;(rhs))<SUB>3521</SUB>> ]
+"15165" [label = <(LOG,LOG(FATAL))<SUB>3521</SUB>> ]
+"15169" [label = <(UNKNOWN,int,int)<SUB>3521</SUB>> ]
+"15126" [label = <(METHOD,operator &lt;&lt;)<SUB>3506</SUB>> ]
+"15173" [label = <(METHOD_RETURN,ostream)<SUB>3506</SUB>> ]
+  "15135" -> "15138" 
+  "15138" -> "15173" 
+  "15142" -> "15145" 
+  "15145" -> "15173" 
+  "15149" -> "15152" 
+  "15152" -> "15173" 
+  "15156" -> "15159" 
+  "15159" -> "15173" 
+  "15162" -> "15172" 
+  "15172" -> "15173" 
+  "15163" -> "15162" 
+  "15164" -> "15169" 
+  "15168" -> "15163" 
+  "15165" -> "15164" 
+  "15169" -> "15168" 
+  "15126" -> "15135" 
+  "15126" -> "15142" 
+  "15126" -> "15149" 
+  "15126" -> "15156" 
+  "15126" -> "15165" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/28-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/28-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/28-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/28-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureInitialized" {  
-"717" [label = <(METHOD,EnsureInitialized)<SUB>496</SUB>> ]
-"721" [label = <(METHOD_RETURN,ANY)<SUB>496</SUB>> ]
+"717" [label = <(METHOD,EnsureInitialized)<SUB>495</SUB>> ]
+"721" [label = <(METHOD_RETURN,ANY)<SUB>495</SUB>> ]
   "717" -> "721" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/280-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/280-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/280-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/280-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "va_end" {  
-"15436" [label = <(METHOD,va_end)> ]
-"15439" [label = <(METHOD_RETURN,ANY)> ]
-  "15436" -> "15439" 
+"15433" [label = <(METHOD,va_end)> ]
+"15436" [label = <(METHOD_RETURN,ANY)> ]
+  "15433" -> "15436" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/281-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/281-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/281-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/281-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirection" {  
-"15440" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
-"15443" [label = <(METHOD_RETURN,ANY)> ]
-  "15440" -> "15443" 
+"15437" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
+"15440" [label = <(METHOD_RETURN,ANY)> ]
+  "15437" -> "15440" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/282-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/282-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/282-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/282-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignment" {  
-"15444" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
-"15448" [label = <(METHOD_RETURN,ANY)> ]
-  "15444" -> "15448" 
+"15441" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
+"15445" [label = <(METHOD_RETURN,ANY)> ]
+  "15441" -> "15445" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/283-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/283-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/283-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/283-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK_LE" {  
-"15449" [label = <(METHOD,DCHECK_LE)> ]
-"15453" [label = <(METHOD_RETURN,ANY)> ]
-  "15449" -> "15453" 
+"15446" [label = <(METHOD,DCHECK_LE)> ]
+"15450" [label = <(METHOD_RETURN,ANY)> ]
+  "15446" -> "15450" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/284-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/284-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/284-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/284-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "strlen" {  
-"15454" [label = <(METHOD,strlen)> ]
-"15457" [label = <(METHOD_RETURN,ANY)> ]
-  "15454" -> "15457" 
+"15451" [label = <(METHOD,strlen)> ]
+"15454" [label = <(METHOD_RETURN,ANY)> ]
+  "15451" -> "15454" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/285-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/285-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/285-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/285-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addition" {  
-"15458" [label = <(METHOD,&lt;operator&gt;.addition)> ]
-"15462" [label = <(METHOD_RETURN,ANY)> ]
-  "15458" -> "15462" 
+"15455" [label = <(METHOD,&lt;operator&gt;.addition)> ]
+"15459" [label = <(METHOD_RETURN,ANY)> ]
+  "15455" -> "15459" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/286-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/286-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/286-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/286-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.notEquals" {  
-"15463" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
-"15467" [label = <(METHOD_RETURN,ANY)> ]
-  "15463" -> "15467" 
+"15460" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
+"15464" [label = <(METHOD_RETURN,ANY)> ]
+  "15460" -> "15464" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/287-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/287-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/287-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/287-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "LIKELY" {  
-"15468" [label = <(METHOD,LIKELY)> ]
-"15471" [label = <(METHOD_RETURN,ANY)> ]
-  "15468" -> "15471" 
+"15465" [label = <(METHOD,LIKELY)> ]
+"15468" [label = <(METHOD_RETURN,ANY)> ]
+  "15465" -> "15468" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/288-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/288-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/288-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/288-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.equals" {  
-"15472" [label = <(METHOD,&lt;operator&gt;.equals)> ]
-"15476" [label = <(METHOD_RETURN,ANY)> ]
-  "15472" -> "15476" 
+"15469" [label = <(METHOD,&lt;operator&gt;.equals)> ]
+"15473" [label = <(METHOD_RETURN,ANY)> ]
+  "15469" -> "15473" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/289-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/289-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/289-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/289-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.and" {  
-"15477" [label = <(METHOD,&lt;operator&gt;.and)> ]
-"15481" [label = <(METHOD_RETURN,ANY)> ]
-  "15477" -> "15481" 
+"15474" [label = <(METHOD,&lt;operator&gt;.and)> ]
+"15478" [label = <(METHOD_RETURN,ANY)> ]
+  "15474" -> "15478" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/29-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/29-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/29-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/29-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,5 +1,5 @@
 digraph "hs" {  
-"725" [label = <(METHOD,hs)<SUB>501</SUB>> ]
-"728" [label = <(METHOD_RETURN,StackHandleScope&lt;1&gt;)<SUB>501</SUB>> ]
+"725" [label = <(METHOD,hs)<SUB>500</SUB>> ]
+"728" [label = <(METHOD_RETURN,StackHandleScope&lt;1&gt;)<SUB>500</SUB>> ]
   "725" -> "728" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/290-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/290-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/290-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/290-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "good" {  
-"15482" [label = <(METHOD,good)> ]
-"15486" [label = <(METHOD_RETURN,ANY)> ]
-  "15482" -> "15486" 
+"15479" [label = <(METHOD,good)> ]
+"15483" [label = <(METHOD_RETURN,ANY)> ]
+  "15479" -> "15483" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/291-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/291-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/291-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/291-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentPlus" {  
-"15487" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
-"15491" [label = <(METHOD_RETURN,ANY)> ]
-  "15487" -> "15491" 
+"15484" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
+"15488" [label = <(METHOD_RETURN,ANY)> ]
+  "15484" -> "15488" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/292-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/292-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/292-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/292-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessThan" {  
-"15492" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
-"15496" [label = <(METHOD_RETURN,ANY)> ]
-  "15492" -> "15496" 
+"15489" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
+"15493" [label = <(METHOD_RETURN,ANY)> ]
+  "15489" -> "15493" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/293-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/293-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/293-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/293-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.cast" {  
-"15497" [label = <(METHOD,&lt;operator&gt;.cast)> ]
-"15501" [label = <(METHOD_RETURN,ANY)> ]
-  "15497" -> "15501" 
+"15494" [label = <(METHOD,&lt;operator&gt;.cast)> ]
+"15498" [label = <(METHOD_RETURN,ANY)> ]
+  "15494" -> "15498" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/294-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/294-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/294-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/294-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.subtraction" {  
-"15502" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
-"15506" [label = <(METHOD_RETURN,ANY)> ]
-  "15502" -> "15506" 
+"15499" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
+"15503" [label = <(METHOD_RETURN,ANY)> ]
+  "15499" -> "15503" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/295-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/295-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/295-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/295-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.conditional" {  
-"15507" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
-"15512" [label = <(METHOD_RETURN,ANY)> ]
-  "15507" -> "15512" 
+"15504" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
+"15509" [label = <(METHOD_RETURN,ANY)> ]
+  "15504" -> "15509" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/296-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/296-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/296-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/296-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "bad" {  
-"15513" [label = <(METHOD,bad)> ]
-"15515" [label = <(METHOD_RETURN,ANY)> ]
-  "15513" -> "15515" 
+"15510" [label = <(METHOD,bad)> ]
+"15512" [label = <(METHOD_RETURN,ANY)> ]
+  "15510" -> "15512" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/297-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/297-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/297-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/297-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalAnd" {  
-"15516" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
-"15520" [label = <(METHOD_RETURN,ANY)> ]
-  "15516" -> "15520" 
+"15513" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
+"15517" [label = <(METHOD_RETURN,ANY)> ]
+  "15513" -> "15517" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/298-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/298-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/298-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/298-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.fieldAccess" {  
-"15521" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
-"15525" [label = <(METHOD_RETURN,ANY)> ]
-  "15521" -> "15525" 
+"15518" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
+"15522" [label = <(METHOD_RETURN,ANY)> ]
+  "15518" -> "15522" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/299-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/299-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/299-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/299-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "is_ascii" {  
-"15526" [label = <(METHOD,is_ascii)> ]
-"15528" [label = <(METHOD_RETURN,ANY)> ]
-  "15526" -> "15528" 
+"15523" [label = <(METHOD,is_ascii)> ]
+"15525" [label = <(METHOD_RETURN,ANY)> ]
+  "15523" -> "15525" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/3-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/3-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/3-cfg.dot	2023-06-07 19:34:48.257388404 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/3-cfg.dot	2023-06-07 19:34:54.857387788 +0330
@@ -1,635 +1,635 @@
 digraph "&lt;global&gt;" {  
-"602" [label = <(UNKNOWN,),))<SUB>394</SUB>> ]
-"603" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>395</SUB>> ]
-"605" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>397</SUB>> ]
-"614" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>398</SUB>> ]
-"615" [label = <(UNKNOWN,},})<SUB>417</SUB>> ]
-"622" [label = <(UNKNOWN,),))<SUB>419</SUB>> ]
-"623" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();)<SUB>420</SUB>> ]
-"624" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj).Ptr(),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj).Ptr(),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 })<SUB>422</SUB>> ]
-"625" [label = <(UNKNOWN,},})<SUB>440</SUB>> ]
-"701" [label = <(UNKNOWN,),))<SUB>470</SUB>> ]
-"702" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;)<SUB>471</SUB>> ]
-"703" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);)<SUB>473</SUB>> ]
-"704" [label = <(UNKNOWN,},})<SUB>479</SUB>> ]
-"713" [label = <(UNKNOWN,),))<SUB>484</SUB>> ]
-"714" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;)<SUB>485</SUB>> ]
-"715" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);)<SUB>490</SUB>> ]
-"716" [label = <(UNKNOWN,},})<SUB>494</SUB>> ]
-"723" [label = <(UNKNOWN,),))<SUB>496</SUB>> ]
-"724" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 },REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 })<SUB>497</SUB>> ]
-"731" [label = <(h_klass,h_klass(hs.NewHandle(klass)))<SUB>502</SUB>> ]
-"737" [label = <(UNKNOWN,if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 },if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 })<SUB>503</SUB>> ]
-"738" [label = <(UNKNOWN,return h_klass.Get();,return h_klass.Get();)<SUB>506</SUB>> ]
-"739" [label = <(UNKNOWN,},})<SUB>507</SUB>> ]
-"749" [label = <(UNKNOWN,),))<SUB>510</SUB>> ]
-"750" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));)<SUB>511</SUB>> ]
-"751" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>513</SUB>> ]
-"753" [label = <(&lt;operator&gt;.assignment,* method = nullptr)<SUB>516</SUB>> ]
-"757" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>517</SUB>> ]
-"769" [label = <(UNKNOWN,if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 },if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 })<SUB>518</SUB>> ]
-"770" [label = <(UNKNOWN,else {\012    method = c-&gt;FindClassMethod(name, sig, pointer_size);\012 },else {\012    method = c-&gt;FindClassMethod(name, sig, pointer_size);\012 })<SUB>520</SUB>> ]
-"771" [label = <(UNKNOWN,if (method != nullptr &amp;&amp; ShouldDenyAccessToMember(method, soa.Self())) {\012    method = nullptr;\012 },if (method != nullptr &amp;&amp; ShouldDenyAccessToMember(method, soa.Self())) {\012    method = nullptr;\012 })<SUB>523</SUB>> ]
-"772" [label = <(UNKNOWN,if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 },if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 })<SUB>526</SUB>> ]
-"773" [label = <(UNKNOWN,return jni::EncodeArtMethod(method);,return jni::EncodeArtMethod(method);)<SUB>530</SUB>> ]
-"774" [label = <(UNKNOWN,},})<SUB>531</SUB>> ]
-"780" [label = <(UNKNOWN,),))<SUB>533</SUB>> ]
-"781" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);)<SUB>534</SUB>> ]
-"782" [label = <(UNKNOWN,if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 },if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 })<SUB>537</SUB>> ]
-"783" [label = <(UNKNOWN,if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 },if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 })<SUB>541</SUB>> ]
-"785" [label = <(&lt;operator&gt;.assignment,class_loader =\012      soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>545</SUB>> ]
-"802" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 return class_loader;\012 },if (class_loader != nullptr) {\012 return class_loader;\012 })<SUB>547</SUB>> ]
-"803" [label = <(UNKNOWN,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());)<SUB>551</SUB>> ]
-"804" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 },if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 })<SUB>552</SUB>> ]
-"805" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>560</SUB>> ]
-"806" [label = <(UNKNOWN,},})<SUB>561</SUB>> ]
-"816" [label = <(UNKNOWN,),))<SUB>564</SUB>> ]
-"817" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());)<SUB>565</SUB>> ]
-"819" [label = <(c,c(\012      hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))))<SUB>567</SUB>> ]
-"838" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>569</SUB>> ]
-"840" [label = <(&lt;operator&gt;.assignment,* field = nullptr)<SUB>572</SUB>> ]
-"845" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>574</SUB>> ]
-"854" [label = <(UNKNOWN,if (UNLIKELY(sig[0] == '\0')) {\012    DCHECK(field == nullptr);\012 },if (UNLIKELY(sig[0] == '\0')) {\012    DCHECK(field == nullptr);\012 })<SUB>575</SUB>> ]
-"855" [label = <(UNKNOWN,else if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 },else if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 })<SUB>577</SUB>> ]
-"856" [label = <(UNKNOWN,else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 },else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 })<SUB>580</SUB>> ]
-"857" [label = <(UNKNOWN,if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(sig[0] == '\0' || soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012 if (cause != nullptr) {\012      soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 }\012 return nullptr;\012 },if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(sig[0] == '\0' || soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012 if (cause != nullptr) {\012      soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 }\012 return nullptr;\012 })<SUB>583</SUB>> ]
-"859" [label = <(UNKNOWN,if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 },if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>600</SUB>> ]
-"860" [label = <(UNKNOWN,else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 },else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>603</SUB>> ]
-"861" [label = <(UNKNOWN,if (field != nullptr &amp;&amp; ShouldDenyAccessToMember(field, soa.Self())) {\012    field = nullptr;\012 },if (field != nullptr &amp;&amp; ShouldDenyAccessToMember(field, soa.Self())) {\012    field = nullptr;\012 })<SUB>606</SUB>> ]
-"862" [label = <(UNKNOWN,if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 },if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 })<SUB>609</SUB>> ]
-"863" [label = <(UNKNOWN,return jni::EncodeArtField(field);,return jni::EncodeArtField(field);)<SUB>615</SUB>> ]
-"864" [label = <(UNKNOWN,},})<SUB>616</SUB>> ]
-"874" [label = <(UNKNOWN,),))<SUB>622</SUB>> ]
-"875" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());)<SUB>623</SUB>> ]
-"876" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());)<SUB>625</SUB>> ]
-"877" [label = <(UNKNOWN,},})<SUB>628</SUB>> ]
-"886" [label = <(UNKNOWN,),))<SUB>631</SUB>> ]
-"887" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);)<SUB>632</SUB>> ]
-"888" [label = <(UNKNOWN,},})<SUB>636</SUB>> ]
-"897" [label = <(UNKNOWN,),))<SUB>638</SUB>> ]
-"898" [label = <(UNKNOWN,REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012},REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012})<SUB>639</SUB>> ]
-"918" [label = <(UNKNOWN,),))<SUB>711</SUB>> ]
-"919" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();)<SUB>712</SUB>> ]
-"920" [label = <(UNKNOWN,for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 },for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 })<SUB>714</SUB>> ]
-"921" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>719</SUB>> ]
-"922" [label = <(UNKNOWN,},})<SUB>720</SUB>> ]
-"13665" [label = <(UNKNOWN,},})<SUB>2864</SUB>> ]
-"13721" [label = <(UNKNOWN,),))<SUB>2881</SUB>> ]
-"13722" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);)<SUB>2882</SUB>> ]
-"13724" [label = <(&lt;operator&gt;.assignment,expected_array_class = GetClassRoot&lt;ArtArrayT&gt;())<SUB>2884</SUB>> ]
-"13727" [label = <(UNKNOWN,if (UNLIKELY(expected_array_class != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012                              expected_array_class-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 },if (UNLIKELY(expected_array_class != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012                              expected_array_class-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 })<SUB>2885</SUB>> ]
-"13728" [label = <(UNKNOWN,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());)<SUB>2894</SUB>> ]
-"13729" [label = <(UNKNOWN,return array;,return array;)<SUB>2895</SUB>> ]
-"13730" [label = <(UNKNOWN,},})<SUB>2896</SUB>> ]
-"13903" [label = <(UNKNOWN,),))<SUB>2941</SUB>> ]
-"13904" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);)<SUB>2942</SUB>> ]
-"13906" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2944</SUB>> ]
-"13916" [label = <(&lt;operator&gt;.assignment,is_copy = array_data != elements)<SUB>2945</SUB>> ]
-"13922" [label = <(&lt;operator&gt;.assignment,bytes = array-&gt;GetLength() * component_size)<SUB>2946</SUB>> ]
-"13930" [label = <(UNKNOWN,if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 },if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 })<SUB>2947</SUB>> ]
-"13931" [label = <(UNKNOWN,if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 },if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 })<SUB>2965</SUB>> ]
-"13932" [label = <(UNKNOWN,},})<SUB>2977</SUB>> ]
-"14145" [label = <(UNKNOWN,};,};)<SUB>3014</SUB>> ]
-"14147" [label = <(&lt;operator&gt;.assignment,gJniNativeInterface = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>3016</SUB>> ]
-"14852" [label = <(&lt;operator&gt;.assignment,(*gJniSleepForeverStub[])() = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3256</SUB>> ]
-"15128" [label = <(UNKNOWN,},})<SUB>3506</SUB>> ]
-"571" [label = <(&lt;operator&gt;.assignment,kWarnJniAbort = false)<SUB>343</SUB>> ]
-"574" [label = <(UNKNOWN,template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldDenyAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (IsWhitelistedNativeCaller()) {\012 return false;\012 }\012 return hiddenapi::ShouldDenyAccessToMember(\012      member,\012 [&amp;]() REQUIRES_SHARED(Locks::mutator_lock_) {\012 // Construct AccessContext from the first calling class on stack.\012 // If the calling class cannot be determined, e.g. unattached threads,\012 // we conservatively assume the caller is trusted.\012 ObjPtr&lt;mirror::Class&gt; caller = GetCallingClass(self, /* num_frames */ 1);\012 return caller.IsNull() ? hiddenapi::AccessContext(/* is_trusted= */ true)\012 : hiddenapi::AccessContext(caller);\012 },\012      hiddenapi::AccessMethod::kJNI);\012},template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldDenyAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (IsWhitelistedNativeCaller()) {\012 return false;\012 }\012 return hiddenapi::ShouldDenyAccessToMember(\012      member,\012 [&amp;]() REQUIRES_SHARED(Locks::mutator_lock_) {\012 // Construct AccessContext from the first calling class on stack.\012 // If the calling class cannot be determined, e.g. unattached threads,\012 // we conservatively assume the caller is trusted.\012 ObjPtr&lt;mirror::Class&gt; caller = GetCallingClass(self, /* num_frames */ 1);\012 return caller.IsNull() ? hiddenapi::AccessContext(/* is_trusted= */ true)\012 : hiddenapi::AccessContext(caller);\012 },\012      hiddenapi::AccessMethod::kJNI);\012})<SUB>345</SUB>> ]
-"582" [label = <(UNKNOWN,),))<SUB>367</SUB>> ]
-"583" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>368</SUB>> ]
-"585" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>370</SUB>> ]
-"594" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>371</SUB>> ]
-"607" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>397</SUB>> ]
-"732" [label = <(NewHandle,hs.NewHandle(klass))<SUB>502</SUB>> ]
-"759" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>517</SUB>> ]
-"787" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>546</SUB>> ]
-"820" [label = <(NewHandle,hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class))))<SUB>568</SUB>> ]
-"847" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>574</SUB>> ]
-"13726" [label = <(GetClassRoot&lt;ArtArrayT&gt;,GetClassRoot&lt;ArtArrayT&gt;())<SUB>2884</SUB>> ]
-"13908" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2944</SUB>> ]
-"13918" [label = <(&lt;operator&gt;.notEquals,array_data != elements)<SUB>2945</SUB>> ]
-"13924" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2946</SUB>> ]
-"14149" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>3016</SUB>> ]
-"14854" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3256</SUB>> ]
-"49" [label = <(&lt;operator&gt;.assignment,kBadUtf8ReplacementChar[] = &quot;?&quot;)<SUB>89</SUB>> ]
-"228" [label = <(&lt;operator&gt;.assignment,kMaxReturnAddressDepth = 4)<SUB>165</SUB>> ]
-"587" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>370</SUB>> ]
-"608" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>397</SUB>> ]
-"733" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>502</SUB>> ]
-"760" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>517</SUB>> ]
-"788" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ClassLoader)<SUB>546</SUB>> ]
-"795" [label = <(GetSystemClassLoader,Runtime::Current()-&gt;GetSystemClassLoader())<SUB>546</SUB>> ]
-"821" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>568</SUB>> ]
-"824" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>568</SUB>> ]
-"848" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>574</SUB>> ]
-"13909" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2944</SUB>> ]
-"13925" [label = <(GetLength,array-&gt;GetLength())<SUB>2946</SUB>> ]
-"14154" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetVersion)<SUB>3021</SUB>> ]
-"14157" [label = <(&lt;operator&gt;.fieldAccess,JNI::DefineClass)<SUB>3022</SUB>> ]
-"14160" [label = <(&lt;operator&gt;.fieldAccess,JNI::FindClass)<SUB>3023</SUB>> ]
-"14163" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedMethod)<SUB>3024</SUB>> ]
-"14166" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedField)<SUB>3025</SUB>> ]
-"14169" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedMethod)<SUB>3026</SUB>> ]
-"14172" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetSuperclass)<SUB>3027</SUB>> ]
-"14175" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsAssignableFrom)<SUB>3028</SUB>> ]
-"14178" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedField)<SUB>3029</SUB>> ]
-"14181" [label = <(&lt;operator&gt;.fieldAccess,JNI::Throw)<SUB>3030</SUB>> ]
-"14184" [label = <(&lt;operator&gt;.fieldAccess,JNI::ThrowNew)<SUB>3031</SUB>> ]
-"14187" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionOccurred)<SUB>3032</SUB>> ]
-"14190" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionDescribe)<SUB>3033</SUB>> ]
-"14193" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionClear)<SUB>3034</SUB>> ]
-"14196" [label = <(&lt;operator&gt;.fieldAccess,JNI::FatalError)<SUB>3035</SUB>> ]
-"14199" [label = <(&lt;operator&gt;.fieldAccess,JNI::PushLocalFrame)<SUB>3036</SUB>> ]
-"14202" [label = <(&lt;operator&gt;.fieldAccess,JNI::PopLocalFrame)<SUB>3037</SUB>> ]
-"14205" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewGlobalRef)<SUB>3038</SUB>> ]
-"14208" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteGlobalRef)<SUB>3039</SUB>> ]
-"14211" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteLocalRef)<SUB>3040</SUB>> ]
-"14214" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsSameObject)<SUB>3041</SUB>> ]
-"14217" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLocalRef)<SUB>3042</SUB>> ]
-"14220" [label = <(&lt;operator&gt;.fieldAccess,JNI::EnsureLocalCapacity)<SUB>3043</SUB>> ]
-"14223" [label = <(&lt;operator&gt;.fieldAccess,JNI::AllocObject)<SUB>3044</SUB>> ]
-"14226" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObject)<SUB>3045</SUB>> ]
-"14229" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectV)<SUB>3046</SUB>> ]
-"14232" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectA)<SUB>3047</SUB>> ]
-"14235" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectClass)<SUB>3048</SUB>> ]
-"14238" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsInstanceOf)<SUB>3049</SUB>> ]
-"14241" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetMethodID)<SUB>3050</SUB>> ]
-"14244" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethod)<SUB>3051</SUB>> ]
-"14247" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodV)<SUB>3052</SUB>> ]
-"14250" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodA)<SUB>3053</SUB>> ]
-"14253" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethod)<SUB>3054</SUB>> ]
-"14256" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodV)<SUB>3055</SUB>> ]
-"14259" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodA)<SUB>3056</SUB>> ]
-"14262" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethod)<SUB>3057</SUB>> ]
-"14265" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodV)<SUB>3058</SUB>> ]
-"14268" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodA)<SUB>3059</SUB>> ]
-"14271" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethod)<SUB>3060</SUB>> ]
-"14274" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodV)<SUB>3061</SUB>> ]
-"14277" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodA)<SUB>3062</SUB>> ]
-"14280" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethod)<SUB>3063</SUB>> ]
-"14283" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodV)<SUB>3064</SUB>> ]
-"14286" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodA)<SUB>3065</SUB>> ]
-"14289" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethod)<SUB>3066</SUB>> ]
-"14292" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodV)<SUB>3067</SUB>> ]
-"14295" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodA)<SUB>3068</SUB>> ]
-"14298" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethod)<SUB>3069</SUB>> ]
-"14301" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodV)<SUB>3070</SUB>> ]
-"14304" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodA)<SUB>3071</SUB>> ]
-"14307" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethod)<SUB>3072</SUB>> ]
-"14310" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodV)<SUB>3073</SUB>> ]
-"14313" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodA)<SUB>3074</SUB>> ]
-"14316" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethod)<SUB>3075</SUB>> ]
-"14319" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodV)<SUB>3076</SUB>> ]
-"14322" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodA)<SUB>3077</SUB>> ]
-"14325" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethod)<SUB>3078</SUB>> ]
-"14328" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodV)<SUB>3079</SUB>> ]
-"14331" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodA)<SUB>3080</SUB>> ]
-"14334" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethod)<SUB>3081</SUB>> ]
-"14337" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodV)<SUB>3082</SUB>> ]
-"14340" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodA)<SUB>3083</SUB>> ]
-"14343" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethod)<SUB>3084</SUB>> ]
-"14346" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodV)<SUB>3085</SUB>> ]
-"14349" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodA)<SUB>3086</SUB>> ]
-"14352" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethod)<SUB>3087</SUB>> ]
-"14355" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodV)<SUB>3088</SUB>> ]
-"14358" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodA)<SUB>3089</SUB>> ]
-"14361" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethod)<SUB>3090</SUB>> ]
-"14364" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodV)<SUB>3091</SUB>> ]
-"14367" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodA)<SUB>3092</SUB>> ]
-"14370" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethod)<SUB>3093</SUB>> ]
-"14373" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodV)<SUB>3094</SUB>> ]
-"14376" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodA)<SUB>3095</SUB>> ]
-"14379" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethod)<SUB>3096</SUB>> ]
-"14382" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodV)<SUB>3097</SUB>> ]
-"14385" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodA)<SUB>3098</SUB>> ]
-"14388" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethod)<SUB>3099</SUB>> ]
-"14391" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodV)<SUB>3100</SUB>> ]
-"14394" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodA)<SUB>3101</SUB>> ]
-"14397" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethod)<SUB>3102</SUB>> ]
-"14400" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodV)<SUB>3103</SUB>> ]
-"14403" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodA)<SUB>3104</SUB>> ]
-"14406" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethod)<SUB>3105</SUB>> ]
-"14409" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodV)<SUB>3106</SUB>> ]
-"14412" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodA)<SUB>3107</SUB>> ]
-"14415" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethod)<SUB>3108</SUB>> ]
-"14418" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodV)<SUB>3109</SUB>> ]
-"14421" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodA)<SUB>3110</SUB>> ]
-"14424" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFieldID)<SUB>3111</SUB>> ]
-"14427" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectField)<SUB>3112</SUB>> ]
-"14430" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanField)<SUB>3113</SUB>> ]
-"14433" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteField)<SUB>3114</SUB>> ]
-"14436" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharField)<SUB>3115</SUB>> ]
-"14439" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortField)<SUB>3116</SUB>> ]
-"14442" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntField)<SUB>3117</SUB>> ]
-"14445" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongField)<SUB>3118</SUB>> ]
-"14448" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatField)<SUB>3119</SUB>> ]
-"14451" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleField)<SUB>3120</SUB>> ]
-"14454" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectField)<SUB>3121</SUB>> ]
-"14457" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanField)<SUB>3122</SUB>> ]
-"14460" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteField)<SUB>3123</SUB>> ]
-"14463" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharField)<SUB>3124</SUB>> ]
-"14466" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortField)<SUB>3125</SUB>> ]
-"14469" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntField)<SUB>3126</SUB>> ]
-"14472" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongField)<SUB>3127</SUB>> ]
-"14475" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatField)<SUB>3128</SUB>> ]
-"14478" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleField)<SUB>3129</SUB>> ]
-"14481" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticMethodID)<SUB>3130</SUB>> ]
-"14484" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethod)<SUB>3131</SUB>> ]
-"14487" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodV)<SUB>3132</SUB>> ]
-"14490" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodA)<SUB>3133</SUB>> ]
-"14493" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethod)<SUB>3134</SUB>> ]
-"14496" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodV)<SUB>3135</SUB>> ]
-"14499" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodA)<SUB>3136</SUB>> ]
-"14502" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethod)<SUB>3137</SUB>> ]
-"14505" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodV)<SUB>3138</SUB>> ]
-"14508" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodA)<SUB>3139</SUB>> ]
-"14511" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethod)<SUB>3140</SUB>> ]
-"14514" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodV)<SUB>3141</SUB>> ]
-"14517" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodA)<SUB>3142</SUB>> ]
-"14520" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethod)<SUB>3143</SUB>> ]
-"14523" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodV)<SUB>3144</SUB>> ]
-"14526" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodA)<SUB>3145</SUB>> ]
-"14529" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethod)<SUB>3146</SUB>> ]
-"14532" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodV)<SUB>3147</SUB>> ]
-"14535" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodA)<SUB>3148</SUB>> ]
-"14538" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethod)<SUB>3149</SUB>> ]
-"14541" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodV)<SUB>3150</SUB>> ]
-"14544" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodA)<SUB>3151</SUB>> ]
-"14547" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethod)<SUB>3152</SUB>> ]
-"14550" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodV)<SUB>3153</SUB>> ]
-"14553" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodA)<SUB>3154</SUB>> ]
-"14556" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethod)<SUB>3155</SUB>> ]
-"14559" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodV)<SUB>3156</SUB>> ]
-"14562" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodA)<SUB>3157</SUB>> ]
-"14565" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethod)<SUB>3158</SUB>> ]
-"14568" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodV)<SUB>3159</SUB>> ]
-"14571" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodA)<SUB>3160</SUB>> ]
-"14574" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFieldID)<SUB>3161</SUB>> ]
-"14577" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticObjectField)<SUB>3162</SUB>> ]
-"14580" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticBooleanField)<SUB>3163</SUB>> ]
-"14583" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticByteField)<SUB>3164</SUB>> ]
-"14586" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticCharField)<SUB>3165</SUB>> ]
-"14589" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticShortField)<SUB>3166</SUB>> ]
-"14592" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticIntField)<SUB>3167</SUB>> ]
-"14595" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticLongField)<SUB>3168</SUB>> ]
-"14598" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFloatField)<SUB>3169</SUB>> ]
-"14601" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticDoubleField)<SUB>3170</SUB>> ]
-"14604" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticObjectField)<SUB>3171</SUB>> ]
-"14607" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticBooleanField)<SUB>3172</SUB>> ]
-"14610" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticByteField)<SUB>3173</SUB>> ]
-"14613" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticCharField)<SUB>3174</SUB>> ]
-"14616" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticShortField)<SUB>3175</SUB>> ]
-"14619" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticIntField)<SUB>3176</SUB>> ]
-"14622" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticLongField)<SUB>3177</SUB>> ]
-"14625" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticFloatField)<SUB>3178</SUB>> ]
-"14628" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticDoubleField)<SUB>3179</SUB>> ]
-"14631" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewString)<SUB>3180</SUB>> ]
-"14634" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringLength)<SUB>3181</SUB>> ]
-"14637" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringChars)<SUB>3182</SUB>> ]
-"14640" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringChars)<SUB>3183</SUB>> ]
-"14643" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewStringUTF)<SUB>3184</SUB>> ]
-"14646" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFLength)<SUB>3185</SUB>> ]
-"14649" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFChars)<SUB>3186</SUB>> ]
-"14652" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringUTFChars)<SUB>3187</SUB>> ]
-"14655" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetArrayLength)<SUB>3188</SUB>> ]
-"14658" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectArray)<SUB>3189</SUB>> ]
-"14661" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectArrayElement)<SUB>3190</SUB>> ]
-"14664" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectArrayElement)<SUB>3191</SUB>> ]
-"14667" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewBooleanArray)<SUB>3192</SUB>> ]
-"14670" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewByteArray)<SUB>3193</SUB>> ]
-"14673" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewCharArray)<SUB>3194</SUB>> ]
-"14676" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewShortArray)<SUB>3195</SUB>> ]
-"14679" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewIntArray)<SUB>3196</SUB>> ]
-"14682" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLongArray)<SUB>3197</SUB>> ]
-"14685" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewFloatArray)<SUB>3198</SUB>> ]
-"14688" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDoubleArray)<SUB>3199</SUB>> ]
-"14691" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayElements)<SUB>3200</SUB>> ]
-"14694" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayElements)<SUB>3201</SUB>> ]
-"14697" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayElements)<SUB>3202</SUB>> ]
-"14700" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayElements)<SUB>3203</SUB>> ]
-"14703" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayElements)<SUB>3204</SUB>> ]
-"14706" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayElements)<SUB>3205</SUB>> ]
-"14709" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayElements)<SUB>3206</SUB>> ]
-"14712" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayElements)<SUB>3207</SUB>> ]
-"14715" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseBooleanArrayElements)<SUB>3208</SUB>> ]
-"14718" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseByteArrayElements)<SUB>3209</SUB>> ]
-"14721" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseCharArrayElements)<SUB>3210</SUB>> ]
-"14724" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseShortArrayElements)<SUB>3211</SUB>> ]
-"14727" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseIntArrayElements)<SUB>3212</SUB>> ]
-"14730" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseLongArrayElements)<SUB>3213</SUB>> ]
-"14733" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseFloatArrayElements)<SUB>3214</SUB>> ]
-"14736" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseDoubleArrayElements)<SUB>3215</SUB>> ]
-"14739" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayRegion)<SUB>3216</SUB>> ]
-"14742" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayRegion)<SUB>3217</SUB>> ]
-"14745" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayRegion)<SUB>3218</SUB>> ]
-"14748" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayRegion)<SUB>3219</SUB>> ]
-"14751" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayRegion)<SUB>3220</SUB>> ]
-"14754" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayRegion)<SUB>3221</SUB>> ]
-"14757" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayRegion)<SUB>3222</SUB>> ]
-"14760" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayRegion)<SUB>3223</SUB>> ]
-"14763" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanArrayRegion)<SUB>3224</SUB>> ]
-"14766" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteArrayRegion)<SUB>3225</SUB>> ]
-"14769" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharArrayRegion)<SUB>3226</SUB>> ]
-"14772" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortArrayRegion)<SUB>3227</SUB>> ]
-"14775" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntArrayRegion)<SUB>3228</SUB>> ]
-"14778" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongArrayRegion)<SUB>3229</SUB>> ]
-"14781" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatArrayRegion)<SUB>3230</SUB>> ]
-"14784" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleArrayRegion)<SUB>3231</SUB>> ]
-"14787" [label = <(&lt;operator&gt;.fieldAccess,JNI::RegisterNatives)<SUB>3232</SUB>> ]
-"14790" [label = <(&lt;operator&gt;.fieldAccess,JNI::UnregisterNatives)<SUB>3233</SUB>> ]
-"14793" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorEnter)<SUB>3234</SUB>> ]
-"14796" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorExit)<SUB>3235</SUB>> ]
-"14799" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetJavaVM)<SUB>3236</SUB>> ]
-"14802" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringRegion)<SUB>3237</SUB>> ]
-"14805" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFRegion)<SUB>3238</SUB>> ]
-"14808" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetPrimitiveArrayCritical)<SUB>3239</SUB>> ]
-"14811" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleasePrimitiveArrayCritical)<SUB>3240</SUB>> ]
-"14814" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringCritical)<SUB>3241</SUB>> ]
-"14817" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringCritical)<SUB>3242</SUB>> ]
-"14820" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewWeakGlobalRef)<SUB>3243</SUB>> ]
-"14823" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteWeakGlobalRef)<SUB>3244</SUB>> ]
-"14826" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionCheck)<SUB>3245</SUB>> ]
-"14829" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDirectByteBuffer)<SUB>3246</SUB>> ]
-"14832" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferAddress)<SUB>3247</SUB>> ]
-"14835" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferCapacity)<SUB>3248</SUB>> ]
-"14838" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectRefType)<SUB>3249</SUB>> ]
-"588" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>370</SUB>> ]
-"609" [label = <(Runtime::Current,Runtime::Current())<SUB>397</SUB>> ]
-"613" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>397</SUB>> ]
-"735" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>502</SUB>> ]
-"761" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>517</SUB>> ]
-"768" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>517</SUB>> ]
-"789" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>546</SUB>> ]
-"792" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>546</SUB>> ]
-"796" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetSystemClassLoader)<SUB>546</SUB>> ]
-"823" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>568</SUB>> ]
-"825" [label = <(Self,soa.Self())<SUB>568</SUB>> ]
-"829" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(jni_class))<SUB>568</SUB>> ]
-"849" [label = <(Runtime::Current,Runtime::Current())<SUB>574</SUB>> ]
-"853" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>574</SUB>> ]
-"13910" [label = <(Runtime::Current,Runtime::Current())<SUB>2944</SUB>> ]
-"13914" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2944</SUB>> ]
-"13926" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2946</SUB>> ]
-"14156" [label = <(FIELD_IDENTIFIER,GetVersion,GetVersion)<SUB>3021</SUB>> ]
-"14159" [label = <(FIELD_IDENTIFIER,DefineClass,DefineClass)<SUB>3022</SUB>> ]
-"14162" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>3023</SUB>> ]
-"14165" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>3024</SUB>> ]
-"14168" [label = <(FIELD_IDENTIFIER,FromReflectedField,FromReflectedField)<SUB>3025</SUB>> ]
-"14171" [label = <(FIELD_IDENTIFIER,ToReflectedMethod,ToReflectedMethod)<SUB>3026</SUB>> ]
-"14174" [label = <(FIELD_IDENTIFIER,GetSuperclass,GetSuperclass)<SUB>3027</SUB>> ]
-"14177" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>3028</SUB>> ]
-"14180" [label = <(FIELD_IDENTIFIER,ToReflectedField,ToReflectedField)<SUB>3029</SUB>> ]
-"14183" [label = <(FIELD_IDENTIFIER,Throw,Throw)<SUB>3030</SUB>> ]
-"14186" [label = <(FIELD_IDENTIFIER,ThrowNew,ThrowNew)<SUB>3031</SUB>> ]
-"14189" [label = <(FIELD_IDENTIFIER,ExceptionOccurred,ExceptionOccurred)<SUB>3032</SUB>> ]
-"14192" [label = <(FIELD_IDENTIFIER,ExceptionDescribe,ExceptionDescribe)<SUB>3033</SUB>> ]
-"14195" [label = <(FIELD_IDENTIFIER,ExceptionClear,ExceptionClear)<SUB>3034</SUB>> ]
-"14198" [label = <(FIELD_IDENTIFIER,FatalError,FatalError)<SUB>3035</SUB>> ]
-"14201" [label = <(FIELD_IDENTIFIER,PushLocalFrame,PushLocalFrame)<SUB>3036</SUB>> ]
-"14204" [label = <(FIELD_IDENTIFIER,PopLocalFrame,PopLocalFrame)<SUB>3037</SUB>> ]
-"14207" [label = <(FIELD_IDENTIFIER,NewGlobalRef,NewGlobalRef)<SUB>3038</SUB>> ]
-"14210" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>3039</SUB>> ]
-"14213" [label = <(FIELD_IDENTIFIER,DeleteLocalRef,DeleteLocalRef)<SUB>3040</SUB>> ]
-"14216" [label = <(FIELD_IDENTIFIER,IsSameObject,IsSameObject)<SUB>3041</SUB>> ]
-"14219" [label = <(FIELD_IDENTIFIER,NewLocalRef,NewLocalRef)<SUB>3042</SUB>> ]
-"14222" [label = <(FIELD_IDENTIFIER,EnsureLocalCapacity,EnsureLocalCapacity)<SUB>3043</SUB>> ]
-"14225" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>3044</SUB>> ]
-"14228" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>3045</SUB>> ]
-"14231" [label = <(FIELD_IDENTIFIER,NewObjectV,NewObjectV)<SUB>3046</SUB>> ]
-"14234" [label = <(FIELD_IDENTIFIER,NewObjectA,NewObjectA)<SUB>3047</SUB>> ]
-"14237" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>3048</SUB>> ]
-"14240" [label = <(FIELD_IDENTIFIER,IsInstanceOf,IsInstanceOf)<SUB>3049</SUB>> ]
-"14243" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>3050</SUB>> ]
-"14246" [label = <(FIELD_IDENTIFIER,CallObjectMethod,CallObjectMethod)<SUB>3051</SUB>> ]
-"14249" [label = <(FIELD_IDENTIFIER,CallObjectMethodV,CallObjectMethodV)<SUB>3052</SUB>> ]
-"14252" [label = <(FIELD_IDENTIFIER,CallObjectMethodA,CallObjectMethodA)<SUB>3053</SUB>> ]
-"14255" [label = <(FIELD_IDENTIFIER,CallBooleanMethod,CallBooleanMethod)<SUB>3054</SUB>> ]
-"14258" [label = <(FIELD_IDENTIFIER,CallBooleanMethodV,CallBooleanMethodV)<SUB>3055</SUB>> ]
-"14261" [label = <(FIELD_IDENTIFIER,CallBooleanMethodA,CallBooleanMethodA)<SUB>3056</SUB>> ]
-"14264" [label = <(FIELD_IDENTIFIER,CallByteMethod,CallByteMethod)<SUB>3057</SUB>> ]
-"14267" [label = <(FIELD_IDENTIFIER,CallByteMethodV,CallByteMethodV)<SUB>3058</SUB>> ]
-"14270" [label = <(FIELD_IDENTIFIER,CallByteMethodA,CallByteMethodA)<SUB>3059</SUB>> ]
-"14273" [label = <(FIELD_IDENTIFIER,CallCharMethod,CallCharMethod)<SUB>3060</SUB>> ]
-"14276" [label = <(FIELD_IDENTIFIER,CallCharMethodV,CallCharMethodV)<SUB>3061</SUB>> ]
-"14279" [label = <(FIELD_IDENTIFIER,CallCharMethodA,CallCharMethodA)<SUB>3062</SUB>> ]
-"14282" [label = <(FIELD_IDENTIFIER,CallShortMethod,CallShortMethod)<SUB>3063</SUB>> ]
-"14285" [label = <(FIELD_IDENTIFIER,CallShortMethodV,CallShortMethodV)<SUB>3064</SUB>> ]
-"14288" [label = <(FIELD_IDENTIFIER,CallShortMethodA,CallShortMethodA)<SUB>3065</SUB>> ]
-"14291" [label = <(FIELD_IDENTIFIER,CallIntMethod,CallIntMethod)<SUB>3066</SUB>> ]
-"14294" [label = <(FIELD_IDENTIFIER,CallIntMethodV,CallIntMethodV)<SUB>3067</SUB>> ]
-"14297" [label = <(FIELD_IDENTIFIER,CallIntMethodA,CallIntMethodA)<SUB>3068</SUB>> ]
-"14300" [label = <(FIELD_IDENTIFIER,CallLongMethod,CallLongMethod)<SUB>3069</SUB>> ]
-"14303" [label = <(FIELD_IDENTIFIER,CallLongMethodV,CallLongMethodV)<SUB>3070</SUB>> ]
-"14306" [label = <(FIELD_IDENTIFIER,CallLongMethodA,CallLongMethodA)<SUB>3071</SUB>> ]
-"14309" [label = <(FIELD_IDENTIFIER,CallFloatMethod,CallFloatMethod)<SUB>3072</SUB>> ]
-"14312" [label = <(FIELD_IDENTIFIER,CallFloatMethodV,CallFloatMethodV)<SUB>3073</SUB>> ]
-"14315" [label = <(FIELD_IDENTIFIER,CallFloatMethodA,CallFloatMethodA)<SUB>3074</SUB>> ]
-"14318" [label = <(FIELD_IDENTIFIER,CallDoubleMethod,CallDoubleMethod)<SUB>3075</SUB>> ]
-"14321" [label = <(FIELD_IDENTIFIER,CallDoubleMethodV,CallDoubleMethodV)<SUB>3076</SUB>> ]
-"14324" [label = <(FIELD_IDENTIFIER,CallDoubleMethodA,CallDoubleMethodA)<SUB>3077</SUB>> ]
-"14327" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>3078</SUB>> ]
-"14330" [label = <(FIELD_IDENTIFIER,CallVoidMethodV,CallVoidMethodV)<SUB>3079</SUB>> ]
-"14333" [label = <(FIELD_IDENTIFIER,CallVoidMethodA,CallVoidMethodA)<SUB>3080</SUB>> ]
-"14336" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethod,CallNonvirtualObjectMethod)<SUB>3081</SUB>> ]
-"14339" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodV,CallNonvirtualObjectMethodV)<SUB>3082</SUB>> ]
-"14342" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodA,CallNonvirtualObjectMethodA)<SUB>3083</SUB>> ]
-"14345" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethod,CallNonvirtualBooleanMethod)<SUB>3084</SUB>> ]
-"14348" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodV,CallNonvirtualBooleanMethodV)<SUB>3085</SUB>> ]
-"14351" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodA,CallNonvirtualBooleanMethodA)<SUB>3086</SUB>> ]
-"14354" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethod,CallNonvirtualByteMethod)<SUB>3087</SUB>> ]
-"14357" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodV,CallNonvirtualByteMethodV)<SUB>3088</SUB>> ]
-"14360" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodA,CallNonvirtualByteMethodA)<SUB>3089</SUB>> ]
-"14363" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethod,CallNonvirtualCharMethod)<SUB>3090</SUB>> ]
-"14366" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodV,CallNonvirtualCharMethodV)<SUB>3091</SUB>> ]
-"14369" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodA,CallNonvirtualCharMethodA)<SUB>3092</SUB>> ]
-"14372" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethod,CallNonvirtualShortMethod)<SUB>3093</SUB>> ]
-"14375" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodV,CallNonvirtualShortMethodV)<SUB>3094</SUB>> ]
-"14378" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodA,CallNonvirtualShortMethodA)<SUB>3095</SUB>> ]
-"14381" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethod,CallNonvirtualIntMethod)<SUB>3096</SUB>> ]
-"14384" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodV,CallNonvirtualIntMethodV)<SUB>3097</SUB>> ]
-"14387" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodA,CallNonvirtualIntMethodA)<SUB>3098</SUB>> ]
-"14390" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethod,CallNonvirtualLongMethod)<SUB>3099</SUB>> ]
-"14393" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodV,CallNonvirtualLongMethodV)<SUB>3100</SUB>> ]
-"14396" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodA,CallNonvirtualLongMethodA)<SUB>3101</SUB>> ]
-"14399" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethod,CallNonvirtualFloatMethod)<SUB>3102</SUB>> ]
-"14402" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodV,CallNonvirtualFloatMethodV)<SUB>3103</SUB>> ]
-"14405" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodA,CallNonvirtualFloatMethodA)<SUB>3104</SUB>> ]
-"14408" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethod,CallNonvirtualDoubleMethod)<SUB>3105</SUB>> ]
-"14411" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodV,CallNonvirtualDoubleMethodV)<SUB>3106</SUB>> ]
-"14414" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodA,CallNonvirtualDoubleMethodA)<SUB>3107</SUB>> ]
-"14417" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethod,CallNonvirtualVoidMethod)<SUB>3108</SUB>> ]
-"14420" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV)<SUB>3109</SUB>> ]
-"14423" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA)<SUB>3110</SUB>> ]
-"14426" [label = <(FIELD_IDENTIFIER,GetFieldID,GetFieldID)<SUB>3111</SUB>> ]
-"14429" [label = <(FIELD_IDENTIFIER,GetObjectField,GetObjectField)<SUB>3112</SUB>> ]
-"14432" [label = <(FIELD_IDENTIFIER,GetBooleanField,GetBooleanField)<SUB>3113</SUB>> ]
-"14435" [label = <(FIELD_IDENTIFIER,GetByteField,GetByteField)<SUB>3114</SUB>> ]
-"14438" [label = <(FIELD_IDENTIFIER,GetCharField,GetCharField)<SUB>3115</SUB>> ]
-"14441" [label = <(FIELD_IDENTIFIER,GetShortField,GetShortField)<SUB>3116</SUB>> ]
-"14444" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>3117</SUB>> ]
-"14447" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>3118</SUB>> ]
-"14450" [label = <(FIELD_IDENTIFIER,GetFloatField,GetFloatField)<SUB>3119</SUB>> ]
-"14453" [label = <(FIELD_IDENTIFIER,GetDoubleField,GetDoubleField)<SUB>3120</SUB>> ]
-"14456" [label = <(FIELD_IDENTIFIER,SetObjectField,SetObjectField)<SUB>3121</SUB>> ]
-"14459" [label = <(FIELD_IDENTIFIER,SetBooleanField,SetBooleanField)<SUB>3122</SUB>> ]
-"14462" [label = <(FIELD_IDENTIFIER,SetByteField,SetByteField)<SUB>3123</SUB>> ]
-"14465" [label = <(FIELD_IDENTIFIER,SetCharField,SetCharField)<SUB>3124</SUB>> ]
-"14468" [label = <(FIELD_IDENTIFIER,SetShortField,SetShortField)<SUB>3125</SUB>> ]
-"14471" [label = <(FIELD_IDENTIFIER,SetIntField,SetIntField)<SUB>3126</SUB>> ]
-"14474" [label = <(FIELD_IDENTIFIER,SetLongField,SetLongField)<SUB>3127</SUB>> ]
-"14477" [label = <(FIELD_IDENTIFIER,SetFloatField,SetFloatField)<SUB>3128</SUB>> ]
-"14480" [label = <(FIELD_IDENTIFIER,SetDoubleField,SetDoubleField)<SUB>3129</SUB>> ]
-"14483" [label = <(FIELD_IDENTIFIER,GetStaticMethodID,GetStaticMethodID)<SUB>3130</SUB>> ]
-"14486" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethod,CallStaticObjectMethod)<SUB>3131</SUB>> ]
-"14489" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodV,CallStaticObjectMethodV)<SUB>3132</SUB>> ]
-"14492" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodA,CallStaticObjectMethodA)<SUB>3133</SUB>> ]
-"14495" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethod,CallStaticBooleanMethod)<SUB>3134</SUB>> ]
-"14498" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodV,CallStaticBooleanMethodV)<SUB>3135</SUB>> ]
-"14501" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodA,CallStaticBooleanMethodA)<SUB>3136</SUB>> ]
-"14504" [label = <(FIELD_IDENTIFIER,CallStaticByteMethod,CallStaticByteMethod)<SUB>3137</SUB>> ]
-"14507" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodV,CallStaticByteMethodV)<SUB>3138</SUB>> ]
-"14510" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodA,CallStaticByteMethodA)<SUB>3139</SUB>> ]
-"14513" [label = <(FIELD_IDENTIFIER,CallStaticCharMethod,CallStaticCharMethod)<SUB>3140</SUB>> ]
-"14516" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodV,CallStaticCharMethodV)<SUB>3141</SUB>> ]
-"14519" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodA,CallStaticCharMethodA)<SUB>3142</SUB>> ]
-"14522" [label = <(FIELD_IDENTIFIER,CallStaticShortMethod,CallStaticShortMethod)<SUB>3143</SUB>> ]
-"14525" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodV,CallStaticShortMethodV)<SUB>3144</SUB>> ]
-"14528" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodA,CallStaticShortMethodA)<SUB>3145</SUB>> ]
-"14531" [label = <(FIELD_IDENTIFIER,CallStaticIntMethod,CallStaticIntMethod)<SUB>3146</SUB>> ]
-"14534" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodV,CallStaticIntMethodV)<SUB>3147</SUB>> ]
-"14537" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodA,CallStaticIntMethodA)<SUB>3148</SUB>> ]
-"14540" [label = <(FIELD_IDENTIFIER,CallStaticLongMethod,CallStaticLongMethod)<SUB>3149</SUB>> ]
-"14543" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodV,CallStaticLongMethodV)<SUB>3150</SUB>> ]
-"14546" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodA,CallStaticLongMethodA)<SUB>3151</SUB>> ]
-"14549" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethod,CallStaticFloatMethod)<SUB>3152</SUB>> ]
-"14552" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodV,CallStaticFloatMethodV)<SUB>3153</SUB>> ]
-"14555" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodA,CallStaticFloatMethodA)<SUB>3154</SUB>> ]
-"14558" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethod,CallStaticDoubleMethod)<SUB>3155</SUB>> ]
-"14561" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodV,CallStaticDoubleMethodV)<SUB>3156</SUB>> ]
-"14564" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodA,CallStaticDoubleMethodA)<SUB>3157</SUB>> ]
-"14567" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethod,CallStaticVoidMethod)<SUB>3158</SUB>> ]
-"14570" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodV,CallStaticVoidMethodV)<SUB>3159</SUB>> ]
-"14573" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodA,CallStaticVoidMethodA)<SUB>3160</SUB>> ]
-"14576" [label = <(FIELD_IDENTIFIER,GetStaticFieldID,GetStaticFieldID)<SUB>3161</SUB>> ]
-"14579" [label = <(FIELD_IDENTIFIER,GetStaticObjectField,GetStaticObjectField)<SUB>3162</SUB>> ]
-"14582" [label = <(FIELD_IDENTIFIER,GetStaticBooleanField,GetStaticBooleanField)<SUB>3163</SUB>> ]
-"14585" [label = <(FIELD_IDENTIFIER,GetStaticByteField,GetStaticByteField)<SUB>3164</SUB>> ]
-"14588" [label = <(FIELD_IDENTIFIER,GetStaticCharField,GetStaticCharField)<SUB>3165</SUB>> ]
-"14591" [label = <(FIELD_IDENTIFIER,GetStaticShortField,GetStaticShortField)<SUB>3166</SUB>> ]
-"14594" [label = <(FIELD_IDENTIFIER,GetStaticIntField,GetStaticIntField)<SUB>3167</SUB>> ]
-"14597" [label = <(FIELD_IDENTIFIER,GetStaticLongField,GetStaticLongField)<SUB>3168</SUB>> ]
-"14600" [label = <(FIELD_IDENTIFIER,GetStaticFloatField,GetStaticFloatField)<SUB>3169</SUB>> ]
-"14603" [label = <(FIELD_IDENTIFIER,GetStaticDoubleField,GetStaticDoubleField)<SUB>3170</SUB>> ]
-"14606" [label = <(FIELD_IDENTIFIER,SetStaticObjectField,SetStaticObjectField)<SUB>3171</SUB>> ]
-"14609" [label = <(FIELD_IDENTIFIER,SetStaticBooleanField,SetStaticBooleanField)<SUB>3172</SUB>> ]
-"14612" [label = <(FIELD_IDENTIFIER,SetStaticByteField,SetStaticByteField)<SUB>3173</SUB>> ]
-"14615" [label = <(FIELD_IDENTIFIER,SetStaticCharField,SetStaticCharField)<SUB>3174</SUB>> ]
-"14618" [label = <(FIELD_IDENTIFIER,SetStaticShortField,SetStaticShortField)<SUB>3175</SUB>> ]
-"14621" [label = <(FIELD_IDENTIFIER,SetStaticIntField,SetStaticIntField)<SUB>3176</SUB>> ]
-"14624" [label = <(FIELD_IDENTIFIER,SetStaticLongField,SetStaticLongField)<SUB>3177</SUB>> ]
-"14627" [label = <(FIELD_IDENTIFIER,SetStaticFloatField,SetStaticFloatField)<SUB>3178</SUB>> ]
-"14630" [label = <(FIELD_IDENTIFIER,SetStaticDoubleField,SetStaticDoubleField)<SUB>3179</SUB>> ]
-"14633" [label = <(FIELD_IDENTIFIER,NewString,NewString)<SUB>3180</SUB>> ]
-"14636" [label = <(FIELD_IDENTIFIER,GetStringLength,GetStringLength)<SUB>3181</SUB>> ]
-"14639" [label = <(FIELD_IDENTIFIER,GetStringChars,GetStringChars)<SUB>3182</SUB>> ]
-"14642" [label = <(FIELD_IDENTIFIER,ReleaseStringChars,ReleaseStringChars)<SUB>3183</SUB>> ]
-"14645" [label = <(FIELD_IDENTIFIER,NewStringUTF,NewStringUTF)<SUB>3184</SUB>> ]
-"14648" [label = <(FIELD_IDENTIFIER,GetStringUTFLength,GetStringUTFLength)<SUB>3185</SUB>> ]
-"14651" [label = <(FIELD_IDENTIFIER,GetStringUTFChars,GetStringUTFChars)<SUB>3186</SUB>> ]
-"14654" [label = <(FIELD_IDENTIFIER,ReleaseStringUTFChars,ReleaseStringUTFChars)<SUB>3187</SUB>> ]
-"14657" [label = <(FIELD_IDENTIFIER,GetArrayLength,GetArrayLength)<SUB>3188</SUB>> ]
-"14660" [label = <(FIELD_IDENTIFIER,NewObjectArray,NewObjectArray)<SUB>3189</SUB>> ]
-"14663" [label = <(FIELD_IDENTIFIER,GetObjectArrayElement,GetObjectArrayElement)<SUB>3190</SUB>> ]
-"14666" [label = <(FIELD_IDENTIFIER,SetObjectArrayElement,SetObjectArrayElement)<SUB>3191</SUB>> ]
-"14669" [label = <(FIELD_IDENTIFIER,NewBooleanArray,NewBooleanArray)<SUB>3192</SUB>> ]
-"14672" [label = <(FIELD_IDENTIFIER,NewByteArray,NewByteArray)<SUB>3193</SUB>> ]
-"14675" [label = <(FIELD_IDENTIFIER,NewCharArray,NewCharArray)<SUB>3194</SUB>> ]
-"14678" [label = <(FIELD_IDENTIFIER,NewShortArray,NewShortArray)<SUB>3195</SUB>> ]
-"14681" [label = <(FIELD_IDENTIFIER,NewIntArray,NewIntArray)<SUB>3196</SUB>> ]
-"14684" [label = <(FIELD_IDENTIFIER,NewLongArray,NewLongArray)<SUB>3197</SUB>> ]
-"14687" [label = <(FIELD_IDENTIFIER,NewFloatArray,NewFloatArray)<SUB>3198</SUB>> ]
-"14690" [label = <(FIELD_IDENTIFIER,NewDoubleArray,NewDoubleArray)<SUB>3199</SUB>> ]
-"14693" [label = <(FIELD_IDENTIFIER,GetBooleanArrayElements,GetBooleanArrayElements)<SUB>3200</SUB>> ]
-"14696" [label = <(FIELD_IDENTIFIER,GetByteArrayElements,GetByteArrayElements)<SUB>3201</SUB>> ]
-"14699" [label = <(FIELD_IDENTIFIER,GetCharArrayElements,GetCharArrayElements)<SUB>3202</SUB>> ]
-"14702" [label = <(FIELD_IDENTIFIER,GetShortArrayElements,GetShortArrayElements)<SUB>3203</SUB>> ]
-"14705" [label = <(FIELD_IDENTIFIER,GetIntArrayElements,GetIntArrayElements)<SUB>3204</SUB>> ]
-"14708" [label = <(FIELD_IDENTIFIER,GetLongArrayElements,GetLongArrayElements)<SUB>3205</SUB>> ]
-"14711" [label = <(FIELD_IDENTIFIER,GetFloatArrayElements,GetFloatArrayElements)<SUB>3206</SUB>> ]
-"14714" [label = <(FIELD_IDENTIFIER,GetDoubleArrayElements,GetDoubleArrayElements)<SUB>3207</SUB>> ]
-"14717" [label = <(FIELD_IDENTIFIER,ReleaseBooleanArrayElements,ReleaseBooleanArrayElements)<SUB>3208</SUB>> ]
-"14720" [label = <(FIELD_IDENTIFIER,ReleaseByteArrayElements,ReleaseByteArrayElements)<SUB>3209</SUB>> ]
-"14723" [label = <(FIELD_IDENTIFIER,ReleaseCharArrayElements,ReleaseCharArrayElements)<SUB>3210</SUB>> ]
-"14726" [label = <(FIELD_IDENTIFIER,ReleaseShortArrayElements,ReleaseShortArrayElements)<SUB>3211</SUB>> ]
-"14729" [label = <(FIELD_IDENTIFIER,ReleaseIntArrayElements,ReleaseIntArrayElements)<SUB>3212</SUB>> ]
-"14732" [label = <(FIELD_IDENTIFIER,ReleaseLongArrayElements,ReleaseLongArrayElements)<SUB>3213</SUB>> ]
-"14735" [label = <(FIELD_IDENTIFIER,ReleaseFloatArrayElements,ReleaseFloatArrayElements)<SUB>3214</SUB>> ]
-"14738" [label = <(FIELD_IDENTIFIER,ReleaseDoubleArrayElements,ReleaseDoubleArrayElements)<SUB>3215</SUB>> ]
-"14741" [label = <(FIELD_IDENTIFIER,GetBooleanArrayRegion,GetBooleanArrayRegion)<SUB>3216</SUB>> ]
-"14744" [label = <(FIELD_IDENTIFIER,GetByteArrayRegion,GetByteArrayRegion)<SUB>3217</SUB>> ]
-"14747" [label = <(FIELD_IDENTIFIER,GetCharArrayRegion,GetCharArrayRegion)<SUB>3218</SUB>> ]
-"14750" [label = <(FIELD_IDENTIFIER,GetShortArrayRegion,GetShortArrayRegion)<SUB>3219</SUB>> ]
-"14753" [label = <(FIELD_IDENTIFIER,GetIntArrayRegion,GetIntArrayRegion)<SUB>3220</SUB>> ]
-"14756" [label = <(FIELD_IDENTIFIER,GetLongArrayRegion,GetLongArrayRegion)<SUB>3221</SUB>> ]
-"14759" [label = <(FIELD_IDENTIFIER,GetFloatArrayRegion,GetFloatArrayRegion)<SUB>3222</SUB>> ]
-"14762" [label = <(FIELD_IDENTIFIER,GetDoubleArrayRegion,GetDoubleArrayRegion)<SUB>3223</SUB>> ]
-"14765" [label = <(FIELD_IDENTIFIER,SetBooleanArrayRegion,SetBooleanArrayRegion)<SUB>3224</SUB>> ]
-"14768" [label = <(FIELD_IDENTIFIER,SetByteArrayRegion,SetByteArrayRegion)<SUB>3225</SUB>> ]
-"14771" [label = <(FIELD_IDENTIFIER,SetCharArrayRegion,SetCharArrayRegion)<SUB>3226</SUB>> ]
-"14774" [label = <(FIELD_IDENTIFIER,SetShortArrayRegion,SetShortArrayRegion)<SUB>3227</SUB>> ]
-"14777" [label = <(FIELD_IDENTIFIER,SetIntArrayRegion,SetIntArrayRegion)<SUB>3228</SUB>> ]
-"14780" [label = <(FIELD_IDENTIFIER,SetLongArrayRegion,SetLongArrayRegion)<SUB>3229</SUB>> ]
-"14783" [label = <(FIELD_IDENTIFIER,SetFloatArrayRegion,SetFloatArrayRegion)<SUB>3230</SUB>> ]
-"14786" [label = <(FIELD_IDENTIFIER,SetDoubleArrayRegion,SetDoubleArrayRegion)<SUB>3231</SUB>> ]
-"14789" [label = <(FIELD_IDENTIFIER,RegisterNatives,RegisterNatives)<SUB>3232</SUB>> ]
-"14792" [label = <(FIELD_IDENTIFIER,UnregisterNatives,UnregisterNatives)<SUB>3233</SUB>> ]
-"14795" [label = <(FIELD_IDENTIFIER,MonitorEnter,MonitorEnter)<SUB>3234</SUB>> ]
-"14798" [label = <(FIELD_IDENTIFIER,MonitorExit,MonitorExit)<SUB>3235</SUB>> ]
-"14801" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>3236</SUB>> ]
-"14804" [label = <(FIELD_IDENTIFIER,GetStringRegion,GetStringRegion)<SUB>3237</SUB>> ]
-"14807" [label = <(FIELD_IDENTIFIER,GetStringUTFRegion,GetStringUTFRegion)<SUB>3238</SUB>> ]
-"14810" [label = <(FIELD_IDENTIFIER,GetPrimitiveArrayCritical,GetPrimitiveArrayCritical)<SUB>3239</SUB>> ]
-"14813" [label = <(FIELD_IDENTIFIER,ReleasePrimitiveArrayCritical,ReleasePrimitiveArrayCritical)<SUB>3240</SUB>> ]
-"14816" [label = <(FIELD_IDENTIFIER,GetStringCritical,GetStringCritical)<SUB>3241</SUB>> ]
-"14819" [label = <(FIELD_IDENTIFIER,ReleaseStringCritical,ReleaseStringCritical)<SUB>3242</SUB>> ]
-"14822" [label = <(FIELD_IDENTIFIER,NewWeakGlobalRef,NewWeakGlobalRef)<SUB>3243</SUB>> ]
-"14825" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>3244</SUB>> ]
-"14828" [label = <(FIELD_IDENTIFIER,ExceptionCheck,ExceptionCheck)<SUB>3245</SUB>> ]
-"14831" [label = <(FIELD_IDENTIFIER,NewDirectByteBuffer,NewDirectByteBuffer)<SUB>3246</SUB>> ]
-"14834" [label = <(FIELD_IDENTIFIER,GetDirectBufferAddress,GetDirectBufferAddress)<SUB>3247</SUB>> ]
-"14837" [label = <(FIELD_IDENTIFIER,GetDirectBufferCapacity,GetDirectBufferCapacity)<SUB>3248</SUB>> ]
-"14840" [label = <(FIELD_IDENTIFIER,GetObjectRefType,GetObjectRefType)<SUB>3249</SUB>> ]
-"589" [label = <(Runtime::Current,Runtime::Current())<SUB>370</SUB>> ]
-"593" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>370</SUB>> ]
-"610" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>397</SUB>> ]
-"762" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>517</SUB>> ]
-"791" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>546</SUB>> ]
-"794" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>546</SUB>> ]
-"797" [label = <(Runtime::Current,Runtime::Current())<SUB>546</SUB>> ]
-"801" [label = <(FIELD_IDENTIFIER,GetSystemClassLoader,GetSystemClassLoader)<SUB>546</SUB>> ]
-"826" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>568</SUB>> ]
-"830" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>568</SUB>> ]
-"850" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>574</SUB>> ]
-"13911" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2944</SUB>> ]
-"13928" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2946</SUB>> ]
-"590" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>370</SUB>> ]
-"612" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>397</SUB>> ]
-"763" [label = <(Runtime::Current,Runtime::Current())<SUB>517</SUB>> ]
-"767" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>517</SUB>> ]
-"798" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>546</SUB>> ]
-"828" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>568</SUB>> ]
-"831" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>568</SUB>> ]
-"834" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>568</SUB>> ]
-"852" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>574</SUB>> ]
-"13913" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2944</SUB>> ]
-"592" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>370</SUB>> ]
-"764" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>517</SUB>> ]
-"800" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>546</SUB>> ]
-"833" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>568</SUB>> ]
-"836" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>568</SUB>> ]
-"766" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>517</SUB>> ]
+"602" [label = <(UNKNOWN,),))<SUB>393</SUB>> ]
+"603" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_NE(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>394</SUB>> ]
+"605" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>396</SUB>> ]
+"614" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>397</SUB>> ]
+"615" [label = <(UNKNOWN,},})<SUB>416</SUB>> ]
+"622" [label = <(UNKNOWN,),))<SUB>418</SUB>> ]
+"623" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();,REQUIRES_SHARED(Locks::mutator_lock_) {\012  instrumentation::Instrumentation* instrumentation = Runtime::Current()-&gt;GetInstrumentation();)<SUB>419</SUB>> ]
+"624" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj).Ptr(),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldReadListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012    instrumentation-&gt;FieldReadEvent(self,\012                                    self-&gt;DecodeJObject(obj).Ptr(),\012                                    cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                    field);\012 })<SUB>421</SUB>> ]
+"625" [label = <(UNKNOWN,},})<SUB>439</SUB>> ]
+"701" [label = <(UNKNOWN,),))<SUB>469</SUB>> ]
+"702" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string temp;)<SUB>470</SUB>> ]
+"703" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;no %s method \&quot;%s.%s%s\&quot;&quot;,\012                                 kind,\012                                 c-&gt;GetDescriptor(&amp;temp),\012                                 name,\012                                 sig);)<SUB>472</SUB>> ]
+"704" [label = <(UNKNOWN,},})<SUB>478</SUB>> ]
+"713" [label = <(UNKNOWN,),))<SUB>483</SUB>> ]
+"714" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;,REQUIRES_SHARED(Locks::mutator_lock_) {\012  LOG(ERROR)\012 &lt;&lt; &quot;Failed to register native method in &quot; &lt;&lt; c-&gt;PrettyDescriptor()\012 &lt;&lt; &quot; in &quot; &lt;&lt; c-&gt;GetDexCache()-&gt;GetLocation()-&gt;ToModifiedUtf8()\012 &lt;&lt; &quot;: &quot; &lt;&lt; kind &lt;&lt; &quot; is null at index &quot; &lt;&lt; idx;)<SUB>484</SUB>> ]
+"715" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchMethodError;&quot;,\012 &quot;%s is null at index %d&quot;,\012                                 kind,\012                                 idx);)<SUB>489</SUB>> ]
+"716" [label = <(UNKNOWN,},})<SUB>493</SUB>> ]
+"723" [label = <(UNKNOWN,),))<SUB>495</SUB>> ]
+"724" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 },REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (LIKELY(klass-&gt;IsInitialized())) {\012 return klass;\012 })<SUB>496</SUB>> ]
+"731" [label = <(h_klass,h_klass(hs.NewHandle(klass)))<SUB>501</SUB>> ]
+"737" [label = <(UNKNOWN,if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 },if (!Runtime::Current()-&gt;GetClassLinker()-&gt;EnsureInitialized(self, h_klass, true, true)) {\012 return nullptr;\012 })<SUB>502</SUB>> ]
+"738" [label = <(UNKNOWN,return h_klass.Get();,return h_klass.Get();)<SUB>505</SUB>> ]
+"739" [label = <(UNKNOWN,},})<SUB>506</SUB>> ]
+"749" [label = <(UNKNOWN,),))<SUB>509</SUB>> ]
+"750" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class));)<SUB>510</SUB>> ]
+"751" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>512</SUB>> ]
+"753" [label = <(&lt;operator&gt;.assignment,* method = nullptr)<SUB>515</SUB>> ]
+"757" [label = <(&lt;operator&gt;.assignment,pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>516</SUB>> ]
+"769" [label = <(UNKNOWN,if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 },if (c-&gt;IsInterface()) {\012    method = c-&gt;FindInterfaceMethod(name, sig, pointer_size);\012 })<SUB>517</SUB>> ]
+"770" [label = <(UNKNOWN,else {\012    method = c-&gt;FindClassMethod(name, sig, pointer_size);\012 },else {\012    method = c-&gt;FindClassMethod(name, sig, pointer_size);\012 })<SUB>519</SUB>> ]
+"771" [label = <(UNKNOWN,if (method != nullptr &amp;&amp; ShouldDenyAccessToMember(method, soa.Self())) {\012    method = nullptr;\012 },if (method != nullptr &amp;&amp; ShouldDenyAccessToMember(method, soa.Self())) {\012    method = nullptr;\012 })<SUB>522</SUB>> ]
+"772" [label = <(UNKNOWN,if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 },if (method == nullptr || method-&gt;IsStatic() != is_static) {\012 ThrowNoSuchMethodError(soa, c, name, sig, is_static ? &quot;static&quot; : &quot;non-static&quot;);\012 return nullptr;\012 })<SUB>525</SUB>> ]
+"773" [label = <(UNKNOWN,return jni::EncodeArtMethod(method);,return jni::EncodeArtMethod(method);)<SUB>529</SUB>> ]
+"774" [label = <(UNKNOWN,},})<SUB>530</SUB>> ]
+"780" [label = <(UNKNOWN,),))<SUB>532</SUB>> ]
+"781" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ArtMethod* method = soa.Self()-&gt;GetCurrentMethod(nullptr);)<SUB>533</SUB>> ]
+"782" [label = <(UNKNOWN,if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 },if (method == jni::DecodeArtMethod(WellKnownClasses::java_lang_Runtime_nativeLoad)) {\012 return soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());\012 })<SUB>536</SUB>> ]
+"783" [label = <(UNKNOWN,if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 },if (method != nullptr) {\012 return method-&gt;GetDeclaringClass()-&gt;GetClassLoader();\012 })<SUB>540</SUB>> ]
+"785" [label = <(&lt;operator&gt;.assignment,class_loader =\012      soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>544</SUB>> ]
+"802" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 return class_loader;\012 },if (class_loader != nullptr) {\012 return class_loader;\012 })<SUB>546</SUB>> ]
+"803" [label = <(UNKNOWN,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());,class_loader = soa.Decode&lt;mirror::ClassLoader&gt;(soa.Self()-&gt;GetClassLoaderOverride());)<SUB>550</SUB>> ]
+"804" [label = <(UNKNOWN,if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 },if (class_loader != nullptr) {\012 // If so, CommonCompilerTest should have marked the runtime as a compiler not compiling an\012 // image.\012    CHECK(Runtime::Current()-&gt;IsAotCompiler());\012    CHECK(!Runtime::Current()-&gt;IsCompilingBootImage());\012 return class_loader;\012 })<SUB>551</SUB>> ]
+"805" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>559</SUB>> ]
+"806" [label = <(UNKNOWN,},})<SUB>560</SUB>> ]
+"816" [label = <(UNKNOWN,),))<SUB>563</SUB>> ]
+"817" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());,REQUIRES_SHARED(Locks::mutator_lock_) {\012 StackHandleScope&lt;2&gt; hs(soa.Self());)<SUB>564</SUB>> ]
+"819" [label = <(c,c(\012      hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))))<SUB>566</SUB>> ]
+"838" [label = <(UNKNOWN,if (c == nullptr) {\012 return nullptr;\012 },if (c == nullptr) {\012 return nullptr;\012 })<SUB>568</SUB>> ]
+"840" [label = <(&lt;operator&gt;.assignment,* field = nullptr)<SUB>571</SUB>> ]
+"845" [label = <(&lt;operator&gt;.assignment,* class_linker = Runtime::Current()-&gt;GetClassLinker())<SUB>573</SUB>> ]
+"854" [label = <(UNKNOWN,if (UNLIKELY(sig[0] == '\0')) {\012    DCHECK(field == nullptr);\012 },if (UNLIKELY(sig[0] == '\0')) {\012    DCHECK(field == nullptr);\012 })<SUB>574</SUB>> ]
+"855" [label = <(UNKNOWN,else if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 },else if (sig[1] != '\0') {\012 Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(c-&gt;GetClassLoader()));\012    field_type = class_linker-&gt;FindClass(soa.Self(), sig, class_loader);\012 })<SUB>576</SUB>> ]
+"856" [label = <(UNKNOWN,else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 },else {\012    field_type = class_linker-&gt;FindPrimitiveClass(*sig);\012 })<SUB>579</SUB>> ]
+"857" [label = <(UNKNOWN,if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(sig[0] == '\0' || soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012 if (cause != nullptr) {\012      soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 }\012 return nullptr;\012 },if (field_type == nullptr) {\012 // Failed to find type from the signature of the field.\012    DCHECK(sig[0] == '\0' || soa.Self()-&gt;IsExceptionPending());\012 StackHandleScope&lt;1&gt; hs2(soa.Self());\012 Handle&lt;mirror::Throwable&gt; cause(hs2.NewHandle(soa.Self()-&gt;GetException()));\012    soa.Self()-&gt;ClearException();\012    std::string temp;\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no type \&quot;%s\&quot; found and so no field \&quot;%s\&quot; &quot;\012 &quot;could be found in class \&quot;%s\&quot; or its superclasses&quot;, sig, name,\012                                   c-&gt;GetDescriptor(&amp;temp));\012 if (cause != nullptr) {\012      soa.Self()-&gt;GetException()-&gt;SetCause(cause.Get());\012 }\012 return nullptr;\012 })<SUB>582</SUB>> ]
+"859" [label = <(UNKNOWN,if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 },if (is_static) {\012    field = mirror::Class::FindStaticField(\012        soa.Self(), c.Get(), name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>599</SUB>> ]
+"860" [label = <(UNKNOWN,else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 },else {\012    field = c-&gt;FindInstanceField(name, field_type-&gt;GetDescriptor(&amp;temp));\012 })<SUB>602</SUB>> ]
+"861" [label = <(UNKNOWN,if (field != nullptr &amp;&amp; ShouldDenyAccessToMember(field, soa.Self())) {\012    field = nullptr;\012 },if (field != nullptr &amp;&amp; ShouldDenyAccessToMember(field, soa.Self())) {\012    field = nullptr;\012 })<SUB>605</SUB>> ]
+"862" [label = <(UNKNOWN,if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 },if (field == nullptr) {\012    soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/NoSuchFieldError;&quot;,\012 &quot;no \&quot;%s\&quot; field \&quot;%s\&quot; in class \&quot;%s\&quot; or its superclasses&quot;,\012                                   sig, name, c-&gt;GetDescriptor(&amp;temp));\012 return nullptr;\012 })<SUB>608</SUB>> ]
+"863" [label = <(UNKNOWN,return jni::EncodeArtField(field);,return jni::EncodeArtField(field);)<SUB>614</SUB>> ]
+"864" [label = <(UNKNOWN,},})<SUB>615</SUB>> ]
+"874" [label = <(UNKNOWN,),))<SUB>621</SUB>> ]
+"875" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());,REQUIRES_SHARED(Locks::mutator_lock_) {\012  std::string type(array-&gt;PrettyTypeOf());)<SUB>622</SUB>> ]
+"876" [label = <(UNKNOWN,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());,soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/ArrayIndexOutOfBoundsException;&quot;,\012 &quot;%s offset=%d length=%d %s.length=%d&quot;,\012                                 type.c_str(), start, length, identifier, array-&gt;GetLength());)<SUB>624</SUB>> ]
+"877" [label = <(UNKNOWN,},})<SUB>627</SUB>> ]
+"886" [label = <(UNKNOWN,),))<SUB>630</SUB>> ]
+"887" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  soa.Self()-&gt;ThrowNewExceptionF(&quot;Ljava/lang/StringIndexOutOfBoundsException;&quot;,\012 &quot;offset=%d length=%d string.length()=%d&quot;, start, length,\012                                 array_length);)<SUB>631</SUB>> ]
+"888" [label = <(UNKNOWN,},})<SUB>635</SUB>> ]
+"897" [label = <(UNKNOWN,),))<SUB>637</SUB>> ]
+"898" [label = <(UNKNOWN,REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012},REQUIRES(!Locks::mutator_lock_) {\012 // Turn the const char* into a java.lang.String.\012 ScopedLocalRef&lt;jstring&gt; s(env, env-&gt;NewStringUTF(msg));\012 if (msg != nullptr &amp;&amp; s.get() == nullptr) {\012 return JNI_ERR;\012 }\012\012 // Choose an appropriate constructor and set up the arguments.\012  jvalue args[2];\012 const char* signature;\012 if (msg == nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;()V&quot;;\012 } else if (msg != nullptr &amp;&amp; cause == nullptr) {\012    signature = &quot;(Ljava/lang/String;)V&quot;;\012    args[0].l = s.get();\012 } else if (msg == nullptr &amp;&amp; cause != nullptr) {\012    signature = &quot;(Ljava/lang/Throwable;)V&quot;;\012    args[0].l = cause;\012 } else {\012    signature = &quot;(Ljava/lang/String;Ljava/lang/Throwable;)V&quot;;\012    args[0].l = s.get();\012    args[1].l = cause;\012 }\012  jmethodID mid = env-&gt;GetMethodID(exception_class, &quot;&lt;init&gt;&quot;, signature);\012 if (mid == nullptr) {\012 ScopedObjectAccess soa(env);\012    LOG(ERROR) &lt;&lt; &quot;No &lt;init&gt;&quot; &lt;&lt; signature &lt;&lt; &quot; in &quot;\012 &lt;&lt; mirror::Class::PrettyClass(soa.Decode&lt;mirror::Class&gt;(exception_class));\012 return JNI_ERR;\012 }\012\012 ScopedLocalRef&lt;jthrowable&gt; exception(\012      env, reinterpret_cast&lt;jthrowable&gt;(env-&gt;NewObjectA(exception_class, mid, args)));\012 if (exception.get() == nullptr) {\012 return JNI_ERR;\012 }\012 ScopedObjectAccess soa(env);\012  soa.Self()-&gt;SetException(soa.Decode&lt;mirror::Throwable&gt;(exception.get()));\012 return JNI_OK;\012})<SUB>638</SUB>> ]
+"918" [label = <(UNKNOWN,),))<SUB>710</SUB>> ]
+"919" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();,REQUIRES_SHARED(Locks::mutator_lock_) {\012 auto pointer_size = Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize();)<SUB>711</SUB>> ]
+"920" [label = <(UNKNOWN,for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 },for (auto&amp; method : c-&gt;GetMethods(pointer_size)) {\012 if (kNative == method.IsNative() &amp;&amp; name == method.GetName() &amp;&amp; method.GetSignature() == sig) {\012 return &amp;method;\012 }\012 })<SUB>713</SUB>> ]
+"921" [label = <(UNKNOWN,return nullptr;,return nullptr;)<SUB>718</SUB>> ]
+"922" [label = <(UNKNOWN,},})<SUB>719</SUB>> ]
+"13662" [label = <(UNKNOWN,},})<SUB>2862</SUB>> ]
+"13718" [label = <(UNKNOWN,),))<SUB>2879</SUB>> ]
+"13719" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 ObjPtr&lt;ArtArrayT&gt; array = soa.Decode&lt;ArtArrayT&gt;(java_array);)<SUB>2880</SUB>> ]
+"13721" [label = <(&lt;operator&gt;.assignment,expected_array_class = GetClassRoot&lt;ArtArrayT&gt;())<SUB>2882</SUB>> ]
+"13724" [label = <(UNKNOWN,if (UNLIKELY(expected_array_class != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012                              expected_array_class-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 },if (UNLIKELY(expected_array_class != array-&gt;GetClass())) {\012      soa.Vm()-&gt;JniAbortF(fn_name,\012 &quot;attempt to %s %s primitive array elements with an object of type %s&quot;,\012                          operation,\012                          mirror::Class::PrettyDescriptor(\012                              expected_array_class-&gt;GetComponentType()).c_str(),\012                          mirror::Class::PrettyDescriptor(array-&gt;GetClass()).c_str());\012 return nullptr;\012 })<SUB>2883</SUB>> ]
+"13725" [label = <(UNKNOWN,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());,DCHECK_EQ(sizeof(ElementT), array-&gt;GetClass()-&gt;GetComponentSize());)<SUB>2892</SUB>> ]
+"13726" [label = <(UNKNOWN,return array;,return array;)<SUB>2893</SUB>> ]
+"13727" [label = <(UNKNOWN,},})<SUB>2894</SUB>> ]
+"13900" [label = <(UNKNOWN,),))<SUB>2939</SUB>> ]
+"13901" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);,REQUIRES_SHARED(Locks::mutator_lock_) {\012 void* array_data = array-&gt;GetRawData(component_size, 0);)<SUB>2940</SUB>> ]
+"13903" [label = <(&lt;operator&gt;.assignment,* heap = Runtime::Current()-&gt;GetHeap())<SUB>2942</SUB>> ]
+"13913" [label = <(&lt;operator&gt;.assignment,is_copy = array_data != elements)<SUB>2943</SUB>> ]
+"13919" [label = <(&lt;operator&gt;.assignment,bytes = array-&gt;GetLength() * component_size)<SUB>2944</SUB>> ]
+"13927" [label = <(UNKNOWN,if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 },if (is_copy) {\012 // Sanity check: If elements is not the same as the java array's data, it better not be a\012 // heap address. TODO: This might be slow to check, may be worth keeping track of which\012 // copies we make?\012 if (heap-&gt;IsNonDiscontinuousSpaceHeapAddress(elements)) {\012        soa.Vm()-&gt;JniAbortF(&quot;ReleaseArrayElements&quot;,\012 &quot;invalid element pointer %p, array elements are %p&quot;,\012 reinterpret_cast&lt;void*&gt;(elements), array_data);\012 return;\012 }\012 if (mode != JNI_ABORT) {\012        memcpy(array_data, elements, bytes);\012 } else if (kWarnJniAbort &amp;&amp; memcmp(array_data, elements, bytes) != 0) {\012 // Warn if we have JNI_ABORT and the arrays don't match since this is usually an error.\012        LOG(WARNING) &lt;&lt; &quot;Possible incorrect JNI_ABORT in Release*ArrayElements&quot;;\012        soa.Self()-&gt;DumpJavaStack(LOG_STREAM(WARNING));\012 }\012 })<SUB>2945</SUB>> ]
+"13928" [label = <(UNKNOWN,if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 },if (mode != JNI_COMMIT) {\012 if (is_copy) {\012 delete[] reinterpret_cast&lt;uint64_t*&gt;(elements);\012 } else if (heap-&gt;IsMovableObject(array)) {\012 // Non copy to a movable object must means that we had disabled the moving GC.\012 if (!kUseReadBarrier) {\012          heap-&gt;DecrementDisableMovingGC(soa.Self());\012 } else {\012          heap-&gt;DecrementDisableThreadFlip(soa.Self());\012 }\012 }\012 })<SUB>2963</SUB>> ]
+"13929" [label = <(UNKNOWN,},})<SUB>2975</SUB>> ]
+"14142" [label = <(UNKNOWN,};,};)<SUB>3012</SUB>> ]
+"14144" [label = <(&lt;operator&gt;.assignment,gJniNativeInterface = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>3014</SUB>> ]
+"14849" [label = <(&lt;operator&gt;.assignment,(*gJniSleepForeverStub[])() = {\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3254</SUB>> ]
+"15125" [label = <(UNKNOWN,},})<SUB>3504</SUB>> ]
+"571" [label = <(&lt;operator&gt;.assignment,kWarnJniAbort = false)<SUB>342</SUB>> ]
+"574" [label = <(UNKNOWN,template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldDenyAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (IsWhitelistedNativeCaller()) {\012 return false;\012 }\012 return hiddenapi::ShouldDenyAccessToMember(\012      member,\012 [&amp;]() REQUIRES_SHARED(Locks::mutator_lock_) {\012 // Construct AccessContext from the first calling class on stack.\012 // If the calling class cannot be determined, e.g. unattached threads,\012 // we conservatively assume the caller is trusted.\012 ObjPtr&lt;mirror::Class&gt; caller = GetCallingClass(self, /* num_frames */ 1);\012 return caller.IsNull() ? hiddenapi::AccessContext(/* is_trusted= */ true)\012 : hiddenapi::AccessContext(caller);\012 },\012      hiddenapi::AccessMethod::kJNI);\012},template&lt;typename T&gt;\012ALWAYS_INLINE static bool ShouldDenyAccessToMember(T* member, Thread* self)\012    REQUIRES_SHARED(Locks::mutator_lock_) {\012 if (IsWhitelistedNativeCaller()) {\012 return false;\012 }\012 return hiddenapi::ShouldDenyAccessToMember(\012      member,\012 [&amp;]() REQUIRES_SHARED(Locks::mutator_lock_) {\012 // Construct AccessContext from the first calling class on stack.\012 // If the calling class cannot be determined, e.g. unattached threads,\012 // we conservatively assume the caller is trusted.\012 ObjPtr&lt;mirror::Class&gt; caller = GetCallingClass(self, /* num_frames */ 1);\012 return caller.IsNull() ? hiddenapi::AccessContext(/* is_trusted= */ true)\012 : hiddenapi::AccessContext(caller);\012 },\012      hiddenapi::AccessMethod::kJNI);\012})<SUB>344</SUB>> ]
+"582" [label = <(UNKNOWN,),))<SUB>366</SUB>> ]
+"583" [label = <(UNKNOWN,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);,REQUIRES_SHARED(Locks::mutator_lock_) {\012  DCHECK_EQ(field-&gt;GetTypeAsPrimitiveType(), Primitive::kPrimNot);)<SUB>367</SUB>> ]
+"585" [label = <(&lt;operator&gt;.assignment,* instrumentation = Runtime::Current()-&gt;GetInstrumentation())<SUB>369</SUB>> ]
+"594" [label = <(UNKNOWN,if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 },if (UNLIKELY(instrumentation-&gt;HasFieldWriteListeners())) {\012 Thread* self = Thread::Current();\012 ArtMethod* cur_method = self-&gt;GetCurrentMethod(/*dex_pc=*/ nullptr,\012 /*check_suspended=*/ true,\012 /*abort_on_error=*/ false);\012\012 if (cur_method == nullptr) {\012 // Set/Get Fields can be issued without a method during runtime startup/teardown. Ignore all\012 // of these changes.\012 return;\012 }\012    DCHECK(cur_method-&gt;IsNative());\012 JValue val;\012    val.SetL(self-&gt;DecodeJObject(jval));\012    instrumentation-&gt;FieldWriteEvent(self,\012                                     self-&gt;DecodeJObject(obj).Ptr(),\012                                     cur_method,\012 0, // dex_pc is always 0 since this is a native method.\012                                     field,\012                                     val);\012 })<SUB>370</SUB>> ]
+"607" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>396</SUB>> ]
+"732" [label = <(NewHandle,hs.NewHandle(klass))<SUB>501</SUB>> ]
+"759" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>516</SUB>> ]
+"787" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::ClassLoader&gt;(Runtime::Current()-&gt;GetSystemClassLoader()))<SUB>545</SUB>> ]
+"820" [label = <(NewHandle,hs.NewHandle(EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class))))<SUB>567</SUB>> ]
+"847" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>573</SUB>> ]
+"13723" [label = <(GetClassRoot&lt;ArtArrayT&gt;,GetClassRoot&lt;ArtArrayT&gt;())<SUB>2882</SUB>> ]
+"13905" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>2942</SUB>> ]
+"13915" [label = <(&lt;operator&gt;.notEquals,array_data != elements)<SUB>2943</SUB>> ]
+"13921" [label = <(&lt;operator&gt;.multiplication,array-&gt;GetLength() * component_size)<SUB>2944</SUB>> ]
+"14146" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012  JNI::GetVersion,\012  JNI::DefineClass,\012  JNI::FindClass,\012  JNI::FromReflectedMethod,\012  JNI::FromReflectedField,\012  JNI::ToReflectedMethod,\012  JNI::GetSuperclass,\012  JNI::IsAssignableFrom,\012  JNI::ToReflectedField,\012  JNI::Throw,\012  JNI::ThrowNew,\012  JNI::ExceptionOccurred,\012  JNI::ExceptionDescribe,\012  JNI::ExceptionClear,\012  JNI::FatalError,\012  JNI::PushLocalFrame,\012  JNI::PopLocalFrame,\012  JNI::NewGlobalRef,\012  JNI::DeleteGlobalRef,\012  JNI::DeleteLocalRef,\012  JNI::IsSameObject,\012  JNI::NewLocalRef,\012  JNI::EnsureLocalCapacity,\012  JNI::AllocObject,\012  JNI::NewObject,\012  JNI::NewObjectV,\012  JNI::NewObjectA,\012  JNI::GetObjectClass,\012  JNI::IsInstanceOf,\012  JNI::GetMethodID,\012  JNI::CallObjectMethod,\012  JNI::CallObjectMethodV,\012  JNI::CallObjectMethodA,\012  JNI::CallBooleanMethod,\012  JNI::CallBooleanMethodV,\012  JNI::CallBooleanMethodA,\012  JNI::CallByteMethod,\012  JNI::CallByteMethodV,\012  JNI::CallByteMethodA,\012  JNI::CallCharMethod,\012  JNI::CallCharMethodV,\012  JNI::CallCharMethodA,\012  JNI::CallShortMethod,\012  JNI::CallShortMethodV,\012  JNI::CallShortMethodA,\012  JNI::CallIntMethod,\012  JNI::CallIntMethodV,\012  JNI::CallIntMethodA,\012  JNI::CallLongMethod,\012  JNI::CallLongMethodV,\012  JNI::CallLongMethodA,\012  JNI::CallFloatMethod,\012  JNI::CallFloatMethodV,\012  JNI::CallFloatMethodA,\012  JNI::CallDoubleMethod,\012  JNI::CallDoubleMethodV,\012  JNI::CallDoubleMethodA,\012  JNI::CallVoidMethod,\012  JNI::CallVoidMethodV,\012  JNI::CallVoidMethodA,\012  JNI::CallNonvirtualObjectMethod,\012  JNI::CallNonvirtualObjectMethodV,\012  JNI::CallNonvirtualObjectMethodA,\012  JNI::CallNonvirtualBooleanMethod,\012  JNI::CallNonvirtualBooleanMethodV,\012  JNI::CallNonvirtualBooleanMethodA,\012  JNI::CallNonvirtualByteMethod,\012  JNI::CallNonvirtualByteMethodV,\012  JNI::CallNonvirtualByteMethodA,\012  JNI::CallNonvirtualCharMethod,\012  JNI::CallNonvirtualCharMethodV,\012  JNI::CallNonvirtualCharMethodA,\012  JNI::CallNonvirtualShortMethod,\012  JNI::CallNonvirtualShortMethodV,\012  JNI::CallNonvirtualShortMethodA,\012  JNI::CallNonvirtualIntMethod,\012  JNI::CallNonvirtualIntMethodV,\012  JNI::CallNonvirtualIntMethodA,\012  JNI::CallNonvirtualLongMethod,\012  JNI::CallNonvirtualLongMethodV,\012  JNI::CallNonvirtualLongMethodA,\012  JNI::CallNonvirtualFloatMethod,\012  JNI::CallNonvirtualFloatMethodV,\012  JNI::CallNonvirtualFloatMethodA,\012  JNI::CallNonvirtualDoubleMethod,\012  JNI::CallNonvirtualDoubleMethodV,\012  JNI::CallNonvirtualDoubleMethodA,\012  JNI::CallNonvirtualVoidMethod,\012  JNI::CallNonvirtualVoidMethodV,\012  JNI::CallNonvirtualVoidMethodA,\012  JNI::GetFieldID,\012  JNI::GetObjectField,\012  JNI::GetBooleanField,\012  JNI::GetByteField,\012  JNI::GetCharField,\012  JNI::GetShortField,\012  JNI::GetIntField,\012  JNI::GetLongField,\012  JNI::GetFloatField,\012  JNI::GetDoubleField,\012  JNI::SetObjectField,\012  JNI::SetBooleanField,\012  JNI::SetByteField,\012  JNI::SetCharField,\012  JNI::SetShortField,\012  JNI::SetIntField,\012  JNI::SetLongField,\012  JNI::SetFloatField,\012  JNI::SetDoubleField,\012  JNI::GetStaticMethodID,\012  JNI::CallStaticObjectMethod,\012  JNI::CallStaticObjectMethodV,\012  JNI::CallStaticObjectMethodA,\012  JNI::CallStaticBooleanMethod,\012  JNI::CallStaticBooleanMethodV,\012  JNI::CallStaticBooleanMethodA,\012  JNI::CallStaticByteMethod,\012  JNI::CallStaticByteMethodV,\012  JNI::CallStaticByteMethodA,\012  JNI::CallStaticCharMethod,\012  JNI::CallStaticCharMethodV,\012  JNI::CallStaticCharMethodA,\012  JNI::CallStaticShortMethod,\012  JNI::CallStaticShortMethodV,\012  JNI::CallStaticShortMethodA,\012  JNI::CallStaticIntMethod,\012  JNI::CallStaticIntMethodV,\012  JNI::CallStaticIntMethodA,\012  JNI::CallStaticLongMethod,\012  JNI::CallStaticLongMethodV,\012  JNI::CallStaticLongMethodA,\012  JNI::CallStaticFloatMethod,\012  JNI::CallStaticFloatMethodV,\012  JNI::CallStaticFloatMethodA,\012  JNI::CallStaticDoubleMethod,\012  JNI::CallStaticDoubleMethodV,\012  JNI::CallStaticDoubleMethodA,\012  JNI::CallStaticVoidMethod,\012  JNI::CallStaticVoidMethodV,\012  JNI::CallStaticVoidMethodA,\012  JNI::GetStaticFieldID,\012  JNI::GetStaticObjectField,\012  JNI::GetStaticBooleanField,\012  JNI::GetStaticByteField,\012  JNI::GetStaticCharField,\012  JNI::GetStaticShortField,\012  JNI::GetStaticIntField,\012  JNI::GetStaticLongField,\012  JNI::GetStaticFloatField,\012  JNI::GetStaticDoubleField,\012  JNI::SetStaticObjectField,\012  JNI::SetStaticBooleanField,\012  JNI::SetStaticByteField,\012  JNI::SetStaticCharField,\012  JNI::SetStaticShortField,\012  JNI::SetStaticIntField,\012  JNI::SetStaticLongField,\012  JNI::SetStaticFloatField,\012  JNI::SetStaticDoubleField,\012  JNI::NewString,\012  JNI::GetStringLength,\012  JNI::GetStringChars,\012  JNI::ReleaseStringChars,\012  JNI::NewStringUTF,\012  JNI::GetStringUTFLength,\012  JNI::GetStringUTFChars,\012  JNI::ReleaseStringUTFChars,\012  JNI::GetArrayLength,\012  JNI::NewObjectArray,\012  JNI::GetObjectArrayElement,\012  JNI::SetObjectArrayElement,\012  JNI::NewBooleanArray,\012  JNI::NewByteArray,\012  JNI::NewCharArray,\012  JNI::NewShortArray,\012  JNI::NewIntArray,\012  JNI::NewLongArray,\012  JNI::NewFloatArray,\012  JNI::NewDoubleArray,\012  JNI::GetBooleanArrayElements,\012  JNI::GetByteArrayElements,\012  JNI::GetCharArrayElements,\012  JNI::GetShortArrayElements,\012  JNI::GetIntArrayElements,\012  JNI::GetLongArrayElements,\012  JNI::GetFloatArrayElements,\012  JNI::GetDoubleArrayElements,\012  JNI::ReleaseBooleanArrayElements,\012  JNI::ReleaseByteArrayElements,\012  JNI::ReleaseCharArrayElements,\012  JNI::ReleaseShortArrayElements,\012  JNI::ReleaseIntArrayElements,\012  JNI::ReleaseLongArrayElements,\012  JNI::ReleaseFloatArrayElements,\012  JNI::ReleaseDoubleArrayElements,\012  JNI::GetBooleanArrayRegion,\012  JNI::GetByteArrayRegion,\012  JNI::GetCharArrayRegion,\012  JNI::GetShortArrayRegion,\012  JNI::GetIntArrayRegion,\012  JNI::GetLongArrayRegion,\012  JNI::GetFloatArrayRegion,\012  JNI::GetDoubleArrayRegion,\012  JNI::SetBooleanArrayRegion,\012  JNI::SetByteArrayRegion,\012  JNI::SetCharArrayRegion,\012  JNI::SetShortArrayRegion,\012  JNI::SetIntArrayRegion,\012  JNI::SetLongArrayRegion,\012  JNI::SetFloatArrayRegion,\012  JNI::SetDoubleArrayRegion,\012  JNI::RegisterNatives,\012  JNI::UnregisterNatives,\012  JNI::MonitorEnter,\012  JNI::MonitorExit,\012  JNI::GetJavaVM,\012  JNI::GetStringRegion,\012  JNI::GetStringUTFRegion,\012  JNI::GetPrimitiveArrayCritical,\012  JNI::ReleasePrimitiveArrayCritical,\012  JNI::GetStringCritical,\012  JNI::ReleaseStringCritical,\012  JNI::NewWeakGlobalRef,\012  JNI::DeleteWeakGlobalRef,\012  JNI::ExceptionCheck,\012  JNI::NewDirectByteBuffer,\012  JNI::GetDirectBufferAddress,\012  JNI::GetDirectBufferCapacity,\012  JNI::GetObjectRefType,\012})<SUB>3014</SUB>> ]
+"14851" [label = <(&lt;operator&gt;.arrayInitializer,{\012 nullptr, // reserved0.\012 nullptr, // reserved1.\012 nullptr, // reserved2.\012 nullptr, // reserved3.\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012 SleepForever,\012})<SUB>3254</SUB>> ]
+"49" [label = <(&lt;operator&gt;.assignment,kBadUtf8ReplacementChar[] = &quot;?&quot;)<SUB>88</SUB>> ]
+"228" [label = <(&lt;operator&gt;.assignment,kMaxReturnAddressDepth = 4)<SUB>164</SUB>> ]
+"587" [label = <(GetInstrumentation,Runtime::Current()-&gt;GetInstrumentation())<SUB>369</SUB>> ]
+"608" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>396</SUB>> ]
+"733" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>501</SUB>> ]
+"760" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>516</SUB>> ]
+"788" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::ClassLoader)<SUB>545</SUB>> ]
+"795" [label = <(GetSystemClassLoader,Runtime::Current()-&gt;GetSystemClassLoader())<SUB>545</SUB>> ]
+"821" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>567</SUB>> ]
+"824" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(jni_class)))<SUB>567</SUB>> ]
+"848" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>573</SUB>> ]
+"13906" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>2942</SUB>> ]
+"13922" [label = <(GetLength,array-&gt;GetLength())<SUB>2944</SUB>> ]
+"14151" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetVersion)<SUB>3019</SUB>> ]
+"14154" [label = <(&lt;operator&gt;.fieldAccess,JNI::DefineClass)<SUB>3020</SUB>> ]
+"14157" [label = <(&lt;operator&gt;.fieldAccess,JNI::FindClass)<SUB>3021</SUB>> ]
+"14160" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedMethod)<SUB>3022</SUB>> ]
+"14163" [label = <(&lt;operator&gt;.fieldAccess,JNI::FromReflectedField)<SUB>3023</SUB>> ]
+"14166" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedMethod)<SUB>3024</SUB>> ]
+"14169" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetSuperclass)<SUB>3025</SUB>> ]
+"14172" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsAssignableFrom)<SUB>3026</SUB>> ]
+"14175" [label = <(&lt;operator&gt;.fieldAccess,JNI::ToReflectedField)<SUB>3027</SUB>> ]
+"14178" [label = <(&lt;operator&gt;.fieldAccess,JNI::Throw)<SUB>3028</SUB>> ]
+"14181" [label = <(&lt;operator&gt;.fieldAccess,JNI::ThrowNew)<SUB>3029</SUB>> ]
+"14184" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionOccurred)<SUB>3030</SUB>> ]
+"14187" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionDescribe)<SUB>3031</SUB>> ]
+"14190" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionClear)<SUB>3032</SUB>> ]
+"14193" [label = <(&lt;operator&gt;.fieldAccess,JNI::FatalError)<SUB>3033</SUB>> ]
+"14196" [label = <(&lt;operator&gt;.fieldAccess,JNI::PushLocalFrame)<SUB>3034</SUB>> ]
+"14199" [label = <(&lt;operator&gt;.fieldAccess,JNI::PopLocalFrame)<SUB>3035</SUB>> ]
+"14202" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewGlobalRef)<SUB>3036</SUB>> ]
+"14205" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteGlobalRef)<SUB>3037</SUB>> ]
+"14208" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteLocalRef)<SUB>3038</SUB>> ]
+"14211" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsSameObject)<SUB>3039</SUB>> ]
+"14214" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLocalRef)<SUB>3040</SUB>> ]
+"14217" [label = <(&lt;operator&gt;.fieldAccess,JNI::EnsureLocalCapacity)<SUB>3041</SUB>> ]
+"14220" [label = <(&lt;operator&gt;.fieldAccess,JNI::AllocObject)<SUB>3042</SUB>> ]
+"14223" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObject)<SUB>3043</SUB>> ]
+"14226" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectV)<SUB>3044</SUB>> ]
+"14229" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectA)<SUB>3045</SUB>> ]
+"14232" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectClass)<SUB>3046</SUB>> ]
+"14235" [label = <(&lt;operator&gt;.fieldAccess,JNI::IsInstanceOf)<SUB>3047</SUB>> ]
+"14238" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetMethodID)<SUB>3048</SUB>> ]
+"14241" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethod)<SUB>3049</SUB>> ]
+"14244" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodV)<SUB>3050</SUB>> ]
+"14247" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallObjectMethodA)<SUB>3051</SUB>> ]
+"14250" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethod)<SUB>3052</SUB>> ]
+"14253" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodV)<SUB>3053</SUB>> ]
+"14256" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallBooleanMethodA)<SUB>3054</SUB>> ]
+"14259" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethod)<SUB>3055</SUB>> ]
+"14262" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodV)<SUB>3056</SUB>> ]
+"14265" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallByteMethodA)<SUB>3057</SUB>> ]
+"14268" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethod)<SUB>3058</SUB>> ]
+"14271" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodV)<SUB>3059</SUB>> ]
+"14274" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallCharMethodA)<SUB>3060</SUB>> ]
+"14277" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethod)<SUB>3061</SUB>> ]
+"14280" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodV)<SUB>3062</SUB>> ]
+"14283" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallShortMethodA)<SUB>3063</SUB>> ]
+"14286" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethod)<SUB>3064</SUB>> ]
+"14289" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodV)<SUB>3065</SUB>> ]
+"14292" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallIntMethodA)<SUB>3066</SUB>> ]
+"14295" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethod)<SUB>3067</SUB>> ]
+"14298" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodV)<SUB>3068</SUB>> ]
+"14301" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallLongMethodA)<SUB>3069</SUB>> ]
+"14304" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethod)<SUB>3070</SUB>> ]
+"14307" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodV)<SUB>3071</SUB>> ]
+"14310" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallFloatMethodA)<SUB>3072</SUB>> ]
+"14313" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethod)<SUB>3073</SUB>> ]
+"14316" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodV)<SUB>3074</SUB>> ]
+"14319" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallDoubleMethodA)<SUB>3075</SUB>> ]
+"14322" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethod)<SUB>3076</SUB>> ]
+"14325" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodV)<SUB>3077</SUB>> ]
+"14328" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallVoidMethodA)<SUB>3078</SUB>> ]
+"14331" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethod)<SUB>3079</SUB>> ]
+"14334" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodV)<SUB>3080</SUB>> ]
+"14337" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualObjectMethodA)<SUB>3081</SUB>> ]
+"14340" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethod)<SUB>3082</SUB>> ]
+"14343" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodV)<SUB>3083</SUB>> ]
+"14346" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualBooleanMethodA)<SUB>3084</SUB>> ]
+"14349" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethod)<SUB>3085</SUB>> ]
+"14352" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodV)<SUB>3086</SUB>> ]
+"14355" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualByteMethodA)<SUB>3087</SUB>> ]
+"14358" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethod)<SUB>3088</SUB>> ]
+"14361" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodV)<SUB>3089</SUB>> ]
+"14364" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualCharMethodA)<SUB>3090</SUB>> ]
+"14367" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethod)<SUB>3091</SUB>> ]
+"14370" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodV)<SUB>3092</SUB>> ]
+"14373" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualShortMethodA)<SUB>3093</SUB>> ]
+"14376" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethod)<SUB>3094</SUB>> ]
+"14379" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodV)<SUB>3095</SUB>> ]
+"14382" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualIntMethodA)<SUB>3096</SUB>> ]
+"14385" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethod)<SUB>3097</SUB>> ]
+"14388" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodV)<SUB>3098</SUB>> ]
+"14391" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualLongMethodA)<SUB>3099</SUB>> ]
+"14394" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethod)<SUB>3100</SUB>> ]
+"14397" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodV)<SUB>3101</SUB>> ]
+"14400" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualFloatMethodA)<SUB>3102</SUB>> ]
+"14403" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethod)<SUB>3103</SUB>> ]
+"14406" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodV)<SUB>3104</SUB>> ]
+"14409" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualDoubleMethodA)<SUB>3105</SUB>> ]
+"14412" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethod)<SUB>3106</SUB>> ]
+"14415" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodV)<SUB>3107</SUB>> ]
+"14418" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallNonvirtualVoidMethodA)<SUB>3108</SUB>> ]
+"14421" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFieldID)<SUB>3109</SUB>> ]
+"14424" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectField)<SUB>3110</SUB>> ]
+"14427" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanField)<SUB>3111</SUB>> ]
+"14430" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteField)<SUB>3112</SUB>> ]
+"14433" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharField)<SUB>3113</SUB>> ]
+"14436" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortField)<SUB>3114</SUB>> ]
+"14439" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntField)<SUB>3115</SUB>> ]
+"14442" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongField)<SUB>3116</SUB>> ]
+"14445" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatField)<SUB>3117</SUB>> ]
+"14448" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleField)<SUB>3118</SUB>> ]
+"14451" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectField)<SUB>3119</SUB>> ]
+"14454" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanField)<SUB>3120</SUB>> ]
+"14457" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteField)<SUB>3121</SUB>> ]
+"14460" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharField)<SUB>3122</SUB>> ]
+"14463" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortField)<SUB>3123</SUB>> ]
+"14466" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntField)<SUB>3124</SUB>> ]
+"14469" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongField)<SUB>3125</SUB>> ]
+"14472" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatField)<SUB>3126</SUB>> ]
+"14475" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleField)<SUB>3127</SUB>> ]
+"14478" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticMethodID)<SUB>3128</SUB>> ]
+"14481" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethod)<SUB>3129</SUB>> ]
+"14484" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodV)<SUB>3130</SUB>> ]
+"14487" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticObjectMethodA)<SUB>3131</SUB>> ]
+"14490" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethod)<SUB>3132</SUB>> ]
+"14493" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodV)<SUB>3133</SUB>> ]
+"14496" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticBooleanMethodA)<SUB>3134</SUB>> ]
+"14499" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethod)<SUB>3135</SUB>> ]
+"14502" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodV)<SUB>3136</SUB>> ]
+"14505" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticByteMethodA)<SUB>3137</SUB>> ]
+"14508" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethod)<SUB>3138</SUB>> ]
+"14511" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodV)<SUB>3139</SUB>> ]
+"14514" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticCharMethodA)<SUB>3140</SUB>> ]
+"14517" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethod)<SUB>3141</SUB>> ]
+"14520" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodV)<SUB>3142</SUB>> ]
+"14523" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticShortMethodA)<SUB>3143</SUB>> ]
+"14526" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethod)<SUB>3144</SUB>> ]
+"14529" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodV)<SUB>3145</SUB>> ]
+"14532" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticIntMethodA)<SUB>3146</SUB>> ]
+"14535" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethod)<SUB>3147</SUB>> ]
+"14538" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodV)<SUB>3148</SUB>> ]
+"14541" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticLongMethodA)<SUB>3149</SUB>> ]
+"14544" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethod)<SUB>3150</SUB>> ]
+"14547" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodV)<SUB>3151</SUB>> ]
+"14550" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticFloatMethodA)<SUB>3152</SUB>> ]
+"14553" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethod)<SUB>3153</SUB>> ]
+"14556" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodV)<SUB>3154</SUB>> ]
+"14559" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticDoubleMethodA)<SUB>3155</SUB>> ]
+"14562" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethod)<SUB>3156</SUB>> ]
+"14565" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodV)<SUB>3157</SUB>> ]
+"14568" [label = <(&lt;operator&gt;.fieldAccess,JNI::CallStaticVoidMethodA)<SUB>3158</SUB>> ]
+"14571" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFieldID)<SUB>3159</SUB>> ]
+"14574" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticObjectField)<SUB>3160</SUB>> ]
+"14577" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticBooleanField)<SUB>3161</SUB>> ]
+"14580" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticByteField)<SUB>3162</SUB>> ]
+"14583" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticCharField)<SUB>3163</SUB>> ]
+"14586" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticShortField)<SUB>3164</SUB>> ]
+"14589" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticIntField)<SUB>3165</SUB>> ]
+"14592" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticLongField)<SUB>3166</SUB>> ]
+"14595" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticFloatField)<SUB>3167</SUB>> ]
+"14598" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStaticDoubleField)<SUB>3168</SUB>> ]
+"14601" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticObjectField)<SUB>3169</SUB>> ]
+"14604" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticBooleanField)<SUB>3170</SUB>> ]
+"14607" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticByteField)<SUB>3171</SUB>> ]
+"14610" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticCharField)<SUB>3172</SUB>> ]
+"14613" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticShortField)<SUB>3173</SUB>> ]
+"14616" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticIntField)<SUB>3174</SUB>> ]
+"14619" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticLongField)<SUB>3175</SUB>> ]
+"14622" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticFloatField)<SUB>3176</SUB>> ]
+"14625" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetStaticDoubleField)<SUB>3177</SUB>> ]
+"14628" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewString)<SUB>3178</SUB>> ]
+"14631" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringLength)<SUB>3179</SUB>> ]
+"14634" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringChars)<SUB>3180</SUB>> ]
+"14637" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringChars)<SUB>3181</SUB>> ]
+"14640" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewStringUTF)<SUB>3182</SUB>> ]
+"14643" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFLength)<SUB>3183</SUB>> ]
+"14646" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFChars)<SUB>3184</SUB>> ]
+"14649" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringUTFChars)<SUB>3185</SUB>> ]
+"14652" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetArrayLength)<SUB>3186</SUB>> ]
+"14655" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewObjectArray)<SUB>3187</SUB>> ]
+"14658" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectArrayElement)<SUB>3188</SUB>> ]
+"14661" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetObjectArrayElement)<SUB>3189</SUB>> ]
+"14664" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewBooleanArray)<SUB>3190</SUB>> ]
+"14667" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewByteArray)<SUB>3191</SUB>> ]
+"14670" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewCharArray)<SUB>3192</SUB>> ]
+"14673" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewShortArray)<SUB>3193</SUB>> ]
+"14676" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewIntArray)<SUB>3194</SUB>> ]
+"14679" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewLongArray)<SUB>3195</SUB>> ]
+"14682" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewFloatArray)<SUB>3196</SUB>> ]
+"14685" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDoubleArray)<SUB>3197</SUB>> ]
+"14688" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayElements)<SUB>3198</SUB>> ]
+"14691" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayElements)<SUB>3199</SUB>> ]
+"14694" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayElements)<SUB>3200</SUB>> ]
+"14697" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayElements)<SUB>3201</SUB>> ]
+"14700" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayElements)<SUB>3202</SUB>> ]
+"14703" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayElements)<SUB>3203</SUB>> ]
+"14706" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayElements)<SUB>3204</SUB>> ]
+"14709" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayElements)<SUB>3205</SUB>> ]
+"14712" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseBooleanArrayElements)<SUB>3206</SUB>> ]
+"14715" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseByteArrayElements)<SUB>3207</SUB>> ]
+"14718" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseCharArrayElements)<SUB>3208</SUB>> ]
+"14721" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseShortArrayElements)<SUB>3209</SUB>> ]
+"14724" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseIntArrayElements)<SUB>3210</SUB>> ]
+"14727" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseLongArrayElements)<SUB>3211</SUB>> ]
+"14730" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseFloatArrayElements)<SUB>3212</SUB>> ]
+"14733" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseDoubleArrayElements)<SUB>3213</SUB>> ]
+"14736" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetBooleanArrayRegion)<SUB>3214</SUB>> ]
+"14739" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetByteArrayRegion)<SUB>3215</SUB>> ]
+"14742" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetCharArrayRegion)<SUB>3216</SUB>> ]
+"14745" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetShortArrayRegion)<SUB>3217</SUB>> ]
+"14748" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetIntArrayRegion)<SUB>3218</SUB>> ]
+"14751" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetLongArrayRegion)<SUB>3219</SUB>> ]
+"14754" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetFloatArrayRegion)<SUB>3220</SUB>> ]
+"14757" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDoubleArrayRegion)<SUB>3221</SUB>> ]
+"14760" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetBooleanArrayRegion)<SUB>3222</SUB>> ]
+"14763" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetByteArrayRegion)<SUB>3223</SUB>> ]
+"14766" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetCharArrayRegion)<SUB>3224</SUB>> ]
+"14769" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetShortArrayRegion)<SUB>3225</SUB>> ]
+"14772" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetIntArrayRegion)<SUB>3226</SUB>> ]
+"14775" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetLongArrayRegion)<SUB>3227</SUB>> ]
+"14778" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetFloatArrayRegion)<SUB>3228</SUB>> ]
+"14781" [label = <(&lt;operator&gt;.fieldAccess,JNI::SetDoubleArrayRegion)<SUB>3229</SUB>> ]
+"14784" [label = <(&lt;operator&gt;.fieldAccess,JNI::RegisterNatives)<SUB>3230</SUB>> ]
+"14787" [label = <(&lt;operator&gt;.fieldAccess,JNI::UnregisterNatives)<SUB>3231</SUB>> ]
+"14790" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorEnter)<SUB>3232</SUB>> ]
+"14793" [label = <(&lt;operator&gt;.fieldAccess,JNI::MonitorExit)<SUB>3233</SUB>> ]
+"14796" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetJavaVM)<SUB>3234</SUB>> ]
+"14799" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringRegion)<SUB>3235</SUB>> ]
+"14802" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringUTFRegion)<SUB>3236</SUB>> ]
+"14805" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetPrimitiveArrayCritical)<SUB>3237</SUB>> ]
+"14808" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleasePrimitiveArrayCritical)<SUB>3238</SUB>> ]
+"14811" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetStringCritical)<SUB>3239</SUB>> ]
+"14814" [label = <(&lt;operator&gt;.fieldAccess,JNI::ReleaseStringCritical)<SUB>3240</SUB>> ]
+"14817" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewWeakGlobalRef)<SUB>3241</SUB>> ]
+"14820" [label = <(&lt;operator&gt;.fieldAccess,JNI::DeleteWeakGlobalRef)<SUB>3242</SUB>> ]
+"14823" [label = <(&lt;operator&gt;.fieldAccess,JNI::ExceptionCheck)<SUB>3243</SUB>> ]
+"14826" [label = <(&lt;operator&gt;.fieldAccess,JNI::NewDirectByteBuffer)<SUB>3244</SUB>> ]
+"14829" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferAddress)<SUB>3245</SUB>> ]
+"14832" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetDirectBufferCapacity)<SUB>3246</SUB>> ]
+"14835" [label = <(&lt;operator&gt;.fieldAccess,JNI::GetObjectRefType)<SUB>3247</SUB>> ]
+"588" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetInstrumentation)<SUB>369</SUB>> ]
+"609" [label = <(Runtime::Current,Runtime::Current())<SUB>396</SUB>> ]
+"613" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>396</SUB>> ]
+"735" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>501</SUB>> ]
+"761" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>516</SUB>> ]
+"768" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>516</SUB>> ]
+"789" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>545</SUB>> ]
+"792" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>545</SUB>> ]
+"796" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetSystemClassLoader)<SUB>545</SUB>> ]
+"823" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>567</SUB>> ]
+"825" [label = <(Self,soa.Self())<SUB>567</SUB>> ]
+"829" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(jni_class))<SUB>567</SUB>> ]
+"849" [label = <(Runtime::Current,Runtime::Current())<SUB>573</SUB>> ]
+"853" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>573</SUB>> ]
+"13907" [label = <(Runtime::Current,Runtime::Current())<SUB>2942</SUB>> ]
+"13911" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>2942</SUB>> ]
+"13923" [label = <(&lt;operator&gt;.indirectFieldAccess,array-&gt;GetLength)<SUB>2944</SUB>> ]
+"14153" [label = <(FIELD_IDENTIFIER,GetVersion,GetVersion)<SUB>3019</SUB>> ]
+"14156" [label = <(FIELD_IDENTIFIER,DefineClass,DefineClass)<SUB>3020</SUB>> ]
+"14159" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>3021</SUB>> ]
+"14162" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>3022</SUB>> ]
+"14165" [label = <(FIELD_IDENTIFIER,FromReflectedField,FromReflectedField)<SUB>3023</SUB>> ]
+"14168" [label = <(FIELD_IDENTIFIER,ToReflectedMethod,ToReflectedMethod)<SUB>3024</SUB>> ]
+"14171" [label = <(FIELD_IDENTIFIER,GetSuperclass,GetSuperclass)<SUB>3025</SUB>> ]
+"14174" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>3026</SUB>> ]
+"14177" [label = <(FIELD_IDENTIFIER,ToReflectedField,ToReflectedField)<SUB>3027</SUB>> ]
+"14180" [label = <(FIELD_IDENTIFIER,Throw,Throw)<SUB>3028</SUB>> ]
+"14183" [label = <(FIELD_IDENTIFIER,ThrowNew,ThrowNew)<SUB>3029</SUB>> ]
+"14186" [label = <(FIELD_IDENTIFIER,ExceptionOccurred,ExceptionOccurred)<SUB>3030</SUB>> ]
+"14189" [label = <(FIELD_IDENTIFIER,ExceptionDescribe,ExceptionDescribe)<SUB>3031</SUB>> ]
+"14192" [label = <(FIELD_IDENTIFIER,ExceptionClear,ExceptionClear)<SUB>3032</SUB>> ]
+"14195" [label = <(FIELD_IDENTIFIER,FatalError,FatalError)<SUB>3033</SUB>> ]
+"14198" [label = <(FIELD_IDENTIFIER,PushLocalFrame,PushLocalFrame)<SUB>3034</SUB>> ]
+"14201" [label = <(FIELD_IDENTIFIER,PopLocalFrame,PopLocalFrame)<SUB>3035</SUB>> ]
+"14204" [label = <(FIELD_IDENTIFIER,NewGlobalRef,NewGlobalRef)<SUB>3036</SUB>> ]
+"14207" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>3037</SUB>> ]
+"14210" [label = <(FIELD_IDENTIFIER,DeleteLocalRef,DeleteLocalRef)<SUB>3038</SUB>> ]
+"14213" [label = <(FIELD_IDENTIFIER,IsSameObject,IsSameObject)<SUB>3039</SUB>> ]
+"14216" [label = <(FIELD_IDENTIFIER,NewLocalRef,NewLocalRef)<SUB>3040</SUB>> ]
+"14219" [label = <(FIELD_IDENTIFIER,EnsureLocalCapacity,EnsureLocalCapacity)<SUB>3041</SUB>> ]
+"14222" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>3042</SUB>> ]
+"14225" [label = <(FIELD_IDENTIFIER,NewObject,NewObject)<SUB>3043</SUB>> ]
+"14228" [label = <(FIELD_IDENTIFIER,NewObjectV,NewObjectV)<SUB>3044</SUB>> ]
+"14231" [label = <(FIELD_IDENTIFIER,NewObjectA,NewObjectA)<SUB>3045</SUB>> ]
+"14234" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>3046</SUB>> ]
+"14237" [label = <(FIELD_IDENTIFIER,IsInstanceOf,IsInstanceOf)<SUB>3047</SUB>> ]
+"14240" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>3048</SUB>> ]
+"14243" [label = <(FIELD_IDENTIFIER,CallObjectMethod,CallObjectMethod)<SUB>3049</SUB>> ]
+"14246" [label = <(FIELD_IDENTIFIER,CallObjectMethodV,CallObjectMethodV)<SUB>3050</SUB>> ]
+"14249" [label = <(FIELD_IDENTIFIER,CallObjectMethodA,CallObjectMethodA)<SUB>3051</SUB>> ]
+"14252" [label = <(FIELD_IDENTIFIER,CallBooleanMethod,CallBooleanMethod)<SUB>3052</SUB>> ]
+"14255" [label = <(FIELD_IDENTIFIER,CallBooleanMethodV,CallBooleanMethodV)<SUB>3053</SUB>> ]
+"14258" [label = <(FIELD_IDENTIFIER,CallBooleanMethodA,CallBooleanMethodA)<SUB>3054</SUB>> ]
+"14261" [label = <(FIELD_IDENTIFIER,CallByteMethod,CallByteMethod)<SUB>3055</SUB>> ]
+"14264" [label = <(FIELD_IDENTIFIER,CallByteMethodV,CallByteMethodV)<SUB>3056</SUB>> ]
+"14267" [label = <(FIELD_IDENTIFIER,CallByteMethodA,CallByteMethodA)<SUB>3057</SUB>> ]
+"14270" [label = <(FIELD_IDENTIFIER,CallCharMethod,CallCharMethod)<SUB>3058</SUB>> ]
+"14273" [label = <(FIELD_IDENTIFIER,CallCharMethodV,CallCharMethodV)<SUB>3059</SUB>> ]
+"14276" [label = <(FIELD_IDENTIFIER,CallCharMethodA,CallCharMethodA)<SUB>3060</SUB>> ]
+"14279" [label = <(FIELD_IDENTIFIER,CallShortMethod,CallShortMethod)<SUB>3061</SUB>> ]
+"14282" [label = <(FIELD_IDENTIFIER,CallShortMethodV,CallShortMethodV)<SUB>3062</SUB>> ]
+"14285" [label = <(FIELD_IDENTIFIER,CallShortMethodA,CallShortMethodA)<SUB>3063</SUB>> ]
+"14288" [label = <(FIELD_IDENTIFIER,CallIntMethod,CallIntMethod)<SUB>3064</SUB>> ]
+"14291" [label = <(FIELD_IDENTIFIER,CallIntMethodV,CallIntMethodV)<SUB>3065</SUB>> ]
+"14294" [label = <(FIELD_IDENTIFIER,CallIntMethodA,CallIntMethodA)<SUB>3066</SUB>> ]
+"14297" [label = <(FIELD_IDENTIFIER,CallLongMethod,CallLongMethod)<SUB>3067</SUB>> ]
+"14300" [label = <(FIELD_IDENTIFIER,CallLongMethodV,CallLongMethodV)<SUB>3068</SUB>> ]
+"14303" [label = <(FIELD_IDENTIFIER,CallLongMethodA,CallLongMethodA)<SUB>3069</SUB>> ]
+"14306" [label = <(FIELD_IDENTIFIER,CallFloatMethod,CallFloatMethod)<SUB>3070</SUB>> ]
+"14309" [label = <(FIELD_IDENTIFIER,CallFloatMethodV,CallFloatMethodV)<SUB>3071</SUB>> ]
+"14312" [label = <(FIELD_IDENTIFIER,CallFloatMethodA,CallFloatMethodA)<SUB>3072</SUB>> ]
+"14315" [label = <(FIELD_IDENTIFIER,CallDoubleMethod,CallDoubleMethod)<SUB>3073</SUB>> ]
+"14318" [label = <(FIELD_IDENTIFIER,CallDoubleMethodV,CallDoubleMethodV)<SUB>3074</SUB>> ]
+"14321" [label = <(FIELD_IDENTIFIER,CallDoubleMethodA,CallDoubleMethodA)<SUB>3075</SUB>> ]
+"14324" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>3076</SUB>> ]
+"14327" [label = <(FIELD_IDENTIFIER,CallVoidMethodV,CallVoidMethodV)<SUB>3077</SUB>> ]
+"14330" [label = <(FIELD_IDENTIFIER,CallVoidMethodA,CallVoidMethodA)<SUB>3078</SUB>> ]
+"14333" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethod,CallNonvirtualObjectMethod)<SUB>3079</SUB>> ]
+"14336" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodV,CallNonvirtualObjectMethodV)<SUB>3080</SUB>> ]
+"14339" [label = <(FIELD_IDENTIFIER,CallNonvirtualObjectMethodA,CallNonvirtualObjectMethodA)<SUB>3081</SUB>> ]
+"14342" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethod,CallNonvirtualBooleanMethod)<SUB>3082</SUB>> ]
+"14345" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodV,CallNonvirtualBooleanMethodV)<SUB>3083</SUB>> ]
+"14348" [label = <(FIELD_IDENTIFIER,CallNonvirtualBooleanMethodA,CallNonvirtualBooleanMethodA)<SUB>3084</SUB>> ]
+"14351" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethod,CallNonvirtualByteMethod)<SUB>3085</SUB>> ]
+"14354" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodV,CallNonvirtualByteMethodV)<SUB>3086</SUB>> ]
+"14357" [label = <(FIELD_IDENTIFIER,CallNonvirtualByteMethodA,CallNonvirtualByteMethodA)<SUB>3087</SUB>> ]
+"14360" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethod,CallNonvirtualCharMethod)<SUB>3088</SUB>> ]
+"14363" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodV,CallNonvirtualCharMethodV)<SUB>3089</SUB>> ]
+"14366" [label = <(FIELD_IDENTIFIER,CallNonvirtualCharMethodA,CallNonvirtualCharMethodA)<SUB>3090</SUB>> ]
+"14369" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethod,CallNonvirtualShortMethod)<SUB>3091</SUB>> ]
+"14372" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodV,CallNonvirtualShortMethodV)<SUB>3092</SUB>> ]
+"14375" [label = <(FIELD_IDENTIFIER,CallNonvirtualShortMethodA,CallNonvirtualShortMethodA)<SUB>3093</SUB>> ]
+"14378" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethod,CallNonvirtualIntMethod)<SUB>3094</SUB>> ]
+"14381" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodV,CallNonvirtualIntMethodV)<SUB>3095</SUB>> ]
+"14384" [label = <(FIELD_IDENTIFIER,CallNonvirtualIntMethodA,CallNonvirtualIntMethodA)<SUB>3096</SUB>> ]
+"14387" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethod,CallNonvirtualLongMethod)<SUB>3097</SUB>> ]
+"14390" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodV,CallNonvirtualLongMethodV)<SUB>3098</SUB>> ]
+"14393" [label = <(FIELD_IDENTIFIER,CallNonvirtualLongMethodA,CallNonvirtualLongMethodA)<SUB>3099</SUB>> ]
+"14396" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethod,CallNonvirtualFloatMethod)<SUB>3100</SUB>> ]
+"14399" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodV,CallNonvirtualFloatMethodV)<SUB>3101</SUB>> ]
+"14402" [label = <(FIELD_IDENTIFIER,CallNonvirtualFloatMethodA,CallNonvirtualFloatMethodA)<SUB>3102</SUB>> ]
+"14405" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethod,CallNonvirtualDoubleMethod)<SUB>3103</SUB>> ]
+"14408" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodV,CallNonvirtualDoubleMethodV)<SUB>3104</SUB>> ]
+"14411" [label = <(FIELD_IDENTIFIER,CallNonvirtualDoubleMethodA,CallNonvirtualDoubleMethodA)<SUB>3105</SUB>> ]
+"14414" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethod,CallNonvirtualVoidMethod)<SUB>3106</SUB>> ]
+"14417" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV)<SUB>3107</SUB>> ]
+"14420" [label = <(FIELD_IDENTIFIER,CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA)<SUB>3108</SUB>> ]
+"14423" [label = <(FIELD_IDENTIFIER,GetFieldID,GetFieldID)<SUB>3109</SUB>> ]
+"14426" [label = <(FIELD_IDENTIFIER,GetObjectField,GetObjectField)<SUB>3110</SUB>> ]
+"14429" [label = <(FIELD_IDENTIFIER,GetBooleanField,GetBooleanField)<SUB>3111</SUB>> ]
+"14432" [label = <(FIELD_IDENTIFIER,GetByteField,GetByteField)<SUB>3112</SUB>> ]
+"14435" [label = <(FIELD_IDENTIFIER,GetCharField,GetCharField)<SUB>3113</SUB>> ]
+"14438" [label = <(FIELD_IDENTIFIER,GetShortField,GetShortField)<SUB>3114</SUB>> ]
+"14441" [label = <(FIELD_IDENTIFIER,GetIntField,GetIntField)<SUB>3115</SUB>> ]
+"14444" [label = <(FIELD_IDENTIFIER,GetLongField,GetLongField)<SUB>3116</SUB>> ]
+"14447" [label = <(FIELD_IDENTIFIER,GetFloatField,GetFloatField)<SUB>3117</SUB>> ]
+"14450" [label = <(FIELD_IDENTIFIER,GetDoubleField,GetDoubleField)<SUB>3118</SUB>> ]
+"14453" [label = <(FIELD_IDENTIFIER,SetObjectField,SetObjectField)<SUB>3119</SUB>> ]
+"14456" [label = <(FIELD_IDENTIFIER,SetBooleanField,SetBooleanField)<SUB>3120</SUB>> ]
+"14459" [label = <(FIELD_IDENTIFIER,SetByteField,SetByteField)<SUB>3121</SUB>> ]
+"14462" [label = <(FIELD_IDENTIFIER,SetCharField,SetCharField)<SUB>3122</SUB>> ]
+"14465" [label = <(FIELD_IDENTIFIER,SetShortField,SetShortField)<SUB>3123</SUB>> ]
+"14468" [label = <(FIELD_IDENTIFIER,SetIntField,SetIntField)<SUB>3124</SUB>> ]
+"14471" [label = <(FIELD_IDENTIFIER,SetLongField,SetLongField)<SUB>3125</SUB>> ]
+"14474" [label = <(FIELD_IDENTIFIER,SetFloatField,SetFloatField)<SUB>3126</SUB>> ]
+"14477" [label = <(FIELD_IDENTIFIER,SetDoubleField,SetDoubleField)<SUB>3127</SUB>> ]
+"14480" [label = <(FIELD_IDENTIFIER,GetStaticMethodID,GetStaticMethodID)<SUB>3128</SUB>> ]
+"14483" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethod,CallStaticObjectMethod)<SUB>3129</SUB>> ]
+"14486" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodV,CallStaticObjectMethodV)<SUB>3130</SUB>> ]
+"14489" [label = <(FIELD_IDENTIFIER,CallStaticObjectMethodA,CallStaticObjectMethodA)<SUB>3131</SUB>> ]
+"14492" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethod,CallStaticBooleanMethod)<SUB>3132</SUB>> ]
+"14495" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodV,CallStaticBooleanMethodV)<SUB>3133</SUB>> ]
+"14498" [label = <(FIELD_IDENTIFIER,CallStaticBooleanMethodA,CallStaticBooleanMethodA)<SUB>3134</SUB>> ]
+"14501" [label = <(FIELD_IDENTIFIER,CallStaticByteMethod,CallStaticByteMethod)<SUB>3135</SUB>> ]
+"14504" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodV,CallStaticByteMethodV)<SUB>3136</SUB>> ]
+"14507" [label = <(FIELD_IDENTIFIER,CallStaticByteMethodA,CallStaticByteMethodA)<SUB>3137</SUB>> ]
+"14510" [label = <(FIELD_IDENTIFIER,CallStaticCharMethod,CallStaticCharMethod)<SUB>3138</SUB>> ]
+"14513" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodV,CallStaticCharMethodV)<SUB>3139</SUB>> ]
+"14516" [label = <(FIELD_IDENTIFIER,CallStaticCharMethodA,CallStaticCharMethodA)<SUB>3140</SUB>> ]
+"14519" [label = <(FIELD_IDENTIFIER,CallStaticShortMethod,CallStaticShortMethod)<SUB>3141</SUB>> ]
+"14522" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodV,CallStaticShortMethodV)<SUB>3142</SUB>> ]
+"14525" [label = <(FIELD_IDENTIFIER,CallStaticShortMethodA,CallStaticShortMethodA)<SUB>3143</SUB>> ]
+"14528" [label = <(FIELD_IDENTIFIER,CallStaticIntMethod,CallStaticIntMethod)<SUB>3144</SUB>> ]
+"14531" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodV,CallStaticIntMethodV)<SUB>3145</SUB>> ]
+"14534" [label = <(FIELD_IDENTIFIER,CallStaticIntMethodA,CallStaticIntMethodA)<SUB>3146</SUB>> ]
+"14537" [label = <(FIELD_IDENTIFIER,CallStaticLongMethod,CallStaticLongMethod)<SUB>3147</SUB>> ]
+"14540" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodV,CallStaticLongMethodV)<SUB>3148</SUB>> ]
+"14543" [label = <(FIELD_IDENTIFIER,CallStaticLongMethodA,CallStaticLongMethodA)<SUB>3149</SUB>> ]
+"14546" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethod,CallStaticFloatMethod)<SUB>3150</SUB>> ]
+"14549" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodV,CallStaticFloatMethodV)<SUB>3151</SUB>> ]
+"14552" [label = <(FIELD_IDENTIFIER,CallStaticFloatMethodA,CallStaticFloatMethodA)<SUB>3152</SUB>> ]
+"14555" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethod,CallStaticDoubleMethod)<SUB>3153</SUB>> ]
+"14558" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodV,CallStaticDoubleMethodV)<SUB>3154</SUB>> ]
+"14561" [label = <(FIELD_IDENTIFIER,CallStaticDoubleMethodA,CallStaticDoubleMethodA)<SUB>3155</SUB>> ]
+"14564" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethod,CallStaticVoidMethod)<SUB>3156</SUB>> ]
+"14567" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodV,CallStaticVoidMethodV)<SUB>3157</SUB>> ]
+"14570" [label = <(FIELD_IDENTIFIER,CallStaticVoidMethodA,CallStaticVoidMethodA)<SUB>3158</SUB>> ]
+"14573" [label = <(FIELD_IDENTIFIER,GetStaticFieldID,GetStaticFieldID)<SUB>3159</SUB>> ]
+"14576" [label = <(FIELD_IDENTIFIER,GetStaticObjectField,GetStaticObjectField)<SUB>3160</SUB>> ]
+"14579" [label = <(FIELD_IDENTIFIER,GetStaticBooleanField,GetStaticBooleanField)<SUB>3161</SUB>> ]
+"14582" [label = <(FIELD_IDENTIFIER,GetStaticByteField,GetStaticByteField)<SUB>3162</SUB>> ]
+"14585" [label = <(FIELD_IDENTIFIER,GetStaticCharField,GetStaticCharField)<SUB>3163</SUB>> ]
+"14588" [label = <(FIELD_IDENTIFIER,GetStaticShortField,GetStaticShortField)<SUB>3164</SUB>> ]
+"14591" [label = <(FIELD_IDENTIFIER,GetStaticIntField,GetStaticIntField)<SUB>3165</SUB>> ]
+"14594" [label = <(FIELD_IDENTIFIER,GetStaticLongField,GetStaticLongField)<SUB>3166</SUB>> ]
+"14597" [label = <(FIELD_IDENTIFIER,GetStaticFloatField,GetStaticFloatField)<SUB>3167</SUB>> ]
+"14600" [label = <(FIELD_IDENTIFIER,GetStaticDoubleField,GetStaticDoubleField)<SUB>3168</SUB>> ]
+"14603" [label = <(FIELD_IDENTIFIER,SetStaticObjectField,SetStaticObjectField)<SUB>3169</SUB>> ]
+"14606" [label = <(FIELD_IDENTIFIER,SetStaticBooleanField,SetStaticBooleanField)<SUB>3170</SUB>> ]
+"14609" [label = <(FIELD_IDENTIFIER,SetStaticByteField,SetStaticByteField)<SUB>3171</SUB>> ]
+"14612" [label = <(FIELD_IDENTIFIER,SetStaticCharField,SetStaticCharField)<SUB>3172</SUB>> ]
+"14615" [label = <(FIELD_IDENTIFIER,SetStaticShortField,SetStaticShortField)<SUB>3173</SUB>> ]
+"14618" [label = <(FIELD_IDENTIFIER,SetStaticIntField,SetStaticIntField)<SUB>3174</SUB>> ]
+"14621" [label = <(FIELD_IDENTIFIER,SetStaticLongField,SetStaticLongField)<SUB>3175</SUB>> ]
+"14624" [label = <(FIELD_IDENTIFIER,SetStaticFloatField,SetStaticFloatField)<SUB>3176</SUB>> ]
+"14627" [label = <(FIELD_IDENTIFIER,SetStaticDoubleField,SetStaticDoubleField)<SUB>3177</SUB>> ]
+"14630" [label = <(FIELD_IDENTIFIER,NewString,NewString)<SUB>3178</SUB>> ]
+"14633" [label = <(FIELD_IDENTIFIER,GetStringLength,GetStringLength)<SUB>3179</SUB>> ]
+"14636" [label = <(FIELD_IDENTIFIER,GetStringChars,GetStringChars)<SUB>3180</SUB>> ]
+"14639" [label = <(FIELD_IDENTIFIER,ReleaseStringChars,ReleaseStringChars)<SUB>3181</SUB>> ]
+"14642" [label = <(FIELD_IDENTIFIER,NewStringUTF,NewStringUTF)<SUB>3182</SUB>> ]
+"14645" [label = <(FIELD_IDENTIFIER,GetStringUTFLength,GetStringUTFLength)<SUB>3183</SUB>> ]
+"14648" [label = <(FIELD_IDENTIFIER,GetStringUTFChars,GetStringUTFChars)<SUB>3184</SUB>> ]
+"14651" [label = <(FIELD_IDENTIFIER,ReleaseStringUTFChars,ReleaseStringUTFChars)<SUB>3185</SUB>> ]
+"14654" [label = <(FIELD_IDENTIFIER,GetArrayLength,GetArrayLength)<SUB>3186</SUB>> ]
+"14657" [label = <(FIELD_IDENTIFIER,NewObjectArray,NewObjectArray)<SUB>3187</SUB>> ]
+"14660" [label = <(FIELD_IDENTIFIER,GetObjectArrayElement,GetObjectArrayElement)<SUB>3188</SUB>> ]
+"14663" [label = <(FIELD_IDENTIFIER,SetObjectArrayElement,SetObjectArrayElement)<SUB>3189</SUB>> ]
+"14666" [label = <(FIELD_IDENTIFIER,NewBooleanArray,NewBooleanArray)<SUB>3190</SUB>> ]
+"14669" [label = <(FIELD_IDENTIFIER,NewByteArray,NewByteArray)<SUB>3191</SUB>> ]
+"14672" [label = <(FIELD_IDENTIFIER,NewCharArray,NewCharArray)<SUB>3192</SUB>> ]
+"14675" [label = <(FIELD_IDENTIFIER,NewShortArray,NewShortArray)<SUB>3193</SUB>> ]
+"14678" [label = <(FIELD_IDENTIFIER,NewIntArray,NewIntArray)<SUB>3194</SUB>> ]
+"14681" [label = <(FIELD_IDENTIFIER,NewLongArray,NewLongArray)<SUB>3195</SUB>> ]
+"14684" [label = <(FIELD_IDENTIFIER,NewFloatArray,NewFloatArray)<SUB>3196</SUB>> ]
+"14687" [label = <(FIELD_IDENTIFIER,NewDoubleArray,NewDoubleArray)<SUB>3197</SUB>> ]
+"14690" [label = <(FIELD_IDENTIFIER,GetBooleanArrayElements,GetBooleanArrayElements)<SUB>3198</SUB>> ]
+"14693" [label = <(FIELD_IDENTIFIER,GetByteArrayElements,GetByteArrayElements)<SUB>3199</SUB>> ]
+"14696" [label = <(FIELD_IDENTIFIER,GetCharArrayElements,GetCharArrayElements)<SUB>3200</SUB>> ]
+"14699" [label = <(FIELD_IDENTIFIER,GetShortArrayElements,GetShortArrayElements)<SUB>3201</SUB>> ]
+"14702" [label = <(FIELD_IDENTIFIER,GetIntArrayElements,GetIntArrayElements)<SUB>3202</SUB>> ]
+"14705" [label = <(FIELD_IDENTIFIER,GetLongArrayElements,GetLongArrayElements)<SUB>3203</SUB>> ]
+"14708" [label = <(FIELD_IDENTIFIER,GetFloatArrayElements,GetFloatArrayElements)<SUB>3204</SUB>> ]
+"14711" [label = <(FIELD_IDENTIFIER,GetDoubleArrayElements,GetDoubleArrayElements)<SUB>3205</SUB>> ]
+"14714" [label = <(FIELD_IDENTIFIER,ReleaseBooleanArrayElements,ReleaseBooleanArrayElements)<SUB>3206</SUB>> ]
+"14717" [label = <(FIELD_IDENTIFIER,ReleaseByteArrayElements,ReleaseByteArrayElements)<SUB>3207</SUB>> ]
+"14720" [label = <(FIELD_IDENTIFIER,ReleaseCharArrayElements,ReleaseCharArrayElements)<SUB>3208</SUB>> ]
+"14723" [label = <(FIELD_IDENTIFIER,ReleaseShortArrayElements,ReleaseShortArrayElements)<SUB>3209</SUB>> ]
+"14726" [label = <(FIELD_IDENTIFIER,ReleaseIntArrayElements,ReleaseIntArrayElements)<SUB>3210</SUB>> ]
+"14729" [label = <(FIELD_IDENTIFIER,ReleaseLongArrayElements,ReleaseLongArrayElements)<SUB>3211</SUB>> ]
+"14732" [label = <(FIELD_IDENTIFIER,ReleaseFloatArrayElements,ReleaseFloatArrayElements)<SUB>3212</SUB>> ]
+"14735" [label = <(FIELD_IDENTIFIER,ReleaseDoubleArrayElements,ReleaseDoubleArrayElements)<SUB>3213</SUB>> ]
+"14738" [label = <(FIELD_IDENTIFIER,GetBooleanArrayRegion,GetBooleanArrayRegion)<SUB>3214</SUB>> ]
+"14741" [label = <(FIELD_IDENTIFIER,GetByteArrayRegion,GetByteArrayRegion)<SUB>3215</SUB>> ]
+"14744" [label = <(FIELD_IDENTIFIER,GetCharArrayRegion,GetCharArrayRegion)<SUB>3216</SUB>> ]
+"14747" [label = <(FIELD_IDENTIFIER,GetShortArrayRegion,GetShortArrayRegion)<SUB>3217</SUB>> ]
+"14750" [label = <(FIELD_IDENTIFIER,GetIntArrayRegion,GetIntArrayRegion)<SUB>3218</SUB>> ]
+"14753" [label = <(FIELD_IDENTIFIER,GetLongArrayRegion,GetLongArrayRegion)<SUB>3219</SUB>> ]
+"14756" [label = <(FIELD_IDENTIFIER,GetFloatArrayRegion,GetFloatArrayRegion)<SUB>3220</SUB>> ]
+"14759" [label = <(FIELD_IDENTIFIER,GetDoubleArrayRegion,GetDoubleArrayRegion)<SUB>3221</SUB>> ]
+"14762" [label = <(FIELD_IDENTIFIER,SetBooleanArrayRegion,SetBooleanArrayRegion)<SUB>3222</SUB>> ]
+"14765" [label = <(FIELD_IDENTIFIER,SetByteArrayRegion,SetByteArrayRegion)<SUB>3223</SUB>> ]
+"14768" [label = <(FIELD_IDENTIFIER,SetCharArrayRegion,SetCharArrayRegion)<SUB>3224</SUB>> ]
+"14771" [label = <(FIELD_IDENTIFIER,SetShortArrayRegion,SetShortArrayRegion)<SUB>3225</SUB>> ]
+"14774" [label = <(FIELD_IDENTIFIER,SetIntArrayRegion,SetIntArrayRegion)<SUB>3226</SUB>> ]
+"14777" [label = <(FIELD_IDENTIFIER,SetLongArrayRegion,SetLongArrayRegion)<SUB>3227</SUB>> ]
+"14780" [label = <(FIELD_IDENTIFIER,SetFloatArrayRegion,SetFloatArrayRegion)<SUB>3228</SUB>> ]
+"14783" [label = <(FIELD_IDENTIFIER,SetDoubleArrayRegion,SetDoubleArrayRegion)<SUB>3229</SUB>> ]
+"14786" [label = <(FIELD_IDENTIFIER,RegisterNatives,RegisterNatives)<SUB>3230</SUB>> ]
+"14789" [label = <(FIELD_IDENTIFIER,UnregisterNatives,UnregisterNatives)<SUB>3231</SUB>> ]
+"14792" [label = <(FIELD_IDENTIFIER,MonitorEnter,MonitorEnter)<SUB>3232</SUB>> ]
+"14795" [label = <(FIELD_IDENTIFIER,MonitorExit,MonitorExit)<SUB>3233</SUB>> ]
+"14798" [label = <(FIELD_IDENTIFIER,GetJavaVM,GetJavaVM)<SUB>3234</SUB>> ]
+"14801" [label = <(FIELD_IDENTIFIER,GetStringRegion,GetStringRegion)<SUB>3235</SUB>> ]
+"14804" [label = <(FIELD_IDENTIFIER,GetStringUTFRegion,GetStringUTFRegion)<SUB>3236</SUB>> ]
+"14807" [label = <(FIELD_IDENTIFIER,GetPrimitiveArrayCritical,GetPrimitiveArrayCritical)<SUB>3237</SUB>> ]
+"14810" [label = <(FIELD_IDENTIFIER,ReleasePrimitiveArrayCritical,ReleasePrimitiveArrayCritical)<SUB>3238</SUB>> ]
+"14813" [label = <(FIELD_IDENTIFIER,GetStringCritical,GetStringCritical)<SUB>3239</SUB>> ]
+"14816" [label = <(FIELD_IDENTIFIER,ReleaseStringCritical,ReleaseStringCritical)<SUB>3240</SUB>> ]
+"14819" [label = <(FIELD_IDENTIFIER,NewWeakGlobalRef,NewWeakGlobalRef)<SUB>3241</SUB>> ]
+"14822" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>3242</SUB>> ]
+"14825" [label = <(FIELD_IDENTIFIER,ExceptionCheck,ExceptionCheck)<SUB>3243</SUB>> ]
+"14828" [label = <(FIELD_IDENTIFIER,NewDirectByteBuffer,NewDirectByteBuffer)<SUB>3244</SUB>> ]
+"14831" [label = <(FIELD_IDENTIFIER,GetDirectBufferAddress,GetDirectBufferAddress)<SUB>3245</SUB>> ]
+"14834" [label = <(FIELD_IDENTIFIER,GetDirectBufferCapacity,GetDirectBufferCapacity)<SUB>3246</SUB>> ]
+"14837" [label = <(FIELD_IDENTIFIER,GetObjectRefType,GetObjectRefType)<SUB>3247</SUB>> ]
+"589" [label = <(Runtime::Current,Runtime::Current())<SUB>369</SUB>> ]
+"593" [label = <(FIELD_IDENTIFIER,GetInstrumentation,GetInstrumentation)<SUB>369</SUB>> ]
+"610" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>396</SUB>> ]
+"762" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>516</SUB>> ]
+"791" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>545</SUB>> ]
+"794" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>545</SUB>> ]
+"797" [label = <(Runtime::Current,Runtime::Current())<SUB>545</SUB>> ]
+"801" [label = <(FIELD_IDENTIFIER,GetSystemClassLoader,GetSystemClassLoader)<SUB>545</SUB>> ]
+"826" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>567</SUB>> ]
+"830" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>567</SUB>> ]
+"850" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>573</SUB>> ]
+"13908" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>2942</SUB>> ]
+"13925" [label = <(FIELD_IDENTIFIER,GetLength,GetLength)<SUB>2944</SUB>> ]
+"590" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>369</SUB>> ]
+"612" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>396</SUB>> ]
+"763" [label = <(Runtime::Current,Runtime::Current())<SUB>516</SUB>> ]
+"767" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>516</SUB>> ]
+"798" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>545</SUB>> ]
+"828" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>567</SUB>> ]
+"831" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>567</SUB>> ]
+"834" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>567</SUB>> ]
+"852" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>573</SUB>> ]
+"13910" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>2942</SUB>> ]
+"592" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>369</SUB>> ]
+"764" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>516</SUB>> ]
+"800" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>545</SUB>> ]
+"833" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>567</SUB>> ]
+"836" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>567</SUB>> ]
+"766" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>516</SUB>> ]
 "20" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"15178" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+"15175" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
   "602" -> "603" 
   "603" -> "612" 
   "605" -> "614" 
@@ -703,27 +703,27 @@
   "919" -> "920" 
   "920" -> "921" 
   "921" -> "922" 
-  "922" -> "13665" 
-  "13665" -> "13721" 
-  "13721" -> "13722" 
-  "13722" -> "13726" 
-  "13724" -> "13727" 
-  "13727" -> "13728" 
-  "13728" -> "13729" 
-  "13729" -> "13730" 
-  "13730" -> "13903" 
-  "13903" -> "13904" 
-  "13904" -> "13913" 
-  "13906" -> "13918" 
-  "13916" -> "13928" 
-  "13922" -> "13930" 
-  "13930" -> "13931" 
-  "13931" -> "13932" 
-  "13932" -> "14145" 
-  "14145" -> "14156" 
-  "14147" -> "14854" 
-  "14852" -> "15128" 
-  "15128" -> "15178" 
+  "922" -> "13662" 
+  "13662" -> "13718" 
+  "13718" -> "13719" 
+  "13719" -> "13723" 
+  "13721" -> "13724" 
+  "13724" -> "13725" 
+  "13725" -> "13726" 
+  "13726" -> "13727" 
+  "13727" -> "13900" 
+  "13900" -> "13901" 
+  "13901" -> "13910" 
+  "13903" -> "13915" 
+  "13913" -> "13925" 
+  "13919" -> "13927" 
+  "13927" -> "13928" 
+  "13928" -> "13929" 
+  "13929" -> "14142" 
+  "14142" -> "14153" 
+  "14144" -> "14851" 
+  "14849" -> "15125" 
+  "15125" -> "15175" 
   "571" -> "574" 
   "574" -> "582" 
   "582" -> "583" 
@@ -736,12 +736,12 @@
   "787" -> "785" 
   "820" -> "819" 
   "847" -> "845" 
-  "13726" -> "13724" 
-  "13908" -> "13906" 
-  "13918" -> "13916" 
-  "13924" -> "13922" 
-  "14149" -> "14147" 
-  "14854" -> "14852" 
+  "13723" -> "13721" 
+  "13905" -> "13903" 
+  "13915" -> "13913" 
+  "13921" -> "13919" 
+  "14146" -> "14144" 
+  "14851" -> "14849" 
   "49" -> "228" 
   "228" -> "571" 
   "587" -> "585" 
@@ -753,8 +753,9 @@
   "821" -> "828" 
   "824" -> "820" 
   "848" -> "847" 
-  "13909" -> "13908" 
-  "13925" -> "13924" 
+  "13906" -> "13905" 
+  "13922" -> "13921" 
+  "14151" -> "14156" 
   "14154" -> "14159" 
   "14157" -> "14162" 
   "14160" -> "14165" 
@@ -982,8 +983,7 @@
   "14826" -> "14831" 
   "14829" -> "14834" 
   "14832" -> "14837" 
-  "14835" -> "14840" 
-  "14838" -> "14149" 
+  "14835" -> "14146" 
   "588" -> "587" 
   "609" -> "613" 
   "613" -> "608" 
@@ -998,9 +998,10 @@
   "829" -> "824" 
   "849" -> "853" 
   "853" -> "848" 
-  "13910" -> "13914" 
-  "13914" -> "13909" 
-  "13926" -> "13925" 
+  "13907" -> "13911" 
+  "13911" -> "13906" 
+  "13923" -> "13922" 
+  "14153" -> "14151" 
   "14156" -> "14154" 
   "14159" -> "14157" 
   "14162" -> "14160" 
@@ -1229,7 +1230,6 @@
   "14831" -> "14829" 
   "14834" -> "14832" 
   "14837" -> "14835" 
-  "14840" -> "14838" 
   "589" -> "593" 
   "593" -> "588" 
   "610" -> "609" 
@@ -1241,8 +1241,8 @@
   "826" -> "825" 
   "830" -> "829" 
   "850" -> "849" 
-  "13911" -> "13910" 
-  "13928" -> "13926" 
+  "13908" -> "13907" 
+  "13925" -> "13923" 
   "590" -> "589" 
   "612" -> "610" 
   "763" -> "767" 
@@ -1252,7 +1252,7 @@
   "831" -> "836" 
   "834" -> "830" 
   "852" -> "850" 
-  "13913" -> "13911" 
+  "13910" -> "13908" 
   "592" -> "590" 
   "764" -> "763" 
   "800" -> "798" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/30-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/30-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/30-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/30-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,5 +1,5 @@
 digraph "FindMethodID" {  
-"740" [label = <(METHOD,FindMethodID)<SUB>509</SUB>> ]
-"747" [label = <(METHOD_RETURN,jmethodID)<SUB>509</SUB>> ]
+"740" [label = <(METHOD,FindMethodID)<SUB>508</SUB>> ]
+"747" [label = <(METHOD_RETURN,jmethodID)<SUB>508</SUB>> ]
   "740" -> "747" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/300-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/300-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/300-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/300-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK_LT" {  
-"15529" [label = <(METHOD,DCHECK_LT)> ]
-"15533" [label = <(METHOD_RETURN,ANY)> ]
-  "15529" -> "15533" 
+"15526" [label = <(METHOD,DCHECK_LT)> ]
+"15530" [label = <(METHOD_RETURN,ANY)> ]
+  "15526" -> "15530" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/301-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/301-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/301-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/301-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "__builtin_return_address" {  
-"15534" [label = <(METHOD,__builtin_return_address)> ]
-"15537" [label = <(METHOD_RETURN,ANY)> ]
-  "15534" -> "15537" 
+"15531" [label = <(METHOD,__builtin_return_address)> ]
+"15534" [label = <(METHOD_RETURN,ANY)> ]
+  "15531" -> "15534" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/302-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/302-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/302-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/302-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.shiftLeft" {  
-"15538" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
-"15542" [label = <(METHOD_RETURN,ANY)> ]
-  "15538" -> "15542" 
+"15535" [label = <(METHOD,&lt;operator&gt;.shiftLeft)> ]
+"15539" [label = <(METHOD_RETURN,ANY)> ]
+  "15535" -> "15539" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/303-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/303-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/303-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/303-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "Find" {  
-"15543" [label = <(METHOD,Find)> ]
-"15547" [label = <(METHOD_RETURN,ANY)> ]
-  "15543" -> "15547" 
+"15540" [label = <(METHOD,Find)> ]
+"15544" [label = <(METHOD_RETURN,ANY)> ]
+  "15540" -> "15544" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/304-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/304-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/304-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/304-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addressOf" {  
-"15548" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
-"15551" [label = <(METHOD_RETURN,ANY)> ]
-  "15548" -> "15551" 
+"15545" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
+"15548" [label = <(METHOD_RETURN,ANY)> ]
+  "15545" -> "15548" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/305-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/305-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/305-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/305-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "Size" {  
-"15552" [label = <(METHOD,Size)> ]
-"15555" [label = <(METHOD_RETURN,ANY)> ]
-  "15552" -> "15555" 
+"15549" [label = <(METHOD,Size)> ]
+"15552" [label = <(METHOD_RETURN,ANY)> ]
+  "15549" -> "15552" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/306-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/306-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/306-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/306-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK" {  
-"15556" [label = <(METHOD,DCHECK)> ]
-"15559" [label = <(METHOD_RETURN,ANY)> ]
-  "15556" -> "15559" 
+"15553" [label = <(METHOD,DCHECK)> ]
+"15556" [label = <(METHOD_RETURN,ANY)> ]
+  "15553" -> "15556" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/307-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/307-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/307-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/307-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalNot" {  
-"15560" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
-"15563" [label = <(METHOD_RETURN,ANY)> ]
-  "15560" -> "15563" 
+"15557" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
+"15560" [label = <(METHOD_RETURN,ANY)> ]
+  "15557" -> "15560" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/308-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/308-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/308-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/308-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "HasCache" {  
-"15564" [label = <(METHOD,HasCache)> ]
-"15567" [label = <(METHOD_RETURN,ANY)> ]
-  "15564" -> "15567" 
+"15561" [label = <(METHOD,HasCache)> ]
+"15564" [label = <(METHOD_RETURN,ANY)> ]
+  "15561" -> "15564" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/309-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/309-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/309-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/309-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "dl_iterate_phdr" {  
-"15568" [label = <(METHOD,dl_iterate_phdr)> ]
-"15572" [label = <(METHOD_RETURN,ANY)> ]
-  "15568" -> "15572" 
+"15565" [label = <(METHOD,dl_iterate_phdr)> ]
+"15569" [label = <(METHOD_RETURN,ANY)> ]
+  "15565" -> "15569" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/31-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/31-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/31-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/31-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,5 +1,5 @@
 digraph "GetClassLoader" {  
-"775" [label = <(METHOD,GetClassLoader)<SUB>533</SUB>> ]
-"778" [label = <(METHOD_RETURN,ANY)<SUB>533</SUB>> ]
+"775" [label = <(METHOD,GetClassLoader)<SUB>532</SUB>> ]
+"778" [label = <(METHOD_RETURN,ANY)<SUB>532</SUB>> ]
   "775" -> "778" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/310-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/310-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/310-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/310-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "Build" {  
-"15573" [label = <(METHOD,Build)> ]
-"15576" [label = <(METHOD_RETURN,ANY)> ]
-  "15573" -> "15576" 
+"15570" [label = <(METHOD,Build)> ]
+"15573" [label = <(METHOD_RETURN,ANY)> ]
+  "15570" -> "15573" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/311-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/311-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/311-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/311-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectFieldAccess" {  
-"15577" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
-"15581" [label = <(METHOD_RETURN,ANY)> ]
-  "15577" -> "15581" 
+"15574" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
+"15578" [label = <(METHOD_RETURN,ANY)> ]
+  "15574" -> "15578" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/312-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/312-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/312-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/312-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK" {  
-"15582" [label = <(METHOD,CHECK)> ]
-"15585" [label = <(METHOD_RETURN,ANY)> ]
-  "15582" -> "15585" 
+"15579" [label = <(METHOD,CHECK)> ]
+"15582" [label = <(METHOD_RETURN,ANY)> ]
+  "15579" -> "15582" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/313-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/313-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/313-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/313-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "Lookup" {  
-"15586" [label = <(METHOD,Lookup)> ]
-"15590" [label = <(METHOD_RETURN,ANY)> ]
-  "15586" -> "15590" 
+"15583" [label = <(METHOD,Lookup)> ]
+"15587" [label = <(METHOD_RETURN,ANY)> ]
+  "15583" -> "15587" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/314-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/314-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/314-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/314-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "Type" {  
-"15591" [label = <(METHOD,Type)> ]
-"15594" [label = <(METHOD_RETURN,ANY)> ]
-  "15591" -> "15594" 
+"15588" [label = <(METHOD,Type)> ]
+"15591" [label = <(METHOD_RETURN,ANY)> ]
+  "15588" -> "15591" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/315-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/315-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/315-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/315-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterEqualsThan" {  
-"15595" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
-"15599" [label = <(METHOD_RETURN,ANY)> ]
-  "15595" -> "15599" 
+"15592" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
+"15596" [label = <(METHOD_RETURN,ANY)> ]
+  "15592" -> "15596" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/316-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/316-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/316-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/316-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "art::LocationIsOnApex" {  
-"15600" [label = <(METHOD,art::LocationIsOnApex)> ]
-"15604" [label = <(METHOD_RETURN,ANY)> ]
-  "15600" -> "15604" 
+"15597" [label = <(METHOD,art::LocationIsOnApex)> ]
+"15601" [label = <(METHOD_RETURN,ANY)> ]
+  "15597" -> "15601" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/317-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/317-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/317-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/317-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.preIncrement" {  
-"15605" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
-"15608" [label = <(METHOD_RETURN,ANY)> ]
-  "15605" -> "15608" 
+"15602" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
+"15605" [label = <(METHOD_RETURN,ANY)> ]
+  "15602" -> "15605" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/318-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/318-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/318-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/318-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "GetReturnAddress" {  
-"15609" [label = <(METHOD,GetReturnAddress)> ]
-"15612" [label = <(METHOD_RETURN,ANY)> ]
-  "15609" -> "15612" 
+"15606" [label = <(METHOD,GetReturnAddress)> ]
+"15609" [label = <(METHOD_RETURN,ANY)> ]
+  "15606" -> "15609" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/319-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/319-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/319-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/319-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "GetSharedObjectKind" {  
-"15613" [label = <(METHOD,GetSharedObjectKind)> ]
-"15617" [label = <(METHOD_RETURN,ANY)> ]
-  "15613" -> "15617" 
+"15610" [label = <(METHOD,GetSharedObjectKind)> ]
+"15614" [label = <(METHOD_RETURN,ANY)> ]
+  "15610" -> "15614" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/32-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/32-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/32-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/32-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,5 +1,5 @@
 digraph "FindFieldID" {  
-"807" [label = <(METHOD,FindFieldID)<SUB>563</SUB>> ]
-"814" [label = <(METHOD_RETURN,jfieldID)<SUB>563</SUB>> ]
+"807" [label = <(METHOD,FindFieldID)<SUB>562</SUB>> ]
+"814" [label = <(METHOD_RETURN,jfieldID)<SUB>562</SUB>> ]
   "807" -> "814" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/320-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/320-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/320-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/320-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "CodeRangeCache::GetSingleton" {  
-"15618" [label = <(METHOD,CodeRangeCache::GetSingleton)> ]
-"15621" [label = <(METHOD_RETURN,ANY)> ]
-  "15618" -> "15621" 
+"15615" [label = <(METHOD,CodeRangeCache::GetSingleton)> ]
+"15618" [label = <(METHOD_RETURN,ANY)> ]
+  "15615" -> "15618" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/321-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/321-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/321-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/321-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "GetInstrumentation" {  
-"15622" [label = <(METHOD,GetInstrumentation)> ]
-"15625" [label = <(METHOD_RETURN,ANY)> ]
-  "15622" -> "15625" 
+"15619" [label = <(METHOD,GetInstrumentation)> ]
+"15622" [label = <(METHOD_RETURN,ANY)> ]
+  "15619" -> "15622" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/322-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/322-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/322-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/322-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "Runtime::Current" {  
-"15626" [label = <(METHOD,Runtime::Current)> ]
-"15629" [label = <(METHOD_RETURN,ANY)> ]
-  "15626" -> "15629" 
+"15623" [label = <(METHOD,Runtime::Current)> ]
+"15626" [label = <(METHOD_RETURN,ANY)> ]
+  "15623" -> "15626" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/323-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/323-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/323-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/323-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectIndexAccess" {  
-"15630" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
-"15634" [label = <(METHOD_RETURN,ANY)> ]
-  "15630" -> "15634" 
+"15627" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
+"15631" [label = <(METHOD_RETURN,ANY)> ]
+  "15627" -> "15631" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/324-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/324-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/324-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/324-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "find" {  
-"15635" [label = <(METHOD,find)> ]
-"15639" [label = <(METHOD_RETURN,ANY)> ]
-  "15635" -> "15639" 
+"15632" [label = <(METHOD,find)> ]
+"15636" [label = <(METHOD_RETURN,ANY)> ]
+  "15632" -> "15636" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/325-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/325-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/325-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/325-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "LOG" {  
-"15640" [label = <(METHOD,LOG)> ]
-"15643" [label = <(METHOD_RETURN,ANY)> ]
-  "15640" -> "15643" 
+"15637" [label = <(METHOD,LOG)> ]
+"15640" [label = <(METHOD_RETURN,ANY)> ]
+  "15637" -> "15640" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/326-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/326-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/326-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/326-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "std::replace" {  
-"15644" [label = <(METHOD,std::replace)> ]
-"15651" [label = <(METHOD_RETURN,ANY)> ]
-  "15644" -> "15651" 
+"15641" [label = <(METHOD,std::replace)> ]
+"15648" [label = <(METHOD_RETURN,ANY)> ]
+  "15641" -> "15648" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/327-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/327-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/327-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/327-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "begin" {  
-"15652" [label = <(METHOD,begin)> ]
-"15655" [label = <(METHOD_RETURN,ANY)> ]
-  "15652" -> "15655" 
+"15649" [label = <(METHOD,begin)> ]
+"15652" [label = <(METHOD_RETURN,ANY)> ]
+  "15649" -> "15652" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/328-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/328-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/328-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/328-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "end" {  
-"15656" [label = <(METHOD,end)> ]
-"15659" [label = <(METHOD_RETURN,ANY)> ]
-  "15656" -> "15659" 
+"15653" [label = <(METHOD,end)> ]
+"15656" [label = <(METHOD_RETURN,ANY)> ]
+  "15653" -> "15656" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/329-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/329-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/329-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/329-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "h_klass" {  
-"15660" [label = <(METHOD,h_klass)> ]
-"15663" [label = <(METHOD_RETURN,ANY)> ]
-  "15660" -> "15663" 
+"15657" [label = <(METHOD,h_klass)> ]
+"15660" [label = <(METHOD_RETURN,ANY)> ]
+  "15657" -> "15660" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/33-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/33-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/33-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/33-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowAIOOBE" {  
-"865" [label = <(METHOD,ThrowAIOOBE)<SUB>618</SUB>> ]
-"872" [label = <(METHOD_RETURN,void)<SUB>618</SUB>> ]
+"865" [label = <(METHOD,ThrowAIOOBE)<SUB>617</SUB>> ]
+"872" [label = <(METHOD_RETURN,void)<SUB>617</SUB>> ]
   "865" -> "872" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/330-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/330-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/330-cfg.dot	2023-06-07 19:34:48.447388386 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/330-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "NewHandle" {  
-"15664" [label = <(METHOD,NewHandle)> ]
-"15668" [label = <(METHOD_RETURN,ANY)> ]
-  "15664" -> "15668" 
+"15661" [label = <(METHOD,NewHandle)> ]
+"15665" [label = <(METHOD_RETURN,ANY)> ]
+  "15661" -> "15665" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/331-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/331-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/331-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/331-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "GetImagePointerSize" {  
-"15669" [label = <(METHOD,GetImagePointerSize)> ]
-"15672" [label = <(METHOD_RETURN,ANY)> ]
-  "15669" -> "15672" 
+"15666" [label = <(METHOD,GetImagePointerSize)> ]
+"15669" [label = <(METHOD_RETURN,ANY)> ]
+  "15666" -> "15669" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/332-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/332-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/332-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/332-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "GetClassLinker" {  
-"15673" [label = <(METHOD,GetClassLinker)> ]
-"15676" [label = <(METHOD_RETURN,ANY)> ]
-  "15673" -> "15676" 
+"15670" [label = <(METHOD,GetClassLinker)> ]
+"15673" [label = <(METHOD_RETURN,ANY)> ]
+  "15670" -> "15673" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/333-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/333-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/333-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/333-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterThan" {  
-"15677" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
-"15681" [label = <(METHOD_RETURN,ANY)> ]
-  "15677" -> "15681" 
+"15674" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
+"15678" [label = <(METHOD_RETURN,ANY)> ]
+  "15674" -> "15678" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/334-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/334-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/334-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/334-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "GetSystemClassLoader" {  
-"15682" [label = <(METHOD,GetSystemClassLoader)> ]
-"15685" [label = <(METHOD_RETURN,ANY)> ]
-  "15682" -> "15685" 
+"15679" [label = <(METHOD,GetSystemClassLoader)> ]
+"15682" [label = <(METHOD_RETURN,ANY)> ]
+  "15679" -> "15682" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/335-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/335-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/335-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/335-cfg.dot	2023-06-07 19:34:55.047387773 +0330
@@ -1,5 +1,5 @@
 digraph "c" {  
-"15686" [label = <(METHOD,c)> ]
-"15689" [label = <(METHOD_RETURN,ANY)> ]
-  "15686" -> "15689" 
+"15683" [label = <(METHOD,c)> ]
+"15686" [label = <(METHOD_RETURN,ANY)> ]
+  "15683" -> "15686" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/336-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/336-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/336-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/336-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "Self" {  
-"15690" [label = <(METHOD,Self)> ]
-"15693" [label = <(METHOD_RETURN,ANY)> ]
-  "15690" -> "15693" 
+"15687" [label = <(METHOD,Self)> ]
+"15690" [label = <(METHOD_RETURN,ANY)> ]
+  "15687" -> "15690" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/337-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/337-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/337-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/337-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetVm" {  
-"15694" [label = <(METHOD,GetVm)> ]
-"15697" [label = <(METHOD_RETURN,ANY)> ]
-  "15694" -> "15697" 
+"15691" [label = <(METHOD,GetVm)> ]
+"15694" [label = <(METHOD_RETURN,ANY)> ]
+  "15691" -> "15694" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/338-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/338-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/338-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/338-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT" {  
-"15698" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT)<SUB>684</SUB>> ]
-"15701" [label = <(METHOD_RETURN,ANY)> ]
-  "15698" -> "15701" 
+"15695" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT)<SUB>683</SUB>> ]
+"15698" [label = <(METHOD_RETURN,ANY)> ]
+  "15695" -> "15698" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/339-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/339-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/339-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/339-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "UNLIKELY" {  
-"15702" [label = <(METHOD,UNLIKELY)> ]
-"15705" [label = <(METHOD_RETURN,ANY)> ]
-  "15702" -> "15705" 
+"15699" [label = <(METHOD,UNLIKELY)> ]
+"15702" [label = <(METHOD_RETURN,ANY)> ]
+  "15699" -> "15702" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/34-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/34-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/34-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/34-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowSIOOBE" {  
-"878" [label = <(METHOD,ThrowSIOOBE)<SUB>630</SUB>> ]
-"884" [label = <(METHOD_RETURN,void)<SUB>630</SUB>> ]
+"878" [label = <(METHOD,ThrowSIOOBE)<SUB>629</SUB>> ]
+"884" [label = <(METHOD_RETURN,void)<SUB>629</SUB>> ]
   "878" -> "884" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/340-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/340-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/340-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/340-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(name)" {  
-"15706" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(name))> ]
-"15711" [label = <(METHOD_RETURN,ANY)> ]
-  "15706" -> "15711" 
+"15703" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(name))> ]
+"15708" [label = <(METHOD_RETURN,ANY)> ]
+  "15703" -> "15708" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/341-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/341-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/341-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/341-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "descriptor" {  
-"15712" [label = <(METHOD,descriptor)> ]
-"15715" [label = <(METHOD_RETURN,ANY)> ]
-  "15712" -> "15715" 
+"15709" [label = <(METHOD,descriptor)> ]
+"15712" [label = <(METHOD_RETURN,ANY)> ]
+  "15709" -> "15712" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/342-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/342-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/342-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/342-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "soa" {  
-"15716" [label = <(METHOD,soa)> ]
-"15719" [label = <(METHOD_RETURN,ANY)> ]
-  "15716" -> "15719" 
+"15713" [label = <(METHOD,soa)> ]
+"15716" [label = <(METHOD_RETURN,ANY)> ]
+  "15713" -> "15716" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/343-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/343-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/343-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/343-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "IsStarted" {  
-"15720" [label = <(METHOD,IsStarted)> ]
-"15723" [label = <(METHOD_RETURN,ANY)> ]
-  "15720" -> "15723" 
+"15717" [label = <(METHOD,IsStarted)> ]
+"15720" [label = <(METHOD_RETURN,ANY)> ]
+  "15717" -> "15720" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/344-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/344-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/344-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/344-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "class_loader" {  
-"15724" [label = <(METHOD,class_loader)> ]
-"15727" [label = <(METHOD_RETURN,ANY)> ]
-  "15724" -> "15727" 
+"15721" [label = <(METHOD,class_loader)> ]
+"15724" [label = <(METHOD_RETURN,ANY)> ]
+  "15721" -> "15724" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/345-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/345-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/345-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/345-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "FindClass" {  
-"15728" [label = <(METHOD,FindClass)> ]
-"15734" [label = <(METHOD_RETURN,ANY)> ]
-  "15728" -> "15734" 
+"15725" [label = <(METHOD,FindClass)> ]
+"15731" [label = <(METHOD_RETURN,ANY)> ]
+  "15725" -> "15731" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/346-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/346-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/346-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/346-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "c_str" {  
-"15735" [label = <(METHOD,c_str)> ]
-"15738" [label = <(METHOD_RETURN,ANY)> ]
-  "15735" -> "15738" 
+"15732" [label = <(METHOD,c_str)> ]
+"15735" [label = <(METHOD_RETURN,ANY)> ]
+  "15732" -> "15735" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/347-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/347-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/347-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/347-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "FindSystemClass" {  
-"15739" [label = <(METHOD,FindSystemClass)> ]
-"15744" [label = <(METHOD_RETURN,ANY)> ]
-  "15739" -> "15744" 
+"15736" [label = <(METHOD,FindSystemClass)> ]
+"15741" [label = <(METHOD_RETURN,ANY)> ]
+  "15736" -> "15741" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/348-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/348-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/348-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/348-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(jlr_method)" {  
-"15745" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_method))> ]
-"15750" [label = <(METHOD_RETURN,ANY)> ]
-  "15745" -> "15750" 
+"15742" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_method))> ]
+"15747" [label = <(METHOD_RETURN,ANY)> ]
+  "15742" -> "15747" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/349-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/349-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/349-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/349-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "jni::EncodeArtMethod" {  
-"15751" [label = <(METHOD,jni::EncodeArtMethod)> ]
-"15755" [label = <(METHOD_RETURN,ANY)> ]
-  "15751" -> "15755" 
+"15748" [label = <(METHOD,jni::EncodeArtMethod)> ]
+"15752" [label = <(METHOD_RETURN,ANY)> ]
+  "15748" -> "15752" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/35-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/35-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/35-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/35-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowNewException" {  
-"889" [label = <(METHOD,ThrowNewException)<SUB>638</SUB>> ]
-"895" [label = <(METHOD_RETURN,int)<SUB>638</SUB>> ]
+"889" [label = <(METHOD,ThrowNewException)<SUB>637</SUB>> ]
+"895" [label = <(METHOD_RETURN,int)<SUB>637</SUB>> ]
   "889" -> "895" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/350-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/350-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/350-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/350-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "ArtMethod::FromReflectedMethod" {  
-"15756" [label = <(METHOD,ArtMethod::FromReflectedMethod)> ]
-"15761" [label = <(METHOD_RETURN,ANY)> ]
-  "15756" -> "15761" 
+"15753" [label = <(METHOD,ArtMethod::FromReflectedMethod)> ]
+"15758" [label = <(METHOD_RETURN,ANY)> ]
+  "15753" -> "15758" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/351-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/351-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/351-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/351-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(jlr_field)" {  
-"15762" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_field))> ]
-"15767" [label = <(METHOD_RETURN,ANY)> ]
-  "15762" -> "15767" 
+"15759" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(jlr_field))> ]
+"15764" [label = <(METHOD_RETURN,ANY)> ]
+  "15759" -> "15764" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/352-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/352-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/352-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/352-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetClass" {  
-"15768" [label = <(METHOD,GetClass)> ]
-"15771" [label = <(METHOD_RETURN,ANY)> ]
-  "15768" -> "15771" 
+"15765" [label = <(METHOD,GetClass)> ]
+"15768" [label = <(METHOD_RETURN,ANY)> ]
+  "15765" -> "15768" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/353-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/353-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/353-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/353-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetClassRoot&lt;mirror::Field&gt;" {  
-"15772" [label = <(METHOD,GetClassRoot&lt;mirror::Field&gt;)> ]
-"15774" [label = <(METHOD_RETURN,ANY)> ]
-  "15772" -> "15774" 
+"15769" [label = <(METHOD,GetClassRoot&lt;mirror::Field&gt;)> ]
+"15771" [label = <(METHOD_RETURN,ANY)> ]
+  "15769" -> "15771" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/354-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/354-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/354-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/354-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "::DownCast" {  
-"15775" [label = <(METHOD,::DownCast)> ]
-"15779" [label = <(METHOD_RETURN,ANY)> ]
-  "15775" -> "15779" 
+"15772" [label = <(METHOD,::DownCast)> ]
+"15776" [label = <(METHOD_RETURN,ANY)> ]
+  "15772" -> "15776" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/355-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/355-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/355-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/355-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "jni::EncodeArtField" {  
-"15780" [label = <(METHOD,jni::EncodeArtField)> ]
-"15784" [label = <(METHOD_RETURN,ANY)> ]
-  "15780" -> "15784" 
+"15777" [label = <(METHOD,jni::EncodeArtField)> ]
+"15781" [label = <(METHOD_RETURN,ANY)> ]
+  "15777" -> "15781" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/356-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/356-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/356-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/356-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetArtField" {  
-"15785" [label = <(METHOD,GetArtField)> ]
-"15788" [label = <(METHOD_RETURN,ANY)> ]
-  "15785" -> "15788" 
+"15782" [label = <(METHOD,GetArtField)> ]
+"15785" [label = <(METHOD_RETURN,ANY)> ]
+  "15782" -> "15785" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/357-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/357-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/357-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/357-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(mid)" {  
-"15789" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(mid))> ]
-"15794" [label = <(METHOD_RETURN,ANY)> ]
-  "15789" -> "15794" 
+"15786" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(mid))> ]
+"15791" [label = <(METHOD_RETURN,ANY)> ]
+  "15786" -> "15791" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/358-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/358-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/358-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/358-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "jni::DecodeArtMethod" {  
-"15795" [label = <(METHOD,jni::DecodeArtMethod)> ]
-"15799" [label = <(METHOD_RETURN,ANY)> ]
-  "15795" -> "15799" 
+"15792" [label = <(METHOD,jni::DecodeArtMethod)> ]
+"15796" [label = <(METHOD_RETURN,ANY)> ]
+  "15792" -> "15796" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/359-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/359-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/359-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/359-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "DCHECK_EQ" {  
-"15800" [label = <(METHOD,DCHECK_EQ)> ]
-"15804" [label = <(METHOD_RETURN,ANY)> ]
-  "15800" -> "15804" 
+"15797" [label = <(METHOD,DCHECK_EQ)> ]
+"15801" [label = <(METHOD_RETURN,ANY)> ]
+  "15797" -> "15801" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/36-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/36-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/36-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/36-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,12 +1,12 @@
 digraph "JavaVmExtFromEnv" {  
-"902" [label = <(RETURN,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();)<SUB>681</SUB>> ]
-"903" [label = <(GetVm,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>681</SUB>> ]
-"904" [label = <(&lt;operator&gt;.indirectFieldAccess,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>681</SUB>> ]
-"905" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNIEnvExt*&gt;(env))<SUB>681</SUB>> ]
-"908" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>681</SUB>> ]
-"906" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>681</SUB>> ]
-"899" [label = <(METHOD,JavaVmExtFromEnv)<SUB>680</SUB>> ]
-"909" [label = <(METHOD_RETURN,JavaVMExt)<SUB>680</SUB>> ]
+"902" [label = <(RETURN,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();,return reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm();)<SUB>680</SUB>> ]
+"903" [label = <(GetVm,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>680</SUB>> ]
+"904" [label = <(&lt;operator&gt;.indirectFieldAccess,reinterpret_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>680</SUB>> ]
+"905" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;JNIEnvExt*&gt;(env))<SUB>680</SUB>> ]
+"908" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>680</SUB>> ]
+"906" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>680</SUB>> ]
+"899" [label = <(METHOD,JavaVmExtFromEnv)<SUB>679</SUB>> ]
+"909" [label = <(METHOD_RETURN,JavaVMExt)<SUB>679</SUB>> ]
   "902" -> "909" 
   "903" -> "902" 
   "904" -> "903" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/360-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/360-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/360-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/360-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "IsActiveTransaction" {  
-"15805" [label = <(METHOD,IsActiveTransaction)> ]
-"15808" [label = <(METHOD_RETURN,ANY)> ]
-  "15805" -> "15808" 
+"15802" [label = <(METHOD,IsActiveTransaction)> ]
+"15805" [label = <(METHOD_RETURN,ANY)> ]
+  "15802" -> "15805" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/361-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/361-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/361-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/361-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "IsConstructor" {  
-"15809" [label = <(METHOD,IsConstructor)> ]
-"15812" [label = <(METHOD_RETURN,ANY)> ]
-  "15809" -> "15812" 
+"15806" [label = <(METHOD,IsConstructor)> ]
+"15809" [label = <(METHOD_RETURN,ANY)> ]
+  "15806" -> "15809" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/362-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/362-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/362-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/362-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;" {  
-"15813" [label = <(METHOD,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
-"15818" [label = <(METHOD_RETURN,ANY)> ]
-  "15813" -> "15818" 
+"15810" [label = <(METHOD,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
+"15815" [label = <(METHOD_RETURN,ANY)> ]
+  "15810" -> "15815" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/363-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/363-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/363-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/363-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;" {  
-"15819" [label = <(METHOD,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
-"15824" [label = <(METHOD_RETURN,ANY)> ]
-  "15819" -> "15824" 
+"15816" [label = <(METHOD,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)> ]
+"15821" [label = <(METHOD_RETURN,ANY)> ]
+  "15816" -> "15821" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/364-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/364-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/364-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/364-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(fid)" {  
-"15825" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(fid))> ]
-"15830" [label = <(METHOD_RETURN,ANY)> ]
-  "15825" -> "15830" 
+"15822" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(fid))> ]
+"15827" [label = <(METHOD_RETURN,ANY)> ]
+  "15822" -> "15827" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/365-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/365-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/365-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/365-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "jni::DecodeArtField" {  
-"15831" [label = <(METHOD,jni::DecodeArtField)> ]
-"15835" [label = <(METHOD_RETURN,ANY)> ]
-  "15831" -> "15835" 
+"15828" [label = <(METHOD,jni::DecodeArtField)> ]
+"15832" [label = <(METHOD_RETURN,ANY)> ]
+  "15828" -> "15832" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/366-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/366-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/366-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/366-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.bracketedPrimary" {  
-"15836" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
-"15839" [label = <(METHOD_RETURN,ANY)> ]
-  "15836" -> "15839" 
+"15833" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
+"15836" [label = <(METHOD_RETURN,ANY)> ]
+  "15833" -> "15836" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/367-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/367-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/367-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/367-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.expressionList" {  
-"15840" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
-"15845" [label = <(METHOD_RETURN,ANY)> ]
-  "15840" -> "15845" 
+"15837" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
+"15842" [label = <(METHOD_RETURN,ANY)> ]
+  "15837" -> "15842" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/368-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/368-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/368-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/368-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(java_object)" {  
-"15846" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_object))> ]
-"15851" [label = <(METHOD_RETURN,ANY)> ]
-  "15846" -> "15851" 
+"15843" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_object))> ]
+"15848" [label = <(METHOD_RETURN,ANY)> ]
+  "15843" -> "15848" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/369-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/369-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/369-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/369-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(java_class)" {  
-"15852" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_class))> ]
-"15857" [label = <(METHOD_RETURN,ANY)> ]
-  "15852" -> "15857" 
+"15849" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_class))> ]
+"15854" [label = <(METHOD_RETURN,ANY)> ]
+  "15849" -> "15854" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/37-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/37-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/37-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/37-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,5 +1,5 @@
 digraph "FindMethod" {  
-"911" [label = <(METHOD,FindMethod)<SUB>709</SUB>> ]
-"916" [label = <(METHOD_RETURN,ArtMethod*)<SUB>709</SUB>> ]
+"911" [label = <(METHOD,FindMethod)<SUB>708</SUB>> ]
+"916" [label = <(METHOD_RETURN,ArtMethod*)<SUB>708</SUB>> ]
   "911" -> "916" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/370-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/370-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/370-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/370-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "IsInterface" {  
-"15858" [label = <(METHOD,IsInterface)> ]
-"15861" [label = <(METHOD_RETURN,ANY)> ]
-  "15858" -> "15861" 
+"15855" [label = <(METHOD,IsInterface)> ]
+"15858" [label = <(METHOD_RETURN,ANY)> ]
+  "15855" -> "15858" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/371-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/371-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/371-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/371-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetSuperClass" {  
-"15862" [label = <(METHOD,GetSuperClass)> ]
-"15865" [label = <(METHOD_RETURN,ANY)> ]
-  "15862" -> "15865" 
+"15859" [label = <(METHOD,GetSuperClass)> ]
+"15862" [label = <(METHOD_RETURN,ANY)> ]
+  "15859" -> "15862" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/372-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/372-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/372-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/372-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN" {  
-"15866" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN)<SUB>693</SUB>> ]
-"15870" [label = <(METHOD_RETURN,ANY)> ]
-  "15866" -> "15870" 
+"15863" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN)<SUB>692</SUB>> ]
+"15867" [label = <(METHOD_RETURN,ANY)> ]
+  "15863" -> "15867" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/373-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/373-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/373-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/373-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE)" {  
-"15871" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))> ]
-"15876" [label = <(METHOD_RETURN,ANY)> ]
-  "15871" -> "15876" 
+"15868" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))> ]
+"15873" [label = <(METHOD_RETURN,ANY)> ]
+  "15868" -> "15873" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/374-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/374-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/374-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/374-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE)" {  
-"15877" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))> ]
-"15882" [label = <(METHOD_RETURN,ANY)> ]
-  "15877" -> "15882" 
+"15874" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))> ]
+"15879" [label = <(METHOD_RETURN,ANY)> ]
+  "15874" -> "15879" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/375-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/375-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/375-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/375-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "IsAssignableFrom" {  
-"15883" [label = <(METHOD,IsAssignableFrom)> ]
-"15887" [label = <(METHOD_RETURN,ANY)> ]
-  "15883" -> "15887" 
+"15880" [label = <(METHOD,IsAssignableFrom)> ]
+"15884" [label = <(METHOD_RETURN,ANY)> ]
+  "15880" -> "15884" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/376-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/376-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/376-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/376-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE)" {  
-"15888" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))> ]
-"15893" [label = <(METHOD_RETURN,ANY)> ]
-  "15888" -> "15893" 
+"15885" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))> ]
+"15890" [label = <(METHOD_RETURN,ANY)> ]
+  "15885" -> "15890" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/377-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/377-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/377-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/377-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "InstanceOf" {  
-"15894" [label = <(METHOD,InstanceOf)> ]
-"15898" [label = <(METHOD_RETURN,ANY)> ]
-  "15894" -> "15898" 
+"15891" [label = <(METHOD,InstanceOf)> ]
+"15895" [label = <(METHOD_RETURN,ANY)> ]
+  "15891" -> "15895" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/378-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/378-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/378-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/378-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SetException" {  
-"15899" [label = <(METHOD,SetException)> ]
-"15903" [label = <(METHOD_RETURN,ANY)> ]
-  "15899" -> "15903" 
+"15896" [label = <(METHOD,SetException)> ]
+"15900" [label = <(METHOD_RETURN,ANY)> ]
+  "15896" -> "15900" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/379-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/379-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/379-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/379-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR)" {  
-"15904" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))> ]
-"15909" [label = <(METHOD_RETURN,ANY)> ]
-  "15904" -> "15909" 
+"15901" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))> ]
+"15906" [label = <(METHOD_RETURN,ANY)> ]
+  "15901" -> "15906" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/38-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/38-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/38-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/38-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,7 +1,7 @@
 digraph "GetVersion" {  
-"926" [label = <(RETURN,return JNI_VERSION_1_6;,return JNI_VERSION_1_6;)<SUB>725</SUB>> ]
-"923" [label = <(METHOD,GetVersion)<SUB>724</SUB>> ]
-"928" [label = <(METHOD_RETURN,jint)<SUB>724</SUB>> ]
+"926" [label = <(RETURN,return JNI_VERSION_1_6;,return JNI_VERSION_1_6;)<SUB>724</SUB>> ]
+"923" [label = <(METHOD,GetVersion)<SUB>723</SUB>> ]
+"928" [label = <(METHOD_RETURN,jint)<SUB>723</SUB>> ]
   "926" -> "928" 
   "923" -> "926" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/380-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/380-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/380-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/380-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "IsExceptionPending" {  
-"15910" [label = <(METHOD,IsExceptionPending)> ]
-"15913" [label = <(METHOD_RETURN,ANY)> ]
-  "15910" -> "15913" 
+"15907" [label = <(METHOD,IsExceptionPending)> ]
+"15910" [label = <(METHOD_RETURN,ANY)> ]
+  "15907" -> "15910" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/381-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/381-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/381-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/381-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "ClearException" {  
-"15914" [label = <(METHOD,ClearException)> ]
-"15917" [label = <(METHOD_RETURN,ANY)> ]
-  "15914" -> "15917" 
+"15911" [label = <(METHOD,ClearException)> ]
+"15914" [label = <(METHOD_RETURN,ANY)> ]
+  "15911" -> "15914" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/382-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/382-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/382-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/382-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetException" {  
-"15918" [label = <(METHOD,GetException)> ]
-"15921" [label = <(METHOD_RETURN,ANY)> ]
-  "15918" -> "15921" 
+"15915" [label = <(METHOD,GetException)> ]
+"15918" [label = <(METHOD_RETURN,ANY)> ]
+  "15915" -> "15918" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/383-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/383-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/383-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/383-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "old_exception" {  
-"15922" [label = <(METHOD,old_exception)> ]
-"15925" [label = <(METHOD_RETURN,ANY)> ]
-  "15922" -> "15925" 
+"15919" [label = <(METHOD,old_exception)> ]
+"15922" [label = <(METHOD_RETURN,ANY)> ]
+  "15919" -> "15922" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/384-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/384-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/384-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/384-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "exception" {  
-"15926" [label = <(METHOD,exception)> ]
-"15930" [label = <(METHOD_RETURN,ANY)> ]
-  "15926" -> "15930" 
+"15923" [label = <(METHOD,exception)> ]
+"15927" [label = <(METHOD_RETURN,ANY)> ]
+  "15923" -> "15927" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/385-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/385-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/385-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/385-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "Get" {  
-"15931" [label = <(METHOD,Get)> ]
-"15934" [label = <(METHOD_RETURN,ANY)> ]
-  "15931" -> "15934" 
+"15928" [label = <(METHOD,Get)> ]
+"15931" [label = <(METHOD_RETURN,ANY)> ]
+  "15928" -> "15931" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/386-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/386-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/386-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/386-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "exception_class" {  
-"15935" [label = <(METHOD,exception_class)> ]
-"15939" [label = <(METHOD_RETURN,ANY)> ]
-  "15935" -> "15939" 
+"15932" [label = <(METHOD,exception_class)> ]
+"15936" [label = <(METHOD_RETURN,ANY)> ]
+  "15932" -> "15936" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/387-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/387-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/387-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/387-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetObjectClass" {  
-"15940" [label = <(METHOD,GetObjectClass)> ]
-"15944" [label = <(METHOD_RETURN,ANY)> ]
-  "15940" -> "15944" 
+"15937" [label = <(METHOD,GetObjectClass)> ]
+"15941" [label = <(METHOD_RETURN,ANY)> ]
+  "15937" -> "15941" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/388-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/388-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/388-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/388-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "get" {  
-"15945" [label = <(METHOD,get)> ]
-"15948" [label = <(METHOD_RETURN,ANY)> ]
-  "15945" -> "15948" 
+"15942" [label = <(METHOD,get)> ]
+"15945" [label = <(METHOD_RETURN,ANY)> ]
+  "15942" -> "15945" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/389-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/389-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/389-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/389-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetMethodID" {  
-"15949" [label = <(METHOD,GetMethodID)> ]
-"15955" [label = <(METHOD_RETURN,ANY)> ]
-  "15949" -> "15955" 
+"15946" [label = <(METHOD,GetMethodID)> ]
+"15952" [label = <(METHOD_RETURN,ANY)> ]
+  "15946" -> "15952" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/39-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/39-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/39-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/39-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,9 +1,9 @@
 digraph "DefineClass" {  
-"937" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI DefineClass is not supported&quot;)<SUB>729</SUB>> ]
-"941" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>730</SUB>> ]
-"938" [label = <(LOG,LOG(WARNING))<SUB>729</SUB>> ]
-"930" [label = <(METHOD,DefineClass)<SUB>728</SUB>> ]
-"943" [label = <(METHOD_RETURN,jclass)<SUB>728</SUB>> ]
+"937" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI DefineClass is not supported&quot;)<SUB>728</SUB>> ]
+"941" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>729</SUB>> ]
+"938" [label = <(LOG,LOG(WARNING))<SUB>728</SUB>> ]
+"930" [label = <(METHOD,DefineClass)<SUB>727</SUB>> ]
+"943" [label = <(METHOD_RETURN,jclass)<SUB>727</SUB>> ]
   "937" -> "941" 
   "941" -> "943" 
   "938" -> "937" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/390-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/390-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/390-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/390-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::Object::PrettyTypeOf" {  
-"15956" [label = <(METHOD,mirror::Object::PrettyTypeOf)> ]
-"15960" [label = <(METHOD_RETURN,ANY)> ]
-  "15956" -> "15960" 
+"15953" [label = <(METHOD,mirror::Object::PrettyTypeOf)> ]
+"15957" [label = <(METHOD_RETURN,ANY)> ]
+  "15953" -> "15957" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/391-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/391-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/391-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/391-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CallVoidMethod" {  
-"15961" [label = <(METHOD,CallVoidMethod)> ]
-"15966" [label = <(METHOD_RETURN,ANY)> ]
-  "15961" -> "15966" 
+"15958" [label = <(METHOD,CallVoidMethod)> ]
+"15963" [label = <(METHOD_RETURN,ANY)> ]
+  "15958" -> "15963" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/392-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/392-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/392-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/392-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "EnsureLocalCapacityInternal" {  
-"15967" [label = <(METHOD,EnsureLocalCapacityInternal)> ]
-"15972" [label = <(METHOD_RETURN,ANY)> ]
-  "15967" -> "15972" 
+"15964" [label = <(METHOD,EnsureLocalCapacityInternal)> ]
+"15969" [label = <(METHOD_RETURN,ANY)> ]
+  "15964" -> "15969" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/393-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/393-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/393-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/393-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "PushFrame" {  
-"15973" [label = <(METHOD,PushFrame)> ]
-"15977" [label = <(METHOD_RETURN,ANY)> ]
-  "15973" -> "15977" 
+"15970" [label = <(METHOD,PushFrame)> ]
+"15974" [label = <(METHOD_RETURN,ANY)> ]
+  "15970" -> "15974" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/394-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/394-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/394-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/394-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "down_cast&lt;JNIEnvExt*&gt;" {  
-"15978" [label = <(METHOD,down_cast&lt;JNIEnvExt*&gt;)> ]
-"15981" [label = <(METHOD_RETURN,ANY)> ]
-  "15978" -> "15981" 
+"15975" [label = <(METHOD,down_cast&lt;JNIEnvExt*&gt;)> ]
+"15978" [label = <(METHOD_RETURN,ANY)> ]
+  "15975" -> "15978" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/395-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/395-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/395-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/395-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "PopFrame" {  
-"15982" [label = <(METHOD,PopFrame)> ]
-"15985" [label = <(METHOD_RETURN,ANY)> ]
-  "15982" -> "15985" 
+"15979" [label = <(METHOD,PopFrame)> ]
+"15982" [label = <(METHOD_RETURN,ANY)> ]
+  "15979" -> "15982" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/396-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/396-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/396-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/396-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "Env" {  
-"15986" [label = <(METHOD,Env)> ]
-"15989" [label = <(METHOD_RETURN,ANY)> ]
-  "15986" -> "15989" 
+"15983" [label = <(METHOD,Env)> ]
+"15986" [label = <(METHOD_RETURN,ANY)> ]
+  "15983" -> "15986" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/397-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/397-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/397-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/397-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "AddGlobalRef" {  
-"15990" [label = <(METHOD,AddGlobalRef)> ]
-"15995" [label = <(METHOD_RETURN,ANY)> ]
-  "15990" -> "15995" 
+"15987" [label = <(METHOD,AddGlobalRef)> ]
+"15992" [label = <(METHOD_RETURN,ANY)> ]
+  "15987" -> "15992" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/398-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/398-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/398-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/398-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "Vm" {  
-"15996" [label = <(METHOD,Vm)> ]
-"15999" [label = <(METHOD_RETURN,ANY)> ]
-  "15996" -> "15999" 
+"15993" [label = <(METHOD,Vm)> ]
+"15996" [label = <(METHOD_RETURN,ANY)> ]
+  "15993" -> "15996" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/399-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/399-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/399-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/399-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteGlobalRef" {  
-"16000" [label = <(METHOD,DeleteGlobalRef)> ]
-"16005" [label = <(METHOD_RETURN,ANY)> ]
-  "16000" -> "16005" 
+"15997" [label = <(METHOD,DeleteGlobalRef)> ]
+"16002" [label = <(METHOD_RETURN,ANY)> ]
+  "15997" -> "16002" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/4-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/4-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/4-cfg.dot	2023-06-07 19:34:48.257388404 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/4-cfg.dot	2023-06-07 19:34:54.857387788 +0330
@@ -1,5 +1,5 @@
 digraph "ScopedVAArgs" {  
-"25" [label = <(METHOD,ScopedVAArgs)<SUB>80</SUB>> ]
-"28" [label = <(METHOD_RETURN,ANY)<SUB>80</SUB>> ]
+"25" [label = <(METHOD,ScopedVAArgs)<SUB>79</SUB>> ]
+"28" [label = <(METHOD_RETURN,ANY)<SUB>79</SUB>> ]
   "25" -> "28" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/40-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/40-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/40-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/40-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,73 +1,73 @@
 digraph "FindClass" {  
-"949" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>734</SUB>> ]
-"968" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>735</SUB>> ]
-"975" [label = <(&lt;operator&gt;.assignment,* class_linker = runtime-&gt;GetClassLinker())<SUB>736</SUB>> ]
-"982" [label = <(descriptor,descriptor(NormalizeJniClassDescriptor(name)))<SUB>737</SUB>> ]
-"986" [label = <(soa,soa(env))<SUB>738</SUB>> ]
-"988" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = nullptr)<SUB>739</SUB>> ]
-"1056" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c);,return soa.AddLocalReference&lt;jclass&gt;(c);)<SUB>747</SUB>> ]
-"970" [label = <(Runtime::Current,Runtime::Current())<SUB>735</SUB>> ]
-"977" [label = <(GetClassLinker,runtime-&gt;GetClassLinker())<SUB>736</SUB>> ]
-"983" [label = <(NormalizeJniClassDescriptor,NormalizeJniClassDescriptor(name))<SUB>737</SUB>> ]
-"989" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>739</SUB>> ]
-"998" [label = <(IsStarted,runtime-&gt;IsStarted())<SUB>740</SUB>> ]
-"1057" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c))<SUB>747</SUB>> ]
-"971" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>735</SUB>> ]
-"978" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetClassLinker)<SUB>736</SUB>> ]
-"990" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>739</SUB>> ]
-"999" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;IsStarted)<SUB>740</SUB>> ]
-"1003" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>741</SUB>> ]
-"1012" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>742</SUB>> ]
-"1025" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>743</SUB>> ]
-"1058" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>747</SUB>> ]
-"953" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>734</SUB>> ]
-"973" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>735</SUB>> ]
-"980" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>736</SUB>> ]
-"992" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>739</SUB>> ]
-"1001" [label = <(FIELD_IDENTIFIER,IsStarted,IsStarted)<SUB>740</SUB>> ]
-"1004" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>741</SUB>> ]
-"1007" [label = <(hs,hs(soa.Self()))<SUB>741</SUB>> ]
-"1013" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::ClassLoader)<SUB>742</SUB>> ]
-"1018" [label = <(class_loader,class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>742</SUB>> ]
-"1027" [label = <(FindClass,class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>743</SUB>> ]
-"1042" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>745</SUB>> ]
-"1059" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>747</SUB>> ]
-"954" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>734</SUB>> ]
-"958" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>734</SUB>> ]
-"965" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>734</SUB>> ]
-"994" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>739</SUB>> ]
-"1008" [label = <(Self,soa.Self())<SUB>741</SUB>> ]
-"1015" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>742</SUB>> ]
-"1019" [label = <(NewHandle,hs.NewHandle(GetClassLoader(soa)))<SUB>742</SUB>> ]
-"1028" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindClass)<SUB>743</SUB>> ]
-"1031" [label = <(Self,soa.Self())<SUB>743</SUB>> ]
-"1035" [label = <(c_str,descriptor.c_str())<SUB>743</SUB>> ]
-"1044" [label = <(FindSystemClass,class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>745</SUB>> ]
-"1061" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>747</SUB>> ]
-"959" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>734</SUB>> ]
-"1009" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>741</SUB>> ]
-"1017" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>742</SUB>> ]
-"1020" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>742</SUB>> ]
-"1023" [label = <(GetClassLoader,GetClassLoader(soa))<SUB>742</SUB>> ]
-"1030" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>743</SUB>> ]
-"1032" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>743</SUB>> ]
-"1036" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>743</SUB>> ]
-"1045" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindSystemClass)<SUB>745</SUB>> ]
-"1048" [label = <(Self,soa.Self())<SUB>745</SUB>> ]
-"1052" [label = <(c_str,descriptor.c_str())<SUB>745</SUB>> ]
-"960" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>734</SUB>> ]
-"962" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>734</SUB>> ]
-"1011" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>741</SUB>> ]
-"1022" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>742</SUB>> ]
-"1034" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>743</SUB>> ]
-"1038" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>743</SUB>> ]
-"1047" [label = <(FIELD_IDENTIFIER,FindSystemClass,FindSystemClass)<SUB>745</SUB>> ]
-"1049" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>745</SUB>> ]
-"1053" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>745</SUB>> ]
-"1051" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>745</SUB>> ]
-"1055" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>745</SUB>> ]
-"945" [label = <(METHOD,FindClass)<SUB>733</SUB>> ]
-"1064" [label = <(METHOD_RETURN,jclass)<SUB>733</SUB>> ]
+"949" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>733</SUB>> ]
+"968" [label = <(&lt;operator&gt;.assignment,* runtime = Runtime::Current())<SUB>734</SUB>> ]
+"975" [label = <(&lt;operator&gt;.assignment,* class_linker = runtime-&gt;GetClassLinker())<SUB>735</SUB>> ]
+"982" [label = <(descriptor,descriptor(NormalizeJniClassDescriptor(name)))<SUB>736</SUB>> ]
+"986" [label = <(soa,soa(env))<SUB>737</SUB>> ]
+"988" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = nullptr)<SUB>738</SUB>> ]
+"1056" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c);,return soa.AddLocalReference&lt;jclass&gt;(c);)<SUB>746</SUB>> ]
+"970" [label = <(Runtime::Current,Runtime::Current())<SUB>734</SUB>> ]
+"977" [label = <(GetClassLinker,runtime-&gt;GetClassLinker())<SUB>735</SUB>> ]
+"983" [label = <(NormalizeJniClassDescriptor,NormalizeJniClassDescriptor(name))<SUB>736</SUB>> ]
+"989" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>738</SUB>> ]
+"998" [label = <(IsStarted,runtime-&gt;IsStarted())<SUB>739</SUB>> ]
+"1057" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c))<SUB>746</SUB>> ]
+"971" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>734</SUB>> ]
+"978" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;GetClassLinker)<SUB>735</SUB>> ]
+"990" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>738</SUB>> ]
+"999" [label = <(&lt;operator&gt;.indirectFieldAccess,runtime-&gt;IsStarted)<SUB>739</SUB>> ]
+"1003" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>740</SUB>> ]
+"1012" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::ClassLoader&gt; class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>741</SUB>> ]
+"1025" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>742</SUB>> ]
+"1058" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>746</SUB>> ]
+"953" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>733</SUB>> ]
+"973" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>734</SUB>> ]
+"980" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>735</SUB>> ]
+"992" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>738</SUB>> ]
+"1001" [label = <(FIELD_IDENTIFIER,IsStarted,IsStarted)<SUB>739</SUB>> ]
+"1004" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>740</SUB>> ]
+"1007" [label = <(hs,hs(soa.Self()))<SUB>740</SUB>> ]
+"1013" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::ClassLoader)<SUB>741</SUB>> ]
+"1018" [label = <(class_loader,class_loader(hs.NewHandle(GetClassLoader(soa))))<SUB>741</SUB>> ]
+"1027" [label = <(FindClass,class_linker-&gt;FindClass(soa.Self(), descriptor.c_str(), class_loader))<SUB>742</SUB>> ]
+"1042" [label = <(&lt;operator&gt;.assignment,c = class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>744</SUB>> ]
+"1059" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>746</SUB>> ]
+"954" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>733</SUB>> ]
+"958" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>733</SUB>> ]
+"965" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>733</SUB>> ]
+"994" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>738</SUB>> ]
+"1008" [label = <(Self,soa.Self())<SUB>740</SUB>> ]
+"1015" [label = <(&lt;operator&gt;.fieldAccess,mirror::ClassLoader)<SUB>741</SUB>> ]
+"1019" [label = <(NewHandle,hs.NewHandle(GetClassLoader(soa)))<SUB>741</SUB>> ]
+"1028" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindClass)<SUB>742</SUB>> ]
+"1031" [label = <(Self,soa.Self())<SUB>742</SUB>> ]
+"1035" [label = <(c_str,descriptor.c_str())<SUB>742</SUB>> ]
+"1044" [label = <(FindSystemClass,class_linker-&gt;FindSystemClass(soa.Self(), descriptor.c_str()))<SUB>744</SUB>> ]
+"1061" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>746</SUB>> ]
+"959" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>733</SUB>> ]
+"1009" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>740</SUB>> ]
+"1017" [label = <(FIELD_IDENTIFIER,ClassLoader,ClassLoader)<SUB>741</SUB>> ]
+"1020" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>741</SUB>> ]
+"1023" [label = <(GetClassLoader,GetClassLoader(soa))<SUB>741</SUB>> ]
+"1030" [label = <(FIELD_IDENTIFIER,FindClass,FindClass)<SUB>742</SUB>> ]
+"1032" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>742</SUB>> ]
+"1036" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>742</SUB>> ]
+"1045" [label = <(&lt;operator&gt;.indirectFieldAccess,class_linker-&gt;FindSystemClass)<SUB>744</SUB>> ]
+"1048" [label = <(Self,soa.Self())<SUB>744</SUB>> ]
+"1052" [label = <(c_str,descriptor.c_str())<SUB>744</SUB>> ]
+"960" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>733</SUB>> ]
+"962" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>733</SUB>> ]
+"1011" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>740</SUB>> ]
+"1022" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>741</SUB>> ]
+"1034" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>742</SUB>> ]
+"1038" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>742</SUB>> ]
+"1047" [label = <(FIELD_IDENTIFIER,FindSystemClass,FindSystemClass)<SUB>744</SUB>> ]
+"1049" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>744</SUB>> ]
+"1053" [label = <(&lt;operator&gt;.fieldAccess,descriptor.c_str)<SUB>744</SUB>> ]
+"1051" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>744</SUB>> ]
+"1055" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>744</SUB>> ]
+"945" [label = <(METHOD,FindClass)<SUB>732</SUB>> ]
+"1064" [label = <(METHOD_RETURN,jclass)<SUB>732</SUB>> ]
   "949" -> "954" 
   "949" -> "973" 
   "968" -> "980" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/400-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/400-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/400-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/400-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "AddWeakGlobalRef" {  
-"16006" [label = <(METHOD,AddWeakGlobalRef)> ]
-"16011" [label = <(METHOD_RETURN,ANY)> ]
-  "16006" -> "16011" 
+"16003" [label = <(METHOD,AddWeakGlobalRef)> ]
+"16008" [label = <(METHOD_RETURN,ANY)> ]
+  "16003" -> "16008" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/401-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/401-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/401-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/401-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "DeleteWeakGlobalRef" {  
-"16012" [label = <(METHOD,DeleteWeakGlobalRef)> ]
-"16017" [label = <(METHOD_RETURN,ANY)> ]
-  "16012" -> "16017" 
+"16009" [label = <(METHOD,DeleteWeakGlobalRef)> ]
+"16014" [label = <(METHOD_RETURN,ANY)> ]
+  "16009" -> "16014" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/402-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/402-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/402-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/402-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "Remove" {  
-"16018" [label = <(METHOD,Remove)> ]
-"16023" [label = <(METHOD_RETURN,ANY)> ]
-  "16018" -> "16023" 
+"16015" [label = <(METHOD,Remove)> ]
+"16020" [label = <(METHOD_RETURN,ANY)> ]
+  "16015" -> "16020" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/403-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/403-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/403-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/403-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "IsStringClass" {  
-"16024" [label = <(METHOD,IsStringClass)> ]
-"16027" [label = <(METHOD_RETURN,ANY)> ]
-  "16024" -> "16027" 
+"16021" [label = <(METHOD,IsStringClass)> ]
+"16024" [label = <(METHOD_RETURN,ANY)> ]
+  "16021" -> "16024" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/404-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/404-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/404-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/404-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetCurrentAllocator" {  
-"16028" [label = <(METHOD,GetCurrentAllocator)> ]
-"16031" [label = <(METHOD_RETURN,ANY)> ]
-  "16028" -> "16031" 
+"16025" [label = <(METHOD,GetCurrentAllocator)> ]
+"16028" [label = <(METHOD_RETURN,ANY)> ]
+  "16025" -> "16028" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/405-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/405-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/405-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/405-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetHeap" {  
-"16032" [label = <(METHOD,GetHeap)> ]
-"16035" [label = <(METHOD_RETURN,ANY)> ]
-  "16032" -> "16035" 
+"16029" [label = <(METHOD,GetHeap)> ]
+"16032" [label = <(METHOD_RETURN,ANY)> ]
+  "16029" -> "16032" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/406-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/406-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/406-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/406-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "AllocObject" {  
-"16036" [label = <(METHOD,AllocObject)> ]
-"16040" [label = <(METHOD_RETURN,ANY)> ]
-  "16036" -> "16040" 
+"16033" [label = <(METHOD,AllocObject)> ]
+"16037" [label = <(METHOD_RETURN,ANY)> ]
+  "16033" -> "16037" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/407-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/407-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/407-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/407-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "va_start" {  
-"16041" [label = <(METHOD,va_start)> ]
-"16045" [label = <(METHOD_RETURN,ANY)> ]
-  "16041" -> "16045" 
+"16038" [label = <(METHOD,va_start)> ]
+"16042" [label = <(METHOD_RETURN,ANY)> ]
+  "16038" -> "16042" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/408-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/408-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/408-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/408-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "free_args_later" {  
-"16046" [label = <(METHOD,free_args_later)> ]
-"16049" [label = <(METHOD_RETURN,ANY)> ]
-  "16046" -> "16049" 
+"16043" [label = <(METHOD,free_args_later)> ]
+"16046" [label = <(METHOD_RETURN,ANY)> ]
+  "16043" -> "16046" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/409-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/409-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/409-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/409-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "NewObjectV" {  
-"16050" [label = <(METHOD,NewObjectV)> ]
-"16056" [label = <(METHOD_RETURN,ANY)> ]
-  "16050" -> "16056" 
+"16047" [label = <(METHOD,NewObjectV)> ]
+"16053" [label = <(METHOD_RETURN,ANY)> ]
+  "16047" -> "16053" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/41-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/41-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/41-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/41-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,22 +1,22 @@
 digraph "FromReflectedMethod" {  
-"1070" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>751</SUB>> ]
-"1089" [label = <(soa,soa(env))<SUB>752</SUB>> ]
-"1091" [label = <(RETURN,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));)<SUB>753</SUB>> ]
-"1092" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method)))<SUB>753</SUB>> ]
-"1093" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>753</SUB>> ]
-"1096" [label = <(ArtMethod::FromReflectedMethod,ArtMethod::FromReflectedMethod(soa, jlr_method))<SUB>753</SUB>> ]
-"1074" [label = <(UNLIKELY,UNLIKELY((jlr_method) == nullptr))<SUB>751</SUB>> ]
-"1095" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>753</SUB>> ]
-"1097" [label = <(&lt;operator&gt;.fieldAccess,ArtMethod::FromReflectedMethod)<SUB>753</SUB>> ]
-"1075" [label = <(&lt;operator&gt;.equals,(jlr_method) == nullptr)<SUB>751</SUB>> ]
-"1079" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_method),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_method == null&quot;))<SUB>751</SUB>> ]
-"1086" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_method),CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>751</SUB>> ]
-"1099" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>753</SUB>> ]
-"1080" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>751</SUB>> ]
-"1081" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>751</SUB>> ]
-"1083" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>751</SUB>> ]
-"1066" [label = <(METHOD,FromReflectedMethod)<SUB>750</SUB>> ]
-"1102" [label = <(METHOD_RETURN,jmethodID)<SUB>750</SUB>> ]
+"1070" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>750</SUB>> ]
+"1089" [label = <(soa,soa(env))<SUB>751</SUB>> ]
+"1091" [label = <(RETURN,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));,return jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method));)<SUB>752</SUB>> ]
+"1092" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(ArtMethod::FromReflectedMethod(soa, jlr_method)))<SUB>752</SUB>> ]
+"1093" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>752</SUB>> ]
+"1096" [label = <(ArtMethod::FromReflectedMethod,ArtMethod::FromReflectedMethod(soa, jlr_method))<SUB>752</SUB>> ]
+"1074" [label = <(UNLIKELY,UNLIKELY((jlr_method) == nullptr))<SUB>750</SUB>> ]
+"1095" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>752</SUB>> ]
+"1097" [label = <(&lt;operator&gt;.fieldAccess,ArtMethod::FromReflectedMethod)<SUB>752</SUB>> ]
+"1075" [label = <(&lt;operator&gt;.equals,(jlr_method) == nullptr)<SUB>750</SUB>> ]
+"1079" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_method),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_method == null&quot;))<SUB>750</SUB>> ]
+"1086" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_method),CHECK_NON_NULL_ARGUMENT(jlr_method))<SUB>750</SUB>> ]
+"1099" [label = <(FIELD_IDENTIFIER,FromReflectedMethod,FromReflectedMethod)<SUB>752</SUB>> ]
+"1080" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>750</SUB>> ]
+"1081" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>750</SUB>> ]
+"1083" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>750</SUB>> ]
+"1066" [label = <(METHOD,FromReflectedMethod)<SUB>749</SUB>> ]
+"1102" [label = <(METHOD_RETURN,jmethodID)<SUB>749</SUB>> ]
   "1070" -> "1075" 
   "1070" -> "1089" 
   "1089" -> "1095" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/410-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/410-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/410-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/410-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "WellKnownClasses::StringInitToStringFactory" {  
-"16057" [label = <(METHOD,WellKnownClasses::StringInitToStringFactory)> ]
-"16061" [label = <(METHOD_RETURN,ANY)> ]
-  "16057" -> "16061" 
+"16054" [label = <(METHOD,WellKnownClasses::StringInitToStringFactory)> ]
+"16058" [label = <(METHOD_RETURN,ANY)> ]
+  "16054" -> "16058" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/411-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/411-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/411-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/411-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CallStaticObjectMethodV" {  
-"16062" [label = <(METHOD,CallStaticObjectMethodV)> ]
-"16068" [label = <(METHOD_RETURN,ANY)> ]
-  "16062" -> "16068" 
+"16059" [label = <(METHOD,CallStaticObjectMethodV)> ]
+"16065" [label = <(METHOD_RETURN,ANY)> ]
+  "16059" -> "16065" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/412-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/412-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/412-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/412-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CallNonvirtualVoidMethodV" {  
-"16069" [label = <(METHOD,CallNonvirtualVoidMethodV)> ]
-"16076" [label = <(METHOD_RETURN,ANY)> ]
-  "16069" -> "16076" 
+"16066" [label = <(METHOD,CallNonvirtualVoidMethodV)> ]
+"16073" [label = <(METHOD_RETURN,ANY)> ]
+  "16066" -> "16073" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/413-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/413-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/413-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/413-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CallStaticObjectMethodA" {  
-"16077" [label = <(METHOD,CallStaticObjectMethodA)> ]
-"16083" [label = <(METHOD_RETURN,ANY)> ]
-  "16077" -> "16083" 
+"16074" [label = <(METHOD,CallStaticObjectMethodA)> ]
+"16080" [label = <(METHOD_RETURN,ANY)> ]
+  "16074" -> "16080" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/414-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/414-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/414-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/414-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CallNonvirtualVoidMethodA" {  
-"16084" [label = <(METHOD,CallNonvirtualVoidMethodA)> ]
-"16091" [label = <(METHOD_RETURN,ANY)> ]
-  "16084" -> "16091" 
+"16081" [label = <(METHOD,CallNonvirtualVoidMethodA)> ]
+"16088" [label = <(METHOD_RETURN,ANY)> ]
+  "16081" -> "16088" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/415-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/415-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/415-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/415-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(sig)" {  
-"16092" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(sig))> ]
-"16097" [label = <(METHOD_RETURN,ANY)> ]
-  "16092" -> "16097" 
+"16089" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(sig))> ]
+"16094" [label = <(METHOD_RETURN,ANY)> ]
+  "16089" -> "16094" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/416-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/416-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/416-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/416-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT(obj)" {  
-"16098" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(obj))> ]
-"16103" [label = <(METHOD_RETURN,ANY)> ]
-  "16098" -> "16103" 
+"16095" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(obj))> ]
+"16100" [label = <(METHOD_RETURN,ANY)> ]
+  "16095" -> "16100" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/417-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/417-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/417-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/417-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "result" {  
-"16104" [label = <(METHOD,result)> ]
-"16107" [label = <(METHOD_RETURN,ANY)> ]
-  "16104" -> "16107" 
+"16101" [label = <(METHOD,result)> ]
+"16104" [label = <(METHOD_RETURN,ANY)> ]
+  "16101" -> "16104" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/418-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/418-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/418-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/418-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeVirtualOrInterfaceWithVarArgs" {  
-"16108" [label = <(METHOD,InvokeVirtualOrInterfaceWithVarArgs)> ]
-"16114" [label = <(METHOD_RETURN,ANY)> ]
-  "16108" -> "16114" 
+"16105" [label = <(METHOD,InvokeVirtualOrInterfaceWithVarArgs)> ]
+"16111" [label = <(METHOD_RETURN,ANY)> ]
+  "16105" -> "16111" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/419-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/419-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/419-cfg.dot	2023-06-07 19:34:48.457388384 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/419-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetL" {  
-"16115" [label = <(METHOD,GetL)> ]
-"16118" [label = <(METHOD_RETURN,ANY)> ]
-  "16115" -> "16118" 
+"16112" [label = <(METHOD,GetL)> ]
+"16115" [label = <(METHOD_RETURN,ANY)> ]
+  "16112" -> "16115" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/42-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/42-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/42-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/42-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,51 +1,51 @@
 digraph "FromReflectedField" {  
-"1108" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>757</SUB>> ]
-"1127" [label = <(soa,soa(env))<SUB>758</SUB>> ]
-"1129" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj_field = soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>759</SUB>> ]
-"1156" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Field&gt; field = ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>764</SUB>> ]
-"1175" [label = <(RETURN,return jni::EncodeArtField(field-&gt;GetArtField());,return jni::EncodeArtField(field-&gt;GetArtField());)<SUB>765</SUB>> ]
-"1130" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj_field)<SUB>759</SUB>> ]
-"1137" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>759</SUB>> ]
-"1147" [label = <(&lt;operator&gt;.notEquals,obj_field-&gt;GetClass() != GetClassRoot&lt;mirror::Field&gt;())<SUB>760</SUB>> ]
-"1157" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt; field)<SUB>764</SUB>> ]
-"1164" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>764</SUB>> ]
-"1176" [label = <(jni::EncodeArtField,jni::EncodeArtField(field-&gt;GetArtField()))<SUB>765</SUB>> ]
-"1131" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>759</SUB>> ]
-"1138" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>759</SUB>> ]
-"1148" [label = <(GetClass,obj_field-&gt;GetClass())<SUB>760</SUB>> ]
-"1152" [label = <(GetClassRoot&lt;mirror::Field&gt;,GetClassRoot&lt;mirror::Field&gt;())<SUB>760</SUB>> ]
-"1154" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>762</SUB>> ]
-"1158" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>764</SUB>> ]
-"1165" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>764</SUB>> ]
-"1170" [label = <(::DownCast,::DownCast(obj_field))<SUB>764</SUB>> ]
-"1177" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtField)<SUB>765</SUB>> ]
-"1180" [label = <(GetArtField,field-&gt;GetArtField())<SUB>765</SUB>> ]
-"1112" [label = <(UNLIKELY,UNLIKELY((jlr_field) == nullptr))<SUB>757</SUB>> ]
-"1133" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>759</SUB>> ]
-"1139" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>759</SUB>> ]
-"1142" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>759</SUB>> ]
-"1149" [label = <(&lt;operator&gt;.indirectFieldAccess,obj_field-&gt;GetClass)<SUB>760</SUB>> ]
-"1160" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>764</SUB>> ]
-"1167" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>764</SUB>> ]
-"1171" [label = <(&lt;operator&gt;.fieldAccess,::DownCast)<SUB>764</SUB>> ]
-"1179" [label = <(FIELD_IDENTIFIER,EncodeArtField,EncodeArtField)<SUB>765</SUB>> ]
-"1181" [label = <(&lt;operator&gt;.indirectFieldAccess,field-&gt;GetArtField)<SUB>765</SUB>> ]
-"1113" [label = <(&lt;operator&gt;.equals,(jlr_field) == nullptr)<SUB>757</SUB>> ]
-"1117" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_field),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_field == null&quot;))<SUB>757</SUB>> ]
-"1124" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_field),CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>757</SUB>> ]
-"1135" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>759</SUB>> ]
-"1141" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>759</SUB>> ]
-"1144" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>759</SUB>> ]
-"1151" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>760</SUB>> ]
-"1162" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>764</SUB>> ]
-"1169" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>764</SUB>> ]
-"1173" [label = <(FIELD_IDENTIFIER,DownCast,DownCast)<SUB>764</SUB>> ]
-"1183" [label = <(FIELD_IDENTIFIER,GetArtField,GetArtField)<SUB>765</SUB>> ]
-"1118" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>757</SUB>> ]
-"1119" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>757</SUB>> ]
-"1121" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>757</SUB>> ]
-"1104" [label = <(METHOD,FromReflectedField)<SUB>756</SUB>> ]
-"1184" [label = <(METHOD_RETURN,jfieldID)<SUB>756</SUB>> ]
+"1108" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>756</SUB>> ]
+"1127" [label = <(soa,soa(env))<SUB>757</SUB>> ]
+"1129" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj_field = soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>758</SUB>> ]
+"1156" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Field&gt; field = ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>763</SUB>> ]
+"1175" [label = <(RETURN,return jni::EncodeArtField(field-&gt;GetArtField());,return jni::EncodeArtField(field-&gt;GetArtField());)<SUB>764</SUB>> ]
+"1130" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj_field)<SUB>758</SUB>> ]
+"1137" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jlr_field))<SUB>758</SUB>> ]
+"1147" [label = <(&lt;operator&gt;.notEquals,obj_field-&gt;GetClass() != GetClassRoot&lt;mirror::Field&gt;())<SUB>759</SUB>> ]
+"1157" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt; field)<SUB>763</SUB>> ]
+"1164" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Field&gt;::DownCast(obj_field))<SUB>763</SUB>> ]
+"1176" [label = <(jni::EncodeArtField,jni::EncodeArtField(field-&gt;GetArtField()))<SUB>764</SUB>> ]
+"1131" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>758</SUB>> ]
+"1138" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>758</SUB>> ]
+"1148" [label = <(GetClass,obj_field-&gt;GetClass())<SUB>759</SUB>> ]
+"1152" [label = <(GetClassRoot&lt;mirror::Field&gt;,GetClassRoot&lt;mirror::Field&gt;())<SUB>759</SUB>> ]
+"1154" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>761</SUB>> ]
+"1158" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>763</SUB>> ]
+"1165" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Field)<SUB>763</SUB>> ]
+"1170" [label = <(::DownCast,::DownCast(obj_field))<SUB>763</SUB>> ]
+"1177" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtField)<SUB>764</SUB>> ]
+"1180" [label = <(GetArtField,field-&gt;GetArtField())<SUB>764</SUB>> ]
+"1112" [label = <(UNLIKELY,UNLIKELY((jlr_field) == nullptr))<SUB>756</SUB>> ]
+"1133" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>758</SUB>> ]
+"1139" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>758</SUB>> ]
+"1142" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>758</SUB>> ]
+"1149" [label = <(&lt;operator&gt;.indirectFieldAccess,obj_field-&gt;GetClass)<SUB>759</SUB>> ]
+"1160" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>763</SUB>> ]
+"1167" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>763</SUB>> ]
+"1171" [label = <(&lt;operator&gt;.fieldAccess,::DownCast)<SUB>763</SUB>> ]
+"1179" [label = <(FIELD_IDENTIFIER,EncodeArtField,EncodeArtField)<SUB>764</SUB>> ]
+"1181" [label = <(&lt;operator&gt;.indirectFieldAccess,field-&gt;GetArtField)<SUB>764</SUB>> ]
+"1113" [label = <(&lt;operator&gt;.equals,(jlr_field) == nullptr)<SUB>756</SUB>> ]
+"1117" [label = <(CHECK_NON_NULL_ARGUMENT(jlr_field),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;jlr_field == null&quot;))<SUB>756</SUB>> ]
+"1124" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(jlr_field),CHECK_NON_NULL_ARGUMENT(jlr_field))<SUB>756</SUB>> ]
+"1135" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>758</SUB>> ]
+"1141" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>758</SUB>> ]
+"1144" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>758</SUB>> ]
+"1151" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>759</SUB>> ]
+"1162" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>763</SUB>> ]
+"1169" [label = <(FIELD_IDENTIFIER,Field,Field)<SUB>763</SUB>> ]
+"1173" [label = <(FIELD_IDENTIFIER,DownCast,DownCast)<SUB>763</SUB>> ]
+"1183" [label = <(FIELD_IDENTIFIER,GetArtField,GetArtField)<SUB>764</SUB>> ]
+"1118" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>756</SUB>> ]
+"1119" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>756</SUB>> ]
+"1121" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>756</SUB>> ]
+"1104" [label = <(METHOD,FromReflectedField)<SUB>755</SUB>> ]
+"1184" [label = <(METHOD_RETURN,jfieldID)<SUB>755</SUB>> ]
   "1108" -> "1113" 
   "1108" -> "1127" 
   "1127" -> "1135" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/420-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/420-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/420-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/420-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeVirtualOrInterfaceWithJValues" {  
-"16119" [label = <(METHOD,InvokeVirtualOrInterfaceWithJValues)> ]
-"16125" [label = <(METHOD_RETURN,ANY)> ]
-  "16119" -> "16125" 
+"16116" [label = <(METHOD,InvokeVirtualOrInterfaceWithJValues)> ]
+"16122" [label = <(METHOD_RETURN,ANY)> ]
+  "16116" -> "16122" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/421-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/421-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/421-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/421-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO" {  
-"16126" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO)<SUB>690</SUB>> ]
-"16129" [label = <(METHOD_RETURN,ANY)> ]
-  "16126" -> "16129" 
+"16123" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO)<SUB>689</SUB>> ]
+"16126" [label = <(METHOD_RETURN,ANY)> ]
+  "16123" -> "16126" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/422-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/422-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/422-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/422-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj)" {  
-"16130" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))> ]
-"16135" [label = <(METHOD_RETURN,ANY)> ]
-  "16130" -> "16135" 
+"16127" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))> ]
+"16132" [label = <(METHOD_RETURN,ANY)> ]
+  "16127" -> "16132" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/423-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/423-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/423-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/423-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid)" {  
-"16136" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))> ]
-"16141" [label = <(METHOD_RETURN,ANY)> ]
-  "16136" -> "16141" 
+"16133" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))> ]
+"16138" [label = <(METHOD_RETURN,ANY)> ]
+  "16133" -> "16138" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/424-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/424-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/424-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/424-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetZ" {  
-"16142" [label = <(METHOD,GetZ)> ]
-"16145" [label = <(METHOD_RETURN,ANY)> ]
-  "16142" -> "16145" 
+"16139" [label = <(METHOD,GetZ)> ]
+"16142" [label = <(METHOD_RETURN,ANY)> ]
+  "16139" -> "16142" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/425-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/425-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/425-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/425-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetB" {  
-"16146" [label = <(METHOD,GetB)> ]
-"16149" [label = <(METHOD_RETURN,ANY)> ]
-  "16146" -> "16149" 
+"16143" [label = <(METHOD,GetB)> ]
+"16146" [label = <(METHOD_RETURN,ANY)> ]
+  "16143" -> "16146" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/426-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/426-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/426-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/426-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetC" {  
-"16150" [label = <(METHOD,GetC)> ]
-"16153" [label = <(METHOD_RETURN,ANY)> ]
-  "16150" -> "16153" 
+"16147" [label = <(METHOD,GetC)> ]
+"16150" [label = <(METHOD_RETURN,ANY)> ]
+  "16147" -> "16150" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/427-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/427-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/427-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/427-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetD" {  
-"16154" [label = <(METHOD,GetD)> ]
-"16157" [label = <(METHOD_RETURN,ANY)> ]
-  "16154" -> "16157" 
+"16151" [label = <(METHOD,GetD)> ]
+"16154" [label = <(METHOD_RETURN,ANY)> ]
+  "16151" -> "16154" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/428-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/428-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/428-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/428-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetF" {  
-"16158" [label = <(METHOD,GetF)> ]
-"16161" [label = <(METHOD_RETURN,ANY)> ]
-  "16158" -> "16161" 
+"16155" [label = <(METHOD,GetF)> ]
+"16158" [label = <(METHOD_RETURN,ANY)> ]
+  "16155" -> "16158" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/429-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/429-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/429-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/429-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetI" {  
-"16162" [label = <(METHOD,GetI)> ]
-"16165" [label = <(METHOD_RETURN,ANY)> ]
-  "16162" -> "16165" 
+"16159" [label = <(METHOD,GetI)> ]
+"16162" [label = <(METHOD_RETURN,ANY)> ]
+  "16159" -> "16162" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/43-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/43-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/43-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/43-cfg.dot	2023-06-07 19:34:54.877387788 +0330
@@ -1,65 +1,65 @@
 digraph "ToReflectedMethod" {  
-"1192" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>769</SUB>> ]
-"1211" [label = <(soa,soa(env))<SUB>770</SUB>> ]
-"1214" [label = <(&lt;operator&gt;.assignment,* m = jni::DecodeArtMethod(mid))<SUB>771</SUB>> ]
-"1221" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Executable&gt; method)<SUB>772</SUB>> ]
-"1228" [label = <(DCHECK_EQ,DCHECK_EQ(Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize(), kRuntimePointerSize))<SUB>773</SUB>> ]
-"1240" [label = <(DCHECK,DCHECK(!Runtime::Current()-&gt;IsActiveTransaction()))<SUB>774</SUB>> ]
-"1283" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(method);,return soa.AddLocalReference&lt;jobject&gt;(method);)<SUB>780</SUB>> ]
-"1216" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>771</SUB>> ]
-"1222" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Executable)<SUB>772</SUB>> ]
-"1229" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>773</SUB>> ]
-"1241" [label = <(&lt;operator&gt;.logicalNot,!Runtime::Current()-&gt;IsActiveTransaction())<SUB>774</SUB>> ]
-"1250" [label = <(IsConstructor,m-&gt;IsConstructor())<SUB>775</SUB>> ]
-"1284" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(method))<SUB>780</SUB>> ]
-"1217" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>771</SUB>> ]
-"1224" [label = <(&lt;operator&gt;.fieldAccess,mirror::Executable)<SUB>772</SUB>> ]
-"1230" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>773</SUB>> ]
-"1242" [label = <(IsActiveTransaction,Runtime::Current()-&gt;IsActiveTransaction())<SUB>774</SUB>> ]
-"1251" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsConstructor)<SUB>775</SUB>> ]
-"1255" [label = <(&lt;operator&gt;.assignment,method = mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>776</SUB>> ]
-"1285" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>780</SUB>> ]
-"1196" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>769</SUB>> ]
-"1219" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>771</SUB>> ]
-"1226" [label = <(FIELD_IDENTIFIER,Executable,Executable)<SUB>772</SUB>> ]
-"1231" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>773</SUB>> ]
-"1238" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>773</SUB>> ]
-"1243" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;IsActiveTransaction)<SUB>774</SUB>> ]
-"1253" [label = <(FIELD_IDENTIFIER,IsConstructor,IsConstructor)<SUB>775</SUB>> ]
-"1257" [label = <(mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>776</SUB>> ]
-"1270" [label = <(&lt;operator&gt;.assignment,method = mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>778</SUB>> ]
-"1286" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>780</SUB>> ]
-"1197" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>769</SUB>> ]
-"1201" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>769</SUB>> ]
-"1208" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>769</SUB>> ]
-"1232" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>773</SUB>> ]
-"1244" [label = <(Runtime::Current,Runtime::Current())<SUB>774</SUB>> ]
-"1248" [label = <(FIELD_IDENTIFIER,IsActiveTransaction,IsActiveTransaction)<SUB>774</SUB>> ]
-"1258" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>776</SUB>> ]
-"1263" [label = <(Self,soa.Self())<SUB>776</SUB>> ]
-"1272" [label = <(mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>778</SUB>> ]
-"1288" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>780</SUB>> ]
-"1202" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>769</SUB>> ]
-"1233" [label = <(Runtime::Current,Runtime::Current())<SUB>773</SUB>> ]
-"1237" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>773</SUB>> ]
-"1245" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>774</SUB>> ]
-"1259" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor)<SUB>776</SUB>> ]
-"1262" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>776</SUB>> ]
-"1264" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>776</SUB>> ]
-"1273" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>778</SUB>> ]
-"1278" [label = <(Self,soa.Self())<SUB>778</SUB>> ]
-"1203" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>769</SUB>> ]
-"1205" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>769</SUB>> ]
-"1234" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>773</SUB>> ]
-"1247" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>774</SUB>> ]
-"1266" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>776</SUB>> ]
-"1274" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method)<SUB>778</SUB>> ]
-"1277" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>778</SUB>> ]
-"1279" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>778</SUB>> ]
-"1236" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>773</SUB>> ]
-"1281" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>778</SUB>> ]
-"1186" [label = <(METHOD,ToReflectedMethod)<SUB>768</SUB>> ]
-"1291" [label = <(METHOD_RETURN,jobject)<SUB>768</SUB>> ]
+"1192" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>768</SUB>> ]
+"1211" [label = <(soa,soa(env))<SUB>769</SUB>> ]
+"1214" [label = <(&lt;operator&gt;.assignment,* m = jni::DecodeArtMethod(mid))<SUB>770</SUB>> ]
+"1221" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Executable&gt; method)<SUB>771</SUB>> ]
+"1228" [label = <(DCHECK_EQ,DCHECK_EQ(Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize(), kRuntimePointerSize))<SUB>772</SUB>> ]
+"1240" [label = <(DCHECK,DCHECK(!Runtime::Current()-&gt;IsActiveTransaction()))<SUB>773</SUB>> ]
+"1283" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(method);,return soa.AddLocalReference&lt;jobject&gt;(method);)<SUB>779</SUB>> ]
+"1216" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>770</SUB>> ]
+"1222" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Executable)<SUB>771</SUB>> ]
+"1229" [label = <(GetImagePointerSize,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize())<SUB>772</SUB>> ]
+"1241" [label = <(&lt;operator&gt;.logicalNot,!Runtime::Current()-&gt;IsActiveTransaction())<SUB>773</SUB>> ]
+"1250" [label = <(IsConstructor,m-&gt;IsConstructor())<SUB>774</SUB>> ]
+"1284" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(method))<SUB>779</SUB>> ]
+"1217" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>770</SUB>> ]
+"1224" [label = <(&lt;operator&gt;.fieldAccess,mirror::Executable)<SUB>771</SUB>> ]
+"1230" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker()-&gt;GetImagePointerSize)<SUB>772</SUB>> ]
+"1242" [label = <(IsActiveTransaction,Runtime::Current()-&gt;IsActiveTransaction())<SUB>773</SUB>> ]
+"1251" [label = <(&lt;operator&gt;.indirectFieldAccess,m-&gt;IsConstructor)<SUB>774</SUB>> ]
+"1255" [label = <(&lt;operator&gt;.assignment,method = mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>775</SUB>> ]
+"1285" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>779</SUB>> ]
+"1196" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>768</SUB>> ]
+"1219" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>770</SUB>> ]
+"1226" [label = <(FIELD_IDENTIFIER,Executable,Executable)<SUB>771</SUB>> ]
+"1231" [label = <(GetClassLinker,Runtime::Current()-&gt;GetClassLinker())<SUB>772</SUB>> ]
+"1238" [label = <(FIELD_IDENTIFIER,GetImagePointerSize,GetImagePointerSize)<SUB>772</SUB>> ]
+"1243" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;IsActiveTransaction)<SUB>773</SUB>> ]
+"1253" [label = <(FIELD_IDENTIFIER,IsConstructor,IsConstructor)<SUB>774</SUB>> ]
+"1257" [label = <(mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>775</SUB>> ]
+"1270" [label = <(&lt;operator&gt;.assignment,method = mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>777</SUB>> ]
+"1286" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>779</SUB>> ]
+"1197" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>768</SUB>> ]
+"1201" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>768</SUB>> ]
+"1208" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>768</SUB>> ]
+"1232" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetClassLinker)<SUB>772</SUB>> ]
+"1244" [label = <(Runtime::Current,Runtime::Current())<SUB>773</SUB>> ]
+"1248" [label = <(FIELD_IDENTIFIER,IsActiveTransaction,IsActiveTransaction)<SUB>773</SUB>> ]
+"1258" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>775</SUB>> ]
+"1263" [label = <(Self,soa.Self())<SUB>775</SUB>> ]
+"1272" [label = <(mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;(soa.Self(), m))<SUB>777</SUB>> ]
+"1288" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>779</SUB>> ]
+"1202" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>768</SUB>> ]
+"1233" [label = <(Runtime::Current,Runtime::Current())<SUB>772</SUB>> ]
+"1237" [label = <(FIELD_IDENTIFIER,GetClassLinker,GetClassLinker)<SUB>772</SUB>> ]
+"1245" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>773</SUB>> ]
+"1259" [label = <(&lt;operator&gt;.fieldAccess,mirror::Constructor)<SUB>775</SUB>> ]
+"1262" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>775</SUB>> ]
+"1264" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>775</SUB>> ]
+"1273" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method::CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>777</SUB>> ]
+"1278" [label = <(Self,soa.Self())<SUB>777</SUB>> ]
+"1203" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>768</SUB>> ]
+"1205" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>768</SUB>> ]
+"1234" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>772</SUB>> ]
+"1247" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>773</SUB>> ]
+"1266" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>775</SUB>> ]
+"1274" [label = <(&lt;operator&gt;.fieldAccess,mirror::Method)<SUB>777</SUB>> ]
+"1277" [label = <(FIELD_IDENTIFIER,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;,CreateFromArtMethod&lt;kRuntimePointerSize, false&gt;)<SUB>777</SUB>> ]
+"1279" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>777</SUB>> ]
+"1236" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>772</SUB>> ]
+"1281" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>777</SUB>> ]
+"1186" [label = <(METHOD,ToReflectedMethod)<SUB>767</SUB>> ]
+"1291" [label = <(METHOD_RETURN,jobject)<SUB>767</SUB>> ]
   "1192" -> "1197" 
   "1192" -> "1211" 
   "1211" -> "1219" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/430-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/430-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/430-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/430-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetJ" {  
-"16166" [label = <(METHOD,GetJ)> ]
-"16169" [label = <(METHOD_RETURN,ANY)> ]
-  "16166" -> "16169" 
+"16163" [label = <(METHOD,GetJ)> ]
+"16166" [label = <(METHOD_RETURN,ANY)> ]
+  "16163" -> "16166" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/431-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/431-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/431-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/431-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetS" {  
-"16170" [label = <(METHOD,GetS)> ]
-"16173" [label = <(METHOD_RETURN,ANY)> ]
-  "16170" -> "16173" 
+"16167" [label = <(METHOD,GetS)> ]
+"16170" [label = <(METHOD_RETURN,ANY)> ]
+  "16167" -> "16170" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/432-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/432-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/432-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/432-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID" {  
-"16174" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID)<SUB>687</SUB>> ]
-"16177" [label = <(METHOD_RETURN,ANY)> ]
-  "16174" -> "16177" 
+"16171" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID)<SUB>686</SUB>> ]
+"16174" [label = <(METHOD_RETURN,ANY)> ]
+  "16171" -> "16174" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/433-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/433-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/433-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/433-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj)" {  
-"16178" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))> ]
-"16183" [label = <(METHOD_RETURN,ANY)> ]
-  "16178" -> "16183" 
+"16175" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))> ]
+"16180" [label = <(METHOD_RETURN,ANY)> ]
+  "16175" -> "16180" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/434-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/434-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/434-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/434-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid)" {  
-"16184" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))> ]
-"16189" [label = <(METHOD_RETURN,ANY)> ]
-  "16184" -> "16189" 
+"16181" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))> ]
+"16186" [label = <(METHOD_RETURN,ANY)> ]
+  "16181" -> "16186" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/435-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/435-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/435-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/435-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeWithVarArgs" {  
-"16190" [label = <(METHOD,InvokeWithVarArgs)> ]
-"16196" [label = <(METHOD_RETURN,ANY)> ]
-  "16190" -> "16196" 
+"16187" [label = <(METHOD,InvokeWithVarArgs)> ]
+"16193" [label = <(METHOD_RETURN,ANY)> ]
+  "16187" -> "16193" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/436-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/436-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/436-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/436-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "InvokeWithJValues" {  
-"16197" [label = <(METHOD,InvokeWithJValues)> ]
-"16203" [label = <(METHOD_RETURN,ANY)> ]
-  "16197" -> "16203" 
+"16194" [label = <(METHOD,InvokeWithJValues)> ]
+"16200" [label = <(METHOD_RETURN,ANY)> ]
+  "16194" -> "16200" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/437-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/437-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/437-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/437-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetObject" {  
-"16204" [label = <(METHOD,GetObject)> ]
-"16208" [label = <(METHOD_RETURN,ANY)> ]
-  "16204" -> "16208" 
+"16201" [label = <(METHOD,GetObject)> ]
+"16205" [label = <(METHOD_RETURN,ANY)> ]
+  "16201" -> "16205" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/438-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/438-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/438-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/438-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GetDeclaringClass" {  
-"16209" [label = <(METHOD,GetDeclaringClass)> ]
-"16212" [label = <(METHOD_RETURN,ANY)> ]
-  "16209" -> "16212" 
+"16206" [label = <(METHOD,GetDeclaringClass)> ]
+"16209" [label = <(METHOD_RETURN,ANY)> ]
+  "16206" -> "16209" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/439-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/439-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/439-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/439-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object)" {  
-"16213" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))> ]
-"16218" [label = <(METHOD_RETURN,ANY)> ]
-  "16213" -> "16218" 
+"16210" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_object))> ]
+"16215" [label = <(METHOD_RETURN,ANY)> ]
+  "16210" -> "16215" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/44-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/44-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/44-cfg.dot	2023-06-07 19:34:48.277388400 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/44-cfg.dot	2023-06-07 19:34:54.887387786 +0330
@@ -1,34 +1,34 @@
 digraph "ToReflectedField" {  
-"1299" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>784</SUB>> ]
-"1318" [label = <(soa,soa(env))<SUB>785</SUB>> ]
-"1321" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>786</SUB>> ]
-"1328" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));)<SUB>787</SUB>> ]
-"1323" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>786</SUB>> ]
-"1329" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true)))<SUB>787</SUB>> ]
-"1324" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>786</SUB>> ]
-"1330" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>787</SUB>> ]
-"1335" [label = <(&lt;operator&gt;.greaterThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true))<SUB>788</SUB>> ]
-"1303" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>784</SUB>> ]
-"1326" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>786</SUB>> ]
-"1331" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>787</SUB>> ]
-"1336" [label = <(&lt;operator&gt;.lessThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize)<SUB>788</SUB>> ]
-"1343" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(), f, true))<SUB>788</SUB>> ]
-"1304" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>784</SUB>> ]
-"1308" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>784</SUB>> ]
-"1315" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>784</SUB>> ]
-"1333" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>787</SUB>> ]
-"1337" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::CreateFromArtField)<SUB>788</SUB>> ]
-"1344" [label = <(&lt;operator&gt;.expressionList,soa.Self(), f, true)<SUB>788</SUB>> ]
-"1309" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>784</SUB>> ]
-"1338" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>788</SUB>> ]
-"1341" [label = <(FIELD_IDENTIFIER,CreateFromArtField,CreateFromArtField)<SUB>788</SUB>> ]
-"1345" [label = <(Self,soa.Self())<SUB>788</SUB>> ]
-"1310" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>784</SUB>> ]
-"1312" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>784</SUB>> ]
-"1346" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>788</SUB>> ]
-"1348" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>788</SUB>> ]
-"1293" [label = <(METHOD,ToReflectedField)<SUB>783</SUB>> ]
-"1351" [label = <(METHOD_RETURN,jobject)<SUB>783</SUB>> ]
+"1299" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(fid))<SUB>783</SUB>> ]
+"1318" [label = <(soa,soa(env))<SUB>784</SUB>> ]
+"1321" [label = <(&lt;operator&gt;.assignment,* f = jni::DecodeArtField(fid))<SUB>785</SUB>> ]
+"1328" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));,return soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true));)<SUB>786</SUB>> ]
+"1323" [label = <(jni::DecodeArtField,jni::DecodeArtField(fid))<SUB>785</SUB>> ]
+"1329" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(\012        mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true)))<SUB>786</SUB>> ]
+"1324" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtField)<SUB>785</SUB>> ]
+"1330" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>786</SUB>> ]
+"1335" [label = <(&lt;operator&gt;.greaterThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize&gt;(soa.Self(), f, true))<SUB>787</SUB>> ]
+"1303" [label = <(UNLIKELY,UNLIKELY((fid) == nullptr))<SUB>783</SUB>> ]
+"1326" [label = <(FIELD_IDENTIFIER,DecodeArtField,DecodeArtField)<SUB>785</SUB>> ]
+"1331" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>786</SUB>> ]
+"1336" [label = <(&lt;operator&gt;.lessThan,mirror::Field::CreateFromArtField&lt;kRuntimePointerSize)<SUB>787</SUB>> ]
+"1343" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(), f, true))<SUB>787</SUB>> ]
+"1304" [label = <(&lt;operator&gt;.equals,(fid) == nullptr)<SUB>783</SUB>> ]
+"1308" [label = <(CHECK_NON_NULL_ARGUMENT(fid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;fid == null&quot;))<SUB>783</SUB>> ]
+"1315" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(fid),CHECK_NON_NULL_ARGUMENT(fid))<SUB>783</SUB>> ]
+"1333" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>786</SUB>> ]
+"1337" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field::CreateFromArtField)<SUB>787</SUB>> ]
+"1344" [label = <(&lt;operator&gt;.expressionList,soa.Self(), f, true)<SUB>787</SUB>> ]
+"1309" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>783</SUB>> ]
+"1338" [label = <(&lt;operator&gt;.fieldAccess,mirror::Field)<SUB>787</SUB>> ]
+"1341" [label = <(FIELD_IDENTIFIER,CreateFromArtField,CreateFromArtField)<SUB>787</SUB>> ]
+"1345" [label = <(Self,soa.Self())<SUB>787</SUB>> ]
+"1310" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>783</SUB>> ]
+"1312" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>783</SUB>> ]
+"1346" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>787</SUB>> ]
+"1348" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>787</SUB>> ]
+"1293" [label = <(METHOD,ToReflectedField)<SUB>782</SUB>> ]
+"1351" [label = <(METHOD_RETURN,jobject)<SUB>782</SUB>> ]
   "1299" -> "1304" 
   "1299" -> "1318" 
   "1318" -> "1326" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/440-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/440-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/440-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/440-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid)" {  
-"16219" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))> ]
-"16224" [label = <(METHOD_RETURN,ANY)> ]
-  "16219" -> "16224" 
+"16216" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(fid))> ]
+"16221" [label = <(METHOD_RETURN,ANY)> ]
+  "16216" -> "16221" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/441-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/441-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/441-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/441-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "NotifySetObjectField" {  
-"16225" [label = <(METHOD,NotifySetObjectField)> ]
-"16230" [label = <(METHOD_RETURN,ANY)> ]
-  "16225" -> "16230" 
+"16222" [label = <(METHOD,NotifySetObjectField)> ]
+"16227" [label = <(METHOD_RETURN,ANY)> ]
+  "16222" -> "16227" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/442-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/442-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/442-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/442-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD" {  
-"16231" [label = <(METHOD,GET_PRIMITIVE_FIELD)<SUB>1655</SUB>> ]
-"16234" [label = <(METHOD_RETURN,ANY)> ]
-  "16231" -> "16234" 
+"16228" [label = <(METHOD,GET_PRIMITIVE_FIELD)<SUB>1654</SUB>> ]
+"16231" [label = <(METHOD_RETURN,ANY)> ]
+  "16228" -> "16231" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/443-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/443-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/443-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/443-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Boolean, obj)" {  
-"16235" [label = <(METHOD,GET_PRIMITIVE_FIELD(Boolean, obj))> ]
-"16239" [label = <(METHOD_RETURN,ANY)> ]
-  "16235" -> "16239" 
+"16232" [label = <(METHOD,GET_PRIMITIVE_FIELD(Boolean, obj))> ]
+"16236" [label = <(METHOD_RETURN,ANY)> ]
+  "16232" -> "16236" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/444-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/444-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/444-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/444-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Byte, obj)" {  
-"16240" [label = <(METHOD,GET_PRIMITIVE_FIELD(Byte, obj))> ]
-"16244" [label = <(METHOD_RETURN,ANY)> ]
-  "16240" -> "16244" 
+"16237" [label = <(METHOD,GET_PRIMITIVE_FIELD(Byte, obj))> ]
+"16241" [label = <(METHOD_RETURN,ANY)> ]
+  "16237" -> "16241" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/445-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/445-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/445-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/445-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Char, obj)" {  
-"16245" [label = <(METHOD,GET_PRIMITIVE_FIELD(Char, obj))> ]
-"16249" [label = <(METHOD_RETURN,ANY)> ]
-  "16245" -> "16249" 
+"16242" [label = <(METHOD,GET_PRIMITIVE_FIELD(Char, obj))> ]
+"16246" [label = <(METHOD_RETURN,ANY)> ]
+  "16242" -> "16246" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/446-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/446-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/446-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/446-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Short, obj)" {  
-"16250" [label = <(METHOD,GET_PRIMITIVE_FIELD(Short, obj))> ]
-"16254" [label = <(METHOD_RETURN,ANY)> ]
-  "16250" -> "16254" 
+"16247" [label = <(METHOD,GET_PRIMITIVE_FIELD(Short, obj))> ]
+"16251" [label = <(METHOD_RETURN,ANY)> ]
+  "16247" -> "16251" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/447-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/447-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/447-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/447-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Int, obj)" {  
-"16255" [label = <(METHOD,GET_PRIMITIVE_FIELD(Int, obj))> ]
-"16259" [label = <(METHOD_RETURN,ANY)> ]
-  "16255" -> "16259" 
+"16252" [label = <(METHOD,GET_PRIMITIVE_FIELD(Int, obj))> ]
+"16256" [label = <(METHOD_RETURN,ANY)> ]
+  "16252" -> "16256" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/448-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/448-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/448-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/448-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Long, obj)" {  
-"16260" [label = <(METHOD,GET_PRIMITIVE_FIELD(Long, obj))> ]
-"16264" [label = <(METHOD_RETURN,ANY)> ]
-  "16260" -> "16264" 
+"16257" [label = <(METHOD,GET_PRIMITIVE_FIELD(Long, obj))> ]
+"16261" [label = <(METHOD_RETURN,ANY)> ]
+  "16257" -> "16261" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/449-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/449-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/449-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/449-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Float, obj)" {  
-"16265" [label = <(METHOD,GET_PRIMITIVE_FIELD(Float, obj))> ]
-"16269" [label = <(METHOD_RETURN,ANY)> ]
-  "16265" -> "16269" 
+"16262" [label = <(METHOD,GET_PRIMITIVE_FIELD(Float, obj))> ]
+"16266" [label = <(METHOD_RETURN,ANY)> ]
+  "16262" -> "16266" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/45-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/45-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/45-cfg.dot	2023-06-07 19:34:48.287388401 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/45-cfg.dot	2023-06-07 19:34:54.887387786 +0330
@@ -1,34 +1,34 @@
 digraph "GetObjectClass" {  
-"1357" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_object))<SUB>792</SUB>> ]
-"1376" [label = <(soa,soa(env))<SUB>793</SUB>> ]
-"1378" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>794</SUB>> ]
-"1395" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());)<SUB>795</SUB>> ]
-"1379" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>794</SUB>> ]
-"1386" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>794</SUB>> ]
-"1396" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass()))<SUB>795</SUB>> ]
-"1380" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>794</SUB>> ]
-"1387" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>794</SUB>> ]
-"1397" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>795</SUB>> ]
-"1402" [label = <(GetClass,o-&gt;GetClass())<SUB>795</SUB>> ]
-"1361" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>792</SUB>> ]
-"1382" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>794</SUB>> ]
-"1388" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>794</SUB>> ]
-"1391" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>794</SUB>> ]
-"1398" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>795</SUB>> ]
-"1403" [label = <(&lt;operator&gt;.indirectFieldAccess,o-&gt;GetClass)<SUB>795</SUB>> ]
-"1362" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>792</SUB>> ]
-"1366" [label = <(CHECK_NON_NULL_ARGUMENT(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>792</SUB>> ]
-"1373" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_object),CHECK_NON_NULL_ARGUMENT(java_object))<SUB>792</SUB>> ]
-"1384" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>794</SUB>> ]
-"1390" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>794</SUB>> ]
-"1393" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>794</SUB>> ]
-"1400" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>795</SUB>> ]
-"1405" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>795</SUB>> ]
-"1367" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>792</SUB>> ]
-"1368" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>792</SUB>> ]
-"1370" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>792</SUB>> ]
-"1353" [label = <(METHOD,GetObjectClass)<SUB>791</SUB>> ]
-"1406" [label = <(METHOD_RETURN,jclass)<SUB>791</SUB>> ]
+"1357" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_object))<SUB>791</SUB>> ]
+"1376" [label = <(soa,soa(env))<SUB>792</SUB>> ]
+"1378" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; o = soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>793</SUB>> ]
+"1395" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());,return soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass());)<SUB>794</SUB>> ]
+"1379" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; o)<SUB>793</SUB>> ]
+"1386" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_object))<SUB>793</SUB>> ]
+"1396" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(o-&gt;GetClass()))<SUB>794</SUB>> ]
+"1380" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>793</SUB>> ]
+"1387" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>793</SUB>> ]
+"1397" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>794</SUB>> ]
+"1402" [label = <(GetClass,o-&gt;GetClass())<SUB>794</SUB>> ]
+"1361" [label = <(UNLIKELY,UNLIKELY((java_object) == nullptr))<SUB>791</SUB>> ]
+"1382" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>793</SUB>> ]
+"1388" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>793</SUB>> ]
+"1391" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>793</SUB>> ]
+"1398" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>794</SUB>> ]
+"1403" [label = <(&lt;operator&gt;.indirectFieldAccess,o-&gt;GetClass)<SUB>794</SUB>> ]
+"1362" [label = <(&lt;operator&gt;.equals,(java_object) == nullptr)<SUB>791</SUB>> ]
+"1366" [label = <(CHECK_NON_NULL_ARGUMENT(java_object),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_object == null&quot;))<SUB>791</SUB>> ]
+"1373" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_object),CHECK_NON_NULL_ARGUMENT(java_object))<SUB>791</SUB>> ]
+"1384" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>793</SUB>> ]
+"1390" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>793</SUB>> ]
+"1393" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>793</SUB>> ]
+"1400" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>794</SUB>> ]
+"1405" [label = <(FIELD_IDENTIFIER,GetClass,GetClass)<SUB>794</SUB>> ]
+"1367" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>791</SUB>> ]
+"1368" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>791</SUB>> ]
+"1370" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>791</SUB>> ]
+"1353" [label = <(METHOD,GetObjectClass)<SUB>790</SUB>> ]
+"1406" [label = <(METHOD_RETURN,jclass)<SUB>790</SUB>> ]
   "1357" -> "1362" 
   "1357" -> "1376" 
   "1376" -> "1384" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/450-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/450-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/450-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/450-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_PRIMITIVE_FIELD(Double, obj)" {  
-"16270" [label = <(METHOD,GET_PRIMITIVE_FIELD(Double, obj))> ]
-"16274" [label = <(METHOD_RETURN,ANY)> ]
-  "16270" -> "16274" 
+"16267" [label = <(METHOD,GET_PRIMITIVE_FIELD(Double, obj))> ]
+"16271" [label = <(METHOD_RETURN,ANY)> ]
+  "16267" -> "16271" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/451-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/451-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/451-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/451-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD" {  
-"16275" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD)<SUB>1664</SUB>> ]
-"16277" [label = <(METHOD_RETURN,ANY)> ]
-  "16275" -> "16277" 
+"16272" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD)<SUB>1663</SUB>> ]
+"16274" [label = <(METHOD_RETURN,ANY)> ]
+  "16272" -> "16274" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/452-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/452-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/452-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/452-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Boolean)" {  
-"16278" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Boolean))> ]
-"16281" [label = <(METHOD_RETURN,ANY)> ]
-  "16278" -> "16281" 
+"16275" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Boolean))> ]
+"16278" [label = <(METHOD_RETURN,ANY)> ]
+  "16275" -> "16278" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/453-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/453-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/453-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/453-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Byte)" {  
-"16282" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Byte))> ]
-"16285" [label = <(METHOD_RETURN,ANY)> ]
-  "16282" -> "16285" 
+"16279" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Byte))> ]
+"16282" [label = <(METHOD_RETURN,ANY)> ]
+  "16279" -> "16282" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/454-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/454-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/454-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/454-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Char)" {  
-"16286" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Char))> ]
-"16289" [label = <(METHOD_RETURN,ANY)> ]
-  "16286" -> "16289" 
+"16283" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Char))> ]
+"16286" [label = <(METHOD_RETURN,ANY)> ]
+  "16283" -> "16286" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/455-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/455-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/455-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/455-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Short)" {  
-"16290" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Short))> ]
-"16293" [label = <(METHOD_RETURN,ANY)> ]
-  "16290" -> "16293" 
+"16287" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Short))> ]
+"16290" [label = <(METHOD_RETURN,ANY)> ]
+  "16287" -> "16290" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/456-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/456-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/456-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/456-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Int)" {  
-"16294" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Int))> ]
-"16297" [label = <(METHOD_RETURN,ANY)> ]
-  "16294" -> "16297" 
+"16291" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Int))> ]
+"16294" [label = <(METHOD_RETURN,ANY)> ]
+  "16291" -> "16294" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/457-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/457-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/457-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/457-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Long)" {  
-"16298" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Long))> ]
-"16301" [label = <(METHOD_RETURN,ANY)> ]
-  "16298" -> "16301" 
+"16295" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Long))> ]
+"16298" [label = <(METHOD_RETURN,ANY)> ]
+  "16295" -> "16298" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/458-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/458-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/458-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/458-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Float)" {  
-"16302" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Float))> ]
-"16305" [label = <(METHOD_RETURN,ANY)> ]
-  "16302" -> "16305" 
+"16299" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Float))> ]
+"16302" [label = <(METHOD_RETURN,ANY)> ]
+  "16299" -> "16302" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/459-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/459-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/459-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/459-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "GET_STATIC_PRIMITIVE_FIELD(Double)" {  
-"16306" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Double))> ]
-"16309" [label = <(METHOD_RETURN,ANY)> ]
-  "16306" -> "16309" 
+"16303" [label = <(METHOD,GET_STATIC_PRIMITIVE_FIELD(Double))> ]
+"16306" [label = <(METHOD_RETURN,ANY)> ]
+  "16303" -> "16306" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/46-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/46-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/46-cfg.dot	2023-06-07 19:34:48.287388401 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/46-cfg.dot	2023-06-07 19:34:54.887387786 +0330
@@ -1,38 +1,38 @@
 digraph "GetSuperclass" {  
-"1412" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>799</SUB>> ]
-"1431" [label = <(soa,soa(env))<SUB>800</SUB>> ]
-"1433" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>801</SUB>> ]
-"1450" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());)<SUB>802</SUB>> ]
-"1434" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>801</SUB>> ]
-"1441" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>801</SUB>> ]
-"1451" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass()))<SUB>802</SUB>> ]
-"1435" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>801</SUB>> ]
-"1442" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>801</SUB>> ]
-"1452" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>802</SUB>> ]
-"1457" [label = <(&lt;operator&gt;.conditional,c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass())<SUB>802</SUB>> ]
-"1416" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>799</SUB>> ]
-"1437" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>801</SUB>> ]
-"1443" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>801</SUB>> ]
-"1446" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>801</SUB>> ]
-"1453" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>802</SUB>> ]
-"1458" [label = <(IsInterface,c-&gt;IsInterface())<SUB>802</SUB>> ]
-"1463" [label = <(GetSuperClass,c-&gt;GetSuperClass())<SUB>802</SUB>> ]
-"1417" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>799</SUB>> ]
-"1421" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>799</SUB>> ]
-"1428" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>799</SUB>> ]
-"1439" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>801</SUB>> ]
-"1445" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>801</SUB>> ]
-"1448" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>801</SUB>> ]
-"1455" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>802</SUB>> ]
-"1459" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsInterface)<SUB>802</SUB>> ]
-"1464" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetSuperClass)<SUB>802</SUB>> ]
-"1422" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>799</SUB>> ]
-"1461" [label = <(FIELD_IDENTIFIER,IsInterface,IsInterface)<SUB>802</SUB>> ]
-"1466" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>802</SUB>> ]
-"1423" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>799</SUB>> ]
-"1425" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>799</SUB>> ]
-"1408" [label = <(METHOD,GetSuperclass)<SUB>798</SUB>> ]
-"1467" [label = <(METHOD_RETURN,jclass)<SUB>798</SUB>> ]
+"1412" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>798</SUB>> ]
+"1431" [label = <(soa,soa(env))<SUB>799</SUB>> ]
+"1433" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>800</SUB>> ]
+"1450" [label = <(RETURN,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());,return soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass());)<SUB>801</SUB>> ]
+"1434" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>800</SUB>> ]
+"1441" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>800</SUB>> ]
+"1451" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jclass&gt;(c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass()))<SUB>801</SUB>> ]
+"1435" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>800</SUB>> ]
+"1442" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>800</SUB>> ]
+"1452" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jclass)<SUB>801</SUB>> ]
+"1457" [label = <(&lt;operator&gt;.conditional,c-&gt;IsInterface() ? nullptr : c-&gt;GetSuperClass())<SUB>801</SUB>> ]
+"1416" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>798</SUB>> ]
+"1437" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>800</SUB>> ]
+"1443" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>800</SUB>> ]
+"1446" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>800</SUB>> ]
+"1453" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>801</SUB>> ]
+"1458" [label = <(IsInterface,c-&gt;IsInterface())<SUB>801</SUB>> ]
+"1463" [label = <(GetSuperClass,c-&gt;GetSuperClass())<SUB>801</SUB>> ]
+"1417" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>798</SUB>> ]
+"1421" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>798</SUB>> ]
+"1428" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>798</SUB>> ]
+"1439" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>800</SUB>> ]
+"1445" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>800</SUB>> ]
+"1448" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>800</SUB>> ]
+"1455" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>801</SUB>> ]
+"1459" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsInterface)<SUB>801</SUB>> ]
+"1464" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;GetSuperClass)<SUB>801</SUB>> ]
+"1422" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>798</SUB>> ]
+"1461" [label = <(FIELD_IDENTIFIER,IsInterface,IsInterface)<SUB>801</SUB>> ]
+"1466" [label = <(FIELD_IDENTIFIER,GetSuperClass,GetSuperClass)<SUB>801</SUB>> ]
+"1423" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>798</SUB>> ]
+"1425" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>798</SUB>> ]
+"1408" [label = <(METHOD,GetSuperclass)<SUB>797</SUB>> ]
+"1467" [label = <(METHOD_RETURN,jclass)<SUB>797</SUB>> ]
   "1412" -> "1417" 
   "1412" -> "1431" 
   "1431" -> "1439" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/460-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/460-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/460-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/460-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD" {  
-"16310" [label = <(METHOD,SET_PRIMITIVE_FIELD)<SUB>1671</SUB>> ]
-"16313" [label = <(METHOD_RETURN,ANY)> ]
-  "16310" -> "16313" 
+"16307" [label = <(METHOD,SET_PRIMITIVE_FIELD)<SUB>1670</SUB>> ]
+"16310" [label = <(METHOD_RETURN,ANY)> ]
+  "16307" -> "16310" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/461-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/461-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/461-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/461-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Boolean, obj, v)" {  
-"16314" [label = <(METHOD,SET_PRIMITIVE_FIELD(Boolean, obj, v))> ]
-"16318" [label = <(METHOD_RETURN,ANY)> ]
-  "16314" -> "16318" 
+"16311" [label = <(METHOD,SET_PRIMITIVE_FIELD(Boolean, obj, v))> ]
+"16315" [label = <(METHOD_RETURN,ANY)> ]
+  "16311" -> "16315" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/462-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/462-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/462-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/462-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Byte, obj, v)" {  
-"16319" [label = <(METHOD,SET_PRIMITIVE_FIELD(Byte, obj, v))> ]
-"16323" [label = <(METHOD_RETURN,ANY)> ]
-  "16319" -> "16323" 
+"16316" [label = <(METHOD,SET_PRIMITIVE_FIELD(Byte, obj, v))> ]
+"16320" [label = <(METHOD_RETURN,ANY)> ]
+  "16316" -> "16320" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/463-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/463-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/463-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/463-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Char, obj, v)" {  
-"16324" [label = <(METHOD,SET_PRIMITIVE_FIELD(Char, obj, v))> ]
-"16328" [label = <(METHOD_RETURN,ANY)> ]
-  "16324" -> "16328" 
+"16321" [label = <(METHOD,SET_PRIMITIVE_FIELD(Char, obj, v))> ]
+"16325" [label = <(METHOD_RETURN,ANY)> ]
+  "16321" -> "16325" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/464-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/464-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/464-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/464-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Float, obj, v)" {  
-"16329" [label = <(METHOD,SET_PRIMITIVE_FIELD(Float, obj, v))> ]
-"16333" [label = <(METHOD_RETURN,ANY)> ]
-  "16329" -> "16333" 
+"16326" [label = <(METHOD,SET_PRIMITIVE_FIELD(Float, obj, v))> ]
+"16330" [label = <(METHOD_RETURN,ANY)> ]
+  "16326" -> "16330" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/465-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/465-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/465-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/465-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Double, obj, v)" {  
-"16334" [label = <(METHOD,SET_PRIMITIVE_FIELD(Double, obj, v))> ]
-"16338" [label = <(METHOD_RETURN,ANY)> ]
-  "16334" -> "16338" 
+"16331" [label = <(METHOD,SET_PRIMITIVE_FIELD(Double, obj, v))> ]
+"16335" [label = <(METHOD_RETURN,ANY)> ]
+  "16331" -> "16335" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/466-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/466-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/466-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/466-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Int, obj, v)" {  
-"16339" [label = <(METHOD,SET_PRIMITIVE_FIELD(Int, obj, v))> ]
-"16343" [label = <(METHOD_RETURN,ANY)> ]
-  "16339" -> "16343" 
+"16336" [label = <(METHOD,SET_PRIMITIVE_FIELD(Int, obj, v))> ]
+"16340" [label = <(METHOD_RETURN,ANY)> ]
+  "16336" -> "16340" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/467-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/467-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/467-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/467-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Long, obj, v)" {  
-"16344" [label = <(METHOD,SET_PRIMITIVE_FIELD(Long, obj, v))> ]
-"16348" [label = <(METHOD_RETURN,ANY)> ]
-  "16344" -> "16348" 
+"16341" [label = <(METHOD,SET_PRIMITIVE_FIELD(Long, obj, v))> ]
+"16345" [label = <(METHOD_RETURN,ANY)> ]
+  "16341" -> "16345" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/468-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/468-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/468-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/468-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_PRIMITIVE_FIELD(Short, obj, v)" {  
-"16349" [label = <(METHOD,SET_PRIMITIVE_FIELD(Short, obj, v))> ]
-"16353" [label = <(METHOD_RETURN,ANY)> ]
-  "16349" -> "16353" 
+"16346" [label = <(METHOD,SET_PRIMITIVE_FIELD(Short, obj, v))> ]
+"16350" [label = <(METHOD_RETURN,ANY)> ]
+  "16346" -> "16350" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/469-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/469-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/469-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/469-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD" {  
-"16354" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD)<SUB>1680</SUB>> ]
-"16356" [label = <(METHOD_RETURN,ANY)> ]
-  "16354" -> "16356" 
+"16351" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD)<SUB>1679</SUB>> ]
+"16353" [label = <(METHOD_RETURN,ANY)> ]
+  "16351" -> "16353" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/47-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/47-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/47-cfg.dot	2023-06-07 19:34:48.287388401 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/47-cfg.dot	2023-06-07 19:34:54.887387786 +0330
@@ -1,50 +1,50 @@
 digraph "IsAssignableFrom" {  
-"1474" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>808</SUB>> ]
-"1493" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>809</SUB>> ]
-"1513" [label = <(soa,soa(env))<SUB>810</SUB>> ]
-"1515" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c1 = soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>811</SUB>> ]
-"1532" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c2 = soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>812</SUB>> ]
-"1549" [label = <(RETURN,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;)<SUB>813</SUB>> ]
-"1516" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c1)<SUB>811</SUB>> ]
-"1523" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>811</SUB>> ]
-"1533" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c2)<SUB>812</SUB>> ]
-"1540" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>812</SUB>> ]
-"1550" [label = <(&lt;operator&gt;.conditional,c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE)<SUB>813</SUB>> ]
-"1517" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>811</SUB>> ]
-"1524" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>811</SUB>> ]
-"1534" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>812</SUB>> ]
-"1541" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>812</SUB>> ]
-"1551" [label = <(IsAssignableFrom,c2-&gt;IsAssignableFrom(c1))<SUB>813</SUB>> ]
-"1479" [label = <(UNLIKELY,UNLIKELY((java_class1) == nullptr))<SUB>808</SUB>> ]
-"1498" [label = <(UNLIKELY,UNLIKELY((java_class2) == nullptr))<SUB>809</SUB>> ]
-"1519" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>811</SUB>> ]
-"1525" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>811</SUB>> ]
-"1528" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>811</SUB>> ]
-"1536" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>812</SUB>> ]
-"1542" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>812</SUB>> ]
-"1545" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>812</SUB>> ]
-"1552" [label = <(&lt;operator&gt;.indirectFieldAccess,c2-&gt;IsAssignableFrom)<SUB>813</SUB>> ]
-"1480" [label = <(&lt;operator&gt;.equals,(java_class1) == nullptr)<SUB>808</SUB>> ]
-"1484" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class1 == null&quot;))<SUB>808</SUB>> ]
-"1491" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>808</SUB>> ]
-"1499" [label = <(&lt;operator&gt;.equals,(java_class2) == nullptr)<SUB>809</SUB>> ]
-"1503" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class2 == null&quot;))<SUB>809</SUB>> ]
-"1510" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>809</SUB>> ]
-"1521" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>811</SUB>> ]
-"1527" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>811</SUB>> ]
-"1530" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>811</SUB>> ]
-"1538" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>812</SUB>> ]
-"1544" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>812</SUB>> ]
-"1547" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>812</SUB>> ]
-"1554" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>813</SUB>> ]
-"1485" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>808</SUB>> ]
-"1504" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>809</SUB>> ]
-"1486" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>808</SUB>> ]
-"1488" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>808</SUB>> ]
-"1505" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>809</SUB>> ]
-"1507" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>809</SUB>> ]
-"1469" [label = <(METHOD,IsAssignableFrom)<SUB>807</SUB>> ]
-"1558" [label = <(METHOD_RETURN,jboolean)<SUB>807</SUB>> ]
+"1474" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>807</SUB>> ]
+"1493" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>808</SUB>> ]
+"1513" [label = <(soa,soa(env))<SUB>809</SUB>> ]
+"1515" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c1 = soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>810</SUB>> ]
+"1532" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c2 = soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>811</SUB>> ]
+"1549" [label = <(RETURN,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;,return c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE;)<SUB>812</SUB>> ]
+"1516" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c1)<SUB>810</SUB>> ]
+"1523" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class1))<SUB>810</SUB>> ]
+"1533" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c2)<SUB>811</SUB>> ]
+"1540" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class2))<SUB>811</SUB>> ]
+"1550" [label = <(&lt;operator&gt;.conditional,c2-&gt;IsAssignableFrom(c1) ? JNI_TRUE : JNI_FALSE)<SUB>812</SUB>> ]
+"1517" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>810</SUB>> ]
+"1524" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>810</SUB>> ]
+"1534" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>811</SUB>> ]
+"1541" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>811</SUB>> ]
+"1551" [label = <(IsAssignableFrom,c2-&gt;IsAssignableFrom(c1))<SUB>812</SUB>> ]
+"1479" [label = <(UNLIKELY,UNLIKELY((java_class1) == nullptr))<SUB>807</SUB>> ]
+"1498" [label = <(UNLIKELY,UNLIKELY((java_class2) == nullptr))<SUB>808</SUB>> ]
+"1519" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>810</SUB>> ]
+"1525" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>810</SUB>> ]
+"1528" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>810</SUB>> ]
+"1536" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>811</SUB>> ]
+"1542" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>811</SUB>> ]
+"1545" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>811</SUB>> ]
+"1552" [label = <(&lt;operator&gt;.indirectFieldAccess,c2-&gt;IsAssignableFrom)<SUB>812</SUB>> ]
+"1480" [label = <(&lt;operator&gt;.equals,(java_class1) == nullptr)<SUB>807</SUB>> ]
+"1484" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class1 == null&quot;))<SUB>807</SUB>> ]
+"1491" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class1, JNI_FALSE))<SUB>807</SUB>> ]
+"1499" [label = <(&lt;operator&gt;.equals,(java_class2) == nullptr)<SUB>808</SUB>> ]
+"1503" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class2 == null&quot;))<SUB>808</SUB>> ]
+"1510" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class2, JNI_FALSE))<SUB>808</SUB>> ]
+"1521" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>810</SUB>> ]
+"1527" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>810</SUB>> ]
+"1530" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>810</SUB>> ]
+"1538" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>811</SUB>> ]
+"1544" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>811</SUB>> ]
+"1547" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>811</SUB>> ]
+"1554" [label = <(FIELD_IDENTIFIER,IsAssignableFrom,IsAssignableFrom)<SUB>812</SUB>> ]
+"1485" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>807</SUB>> ]
+"1504" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>808</SUB>> ]
+"1486" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>807</SUB>> ]
+"1488" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>807</SUB>> ]
+"1505" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>808</SUB>> ]
+"1507" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>808</SUB>> ]
+"1469" [label = <(METHOD,IsAssignableFrom)<SUB>806</SUB>> ]
+"1558" [label = <(METHOD_RETURN,jboolean)<SUB>806</SUB>> ]
   "1474" -> "1480" 
   "1474" -> "1493" 
   "1493" -> "1499" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/470-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/470-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/470-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/470-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Boolean, v)" {  
-"16357" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))> ]
-"16360" [label = <(METHOD_RETURN,ANY)> ]
-  "16357" -> "16360" 
+"16354" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Boolean, v))> ]
+"16357" [label = <(METHOD_RETURN,ANY)> ]
+  "16354" -> "16357" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/471-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/471-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/471-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/471-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Byte, v)" {  
-"16361" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))> ]
-"16364" [label = <(METHOD_RETURN,ANY)> ]
-  "16361" -> "16364" 
+"16358" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Byte, v))> ]
+"16361" [label = <(METHOD_RETURN,ANY)> ]
+  "16358" -> "16361" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/472-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/472-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/472-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/472-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Char, v)" {  
-"16365" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Char, v))> ]
-"16368" [label = <(METHOD_RETURN,ANY)> ]
-  "16365" -> "16368" 
+"16362" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Char, v))> ]
+"16365" [label = <(METHOD_RETURN,ANY)> ]
+  "16362" -> "16365" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/473-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/473-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/473-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/473-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Float, v)" {  
-"16369" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Float, v))> ]
-"16372" [label = <(METHOD_RETURN,ANY)> ]
-  "16369" -> "16372" 
+"16366" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Float, v))> ]
+"16369" [label = <(METHOD_RETURN,ANY)> ]
+  "16366" -> "16369" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/474-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/474-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/474-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/474-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Double, v)" {  
-"16373" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Double, v))> ]
-"16376" [label = <(METHOD_RETURN,ANY)> ]
-  "16373" -> "16376" 
+"16370" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Double, v))> ]
+"16373" [label = <(METHOD_RETURN,ANY)> ]
+  "16370" -> "16373" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/475-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/475-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/475-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/475-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Int, v)" {  
-"16377" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Int, v))> ]
-"16380" [label = <(METHOD_RETURN,ANY)> ]
-  "16377" -> "16380" 
+"16374" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Int, v))> ]
+"16377" [label = <(METHOD_RETURN,ANY)> ]
+  "16374" -> "16377" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/476-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/476-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/476-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/476-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Long, v)" {  
-"16381" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Long, v))> ]
-"16384" [label = <(METHOD_RETURN,ANY)> ]
-  "16381" -> "16384" 
+"16378" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Long, v))> ]
+"16381" [label = <(METHOD_RETURN,ANY)> ]
+  "16378" -> "16381" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/477-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/477-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/477-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/477-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "SET_STATIC_PRIMITIVE_FIELD(Short, v)" {  
-"16385" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Short, v))> ]
-"16388" [label = <(METHOD_RETURN,ANY)> ]
-  "16385" -> "16388" 
+"16382" [label = <(METHOD,SET_STATIC_PRIMITIVE_FIELD(Short, v))> ]
+"16385" [label = <(METHOD_RETURN,ANY)> ]
+  "16382" -> "16385" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/478-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/478-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/478-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/478-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "JniAbortF" {  
-"16389" [label = <(METHOD,JniAbortF)> ]
-"16395" [label = <(METHOD_RETURN,ANY)> ]
-  "16389" -> "16395" 
+"16386" [label = <(METHOD,JniAbortF)> ]
+"16392" [label = <(METHOD_RETURN,ANY)> ]
+  "16386" -> "16392" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/479-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/479-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/479-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/479-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "mirror::String::AllocFromUtf16" {  
-"16396" [label = <(METHOD,mirror::String::AllocFromUtf16)> ]
-"16402" [label = <(METHOD_RETURN,ANY)> ]
-  "16396" -> "16402" 
+"16393" [label = <(METHOD,mirror::String::AllocFromUtf16)> ]
+"16399" [label = <(METHOD_RETURN,ANY)> ]
+  "16393" -> "16399" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/48-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/48-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/48-cfg.dot	2023-06-07 19:34:48.287388401 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/48-cfg.dot	2023-06-07 19:34:54.887387786 +0330
@@ -1,44 +1,44 @@
 digraph "IsInstanceOf" {  
-"1565" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>817</SUB>> ]
-"1585" [label = <(&lt;operator&gt;.equals,jobj == nullptr)<SUB>818</SUB>> ]
-"1589" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>820</SUB>> ]
-"1570" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>817</SUB>> ]
-"1594" [label = <(soa,soa(env))<SUB>822</SUB>> ]
-"1596" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>823</SUB>> ]
-"1613" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>824</SUB>> ]
-"1630" [label = <(RETURN,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;)<SUB>825</SUB>> ]
-"1571" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>817</SUB>> ]
-"1575" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>817</SUB>> ]
-"1582" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>817</SUB>> ]
-"1597" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>823</SUB>> ]
-"1604" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>823</SUB>> ]
-"1614" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>824</SUB>> ]
-"1621" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>824</SUB>> ]
-"1631" [label = <(&lt;operator&gt;.conditional,obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE)<SUB>825</SUB>> ]
-"1576" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>817</SUB>> ]
-"1598" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>823</SUB>> ]
-"1605" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>823</SUB>> ]
-"1615" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>824</SUB>> ]
-"1622" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>824</SUB>> ]
-"1632" [label = <(InstanceOf,obj-&gt;InstanceOf(c))<SUB>825</SUB>> ]
-"1577" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>817</SUB>> ]
-"1579" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>817</SUB>> ]
-"1600" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>823</SUB>> ]
-"1606" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>823</SUB>> ]
-"1609" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>823</SUB>> ]
-"1617" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>824</SUB>> ]
-"1623" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>824</SUB>> ]
-"1626" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>824</SUB>> ]
-"1633" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;InstanceOf)<SUB>825</SUB>> ]
-"1602" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>823</SUB>> ]
-"1608" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>823</SUB>> ]
-"1611" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>823</SUB>> ]
-"1619" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>824</SUB>> ]
-"1625" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>824</SUB>> ]
-"1628" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>824</SUB>> ]
-"1635" [label = <(FIELD_IDENTIFIER,InstanceOf,InstanceOf)<SUB>825</SUB>> ]
-"1560" [label = <(METHOD,IsInstanceOf)<SUB>816</SUB>> ]
-"1639" [label = <(METHOD_RETURN,jboolean)<SUB>816</SUB>> ]
+"1565" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>816</SUB>> ]
+"1585" [label = <(&lt;operator&gt;.equals,jobj == nullptr)<SUB>817</SUB>> ]
+"1589" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>819</SUB>> ]
+"1570" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>816</SUB>> ]
+"1594" [label = <(soa,soa(env))<SUB>821</SUB>> ]
+"1596" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; obj = soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>822</SUB>> ]
+"1613" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>823</SUB>> ]
+"1630" [label = <(RETURN,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;,return obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE;)<SUB>824</SUB>> ]
+"1571" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>816</SUB>> ]
+"1575" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>816</SUB>> ]
+"1582" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE),CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_FALSE))<SUB>816</SUB>> ]
+"1597" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; obj)<SUB>822</SUB>> ]
+"1604" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(jobj))<SUB>822</SUB>> ]
+"1614" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>823</SUB>> ]
+"1621" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>823</SUB>> ]
+"1631" [label = <(&lt;operator&gt;.conditional,obj-&gt;InstanceOf(c) ? JNI_TRUE : JNI_FALSE)<SUB>824</SUB>> ]
+"1576" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>816</SUB>> ]
+"1598" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>822</SUB>> ]
+"1605" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>822</SUB>> ]
+"1615" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>823</SUB>> ]
+"1622" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>823</SUB>> ]
+"1632" [label = <(InstanceOf,obj-&gt;InstanceOf(c))<SUB>824</SUB>> ]
+"1577" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>816</SUB>> ]
+"1579" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>816</SUB>> ]
+"1600" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>822</SUB>> ]
+"1606" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>822</SUB>> ]
+"1609" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>822</SUB>> ]
+"1617" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>823</SUB>> ]
+"1623" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>823</SUB>> ]
+"1626" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>823</SUB>> ]
+"1633" [label = <(&lt;operator&gt;.indirectFieldAccess,obj-&gt;InstanceOf)<SUB>824</SUB>> ]
+"1602" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>822</SUB>> ]
+"1608" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>822</SUB>> ]
+"1611" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>822</SUB>> ]
+"1619" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>823</SUB>> ]
+"1625" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>823</SUB>> ]
+"1628" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>823</SUB>> ]
+"1635" [label = <(FIELD_IDENTIFIER,InstanceOf,InstanceOf)<SUB>824</SUB>> ]
+"1560" [label = <(METHOD,IsInstanceOf)<SUB>815</SUB>> ]
+"1639" [label = <(METHOD_RETURN,jboolean)<SUB>815</SUB>> ]
   "1565" -> "1571" 
   "1565" -> "1585" 
   "1585" -> "1589" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/480-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/480-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/480-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/480-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "::max" {  
-"16403" [label = <(METHOD,::max)> ]
-"16406" [label = <(METHOD_RETURN,ANY)> ]
-  "16403" -> "16406" 
+"16400" [label = <(METHOD,::max)> ]
+"16403" [label = <(METHOD_RETURN,ANY)> ]
+  "16400" -> "16403" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/481-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/481-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/481-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/481-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "android::base::StringPrintf" {  
-"16407" [label = <(METHOD,android::base::StringPrintf)> ]
-"16412" [label = <(METHOD_RETURN,ANY)> ]
-  "16407" -> "16412" 
+"16404" [label = <(METHOD,android::base::StringPrintf)> ]
+"16409" [label = <(METHOD_RETURN,ANY)> ]
+  "16404" -> "16409" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/482-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/482-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/482-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/482-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
 digraph "ThrowOutOfMemoryError" {  
-"16413" [label = <(METHOD,ThrowOutOfMemoryError)> ]
-"16417" [label = <(METHOD_RETURN,ANY)> ]
-  "16413" -> "16417" 
+"16410" [label = <(METHOD,ThrowOutOfMemoryError)> ]
+"16414" [label = <(METHOD_RETURN,ANY)> ]
+  "16410" -> "16414" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/483-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/483-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/483-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/483-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
-digraph "android_errorWriteLog" {  
-"16418" [label = <(METHOD,android_errorWriteLog)> ]
-"16422" [label = <(METHOD_RETURN,ANY)> ]
-  "16418" -> "16422" 
+digraph "UINT64_C" {  
+"16415" [label = <(METHOD,UINT64_C)> ]
+"16418" [label = <(METHOD_RETURN,ANY)> ]
+  "16415" -> "16418" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/484-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/484-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/484-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/484-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
-digraph "UINT64_C" {  
-"16423" [label = <(METHOD,UINT64_C)> ]
-"16426" [label = <(METHOD_RETURN,ANY)> ]
-  "16423" -> "16426" 
+digraph "prev_bad_input_time" {  
+"16419" [label = <(METHOD,prev_bad_input_time)> ]
+"16422" [label = <(METHOD_RETURN,ANY)> ]
+  "16419" -> "16422" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/485-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/485-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/485-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/485-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
-digraph "prev_bad_input_time" {  
-"16427" [label = <(METHOD,prev_bad_input_time)> ]
-"16430" [label = <(METHOD_RETURN,ANY)> ]
-  "16427" -> "16430" 
+digraph "load" {  
+"16423" [label = <(METHOD,load)> ]
+"16427" [label = <(METHOD_RETURN,ANY)> ]
+  "16423" -> "16427" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/486-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/486-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/486-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/486-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
-digraph "load" {  
-"16431" [label = <(METHOD,load)> ]
-"16435" [label = <(METHOD_RETURN,ANY)> ]
-  "16431" -> "16435" 
+digraph "NanoTime" {  
+"16428" [label = <(METHOD,NanoTime)> ]
+"16430" [label = <(METHOD_RETURN,ANY)> ]
+  "16428" -> "16430" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/487-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/487-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/487-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/487-cfg.dot	2023-06-07 19:34:55.057387772 +0330
@@ -1,5 +1,5 @@
-digraph "NanoTime" {  
-"16436" [label = <(METHOD,NanoTime)> ]
-"16438" [label = <(METHOD_RETURN,ANY)> ]
-  "16436" -> "16438" 
+digraph "&lt;operator&gt;.logicalOr" {  
+"16431" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
+"16435" [label = <(METHOD_RETURN,ANY)> ]
+  "16431" -> "16435" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/488-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/488-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/488-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/488-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.logicalOr" {  
-"16439" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
-"16443" [label = <(METHOD_RETURN,ANY)> ]
-  "16439" -> "16443" 
+digraph "compare_exchange_strong" {  
+"16436" [label = <(METHOD,compare_exchange_strong)> ]
+"16442" [label = <(METHOD_RETURN,ANY)> ]
+  "16436" -> "16442" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/489-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/489-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/489-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/489-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "compare_exchange_strong" {  
-"16444" [label = <(METHOD,compare_exchange_strong)> ]
-"16450" [label = <(METHOD_RETURN,ANY)> ]
-  "16444" -> "16450" 
+digraph "emplace" {  
+"16443" [label = <(METHOD,emplace)> ]
+"16446" [label = <(METHOD_RETURN,ANY)> ]
+  "16443" -> "16446" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/49-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/49-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/49-cfg.dot	2023-06-07 19:34:48.287388401 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/49-cfg.dot	2023-06-07 19:34:54.887387786 +0330
@@ -1,27 +1,27 @@
 digraph "Throw" {  
-"1646" [label = <(soa,soa(env))<SUB>830</SUB>> ]
-"1648" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Throwable&gt; exception = soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>831</SUB>> ]
-"1672" [label = <(SetException,soa.Self()-&gt;SetException(exception))<SUB>835</SUB>> ]
-"1680" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>836</SUB>> ]
-"1649" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Throwable&gt; exception)<SUB>831</SUB>> ]
-"1656" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>831</SUB>> ]
-"1666" [label = <(&lt;operator&gt;.equals,exception == nullptr)<SUB>832</SUB>> ]
-"1673" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>835</SUB>> ]
-"1650" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Throwable)<SUB>831</SUB>> ]
-"1657" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Throwable)<SUB>831</SUB>> ]
-"1670" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>833</SUB>> ]
-"1674" [label = <(Self,soa.Self())<SUB>835</SUB>> ]
-"1678" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>835</SUB>> ]
-"1652" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>831</SUB>> ]
-"1658" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>831</SUB>> ]
-"1661" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>831</SUB>> ]
-"1675" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>835</SUB>> ]
-"1654" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>831</SUB>> ]
-"1660" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>831</SUB>> ]
-"1663" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>831</SUB>> ]
-"1677" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>835</SUB>> ]
-"1641" [label = <(METHOD,Throw)<SUB>829</SUB>> ]
-"1682" [label = <(METHOD_RETURN,jint)<SUB>829</SUB>> ]
+"1646" [label = <(soa,soa(env))<SUB>829</SUB>> ]
+"1648" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Throwable&gt; exception = soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>830</SUB>> ]
+"1672" [label = <(SetException,soa.Self()-&gt;SetException(exception))<SUB>834</SUB>> ]
+"1680" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>835</SUB>> ]
+"1649" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Throwable&gt; exception)<SUB>830</SUB>> ]
+"1656" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Throwable&gt;(java_exception))<SUB>830</SUB>> ]
+"1666" [label = <(&lt;operator&gt;.equals,exception == nullptr)<SUB>831</SUB>> ]
+"1673" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>834</SUB>> ]
+"1650" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Throwable)<SUB>830</SUB>> ]
+"1657" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Throwable)<SUB>830</SUB>> ]
+"1670" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>832</SUB>> ]
+"1674" [label = <(Self,soa.Self())<SUB>834</SUB>> ]
+"1678" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>834</SUB>> ]
+"1652" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>830</SUB>> ]
+"1658" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>830</SUB>> ]
+"1661" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>830</SUB>> ]
+"1675" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>834</SUB>> ]
+"1654" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>830</SUB>> ]
+"1660" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>830</SUB>> ]
+"1663" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>830</SUB>> ]
+"1677" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>834</SUB>> ]
+"1641" [label = <(METHOD,Throw)<SUB>828</SUB>> ]
+"1682" [label = <(METHOD_RETURN,jint)<SUB>828</SUB>> ]
   "1646" -> "1654" 
   "1648" -> "1666" 
   "1672" -> "1680" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/490-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/490-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/490-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/490-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "emplace" {  
-"16451" [label = <(METHOD,emplace)> ]
-"16454" [label = <(METHOD_RETURN,ANY)> ]
-  "16451" -> "16454" 
+digraph "reserve" {  
+"16447" [label = <(METHOD,reserve)> ]
+"16451" [label = <(METHOD_RETURN,ANY)> ]
+  "16447" -> "16451" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/491-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/491-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/491-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/491-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "reserve" {  
-"16455" [label = <(METHOD,reserve)> ]
-"16459" [label = <(METHOD_RETURN,ANY)> ]
-  "16455" -> "16459" 
+digraph "VisitModifiedUtf8Chars" {  
+"16452" [label = <(METHOD,VisitModifiedUtf8Chars)> ]
+"16458" [label = <(METHOD_RETURN,ANY)> ]
+  "16452" -> "16458" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/492-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/492-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/492-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/492-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "VisitModifiedUtf8Chars" {  
-"16460" [label = <(METHOD,VisitModifiedUtf8Chars)> ]
-"16466" [label = <(METHOD_RETURN,ANY)> ]
-  "16460" -> "16466" 
+digraph "length" {  
+"16459" [label = <(METHOD,length)> ]
+"16462" [label = <(METHOD_RETURN,ANY)> ]
+  "16459" -> "16462" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/493-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/493-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/493-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/493-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "length" {  
-"16467" [label = <(METHOD,length)> ]
+digraph "mirror::String::AllocFromModifiedUtf8" {  
+"16463" [label = <(METHOD,mirror::String::AllocFromModifiedUtf8)> ]
 "16470" [label = <(METHOD_RETURN,ANY)> ]
-  "16467" -> "16470" 
+  "16463" -> "16470" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/494-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/494-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/494-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/494-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::String::AllocFromModifiedUtf8" {  
-"16471" [label = <(METHOD,mirror::String::AllocFromModifiedUtf8)> ]
-"16478" [label = <(METHOD_RETURN,ANY)> ]
-  "16471" -> "16478" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string)" {  
+"16471" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))> ]
+"16476" [label = <(METHOD_RETURN,ANY)> ]
+  "16471" -> "16476" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/495-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/495-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/495-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/495-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string)" {  
-"16479" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_string))> ]
-"16484" [label = <(METHOD_RETURN,ANY)> ]
-  "16479" -> "16484" 
+digraph "GetLength" {  
+"16477" [label = <(METHOD,GetLength)> ]
+"16480" [label = <(METHOD_RETURN,ANY)> ]
+  "16477" -> "16480" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/496-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/496-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/496-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/496-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetLength" {  
-"16485" [label = <(METHOD,GetLength)> ]
-"16488" [label = <(METHOD_RETURN,ANY)> ]
-  "16485" -> "16488" 
+digraph "GetUtfLength" {  
+"16481" [label = <(METHOD,GetUtfLength)> ]
+"16484" [label = <(METHOD_RETURN,ANY)> ]
+  "16481" -> "16484" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/497-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/497-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/497-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/497-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetUtfLength" {  
-"16489" [label = <(METHOD,GetUtfLength)> ]
-"16492" [label = <(METHOD_RETURN,ANY)> ]
-  "16489" -> "16492" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string)" {  
+"16485" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))> ]
+"16490" [label = <(METHOD_RETURN,ANY)> ]
+  "16485" -> "16490" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/498-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/498-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/498-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/498-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string)" {  
-"16493" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_string))> ]
-"16498" [label = <(METHOD_RETURN,ANY)> ]
-  "16493" -> "16498" 
+digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT" {  
+"16491" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT)<SUB>701</SUB>> ]
+"16495" [label = <(METHOD_RETURN,ANY)> ]
+  "16491" -> "16495" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/499-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/499-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/499-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/499-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT" {  
-"16499" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT)<SUB>702</SUB>> ]
-"16503" [label = <(METHOD_RETURN,ANY)> ]
-  "16499" -> "16503" 
+digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf)" {  
+"16496" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))> ]
+"16501" [label = <(METHOD_RETURN,ANY)> ]
+  "16496" -> "16501" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/5-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/5-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/5-cfg.dot	2023-06-07 19:34:48.257388404 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/5-cfg.dot	2023-06-07 19:34:54.857387788 +0330
@@ -1,5 +1,5 @@
 digraph "ScopedVAArgs" {  
-"30" [label = <(METHOD,ScopedVAArgs)<SUB>81</SUB>> ]
-"33" [label = <(METHOD_RETURN,ANY)<SUB>81</SUB>> ]
+"30" [label = <(METHOD,ScopedVAArgs)<SUB>80</SUB>> ]
+"33" [label = <(METHOD_RETURN,ANY)<SUB>80</SUB>> ]
   "30" -> "33" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/50-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/50-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/50-cfg.dot	2023-06-07 19:34:48.287388401 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/50-cfg.dot	2023-06-07 19:34:54.887387786 +0330
@@ -1,16 +1,16 @@
 digraph "ThrowNew" {  
-"1689" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>840</SUB>> ]
-"1708" [label = <(RETURN,return ThrowNewException(env, c, msg, nullptr);,return ThrowNewException(env, c, msg, nullptr);)<SUB>841</SUB>> ]
-"1709" [label = <(ThrowNewException,ThrowNewException(env, c, msg, nullptr))<SUB>841</SUB>> ]
-"1694" [label = <(UNLIKELY,UNLIKELY((c) == nullptr))<SUB>840</SUB>> ]
-"1695" [label = <(&lt;operator&gt;.equals,(c) == nullptr)<SUB>840</SUB>> ]
-"1699" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;c == null&quot;))<SUB>840</SUB>> ]
-"1706" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>840</SUB>> ]
-"1700" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>840</SUB>> ]
-"1701" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>840</SUB>> ]
-"1703" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>840</SUB>> ]
-"1684" [label = <(METHOD,ThrowNew)<SUB>839</SUB>> ]
-"1714" [label = <(METHOD_RETURN,jint)<SUB>839</SUB>> ]
+"1689" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>839</SUB>> ]
+"1708" [label = <(RETURN,return ThrowNewException(env, c, msg, nullptr);,return ThrowNewException(env, c, msg, nullptr);)<SUB>840</SUB>> ]
+"1709" [label = <(ThrowNewException,ThrowNewException(env, c, msg, nullptr))<SUB>840</SUB>> ]
+"1694" [label = <(UNLIKELY,UNLIKELY((c) == nullptr))<SUB>839</SUB>> ]
+"1695" [label = <(&lt;operator&gt;.equals,(c) == nullptr)<SUB>839</SUB>> ]
+"1699" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;c == null&quot;))<SUB>839</SUB>> ]
+"1706" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR),CHECK_NON_NULL_ARGUMENT_RETURN(c, JNI_ERR))<SUB>839</SUB>> ]
+"1700" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>839</SUB>> ]
+"1701" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>839</SUB>> ]
+"1703" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>839</SUB>> ]
+"1684" [label = <(METHOD,ThrowNew)<SUB>838</SUB>> ]
+"1714" [label = <(METHOD_RETURN,jint)<SUB>838</SUB>> ]
   "1689" -> "1695" 
   "1689" -> "1709" 
   "1708" -> "1714" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/500-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/500-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/500-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/500-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf)" {  
-"16504" [label = <(METHOD,CHECK_NON_NULL_MEMCPY_ARGUMENT(length, buf))> ]
-"16509" [label = <(METHOD_RETURN,ANY)> ]
-  "16504" -> "16509" 
+digraph "IsCompressed" {  
+"16502" [label = <(METHOD,IsCompressed)> ]
+"16505" [label = <(METHOD_RETURN,ANY)> ]
+  "16502" -> "16505" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/501-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/501-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/501-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/501-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "IsCompressed" {  
-"16510" [label = <(METHOD,IsCompressed)> ]
-"16513" [label = <(METHOD_RETURN,ANY)> ]
-  "16510" -> "16513" 
+digraph "CharAt" {  
+"16506" [label = <(METHOD,CharAt)> ]
+"16510" [label = <(METHOD_RETURN,ANY)> ]
+  "16506" -> "16510" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/502-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/502-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/502-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/502-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "CharAt" {  
-"16514" [label = <(METHOD,CharAt)> ]
-"16518" [label = <(METHOD_RETURN,ANY)> ]
-  "16514" -> "16518" 
+digraph "GetValue" {  
+"16511" [label = <(METHOD,GetValue)> ]
+"16514" [label = <(METHOD_RETURN,ANY)> ]
+  "16511" -> "16514" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/503-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/503-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/503-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/503-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetValue" {  
-"16519" [label = <(METHOD,GetValue)> ]
-"16522" [label = <(METHOD_RETURN,ANY)> ]
-  "16519" -> "16522" 
+digraph "memcpy" {  
+"16515" [label = <(METHOD,memcpy)> ]
+"16520" [label = <(METHOD_RETURN,ANY)> ]
+  "16515" -> "16520" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/504-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/504-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/504-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/504-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "memcpy" {  
-"16523" [label = <(METHOD,memcpy)> ]
-"16528" [label = <(METHOD_RETURN,ANY)> ]
-  "16523" -> "16528" 
+digraph "&lt;operator&gt;.multiplication" {  
+"16521" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
+"16525" [label = <(METHOD_RETURN,ANY)> ]
+  "16521" -> "16525" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/505-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/505-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/505-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/505-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.multiplication" {  
-"16529" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
-"16533" [label = <(METHOD_RETURN,ANY)> ]
-  "16529" -> "16533" 
+digraph "&lt;operator&gt;.sizeOf" {  
+"16526" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
+"16529" [label = <(METHOD_RETURN,ANY)> ]
+  "16526" -> "16529" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/506-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/506-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/506-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/506-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.sizeOf" {  
-"16534" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
-"16537" [label = <(METHOD_RETURN,ANY)> ]
-  "16534" -> "16537" 
+digraph "CountUtf8Bytes" {  
+"16530" [label = <(METHOD,CountUtf8Bytes)> ]
+"16534" [label = <(METHOD_RETURN,ANY)> ]
+  "16530" -> "16534" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/507-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/507-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/507-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/507-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "CountUtf8Bytes" {  
-"16538" [label = <(METHOD,CountUtf8Bytes)> ]
-"16542" [label = <(METHOD_RETURN,ANY)> ]
-  "16538" -> "16542" 
+digraph "ConvertUtf16ToModifiedUtf8" {  
+"16535" [label = <(METHOD,ConvertUtf16ToModifiedUtf8)> ]
+"16541" [label = <(METHOD_RETURN,ANY)> ]
+  "16535" -> "16541" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/508-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/508-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/508-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/508-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "ConvertUtf16ToModifiedUtf8" {  
-"16543" [label = <(METHOD,ConvertUtf16ToModifiedUtf8)> ]
-"16549" [label = <(METHOD_RETURN,ANY)> ]
-  "16543" -> "16549" 
+digraph "CHECK_NON_NULL_ARGUMENT(java_string)" {  
+"16542" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_string))> ]
+"16547" [label = <(METHOD_RETURN,ANY)> ]
+  "16542" -> "16547" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/509-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/509-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/509-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/509-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(java_string)" {  
-"16550" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_string))> ]
-"16555" [label = <(METHOD_RETURN,ANY)> ]
-  "16550" -> "16555" 
+digraph "IsMovableObject" {  
+"16548" [label = <(METHOD,IsMovableObject)> ]
+"16552" [label = <(METHOD_RETURN,ANY)> ]
+  "16548" -> "16552" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/51-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/51-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/51-cfg.dot	2023-06-07 19:34:48.287388401 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/51-cfg.dot	2023-06-07 19:34:54.887387786 +0330
@@ -1,15 +1,15 @@
 digraph "ExceptionCheck" {  
-"1719" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;)<SUB>845</SUB>> ]
-"1720" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE)<SUB>845</SUB>> ]
-"1721" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>845</SUB>> ]
-"1722" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>845</SUB>> ]
-"1723" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>845</SUB>> ]
-"1728" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>845</SUB>> ]
-"1724" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>845</SUB>> ]
-"1727" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>845</SUB>> ]
-"1725" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>845</SUB>> ]
-"1716" [label = <(METHOD,ExceptionCheck)<SUB>844</SUB>> ]
-"1731" [label = <(METHOD_RETURN,jboolean)<SUB>844</SUB>> ]
+"1719" [label = <(RETURN,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;,return static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE;)<SUB>844</SUB>> ]
+"1720" [label = <(&lt;operator&gt;.conditional,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending() ? JNI_TRUE : JNI_FALSE)<SUB>844</SUB>> ]
+"1721" [label = <(IsExceptionPending,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending())<SUB>844</SUB>> ]
+"1722" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_-&gt;IsExceptionPending)<SUB>844</SUB>> ]
+"1723" [label = <(&lt;operator&gt;.indirectFieldAccess,static_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>844</SUB>> ]
+"1728" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>844</SUB>> ]
+"1724" [label = <(&lt;operator&gt;.cast,static_cast&lt;JNIEnvExt*&gt;(env))<SUB>844</SUB>> ]
+"1727" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>844</SUB>> ]
+"1725" [label = <(UNKNOWN,JNIEnvExt*,JNIEnvExt*)<SUB>844</SUB>> ]
+"1716" [label = <(METHOD,ExceptionCheck)<SUB>843</SUB>> ]
+"1731" [label = <(METHOD_RETURN,jboolean)<SUB>843</SUB>> ]
   "1719" -> "1731" 
   "1720" -> "1719" 
   "1721" -> "1720" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/510-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/510-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/510-cfg.dot	2023-06-07 19:34:48.467388382 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/510-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "IsMovableObject" {  
-"16556" [label = <(METHOD,IsMovableObject)> ]
-"16560" [label = <(METHOD_RETURN,ANY)> ]
-  "16556" -> "16560" 
+digraph "&lt;operator&gt;.new" {  
+"16553" [label = <(METHOD,&lt;operator&gt;.new)> ]
+"16556" [label = <(METHOD_RETURN,ANY)> ]
+  "16553" -> "16556" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/511-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/511-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/511-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/511-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.new" {  
-"16561" [label = <(METHOD,&lt;operator&gt;.new)> ]
-"16564" [label = <(METHOD_RETURN,ANY)> ]
-  "16561" -> "16564" 
+digraph "&lt;operator&gt;.delete" {  
+"16557" [label = <(METHOD,&lt;operator&gt;.delete)> ]
+"16560" [label = <(METHOD_RETURN,ANY)> ]
+  "16557" -> "16560" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/512-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/512-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/512-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/512-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.delete" {  
-"16565" [label = <(METHOD,&lt;operator&gt;.delete)> ]
-"16568" [label = <(METHOD_RETURN,ANY)> ]
-  "16565" -> "16568" 
+digraph "h" {  
+"16561" [label = <(METHOD,h)> ]
+"16564" [label = <(METHOD_RETURN,ANY)> ]
+  "16561" -> "16564" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/513-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/513-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/513-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/513-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "h" {  
-"16569" [label = <(METHOD,h)> ]
-"16572" [label = <(METHOD_RETURN,ANY)> ]
-  "16569" -> "16572" 
+digraph "NewHandleWrapper" {  
+"16565" [label = <(METHOD,NewHandleWrapper)> ]
+"16569" [label = <(METHOD_RETURN,ANY)> ]
+  "16565" -> "16569" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/514-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/514-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/514-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/514-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "NewHandleWrapper" {  
-"16573" [label = <(METHOD,NewHandleWrapper)> ]
-"16577" [label = <(METHOD_RETURN,ANY)> ]
-  "16573" -> "16577" 
+digraph "IncrementDisableMovingGC" {  
+"16570" [label = <(METHOD,IncrementDisableMovingGC)> ]
+"16574" [label = <(METHOD_RETURN,ANY)> ]
+  "16570" -> "16574" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/515-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/515-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/515-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/515-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "IncrementDisableMovingGC" {  
-"16578" [label = <(METHOD,IncrementDisableMovingGC)> ]
-"16582" [label = <(METHOD_RETURN,ANY)> ]
-  "16578" -> "16582" 
+digraph "IncrementDisableThreadFlip" {  
+"16575" [label = <(METHOD,IncrementDisableThreadFlip)> ]
+"16579" [label = <(METHOD_RETURN,ANY)> ]
+  "16575" -> "16579" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/516-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/516-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/516-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/516-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "IncrementDisableThreadFlip" {  
-"16583" [label = <(METHOD,IncrementDisableThreadFlip)> ]
-"16587" [label = <(METHOD_RETURN,ANY)> ]
-  "16583" -> "16587" 
+digraph "DecrementDisableMovingGC" {  
+"16580" [label = <(METHOD,DecrementDisableMovingGC)> ]
+"16584" [label = <(METHOD_RETURN,ANY)> ]
+  "16580" -> "16584" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/517-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/517-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/517-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/517-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "DecrementDisableMovingGC" {  
-"16588" [label = <(METHOD,DecrementDisableMovingGC)> ]
-"16592" [label = <(METHOD_RETURN,ANY)> ]
-  "16588" -> "16592" 
+digraph "DecrementDisableThreadFlip" {  
+"16585" [label = <(METHOD,DecrementDisableThreadFlip)> ]
+"16589" [label = <(METHOD_RETURN,ANY)> ]
+  "16585" -> "16589" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/518-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/518-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/518-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/518-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "DecrementDisableThreadFlip" {  
-"16593" [label = <(METHOD,DecrementDisableThreadFlip)> ]
-"16597" [label = <(METHOD_RETURN,ANY)> ]
-  "16593" -> "16597" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array)" {  
+"16590" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))> ]
+"16595" [label = <(METHOD_RETURN,ANY)> ]
+  "16590" -> "16595" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/519-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/519-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/519-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/519-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array)" {  
-"16598" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(java_array))> ]
-"16603" [label = <(METHOD_RETURN,ANY)> ]
-  "16598" -> "16603" 
+digraph "IsArrayInstance" {  
+"16596" [label = <(METHOD,IsArrayInstance)> ]
+"16599" [label = <(METHOD_RETURN,ANY)> ]
+  "16596" -> "16599" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/52-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/52-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/52-cfg.dot	2023-06-07 19:34:48.287388401 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/52-cfg.dot	2023-06-07 19:34:54.887387786 +0330
@@ -1,13 +1,13 @@
 digraph "ExceptionClear" {  
-"1737" [label = <(soa,soa(env))<SUB>849</SUB>> ]
-"1739" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>850</SUB>> ]
-"1740" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>850</SUB>> ]
-"1741" [label = <(Self,soa.Self())<SUB>850</SUB>> ]
-"1745" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>850</SUB>> ]
-"1742" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>850</SUB>> ]
-"1744" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>850</SUB>> ]
-"1733" [label = <(METHOD,ExceptionClear)<SUB>848</SUB>> ]
-"1746" [label = <(METHOD_RETURN,void)<SUB>848</SUB>> ]
+"1737" [label = <(soa,soa(env))<SUB>848</SUB>> ]
+"1739" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>849</SUB>> ]
+"1740" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>849</SUB>> ]
+"1741" [label = <(Self,soa.Self())<SUB>849</SUB>> ]
+"1745" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>849</SUB>> ]
+"1742" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>849</SUB>> ]
+"1744" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>849</SUB>> ]
+"1733" [label = <(METHOD,ExceptionClear)<SUB>847</SUB>> ]
+"1746" [label = <(METHOD_RETURN,void)<SUB>847</SUB>> ]
   "1737" -> "1744" 
   "1739" -> "1746" 
   "1740" -> "1739" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/520-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/520-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/520-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/520-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "IsArrayInstance" {  
-"16604" [label = <(METHOD,IsArrayInstance)> ]
-"16607" [label = <(METHOD_RETURN,ANY)> ]
-  "16604" -> "16607" 
+digraph "PrettyTypeOf" {  
+"16600" [label = <(METHOD,PrettyTypeOf)> ]
+"16603" [label = <(METHOD_RETURN,ANY)> ]
+  "16600" -> "16603" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/521-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/521-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/521-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/521-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyTypeOf" {  
-"16608" [label = <(METHOD,PrettyTypeOf)> ]
-"16611" [label = <(METHOD_RETURN,ANY)> ]
-  "16608" -> "16611" 
+digraph "AsArray" {  
+"16604" [label = <(METHOD,AsArray)> ]
+"16607" [label = <(METHOD_RETURN,ANY)> ]
+  "16604" -> "16607" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/522-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/522-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/522-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/522-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "AsArray" {  
-"16612" [label = <(METHOD,AsArray)> ]
-"16615" [label = <(METHOD_RETURN,ANY)> ]
-  "16612" -> "16615" 
+digraph "CHECK_NON_NULL_ARGUMENT(java_array)" {  
+"16608" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_array))> ]
+"16613" [label = <(METHOD_RETURN,ANY)> ]
+  "16608" -> "16613" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/523-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/523-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/523-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/523-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(java_array)" {  
-"16616" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(java_array))> ]
-"16621" [label = <(METHOD_RETURN,ANY)> ]
-  "16616" -> "16621" 
+digraph "&lt;operator&gt;.arithmeticShiftRight" {  
+"16614" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
+"16618" [label = <(METHOD_RETURN,ANY)> ]
+  "16614" -> "16618" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/524-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/524-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/524-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/524-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.arithmeticShiftRight" {  
-"16622" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
-"16626" [label = <(METHOD_RETURN,ANY)> ]
-  "16622" -> "16626" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array)" {  
+"16619" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))> ]
+"16624" [label = <(METHOD_RETURN,ANY)> ]
+  "16619" -> "16624" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/525-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/525-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/525-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/525-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array)" {  
-"16627" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(java_array))> ]
-"16632" [label = <(METHOD_RETURN,ANY)> ]
-  "16627" -> "16632" 
+digraph "NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;" {  
+"16625" [label = <(METHOD,NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;)> ]
+"16629" [label = <(METHOD_RETURN,ANY)> ]
+  "16625" -> "16629" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/526-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/526-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/526-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/526-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;" {  
-"16633" [label = <(METHOD,NewPrimitiveArray&lt;jbooleanArray,mirror::BooleanArray&gt;)> ]
-"16637" [label = <(METHOD_RETURN,ANY)> ]
-  "16633" -> "16637" 
+digraph "NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;" {  
+"16630" [label = <(METHOD,NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;)> ]
+"16634" [label = <(METHOD_RETURN,ANY)> ]
+  "16630" -> "16634" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/527-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/527-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/527-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/527-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;" {  
-"16638" [label = <(METHOD,NewPrimitiveArray&lt;jbyteArray,mirror::ByteArray&gt;)> ]
-"16642" [label = <(METHOD_RETURN,ANY)> ]
-  "16638" -> "16642" 
+digraph "NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;" {  
+"16635" [label = <(METHOD,NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;)> ]
+"16639" [label = <(METHOD_RETURN,ANY)> ]
+  "16635" -> "16639" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/528-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/528-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/528-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/528-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;" {  
-"16643" [label = <(METHOD,NewPrimitiveArray&lt;jcharArray,mirror::CharArray&gt;)> ]
-"16647" [label = <(METHOD_RETURN,ANY)> ]
-  "16643" -> "16647" 
+digraph "NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;" {  
+"16640" [label = <(METHOD,NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;)> ]
+"16644" [label = <(METHOD_RETURN,ANY)> ]
+  "16640" -> "16644" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/529-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/529-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/529-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/529-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;" {  
-"16648" [label = <(METHOD,NewPrimitiveArray&lt;jdoubleArray,mirror::DoubleArray&gt;)> ]
-"16652" [label = <(METHOD_RETURN,ANY)> ]
-  "16648" -> "16652" 
+digraph "NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;" {  
+"16645" [label = <(METHOD,NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;)> ]
+"16649" [label = <(METHOD_RETURN,ANY)> ]
+  "16645" -> "16649" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/53-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/53-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/53-cfg.dot	2023-06-07 19:34:48.287388401 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/53-cfg.dot	2023-06-07 19:34:54.887387786 +0330
@@ -1,122 +1,122 @@
 digraph "ExceptionDescribe" {  
-"1752" [label = <(soa,soa(env))<SUB>854</SUB>> ]
-"1765" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>861</SUB>> ]
-"1774" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Throwable&gt; old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>862</SUB>> ]
-"1796" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>864</SUB>> ]
-"1803" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jthrowable&gt; exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>865</SUB>> ]
-"1819" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jclass&gt; exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>867</SUB>> ]
-"1834" [label = <(&lt;operator&gt;.assignment,mid = env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>868</SUB>> ]
-"1913" [label = <(SetException,soa.Self()-&gt;SetException(old_exception.Get()))<SUB>880</SUB>> ]
-"1755" [label = <(&lt;operator&gt;.logicalNot,!soa.Self()-&gt;GetException())<SUB>857</SUB>> ]
-"1766" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>861</SUB>> ]
-"1769" [label = <(hs,hs(soa.Self()))<SUB>861</SUB>> ]
-"1775" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Throwable)<SUB>862</SUB>> ]
-"1780" [label = <(old_exception,old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>862</SUB>> ]
-"1797" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>864</SUB>> ]
-"1804" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jthrowable)<SUB>865</SUB>> ]
-"1807" [label = <(exception,exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>865</SUB>> ]
-"1820" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jclass)<SUB>867</SUB>> ]
-"1823" [label = <(exception_class,exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>867</SUB>> ]
-"1836" [label = <(GetMethodID,env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>868</SUB>> ]
-"1847" [label = <(&lt;operator&gt;.equals,mid == nullptr)<SUB>869</SUB>> ]
-"1914" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>880</SUB>> ]
-"1920" [label = <(Get,old_exception.Get())<SUB>880</SUB>> ]
-"1756" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>857</SUB>> ]
-"1764" [label = <(RETURN,return;,return;)<SUB>858</SUB>> ]
-"1770" [label = <(Self,soa.Self())<SUB>861</SUB>> ]
-"1777" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>862</SUB>> ]
-"1781" [label = <(&lt;operator&gt;.greaterThan,hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException()))<SUB>863</SUB>> ]
-"1798" [label = <(Self,soa.Self())<SUB>864</SUB>> ]
-"1802" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>864</SUB>> ]
-"1809" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get()))<SUB>866</SUB>> ]
-"1825" [label = <(GetObjectClass,env-&gt;GetObjectClass(exception.get()))<SUB>867</SUB>> ]
-"1837" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetMethodID)<SUB>868</SUB>> ]
-"1840" [label = <(get,exception_class.get())<SUB>868</SUB>> ]
-"1851" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;\012 &lt;&lt; mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>870</SUB>> ]
-"1915" [label = <(Self,soa.Self())<SUB>880</SUB>> ]
-"1919" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>880</SUB>> ]
-"1921" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>880</SUB>> ]
-"1757" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>857</SUB>> ]
-"1771" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>861</SUB>> ]
-"1779" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>862</SUB>> ]
-"1782" [label = <(&lt;operator&gt;.lessThan,hs.NewHandle&lt;mirror::Throwable)<SUB>863</SUB>> ]
-"1789" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>863</SUB>> ]
-"1799" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>864</SUB>> ]
-"1810" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>866</SUB>> ]
-"1815" [label = <(Get,old_exception.Get())<SUB>866</SUB>> ]
-"1826" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetObjectClass)<SUB>867</SUB>> ]
-"1829" [label = <(get,exception.get())<SUB>867</SUB>> ]
-"1839" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>868</SUB>> ]
-"1841" [label = <(&lt;operator&gt;.fieldAccess,exception_class.get)<SUB>868</SUB>> ]
-"1852" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;)<SUB>870</SUB>> ]
-"1856" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>871</SUB>> ]
-"1868" [label = <(CallVoidMethod,env-&gt;CallVoidMethod(exception.get(), mid))<SUB>873</SUB>> ]
-"1916" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>880</SUB>> ]
-"1923" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>880</SUB>> ]
-"1758" [label = <(Self,soa.Self())<SUB>857</SUB>> ]
-"1762" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>857</SUB>> ]
-"1773" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>861</SUB>> ]
-"1783" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>863</SUB>> ]
-"1786" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>863</SUB>> ]
-"1790" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>863</SUB>> ]
-"1801" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>864</SUB>> ]
-"1811" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>866</SUB>> ]
-"1816" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>866</SUB>> ]
-"1828" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>867</SUB>> ]
-"1830" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>867</SUB>> ]
-"1843" [label = <(FIELD_IDENTIFIER,get,get)<SUB>868</SUB>> ]
-"1853" [label = <(LOG,LOG(WARNING))<SUB>870</SUB>> ]
-"1857" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>871</SUB>> ]
-"1862" [label = <(Get,old_exception.Get())<SUB>871</SUB>> ]
-"1869" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;CallVoidMethod)<SUB>873</SUB>> ]
-"1872" [label = <(get,exception.get())<SUB>873</SUB>> ]
-"1878" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>874</SUB>> ]
-"1918" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>880</SUB>> ]
-"1759" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>857</SUB>> ]
-"1785" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>863</SUB>> ]
-"1788" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>863</SUB>> ]
-"1791" [label = <(Self,soa.Self())<SUB>863</SUB>> ]
-"1795" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>863</SUB>> ]
-"1813" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>866</SUB>> ]
-"1818" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>866</SUB>> ]
-"1832" [label = <(FIELD_IDENTIFIER,get,get)<SUB>867</SUB>> ]
-"1858" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>871</SUB>> ]
-"1861" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>871</SUB>> ]
-"1863" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>871</SUB>> ]
-"1871" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>873</SUB>> ]
-"1873" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>873</SUB>> ]
-"1879" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>874</SUB>> ]
-"1886" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException())\012 &lt;&lt; &quot; thrown while calling printStackTrace&quot;)<SUB>875</SUB>> ]
-"1906" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>877</SUB>> ]
-"1761" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>857</SUB>> ]
-"1792" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>863</SUB>> ]
-"1865" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>871</SUB>> ]
-"1875" [label = <(FIELD_IDENTIFIER,get,get)<SUB>873</SUB>> ]
-"1880" [label = <(Self,soa.Self())<SUB>874</SUB>> ]
-"1884" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>874</SUB>> ]
-"1887" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>875</SUB>> ]
-"1907" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>877</SUB>> ]
-"1794" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>863</SUB>> ]
-"1881" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>874</SUB>> ]
-"1888" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot;)<SUB>875</SUB>> ]
-"1892" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>875</SUB>> ]
-"1908" [label = <(Self,soa.Self())<SUB>877</SUB>> ]
-"1912" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>877</SUB>> ]
-"1883" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>874</SUB>> ]
-"1889" [label = <(LOG,LOG(WARNING))<SUB>875</SUB>> ]
-"1893" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>875</SUB>> ]
-"1898" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>875</SUB>> ]
-"1909" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>877</SUB>> ]
-"1894" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>875</SUB>> ]
-"1897" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>875</SUB>> ]
-"1899" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>875</SUB>> ]
-"1911" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>877</SUB>> ]
-"1900" [label = <(Self,soa.Self())<SUB>875</SUB>> ]
-"1904" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>875</SUB>> ]
-"1901" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>875</SUB>> ]
-"1903" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>875</SUB>> ]
-"1748" [label = <(METHOD,ExceptionDescribe)<SUB>853</SUB>> ]
-"1924" [label = <(METHOD_RETURN,void)<SUB>853</SUB>> ]
+"1752" [label = <(soa,soa(env))<SUB>853</SUB>> ]
+"1765" [label = <(&lt;operator&gt;.greaterThan,StackHandleScope&lt;1&gt; hs(soa.Self()))<SUB>860</SUB>> ]
+"1774" [label = <(&lt;operator&gt;.greaterThan,Handle&lt;mirror::Throwable&gt; old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>861</SUB>> ]
+"1796" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>863</SUB>> ]
+"1803" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jthrowable&gt; exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>864</SUB>> ]
+"1819" [label = <(&lt;operator&gt;.greaterThan,ScopedLocalRef&lt;jclass&gt; exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>866</SUB>> ]
+"1834" [label = <(&lt;operator&gt;.assignment,mid = env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>867</SUB>> ]
+"1913" [label = <(SetException,soa.Self()-&gt;SetException(old_exception.Get()))<SUB>879</SUB>> ]
+"1755" [label = <(&lt;operator&gt;.logicalNot,!soa.Self()-&gt;GetException())<SUB>856</SUB>> ]
+"1766" [label = <(&lt;operator&gt;.lessThan,StackHandleScope&lt;1)<SUB>860</SUB>> ]
+"1769" [label = <(hs,hs(soa.Self()))<SUB>860</SUB>> ]
+"1775" [label = <(&lt;operator&gt;.lessThan,Handle&lt;mirror::Throwable)<SUB>861</SUB>> ]
+"1780" [label = <(old_exception,old_exception(\012        hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException())))<SUB>861</SUB>> ]
+"1797" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>863</SUB>> ]
+"1804" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jthrowable)<SUB>864</SUB>> ]
+"1807" [label = <(exception,exception(env,\012                                         soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get())))<SUB>864</SUB>> ]
+"1820" [label = <(&lt;operator&gt;.lessThan,ScopedLocalRef&lt;jclass)<SUB>866</SUB>> ]
+"1823" [label = <(exception_class,exception_class(env, env-&gt;GetObjectClass(exception.get())))<SUB>866</SUB>> ]
+"1836" [label = <(GetMethodID,env-&gt;GetMethodID(exception_class.get(), &quot;printStackTrace&quot;, &quot;()V&quot;))<SUB>867</SUB>> ]
+"1847" [label = <(&lt;operator&gt;.equals,mid == nullptr)<SUB>868</SUB>> ]
+"1914" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;SetException)<SUB>879</SUB>> ]
+"1920" [label = <(Get,old_exception.Get())<SUB>879</SUB>> ]
+"1756" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>856</SUB>> ]
+"1764" [label = <(RETURN,return;,return;)<SUB>857</SUB>> ]
+"1770" [label = <(Self,soa.Self())<SUB>860</SUB>> ]
+"1777" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>861</SUB>> ]
+"1781" [label = <(&lt;operator&gt;.greaterThan,hs.NewHandle&lt;mirror::Throwable&gt;(soa.Self()-&gt;GetException()))<SUB>862</SUB>> ]
+"1798" [label = <(Self,soa.Self())<SUB>863</SUB>> ]
+"1802" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>863</SUB>> ]
+"1809" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(old_exception.Get()))<SUB>865</SUB>> ]
+"1825" [label = <(GetObjectClass,env-&gt;GetObjectClass(exception.get()))<SUB>866</SUB>> ]
+"1837" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetMethodID)<SUB>867</SUB>> ]
+"1840" [label = <(get,exception_class.get())<SUB>867</SUB>> ]
+"1851" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;\012 &lt;&lt; mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>869</SUB>> ]
+"1915" [label = <(Self,soa.Self())<SUB>879</SUB>> ]
+"1919" [label = <(FIELD_IDENTIFIER,SetException,SetException)<SUB>879</SUB>> ]
+"1921" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>879</SUB>> ]
+"1757" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>856</SUB>> ]
+"1771" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>860</SUB>> ]
+"1779" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>861</SUB>> ]
+"1782" [label = <(&lt;operator&gt;.lessThan,hs.NewHandle&lt;mirror::Throwable)<SUB>862</SUB>> ]
+"1789" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>862</SUB>> ]
+"1799" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>863</SUB>> ]
+"1810" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>865</SUB>> ]
+"1815" [label = <(Get,old_exception.Get())<SUB>865</SUB>> ]
+"1826" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;GetObjectClass)<SUB>866</SUB>> ]
+"1829" [label = <(get,exception.get())<SUB>866</SUB>> ]
+"1839" [label = <(FIELD_IDENTIFIER,GetMethodID,GetMethodID)<SUB>867</SUB>> ]
+"1841" [label = <(&lt;operator&gt;.fieldAccess,exception_class.get)<SUB>867</SUB>> ]
+"1852" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: no printStackTrace()V in &quot;)<SUB>869</SUB>> ]
+"1856" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(old_exception.Get()))<SUB>870</SUB>> ]
+"1868" [label = <(CallVoidMethod,env-&gt;CallVoidMethod(exception.get(), mid))<SUB>872</SUB>> ]
+"1916" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>879</SUB>> ]
+"1923" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>879</SUB>> ]
+"1758" [label = <(Self,soa.Self())<SUB>856</SUB>> ]
+"1762" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>856</SUB>> ]
+"1773" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>860</SUB>> ]
+"1783" [label = <(&lt;operator&gt;.fieldAccess,hs.NewHandle)<SUB>862</SUB>> ]
+"1786" [label = <(&lt;operator&gt;.fieldAccess,mirror::Throwable)<SUB>862</SUB>> ]
+"1790" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>862</SUB>> ]
+"1801" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>863</SUB>> ]
+"1811" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>865</SUB>> ]
+"1816" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>865</SUB>> ]
+"1828" [label = <(FIELD_IDENTIFIER,GetObjectClass,GetObjectClass)<SUB>866</SUB>> ]
+"1830" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>866</SUB>> ]
+"1843" [label = <(FIELD_IDENTIFIER,get,get)<SUB>867</SUB>> ]
+"1853" [label = <(LOG,LOG(WARNING))<SUB>869</SUB>> ]
+"1857" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>870</SUB>> ]
+"1862" [label = <(Get,old_exception.Get())<SUB>870</SUB>> ]
+"1869" [label = <(&lt;operator&gt;.indirectFieldAccess,env-&gt;CallVoidMethod)<SUB>872</SUB>> ]
+"1872" [label = <(get,exception.get())<SUB>872</SUB>> ]
+"1878" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>873</SUB>> ]
+"1918" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>879</SUB>> ]
+"1759" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>856</SUB>> ]
+"1785" [label = <(FIELD_IDENTIFIER,NewHandle,NewHandle)<SUB>862</SUB>> ]
+"1788" [label = <(FIELD_IDENTIFIER,Throwable,Throwable)<SUB>862</SUB>> ]
+"1791" [label = <(Self,soa.Self())<SUB>862</SUB>> ]
+"1795" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>862</SUB>> ]
+"1813" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>865</SUB>> ]
+"1818" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>865</SUB>> ]
+"1832" [label = <(FIELD_IDENTIFIER,get,get)<SUB>866</SUB>> ]
+"1858" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>870</SUB>> ]
+"1861" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>870</SUB>> ]
+"1863" [label = <(&lt;operator&gt;.fieldAccess,old_exception.Get)<SUB>870</SUB>> ]
+"1871" [label = <(FIELD_IDENTIFIER,CallVoidMethod,CallVoidMethod)<SUB>872</SUB>> ]
+"1873" [label = <(&lt;operator&gt;.fieldAccess,exception.get)<SUB>872</SUB>> ]
+"1879" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>873</SUB>> ]
+"1886" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException())\012 &lt;&lt; &quot; thrown while calling printStackTrace&quot;)<SUB>874</SUB>> ]
+"1906" [label = <(ClearException,soa.Self()-&gt;ClearException())<SUB>876</SUB>> ]
+"1761" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>856</SUB>> ]
+"1792" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>862</SUB>> ]
+"1865" [label = <(FIELD_IDENTIFIER,Get,Get)<SUB>870</SUB>> ]
+"1875" [label = <(FIELD_IDENTIFIER,get,get)<SUB>872</SUB>> ]
+"1880" [label = <(Self,soa.Self())<SUB>873</SUB>> ]
+"1884" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>873</SUB>> ]
+"1887" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot; &lt;&lt; mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>874</SUB>> ]
+"1907" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;ClearException)<SUB>876</SUB>> ]
+"1794" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>862</SUB>> ]
+"1881" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>873</SUB>> ]
+"1888" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: &quot;)<SUB>874</SUB>> ]
+"1892" [label = <(mirror::Object::PrettyTypeOf,mirror::Object::PrettyTypeOf(soa.Self()-&gt;GetException()))<SUB>874</SUB>> ]
+"1908" [label = <(Self,soa.Self())<SUB>876</SUB>> ]
+"1912" [label = <(FIELD_IDENTIFIER,ClearException,ClearException)<SUB>876</SUB>> ]
+"1883" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>873</SUB>> ]
+"1889" [label = <(LOG,LOG(WARNING))<SUB>874</SUB>> ]
+"1893" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object::PrettyTypeOf)<SUB>874</SUB>> ]
+"1898" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>874</SUB>> ]
+"1909" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>876</SUB>> ]
+"1894" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>874</SUB>> ]
+"1897" [label = <(FIELD_IDENTIFIER,PrettyTypeOf,PrettyTypeOf)<SUB>874</SUB>> ]
+"1899" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>874</SUB>> ]
+"1911" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>876</SUB>> ]
+"1900" [label = <(Self,soa.Self())<SUB>874</SUB>> ]
+"1904" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>874</SUB>> ]
+"1901" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>874</SUB>> ]
+"1903" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>874</SUB>> ]
+"1748" [label = <(METHOD,ExceptionDescribe)<SUB>852</SUB>> ]
+"1924" [label = <(METHOD_RETURN,void)<SUB>852</SUB>> ]
   "1752" -> "1761" 
   "1765" -> "1779" 
   "1774" -> "1801" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/530-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/530-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/530-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/530-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;" {  
-"16653" [label = <(METHOD,NewPrimitiveArray&lt;jfloatArray,mirror::FloatArray&gt;)> ]
-"16657" [label = <(METHOD_RETURN,ANY)> ]
-  "16653" -> "16657" 
+digraph "NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;" {  
+"16650" [label = <(METHOD,NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;)> ]
+"16654" [label = <(METHOD_RETURN,ANY)> ]
+  "16650" -> "16654" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/531-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/531-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/531-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/531-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;" {  
-"16658" [label = <(METHOD,NewPrimitiveArray&lt;jintArray,mirror::IntArray&gt;)> ]
-"16662" [label = <(METHOD_RETURN,ANY)> ]
-  "16658" -> "16662" 
+digraph "NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;" {  
+"16655" [label = <(METHOD,NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;)> ]
+"16659" [label = <(METHOD_RETURN,ANY)> ]
+  "16655" -> "16659" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/532-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/532-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/532-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/532-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;" {  
-"16663" [label = <(METHOD,NewPrimitiveArray&lt;jlongArray,mirror::LongArray&gt;)> ]
-"16667" [label = <(METHOD_RETURN,ANY)> ]
-  "16663" -> "16667" 
+digraph "CHECK_NON_NULL_ARGUMENT(element_jclass)" {  
+"16660" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(element_jclass))> ]
+"16665" [label = <(METHOD_RETURN,ANY)> ]
+  "16660" -> "16665" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/533-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/533-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/533-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/533-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT(element_jclass)" {  
-"16668" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT(element_jclass))> ]
-"16673" [label = <(METHOD_RETURN,ANY)> ]
-  "16668" -> "16673" 
+digraph "IsPrimitive" {  
+"16666" [label = <(METHOD,IsPrimitive)> ]
+"16669" [label = <(METHOD_RETURN,ANY)> ]
+  "16666" -> "16669" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/534-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/534-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/534-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/534-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "IsPrimitive" {  
-"16674" [label = <(METHOD,IsPrimitive)> ]
-"16677" [label = <(METHOD_RETURN,ANY)> ]
-  "16674" -> "16677" 
+digraph "PrettyDescriptor" {  
+"16670" [label = <(METHOD,PrettyDescriptor)> ]
+"16673" [label = <(METHOD_RETURN,ANY)> ]
+  "16670" -> "16673" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/535-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/535-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/535-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/535-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyDescriptor" {  
-"16678" [label = <(METHOD,PrettyDescriptor)> ]
-"16681" [label = <(METHOD_RETURN,ANY)> ]
-  "16678" -> "16681" 
+digraph "FindArrayClass" {  
+"16674" [label = <(METHOD,FindArrayClass)> ]
+"16679" [label = <(METHOD_RETURN,ANY)> ]
+  "16674" -> "16679" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/536-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/536-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/536-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/536-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "FindArrayClass" {  
-"16682" [label = <(METHOD,FindArrayClass)> ]
-"16687" [label = <(METHOD_RETURN,ANY)> ]
-  "16682" -> "16687" 
+digraph "::Alloc" {  
+"16680" [label = <(METHOD,::Alloc)> ]
+"16686" [label = <(METHOD_RETURN,ANY)> ]
+  "16680" -> "16686" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/537-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/537-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/537-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/537-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "::Alloc" {  
-"16688" [label = <(METHOD,::Alloc)> ]
-"16694" [label = <(METHOD_RETURN,ANY)> ]
-  "16688" -> "16694" 
+digraph "GetComponentType" {  
+"16687" [label = <(METHOD,GetComponentType)> ]
+"16690" [label = <(METHOD_RETURN,ANY)> ]
+  "16687" -> "16690" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/538-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/538-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/538-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/538-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetComponentType" {  
-"16695" [label = <(METHOD,GetComponentType)> ]
-"16698" [label = <(METHOD_RETURN,ANY)> ]
-  "16695" -> "16698" 
+digraph "mirror::Class::PrettyDescriptor" {  
+"16691" [label = <(METHOD,mirror::Class::PrettyDescriptor)> ]
+"16695" [label = <(METHOD_RETURN,ANY)> ]
+  "16691" -> "16695" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/539-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/539-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/539-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/539-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::Class::PrettyDescriptor" {  
-"16699" [label = <(METHOD,mirror::Class::PrettyDescriptor)> ]
-"16703" [label = <(METHOD_RETURN,ANY)> ]
-  "16699" -> "16703" 
+digraph "NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;" {  
+"16696" [label = <(METHOD,NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;)> ]
+"16700" [label = <(METHOD_RETURN,ANY)> ]
+  "16696" -> "16700" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/54-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/54-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/54-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/54-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,23 +1,23 @@
 digraph "ExceptionOccurred" {  
-"1930" [label = <(soa,soa(env))<SUB>884</SUB>> ]
-"1932" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; exception = soa.Self()-&gt;GetException())<SUB>885</SUB>> ]
-"1947" [label = <(RETURN,return soa.AddLocalReference&lt;jthrowable&gt;(exception);,return soa.AddLocalReference&lt;jthrowable&gt;(exception);)<SUB>886</SUB>> ]
-"1933" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; exception)<SUB>885</SUB>> ]
-"1940" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>885</SUB>> ]
-"1948" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(exception))<SUB>886</SUB>> ]
-"1934" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>885</SUB>> ]
-"1941" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>885</SUB>> ]
-"1949" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>886</SUB>> ]
-"1936" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>885</SUB>> ]
-"1942" [label = <(Self,soa.Self())<SUB>885</SUB>> ]
-"1946" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>885</SUB>> ]
-"1950" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>886</SUB>> ]
-"1938" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>885</SUB>> ]
-"1943" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>885</SUB>> ]
-"1952" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>886</SUB>> ]
-"1945" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>885</SUB>> ]
-"1926" [label = <(METHOD,ExceptionOccurred)<SUB>883</SUB>> ]
-"1955" [label = <(METHOD_RETURN,jthrowable)<SUB>883</SUB>> ]
+"1930" [label = <(soa,soa(env))<SUB>883</SUB>> ]
+"1932" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; exception = soa.Self()-&gt;GetException())<SUB>884</SUB>> ]
+"1947" [label = <(RETURN,return soa.AddLocalReference&lt;jthrowable&gt;(exception);,return soa.AddLocalReference&lt;jthrowable&gt;(exception);)<SUB>885</SUB>> ]
+"1933" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; exception)<SUB>884</SUB>> ]
+"1940" [label = <(GetException,soa.Self()-&gt;GetException())<SUB>884</SUB>> ]
+"1948" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jthrowable&gt;(exception))<SUB>885</SUB>> ]
+"1934" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>884</SUB>> ]
+"1941" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;GetException)<SUB>884</SUB>> ]
+"1949" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jthrowable)<SUB>885</SUB>> ]
+"1936" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>884</SUB>> ]
+"1942" [label = <(Self,soa.Self())<SUB>884</SUB>> ]
+"1946" [label = <(FIELD_IDENTIFIER,GetException,GetException)<SUB>884</SUB>> ]
+"1950" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>885</SUB>> ]
+"1938" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>884</SUB>> ]
+"1943" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>884</SUB>> ]
+"1952" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>885</SUB>> ]
+"1945" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>884</SUB>> ]
+"1926" [label = <(METHOD,ExceptionOccurred)<SUB>882</SUB>> ]
+"1955" [label = <(METHOD_RETURN,jthrowable)<SUB>882</SUB>> ]
   "1930" -> "1938" 
   "1932" -> "1952" 
   "1947" -> "1955" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/540-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/540-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/540-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/540-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;" {  
-"16704" [label = <(METHOD,NewPrimitiveArray&lt;jshortArray,mirror::ShortArray&gt;)> ]
-"16708" [label = <(METHOD_RETURN,ANY)> ]
-  "16704" -> "16708" 
+digraph "IsPrimitiveArray" {  
+"16701" [label = <(METHOD,IsPrimitiveArray)> ]
+"16704" [label = <(METHOD_RETURN,ANY)> ]
+  "16701" -> "16704" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/541-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/541-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/541-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/541-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "IsPrimitiveArray" {  
-"16709" [label = <(METHOD,IsPrimitiveArray)> ]
-"16712" [label = <(METHOD_RETURN,ANY)> ]
-  "16709" -> "16712" 
+digraph "GetRawData" {  
+"16705" [label = <(METHOD,GetRawData)> ]
+"16710" [label = <(METHOD_RETURN,ANY)> ]
+  "16705" -> "16710" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/542-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/542-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/542-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/542-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetRawData" {  
-"16713" [label = <(METHOD,GetRawData)> ]
-"16718" [label = <(METHOD_RETURN,ANY)> ]
-  "16713" -> "16718" 
+digraph "GetComponentSize" {  
+"16711" [label = <(METHOD,GetComponentSize)> ]
+"16714" [label = <(METHOD_RETURN,ANY)> ]
+  "16711" -> "16714" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/543-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/543-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/543-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/543-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetComponentSize" {  
-"16719" [label = <(METHOD,GetComponentSize)> ]
-"16722" [label = <(METHOD_RETURN,ANY)> ]
-  "16719" -> "16722" 
+digraph "GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16715" [label = <(METHOD,GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+"16720" [label = <(METHOD_RETURN,ANY)> ]
+  "16715" -> "16720" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/544-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/544-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/544-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/544-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16723" [label = <(METHOD,GetPrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
-"16728" [label = <(METHOD_RETURN,ANY)> ]
-  "16723" -> "16728" 
+digraph "GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16721" [label = <(METHOD,GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+"16726" [label = <(METHOD_RETURN,ANY)> ]
+  "16721" -> "16726" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/545-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/545-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/545-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/545-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16729" [label = <(METHOD,GetPrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
-"16734" [label = <(METHOD_RETURN,ANY)> ]
-  "16729" -> "16734" 
+digraph "GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16727" [label = <(METHOD,GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+"16732" [label = <(METHOD_RETURN,ANY)> ]
+  "16727" -> "16732" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/546-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/546-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/546-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/546-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16735" [label = <(METHOD,GetPrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
-"16740" [label = <(METHOD_RETURN,ANY)> ]
-  "16735" -> "16740" 
+digraph "GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16733" [label = <(METHOD,GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+"16738" [label = <(METHOD_RETURN,ANY)> ]
+  "16733" -> "16738" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/547-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/547-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/547-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/547-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16741" [label = <(METHOD,GetPrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
-"16746" [label = <(METHOD_RETURN,ANY)> ]
-  "16741" -> "16746" 
+digraph "GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16739" [label = <(METHOD,GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+"16744" [label = <(METHOD_RETURN,ANY)> ]
+  "16739" -> "16744" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/548-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/548-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/548-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/548-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16747" [label = <(METHOD,GetPrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
-"16752" [label = <(METHOD_RETURN,ANY)> ]
-  "16747" -> "16752" 
+digraph "GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16745" [label = <(METHOD,GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+"16750" [label = <(METHOD_RETURN,ANY)> ]
+  "16745" -> "16750" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/549-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/549-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/549-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/549-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16753" [label = <(METHOD,GetPrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
-"16758" [label = <(METHOD_RETURN,ANY)> ]
-  "16753" -> "16758" 
+digraph "GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16751" [label = <(METHOD,GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+"16756" [label = <(METHOD_RETURN,ANY)> ]
+  "16751" -> "16756" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/55-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/55-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/55-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/55-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,9 +1,9 @@
 digraph "FatalError" {  
-"1961" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot; &lt;&lt; msg)<SUB>890</SUB>> ]
-"1962" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot;)<SUB>890</SUB>> ]
-"1963" [label = <(LOG,LOG(FATAL))<SUB>890</SUB>> ]
-"1957" [label = <(METHOD,FatalError)<SUB>889</SUB>> ]
-"1967" [label = <(METHOD_RETURN,void)<SUB>889</SUB>> ]
+"1961" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot; &lt;&lt; msg)<SUB>889</SUB>> ]
+"1962" [label = <(&lt;operator&gt;.shiftLeft,LOG(FATAL) &lt;&lt; &quot;JNI FatalError called: &quot;)<SUB>889</SUB>> ]
+"1963" [label = <(LOG,LOG(FATAL))<SUB>889</SUB>> ]
+"1957" [label = <(METHOD,FatalError)<SUB>888</SUB>> ]
+"1967" [label = <(METHOD_RETURN,void)<SUB>888</SUB>> ]
   "1961" -> "1967" 
   "1962" -> "1961" 
   "1963" -> "1962" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/550-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/550-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/550-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/550-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16759" [label = <(METHOD,GetPrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
-"16764" [label = <(METHOD_RETURN,ANY)> ]
-  "16759" -> "16764" 
+digraph "GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16757" [label = <(METHOD,GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+"16762" [label = <(METHOD_RETURN,ANY)> ]
+  "16757" -> "16762" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/551-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/551-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/551-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/551-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16765" [label = <(METHOD,GetPrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
-"16770" [label = <(METHOD_RETURN,ANY)> ]
-  "16765" -> "16770" 
+digraph "ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16763" [label = <(METHOD,ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+"16769" [label = <(METHOD_RETURN,ANY)> ]
+  "16763" -> "16769" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/552-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/552-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/552-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/552-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16771" [label = <(METHOD,ReleasePrimitiveArray&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
-"16777" [label = <(METHOD_RETURN,ANY)> ]
-  "16771" -> "16777" 
+digraph "ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16770" [label = <(METHOD,ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+"16776" [label = <(METHOD_RETURN,ANY)> ]
+  "16770" -> "16776" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/553-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/553-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/553-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/553-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16778" [label = <(METHOD,ReleasePrimitiveArray&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
-"16784" [label = <(METHOD_RETURN,ANY)> ]
-  "16778" -> "16784" 
+digraph "ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16777" [label = <(METHOD,ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+"16783" [label = <(METHOD_RETURN,ANY)> ]
+  "16777" -> "16783" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/554-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/554-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/554-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/554-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16785" [label = <(METHOD,ReleasePrimitiveArray&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
-"16791" [label = <(METHOD_RETURN,ANY)> ]
-  "16785" -> "16791" 
+digraph "ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16784" [label = <(METHOD,ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+"16790" [label = <(METHOD_RETURN,ANY)> ]
+  "16784" -> "16790" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/555-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/555-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/555-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/555-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16792" [label = <(METHOD,ReleasePrimitiveArray&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
-"16798" [label = <(METHOD_RETURN,ANY)> ]
-  "16792" -> "16798" 
+digraph "ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16791" [label = <(METHOD,ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+"16797" [label = <(METHOD_RETURN,ANY)> ]
+  "16791" -> "16797" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/556-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/556-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/556-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/556-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16799" [label = <(METHOD,ReleasePrimitiveArray&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
-"16805" [label = <(METHOD_RETURN,ANY)> ]
-  "16799" -> "16805" 
+digraph "ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16798" [label = <(METHOD,ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+"16804" [label = <(METHOD_RETURN,ANY)> ]
+  "16798" -> "16804" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/557-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/557-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/557-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/557-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16806" [label = <(METHOD,ReleasePrimitiveArray&lt;jintArray,jint,mirror::IntArray&gt;)> ]
-"16812" [label = <(METHOD_RETURN,ANY)> ]
-  "16806" -> "16812" 
+digraph "ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16805" [label = <(METHOD,ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+"16811" [label = <(METHOD_RETURN,ANY)> ]
+  "16805" -> "16811" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/558-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/558-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/558-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/558-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16813" [label = <(METHOD,ReleasePrimitiveArray&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
-"16819" [label = <(METHOD_RETURN,ANY)> ]
-  "16813" -> "16819" 
+digraph "ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16812" [label = <(METHOD,ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+"16818" [label = <(METHOD_RETURN,ANY)> ]
+  "16812" -> "16818" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/559-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/559-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/559-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/559-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16820" [label = <(METHOD,ReleasePrimitiveArray&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16819" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
 "16826" [label = <(METHOD_RETURN,ANY)> ]
-  "16820" -> "16826" 
+  "16819" -> "16826" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/56-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/56-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/56-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/56-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,15 +1,15 @@
 digraph "PushLocalFrame" {  
-"1974" [label = <(soa,soa(env))<SUB>895</SUB>> ]
-"1986" [label = <(PushFrame,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame(capacity))<SUB>899</SUB>> ]
-"1992" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>900</SUB>> ]
-"1977" [label = <(&lt;operator&gt;.notEquals,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;) != JNI_OK)<SUB>896</SUB>> ]
-"1987" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame)<SUB>899</SUB>> ]
-"1978" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;))<SUB>896</SUB>> ]
-"1984" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>897</SUB>> ]
-"1988" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>899</SUB>> ]
-"1990" [label = <(FIELD_IDENTIFIER,PushFrame,PushFrame)<SUB>899</SUB>> ]
-"1969" [label = <(METHOD,PushLocalFrame)<SUB>893</SUB>> ]
-"1994" [label = <(METHOD_RETURN,jint)<SUB>893</SUB>> ]
+"1974" [label = <(soa,soa(env))<SUB>894</SUB>> ]
+"1986" [label = <(PushFrame,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame(capacity))<SUB>898</SUB>> ]
+"1992" [label = <(RETURN,return JNI_OK;,return JNI_OK;)<SUB>899</SUB>> ]
+"1977" [label = <(&lt;operator&gt;.notEquals,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;) != JNI_OK)<SUB>895</SUB>> ]
+"1987" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;PushFrame)<SUB>898</SUB>> ]
+"1978" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, capacity, &quot;PushLocalFrame&quot;))<SUB>895</SUB>> ]
+"1984" [label = <(RETURN,return JNI_ERR;,return JNI_ERR;)<SUB>896</SUB>> ]
+"1988" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>898</SUB>> ]
+"1990" [label = <(FIELD_IDENTIFIER,PushFrame,PushFrame)<SUB>898</SUB>> ]
+"1969" [label = <(METHOD,PushLocalFrame)<SUB>892</SUB>> ]
+"1994" [label = <(METHOD_RETURN,jint)<SUB>892</SUB>> ]
   "1974" -> "1978" 
   "1986" -> "1992" 
   "1992" -> "1994" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/560-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/560-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/560-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/560-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16827" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16827" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
 "16834" [label = <(METHOD_RETURN,ANY)> ]
   "16827" -> "16834" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/561-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/561-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/561-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/561-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16835" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16835" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
 "16842" [label = <(METHOD_RETURN,ANY)> ]
   "16835" -> "16842" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/562-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/562-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/562-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/562-cfg.dot	2023-06-07 19:34:55.067387770 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16843" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16843" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
 "16850" [label = <(METHOD_RETURN,ANY)> ]
   "16843" -> "16850" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/563-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/563-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/563-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/563-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16851" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16851" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
 "16858" [label = <(METHOD_RETURN,ANY)> ]
   "16851" -> "16858" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/564-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/564-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/564-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/564-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16859" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16859" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
 "16866" [label = <(METHOD_RETURN,ANY)> ]
   "16859" -> "16866" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/565-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/565-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/565-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/565-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16867" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16867" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
 "16874" [label = <(METHOD_RETURN,ANY)> ]
   "16867" -> "16874" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/566-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/566-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/566-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/566-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16875" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+digraph "GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16875" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
 "16882" [label = <(METHOD_RETURN,ANY)> ]
   "16875" -> "16882" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/567-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/567-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/567-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/567-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16883" [label = <(METHOD,GetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
+"16883" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
 "16890" [label = <(METHOD_RETURN,ANY)> ]
   "16883" -> "16890" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/568-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/568-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/568-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/568-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;" {  
-"16891" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbooleanArray,jboolean,mirror::BooleanArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
+"16891" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
 "16898" [label = <(METHOD_RETURN,ANY)> ]
   "16891" -> "16898" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/569-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/569-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/569-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/569-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;" {  
-"16899" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jbyteArray,jbyte,mirror::ByteArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
+"16899" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
 "16906" [label = <(METHOD_RETURN,ANY)> ]
   "16899" -> "16906" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/57-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/57-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/57-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/57-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,29 +1,29 @@
 digraph "PopLocalFrame" {  
-"2001" [label = <(soa,soa(env))<SUB>904</SUB>> ]
-"2003" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; survivor = soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>905</SUB>> ]
-"2020" [label = <(PopFrame,soa.Env()-&gt;PopFrame())<SUB>906</SUB>> ]
-"2027" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(survivor);,return soa.AddLocalReference&lt;jobject&gt;(survivor);)<SUB>907</SUB>> ]
-"2004" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; survivor)<SUB>905</SUB>> ]
-"2011" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>905</SUB>> ]
-"2021" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Env()-&gt;PopFrame)<SUB>906</SUB>> ]
-"2028" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(survivor))<SUB>907</SUB>> ]
-"2005" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>905</SUB>> ]
-"2012" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>905</SUB>> ]
-"2022" [label = <(Env,soa.Env())<SUB>906</SUB>> ]
-"2026" [label = <(FIELD_IDENTIFIER,PopFrame,PopFrame)<SUB>906</SUB>> ]
-"2029" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>907</SUB>> ]
-"2007" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>905</SUB>> ]
-"2013" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>905</SUB>> ]
-"2016" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>905</SUB>> ]
-"2023" [label = <(&lt;operator&gt;.fieldAccess,soa.Env)<SUB>906</SUB>> ]
-"2030" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>907</SUB>> ]
-"2009" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>905</SUB>> ]
-"2015" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>905</SUB>> ]
-"2018" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>905</SUB>> ]
-"2025" [label = <(FIELD_IDENTIFIER,Env,Env)<SUB>906</SUB>> ]
-"2032" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>907</SUB>> ]
-"1996" [label = <(METHOD,PopLocalFrame)<SUB>903</SUB>> ]
-"2035" [label = <(METHOD_RETURN,jobject)<SUB>903</SUB>> ]
+"2001" [label = <(soa,soa(env))<SUB>903</SUB>> ]
+"2003" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; survivor = soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>904</SUB>> ]
+"2020" [label = <(PopFrame,soa.Env()-&gt;PopFrame())<SUB>905</SUB>> ]
+"2027" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(survivor);,return soa.AddLocalReference&lt;jobject&gt;(survivor);)<SUB>906</SUB>> ]
+"2004" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; survivor)<SUB>904</SUB>> ]
+"2011" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(java_survivor))<SUB>904</SUB>> ]
+"2021" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Env()-&gt;PopFrame)<SUB>905</SUB>> ]
+"2028" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(survivor))<SUB>906</SUB>> ]
+"2005" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>904</SUB>> ]
+"2012" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>904</SUB>> ]
+"2022" [label = <(Env,soa.Env())<SUB>905</SUB>> ]
+"2026" [label = <(FIELD_IDENTIFIER,PopFrame,PopFrame)<SUB>905</SUB>> ]
+"2029" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>906</SUB>> ]
+"2007" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>904</SUB>> ]
+"2013" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>904</SUB>> ]
+"2016" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>904</SUB>> ]
+"2023" [label = <(&lt;operator&gt;.fieldAccess,soa.Env)<SUB>905</SUB>> ]
+"2030" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>906</SUB>> ]
+"2009" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>904</SUB>> ]
+"2015" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>904</SUB>> ]
+"2018" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>904</SUB>> ]
+"2025" [label = <(FIELD_IDENTIFIER,Env,Env)<SUB>905</SUB>> ]
+"2032" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>906</SUB>> ]
+"1996" [label = <(METHOD,PopLocalFrame)<SUB>902</SUB>> ]
+"2035" [label = <(METHOD_RETURN,jobject)<SUB>902</SUB>> ]
   "2001" -> "2009" 
   "2003" -> "2025" 
   "2020" -> "2032" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/570-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/570-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/570-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/570-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;" {  
-"16907" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jcharArray,jchar,mirror::CharArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
+"16907" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
 "16914" [label = <(METHOD_RETURN,ANY)> ]
   "16907" -> "16914" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/571-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/571-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/571-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/571-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;" {  
-"16915" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jdoubleArray,jdouble,mirror::DoubleArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
+"16915" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
 "16922" [label = <(METHOD_RETURN,ANY)> ]
   "16915" -> "16922" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/572-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/572-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/572-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/572-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;" {  
-"16923" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jfloatArray,jfloat,mirror::FloatArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
+"16923" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
 "16930" [label = <(METHOD_RETURN,ANY)> ]
   "16923" -> "16930" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/573-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/573-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/573-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/573-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;" {  
-"16931" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jintArray,jint,mirror::IntArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
+"16931" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
 "16938" [label = <(METHOD_RETURN,ANY)> ]
   "16931" -> "16938" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/574-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/574-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/574-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/574-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;" {  
-"16939" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jlongArray,jlong,mirror::LongArray&gt;)> ]
+digraph "SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
+"16939" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
 "16946" [label = <(METHOD_RETURN,ANY)> ]
   "16939" -> "16946" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/575-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/575-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/575-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/575-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;" {  
-"16947" [label = <(METHOD,SetPrimitiveArrayRegion&lt;jshortArray,jshort,mirror::ShortArray&gt;)> ]
-"16954" [label = <(METHOD_RETURN,ANY)> ]
-  "16947" -> "16954" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME" {  
+"16947" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME)<SUB>695</SUB>> ]
+"16952" [label = <(METHOD_RETURN,ANY)> ]
+  "16947" -> "16952" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/576-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/576-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/576-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/576-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME" {  
-"16955" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME)<SUB>696</SUB>> ]
-"16960" [label = <(METHOD_RETURN,ANY)> ]
-  "16955" -> "16960" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR)" {  
+"16953" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))> ]
+"16958" [label = <(METHOD_RETURN,ANY)> ]
+  "16953" -> "16958" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/577-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/577-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/577-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/577-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR)" {  
-"16961" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, java_class, JNI_ERR))> ]
-"16966" [label = <(METHOD_RETURN,ANY)> ]
-  "16961" -> "16966" 
+digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR)" {  
+"16959" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))> ]
+"16964" [label = <(METHOD_RETURN,ANY)> ]
+  "16959" -> "16964" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/578-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/578-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/578-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/578-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR)" {  
-"16967" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_FN_NAME(&quot;RegisterNatives&quot;, methods, JNI_ERR))> ]
-"16972" [label = <(METHOD_RETURN,ANY)> ]
-  "16967" -> "16972" 
+digraph "IsCheckJniEnabled" {  
+"16965" [label = <(METHOD,IsCheckJniEnabled)> ]
+"16968" [label = <(METHOD_RETURN,ANY)> ]
+  "16965" -> "16968" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/579-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/579-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/579-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/579-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "IsCheckJniEnabled" {  
-"16973" [label = <(METHOD,IsCheckJniEnabled)> ]
-"16976" [label = <(METHOD_RETURN,ANY)> ]
-  "16973" -> "16976" 
+digraph "DumpClass" {  
+"16969" [label = <(METHOD,DumpClass)> ]
+"16974" [label = <(METHOD_RETURN,ANY)> ]
+  "16969" -> "16974" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/58-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/58-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/58-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/58-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,9 +1,9 @@
 digraph "EnsureLocalCapacity" {  
-"2042" [label = <(soa,soa(env))<SUB>912</SUB>> ]
-"2044" [label = <(RETURN,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);)<SUB>913</SUB>> ]
-"2045" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;))<SUB>913</SUB>> ]
-"2037" [label = <(METHOD,EnsureLocalCapacity)<SUB>910</SUB>> ]
-"2049" [label = <(METHOD_RETURN,jint)<SUB>910</SUB>> ]
+"2042" [label = <(soa,soa(env))<SUB>911</SUB>> ]
+"2044" [label = <(RETURN,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);,return EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;);)<SUB>912</SUB>> ]
+"2045" [label = <(EnsureLocalCapacityInternal,EnsureLocalCapacityInternal(soa, desired_capacity, &quot;EnsureLocalCapacity&quot;))<SUB>912</SUB>> ]
+"2037" [label = <(METHOD,EnsureLocalCapacity)<SUB>909</SUB>> ]
+"2049" [label = <(METHOD_RETURN,jint)<SUB>909</SUB>> ]
   "2042" -> "2045" 
   "2044" -> "2049" 
   "2045" -> "2044" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/580-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/580-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/580-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/580-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "DumpClass" {  
-"16977" [label = <(METHOD,DumpClass)> ]
-"16982" [label = <(METHOD_RETURN,ANY)> ]
-  "16977" -> "16982" 
+digraph "LOG_STREAM" {  
+"16975" [label = <(METHOD,LOG_STREAM)> ]
+"16978" [label = <(METHOD_RETURN,ANY)> ]
+  "16975" -> "16978" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/581-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/581-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/581-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/581-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "LOG_STREAM" {  
-"16983" [label = <(METHOD,LOG_STREAM)> ]
-"16986" [label = <(METHOD_RETURN,ANY)> ]
-  "16983" -> "16986" 
+digraph "ToModifiedUtf8" {  
+"16979" [label = <(METHOD,ToModifiedUtf8)> ]
+"16982" [label = <(METHOD_RETURN,ANY)> ]
+  "16979" -> "16982" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/582-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/582-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/582-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/582-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "ToModifiedUtf8" {  
-"16987" [label = <(METHOD,ToModifiedUtf8)> ]
-"16990" [label = <(METHOD_RETURN,ANY)> ]
-  "16987" -> "16990" 
+digraph "GetLocation" {  
+"16983" [label = <(METHOD,GetLocation)> ]
+"16986" [label = <(METHOD_RETURN,ANY)> ]
+  "16983" -> "16986" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/583-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/583-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/583-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/583-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetLocation" {  
-"16991" [label = <(METHOD,GetLocation)> ]
-"16994" [label = <(METHOD_RETURN,ANY)> ]
-  "16991" -> "16994" 
+digraph "GetDexCache" {  
+"16987" [label = <(METHOD,GetDexCache)> ]
+"16990" [label = <(METHOD_RETURN,ANY)> ]
+  "16987" -> "16990" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/584-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/584-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/584-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/584-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetDexCache" {  
-"16995" [label = <(METHOD,GetDexCache)> ]
-"16998" [label = <(METHOD_RETURN,ANY)> ]
-  "16995" -> "16998" 
+digraph "IsNative" {  
+"16991" [label = <(METHOD,IsNative)> ]
+"16994" [label = <(METHOD_RETURN,ANY)> ]
+  "16991" -> "16994" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/585-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/585-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/585-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/585-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "IsNative" {  
-"16999" [label = <(METHOD,IsNative)> ]
-"17002" [label = <(METHOD_RETURN,ANY)> ]
-  "16999" -> "17002" 
+digraph "VLOG" {  
+"16995" [label = <(METHOD,VLOG)> ]
+"16998" [label = <(METHOD_RETURN,ANY)> ]
+  "16995" -> "16998" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/586-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/586-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/586-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/586-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "VLOG" {  
-"17003" [label = <(METHOD,VLOG)> ]
-"17006" [label = <(METHOD_RETURN,ANY)> ]
-  "17003" -> "17006" 
+digraph "PrettyMethod" {  
+"16999" [label = <(METHOD,PrettyMethod)> ]
+"17002" [label = <(METHOD_RETURN,ANY)> ]
+  "16999" -> "17002" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/587-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/587-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/587-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/587-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "PrettyMethod" {  
-"17007" [label = <(METHOD,PrettyMethod)> ]
-"17010" [label = <(METHOD_RETURN,ANY)> ]
-  "17007" -> "17010" 
+digraph "RegisterNative" {  
+"17003" [label = <(METHOD,RegisterNative)> ]
+"17007" [label = <(METHOD_RETURN,ANY)> ]
+  "17003" -> "17007" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/588-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/588-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/588-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/588-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "RegisterNative" {  
-"17011" [label = <(METHOD,RegisterNative)> ]
-"17015" [label = <(METHOD_RETURN,ANY)> ]
-  "17011" -> "17015" 
+digraph "UNUSED" {  
+"17008" [label = <(METHOD,UNUSED)> ]
+"17011" [label = <(METHOD_RETURN,ANY)> ]
+  "17008" -> "17011" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/589-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/589-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/589-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/589-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "UNUSED" {  
-"17016" [label = <(METHOD,UNUSED)> ]
-"17019" [label = <(METHOD_RETURN,ANY)> ]
-  "17016" -> "17019" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR)" {  
+"17012" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))> ]
+"17017" [label = <(METHOD_RETURN,ANY)> ]
+  "17012" -> "17017" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/59-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/59-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/59-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/59-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,28 +1,28 @@
 digraph "NewGlobalRef" {  
-"2056" [label = <(soa,soa(env))<SUB>917</SUB>> ]
-"2058" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>918</SUB>> ]
-"2075" [label = <(RETURN,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);)<SUB>919</SUB>> ]
-"2059" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>918</SUB>> ]
-"2066" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>918</SUB>> ]
-"2076" [label = <(AddGlobalRef,soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj))<SUB>919</SUB>> ]
-"2060" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>918</SUB>> ]
-"2067" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>918</SUB>> ]
-"2077" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddGlobalRef)<SUB>919</SUB>> ]
-"2083" [label = <(Self,soa.Self())<SUB>919</SUB>> ]
-"2062" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>918</SUB>> ]
-"2068" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>918</SUB>> ]
-"2071" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>918</SUB>> ]
-"2078" [label = <(Vm,soa.Vm())<SUB>919</SUB>> ]
-"2082" [label = <(FIELD_IDENTIFIER,AddGlobalRef,AddGlobalRef)<SUB>919</SUB>> ]
-"2084" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>919</SUB>> ]
-"2064" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>918</SUB>> ]
-"2070" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>918</SUB>> ]
-"2073" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>918</SUB>> ]
-"2079" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>919</SUB>> ]
-"2086" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>919</SUB>> ]
-"2081" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>919</SUB>> ]
-"2051" [label = <(METHOD,NewGlobalRef)<SUB>916</SUB>> ]
-"2088" [label = <(METHOD_RETURN,jobject)<SUB>916</SUB>> ]
+"2056" [label = <(soa,soa(env))<SUB>916</SUB>> ]
+"2058" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>917</SUB>> ]
+"2075" [label = <(RETURN,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj);)<SUB>918</SUB>> ]
+"2059" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>917</SUB>> ]
+"2066" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>917</SUB>> ]
+"2076" [label = <(AddGlobalRef,soa.Vm()-&gt;AddGlobalRef(soa.Self(), decoded_obj))<SUB>918</SUB>> ]
+"2060" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>917</SUB>> ]
+"2067" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>917</SUB>> ]
+"2077" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddGlobalRef)<SUB>918</SUB>> ]
+"2083" [label = <(Self,soa.Self())<SUB>918</SUB>> ]
+"2062" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>917</SUB>> ]
+"2068" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>917</SUB>> ]
+"2071" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>917</SUB>> ]
+"2078" [label = <(Vm,soa.Vm())<SUB>918</SUB>> ]
+"2082" [label = <(FIELD_IDENTIFIER,AddGlobalRef,AddGlobalRef)<SUB>918</SUB>> ]
+"2084" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>918</SUB>> ]
+"2064" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>917</SUB>> ]
+"2070" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>917</SUB>> ]
+"2073" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>917</SUB>> ]
+"2079" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>918</SUB>> ]
+"2086" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>918</SUB>> ]
+"2081" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>918</SUB>> ]
+"2051" [label = <(METHOD,NewGlobalRef)<SUB>915</SUB>> ]
+"2088" [label = <(METHOD_RETURN,jobject)<SUB>915</SUB>> ]
   "2056" -> "2064" 
   "2058" -> "2081" 
   "2075" -> "2088" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/590-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/590-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/590-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/590-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR)" {  
-"17020" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(java_class, JNI_ERR))> ]
-"17025" [label = <(METHOD_RETURN,ANY)> ]
-  "17020" -> "17025" 
+digraph "mirror::Class::PrettyClass" {  
+"17018" [label = <(METHOD,mirror::Class::PrettyClass)> ]
+"17022" [label = <(METHOD_RETURN,ANY)> ]
+  "17018" -> "17022" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/591-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/591-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/591-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/591-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "mirror::Class::PrettyClass" {  
-"17026" [label = <(METHOD,mirror::Class::PrettyClass)> ]
-"17030" [label = <(METHOD_RETURN,ANY)> ]
-  "17026" -> "17030" 
+digraph "GetMethods" {  
+"17023" [label = <(METHOD,GetMethods)> ]
+"17027" [label = <(METHOD_RETURN,ANY)> ]
+  "17023" -> "17027" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/592-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/592-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/592-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/592-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetMethods" {  
-"17031" [label = <(METHOD,GetMethods)> ]
-"17035" [label = <(METHOD_RETURN,ANY)> ]
-  "17031" -> "17035" 
+digraph "UnregisterNative" {  
+"17028" [label = <(METHOD,UnregisterNative)> ]
+"17031" [label = <(METHOD_RETURN,ANY)> ]
+  "17028" -> "17031" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/593-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/593-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/593-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/593-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "UnregisterNative" {  
-"17036" [label = <(METHOD,UnregisterNative)> ]
-"17039" [label = <(METHOD_RETURN,ANY)> ]
-  "17036" -> "17039" 
+digraph "&lt;operator&gt;.postIncrement" {  
+"17032" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
+"17035" [label = <(METHOD_RETURN,ANY)> ]
+  "17032" -> "17035" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/594-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/594-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/594-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/594-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.postIncrement" {  
-"17040" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
-"17043" [label = <(METHOD_RETURN,ANY)> ]
-  "17040" -> "17043" 
+digraph "CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR)" {  
+"17036" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))> ]
+"17041" [label = <(METHOD_RETURN,ANY)> ]
+  "17036" -> "17041" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/595-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/595-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/595-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/595-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR)" {  
-"17044" [label = <(METHOD,CHECK_NON_NULL_ARGUMENT_RETURN(vm, JNI_ERR))> ]
-"17049" [label = <(METHOD_RETURN,ANY)> ]
-  "17044" -> "17049" 
+digraph "GetJavaVM" {  
+"17042" [label = <(METHOD,GetJavaVM)> ]
+"17045" [label = <(METHOD_RETURN,ANY)> ]
+  "17042" -> "17045" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/596-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/596-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/596-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/596-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetJavaVM" {  
-"17050" [label = <(METHOD,GetJavaVM)> ]
+digraph "NewObject" {  
+"17046" [label = <(METHOD,NewObject)> ]
 "17053" [label = <(METHOD_RETURN,ANY)> ]
-  "17050" -> "17053" 
+  "17046" -> "17053" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/597-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/597-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/597-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/597-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "NewObject" {  
-"17054" [label = <(METHOD,NewObject)> ]
-"17061" [label = <(METHOD_RETURN,ANY)> ]
-  "17054" -> "17061" 
+digraph "GetLongField" {  
+"17054" [label = <(METHOD,GetLongField)> ]
+"17059" [label = <(METHOD_RETURN,ANY)> ]
+  "17054" -> "17059" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/598-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/598-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/598-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/598-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetLongField" {  
-"17062" [label = <(METHOD,GetLongField)> ]
-"17067" [label = <(METHOD_RETURN,ANY)> ]
-  "17062" -> "17067" 
+digraph "GetIntField" {  
+"17060" [label = <(METHOD,GetIntField)> ]
+"17065" [label = <(METHOD_RETURN,ANY)> ]
+  "17060" -> "17065" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/599-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/599-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/599-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/599-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetIntField" {  
-"17068" [label = <(METHOD,GetIntField)> ]
-"17073" [label = <(METHOD_RETURN,ANY)> ]
-  "17068" -> "17073" 
+digraph "ArtT::Alloc" {  
+"17066" [label = <(METHOD,ArtT::Alloc)> ]
+"17071" [label = <(METHOD_RETURN,ANY)> ]
+  "17066" -> "17071" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/6-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/6-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/6-cfg.dot	2023-06-07 19:34:48.257388404 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/6-cfg.dot	2023-06-07 19:34:54.857387788 +0330
@@ -1,5 +1,5 @@
 digraph "ScopedVAArgs" {  
-"35" [label = <(METHOD,ScopedVAArgs)<SUB>82</SUB>> ]
-"38" [label = <(METHOD_RETURN,ANY)<SUB>82</SUB>> ]
+"35" [label = <(METHOD,ScopedVAArgs)<SUB>81</SUB>> ]
+"38" [label = <(METHOD_RETURN,ANY)<SUB>81</SUB>> ]
   "35" -> "38" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/60-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/60-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/60-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/60-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,18 +1,18 @@
 digraph "DeleteGlobalRef" {  
-"2095" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>923</SUB>> ]
-"2103" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>924</SUB>> ]
-"2109" [label = <(DeleteGlobalRef,vm-&gt;DeleteGlobalRef(self, obj))<SUB>925</SUB>> ]
-"2097" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>923</SUB>> ]
-"2105" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>924</SUB>> ]
-"2110" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteGlobalRef)<SUB>925</SUB>> ]
-"2098" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>923</SUB>> ]
-"2106" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>924</SUB>> ]
-"2108" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>924</SUB>> ]
-"2112" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>925</SUB>> ]
-"2099" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>923</SUB>> ]
-"2101" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>923</SUB>> ]
-"2090" [label = <(METHOD,DeleteGlobalRef)<SUB>922</SUB>> ]
-"2115" [label = <(METHOD_RETURN,void)<SUB>922</SUB>> ]
+"2095" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>922</SUB>> ]
+"2103" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>923</SUB>> ]
+"2109" [label = <(DeleteGlobalRef,vm-&gt;DeleteGlobalRef(self, obj))<SUB>924</SUB>> ]
+"2097" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>922</SUB>> ]
+"2105" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>923</SUB>> ]
+"2110" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteGlobalRef)<SUB>924</SUB>> ]
+"2098" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>922</SUB>> ]
+"2106" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>923</SUB>> ]
+"2108" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>923</SUB>> ]
+"2112" [label = <(FIELD_IDENTIFIER,DeleteGlobalRef,DeleteGlobalRef)<SUB>924</SUB>> ]
+"2099" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>922</SUB>> ]
+"2101" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>922</SUB>> ]
+"2090" [label = <(METHOD,DeleteGlobalRef)<SUB>921</SUB>> ]
+"2115" [label = <(METHOD_RETURN,void)<SUB>921</SUB>> ]
   "2095" -> "2106" 
   "2103" -> "2112" 
   "2109" -> "2115" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/600-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/600-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/600-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/600-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "ArtT::Alloc" {  
-"17074" [label = <(METHOD,ArtT::Alloc)> ]
-"17079" [label = <(METHOD_RETURN,ANY)> ]
-  "17074" -> "17079" 
+digraph "GetClassRoot&lt;ArtArrayT&gt;" {  
+"17072" [label = <(METHOD,GetClassRoot&lt;ArtArrayT&gt;)> ]
+"17074" [label = <(METHOD_RETURN,ANY)> ]
+  "17072" -> "17074" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/601-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/601-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/601-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/601-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetClassRoot&lt;ArtArrayT&gt;" {  
-"17080" [label = <(METHOD,GetClassRoot&lt;ArtArrayT&gt;)> ]
-"17082" [label = <(METHOD_RETURN,ANY)> ]
-  "17080" -> "17082" 
+digraph "DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;" {  
+"17075" [label = <(METHOD,DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;)> ]
+"17081" [label = <(METHOD_RETURN,ANY)> ]
+  "17075" -> "17081" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/602-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/602-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/602-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/602-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;" {  
-"17083" [label = <(METHOD,DecodeAndCheckArrayType&lt;ArrayT,ElementT,ArtArrayT&gt;)> ]
-"17089" [label = <(METHOD_RETURN,ANY)> ]
-  "17083" -> "17089" 
+digraph "GetData" {  
+"17082" [label = <(METHOD,GetData)> ]
+"17085" [label = <(METHOD_RETURN,ANY)> ]
+  "17082" -> "17085" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/603-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/603-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/603-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/603-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "GetData" {  
-"17090" [label = <(METHOD,GetData)> ]
-"17093" [label = <(METHOD_RETURN,ANY)> ]
-  "17090" -> "17093" 
+digraph "DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;" {  
+"17086" [label = <(METHOD,DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;)> ]
+"17092" [label = <(METHOD_RETURN,ANY)> ]
+  "17086" -> "17092" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/604-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/604-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/604-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/604-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;" {  
-"17094" [label = <(METHOD,DecodeAndCheckArrayType&lt;JArrayT,ElementT,ArtArrayT&gt;)> ]
-"17100" [label = <(METHOD_RETURN,ANY)> ]
-  "17094" -> "17100" 
+digraph "&lt;operator&gt;.arrayInitializer" {  
+"17093" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
+"17328" [label = <(METHOD_RETURN,ANY)> ]
+  "17093" -> "17328" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/605-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/605-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/605-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/605-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.arrayInitializer" {  
-"17101" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
-"17336" [label = <(METHOD_RETURN,ANY)> ]
-  "17101" -> "17336" 
+digraph "BuildCache" {  
+"17329" [label = <(METHOD,BuildCache)> ]
+"17332" [label = <(METHOD_RETURN,ANY)> ]
+  "17329" -> "17332" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/606-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/606-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/606-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/606-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "BuildCache" {  
-"17337" [label = <(METHOD,BuildCache)> ]
-"17340" [label = <(METHOD_RETURN,ANY)> ]
-  "17337" -> "17340" 
+digraph "DropCache" {  
+"17333" [label = <(METHOD,DropCache)> ]
+"17336" [label = <(METHOD_RETURN,ANY)> ]
+  "17333" -> "17336" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/607-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/607-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/607-cfg.dot	2023-06-07 19:34:48.477388383 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/607-cfg.dot	2023-06-07 19:34:55.077387768 +0330
@@ -1,5 +1,5 @@
-digraph "DropCache" {  
-"17341" [label = <(METHOD,DropCache)> ]
-"17344" [label = <(METHOD_RETURN,ANY)> ]
-  "17341" -> "17344" 
+digraph "UNREACHABLE" {  
+"17337" [label = <(METHOD,UNREACHABLE)> ]
+"17339" [label = <(METHOD_RETURN,ANY)> ]
+  "17337" -> "17339" 
 }
Only in /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out: 608-cfg.dot
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/61-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/61-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/61-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/61-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,28 +1,28 @@
 digraph "NewWeakGlobalRef" {  
-"2122" [label = <(soa,soa(env))<SUB>929</SUB>> ]
-"2124" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>930</SUB>> ]
-"2141" [label = <(RETURN,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);)<SUB>931</SUB>> ]
-"2125" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>930</SUB>> ]
-"2132" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>930</SUB>> ]
-"2142" [label = <(AddWeakGlobalRef,soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj))<SUB>931</SUB>> ]
-"2126" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>930</SUB>> ]
-"2133" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>930</SUB>> ]
-"2143" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddWeakGlobalRef)<SUB>931</SUB>> ]
-"2149" [label = <(Self,soa.Self())<SUB>931</SUB>> ]
-"2128" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>930</SUB>> ]
-"2134" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>930</SUB>> ]
-"2137" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>930</SUB>> ]
-"2144" [label = <(Vm,soa.Vm())<SUB>931</SUB>> ]
-"2148" [label = <(FIELD_IDENTIFIER,AddWeakGlobalRef,AddWeakGlobalRef)<SUB>931</SUB>> ]
-"2150" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>931</SUB>> ]
-"2130" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>930</SUB>> ]
-"2136" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>930</SUB>> ]
-"2139" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>930</SUB>> ]
-"2145" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>931</SUB>> ]
-"2152" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>931</SUB>> ]
-"2147" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>931</SUB>> ]
-"2117" [label = <(METHOD,NewWeakGlobalRef)<SUB>928</SUB>> ]
-"2154" [label = <(METHOD_RETURN,jweak)<SUB>928</SUB>> ]
+"2122" [label = <(soa,soa(env))<SUB>928</SUB>> ]
+"2124" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>929</SUB>> ]
+"2141" [label = <(RETURN,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);,return soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj);)<SUB>930</SUB>> ]
+"2125" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>929</SUB>> ]
+"2132" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>929</SUB>> ]
+"2142" [label = <(AddWeakGlobalRef,soa.Vm()-&gt;AddWeakGlobalRef(soa.Self(), decoded_obj))<SUB>930</SUB>> ]
+"2126" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>929</SUB>> ]
+"2133" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>929</SUB>> ]
+"2143" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Vm()-&gt;AddWeakGlobalRef)<SUB>930</SUB>> ]
+"2149" [label = <(Self,soa.Self())<SUB>930</SUB>> ]
+"2128" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>929</SUB>> ]
+"2134" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>929</SUB>> ]
+"2137" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>929</SUB>> ]
+"2144" [label = <(Vm,soa.Vm())<SUB>930</SUB>> ]
+"2148" [label = <(FIELD_IDENTIFIER,AddWeakGlobalRef,AddWeakGlobalRef)<SUB>930</SUB>> ]
+"2150" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>930</SUB>> ]
+"2130" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>929</SUB>> ]
+"2136" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>929</SUB>> ]
+"2139" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>929</SUB>> ]
+"2145" [label = <(&lt;operator&gt;.fieldAccess,soa.Vm)<SUB>930</SUB>> ]
+"2152" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>930</SUB>> ]
+"2147" [label = <(FIELD_IDENTIFIER,Vm,Vm)<SUB>930</SUB>> ]
+"2117" [label = <(METHOD,NewWeakGlobalRef)<SUB>927</SUB>> ]
+"2154" [label = <(METHOD_RETURN,jweak)<SUB>927</SUB>> ]
   "2122" -> "2130" 
   "2124" -> "2147" 
   "2141" -> "2154" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/62-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/62-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/62-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/62-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,18 +1,18 @@
 digraph "DeleteWeakGlobalRef" {  
-"2161" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>935</SUB>> ]
-"2169" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>936</SUB>> ]
-"2175" [label = <(DeleteWeakGlobalRef,vm-&gt;DeleteWeakGlobalRef(self, obj))<SUB>937</SUB>> ]
-"2163" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>935</SUB>> ]
-"2171" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>936</SUB>> ]
-"2176" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteWeakGlobalRef)<SUB>937</SUB>> ]
-"2164" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>935</SUB>> ]
-"2172" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>936</SUB>> ]
-"2174" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>936</SUB>> ]
-"2178" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>937</SUB>> ]
-"2165" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>935</SUB>> ]
-"2167" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>935</SUB>> ]
-"2156" [label = <(METHOD,DeleteWeakGlobalRef)<SUB>934</SUB>> ]
-"2181" [label = <(METHOD_RETURN,void)<SUB>934</SUB>> ]
+"2161" [label = <(&lt;operator&gt;.assignment,* vm = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>934</SUB>> ]
+"2169" [label = <(&lt;operator&gt;.assignment,* self = down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>935</SUB>> ]
+"2175" [label = <(DeleteWeakGlobalRef,vm-&gt;DeleteWeakGlobalRef(self, obj))<SUB>936</SUB>> ]
+"2163" [label = <(GetVm,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm())<SUB>934</SUB>> ]
+"2171" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;self_)<SUB>935</SUB>> ]
+"2176" [label = <(&lt;operator&gt;.indirectFieldAccess,vm-&gt;DeleteWeakGlobalRef)<SUB>936</SUB>> ]
+"2164" [label = <(&lt;operator&gt;.indirectFieldAccess,down_cast&lt;JNIEnvExt*&gt;(env)-&gt;GetVm)<SUB>934</SUB>> ]
+"2172" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>935</SUB>> ]
+"2174" [label = <(FIELD_IDENTIFIER,self_,self_)<SUB>935</SUB>> ]
+"2178" [label = <(FIELD_IDENTIFIER,DeleteWeakGlobalRef,DeleteWeakGlobalRef)<SUB>936</SUB>> ]
+"2165" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>934</SUB>> ]
+"2167" [label = <(FIELD_IDENTIFIER,GetVm,GetVm)<SUB>934</SUB>> ]
+"2156" [label = <(METHOD,DeleteWeakGlobalRef)<SUB>933</SUB>> ]
+"2181" [label = <(METHOD_RETURN,void)<SUB>933</SUB>> ]
   "2161" -> "2172" 
   "2169" -> "2178" 
   "2175" -> "2181" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/63-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/63-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/63-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/63-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,25 +1,25 @@
 digraph "NewLocalRef" {  
-"2188" [label = <(soa,soa(env))<SUB>941</SUB>> ]
-"2190" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>942</SUB>> ]
-"2214" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);)<SUB>947</SUB>> ]
-"2191" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>942</SUB>> ]
-"2198" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>942</SUB>> ]
-"2208" [label = <(&lt;operator&gt;.equals,decoded_obj == nullptr)<SUB>944</SUB>> ]
-"2215" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(decoded_obj))<SUB>947</SUB>> ]
-"2192" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>942</SUB>> ]
-"2199" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>942</SUB>> ]
-"2212" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>945</SUB>> ]
-"2216" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>947</SUB>> ]
-"2194" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>942</SUB>> ]
-"2200" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>942</SUB>> ]
-"2203" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>942</SUB>> ]
-"2217" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>947</SUB>> ]
-"2196" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>942</SUB>> ]
-"2202" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>942</SUB>> ]
-"2205" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>942</SUB>> ]
-"2219" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>947</SUB>> ]
-"2183" [label = <(METHOD,NewLocalRef)<SUB>940</SUB>> ]
-"2222" [label = <(METHOD_RETURN,jobject)<SUB>940</SUB>> ]
+"2188" [label = <(soa,soa(env))<SUB>940</SUB>> ]
+"2190" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; decoded_obj = soa.Decode&lt;mirror::Object&gt;(obj))<SUB>941</SUB>> ]
+"2214" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);,return soa.AddLocalReference&lt;jobject&gt;(decoded_obj);)<SUB>946</SUB>> ]
+"2191" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; decoded_obj)<SUB>941</SUB>> ]
+"2198" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj))<SUB>941</SUB>> ]
+"2208" [label = <(&lt;operator&gt;.equals,decoded_obj == nullptr)<SUB>943</SUB>> ]
+"2215" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(decoded_obj))<SUB>946</SUB>> ]
+"2192" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>941</SUB>> ]
+"2199" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>941</SUB>> ]
+"2212" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>944</SUB>> ]
+"2216" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>946</SUB>> ]
+"2194" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>941</SUB>> ]
+"2200" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>941</SUB>> ]
+"2203" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>941</SUB>> ]
+"2217" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>946</SUB>> ]
+"2196" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>941</SUB>> ]
+"2202" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>941</SUB>> ]
+"2205" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>941</SUB>> ]
+"2219" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>946</SUB>> ]
+"2183" [label = <(METHOD,NewLocalRef)<SUB>939</SUB>> ]
+"2222" [label = <(METHOD_RETURN,jobject)<SUB>939</SUB>> ]
   "2188" -> "2196" 
   "2190" -> "2208" 
   "2214" -> "2222" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/64-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/64-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/64-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/64-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,24 +1,24 @@
 digraph "DeleteLocalRef" {  
-"2235" [label = <(soa,soa(env))<SUB>957</SUB>> ]
-"2238" [label = <(&lt;operator&gt;.assignment,* ext_env = down_cast&lt;JNIEnvExt*&gt;(env))<SUB>958</SUB>> ]
-"2229" [label = <(&lt;operator&gt;.equals,obj == nullptr)<SUB>951</SUB>> ]
-"2240" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>958</SUB>> ]
-"2243" [label = <(&lt;operator&gt;.logicalNot,!ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>959</SUB>> ]
-"2233" [label = <(RETURN,return;,return;)<SUB>952</SUB>> ]
-"2244" [label = <(Remove,ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>959</SUB>> ]
-"2255" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;\012 &lt;&lt; &quot;failed to find entry&quot;)<SUB>965</SUB>> ]
-"2245" [label = <(&lt;operator&gt;.fieldAccess,ext_env-&gt;locals_.Remove)<SUB>959</SUB>> ]
-"2250" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;local_ref_cookie_)<SUB>959</SUB>> ]
-"2256" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;)<SUB>965</SUB>> ]
-"2246" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;locals_)<SUB>959</SUB>> ]
-"2249" [label = <(FIELD_IDENTIFIER,Remove,Remove)<SUB>959</SUB>> ]
-"2252" [label = <(FIELD_IDENTIFIER,local_ref_cookie_,local_ref_cookie_)<SUB>959</SUB>> ]
-"2257" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj)<SUB>965</SUB>> ]
-"2248" [label = <(FIELD_IDENTIFIER,locals_,locals_)<SUB>959</SUB>> ]
-"2258" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot;)<SUB>965</SUB>> ]
-"2259" [label = <(LOG,LOG(WARNING))<SUB>965</SUB>> ]
-"2224" [label = <(METHOD,DeleteLocalRef)<SUB>950</SUB>> ]
-"2265" [label = <(METHOD_RETURN,void)<SUB>950</SUB>> ]
+"2235" [label = <(soa,soa(env))<SUB>956</SUB>> ]
+"2238" [label = <(&lt;operator&gt;.assignment,* ext_env = down_cast&lt;JNIEnvExt*&gt;(env))<SUB>957</SUB>> ]
+"2229" [label = <(&lt;operator&gt;.equals,obj == nullptr)<SUB>950</SUB>> ]
+"2240" [label = <(down_cast&lt;JNIEnvExt*&gt;,down_cast&lt;JNIEnvExt*&gt;(env))<SUB>957</SUB>> ]
+"2243" [label = <(&lt;operator&gt;.logicalNot,!ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>958</SUB>> ]
+"2233" [label = <(RETURN,return;,return;)<SUB>951</SUB>> ]
+"2244" [label = <(Remove,ext_env-&gt;locals_.Remove(ext_env-&gt;local_ref_cookie_, obj))<SUB>958</SUB>> ]
+"2255" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;\012 &lt;&lt; &quot;failed to find entry&quot;)<SUB>964</SUB>> ]
+"2245" [label = <(&lt;operator&gt;.fieldAccess,ext_env-&gt;locals_.Remove)<SUB>958</SUB>> ]
+"2250" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;local_ref_cookie_)<SUB>958</SUB>> ]
+"2256" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj &lt;&lt; &quot;) &quot;)<SUB>964</SUB>> ]
+"2246" [label = <(&lt;operator&gt;.indirectFieldAccess,ext_env-&gt;locals_)<SUB>958</SUB>> ]
+"2249" [label = <(FIELD_IDENTIFIER,Remove,Remove)<SUB>958</SUB>> ]
+"2252" [label = <(FIELD_IDENTIFIER,local_ref_cookie_,local_ref_cookie_)<SUB>958</SUB>> ]
+"2257" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot; &lt;&lt; obj)<SUB>964</SUB>> ]
+"2248" [label = <(FIELD_IDENTIFIER,locals_,locals_)<SUB>958</SUB>> ]
+"2258" [label = <(&lt;operator&gt;.shiftLeft,LOG(WARNING) &lt;&lt; &quot;JNI WARNING: DeleteLocalRef(&quot;)<SUB>964</SUB>> ]
+"2259" [label = <(LOG,LOG(WARNING))<SUB>964</SUB>> ]
+"2224" [label = <(METHOD,DeleteLocalRef)<SUB>949</SUB>> ]
+"2265" [label = <(METHOD_RETURN,void)<SUB>949</SUB>> ]
   "2235" -> "2240" 
   "2238" -> "2248" 
   "2229" -> "2233" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/65-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/65-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/65-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/65-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,24 +1,24 @@
 digraph "IsSameObject" {  
-"2273" [label = <(&lt;operator&gt;.equals,obj1 == obj2)<SUB>971</SUB>> ]
-"2277" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>972</SUB>> ]
-"2282" [label = <(soa,soa(env))<SUB>974</SUB>> ]
-"2284" [label = <(RETURN,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;)<SUB>975</SUB>> ]
-"2285" [label = <(&lt;operator&gt;.conditional,(soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE)<SUB>975</SUB>> ]
-"2286" [label = <(&lt;operator&gt;.equals,soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>975</SUB>> ]
-"2287" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj1))<SUB>975</SUB>> ]
-"2296" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>975</SUB>> ]
-"2288" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>975</SUB>> ]
-"2297" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>975</SUB>> ]
-"2289" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>975</SUB>> ]
-"2292" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>975</SUB>> ]
-"2298" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>975</SUB>> ]
-"2301" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>975</SUB>> ]
-"2291" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>975</SUB>> ]
-"2294" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>975</SUB>> ]
-"2300" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>975</SUB>> ]
-"2303" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>975</SUB>> ]
-"2267" [label = <(METHOD,IsSameObject)<SUB>970</SUB>> ]
-"2307" [label = <(METHOD_RETURN,jboolean)<SUB>970</SUB>> ]
+"2273" [label = <(&lt;operator&gt;.equals,obj1 == obj2)<SUB>970</SUB>> ]
+"2277" [label = <(RETURN,return JNI_TRUE;,return JNI_TRUE;)<SUB>971</SUB>> ]
+"2282" [label = <(soa,soa(env))<SUB>973</SUB>> ]
+"2284" [label = <(RETURN,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;,return (soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE;)<SUB>974</SUB>> ]
+"2285" [label = <(&lt;operator&gt;.conditional,(soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))\012 ? JNI_TRUE : JNI_FALSE)<SUB>974</SUB>> ]
+"2286" [label = <(&lt;operator&gt;.equals,soa.Decode&lt;mirror::Object&gt;(obj1) == soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>974</SUB>> ]
+"2287" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj1))<SUB>974</SUB>> ]
+"2296" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Object&gt;(obj2))<SUB>974</SUB>> ]
+"2288" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>974</SUB>> ]
+"2297" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Object)<SUB>974</SUB>> ]
+"2289" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>974</SUB>> ]
+"2292" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>974</SUB>> ]
+"2298" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>974</SUB>> ]
+"2301" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>974</SUB>> ]
+"2291" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>974</SUB>> ]
+"2294" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>974</SUB>> ]
+"2300" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>974</SUB>> ]
+"2303" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>974</SUB>> ]
+"2267" [label = <(METHOD,IsSameObject)<SUB>969</SUB>> ]
+"2307" [label = <(METHOD_RETURN,jboolean)<SUB>969</SUB>> ]
   "2273" -> "2277" 
   "2273" -> "2282" 
   "2277" -> "2307" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/66-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/66-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/66-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/66-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,71 +1,71 @@
 digraph "AllocObject" {  
-"2313" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>981</SUB>> ]
-"2332" [label = <(soa,soa(env))<SUB>982</SUB>> ]
-"2334" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>983</SUB>> ]
-"2404" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));)<SUB>992</SUB>> ]
-"2335" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>983</SUB>> ]
-"2342" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>983</SUB>> ]
-"2357" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>984</SUB>> ]
-"2364" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>987</SUB>> ]
-"2405" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self())))<SUB>992</SUB>> ]
-"2336" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>983</SUB>> ]
-"2343" [label = <(Self,soa.Self())<SUB>983</SUB>> ]
-"2347" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>983</SUB>> ]
-"2361" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>985</SUB>> ]
-"2365" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>987</SUB>> ]
-"2370" [label = <(&lt;operator&gt;.assignment,allocator_type = Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>988</SUB>> ]
-"2382" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));)<SUB>989</SUB>> ]
-"2406" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>992</SUB>> ]
-"2411" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>992</SUB>> ]
-"2317" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>981</SUB>> ]
-"2338" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>983</SUB>> ]
-"2344" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>983</SUB>> ]
-"2348" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>983</SUB>> ]
-"2367" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>987</SUB>> ]
-"2372" [label = <(GetCurrentAllocator,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>988</SUB>> ]
-"2383" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type)))<SUB>989</SUB>> ]
-"2407" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>992</SUB>> ]
-"2412" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>992</SUB>> ]
-"2415" [label = <(Self,soa.Self())<SUB>992</SUB>> ]
-"2318" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>981</SUB>> ]
-"2322" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>981</SUB>> ]
-"2329" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>981</SUB>> ]
-"2340" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>983</SUB>> ]
-"2346" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>983</SUB>> ]
-"2349" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>983</SUB>> ]
-"2352" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>983</SUB>> ]
-"2373" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator)<SUB>988</SUB>> ]
-"2384" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>989</SUB>> ]
-"2389" [label = <(&lt;operator&gt;.greaterThan,mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type))<SUB>989</SUB>> ]
-"2409" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>992</SUB>> ]
-"2414" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>992</SUB>> ]
-"2416" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>992</SUB>> ]
-"2323" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>981</SUB>> ]
-"2351" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>983</SUB>> ]
-"2354" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>983</SUB>> ]
-"2374" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>988</SUB>> ]
-"2381" [label = <(FIELD_IDENTIFIER,GetCurrentAllocator,GetCurrentAllocator)<SUB>988</SUB>> ]
-"2385" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>989</SUB>> ]
-"2390" [label = <(&lt;operator&gt;.lessThan,mirror::String::AllocEmptyString&lt;true)<SUB>989</SUB>> ]
-"2397" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(),\012                                                                              allocator_type))<SUB>989</SUB>> ]
-"2418" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>992</SUB>> ]
-"2324" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>981</SUB>> ]
-"2326" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>981</SUB>> ]
-"2375" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>988</SUB>> ]
-"2387" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>989</SUB>> ]
-"2391" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocEmptyString)<SUB>989</SUB>> ]
-"2398" [label = <(&lt;operator&gt;.expressionList,soa.Self(),\012                                                                              allocator_type)<SUB>989</SUB>> ]
-"2376" [label = <(Runtime::Current,Runtime::Current())<SUB>988</SUB>> ]
-"2380" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>988</SUB>> ]
-"2392" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>989</SUB>> ]
-"2395" [label = <(FIELD_IDENTIFIER,AllocEmptyString,AllocEmptyString)<SUB>989</SUB>> ]
-"2399" [label = <(Self,soa.Self())<SUB>989</SUB>> ]
-"2377" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>988</SUB>> ]
-"2400" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>989</SUB>> ]
-"2379" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>988</SUB>> ]
-"2402" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>989</SUB>> ]
-"2309" [label = <(METHOD,AllocObject)<SUB>980</SUB>> ]
-"2419" [label = <(METHOD_RETURN,jobject)<SUB>980</SUB>> ]
+"2313" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>980</SUB>> ]
+"2332" [label = <(soa,soa(env))<SUB>981</SUB>> ]
+"2334" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>982</SUB>> ]
+"2404" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));,return soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self()));)<SUB>991</SUB>> ]
+"2335" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>982</SUB>> ]
+"2342" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(), soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>982</SUB>> ]
+"2357" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>983</SUB>> ]
+"2364" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>986</SUB>> ]
+"2405" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(c-&gt;AllocObject(soa.Self())))<SUB>991</SUB>> ]
+"2336" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>982</SUB>> ]
+"2343" [label = <(Self,soa.Self())<SUB>982</SUB>> ]
+"2347" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>982</SUB>> ]
+"2361" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>984</SUB>> ]
+"2365" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>986</SUB>> ]
+"2370" [label = <(&lt;operator&gt;.assignment,allocator_type = Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>987</SUB>> ]
+"2382" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));,return soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type));)<SUB>988</SUB>> ]
+"2406" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>991</SUB>> ]
+"2411" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>991</SUB>> ]
+"2317" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>980</SUB>> ]
+"2338" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>982</SUB>> ]
+"2344" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>982</SUB>> ]
+"2348" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>982</SUB>> ]
+"2367" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>986</SUB>> ]
+"2372" [label = <(GetCurrentAllocator,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator())<SUB>987</SUB>> ]
+"2383" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type)))<SUB>988</SUB>> ]
+"2407" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>991</SUB>> ]
+"2412" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>991</SUB>> ]
+"2415" [label = <(Self,soa.Self())<SUB>991</SUB>> ]
+"2318" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>980</SUB>> ]
+"2322" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>980</SUB>> ]
+"2329" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>980</SUB>> ]
+"2340" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>982</SUB>> ]
+"2346" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>982</SUB>> ]
+"2349" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>982</SUB>> ]
+"2352" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>982</SUB>> ]
+"2373" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap()-&gt;GetCurrentAllocator)<SUB>987</SUB>> ]
+"2384" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>988</SUB>> ]
+"2389" [label = <(&lt;operator&gt;.greaterThan,mirror::String::AllocEmptyString&lt;true&gt;(soa.Self(),\012                                                                              allocator_type))<SUB>988</SUB>> ]
+"2409" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>991</SUB>> ]
+"2414" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>991</SUB>> ]
+"2416" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>991</SUB>> ]
+"2323" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>980</SUB>> ]
+"2351" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>982</SUB>> ]
+"2354" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>982</SUB>> ]
+"2374" [label = <(GetHeap,Runtime::Current()-&gt;GetHeap())<SUB>987</SUB>> ]
+"2381" [label = <(FIELD_IDENTIFIER,GetCurrentAllocator,GetCurrentAllocator)<SUB>987</SUB>> ]
+"2385" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>988</SUB>> ]
+"2390" [label = <(&lt;operator&gt;.lessThan,mirror::String::AllocEmptyString&lt;true)<SUB>988</SUB>> ]
+"2397" [label = <(&lt;operator&gt;.bracketedPrimary,(soa.Self(),\012                                                                              allocator_type))<SUB>988</SUB>> ]
+"2418" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>991</SUB>> ]
+"2324" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>980</SUB>> ]
+"2326" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>980</SUB>> ]
+"2375" [label = <(&lt;operator&gt;.indirectFieldAccess,Runtime::Current()-&gt;GetHeap)<SUB>987</SUB>> ]
+"2387" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>988</SUB>> ]
+"2391" [label = <(&lt;operator&gt;.fieldAccess,mirror::String::AllocEmptyString)<SUB>988</SUB>> ]
+"2398" [label = <(&lt;operator&gt;.expressionList,soa.Self(),\012                                                                              allocator_type)<SUB>988</SUB>> ]
+"2376" [label = <(Runtime::Current,Runtime::Current())<SUB>987</SUB>> ]
+"2380" [label = <(FIELD_IDENTIFIER,GetHeap,GetHeap)<SUB>987</SUB>> ]
+"2392" [label = <(&lt;operator&gt;.fieldAccess,mirror::String)<SUB>988</SUB>> ]
+"2395" [label = <(FIELD_IDENTIFIER,AllocEmptyString,AllocEmptyString)<SUB>988</SUB>> ]
+"2399" [label = <(Self,soa.Self())<SUB>988</SUB>> ]
+"2377" [label = <(&lt;operator&gt;.fieldAccess,Runtime::Current)<SUB>987</SUB>> ]
+"2400" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>988</SUB>> ]
+"2379" [label = <(FIELD_IDENTIFIER,Current,Current)<SUB>987</SUB>> ]
+"2402" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>988</SUB>> ]
+"2309" [label = <(METHOD,AllocObject)<SUB>979</SUB>> ]
+"2419" [label = <(METHOD_RETURN,jobject)<SUB>979</SUB>> ]
   "2313" -> "2318" 
   "2313" -> "2332" 
   "2332" -> "2340" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/67-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/67-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/67-cfg.dot	2023-06-07 19:34:48.297388399 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/67-cfg.dot	2023-06-07 19:34:54.897387787 +0330
@@ -1,28 +1,28 @@
 digraph "NewObject" {  
-"2427" [label = <(va_start,va_start(args, mid))<SUB>997</SUB>> ]
-"2431" [label = <(free_args_later,free_args_later(&amp;args))<SUB>998</SUB>> ]
-"2434" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>999</SUB>> ]
-"2452" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1000</SUB>> ]
-"2471" [label = <(&lt;operator&gt;.assignment,result = NewObjectV(env, java_class, mid, args))<SUB>1001</SUB>> ]
-"2478" [label = <(RETURN,return result;,return result;)<SUB>1002</SUB>> ]
-"2432" [label = <(&lt;operator&gt;.addressOf,&amp;args)<SUB>998</SUB>> ]
-"2473" [label = <(NewObjectV,NewObjectV(env, java_class, mid, args))<SUB>1001</SUB>> ]
-"2438" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>999</SUB>> ]
-"2456" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1000</SUB>> ]
-"2439" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>999</SUB>> ]
-"2443" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>999</SUB>> ]
-"2450" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>999</SUB>> ]
-"2457" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1000</SUB>> ]
-"2461" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1000</SUB>> ]
-"2468" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1000</SUB>> ]
-"2444" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>999</SUB>> ]
-"2462" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1000</SUB>> ]
-"2445" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>999</SUB>> ]
-"2447" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>999</SUB>> ]
-"2463" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1000</SUB>> ]
-"2465" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1000</SUB>> ]
-"2421" [label = <(METHOD,NewObject)<SUB>995</SUB>> ]
-"2480" [label = <(METHOD_RETURN,jobject)<SUB>995</SUB>> ]
+"2427" [label = <(va_start,va_start(args, mid))<SUB>996</SUB>> ]
+"2431" [label = <(free_args_later,free_args_later(&amp;args))<SUB>997</SUB>> ]
+"2434" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>998</SUB>> ]
+"2452" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>999</SUB>> ]
+"2471" [label = <(&lt;operator&gt;.assignment,result = NewObjectV(env, java_class, mid, args))<SUB>1000</SUB>> ]
+"2478" [label = <(RETURN,return result;,return result;)<SUB>1001</SUB>> ]
+"2432" [label = <(&lt;operator&gt;.addressOf,&amp;args)<SUB>997</SUB>> ]
+"2473" [label = <(NewObjectV,NewObjectV(env, java_class, mid, args))<SUB>1000</SUB>> ]
+"2438" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>998</SUB>> ]
+"2456" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>999</SUB>> ]
+"2439" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>998</SUB>> ]
+"2443" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>998</SUB>> ]
+"2450" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>998</SUB>> ]
+"2457" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>999</SUB>> ]
+"2461" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>999</SUB>> ]
+"2468" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>999</SUB>> ]
+"2444" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>998</SUB>> ]
+"2462" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>999</SUB>> ]
+"2445" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>998</SUB>> ]
+"2447" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>998</SUB>> ]
+"2463" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>999</SUB>> ]
+"2465" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>999</SUB>> ]
+"2421" [label = <(METHOD,NewObject)<SUB>994</SUB>> ]
+"2480" [label = <(METHOD_RETURN,jobject)<SUB>994</SUB>> ]
   "2427" -> "2432" 
   "2431" -> "2434" 
   "2434" -> "2439" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/68-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/68-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/68-cfg.dot	2023-06-07 19:34:48.307388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/68-cfg.dot	2023-06-07 19:34:54.907387785 +0330
@@ -1,84 +1,84 @@
 digraph "NewObjectV" {  
-"2488" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1006</SUB>> ]
-"2506" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1007</SUB>> ]
-"2525" [label = <(soa,soa(env))<SUB>1008</SUB>> ]
-"2527" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>1009</SUB>> ]
-"2586" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>1020</SUB>> ]
-"2610" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result))<SUB>1024</SUB>> ]
-"2619" [label = <(CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV(env, local_result, java_class, mid, args))<SUB>1025</SUB>> ]
-"2636" [label = <(RETURN,return local_result;,return local_result;)<SUB>1029</SUB>> ]
-"2528" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>1009</SUB>> ]
-"2535" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>1009</SUB>> ]
-"2550" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>1011</SUB>> ]
-"2557" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>1014</SUB>> ]
-"2587" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>1020</SUB>> ]
-"2594" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>1020</SUB>> ]
-"2603" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>1021</SUB>> ]
-"2612" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result))<SUB>1024</SUB>> ]
-"2626" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>1026</SUB>> ]
-"2529" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>1009</SUB>> ]
-"2536" [label = <(Self,soa.Self())<SUB>1009</SUB>> ]
-"2540" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>1010</SUB>> ]
-"2554" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1012</SUB>> ]
-"2558" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>1014</SUB>> ]
-"2563" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>1016</SUB>> ]
-"2578" [label = <(RETURN,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>1018</SUB>> ]
-"2588" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1020</SUB>> ]
-"2595" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>1020</SUB>> ]
-"2598" [label = <(Self,soa.Self())<SUB>1020</SUB>> ]
-"2607" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1022</SUB>> ]
-"2613" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1024</SUB>> ]
-"2627" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>1026</SUB>> ]
-"2634" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1027</SUB>> ]
-"2492" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1006</SUB>> ]
-"2510" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1007</SUB>> ]
-"2531" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>1009</SUB>> ]
-"2537" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1009</SUB>> ]
-"2541" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>1010</SUB>> ]
-"2560" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>1014</SUB>> ]
-"2565" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>1016</SUB>> ]
-"2579" [label = <(CallStaticObjectMethodV,CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>1018</SUB>> ]
-"2590" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1020</SUB>> ]
-"2597" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>1020</SUB>> ]
-"2599" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1020</SUB>> ]
-"2614" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1024</SUB>> ]
-"2628" [label = <(Self,soa.Self())<SUB>1026</SUB>> ]
-"2632" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>1026</SUB>> ]
-"2493" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1006</SUB>> ]
-"2497" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1006</SUB>> ]
-"2504" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1006</SUB>> ]
-"2511" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1007</SUB>> ]
-"2515" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1007</SUB>> ]
-"2522" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1007</SUB>> ]
-"2533" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>1009</SUB>> ]
-"2539" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1009</SUB>> ]
-"2542" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1010</SUB>> ]
-"2545" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>1010</SUB>> ]
-"2566" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>1016</SUB>> ]
-"2569" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>1017</SUB>> ]
-"2581" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>1018</SUB>> ]
-"2592" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1020</SUB>> ]
-"2601" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1020</SUB>> ]
-"2616" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1024</SUB>> ]
-"2629" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1026</SUB>> ]
-"2498" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1006</SUB>> ]
-"2516" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1007</SUB>> ]
-"2544" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1010</SUB>> ]
-"2547" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>1010</SUB>> ]
-"2568" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>1016</SUB>> ]
-"2570" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>1017</SUB>> ]
-"2573" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>1017</SUB>> ]
-"2583" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>1018</SUB>> ]
-"2631" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1026</SUB>> ]
-"2499" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1006</SUB>> ]
-"2501" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1006</SUB>> ]
-"2517" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1007</SUB>> ]
-"2519" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1007</SUB>> ]
-"2572" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>1017</SUB>> ]
-"2574" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>1017</SUB>> ]
-"2576" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>1017</SUB>> ]
-"2482" [label = <(METHOD,NewObjectV)<SUB>1005</SUB>> ]
-"2638" [label = <(METHOD_RETURN,jobject)<SUB>1005</SUB>> ]
+"2488" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1005</SUB>> ]
+"2506" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1006</SUB>> ]
+"2525" [label = <(soa,soa(env))<SUB>1007</SUB>> ]
+"2527" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>1008</SUB>> ]
+"2586" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>1019</SUB>> ]
+"2610" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobject&gt;(result))<SUB>1023</SUB>> ]
+"2619" [label = <(CallNonvirtualVoidMethodV,CallNonvirtualVoidMethodV(env, local_result, java_class, mid, args))<SUB>1024</SUB>> ]
+"2636" [label = <(RETURN,return local_result;,return local_result;)<SUB>1028</SUB>> ]
+"2528" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>1008</SUB>> ]
+"2535" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>1008</SUB>> ]
+"2550" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>1010</SUB>> ]
+"2557" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>1013</SUB>> ]
+"2587" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>1019</SUB>> ]
+"2594" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>1019</SUB>> ]
+"2603" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>1020</SUB>> ]
+"2612" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result))<SUB>1023</SUB>> ]
+"2626" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>1025</SUB>> ]
+"2529" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>1008</SUB>> ]
+"2536" [label = <(Self,soa.Self())<SUB>1008</SUB>> ]
+"2540" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>1009</SUB>> ]
+"2554" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1011</SUB>> ]
+"2558" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>1013</SUB>> ]
+"2563" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>1015</SUB>> ]
+"2578" [label = <(RETURN,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>1017</SUB>> ]
+"2588" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1019</SUB>> ]
+"2595" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>1019</SUB>> ]
+"2598" [label = <(Self,soa.Self())<SUB>1019</SUB>> ]
+"2607" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1021</SUB>> ]
+"2613" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1023</SUB>> ]
+"2627" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>1025</SUB>> ]
+"2634" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1026</SUB>> ]
+"2492" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1005</SUB>> ]
+"2510" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1006</SUB>> ]
+"2531" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>1008</SUB>> ]
+"2537" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1008</SUB>> ]
+"2541" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>1009</SUB>> ]
+"2560" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>1013</SUB>> ]
+"2565" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>1015</SUB>> ]
+"2579" [label = <(CallStaticObjectMethodV,CallStaticObjectMethodV(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>1017</SUB>> ]
+"2590" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1019</SUB>> ]
+"2597" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>1019</SUB>> ]
+"2599" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1019</SUB>> ]
+"2614" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1023</SUB>> ]
+"2628" [label = <(Self,soa.Self())<SUB>1025</SUB>> ]
+"2632" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>1025</SUB>> ]
+"2493" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1005</SUB>> ]
+"2497" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1005</SUB>> ]
+"2504" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1005</SUB>> ]
+"2511" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1006</SUB>> ]
+"2515" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1006</SUB>> ]
+"2522" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1006</SUB>> ]
+"2533" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>1008</SUB>> ]
+"2539" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1008</SUB>> ]
+"2542" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1009</SUB>> ]
+"2545" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>1009</SUB>> ]
+"2566" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>1015</SUB>> ]
+"2569" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>1016</SUB>> ]
+"2581" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>1017</SUB>> ]
+"2592" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1019</SUB>> ]
+"2601" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1019</SUB>> ]
+"2616" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1023</SUB>> ]
+"2629" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1025</SUB>> ]
+"2498" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1005</SUB>> ]
+"2516" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1006</SUB>> ]
+"2544" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1009</SUB>> ]
+"2547" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>1009</SUB>> ]
+"2568" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>1015</SUB>> ]
+"2570" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>1016</SUB>> ]
+"2573" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>1016</SUB>> ]
+"2583" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>1017</SUB>> ]
+"2631" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1025</SUB>> ]
+"2499" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1005</SUB>> ]
+"2501" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1005</SUB>> ]
+"2517" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1006</SUB>> ]
+"2519" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1006</SUB>> ]
+"2572" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>1016</SUB>> ]
+"2574" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>1016</SUB>> ]
+"2576" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>1016</SUB>> ]
+"2482" [label = <(METHOD,NewObjectV)<SUB>1004</SUB>> ]
+"2638" [label = <(METHOD_RETURN,jobject)<SUB>1004</SUB>> ]
   "2488" -> "2493" 
   "2488" -> "2506" 
   "2506" -> "2511" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/69-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/69-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/69-cfg.dot	2023-06-07 19:34:48.307388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/69-cfg.dot	2023-06-07 19:34:54.907387785 +0330
@@ -1,84 +1,84 @@
 digraph "NewObjectA" {  
-"2646" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1033</SUB>> ]
-"2664" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1034</SUB>> ]
-"2683" [label = <(soa,soa(env))<SUB>1035</SUB>> ]
-"2685" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>1036</SUB>> ]
-"2744" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>1047</SUB>> ]
-"2768" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>1051</SUB>> ]
-"2777" [label = <(CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA(env, local_result, java_class, mid, args))<SUB>1052</SUB>> ]
-"2794" [label = <(RETURN,return local_result;,return local_result;)<SUB>1056</SUB>> ]
-"2686" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>1036</SUB>> ]
-"2693" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>1036</SUB>> ]
-"2708" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>1038</SUB>> ]
-"2715" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>1041</SUB>> ]
-"2745" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>1047</SUB>> ]
-"2752" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>1047</SUB>> ]
-"2761" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>1048</SUB>> ]
-"2770" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>1051</SUB>> ]
-"2784" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>1053</SUB>> ]
-"2687" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>1036</SUB>> ]
-"2694" [label = <(Self,soa.Self())<SUB>1036</SUB>> ]
-"2698" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>1037</SUB>> ]
-"2712" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1039</SUB>> ]
-"2716" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>1041</SUB>> ]
-"2721" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>1043</SUB>> ]
-"2736" [label = <(RETURN,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>1045</SUB>> ]
-"2746" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1047</SUB>> ]
-"2753" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>1047</SUB>> ]
-"2756" [label = <(Self,soa.Self())<SUB>1047</SUB>> ]
-"2765" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1049</SUB>> ]
-"2771" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>1051</SUB>> ]
-"2785" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>1053</SUB>> ]
-"2792" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1054</SUB>> ]
-"2650" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1033</SUB>> ]
-"2668" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1034</SUB>> ]
-"2689" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>1036</SUB>> ]
-"2695" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1036</SUB>> ]
-"2699" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>1037</SUB>> ]
-"2718" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>1041</SUB>> ]
-"2723" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>1043</SUB>> ]
-"2737" [label = <(CallStaticObjectMethodA,CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>1045</SUB>> ]
-"2748" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1047</SUB>> ]
-"2755" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>1047</SUB>> ]
-"2757" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1047</SUB>> ]
-"2772" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1051</SUB>> ]
-"2786" [label = <(Self,soa.Self())<SUB>1053</SUB>> ]
-"2790" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>1053</SUB>> ]
-"2651" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1033</SUB>> ]
-"2655" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1033</SUB>> ]
-"2662" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1033</SUB>> ]
-"2669" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1034</SUB>> ]
-"2673" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1034</SUB>> ]
-"2680" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1034</SUB>> ]
-"2691" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>1036</SUB>> ]
-"2697" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1036</SUB>> ]
-"2700" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1037</SUB>> ]
-"2703" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>1037</SUB>> ]
-"2724" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>1043</SUB>> ]
-"2727" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>1044</SUB>> ]
-"2739" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>1045</SUB>> ]
-"2750" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1047</SUB>> ]
-"2759" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1047</SUB>> ]
-"2774" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1051</SUB>> ]
-"2787" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1053</SUB>> ]
-"2656" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1033</SUB>> ]
-"2674" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1034</SUB>> ]
-"2702" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1037</SUB>> ]
-"2705" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>1037</SUB>> ]
-"2726" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>1043</SUB>> ]
-"2728" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>1044</SUB>> ]
-"2731" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>1044</SUB>> ]
-"2741" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>1045</SUB>> ]
-"2789" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1053</SUB>> ]
-"2657" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1033</SUB>> ]
-"2659" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1033</SUB>> ]
-"2675" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1034</SUB>> ]
-"2677" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1034</SUB>> ]
-"2730" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>1044</SUB>> ]
-"2732" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>1044</SUB>> ]
-"2734" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>1044</SUB>> ]
-"2640" [label = <(METHOD,NewObjectA)<SUB>1032</SUB>> ]
-"2796" [label = <(METHOD_RETURN,jobject)<SUB>1032</SUB>> ]
+"2646" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1032</SUB>> ]
+"2664" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1033</SUB>> ]
+"2683" [label = <(soa,soa(env))<SUB>1034</SUB>> ]
+"2685" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Class&gt; c = EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>1035</SUB>> ]
+"2744" [label = <(&lt;operator&gt;.assignment,ObjPtr&lt;mirror::Object&gt; result = c-&gt;AllocObject(soa.Self()))<SUB>1046</SUB>> ]
+"2768" [label = <(&lt;operator&gt;.assignment,local_result = soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>1050</SUB>> ]
+"2777" [label = <(CallNonvirtualVoidMethodA,CallNonvirtualVoidMethodA(env, local_result, java_class, mid, args))<SUB>1051</SUB>> ]
+"2794" [label = <(RETURN,return local_result;,return local_result;)<SUB>1055</SUB>> ]
+"2686" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Class&gt; c)<SUB>1035</SUB>> ]
+"2693" [label = <(EnsureInitialized,EnsureInitialized(soa.Self(),\012                                                soa.Decode&lt;mirror::Class&gt;(java_class)))<SUB>1035</SUB>> ]
+"2708" [label = <(&lt;operator&gt;.equals,c == nullptr)<SUB>1037</SUB>> ]
+"2715" [label = <(IsStringClass,c-&gt;IsStringClass())<SUB>1040</SUB>> ]
+"2745" [label = <(&lt;operator&gt;.greaterThan,ObjPtr&lt;mirror::Object&gt; result)<SUB>1046</SUB>> ]
+"2752" [label = <(AllocObject,c-&gt;AllocObject(soa.Self()))<SUB>1046</SUB>> ]
+"2761" [label = <(&lt;operator&gt;.equals,result == nullptr)<SUB>1047</SUB>> ]
+"2770" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobjectArray&gt;(result))<SUB>1050</SUB>> ]
+"2784" [label = <(IsExceptionPending,soa.Self()-&gt;IsExceptionPending())<SUB>1052</SUB>> ]
+"2687" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Class)<SUB>1035</SUB>> ]
+"2694" [label = <(Self,soa.Self())<SUB>1035</SUB>> ]
+"2698" [label = <(&lt;operator&gt;.greaterThan,soa.Decode&lt;mirror::Class&gt;(java_class))<SUB>1036</SUB>> ]
+"2712" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1038</SUB>> ]
+"2716" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;IsStringClass)<SUB>1040</SUB>> ]
+"2721" [label = <(&lt;operator&gt;.assignment,sf_mid = jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>1042</SUB>> ]
+"2736" [label = <(RETURN,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);,return CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args);)<SUB>1044</SUB>> ]
+"2746" [label = <(&lt;operator&gt;.lessThan,ObjPtr&lt;mirror::Object)<SUB>1046</SUB>> ]
+"2753" [label = <(&lt;operator&gt;.indirectFieldAccess,c-&gt;AllocObject)<SUB>1046</SUB>> ]
+"2756" [label = <(Self,soa.Self())<SUB>1046</SUB>> ]
+"2765" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1048</SUB>> ]
+"2771" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobjectArray)<SUB>1050</SUB>> ]
+"2785" [label = <(&lt;operator&gt;.indirectFieldAccess,soa.Self()-&gt;IsExceptionPending)<SUB>1052</SUB>> ]
+"2792" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>1053</SUB>> ]
+"2650" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1032</SUB>> ]
+"2668" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1033</SUB>> ]
+"2689" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>1035</SUB>> ]
+"2695" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1035</SUB>> ]
+"2699" [label = <(&lt;operator&gt;.lessThan,soa.Decode&lt;mirror::Class)<SUB>1036</SUB>> ]
+"2718" [label = <(FIELD_IDENTIFIER,IsStringClass,IsStringClass)<SUB>1040</SUB>> ]
+"2723" [label = <(jni::EncodeArtMethod,jni::EncodeArtMethod(\012 WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid))))<SUB>1042</SUB>> ]
+"2737" [label = <(CallStaticObjectMethodA,CallStaticObjectMethodA(env, WellKnownClasses::java_lang_StringFactory, sf_mid, args))<SUB>1044</SUB>> ]
+"2748" [label = <(&lt;operator&gt;.fieldAccess,mirror::Object)<SUB>1046</SUB>> ]
+"2755" [label = <(FIELD_IDENTIFIER,AllocObject,AllocObject)<SUB>1046</SUB>> ]
+"2757" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1046</SUB>> ]
+"2772" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1050</SUB>> ]
+"2786" [label = <(Self,soa.Self())<SUB>1052</SUB>> ]
+"2790" [label = <(FIELD_IDENTIFIER,IsExceptionPending,IsExceptionPending)<SUB>1052</SUB>> ]
+"2651" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1032</SUB>> ]
+"2655" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1032</SUB>> ]
+"2662" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1032</SUB>> ]
+"2669" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1033</SUB>> ]
+"2673" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1033</SUB>> ]
+"2680" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1033</SUB>> ]
+"2691" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>1035</SUB>> ]
+"2697" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1035</SUB>> ]
+"2700" [label = <(&lt;operator&gt;.fieldAccess,soa.Decode)<SUB>1036</SUB>> ]
+"2703" [label = <(&lt;operator&gt;.fieldAccess,mirror::Class)<SUB>1036</SUB>> ]
+"2724" [label = <(&lt;operator&gt;.fieldAccess,jni::EncodeArtMethod)<SUB>1042</SUB>> ]
+"2727" [label = <(WellKnownClasses::StringInitToStringFactory,WellKnownClasses::StringInitToStringFactory(jni::DecodeArtMethod(mid)))<SUB>1043</SUB>> ]
+"2739" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::java_lang_StringFactory)<SUB>1044</SUB>> ]
+"2750" [label = <(FIELD_IDENTIFIER,Object,Object)<SUB>1046</SUB>> ]
+"2759" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1046</SUB>> ]
+"2774" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1050</SUB>> ]
+"2787" [label = <(&lt;operator&gt;.fieldAccess,soa.Self)<SUB>1052</SUB>> ]
+"2656" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1032</SUB>> ]
+"2674" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1033</SUB>> ]
+"2702" [label = <(FIELD_IDENTIFIER,Decode,Decode)<SUB>1036</SUB>> ]
+"2705" [label = <(FIELD_IDENTIFIER,Class,Class)<SUB>1036</SUB>> ]
+"2726" [label = <(FIELD_IDENTIFIER,EncodeArtMethod,EncodeArtMethod)<SUB>1042</SUB>> ]
+"2728" [label = <(&lt;operator&gt;.fieldAccess,WellKnownClasses::StringInitToStringFactory)<SUB>1043</SUB>> ]
+"2731" [label = <(jni::DecodeArtMethod,jni::DecodeArtMethod(mid))<SUB>1043</SUB>> ]
+"2741" [label = <(FIELD_IDENTIFIER,java_lang_StringFactory,java_lang_StringFactory)<SUB>1044</SUB>> ]
+"2789" [label = <(FIELD_IDENTIFIER,Self,Self)<SUB>1052</SUB>> ]
+"2657" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1032</SUB>> ]
+"2659" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1032</SUB>> ]
+"2675" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1033</SUB>> ]
+"2677" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1033</SUB>> ]
+"2730" [label = <(FIELD_IDENTIFIER,StringInitToStringFactory,StringInitToStringFactory)<SUB>1043</SUB>> ]
+"2732" [label = <(&lt;operator&gt;.fieldAccess,jni::DecodeArtMethod)<SUB>1043</SUB>> ]
+"2734" [label = <(FIELD_IDENTIFIER,DecodeArtMethod,DecodeArtMethod)<SUB>1043</SUB>> ]
+"2640" [label = <(METHOD,NewObjectA)<SUB>1031</SUB>> ]
+"2796" [label = <(METHOD_RETURN,jobject)<SUB>1031</SUB>> ]
   "2646" -> "2651" 
   "2646" -> "2664" 
   "2664" -> "2669" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/7-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/7-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/7-cfg.dot	2023-06-07 19:34:48.257388404 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/7-cfg.dot	2023-06-07 19:34:54.857387788 +0330
@@ -1,8 +1,8 @@
 digraph "~ScopedVAArgs" {  
-"42" [label = <(va_end,va_end(*args))<SUB>83</SUB>> ]
-"43" [label = <(&lt;operator&gt;.indirection,*args)<SUB>83</SUB>> ]
-"40" [label = <(METHOD,~ScopedVAArgs)<SUB>83</SUB>> ]
-"45" [label = <(METHOD_RETURN,ANY)<SUB>83</SUB>> ]
+"42" [label = <(va_end,va_end(*args))<SUB>82</SUB>> ]
+"43" [label = <(&lt;operator&gt;.indirection,*args)<SUB>82</SUB>> ]
+"40" [label = <(METHOD,~ScopedVAArgs)<SUB>82</SUB>> ]
+"45" [label = <(METHOD_RETURN,ANY)<SUB>82</SUB>> ]
   "42" -> "45" 
   "43" -> "42" 
   "40" -> "43" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/70-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/70-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/70-cfg.dot	2023-06-07 19:34:48.307388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/70-cfg.dot	2023-06-07 19:34:54.907387785 +0330
@@ -1,33 +1,33 @@
 digraph "GetMethodID" {  
-"2804" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1060</SUB>> ]
-"2822" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1061</SUB>> ]
-"2840" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1062</SUB>> ]
-"2859" [label = <(soa,soa(env))<SUB>1063</SUB>> ]
-"2861" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, false);,return FindMethodID(soa, java_class, name, sig, false);)<SUB>1064</SUB>> ]
-"2862" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, false))<SUB>1064</SUB>> ]
-"2808" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1060</SUB>> ]
-"2826" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1061</SUB>> ]
-"2844" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1062</SUB>> ]
-"2809" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1060</SUB>> ]
-"2813" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1060</SUB>> ]
-"2820" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1060</SUB>> ]
-"2827" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1061</SUB>> ]
-"2831" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1061</SUB>> ]
-"2838" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1061</SUB>> ]
-"2845" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1062</SUB>> ]
-"2849" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1062</SUB>> ]
-"2856" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1062</SUB>> ]
-"2814" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1060</SUB>> ]
-"2832" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1061</SUB>> ]
-"2850" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1062</SUB>> ]
-"2815" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1060</SUB>> ]
-"2817" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1060</SUB>> ]
-"2833" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1061</SUB>> ]
-"2835" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1061</SUB>> ]
-"2851" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1062</SUB>> ]
-"2853" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1062</SUB>> ]
-"2798" [label = <(METHOD,GetMethodID)<SUB>1059</SUB>> ]
-"2868" [label = <(METHOD_RETURN,jmethodID)<SUB>1059</SUB>> ]
+"2804" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1059</SUB>> ]
+"2822" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1060</SUB>> ]
+"2840" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1061</SUB>> ]
+"2859" [label = <(soa,soa(env))<SUB>1062</SUB>> ]
+"2861" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, false);,return FindMethodID(soa, java_class, name, sig, false);)<SUB>1063</SUB>> ]
+"2862" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, false))<SUB>1063</SUB>> ]
+"2808" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1059</SUB>> ]
+"2826" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1060</SUB>> ]
+"2844" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1061</SUB>> ]
+"2809" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1059</SUB>> ]
+"2813" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1059</SUB>> ]
+"2820" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1059</SUB>> ]
+"2827" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1060</SUB>> ]
+"2831" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1060</SUB>> ]
+"2838" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1060</SUB>> ]
+"2845" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1061</SUB>> ]
+"2849" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1061</SUB>> ]
+"2856" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1061</SUB>> ]
+"2814" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1059</SUB>> ]
+"2832" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1060</SUB>> ]
+"2850" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1061</SUB>> ]
+"2815" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1059</SUB>> ]
+"2817" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1059</SUB>> ]
+"2833" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1060</SUB>> ]
+"2835" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1060</SUB>> ]
+"2851" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1061</SUB>> ]
+"2853" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1061</SUB>> ]
+"2798" [label = <(METHOD,GetMethodID)<SUB>1058</SUB>> ]
+"2868" [label = <(METHOD_RETURN,jmethodID)<SUB>1058</SUB>> ]
   "2804" -> "2809" 
   "2804" -> "2822" 
   "2822" -> "2827" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/71-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/71-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/71-cfg.dot	2023-06-07 19:34:48.307388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/71-cfg.dot	2023-06-07 19:34:54.907387785 +0330
@@ -1,33 +1,33 @@
 digraph "GetStaticMethodID" {  
-"2876" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1069</SUB>> ]
-"2894" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1070</SUB>> ]
-"2912" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1071</SUB>> ]
-"2931" [label = <(soa,soa(env))<SUB>1072</SUB>> ]
-"2933" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, true);,return FindMethodID(soa, java_class, name, sig, true);)<SUB>1073</SUB>> ]
-"2934" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, true))<SUB>1073</SUB>> ]
-"2880" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1069</SUB>> ]
-"2898" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1070</SUB>> ]
-"2916" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1071</SUB>> ]
-"2881" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1069</SUB>> ]
-"2885" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1069</SUB>> ]
-"2892" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1069</SUB>> ]
-"2899" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1070</SUB>> ]
-"2903" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1070</SUB>> ]
-"2910" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1070</SUB>> ]
-"2917" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1071</SUB>> ]
-"2921" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1071</SUB>> ]
-"2928" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1071</SUB>> ]
-"2886" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1069</SUB>> ]
-"2904" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1070</SUB>> ]
-"2922" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1071</SUB>> ]
-"2887" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1069</SUB>> ]
-"2889" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1069</SUB>> ]
-"2905" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1070</SUB>> ]
-"2907" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1070</SUB>> ]
-"2923" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1071</SUB>> ]
-"2925" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1071</SUB>> ]
-"2870" [label = <(METHOD,GetStaticMethodID)<SUB>1067</SUB>> ]
-"2940" [label = <(METHOD_RETURN,jmethodID)<SUB>1067</SUB>> ]
+"2876" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1068</SUB>> ]
+"2894" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(name))<SUB>1069</SUB>> ]
+"2912" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(sig))<SUB>1070</SUB>> ]
+"2931" [label = <(soa,soa(env))<SUB>1071</SUB>> ]
+"2933" [label = <(RETURN,return FindMethodID(soa, java_class, name, sig, true);,return FindMethodID(soa, java_class, name, sig, true);)<SUB>1072</SUB>> ]
+"2934" [label = <(FindMethodID,FindMethodID(soa, java_class, name, sig, true))<SUB>1072</SUB>> ]
+"2880" [label = <(UNLIKELY,UNLIKELY((java_class) == nullptr))<SUB>1068</SUB>> ]
+"2898" [label = <(UNLIKELY,UNLIKELY((name) == nullptr))<SUB>1069</SUB>> ]
+"2916" [label = <(UNLIKELY,UNLIKELY((sig) == nullptr))<SUB>1070</SUB>> ]
+"2881" [label = <(&lt;operator&gt;.equals,(java_class) == nullptr)<SUB>1068</SUB>> ]
+"2885" [label = <(CHECK_NON_NULL_ARGUMENT(java_class),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;java_class == null&quot;))<SUB>1068</SUB>> ]
+"2892" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(java_class),CHECK_NON_NULL_ARGUMENT(java_class))<SUB>1068</SUB>> ]
+"2899" [label = <(&lt;operator&gt;.equals,(name) == nullptr)<SUB>1069</SUB>> ]
+"2903" [label = <(CHECK_NON_NULL_ARGUMENT(name),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;name == null&quot;))<SUB>1069</SUB>> ]
+"2910" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(name),CHECK_NON_NULL_ARGUMENT(name))<SUB>1069</SUB>> ]
+"2917" [label = <(&lt;operator&gt;.equals,(sig) == nullptr)<SUB>1070</SUB>> ]
+"2921" [label = <(CHECK_NON_NULL_ARGUMENT(sig),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;sig == null&quot;))<SUB>1070</SUB>> ]
+"2928" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(sig),CHECK_NON_NULL_ARGUMENT(sig))<SUB>1070</SUB>> ]
+"2886" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1068</SUB>> ]
+"2904" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1069</SUB>> ]
+"2922" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1070</SUB>> ]
+"2887" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1068</SUB>> ]
+"2889" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1068</SUB>> ]
+"2905" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1069</SUB>> ]
+"2907" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1069</SUB>> ]
+"2923" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1070</SUB>> ]
+"2925" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1070</SUB>> ]
+"2870" [label = <(METHOD,GetStaticMethodID)<SUB>1066</SUB>> ]
+"2940" [label = <(METHOD_RETURN,jmethodID)<SUB>1066</SUB>> ]
   "2876" -> "2881" 
   "2876" -> "2894" 
   "2894" -> "2899" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/72-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/72-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/72-cfg.dot	2023-06-07 19:34:48.307388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/72-cfg.dot	2023-06-07 19:34:54.907387785 +0330
@@ -1,36 +1,36 @@
 digraph "CallObjectMethod" {  
-"2948" [label = <(va_start,va_start(ap, mid))<SUB>1078</SUB>> ]
-"2952" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1079</SUB>> ]
-"2955" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1080</SUB>> ]
-"2973" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1081</SUB>> ]
-"2992" [label = <(soa,soa(env))<SUB>1082</SUB>> ]
-"2995" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1083</SUB>> ]
-"3001" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1084</SUB>> ]
-"2953" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1079</SUB>> ]
-"2996" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1083</SUB>> ]
-"3002" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1084</SUB>> ]
-"3003" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1084</SUB>> ]
-"3008" [label = <(GetL,result.GetL())<SUB>1084</SUB>> ]
-"2959" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1080</SUB>> ]
-"2977" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1081</SUB>> ]
-"3004" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1084</SUB>> ]
-"3009" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1084</SUB>> ]
-"2960" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1080</SUB>> ]
-"2964" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1080</SUB>> ]
-"2971" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1080</SUB>> ]
-"2978" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1081</SUB>> ]
-"2982" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1081</SUB>> ]
-"2989" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1081</SUB>> ]
-"3006" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1084</SUB>> ]
-"3011" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1084</SUB>> ]
-"2965" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1080</SUB>> ]
-"2983" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1081</SUB>> ]
-"2966" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1080</SUB>> ]
-"2968" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1080</SUB>> ]
-"2984" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1081</SUB>> ]
-"2986" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1081</SUB>> ]
-"2942" [label = <(METHOD,CallObjectMethod)<SUB>1076</SUB>> ]
-"3012" [label = <(METHOD_RETURN,jobject)<SUB>1076</SUB>> ]
+"2948" [label = <(va_start,va_start(ap, mid))<SUB>1077</SUB>> ]
+"2952" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1078</SUB>> ]
+"2955" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1079</SUB>> ]
+"2973" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1080</SUB>> ]
+"2992" [label = <(soa,soa(env))<SUB>1081</SUB>> ]
+"2995" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1082</SUB>> ]
+"3001" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1083</SUB>> ]
+"2953" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1078</SUB>> ]
+"2996" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1082</SUB>> ]
+"3002" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1083</SUB>> ]
+"3003" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1083</SUB>> ]
+"3008" [label = <(GetL,result.GetL())<SUB>1083</SUB>> ]
+"2959" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1079</SUB>> ]
+"2977" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1080</SUB>> ]
+"3004" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1083</SUB>> ]
+"3009" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1083</SUB>> ]
+"2960" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1079</SUB>> ]
+"2964" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1079</SUB>> ]
+"2971" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1079</SUB>> ]
+"2978" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1080</SUB>> ]
+"2982" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1080</SUB>> ]
+"2989" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1080</SUB>> ]
+"3006" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1083</SUB>> ]
+"3011" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1083</SUB>> ]
+"2965" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1079</SUB>> ]
+"2983" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1080</SUB>> ]
+"2966" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1079</SUB>> ]
+"2968" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1079</SUB>> ]
+"2984" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1080</SUB>> ]
+"2986" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1080</SUB>> ]
+"2942" [label = <(METHOD,CallObjectMethod)<SUB>1075</SUB>> ]
+"3012" [label = <(METHOD_RETURN,jobject)<SUB>1075</SUB>> ]
   "2948" -> "2953" 
   "2952" -> "2955" 
   "2955" -> "2960" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/73-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/73-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/73-cfg.dot	2023-06-07 19:34:48.307388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/73-cfg.dot	2023-06-07 19:34:54.907387785 +0330
@@ -1,33 +1,33 @@
 digraph "CallObjectMethodV" {  
-"3020" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1088</SUB>> ]
-"3038" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1089</SUB>> ]
-"3057" [label = <(soa,soa(env))<SUB>1090</SUB>> ]
-"3060" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args)))<SUB>1091</SUB>> ]
-"3066" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1092</SUB>> ]
-"3061" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1091</SUB>> ]
-"3067" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1092</SUB>> ]
-"3068" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1092</SUB>> ]
-"3073" [label = <(GetL,result.GetL())<SUB>1092</SUB>> ]
-"3024" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1088</SUB>> ]
-"3042" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1089</SUB>> ]
-"3069" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1092</SUB>> ]
-"3074" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1092</SUB>> ]
-"3025" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1088</SUB>> ]
-"3029" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1088</SUB>> ]
-"3036" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1088</SUB>> ]
-"3043" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1089</SUB>> ]
-"3047" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1089</SUB>> ]
-"3054" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1089</SUB>> ]
-"3071" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1092</SUB>> ]
-"3076" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1092</SUB>> ]
-"3030" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1088</SUB>> ]
-"3048" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1089</SUB>> ]
-"3031" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1088</SUB>> ]
-"3033" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1088</SUB>> ]
-"3049" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1089</SUB>> ]
-"3051" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1089</SUB>> ]
-"3014" [label = <(METHOD,CallObjectMethodV)<SUB>1087</SUB>> ]
-"3077" [label = <(METHOD_RETURN,jobject)<SUB>1087</SUB>> ]
+"3020" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1087</SUB>> ]
+"3038" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1088</SUB>> ]
+"3057" [label = <(soa,soa(env))<SUB>1089</SUB>> ]
+"3060" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args)))<SUB>1090</SUB>> ]
+"3066" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1091</SUB>> ]
+"3061" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1090</SUB>> ]
+"3067" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1091</SUB>> ]
+"3068" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1091</SUB>> ]
+"3073" [label = <(GetL,result.GetL())<SUB>1091</SUB>> ]
+"3024" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1087</SUB>> ]
+"3042" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1088</SUB>> ]
+"3069" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1091</SUB>> ]
+"3074" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1091</SUB>> ]
+"3025" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1087</SUB>> ]
+"3029" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1087</SUB>> ]
+"3036" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1087</SUB>> ]
+"3043" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1088</SUB>> ]
+"3047" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1088</SUB>> ]
+"3054" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1088</SUB>> ]
+"3071" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1091</SUB>> ]
+"3076" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1091</SUB>> ]
+"3030" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1087</SUB>> ]
+"3048" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1088</SUB>> ]
+"3031" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1087</SUB>> ]
+"3033" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1087</SUB>> ]
+"3049" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1088</SUB>> ]
+"3051" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1088</SUB>> ]
+"3014" [label = <(METHOD,CallObjectMethodV)<SUB>1086</SUB>> ]
+"3077" [label = <(METHOD_RETURN,jobject)<SUB>1086</SUB>> ]
   "3020" -> "3025" 
   "3020" -> "3038" 
   "3038" -> "3043" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/74-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/74-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/74-cfg.dot	2023-06-07 19:34:48.307388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/74-cfg.dot	2023-06-07 19:34:54.907387785 +0330
@@ -1,33 +1,33 @@
 digraph "CallObjectMethodA" {  
-"3085" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1096</SUB>> ]
-"3103" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1097</SUB>> ]
-"3122" [label = <(soa,soa(env))<SUB>1098</SUB>> ]
-"3125" [label = <(result,result(InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args)))<SUB>1099</SUB>> ]
-"3131" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1100</SUB>> ]
-"3126" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1099</SUB>> ]
-"3132" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1100</SUB>> ]
-"3133" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1100</SUB>> ]
-"3138" [label = <(GetL,result.GetL())<SUB>1100</SUB>> ]
-"3089" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1096</SUB>> ]
-"3107" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1097</SUB>> ]
-"3134" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1100</SUB>> ]
-"3139" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1100</SUB>> ]
-"3090" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1096</SUB>> ]
-"3094" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1096</SUB>> ]
-"3101" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1096</SUB>> ]
-"3108" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1097</SUB>> ]
-"3112" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1097</SUB>> ]
-"3119" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1097</SUB>> ]
-"3136" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1100</SUB>> ]
-"3141" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1100</SUB>> ]
-"3095" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1096</SUB>> ]
-"3113" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1097</SUB>> ]
-"3096" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1096</SUB>> ]
-"3098" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1096</SUB>> ]
-"3114" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1097</SUB>> ]
-"3116" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1097</SUB>> ]
-"3079" [label = <(METHOD,CallObjectMethodA)<SUB>1095</SUB>> ]
-"3142" [label = <(METHOD_RETURN,jobject)<SUB>1095</SUB>> ]
+"3085" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(obj))<SUB>1095</SUB>> ]
+"3103" [label = <(CHECK_NON_NULL_ARGUMENT,CHECK_NON_NULL_ARGUMENT(mid))<SUB>1096</SUB>> ]
+"3122" [label = <(soa,soa(env))<SUB>1097</SUB>> ]
+"3125" [label = <(result,result(InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args)))<SUB>1098</SUB>> ]
+"3131" [label = <(RETURN,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());,return soa.AddLocalReference&lt;jobject&gt;(result.GetL());)<SUB>1099</SUB>> ]
+"3126" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1098</SUB>> ]
+"3132" [label = <(&lt;operator&gt;.greaterThan,soa.AddLocalReference&lt;jobject&gt;(result.GetL()))<SUB>1099</SUB>> ]
+"3133" [label = <(&lt;operator&gt;.lessThan,soa.AddLocalReference&lt;jobject)<SUB>1099</SUB>> ]
+"3138" [label = <(GetL,result.GetL())<SUB>1099</SUB>> ]
+"3089" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1095</SUB>> ]
+"3107" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1096</SUB>> ]
+"3134" [label = <(&lt;operator&gt;.fieldAccess,soa.AddLocalReference)<SUB>1099</SUB>> ]
+"3139" [label = <(&lt;operator&gt;.fieldAccess,result.GetL)<SUB>1099</SUB>> ]
+"3090" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1095</SUB>> ]
+"3094" [label = <(CHECK_NON_NULL_ARGUMENT(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1095</SUB>> ]
+"3101" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(obj),CHECK_NON_NULL_ARGUMENT(obj))<SUB>1095</SUB>> ]
+"3108" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1096</SUB>> ]
+"3112" [label = <(CHECK_NON_NULL_ARGUMENT(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1096</SUB>> ]
+"3119" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT(mid),CHECK_NON_NULL_ARGUMENT(mid))<SUB>1096</SUB>> ]
+"3136" [label = <(FIELD_IDENTIFIER,AddLocalReference,AddLocalReference)<SUB>1099</SUB>> ]
+"3141" [label = <(FIELD_IDENTIFIER,GetL,GetL)<SUB>1099</SUB>> ]
+"3095" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1095</SUB>> ]
+"3113" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1096</SUB>> ]
+"3096" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1095</SUB>> ]
+"3098" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1095</SUB>> ]
+"3114" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1096</SUB>> ]
+"3116" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1096</SUB>> ]
+"3079" [label = <(METHOD,CallObjectMethodA)<SUB>1094</SUB>> ]
+"3142" [label = <(METHOD_RETURN,jobject)<SUB>1094</SUB>> ]
   "3085" -> "3090" 
   "3085" -> "3103" 
   "3103" -> "3108" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/75-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/75-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/75-cfg.dot	2023-06-07 19:34:48.307388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/75-cfg.dot	2023-06-07 19:34:54.907387785 +0330
@@ -1,32 +1,32 @@
 digraph "CallBooleanMethod" {  
-"3150" [label = <(va_start,va_start(ap, mid))<SUB>1105</SUB>> ]
-"3154" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1106</SUB>> ]
-"3157" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1107</SUB>> ]
-"3175" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1108</SUB>> ]
-"3194" [label = <(soa,soa(env))<SUB>1109</SUB>> ]
-"3197" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1110</SUB>> ]
-"3203" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1111</SUB>> ]
-"3155" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1106</SUB>> ]
-"3198" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1110</SUB>> ]
-"3204" [label = <(GetZ,result.GetZ())<SUB>1111</SUB>> ]
-"3205" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1111</SUB>> ]
-"3161" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1107</SUB>> ]
-"3179" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1108</SUB>> ]
-"3207" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1111</SUB>> ]
-"3162" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1107</SUB>> ]
-"3166" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1107</SUB>> ]
-"3173" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1107</SUB>> ]
-"3180" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1108</SUB>> ]
-"3184" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1108</SUB>> ]
-"3191" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1108</SUB>> ]
-"3167" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1107</SUB>> ]
-"3185" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1108</SUB>> ]
-"3168" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1107</SUB>> ]
-"3170" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1107</SUB>> ]
-"3186" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1108</SUB>> ]
-"3188" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1108</SUB>> ]
-"3144" [label = <(METHOD,CallBooleanMethod)<SUB>1103</SUB>> ]
-"3208" [label = <(METHOD_RETURN,jboolean)<SUB>1103</SUB>> ]
+"3150" [label = <(va_start,va_start(ap, mid))<SUB>1104</SUB>> ]
+"3154" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1105</SUB>> ]
+"3157" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1106</SUB>> ]
+"3175" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1107</SUB>> ]
+"3194" [label = <(soa,soa(env))<SUB>1108</SUB>> ]
+"3197" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1109</SUB>> ]
+"3203" [label = <(RETURN,return result.GetZ();,return result.GetZ();)<SUB>1110</SUB>> ]
+"3155" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1105</SUB>> ]
+"3198" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1109</SUB>> ]
+"3204" [label = <(GetZ,result.GetZ())<SUB>1110</SUB>> ]
+"3205" [label = <(&lt;operator&gt;.fieldAccess,result.GetZ)<SUB>1110</SUB>> ]
+"3161" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1106</SUB>> ]
+"3179" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1107</SUB>> ]
+"3207" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1110</SUB>> ]
+"3162" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1106</SUB>> ]
+"3166" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1106</SUB>> ]
+"3173" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1106</SUB>> ]
+"3180" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1107</SUB>> ]
+"3184" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1107</SUB>> ]
+"3191" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1107</SUB>> ]
+"3167" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1106</SUB>> ]
+"3185" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1107</SUB>> ]
+"3168" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1106</SUB>> ]
+"3170" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1106</SUB>> ]
+"3186" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1107</SUB>> ]
+"3188" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1107</SUB>> ]
+"3144" [label = <(METHOD,CallBooleanMethod)<SUB>1102</SUB>> ]
+"3208" [label = <(METHOD_RETURN,jboolean)<SUB>1102</SUB>> ]
   "3150" -> "3155" 
   "3154" -> "3157" 
   "3157" -> "3162" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/76-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/76-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/76-cfg.dot	2023-06-07 19:34:48.307388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/76-cfg.dot	2023-06-07 19:34:54.907387785 +0330
@@ -1,28 +1,28 @@
 digraph "CallBooleanMethodV" {  
-"3216" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1115</SUB>> ]
-"3234" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1116</SUB>> ]
-"3253" [label = <(soa,soa(env))<SUB>1117</SUB>> ]
-"3255" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>1118</SUB>> ]
-"3256" [label = <(GetZ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ())<SUB>1118</SUB>> ]
-"3257" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ)<SUB>1118</SUB>> ]
-"3220" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1115</SUB>> ]
-"3238" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1116</SUB>> ]
-"3258" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1118</SUB>> ]
-"3263" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1118</SUB>> ]
-"3221" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1115</SUB>> ]
-"3225" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1115</SUB>> ]
-"3232" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1115</SUB>> ]
-"3239" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1116</SUB>> ]
-"3243" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1116</SUB>> ]
-"3250" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1116</SUB>> ]
-"3226" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1115</SUB>> ]
-"3244" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1116</SUB>> ]
-"3227" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1115</SUB>> ]
-"3229" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1115</SUB>> ]
-"3245" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1116</SUB>> ]
-"3247" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1116</SUB>> ]
-"3210" [label = <(METHOD,CallBooleanMethodV)<SUB>1114</SUB>> ]
-"3264" [label = <(METHOD_RETURN,jboolean)<SUB>1114</SUB>> ]
+"3216" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1114</SUB>> ]
+"3234" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1115</SUB>> ]
+"3253" [label = <(soa,soa(env))<SUB>1116</SUB>> ]
+"3255" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ();)<SUB>1117</SUB>> ]
+"3256" [label = <(GetZ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ())<SUB>1117</SUB>> ]
+"3257" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetZ)<SUB>1117</SUB>> ]
+"3220" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1114</SUB>> ]
+"3238" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1115</SUB>> ]
+"3258" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1117</SUB>> ]
+"3263" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1117</SUB>> ]
+"3221" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1114</SUB>> ]
+"3225" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1114</SUB>> ]
+"3232" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1114</SUB>> ]
+"3239" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1115</SUB>> ]
+"3243" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1115</SUB>> ]
+"3250" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1115</SUB>> ]
+"3226" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1114</SUB>> ]
+"3244" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1115</SUB>> ]
+"3227" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1114</SUB>> ]
+"3229" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1114</SUB>> ]
+"3245" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1115</SUB>> ]
+"3247" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1115</SUB>> ]
+"3210" [label = <(METHOD,CallBooleanMethodV)<SUB>1113</SUB>> ]
+"3264" [label = <(METHOD_RETURN,jboolean)<SUB>1113</SUB>> ]
   "3216" -> "3221" 
   "3216" -> "3234" 
   "3234" -> "3239" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/77-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/77-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/77-cfg.dot	2023-06-07 19:34:48.317388398 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/77-cfg.dot	2023-06-07 19:34:54.917387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallBooleanMethodA" {  
-"3272" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1122</SUB>> ]
-"3290" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1123</SUB>> ]
-"3309" [label = <(soa,soa(env))<SUB>1124</SUB>> ]
-"3311" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();)<SUB>1125</SUB>> ]
-"3312" [label = <(GetZ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ())<SUB>1125</SUB>> ]
-"3313" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ)<SUB>1125</SUB>> ]
-"3276" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1122</SUB>> ]
-"3294" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1123</SUB>> ]
-"3314" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1125</SUB>> ]
-"3319" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1125</SUB>> ]
-"3277" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1122</SUB>> ]
-"3281" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1122</SUB>> ]
-"3288" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1122</SUB>> ]
-"3295" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1123</SUB>> ]
-"3299" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1123</SUB>> ]
-"3306" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1123</SUB>> ]
-"3282" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1122</SUB>> ]
-"3300" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1123</SUB>> ]
-"3283" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1122</SUB>> ]
-"3285" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1122</SUB>> ]
-"3301" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1123</SUB>> ]
-"3303" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1123</SUB>> ]
-"3266" [label = <(METHOD,CallBooleanMethodA)<SUB>1121</SUB>> ]
-"3320" [label = <(METHOD_RETURN,jboolean)<SUB>1121</SUB>> ]
+"3272" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1121</SUB>> ]
+"3290" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1122</SUB>> ]
+"3309" [label = <(soa,soa(env))<SUB>1123</SUB>> ]
+"3311" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ();)<SUB>1124</SUB>> ]
+"3312" [label = <(GetZ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ())<SUB>1124</SUB>> ]
+"3313" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetZ)<SUB>1124</SUB>> ]
+"3276" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1121</SUB>> ]
+"3294" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1122</SUB>> ]
+"3314" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1124</SUB>> ]
+"3319" [label = <(FIELD_IDENTIFIER,GetZ,GetZ)<SUB>1124</SUB>> ]
+"3277" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1121</SUB>> ]
+"3281" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1121</SUB>> ]
+"3288" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1121</SUB>> ]
+"3295" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1122</SUB>> ]
+"3299" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1122</SUB>> ]
+"3306" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1122</SUB>> ]
+"3282" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1121</SUB>> ]
+"3300" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1122</SUB>> ]
+"3283" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1121</SUB>> ]
+"3285" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1121</SUB>> ]
+"3301" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1122</SUB>> ]
+"3303" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1122</SUB>> ]
+"3266" [label = <(METHOD,CallBooleanMethodA)<SUB>1120</SUB>> ]
+"3320" [label = <(METHOD_RETURN,jboolean)<SUB>1120</SUB>> ]
   "3272" -> "3277" 
   "3272" -> "3290" 
   "3290" -> "3295" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/78-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/78-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/78-cfg.dot	2023-06-07 19:34:48.317388398 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/78-cfg.dot	2023-06-07 19:34:54.917387783 +0330
@@ -1,32 +1,32 @@
 digraph "CallByteMethod" {  
-"3328" [label = <(va_start,va_start(ap, mid))<SUB>1130</SUB>> ]
-"3332" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1131</SUB>> ]
-"3335" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1132</SUB>> ]
-"3353" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1133</SUB>> ]
-"3372" [label = <(soa,soa(env))<SUB>1134</SUB>> ]
-"3375" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1135</SUB>> ]
-"3381" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1136</SUB>> ]
-"3333" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1131</SUB>> ]
-"3376" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1135</SUB>> ]
-"3382" [label = <(GetB,result.GetB())<SUB>1136</SUB>> ]
-"3383" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1136</SUB>> ]
-"3339" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1132</SUB>> ]
-"3357" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1133</SUB>> ]
-"3385" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1136</SUB>> ]
-"3340" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1132</SUB>> ]
-"3344" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1132</SUB>> ]
-"3351" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1132</SUB>> ]
-"3358" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1133</SUB>> ]
-"3362" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1133</SUB>> ]
-"3369" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1133</SUB>> ]
-"3345" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1132</SUB>> ]
-"3363" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1133</SUB>> ]
-"3346" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1132</SUB>> ]
-"3348" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1132</SUB>> ]
-"3364" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1133</SUB>> ]
-"3366" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1133</SUB>> ]
-"3322" [label = <(METHOD,CallByteMethod)<SUB>1128</SUB>> ]
-"3386" [label = <(METHOD_RETURN,jbyte)<SUB>1128</SUB>> ]
+"3328" [label = <(va_start,va_start(ap, mid))<SUB>1129</SUB>> ]
+"3332" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1130</SUB>> ]
+"3335" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1131</SUB>> ]
+"3353" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1132</SUB>> ]
+"3372" [label = <(soa,soa(env))<SUB>1133</SUB>> ]
+"3375" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1134</SUB>> ]
+"3381" [label = <(RETURN,return result.GetB();,return result.GetB();)<SUB>1135</SUB>> ]
+"3333" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1130</SUB>> ]
+"3376" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1134</SUB>> ]
+"3382" [label = <(GetB,result.GetB())<SUB>1135</SUB>> ]
+"3383" [label = <(&lt;operator&gt;.fieldAccess,result.GetB)<SUB>1135</SUB>> ]
+"3339" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1131</SUB>> ]
+"3357" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1132</SUB>> ]
+"3385" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1135</SUB>> ]
+"3340" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1131</SUB>> ]
+"3344" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1131</SUB>> ]
+"3351" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1131</SUB>> ]
+"3358" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1132</SUB>> ]
+"3362" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1132</SUB>> ]
+"3369" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1132</SUB>> ]
+"3345" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1131</SUB>> ]
+"3363" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1132</SUB>> ]
+"3346" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1131</SUB>> ]
+"3348" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1131</SUB>> ]
+"3364" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1132</SUB>> ]
+"3366" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1132</SUB>> ]
+"3322" [label = <(METHOD,CallByteMethod)<SUB>1127</SUB>> ]
+"3386" [label = <(METHOD_RETURN,jbyte)<SUB>1127</SUB>> ]
   "3328" -> "3333" 
   "3332" -> "3335" 
   "3335" -> "3340" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/79-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/79-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/79-cfg.dot	2023-06-07 19:34:48.317388398 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/79-cfg.dot	2023-06-07 19:34:54.917387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallByteMethodV" {  
-"3394" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1140</SUB>> ]
-"3412" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1141</SUB>> ]
-"3431" [label = <(soa,soa(env))<SUB>1142</SUB>> ]
-"3433" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();)<SUB>1143</SUB>> ]
-"3434" [label = <(GetB,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB())<SUB>1143</SUB>> ]
-"3435" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB)<SUB>1143</SUB>> ]
-"3398" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1140</SUB>> ]
-"3416" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1141</SUB>> ]
-"3436" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1143</SUB>> ]
-"3441" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1143</SUB>> ]
-"3399" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1140</SUB>> ]
-"3403" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1140</SUB>> ]
-"3410" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1140</SUB>> ]
-"3417" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1141</SUB>> ]
-"3421" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1141</SUB>> ]
-"3428" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1141</SUB>> ]
-"3404" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1140</SUB>> ]
-"3422" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1141</SUB>> ]
-"3405" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1140</SUB>> ]
-"3407" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1140</SUB>> ]
-"3423" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1141</SUB>> ]
-"3425" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1141</SUB>> ]
-"3388" [label = <(METHOD,CallByteMethodV)<SUB>1139</SUB>> ]
-"3442" [label = <(METHOD_RETURN,jbyte)<SUB>1139</SUB>> ]
+"3394" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1139</SUB>> ]
+"3412" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1140</SUB>> ]
+"3431" [label = <(soa,soa(env))<SUB>1141</SUB>> ]
+"3433" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB();)<SUB>1142</SUB>> ]
+"3434" [label = <(GetB,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB())<SUB>1142</SUB>> ]
+"3435" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetB)<SUB>1142</SUB>> ]
+"3398" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1139</SUB>> ]
+"3416" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1140</SUB>> ]
+"3436" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1142</SUB>> ]
+"3441" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1142</SUB>> ]
+"3399" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1139</SUB>> ]
+"3403" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1139</SUB>> ]
+"3410" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1139</SUB>> ]
+"3417" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1140</SUB>> ]
+"3421" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1140</SUB>> ]
+"3428" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1140</SUB>> ]
+"3404" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1139</SUB>> ]
+"3422" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1140</SUB>> ]
+"3405" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1139</SUB>> ]
+"3407" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1139</SUB>> ]
+"3423" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1140</SUB>> ]
+"3425" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1140</SUB>> ]
+"3388" [label = <(METHOD,CallByteMethodV)<SUB>1138</SUB>> ]
+"3442" [label = <(METHOD_RETURN,jbyte)<SUB>1138</SUB>> ]
   "3394" -> "3399" 
   "3394" -> "3412" 
   "3412" -> "3417" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/8-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/8-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/8-cfg.dot	2023-06-07 19:34:48.257388404 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/8-cfg.dot	2023-06-07 19:34:54.857387788 +0330
@@ -1,72 +1,72 @@
 digraph "VisitModifiedUtf8Chars" {  
-"58" [label = <(DCHECK_LE,DCHECK_LE(byte_count, strlen(utf8)))<SUB>102</SUB>> ]
-"63" [label = <(&lt;operator&gt;.assignment,len = 0)<SUB>103</SUB>> ]
-"67" [label = <(&lt;operator&gt;.assignment,* end = utf8 + byte_count)<SUB>104</SUB>> ]
-"223" [label = <(RETURN,return len;,return len;)<SUB>162</SUB>> ]
-"60" [label = <(strlen,strlen(utf8))<SUB>102</SUB>> ]
-"69" [label = <(&lt;operator&gt;.addition,utf8 + byte_count)<SUB>104</SUB>> ]
-"73" [label = <(&lt;operator&gt;.notEquals,utf8 != end)<SUB>105</SUB>> ]
-"78" [label = <(&lt;operator&gt;.assignment,ic = *utf8)<SUB>106</SUB>> ]
-"101" [label = <(&lt;operator&gt;.assignment,is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>114</SUB>> ]
-"214" [label = <(good,good(utf8, 4u))<SUB>158</SUB>> ]
-"217" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 4u)<SUB>159</SUB>> ]
-"220" [label = <(&lt;operator&gt;.assignmentPlus,len += 2u)<SUB>160</SUB>> ]
-"80" [label = <(&lt;operator&gt;.indirection,*utf8)<SUB>106</SUB>> ]
-"83" [label = <(LIKELY,LIKELY((ic &amp; 0x80) == 0))<SUB>107</SUB>> ]
-"103" [label = <(METHOD_REF,ANY anonymous_lambda_8 (),is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>114</SUB>> ]
-"105" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x20) == 0)<SUB>120</SUB>> ]
-"152" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x10) == 0)<SUB>136</SUB>> ]
-"199" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 4u)<SUB>155</SUB>> ]
-"84" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x80) == 0)<SUB>107</SUB>> ]
-"90" [label = <(good,good(utf8, 1u))<SUB>109</SUB>> ]
-"93" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 1u)<SUB>110</SUB>> ]
-"96" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>111</SUB>> ]
-"106" [label = <(&lt;operator&gt;.and,ic &amp; 0x20)<SUB>120</SUB>> ]
-"144" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 2u)<SUB>132</SUB>> ]
-"147" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>133</SUB>> ]
-"153" [label = <(&lt;operator&gt;.and,ic &amp; 0x10)<SUB>136</SUB>> ]
-"191" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 3u)<SUB>148</SUB>> ]
-"194" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>149</SUB>> ]
-"200" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>155</SUB>> ]
-"207" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>156</SUB>> ]
-"85" [label = <(&lt;operator&gt;.and,ic &amp; 0x80)<SUB>107</SUB>> ]
-"112" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 2u)<SUB>122</SUB>> ]
-"128" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>125</SUB>> ]
-"159" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 3u)<SUB>138</SUB>> ]
-"175" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>141</SUB>> ]
-"201" [label = <(UNKNOWN,size_t,size_t)<SUB>155</SUB>> ]
-"202" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>155</SUB>> ]
-"208" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>156</SUB>> ]
-"113" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>122</SUB>> ]
-"120" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>123</SUB>> ]
-"129" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>125</SUB>> ]
-"132" [label = <(is_ascii,is_ascii())<SUB>125</SUB>> ]
-"160" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>138</SUB>> ]
-"167" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>139</SUB>> ]
-"176" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>141</SUB>> ]
-"179" [label = <(is_ascii,is_ascii())<SUB>141</SUB>> ]
-"209" [label = <(bad,bad())<SUB>156</SUB>> ]
-"211" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>156</SUB>> ]
-"114" [label = <(UNKNOWN,size_t,size_t)<SUB>122</SUB>> ]
-"115" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>122</SUB>> ]
-"121" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>123</SUB>> ]
-"131" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>125</SUB>> ]
-"135" [label = <(bad,bad())<SUB>126</SUB>> ]
-"141" [label = <(good,good(utf8, 2u))<SUB>130</SUB>> ]
-"161" [label = <(UNKNOWN,size_t,size_t)<SUB>138</SUB>> ]
-"162" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>138</SUB>> ]
-"168" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>139</SUB>> ]
-"178" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>141</SUB>> ]
-"182" [label = <(bad,bad())<SUB>142</SUB>> ]
-"188" [label = <(good,good(utf8, 3u))<SUB>146</SUB>> ]
-"122" [label = <(bad,bad())<SUB>123</SUB>> ]
-"124" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>123</SUB>> ]
-"137" [label = <(RETURN,return 0u;,return 0u;)<SUB>127</SUB>> ]
-"169" [label = <(bad,bad())<SUB>139</SUB>> ]
-"171" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>139</SUB>> ]
-"184" [label = <(RETURN,return 0u;,return 0u;)<SUB>143</SUB>> ]
-"52" [label = <(METHOD,VisitModifiedUtf8Chars)<SUB>101</SUB>> ]
-"225" [label = <(METHOD_RETURN,size_t)<SUB>101</SUB>> ]
+"58" [label = <(DCHECK_LE,DCHECK_LE(byte_count, strlen(utf8)))<SUB>101</SUB>> ]
+"63" [label = <(&lt;operator&gt;.assignment,len = 0)<SUB>102</SUB>> ]
+"67" [label = <(&lt;operator&gt;.assignment,* end = utf8 + byte_count)<SUB>103</SUB>> ]
+"223" [label = <(RETURN,return len;,return len;)<SUB>161</SUB>> ]
+"60" [label = <(strlen,strlen(utf8))<SUB>101</SUB>> ]
+"69" [label = <(&lt;operator&gt;.addition,utf8 + byte_count)<SUB>103</SUB>> ]
+"73" [label = <(&lt;operator&gt;.notEquals,utf8 != end)<SUB>104</SUB>> ]
+"78" [label = <(&lt;operator&gt;.assignment,ic = *utf8)<SUB>105</SUB>> ]
+"101" [label = <(&lt;operator&gt;.assignment,is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>113</SUB>> ]
+"214" [label = <(good,good(utf8, 4u))<SUB>157</SUB>> ]
+"217" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 4u)<SUB>158</SUB>> ]
+"220" [label = <(&lt;operator&gt;.assignmentPlus,len += 2u)<SUB>159</SUB>> ]
+"80" [label = <(&lt;operator&gt;.indirection,*utf8)<SUB>105</SUB>> ]
+"83" [label = <(LIKELY,LIKELY((ic &amp; 0x80) == 0))<SUB>106</SUB>> ]
+"103" [label = <(METHOD_REF,ANY anonymous_lambda_8 (),is_ascii = [utf8]() {\012 const char* ptr = utf8; // Make a copy that can be modified by GetUtf16FromUtf8().\012 return mirror::String::IsASCII(dchecked_integral_cast&lt;uint16_t&gt;(GetUtf16FromUtf8(&amp;ptr)));\012 })<SUB>113</SUB>> ]
+"105" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x20) == 0)<SUB>119</SUB>> ]
+"152" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x10) == 0)<SUB>135</SUB>> ]
+"199" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 4u)<SUB>154</SUB>> ]
+"84" [label = <(&lt;operator&gt;.equals,(ic &amp; 0x80) == 0)<SUB>106</SUB>> ]
+"90" [label = <(good,good(utf8, 1u))<SUB>108</SUB>> ]
+"93" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 1u)<SUB>109</SUB>> ]
+"96" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>110</SUB>> ]
+"106" [label = <(&lt;operator&gt;.and,ic &amp; 0x20)<SUB>119</SUB>> ]
+"144" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 2u)<SUB>131</SUB>> ]
+"147" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>132</SUB>> ]
+"153" [label = <(&lt;operator&gt;.and,ic &amp; 0x10)<SUB>135</SUB>> ]
+"191" [label = <(&lt;operator&gt;.assignmentPlus,utf8 += 3u)<SUB>147</SUB>> ]
+"194" [label = <(&lt;operator&gt;.assignmentPlus,len += 1u)<SUB>148</SUB>> ]
+"200" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>154</SUB>> ]
+"207" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>155</SUB>> ]
+"85" [label = <(&lt;operator&gt;.and,ic &amp; 0x80)<SUB>106</SUB>> ]
+"112" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 2u)<SUB>121</SUB>> ]
+"128" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>124</SUB>> ]
+"159" [label = <(&lt;operator&gt;.lessThan,static_cast&lt;size_t&gt;(end - utf8) &lt; 3u)<SUB>137</SUB>> ]
+"175" [label = <(&lt;operator&gt;.logicalAnd,mirror::kUseStringCompression &amp;&amp; is_ascii())<SUB>140</SUB>> ]
+"201" [label = <(UNKNOWN,size_t,size_t)<SUB>154</SUB>> ]
+"202" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>154</SUB>> ]
+"208" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>155</SUB>> ]
+"113" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>121</SUB>> ]
+"120" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>122</SUB>> ]
+"129" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>124</SUB>> ]
+"132" [label = <(is_ascii,is_ascii())<SUB>124</SUB>> ]
+"160" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(end - utf8))<SUB>137</SUB>> ]
+"167" [label = <(RETURN,return bad() ? 0u : len + 1u;,return bad() ? 0u : len + 1u;)<SUB>138</SUB>> ]
+"176" [label = <(&lt;operator&gt;.fieldAccess,mirror::kUseStringCompression)<SUB>140</SUB>> ]
+"179" [label = <(is_ascii,is_ascii())<SUB>140</SUB>> ]
+"209" [label = <(bad,bad())<SUB>155</SUB>> ]
+"211" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>155</SUB>> ]
+"114" [label = <(UNKNOWN,size_t,size_t)<SUB>121</SUB>> ]
+"115" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>121</SUB>> ]
+"121" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>122</SUB>> ]
+"131" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>124</SUB>> ]
+"135" [label = <(bad,bad())<SUB>125</SUB>> ]
+"141" [label = <(good,good(utf8, 2u))<SUB>129</SUB>> ]
+"161" [label = <(UNKNOWN,size_t,size_t)<SUB>137</SUB>> ]
+"162" [label = <(&lt;operator&gt;.subtraction,end - utf8)<SUB>137</SUB>> ]
+"168" [label = <(&lt;operator&gt;.conditional,bad() ? 0u : len + 1u)<SUB>138</SUB>> ]
+"178" [label = <(FIELD_IDENTIFIER,kUseStringCompression,kUseStringCompression)<SUB>140</SUB>> ]
+"182" [label = <(bad,bad())<SUB>141</SUB>> ]
+"188" [label = <(good,good(utf8, 3u))<SUB>145</SUB>> ]
+"122" [label = <(bad,bad())<SUB>122</SUB>> ]
+"124" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>122</SUB>> ]
+"137" [label = <(RETURN,return 0u;,return 0u;)<SUB>126</SUB>> ]
+"169" [label = <(bad,bad())<SUB>138</SUB>> ]
+"171" [label = <(&lt;operator&gt;.addition,len + 1u)<SUB>138</SUB>> ]
+"184" [label = <(RETURN,return 0u;,return 0u;)<SUB>142</SUB>> ]
+"52" [label = <(METHOD,VisitModifiedUtf8Chars)<SUB>100</SUB>> ]
+"225" [label = <(METHOD_RETURN,size_t)<SUB>100</SUB>> ]
   "58" -> "63" 
   "63" -> "69" 
   "67" -> "73" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/80-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/80-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/80-cfg.dot	2023-06-07 19:34:48.317388398 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/80-cfg.dot	2023-06-07 19:34:54.917387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallByteMethodA" {  
-"3450" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1147</SUB>> ]
-"3468" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1148</SUB>> ]
-"3487" [label = <(soa,soa(env))<SUB>1149</SUB>> ]
-"3489" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();)<SUB>1150</SUB>> ]
-"3490" [label = <(GetB,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB())<SUB>1150</SUB>> ]
-"3491" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB)<SUB>1150</SUB>> ]
-"3454" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1147</SUB>> ]
-"3472" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1148</SUB>> ]
-"3492" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1150</SUB>> ]
-"3497" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1150</SUB>> ]
-"3455" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1147</SUB>> ]
-"3459" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1147</SUB>> ]
-"3466" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1147</SUB>> ]
-"3473" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1148</SUB>> ]
-"3477" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1148</SUB>> ]
-"3484" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1148</SUB>> ]
-"3460" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1147</SUB>> ]
-"3478" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1148</SUB>> ]
-"3461" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1147</SUB>> ]
-"3463" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1147</SUB>> ]
-"3479" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1148</SUB>> ]
-"3481" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1148</SUB>> ]
-"3444" [label = <(METHOD,CallByteMethodA)<SUB>1146</SUB>> ]
-"3498" [label = <(METHOD_RETURN,jbyte)<SUB>1146</SUB>> ]
+"3450" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1146</SUB>> ]
+"3468" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1147</SUB>> ]
+"3487" [label = <(soa,soa(env))<SUB>1148</SUB>> ]
+"3489" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB();)<SUB>1149</SUB>> ]
+"3490" [label = <(GetB,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB())<SUB>1149</SUB>> ]
+"3491" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetB)<SUB>1149</SUB>> ]
+"3454" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1146</SUB>> ]
+"3472" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1147</SUB>> ]
+"3492" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1149</SUB>> ]
+"3497" [label = <(FIELD_IDENTIFIER,GetB,GetB)<SUB>1149</SUB>> ]
+"3455" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1146</SUB>> ]
+"3459" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1146</SUB>> ]
+"3466" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1146</SUB>> ]
+"3473" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1147</SUB>> ]
+"3477" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1147</SUB>> ]
+"3484" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1147</SUB>> ]
+"3460" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1146</SUB>> ]
+"3478" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1147</SUB>> ]
+"3461" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1146</SUB>> ]
+"3463" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1146</SUB>> ]
+"3479" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1147</SUB>> ]
+"3481" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1147</SUB>> ]
+"3444" [label = <(METHOD,CallByteMethodA)<SUB>1145</SUB>> ]
+"3498" [label = <(METHOD_RETURN,jbyte)<SUB>1145</SUB>> ]
   "3450" -> "3455" 
   "3450" -> "3468" 
   "3468" -> "3473" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/81-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/81-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/81-cfg.dot	2023-06-07 19:34:48.317388398 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/81-cfg.dot	2023-06-07 19:34:54.917387783 +0330
@@ -1,32 +1,32 @@
 digraph "CallCharMethod" {  
-"3506" [label = <(va_start,va_start(ap, mid))<SUB>1155</SUB>> ]
-"3510" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1156</SUB>> ]
-"3513" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1157</SUB>> ]
-"3531" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1158</SUB>> ]
-"3550" [label = <(soa,soa(env))<SUB>1159</SUB>> ]
-"3553" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1160</SUB>> ]
-"3559" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1161</SUB>> ]
-"3511" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1156</SUB>> ]
-"3554" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1160</SUB>> ]
-"3560" [label = <(GetC,result.GetC())<SUB>1161</SUB>> ]
-"3561" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1161</SUB>> ]
-"3517" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1157</SUB>> ]
-"3535" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1158</SUB>> ]
-"3563" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1161</SUB>> ]
-"3518" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1157</SUB>> ]
-"3522" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1157</SUB>> ]
-"3529" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1157</SUB>> ]
-"3536" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1158</SUB>> ]
-"3540" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1158</SUB>> ]
-"3547" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1158</SUB>> ]
-"3523" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1157</SUB>> ]
-"3541" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1158</SUB>> ]
-"3524" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1157</SUB>> ]
-"3526" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1157</SUB>> ]
-"3542" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1158</SUB>> ]
-"3544" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1158</SUB>> ]
-"3500" [label = <(METHOD,CallCharMethod)<SUB>1153</SUB>> ]
-"3564" [label = <(METHOD_RETURN,jchar)<SUB>1153</SUB>> ]
+"3506" [label = <(va_start,va_start(ap, mid))<SUB>1154</SUB>> ]
+"3510" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1155</SUB>> ]
+"3513" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1156</SUB>> ]
+"3531" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1157</SUB>> ]
+"3550" [label = <(soa,soa(env))<SUB>1158</SUB>> ]
+"3553" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1159</SUB>> ]
+"3559" [label = <(RETURN,return result.GetC();,return result.GetC();)<SUB>1160</SUB>> ]
+"3511" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1155</SUB>> ]
+"3554" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1159</SUB>> ]
+"3560" [label = <(GetC,result.GetC())<SUB>1160</SUB>> ]
+"3561" [label = <(&lt;operator&gt;.fieldAccess,result.GetC)<SUB>1160</SUB>> ]
+"3517" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1156</SUB>> ]
+"3535" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1157</SUB>> ]
+"3563" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1160</SUB>> ]
+"3518" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1156</SUB>> ]
+"3522" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1156</SUB>> ]
+"3529" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1156</SUB>> ]
+"3536" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1157</SUB>> ]
+"3540" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1157</SUB>> ]
+"3547" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1157</SUB>> ]
+"3523" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1156</SUB>> ]
+"3541" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1157</SUB>> ]
+"3524" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1156</SUB>> ]
+"3526" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1156</SUB>> ]
+"3542" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1157</SUB>> ]
+"3544" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1157</SUB>> ]
+"3500" [label = <(METHOD,CallCharMethod)<SUB>1152</SUB>> ]
+"3564" [label = <(METHOD_RETURN,jchar)<SUB>1152</SUB>> ]
   "3506" -> "3511" 
   "3510" -> "3513" 
   "3513" -> "3518" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/82-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/82-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/82-cfg.dot	2023-06-07 19:34:48.317388398 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/82-cfg.dot	2023-06-07 19:34:54.917387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallCharMethodV" {  
-"3572" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1165</SUB>> ]
-"3590" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1166</SUB>> ]
-"3609" [label = <(soa,soa(env))<SUB>1167</SUB>> ]
-"3611" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1168</SUB>> ]
-"3612" [label = <(GetC,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC())<SUB>1168</SUB>> ]
-"3613" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC)<SUB>1168</SUB>> ]
-"3576" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1165</SUB>> ]
-"3594" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1166</SUB>> ]
-"3614" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1168</SUB>> ]
-"3619" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1168</SUB>> ]
-"3577" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1165</SUB>> ]
-"3581" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1165</SUB>> ]
-"3588" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1165</SUB>> ]
-"3595" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1166</SUB>> ]
-"3599" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1166</SUB>> ]
-"3606" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1166</SUB>> ]
-"3582" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1165</SUB>> ]
-"3600" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1166</SUB>> ]
-"3583" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1165</SUB>> ]
-"3585" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1165</SUB>> ]
-"3601" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1166</SUB>> ]
-"3603" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1166</SUB>> ]
-"3566" [label = <(METHOD,CallCharMethodV)<SUB>1164</SUB>> ]
-"3620" [label = <(METHOD_RETURN,jchar)<SUB>1164</SUB>> ]
+"3572" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1164</SUB>> ]
+"3590" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1165</SUB>> ]
+"3609" [label = <(soa,soa(env))<SUB>1166</SUB>> ]
+"3611" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC();)<SUB>1167</SUB>> ]
+"3612" [label = <(GetC,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC())<SUB>1167</SUB>> ]
+"3613" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetC)<SUB>1167</SUB>> ]
+"3576" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1164</SUB>> ]
+"3594" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1165</SUB>> ]
+"3614" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1167</SUB>> ]
+"3619" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1167</SUB>> ]
+"3577" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1164</SUB>> ]
+"3581" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1164</SUB>> ]
+"3588" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1164</SUB>> ]
+"3595" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1165</SUB>> ]
+"3599" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1165</SUB>> ]
+"3606" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1165</SUB>> ]
+"3582" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1164</SUB>> ]
+"3600" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1165</SUB>> ]
+"3583" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1164</SUB>> ]
+"3585" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1164</SUB>> ]
+"3601" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1165</SUB>> ]
+"3603" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1165</SUB>> ]
+"3566" [label = <(METHOD,CallCharMethodV)<SUB>1163</SUB>> ]
+"3620" [label = <(METHOD_RETURN,jchar)<SUB>1163</SUB>> ]
   "3572" -> "3577" 
   "3572" -> "3590" 
   "3590" -> "3595" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/83-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/83-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/83-cfg.dot	2023-06-07 19:34:48.317388398 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/83-cfg.dot	2023-06-07 19:34:54.917387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallCharMethodA" {  
-"3628" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1172</SUB>> ]
-"3646" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1173</SUB>> ]
-"3665" [label = <(soa,soa(env))<SUB>1174</SUB>> ]
-"3667" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();)<SUB>1175</SUB>> ]
-"3668" [label = <(GetC,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC())<SUB>1175</SUB>> ]
-"3669" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC)<SUB>1175</SUB>> ]
-"3632" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1172</SUB>> ]
-"3650" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1173</SUB>> ]
-"3670" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1175</SUB>> ]
-"3675" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1175</SUB>> ]
-"3633" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1172</SUB>> ]
-"3637" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1172</SUB>> ]
-"3644" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1172</SUB>> ]
-"3651" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1173</SUB>> ]
-"3655" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1173</SUB>> ]
-"3662" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1173</SUB>> ]
-"3638" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1172</SUB>> ]
-"3656" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1173</SUB>> ]
-"3639" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1172</SUB>> ]
-"3641" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1172</SUB>> ]
-"3657" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1173</SUB>> ]
-"3659" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1173</SUB>> ]
-"3622" [label = <(METHOD,CallCharMethodA)<SUB>1171</SUB>> ]
-"3676" [label = <(METHOD_RETURN,jchar)<SUB>1171</SUB>> ]
+"3628" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1171</SUB>> ]
+"3646" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1172</SUB>> ]
+"3665" [label = <(soa,soa(env))<SUB>1173</SUB>> ]
+"3667" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC();)<SUB>1174</SUB>> ]
+"3668" [label = <(GetC,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC())<SUB>1174</SUB>> ]
+"3669" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetC)<SUB>1174</SUB>> ]
+"3632" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1171</SUB>> ]
+"3650" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1172</SUB>> ]
+"3670" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1174</SUB>> ]
+"3675" [label = <(FIELD_IDENTIFIER,GetC,GetC)<SUB>1174</SUB>> ]
+"3633" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1171</SUB>> ]
+"3637" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1171</SUB>> ]
+"3644" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1171</SUB>> ]
+"3651" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1172</SUB>> ]
+"3655" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1172</SUB>> ]
+"3662" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1172</SUB>> ]
+"3638" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1171</SUB>> ]
+"3656" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1172</SUB>> ]
+"3639" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1171</SUB>> ]
+"3641" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1171</SUB>> ]
+"3657" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1172</SUB>> ]
+"3659" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1172</SUB>> ]
+"3622" [label = <(METHOD,CallCharMethodA)<SUB>1170</SUB>> ]
+"3676" [label = <(METHOD_RETURN,jchar)<SUB>1170</SUB>> ]
   "3628" -> "3633" 
   "3628" -> "3646" 
   "3646" -> "3651" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/84-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/84-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/84-cfg.dot	2023-06-07 19:34:48.317388398 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/84-cfg.dot	2023-06-07 19:34:54.917387783 +0330
@@ -1,32 +1,32 @@
 digraph "CallDoubleMethod" {  
-"3684" [label = <(va_start,va_start(ap, mid))<SUB>1180</SUB>> ]
-"3688" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1181</SUB>> ]
-"3691" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1182</SUB>> ]
-"3709" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1183</SUB>> ]
-"3728" [label = <(soa,soa(env))<SUB>1184</SUB>> ]
-"3731" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1185</SUB>> ]
-"3737" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1186</SUB>> ]
-"3689" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1181</SUB>> ]
-"3732" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1185</SUB>> ]
-"3738" [label = <(GetD,result.GetD())<SUB>1186</SUB>> ]
-"3739" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1186</SUB>> ]
-"3695" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1182</SUB>> ]
-"3713" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1183</SUB>> ]
-"3741" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1186</SUB>> ]
-"3696" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1182</SUB>> ]
-"3700" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1182</SUB>> ]
-"3707" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1182</SUB>> ]
-"3714" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1183</SUB>> ]
-"3718" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1183</SUB>> ]
-"3725" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1183</SUB>> ]
-"3701" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1182</SUB>> ]
-"3719" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1183</SUB>> ]
-"3702" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1182</SUB>> ]
-"3704" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1182</SUB>> ]
-"3720" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1183</SUB>> ]
-"3722" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1183</SUB>> ]
-"3678" [label = <(METHOD,CallDoubleMethod)<SUB>1178</SUB>> ]
-"3742" [label = <(METHOD_RETURN,jdouble)<SUB>1178</SUB>> ]
+"3684" [label = <(va_start,va_start(ap, mid))<SUB>1179</SUB>> ]
+"3688" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1180</SUB>> ]
+"3691" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1181</SUB>> ]
+"3709" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1182</SUB>> ]
+"3728" [label = <(soa,soa(env))<SUB>1183</SUB>> ]
+"3731" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1184</SUB>> ]
+"3737" [label = <(RETURN,return result.GetD();,return result.GetD();)<SUB>1185</SUB>> ]
+"3689" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1180</SUB>> ]
+"3732" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1184</SUB>> ]
+"3738" [label = <(GetD,result.GetD())<SUB>1185</SUB>> ]
+"3739" [label = <(&lt;operator&gt;.fieldAccess,result.GetD)<SUB>1185</SUB>> ]
+"3695" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1181</SUB>> ]
+"3713" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1182</SUB>> ]
+"3741" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1185</SUB>> ]
+"3696" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1181</SUB>> ]
+"3700" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1181</SUB>> ]
+"3707" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1181</SUB>> ]
+"3714" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1182</SUB>> ]
+"3718" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1182</SUB>> ]
+"3725" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1182</SUB>> ]
+"3701" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1181</SUB>> ]
+"3719" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1182</SUB>> ]
+"3702" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1181</SUB>> ]
+"3704" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1181</SUB>> ]
+"3720" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1182</SUB>> ]
+"3722" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1182</SUB>> ]
+"3678" [label = <(METHOD,CallDoubleMethod)<SUB>1177</SUB>> ]
+"3742" [label = <(METHOD_RETURN,jdouble)<SUB>1177</SUB>> ]
   "3684" -> "3689" 
   "3688" -> "3691" 
   "3691" -> "3696" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/85-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/85-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/85-cfg.dot	2023-06-07 19:34:48.317388398 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/85-cfg.dot	2023-06-07 19:34:54.917387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallDoubleMethodV" {  
-"3750" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1190</SUB>> ]
-"3768" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1191</SUB>> ]
-"3787" [label = <(soa,soa(env))<SUB>1192</SUB>> ]
-"3789" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1193</SUB>> ]
-"3790" [label = <(GetD,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD())<SUB>1193</SUB>> ]
-"3791" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD)<SUB>1193</SUB>> ]
-"3754" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1190</SUB>> ]
-"3772" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1191</SUB>> ]
-"3792" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1193</SUB>> ]
-"3797" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1193</SUB>> ]
-"3755" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1190</SUB>> ]
-"3759" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1190</SUB>> ]
-"3766" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1190</SUB>> ]
-"3773" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1191</SUB>> ]
-"3777" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1191</SUB>> ]
-"3784" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1191</SUB>> ]
-"3760" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1190</SUB>> ]
-"3778" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1191</SUB>> ]
-"3761" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1190</SUB>> ]
-"3763" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1190</SUB>> ]
-"3779" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1191</SUB>> ]
-"3781" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1191</SUB>> ]
-"3744" [label = <(METHOD,CallDoubleMethodV)<SUB>1189</SUB>> ]
-"3798" [label = <(METHOD_RETURN,jdouble)<SUB>1189</SUB>> ]
+"3750" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1189</SUB>> ]
+"3768" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1190</SUB>> ]
+"3787" [label = <(soa,soa(env))<SUB>1191</SUB>> ]
+"3789" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD();)<SUB>1192</SUB>> ]
+"3790" [label = <(GetD,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD())<SUB>1192</SUB>> ]
+"3791" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetD)<SUB>1192</SUB>> ]
+"3754" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1189</SUB>> ]
+"3772" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1190</SUB>> ]
+"3792" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1192</SUB>> ]
+"3797" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1192</SUB>> ]
+"3755" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1189</SUB>> ]
+"3759" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1189</SUB>> ]
+"3766" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1189</SUB>> ]
+"3773" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1190</SUB>> ]
+"3777" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1190</SUB>> ]
+"3784" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1190</SUB>> ]
+"3760" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1189</SUB>> ]
+"3778" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1190</SUB>> ]
+"3761" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1189</SUB>> ]
+"3763" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1189</SUB>> ]
+"3779" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1190</SUB>> ]
+"3781" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1190</SUB>> ]
+"3744" [label = <(METHOD,CallDoubleMethodV)<SUB>1188</SUB>> ]
+"3798" [label = <(METHOD_RETURN,jdouble)<SUB>1188</SUB>> ]
   "3750" -> "3755" 
   "3750" -> "3768" 
   "3768" -> "3773" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/86-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/86-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/86-cfg.dot	2023-06-07 19:34:48.317388398 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/86-cfg.dot	2023-06-07 19:34:54.917387783 +0330
@@ -1,28 +1,28 @@
 digraph "CallDoubleMethodA" {  
-"3806" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1197</SUB>> ]
-"3824" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1198</SUB>> ]
-"3843" [label = <(soa,soa(env))<SUB>1199</SUB>> ]
-"3845" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();)<SUB>1200</SUB>> ]
-"3846" [label = <(GetD,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD())<SUB>1200</SUB>> ]
-"3847" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD)<SUB>1200</SUB>> ]
-"3810" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1197</SUB>> ]
-"3828" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1198</SUB>> ]
-"3848" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1200</SUB>> ]
-"3853" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1200</SUB>> ]
-"3811" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1197</SUB>> ]
-"3815" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1197</SUB>> ]
-"3822" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1197</SUB>> ]
-"3829" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1198</SUB>> ]
-"3833" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1198</SUB>> ]
-"3840" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1198</SUB>> ]
-"3816" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1197</SUB>> ]
-"3834" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1198</SUB>> ]
-"3817" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1197</SUB>> ]
-"3819" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1197</SUB>> ]
-"3835" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1198</SUB>> ]
-"3837" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1198</SUB>> ]
-"3800" [label = <(METHOD,CallDoubleMethodA)<SUB>1196</SUB>> ]
-"3854" [label = <(METHOD_RETURN,jdouble)<SUB>1196</SUB>> ]
+"3806" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1196</SUB>> ]
+"3824" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1197</SUB>> ]
+"3843" [label = <(soa,soa(env))<SUB>1198</SUB>> ]
+"3845" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD();)<SUB>1199</SUB>> ]
+"3846" [label = <(GetD,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD())<SUB>1199</SUB>> ]
+"3847" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetD)<SUB>1199</SUB>> ]
+"3810" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1196</SUB>> ]
+"3828" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1197</SUB>> ]
+"3848" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1199</SUB>> ]
+"3853" [label = <(FIELD_IDENTIFIER,GetD,GetD)<SUB>1199</SUB>> ]
+"3811" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1196</SUB>> ]
+"3815" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1196</SUB>> ]
+"3822" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1196</SUB>> ]
+"3829" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1197</SUB>> ]
+"3833" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1197</SUB>> ]
+"3840" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1197</SUB>> ]
+"3816" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1196</SUB>> ]
+"3834" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1197</SUB>> ]
+"3817" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1196</SUB>> ]
+"3819" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1196</SUB>> ]
+"3835" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1197</SUB>> ]
+"3837" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1197</SUB>> ]
+"3800" [label = <(METHOD,CallDoubleMethodA)<SUB>1195</SUB>> ]
+"3854" [label = <(METHOD_RETURN,jdouble)<SUB>1195</SUB>> ]
   "3806" -> "3811" 
   "3806" -> "3824" 
   "3824" -> "3829" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/87-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/87-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/87-cfg.dot	2023-06-07 19:34:48.317388398 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/87-cfg.dot	2023-06-07 19:34:54.917387783 +0330
@@ -1,32 +1,32 @@
 digraph "CallFloatMethod" {  
-"3862" [label = <(va_start,va_start(ap, mid))<SUB>1205</SUB>> ]
-"3866" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1206</SUB>> ]
-"3869" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1207</SUB>> ]
-"3887" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1208</SUB>> ]
-"3906" [label = <(soa,soa(env))<SUB>1209</SUB>> ]
-"3909" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1210</SUB>> ]
-"3915" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1211</SUB>> ]
-"3867" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1206</SUB>> ]
-"3910" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1210</SUB>> ]
-"3916" [label = <(GetF,result.GetF())<SUB>1211</SUB>> ]
-"3917" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1211</SUB>> ]
-"3873" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1207</SUB>> ]
-"3891" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1208</SUB>> ]
-"3919" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1211</SUB>> ]
-"3874" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1207</SUB>> ]
-"3878" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1207</SUB>> ]
-"3885" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1207</SUB>> ]
-"3892" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1208</SUB>> ]
-"3896" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1208</SUB>> ]
-"3903" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1208</SUB>> ]
-"3879" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1207</SUB>> ]
-"3897" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1208</SUB>> ]
-"3880" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1207</SUB>> ]
-"3882" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1207</SUB>> ]
-"3898" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1208</SUB>> ]
-"3900" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1208</SUB>> ]
-"3856" [label = <(METHOD,CallFloatMethod)<SUB>1203</SUB>> ]
-"3920" [label = <(METHOD_RETURN,jfloat)<SUB>1203</SUB>> ]
+"3862" [label = <(va_start,va_start(ap, mid))<SUB>1204</SUB>> ]
+"3866" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1205</SUB>> ]
+"3869" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1206</SUB>> ]
+"3887" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1207</SUB>> ]
+"3906" [label = <(soa,soa(env))<SUB>1208</SUB>> ]
+"3909" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1209</SUB>> ]
+"3915" [label = <(RETURN,return result.GetF();,return result.GetF();)<SUB>1210</SUB>> ]
+"3867" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1205</SUB>> ]
+"3910" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1209</SUB>> ]
+"3916" [label = <(GetF,result.GetF())<SUB>1210</SUB>> ]
+"3917" [label = <(&lt;operator&gt;.fieldAccess,result.GetF)<SUB>1210</SUB>> ]
+"3873" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1206</SUB>> ]
+"3891" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1207</SUB>> ]
+"3919" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1210</SUB>> ]
+"3874" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1206</SUB>> ]
+"3878" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1206</SUB>> ]
+"3885" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1206</SUB>> ]
+"3892" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1207</SUB>> ]
+"3896" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1207</SUB>> ]
+"3903" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1207</SUB>> ]
+"3879" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1206</SUB>> ]
+"3897" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1207</SUB>> ]
+"3880" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1206</SUB>> ]
+"3882" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1206</SUB>> ]
+"3898" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1207</SUB>> ]
+"3900" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1207</SUB>> ]
+"3856" [label = <(METHOD,CallFloatMethod)<SUB>1202</SUB>> ]
+"3920" [label = <(METHOD_RETURN,jfloat)<SUB>1202</SUB>> ]
   "3862" -> "3867" 
   "3866" -> "3869" 
   "3869" -> "3874" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/88-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/88-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/88-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/88-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,28 +1,28 @@
 digraph "CallFloatMethodV" {  
-"3928" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1215</SUB>> ]
-"3946" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1216</SUB>> ]
-"3965" [label = <(soa,soa(env))<SUB>1217</SUB>> ]
-"3967" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1218</SUB>> ]
-"3968" [label = <(GetF,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF())<SUB>1218</SUB>> ]
-"3969" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF)<SUB>1218</SUB>> ]
-"3932" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1215</SUB>> ]
-"3950" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1216</SUB>> ]
-"3970" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1218</SUB>> ]
-"3975" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1218</SUB>> ]
-"3933" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1215</SUB>> ]
-"3937" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1215</SUB>> ]
-"3944" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1215</SUB>> ]
-"3951" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1216</SUB>> ]
-"3955" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1216</SUB>> ]
-"3962" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1216</SUB>> ]
-"3938" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1215</SUB>> ]
-"3956" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1216</SUB>> ]
-"3939" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1215</SUB>> ]
-"3941" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1215</SUB>> ]
-"3957" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1216</SUB>> ]
-"3959" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1216</SUB>> ]
-"3922" [label = <(METHOD,CallFloatMethodV)<SUB>1214</SUB>> ]
-"3976" [label = <(METHOD_RETURN,jfloat)<SUB>1214</SUB>> ]
+"3928" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1214</SUB>> ]
+"3946" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1215</SUB>> ]
+"3965" [label = <(soa,soa(env))<SUB>1216</SUB>> ]
+"3967" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF();)<SUB>1217</SUB>> ]
+"3968" [label = <(GetF,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF())<SUB>1217</SUB>> ]
+"3969" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetF)<SUB>1217</SUB>> ]
+"3932" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1214</SUB>> ]
+"3950" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1215</SUB>> ]
+"3970" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1217</SUB>> ]
+"3975" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1217</SUB>> ]
+"3933" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1214</SUB>> ]
+"3937" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1214</SUB>> ]
+"3944" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1214</SUB>> ]
+"3951" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1215</SUB>> ]
+"3955" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1215</SUB>> ]
+"3962" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1215</SUB>> ]
+"3938" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1214</SUB>> ]
+"3956" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1215</SUB>> ]
+"3939" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1214</SUB>> ]
+"3941" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1214</SUB>> ]
+"3957" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1215</SUB>> ]
+"3959" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1215</SUB>> ]
+"3922" [label = <(METHOD,CallFloatMethodV)<SUB>1213</SUB>> ]
+"3976" [label = <(METHOD_RETURN,jfloat)<SUB>1213</SUB>> ]
   "3928" -> "3933" 
   "3928" -> "3946" 
   "3946" -> "3951" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/89-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/89-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/89-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/89-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,28 +1,28 @@
 digraph "CallFloatMethodA" {  
-"3984" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1222</SUB>> ]
-"4002" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1223</SUB>> ]
-"4021" [label = <(soa,soa(env))<SUB>1224</SUB>> ]
-"4023" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();)<SUB>1225</SUB>> ]
-"4024" [label = <(GetF,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF())<SUB>1225</SUB>> ]
-"4025" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF)<SUB>1225</SUB>> ]
-"3988" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1222</SUB>> ]
-"4006" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1223</SUB>> ]
-"4026" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1225</SUB>> ]
-"4031" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1225</SUB>> ]
-"3989" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1222</SUB>> ]
-"3993" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1222</SUB>> ]
-"4000" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1222</SUB>> ]
-"4007" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1223</SUB>> ]
-"4011" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1223</SUB>> ]
-"4018" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1223</SUB>> ]
-"3994" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1222</SUB>> ]
-"4012" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1223</SUB>> ]
-"3995" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1222</SUB>> ]
-"3997" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1222</SUB>> ]
-"4013" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1223</SUB>> ]
-"4015" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1223</SUB>> ]
-"3978" [label = <(METHOD,CallFloatMethodA)<SUB>1221</SUB>> ]
-"4032" [label = <(METHOD_RETURN,jfloat)<SUB>1221</SUB>> ]
+"3984" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1221</SUB>> ]
+"4002" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1222</SUB>> ]
+"4021" [label = <(soa,soa(env))<SUB>1223</SUB>> ]
+"4023" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF();)<SUB>1224</SUB>> ]
+"4024" [label = <(GetF,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF())<SUB>1224</SUB>> ]
+"4025" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetF)<SUB>1224</SUB>> ]
+"3988" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1221</SUB>> ]
+"4006" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1222</SUB>> ]
+"4026" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1224</SUB>> ]
+"4031" [label = <(FIELD_IDENTIFIER,GetF,GetF)<SUB>1224</SUB>> ]
+"3989" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1221</SUB>> ]
+"3993" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1221</SUB>> ]
+"4000" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1221</SUB>> ]
+"4007" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1222</SUB>> ]
+"4011" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1222</SUB>> ]
+"4018" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1222</SUB>> ]
+"3994" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1221</SUB>> ]
+"4012" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1222</SUB>> ]
+"3995" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1221</SUB>> ]
+"3997" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1221</SUB>> ]
+"4013" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1222</SUB>> ]
+"4015" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1222</SUB>> ]
+"3978" [label = <(METHOD,CallFloatMethodA)<SUB>1220</SUB>> ]
+"4032" [label = <(METHOD_RETURN,jfloat)<SUB>1220</SUB>> ]
   "3984" -> "3989" 
   "3984" -> "4002" 
   "4002" -> "4007" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/9-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/9-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/9-cfg.dot	2023-06-07 19:34:48.267388402 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/9-cfg.dot	2023-06-07 19:34:54.867387789 +0330
@@ -1,16 +1,16 @@
 digraph "GetReturnAddress" {  
-"234" [label = <(DCHECK_LT,DCHECK_LT(depth, kMaxReturnAddressDepth))<SUB>168</SUB>> ]
-"242" [label = <(RETURN,return __builtin_return_address(0);,return __builtin_return_address(0);)<SUB>170</SUB>> ]
-"247" [label = <(RETURN,return __builtin_return_address(1);,return __builtin_return_address(1);)<SUB>171</SUB>> ]
-"252" [label = <(RETURN,return __builtin_return_address(2);,return __builtin_return_address(2);)<SUB>172</SUB>> ]
-"257" [label = <(RETURN,return __builtin_return_address(3);,return __builtin_return_address(3);)<SUB>173</SUB>> ]
-"261" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>175</SUB>> ]
-"243" [label = <(__builtin_return_address,__builtin_return_address(0))<SUB>170</SUB>> ]
-"248" [label = <(__builtin_return_address,__builtin_return_address(1))<SUB>171</SUB>> ]
-"253" [label = <(__builtin_return_address,__builtin_return_address(2))<SUB>172</SUB>> ]
-"258" [label = <(__builtin_return_address,__builtin_return_address(3))<SUB>173</SUB>> ]
-"231" [label = <(METHOD,GetReturnAddress)<SUB>167</SUB>> ]
-"263" [label = <(METHOD_RETURN,void*)<SUB>167</SUB>> ]
+"234" [label = <(DCHECK_LT,DCHECK_LT(depth, kMaxReturnAddressDepth))<SUB>167</SUB>> ]
+"242" [label = <(RETURN,return __builtin_return_address(0);,return __builtin_return_address(0);)<SUB>169</SUB>> ]
+"247" [label = <(RETURN,return __builtin_return_address(1);,return __builtin_return_address(1);)<SUB>170</SUB>> ]
+"252" [label = <(RETURN,return __builtin_return_address(2);,return __builtin_return_address(2);)<SUB>171</SUB>> ]
+"257" [label = <(RETURN,return __builtin_return_address(3);,return __builtin_return_address(3);)<SUB>172</SUB>> ]
+"261" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>174</SUB>> ]
+"243" [label = <(__builtin_return_address,__builtin_return_address(0))<SUB>169</SUB>> ]
+"248" [label = <(__builtin_return_address,__builtin_return_address(1))<SUB>170</SUB>> ]
+"253" [label = <(__builtin_return_address,__builtin_return_address(2))<SUB>171</SUB>> ]
+"258" [label = <(__builtin_return_address,__builtin_return_address(3))<SUB>172</SUB>> ]
+"231" [label = <(METHOD,GetReturnAddress)<SUB>166</SUB>> ]
+"263" [label = <(METHOD_RETURN,void*)<SUB>166</SUB>> ]
   "234" -> "243" 
   "234" -> "248" 
   "234" -> "253" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/90-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/90-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/90-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/90-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,32 +1,32 @@
 digraph "CallIntMethod" {  
-"4040" [label = <(va_start,va_start(ap, mid))<SUB>1230</SUB>> ]
-"4044" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1231</SUB>> ]
-"4047" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1232</SUB>> ]
-"4065" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1233</SUB>> ]
-"4084" [label = <(soa,soa(env))<SUB>1234</SUB>> ]
-"4087" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1235</SUB>> ]
-"4093" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1236</SUB>> ]
-"4045" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1231</SUB>> ]
-"4088" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1235</SUB>> ]
-"4094" [label = <(GetI,result.GetI())<SUB>1236</SUB>> ]
-"4095" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1236</SUB>> ]
-"4051" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1232</SUB>> ]
-"4069" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1233</SUB>> ]
-"4097" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1236</SUB>> ]
-"4052" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1232</SUB>> ]
-"4056" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1232</SUB>> ]
-"4063" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1232</SUB>> ]
-"4070" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1233</SUB>> ]
-"4074" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1233</SUB>> ]
-"4081" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1233</SUB>> ]
-"4057" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1232</SUB>> ]
-"4075" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1233</SUB>> ]
-"4058" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1232</SUB>> ]
-"4060" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1232</SUB>> ]
-"4076" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1233</SUB>> ]
-"4078" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1233</SUB>> ]
-"4034" [label = <(METHOD,CallIntMethod)<SUB>1228</SUB>> ]
-"4098" [label = <(METHOD_RETURN,jint)<SUB>1228</SUB>> ]
+"4040" [label = <(va_start,va_start(ap, mid))<SUB>1229</SUB>> ]
+"4044" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1230</SUB>> ]
+"4047" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1231</SUB>> ]
+"4065" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1232</SUB>> ]
+"4084" [label = <(soa,soa(env))<SUB>1233</SUB>> ]
+"4087" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1234</SUB>> ]
+"4093" [label = <(RETURN,return result.GetI();,return result.GetI();)<SUB>1235</SUB>> ]
+"4045" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1230</SUB>> ]
+"4088" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1234</SUB>> ]
+"4094" [label = <(GetI,result.GetI())<SUB>1235</SUB>> ]
+"4095" [label = <(&lt;operator&gt;.fieldAccess,result.GetI)<SUB>1235</SUB>> ]
+"4051" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1231</SUB>> ]
+"4069" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1232</SUB>> ]
+"4097" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1235</SUB>> ]
+"4052" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1231</SUB>> ]
+"4056" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1231</SUB>> ]
+"4063" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1231</SUB>> ]
+"4070" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1232</SUB>> ]
+"4074" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1232</SUB>> ]
+"4081" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1232</SUB>> ]
+"4057" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1231</SUB>> ]
+"4075" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1232</SUB>> ]
+"4058" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1231</SUB>> ]
+"4060" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1231</SUB>> ]
+"4076" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1232</SUB>> ]
+"4078" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1232</SUB>> ]
+"4034" [label = <(METHOD,CallIntMethod)<SUB>1227</SUB>> ]
+"4098" [label = <(METHOD_RETURN,jint)<SUB>1227</SUB>> ]
   "4040" -> "4045" 
   "4044" -> "4047" 
   "4047" -> "4052" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/91-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/91-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/91-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/91-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,28 +1,28 @@
 digraph "CallIntMethodV" {  
-"4106" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1240</SUB>> ]
-"4124" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1241</SUB>> ]
-"4143" [label = <(soa,soa(env))<SUB>1242</SUB>> ]
-"4145" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1243</SUB>> ]
-"4146" [label = <(GetI,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI())<SUB>1243</SUB>> ]
-"4147" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI)<SUB>1243</SUB>> ]
-"4110" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1240</SUB>> ]
-"4128" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1241</SUB>> ]
-"4148" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1243</SUB>> ]
-"4153" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1243</SUB>> ]
-"4111" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1240</SUB>> ]
-"4115" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1240</SUB>> ]
-"4122" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1240</SUB>> ]
-"4129" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1241</SUB>> ]
-"4133" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1241</SUB>> ]
-"4140" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1241</SUB>> ]
-"4116" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1240</SUB>> ]
-"4134" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1241</SUB>> ]
-"4117" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1240</SUB>> ]
-"4119" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1240</SUB>> ]
-"4135" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1241</SUB>> ]
-"4137" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1241</SUB>> ]
-"4100" [label = <(METHOD,CallIntMethodV)<SUB>1239</SUB>> ]
-"4154" [label = <(METHOD_RETURN,jint)<SUB>1239</SUB>> ]
+"4106" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1239</SUB>> ]
+"4124" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1240</SUB>> ]
+"4143" [label = <(soa,soa(env))<SUB>1241</SUB>> ]
+"4145" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI();)<SUB>1242</SUB>> ]
+"4146" [label = <(GetI,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI())<SUB>1242</SUB>> ]
+"4147" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetI)<SUB>1242</SUB>> ]
+"4110" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1239</SUB>> ]
+"4128" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1240</SUB>> ]
+"4148" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1242</SUB>> ]
+"4153" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1242</SUB>> ]
+"4111" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1239</SUB>> ]
+"4115" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1239</SUB>> ]
+"4122" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1239</SUB>> ]
+"4129" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1240</SUB>> ]
+"4133" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1240</SUB>> ]
+"4140" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1240</SUB>> ]
+"4116" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1239</SUB>> ]
+"4134" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1240</SUB>> ]
+"4117" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1239</SUB>> ]
+"4119" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1239</SUB>> ]
+"4135" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1240</SUB>> ]
+"4137" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1240</SUB>> ]
+"4100" [label = <(METHOD,CallIntMethodV)<SUB>1238</SUB>> ]
+"4154" [label = <(METHOD_RETURN,jint)<SUB>1238</SUB>> ]
   "4106" -> "4111" 
   "4106" -> "4124" 
   "4124" -> "4129" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/92-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/92-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/92-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/92-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,28 +1,28 @@
 digraph "CallIntMethodA" {  
-"4162" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1247</SUB>> ]
-"4180" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1248</SUB>> ]
-"4199" [label = <(soa,soa(env))<SUB>1249</SUB>> ]
-"4201" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();)<SUB>1250</SUB>> ]
-"4202" [label = <(GetI,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI())<SUB>1250</SUB>> ]
-"4203" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI)<SUB>1250</SUB>> ]
-"4166" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1247</SUB>> ]
-"4184" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1248</SUB>> ]
-"4204" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1250</SUB>> ]
-"4209" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1250</SUB>> ]
-"4167" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1247</SUB>> ]
-"4171" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1247</SUB>> ]
-"4178" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1247</SUB>> ]
-"4185" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1248</SUB>> ]
-"4189" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1248</SUB>> ]
-"4196" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1248</SUB>> ]
-"4172" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1247</SUB>> ]
-"4190" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1248</SUB>> ]
-"4173" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1247</SUB>> ]
-"4175" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1247</SUB>> ]
-"4191" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1248</SUB>> ]
-"4193" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1248</SUB>> ]
-"4156" [label = <(METHOD,CallIntMethodA)<SUB>1246</SUB>> ]
-"4210" [label = <(METHOD_RETURN,jint)<SUB>1246</SUB>> ]
+"4162" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1246</SUB>> ]
+"4180" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1247</SUB>> ]
+"4199" [label = <(soa,soa(env))<SUB>1248</SUB>> ]
+"4201" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI();)<SUB>1249</SUB>> ]
+"4202" [label = <(GetI,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI())<SUB>1249</SUB>> ]
+"4203" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetI)<SUB>1249</SUB>> ]
+"4166" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1246</SUB>> ]
+"4184" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1247</SUB>> ]
+"4204" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1249</SUB>> ]
+"4209" [label = <(FIELD_IDENTIFIER,GetI,GetI)<SUB>1249</SUB>> ]
+"4167" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1246</SUB>> ]
+"4171" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1246</SUB>> ]
+"4178" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1246</SUB>> ]
+"4185" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1247</SUB>> ]
+"4189" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1247</SUB>> ]
+"4196" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1247</SUB>> ]
+"4172" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1246</SUB>> ]
+"4190" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1247</SUB>> ]
+"4173" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1246</SUB>> ]
+"4175" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1246</SUB>> ]
+"4191" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1247</SUB>> ]
+"4193" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1247</SUB>> ]
+"4156" [label = <(METHOD,CallIntMethodA)<SUB>1245</SUB>> ]
+"4210" [label = <(METHOD_RETURN,jint)<SUB>1245</SUB>> ]
   "4162" -> "4167" 
   "4162" -> "4180" 
   "4180" -> "4185" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/93-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/93-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/93-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/93-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,32 +1,32 @@
 digraph "CallLongMethod" {  
-"4218" [label = <(va_start,va_start(ap, mid))<SUB>1255</SUB>> ]
-"4222" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1256</SUB>> ]
-"4225" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1257</SUB>> ]
-"4243" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1258</SUB>> ]
-"4262" [label = <(soa,soa(env))<SUB>1259</SUB>> ]
-"4265" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1260</SUB>> ]
-"4271" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1261</SUB>> ]
-"4223" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1256</SUB>> ]
-"4266" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1260</SUB>> ]
-"4272" [label = <(GetJ,result.GetJ())<SUB>1261</SUB>> ]
-"4273" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1261</SUB>> ]
-"4229" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1257</SUB>> ]
-"4247" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1258</SUB>> ]
-"4275" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1261</SUB>> ]
-"4230" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1257</SUB>> ]
-"4234" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1257</SUB>> ]
-"4241" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1257</SUB>> ]
-"4248" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1258</SUB>> ]
-"4252" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1258</SUB>> ]
-"4259" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1258</SUB>> ]
-"4235" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1257</SUB>> ]
-"4253" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1258</SUB>> ]
-"4236" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1257</SUB>> ]
-"4238" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1257</SUB>> ]
-"4254" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1258</SUB>> ]
-"4256" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1258</SUB>> ]
-"4212" [label = <(METHOD,CallLongMethod)<SUB>1253</SUB>> ]
-"4276" [label = <(METHOD_RETURN,jlong)<SUB>1253</SUB>> ]
+"4218" [label = <(va_start,va_start(ap, mid))<SUB>1254</SUB>> ]
+"4222" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1255</SUB>> ]
+"4225" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1256</SUB>> ]
+"4243" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1257</SUB>> ]
+"4262" [label = <(soa,soa(env))<SUB>1258</SUB>> ]
+"4265" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1259</SUB>> ]
+"4271" [label = <(RETURN,return result.GetJ();,return result.GetJ();)<SUB>1260</SUB>> ]
+"4223" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1255</SUB>> ]
+"4266" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1259</SUB>> ]
+"4272" [label = <(GetJ,result.GetJ())<SUB>1260</SUB>> ]
+"4273" [label = <(&lt;operator&gt;.fieldAccess,result.GetJ)<SUB>1260</SUB>> ]
+"4229" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1256</SUB>> ]
+"4247" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1257</SUB>> ]
+"4275" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1260</SUB>> ]
+"4230" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1256</SUB>> ]
+"4234" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1256</SUB>> ]
+"4241" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1256</SUB>> ]
+"4248" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1257</SUB>> ]
+"4252" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1257</SUB>> ]
+"4259" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1257</SUB>> ]
+"4235" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1256</SUB>> ]
+"4253" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1257</SUB>> ]
+"4236" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1256</SUB>> ]
+"4238" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1256</SUB>> ]
+"4254" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1257</SUB>> ]
+"4256" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1257</SUB>> ]
+"4212" [label = <(METHOD,CallLongMethod)<SUB>1252</SUB>> ]
+"4276" [label = <(METHOD_RETURN,jlong)<SUB>1252</SUB>> ]
   "4218" -> "4223" 
   "4222" -> "4225" 
   "4225" -> "4230" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/94-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/94-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/94-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/94-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,28 +1,28 @@
 digraph "CallLongMethodV" {  
-"4284" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1265</SUB>> ]
-"4302" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1266</SUB>> ]
-"4321" [label = <(soa,soa(env))<SUB>1267</SUB>> ]
-"4323" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1268</SUB>> ]
-"4324" [label = <(GetJ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1268</SUB>> ]
-"4325" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1268</SUB>> ]
-"4288" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1265</SUB>> ]
-"4306" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1266</SUB>> ]
-"4326" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1268</SUB>> ]
-"4331" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1268</SUB>> ]
-"4289" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1265</SUB>> ]
-"4293" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1265</SUB>> ]
-"4300" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1265</SUB>> ]
-"4307" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1266</SUB>> ]
-"4311" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1266</SUB>> ]
-"4318" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1266</SUB>> ]
-"4294" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1265</SUB>> ]
-"4312" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1266</SUB>> ]
-"4295" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1265</SUB>> ]
-"4297" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1265</SUB>> ]
-"4313" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1266</SUB>> ]
-"4315" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1266</SUB>> ]
-"4278" [label = <(METHOD,CallLongMethodV)<SUB>1264</SUB>> ]
-"4332" [label = <(METHOD_RETURN,jlong)<SUB>1264</SUB>> ]
+"4284" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1264</SUB>> ]
+"4302" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1265</SUB>> ]
+"4321" [label = <(soa,soa(env))<SUB>1266</SUB>> ]
+"4323" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ();)<SUB>1267</SUB>> ]
+"4324" [label = <(GetJ,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ())<SUB>1267</SUB>> ]
+"4325" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetJ)<SUB>1267</SUB>> ]
+"4288" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1264</SUB>> ]
+"4306" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1265</SUB>> ]
+"4326" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1267</SUB>> ]
+"4331" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1267</SUB>> ]
+"4289" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1264</SUB>> ]
+"4293" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1264</SUB>> ]
+"4300" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1264</SUB>> ]
+"4307" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1265</SUB>> ]
+"4311" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1265</SUB>> ]
+"4318" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1265</SUB>> ]
+"4294" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1264</SUB>> ]
+"4312" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1265</SUB>> ]
+"4295" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1264</SUB>> ]
+"4297" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1264</SUB>> ]
+"4313" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1265</SUB>> ]
+"4315" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1265</SUB>> ]
+"4278" [label = <(METHOD,CallLongMethodV)<SUB>1263</SUB>> ]
+"4332" [label = <(METHOD_RETURN,jlong)<SUB>1263</SUB>> ]
   "4284" -> "4289" 
   "4284" -> "4302" 
   "4302" -> "4307" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/95-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/95-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/95-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/95-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,28 +1,28 @@
 digraph "CallLongMethodA" {  
-"4340" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1272</SUB>> ]
-"4358" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1273</SUB>> ]
-"4377" [label = <(soa,soa(env))<SUB>1274</SUB>> ]
-"4379" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();)<SUB>1275</SUB>> ]
-"4380" [label = <(GetJ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ())<SUB>1275</SUB>> ]
-"4381" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ)<SUB>1275</SUB>> ]
-"4344" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1272</SUB>> ]
-"4362" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1273</SUB>> ]
-"4382" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1275</SUB>> ]
-"4387" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1275</SUB>> ]
-"4345" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1272</SUB>> ]
-"4349" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1272</SUB>> ]
-"4356" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1272</SUB>> ]
-"4363" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1273</SUB>> ]
-"4367" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1273</SUB>> ]
-"4374" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1273</SUB>> ]
-"4350" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1272</SUB>> ]
-"4368" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1273</SUB>> ]
-"4351" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1272</SUB>> ]
-"4353" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1272</SUB>> ]
-"4369" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1273</SUB>> ]
-"4371" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1273</SUB>> ]
-"4334" [label = <(METHOD,CallLongMethodA)<SUB>1271</SUB>> ]
-"4388" [label = <(METHOD_RETURN,jlong)<SUB>1271</SUB>> ]
+"4340" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1271</SUB>> ]
+"4358" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1272</SUB>> ]
+"4377" [label = <(soa,soa(env))<SUB>1273</SUB>> ]
+"4379" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ();)<SUB>1274</SUB>> ]
+"4380" [label = <(GetJ,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ())<SUB>1274</SUB>> ]
+"4381" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetJ)<SUB>1274</SUB>> ]
+"4344" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1271</SUB>> ]
+"4362" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1272</SUB>> ]
+"4382" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1274</SUB>> ]
+"4387" [label = <(FIELD_IDENTIFIER,GetJ,GetJ)<SUB>1274</SUB>> ]
+"4345" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1271</SUB>> ]
+"4349" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1271</SUB>> ]
+"4356" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1271</SUB>> ]
+"4363" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1272</SUB>> ]
+"4367" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1272</SUB>> ]
+"4374" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1272</SUB>> ]
+"4350" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1271</SUB>> ]
+"4368" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1272</SUB>> ]
+"4351" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1271</SUB>> ]
+"4353" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1271</SUB>> ]
+"4369" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1272</SUB>> ]
+"4371" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1272</SUB>> ]
+"4334" [label = <(METHOD,CallLongMethodA)<SUB>1270</SUB>> ]
+"4388" [label = <(METHOD_RETURN,jlong)<SUB>1270</SUB>> ]
   "4340" -> "4345" 
   "4340" -> "4358" 
   "4358" -> "4363" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/96-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/96-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/96-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/96-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,32 +1,32 @@
 digraph "CallShortMethod" {  
-"4396" [label = <(va_start,va_start(ap, mid))<SUB>1280</SUB>> ]
-"4400" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1281</SUB>> ]
-"4403" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1282</SUB>> ]
-"4421" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1283</SUB>> ]
-"4440" [label = <(soa,soa(env))<SUB>1284</SUB>> ]
-"4443" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1285</SUB>> ]
-"4449" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1286</SUB>> ]
-"4401" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1281</SUB>> ]
-"4444" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1285</SUB>> ]
-"4450" [label = <(GetS,result.GetS())<SUB>1286</SUB>> ]
-"4451" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1286</SUB>> ]
-"4407" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1282</SUB>> ]
-"4425" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1283</SUB>> ]
-"4453" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1286</SUB>> ]
-"4408" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1282</SUB>> ]
-"4412" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1282</SUB>> ]
-"4419" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1282</SUB>> ]
-"4426" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1283</SUB>> ]
-"4430" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1283</SUB>> ]
-"4437" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1283</SUB>> ]
-"4413" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1282</SUB>> ]
-"4431" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1283</SUB>> ]
-"4414" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1282</SUB>> ]
-"4416" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1282</SUB>> ]
-"4432" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1283</SUB>> ]
-"4434" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1283</SUB>> ]
-"4390" [label = <(METHOD,CallShortMethod)<SUB>1278</SUB>> ]
-"4454" [label = <(METHOD_RETURN,jshort)<SUB>1278</SUB>> ]
+"4396" [label = <(va_start,va_start(ap, mid))<SUB>1279</SUB>> ]
+"4400" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1280</SUB>> ]
+"4403" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1281</SUB>> ]
+"4421" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1282</SUB>> ]
+"4440" [label = <(soa,soa(env))<SUB>1283</SUB>> ]
+"4443" [label = <(result,result(InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap)))<SUB>1284</SUB>> ]
+"4449" [label = <(RETURN,return result.GetS();,return result.GetS();)<SUB>1285</SUB>> ]
+"4401" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1280</SUB>> ]
+"4444" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1284</SUB>> ]
+"4450" [label = <(GetS,result.GetS())<SUB>1285</SUB>> ]
+"4451" [label = <(&lt;operator&gt;.fieldAccess,result.GetS)<SUB>1285</SUB>> ]
+"4407" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1281</SUB>> ]
+"4425" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1282</SUB>> ]
+"4453" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1285</SUB>> ]
+"4408" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1281</SUB>> ]
+"4412" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1281</SUB>> ]
+"4419" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1281</SUB>> ]
+"4426" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1282</SUB>> ]
+"4430" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1282</SUB>> ]
+"4437" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1282</SUB>> ]
+"4413" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1281</SUB>> ]
+"4431" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1282</SUB>> ]
+"4414" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1281</SUB>> ]
+"4416" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1281</SUB>> ]
+"4432" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1282</SUB>> ]
+"4434" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1282</SUB>> ]
+"4390" [label = <(METHOD,CallShortMethod)<SUB>1277</SUB>> ]
+"4454" [label = <(METHOD_RETURN,jshort)<SUB>1277</SUB>> ]
   "4396" -> "4401" 
   "4400" -> "4403" 
   "4403" -> "4408" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/97-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/97-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/97-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/97-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,28 +1,28 @@
 digraph "CallShortMethodV" {  
-"4462" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1290</SUB>> ]
-"4480" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1291</SUB>> ]
-"4499" [label = <(soa,soa(env))<SUB>1292</SUB>> ]
-"4501" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1293</SUB>> ]
-"4502" [label = <(GetS,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS())<SUB>1293</SUB>> ]
-"4503" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS)<SUB>1293</SUB>> ]
-"4466" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1290</SUB>> ]
-"4484" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1291</SUB>> ]
-"4504" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1293</SUB>> ]
-"4509" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1293</SUB>> ]
-"4467" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1290</SUB>> ]
-"4471" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1290</SUB>> ]
-"4478" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1290</SUB>> ]
-"4485" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1291</SUB>> ]
-"4489" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1291</SUB>> ]
-"4496" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1291</SUB>> ]
-"4472" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1290</SUB>> ]
-"4490" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1291</SUB>> ]
-"4473" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1290</SUB>> ]
-"4475" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1290</SUB>> ]
-"4491" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1291</SUB>> ]
-"4493" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1291</SUB>> ]
-"4456" [label = <(METHOD,CallShortMethodV)<SUB>1289</SUB>> ]
-"4510" [label = <(METHOD_RETURN,jshort)<SUB>1289</SUB>> ]
+"4462" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1289</SUB>> ]
+"4480" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1290</SUB>> ]
+"4499" [label = <(soa,soa(env))<SUB>1291</SUB>> ]
+"4501" [label = <(RETURN,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS();)<SUB>1292</SUB>> ]
+"4502" [label = <(GetS,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS())<SUB>1292</SUB>> ]
+"4503" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args).GetS)<SUB>1292</SUB>> ]
+"4466" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1289</SUB>> ]
+"4484" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1290</SUB>> ]
+"4504" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, args))<SUB>1292</SUB>> ]
+"4509" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1292</SUB>> ]
+"4467" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1289</SUB>> ]
+"4471" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1289</SUB>> ]
+"4478" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1289</SUB>> ]
+"4485" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1290</SUB>> ]
+"4489" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1290</SUB>> ]
+"4496" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1290</SUB>> ]
+"4472" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1289</SUB>> ]
+"4490" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1290</SUB>> ]
+"4473" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1289</SUB>> ]
+"4475" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1289</SUB>> ]
+"4491" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1290</SUB>> ]
+"4493" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1290</SUB>> ]
+"4456" [label = <(METHOD,CallShortMethodV)<SUB>1288</SUB>> ]
+"4510" [label = <(METHOD_RETURN,jshort)<SUB>1288</SUB>> ]
   "4462" -> "4467" 
   "4462" -> "4480" 
   "4480" -> "4485" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/98-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/98-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/98-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/98-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,28 +1,28 @@
 digraph "CallShortMethodA" {  
-"4518" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1297</SUB>> ]
-"4536" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1298</SUB>> ]
-"4555" [label = <(soa,soa(env))<SUB>1299</SUB>> ]
-"4557" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();)<SUB>1300</SUB>> ]
-"4558" [label = <(GetS,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS())<SUB>1300</SUB>> ]
-"4559" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS)<SUB>1300</SUB>> ]
-"4522" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1297</SUB>> ]
-"4540" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1298</SUB>> ]
-"4560" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1300</SUB>> ]
-"4565" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1300</SUB>> ]
-"4523" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1297</SUB>> ]
-"4527" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1297</SUB>> ]
-"4534" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1297</SUB>> ]
-"4541" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1298</SUB>> ]
-"4545" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1298</SUB>> ]
-"4552" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1298</SUB>> ]
-"4528" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1297</SUB>> ]
-"4546" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1298</SUB>> ]
-"4529" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1297</SUB>> ]
-"4531" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1297</SUB>> ]
-"4547" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1298</SUB>> ]
-"4549" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1298</SUB>> ]
-"4512" [label = <(METHOD,CallShortMethodA)<SUB>1296</SUB>> ]
-"4566" [label = <(METHOD_RETURN,jshort)<SUB>1296</SUB>> ]
+"4518" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1296</SUB>> ]
+"4536" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1297</SUB>> ]
+"4555" [label = <(soa,soa(env))<SUB>1298</SUB>> ]
+"4557" [label = <(RETURN,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();,return InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS();)<SUB>1299</SUB>> ]
+"4558" [label = <(GetS,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS())<SUB>1299</SUB>> ]
+"4559" [label = <(&lt;operator&gt;.fieldAccess,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args).GetS)<SUB>1299</SUB>> ]
+"4522" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1296</SUB>> ]
+"4540" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1297</SUB>> ]
+"4560" [label = <(InvokeVirtualOrInterfaceWithJValues,InvokeVirtualOrInterfaceWithJValues(soa, obj, mid, args))<SUB>1299</SUB>> ]
+"4565" [label = <(FIELD_IDENTIFIER,GetS,GetS)<SUB>1299</SUB>> ]
+"4523" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1296</SUB>> ]
+"4527" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1296</SUB>> ]
+"4534" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(obj))<SUB>1296</SUB>> ]
+"4541" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1297</SUB>> ]
+"4545" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1297</SUB>> ]
+"4552" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid),CHECK_NON_NULL_ARGUMENT_RETURN_ZERO(mid))<SUB>1297</SUB>> ]
+"4528" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1296</SUB>> ]
+"4546" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1297</SUB>> ]
+"4529" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1296</SUB>> ]
+"4531" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1296</SUB>> ]
+"4547" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1297</SUB>> ]
+"4549" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1297</SUB>> ]
+"4512" [label = <(METHOD,CallShortMethodA)<SUB>1295</SUB>> ]
+"4566" [label = <(METHOD_RETURN,jshort)<SUB>1295</SUB>> ]
   "4518" -> "4523" 
   "4518" -> "4536" 
   "4536" -> "4541" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/99-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/99-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/secure/out/99-cfg.dot	2023-06-07 19:34:48.327388397 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0394_4/vulnerable/out/99-cfg.dot	2023-06-07 19:34:54.927387784 +0330
@@ -1,27 +1,27 @@
 digraph "CallVoidMethod" {  
-"4574" [label = <(va_start,va_start(ap, mid))<SUB>1305</SUB>> ]
-"4578" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1306</SUB>> ]
-"4581" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1307</SUB>> ]
-"4598" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1308</SUB>> ]
-"4616" [label = <(soa,soa(env))<SUB>1309</SUB>> ]
-"4618" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1310</SUB>> ]
-"4579" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1306</SUB>> ]
-"4585" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1307</SUB>> ]
-"4602" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1308</SUB>> ]
-"4586" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1307</SUB>> ]
-"4590" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1307</SUB>> ]
-"4597" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1307</SUB>> ]
-"4603" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1308</SUB>> ]
-"4607" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1308</SUB>> ]
-"4614" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1308</SUB>> ]
-"4591" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1307</SUB>> ]
-"4608" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1308</SUB>> ]
-"4592" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1307</SUB>> ]
-"4594" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1307</SUB>> ]
-"4609" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1308</SUB>> ]
-"4611" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1308</SUB>> ]
-"4568" [label = <(METHOD,CallVoidMethod)<SUB>1303</SUB>> ]
-"4623" [label = <(METHOD_RETURN,void)<SUB>1303</SUB>> ]
+"4574" [label = <(va_start,va_start(ap, mid))<SUB>1304</SUB>> ]
+"4578" [label = <(free_args_later,free_args_later(&amp;ap))<SUB>1305</SUB>> ]
+"4581" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1306</SUB>> ]
+"4598" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1307</SUB>> ]
+"4616" [label = <(soa,soa(env))<SUB>1308</SUB>> ]
+"4618" [label = <(InvokeVirtualOrInterfaceWithVarArgs,InvokeVirtualOrInterfaceWithVarArgs(soa, obj, mid, ap))<SUB>1309</SUB>> ]
+"4579" [label = <(&lt;operator&gt;.addressOf,&amp;ap)<SUB>1305</SUB>> ]
+"4585" [label = <(UNLIKELY,UNLIKELY((obj) == nullptr))<SUB>1306</SUB>> ]
+"4602" [label = <(UNLIKELY,UNLIKELY((mid) == nullptr))<SUB>1307</SUB>> ]
+"4586" [label = <(&lt;operator&gt;.equals,(obj) == nullptr)<SUB>1306</SUB>> ]
+"4590" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;obj == null&quot;))<SUB>1306</SUB>> ]
+"4597" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(obj))<SUB>1306</SUB>> ]
+"4603" [label = <(&lt;operator&gt;.equals,(mid) == nullptr)<SUB>1307</SUB>> ]
+"4607" [label = <(CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),JavaVmExtFromEnv(env)-&gt;JniAbort(__FUNCTION__, &quot;mid == null&quot;))<SUB>1307</SUB>> ]
+"4614" [label = <(RETURN,CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid),CHECK_NON_NULL_ARGUMENT_RETURN_VOID(mid))<SUB>1307</SUB>> ]
+"4591" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1306</SUB>> ]
+"4608" [label = <(&lt;operator&gt;.indirectFieldAccess,JavaVmExtFromEnv(env)-&gt;JniAbort)<SUB>1307</SUB>> ]
+"4592" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1306</SUB>> ]
+"4594" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1306</SUB>> ]
+"4609" [label = <(JavaVmExtFromEnv,JavaVmExtFromEnv(env))<SUB>1307</SUB>> ]
+"4611" [label = <(FIELD_IDENTIFIER,JniAbort,JniAbort)<SUB>1307</SUB>> ]
+"4568" [label = <(METHOD,CallVoidMethod)<SUB>1302</SUB>> ]
+"4623" [label = <(METHOD_RETURN,void)<SUB>1302</SUB>> ]
   "4574" -> "4579" 
   "4578" -> "4581" 
   "4581" -> "4586" 

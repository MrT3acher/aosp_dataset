diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/0-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/0-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/0-cfg.dot	2023-06-07 19:32:15.327403175 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/0-cfg.dot	2023-06-07 19:32:19.507402786 +0330
@@ -1,5 +1,5 @@
 digraph "SensorEventConnection" {  
-"7" [label = <(METHOD,SensorEventConnection)<SUB>52</SUB>> ]
-"14" [label = <(METHOD_RETURN,ANY)<SUB>52</SUB>> ]
+"7" [label = <(METHOD,SensorEventConnection)<SUB>51</SUB>> ]
+"14" [label = <(METHOD_RETURN,ANY)<SUB>51</SUB>> ]
   "7" -> "14" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/1-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/1-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/1-cfg.dot	2023-06-07 19:32:15.327403175 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/1-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "sendEvents" {  
-"16" [label = <(METHOD,sendEvents)<SUB>55</SUB>> ]
-"22" [label = <(METHOD_RETURN,status_t)<SUB>55</SUB>> ]
+"16" [label = <(METHOD,sendEvents)<SUB>54</SUB>> ]
+"22" [label = <(METHOD_RETURN,status_t)<SUB>54</SUB>> ]
   "16" -> "22" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/10-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/10-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/10-cfg.dot	2023-06-07 19:32:15.337403173 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/10-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "dump" {  
-"62" [label = <(METHOD,dump)<SUB>65</SUB>> ]
-"65" [label = <(METHOD_RETURN,void)<SUB>65</SUB>> ]
+"62" [label = <(METHOD,dump)<SUB>64</SUB>> ]
+"65" [label = <(METHOD_RETURN,void)<SUB>64</SUB>> ]
   "62" -> "65" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/100-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/100-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/100-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/100-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "end" {  
-"2777" [label = <(METHOD,end)> ]
-"2780" [label = <(METHOD_RETURN,ANY)> ]
-  "2777" -> "2780" 
+"2762" [label = <(METHOD,end)> ]
+"2765" [label = <(METHOD_RETURN,ANY)> ]
+  "2762" -> "2765" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/101-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/101-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/101-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/101-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessThan" {  
-"2781" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
-"2785" [label = <(METHOD_RETURN,ANY)> ]
-  "2781" -> "2785" 
+"2766" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
+"2770" [label = <(METHOD_RETURN,ANY)> ]
+  "2766" -> "2770" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/102-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/102-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/102-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/102-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "getSensorInterfaceFromHandle" {  
-"2786" [label = <(METHOD,getSensorInterfaceFromHandle)> ]
-"2790" [label = <(METHOD_RETURN,ANY)> ]
-  "2786" -> "2790" 
+"2771" [label = <(METHOD,getSensorInterfaceFromHandle)> ]
+"2775" [label = <(METHOD_RETURN,ANY)> ]
+  "2771" -> "2775" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/103-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/103-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/103-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/103-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalOr" {  
-"2791" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
-"2795" [label = <(METHOD_RETURN,ANY)> ]
-  "2791" -> "2795" 
+"2776" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
+"2780" [label = <(METHOD_RETURN,ANY)> ]
+  "2776" -> "2780" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/104-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/104-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/104-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/104-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.equals" {  
-"2796" [label = <(METHOD,&lt;operator&gt;.equals)> ]
-"2800" [label = <(METHOD_RETURN,ANY)> ]
-  "2796" -> "2800" 
+"2781" [label = <(METHOD,&lt;operator&gt;.equals)> ]
+"2785" [label = <(METHOD_RETURN,ANY)> ]
+  "2781" -> "2785" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/105-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/105-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/105-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/105-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "canAccessSensor" {  
-"2801" [label = <(METHOD,canAccessSensor)> ]
-"2806" [label = <(METHOD_RETURN,ANY)> ]
-  "2801" -> "2806" 
+"2786" [label = <(METHOD,canAccessSensor)> ]
+"2791" [label = <(METHOD_RETURN,ANY)> ]
+  "2786" -> "2791" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/106-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/106-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/106-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/106-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "getSensor" {  
-"2807" [label = <(METHOD,getSensor)> ]
-"2810" [label = <(METHOD_RETURN,ANY)> ]
-  "2807" -> "2810" 
+"2792" [label = <(METHOD,getSensor)> ]
+"2795" [label = <(METHOD_RETURN,ANY)> ]
+  "2792" -> "2795" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/107-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/107-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/107-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/107-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "count" {  
-"2811" [label = <(METHOD,count)> ]
-"2815" [label = <(METHOD_RETURN,ANY)> ]
-  "2811" -> "2815" 
+"2796" [label = <(METHOD,count)> ]
+"2800" [label = <(METHOD_RETURN,ANY)> ]
+  "2796" -> "2800" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/108-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/108-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/108-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/108-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectIndexAccess" {  
-"2816" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
-"2820" [label = <(METHOD_RETURN,ANY)> ]
-  "2816" -> "2820" 
+"2801" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
+"2805" [label = <(METHOD_RETURN,ANY)> ]
+  "2801" -> "2805" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/109-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/109-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/109-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/109-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "FlushInfo" {  
-"2821" [label = <(METHOD,FlushInfo)> ]
-"2823" [label = <(METHOD_RETURN,ANY)> ]
-  "2821" -> "2823" 
+"2806" [label = <(METHOD,FlushInfo)> ]
+"2808" [label = <(METHOD_RETURN,ANY)> ]
+  "2806" -> "2808" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/11-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/11-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/11-cfg.dot	2023-06-07 19:32:15.337403173 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/11-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "needsWakeLock" {  
-"67" [label = <(METHOD,needsWakeLock)<SUB>66</SUB>> ]
-"69" [label = <(METHOD_RETURN,bool)<SUB>66</SUB>> ]
+"67" [label = <(METHOD,needsWakeLock)<SUB>65</SUB>> ]
+"69" [label = <(METHOD_RETURN,bool)<SUB>65</SUB>> ]
   "67" -> "69" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/110-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/110-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/110-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/110-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterEqualsThan" {  
-"2824" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
-"2828" [label = <(METHOD_RETURN,ANY)> ]
-  "2824" -> "2828" 
+"2809" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
+"2813" [label = <(METHOD_RETURN,ANY)> ]
+  "2809" -> "2813" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/111-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/111-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/111-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/111-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "erase" {  
-"2829" [label = <(METHOD,erase)> ]
-"2833" [label = <(METHOD_RETURN,ANY)> ]
-  "2829" -> "2833" 
+"2814" [label = <(METHOD,erase)> ]
+"2818" [label = <(METHOD_RETURN,ANY)> ]
+  "2814" -> "2818" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/112-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/112-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/112-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/112-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "push_back" {  
-"2834" [label = <(METHOD,push_back)> ]
-"2838" [label = <(METHOD_RETURN,ANY)> ]
-  "2834" -> "2838" 
+"2819" [label = <(METHOD,push_back)> ]
+"2823" [label = <(METHOD_RETURN,ANY)> ]
+  "2819" -> "2823" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/113-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/113-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/113-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/113-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "size" {  
-"2839" [label = <(METHOD,size)> ]
-"2842" [label = <(METHOD_RETURN,ANY)> ]
-  "2839" -> "2842" 
+"2824" [label = <(METHOD,size)> ]
+"2827" [label = <(METHOD_RETURN,ANY)> ]
+  "2824" -> "2827" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/114-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/114-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/114-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/114-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "getReportingMode" {  
-"2843" [label = <(METHOD,getReportingMode)> ]
-"2846" [label = <(METHOD_RETURN,ANY)> ]
-  "2843" -> "2846" 
+"2828" [label = <(METHOD,getReportingMode)> ]
+"2831" [label = <(METHOD_RETURN,ANY)> ]
+  "2828" -> "2831" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/115-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/115-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/115-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/115-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "updateLooperRegistrationLocked" {  
-"2847" [label = <(METHOD,updateLooperRegistrationLocked)> ]
-"2850" [label = <(METHOD_RETURN,ANY)> ]
-  "2847" -> "2850" 
+"2832" [label = <(METHOD,updateLooperRegistrationLocked)> ]
+"2835" [label = <(METHOD_RETURN,ANY)> ]
+  "2832" -> "2835" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/116-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/116-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/116-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/116-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "getSendFd" {  
-"2851" [label = <(METHOD,getSendFd)> ]
-"2854" [label = <(METHOD_RETURN,ANY)> ]
-  "2851" -> "2854" 
+"2836" [label = <(METHOD,getSendFd)> ]
+"2839" [label = <(METHOD_RETURN,ANY)> ]
+  "2836" -> "2839" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/117-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/117-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/117-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/117-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "removeFd" {  
-"2855" [label = <(METHOD,removeFd)> ]
-"2859" [label = <(METHOD_RETURN,ANY)> ]
-  "2855" -> "2859" 
+"2840" [label = <(METHOD,removeFd)> ]
+"2844" [label = <(METHOD_RETURN,ANY)> ]
+  "2840" -> "2844" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/118-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/118-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/118-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/118-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operators&gt;.assignmentOr" {  
-"2860" [label = <(METHOD,&lt;operators&gt;.assignmentOr)> ]
-"2864" [label = <(METHOD_RETURN,ANY)> ]
-  "2860" -> "2864" 
+"2845" [label = <(METHOD,&lt;operators&gt;.assignmentOr)> ]
+"2849" [label = <(METHOD_RETURN,ANY)> ]
+  "2845" -> "2849" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/119-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/119-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/119-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/119-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "isWakeUpSensor" {  
-"2865" [label = <(METHOD,isWakeUpSensor)> ]
-"2868" [label = <(METHOD_RETURN,ANY)> ]
-  "2865" -> "2868" 
+"2850" [label = <(METHOD,isWakeUpSensor)> ]
+"2853" [label = <(METHOD_RETURN,ANY)> ]
+  "2850" -> "2853" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/12-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/12-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/12-cfg.dot	2023-06-07 19:32:15.337403173 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/12-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "resetWakeLockRefCount" {  
-"71" [label = <(METHOD,resetWakeLockRefCount)<SUB>67</SUB>> ]
-"73" [label = <(METHOD_RETURN,void)<SUB>67</SUB>> ]
+"71" [label = <(METHOD,resetWakeLockRefCount)<SUB>66</SUB>> ]
+"73" [label = <(METHOD_RETURN,void)<SUB>66</SUB>> ]
   "71" -> "73" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/120-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/120-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/120-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/120-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "addFd" {  
-"2869" [label = <(METHOD,addFd)> ]
-"2877" [label = <(METHOD_RETURN,ANY)> ]
-  "2869" -> "2877" 
+"2854" [label = <(METHOD,addFd)> ]
+"2862" [label = <(METHOD_RETURN,ANY)> ]
+  "2854" -> "2862" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/121-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/121-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/121-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/121-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGE" {  
-"2878" [label = <(METHOD,ALOGE)> ]
-"2883" [label = <(METHOD_RETURN,ANY)> ]
-  "2878" -> "2883" 
+"2863" [label = <(METHOD,ALOGE)> ]
+"2868" [label = <(METHOD_RETURN,ANY)> ]
+  "2863" -> "2868" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/122-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/122-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/122-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/122-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "hasSensorAccess" {  
-"2884" [label = <(METHOD,hasSensorAccess)> ]
-"2886" [label = <(METHOD_RETURN,ANY)> ]
-  "2884" -> "2886" 
+"2869" [label = <(METHOD,hasSensorAccess)> ]
+"2871" [label = <(METHOD_RETURN,ANY)> ]
+  "2869" -> "2871" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/123-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/123-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/123-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/123-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.postIncrement" {  
-"2887" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
-"2890" [label = <(METHOD_RETURN,ANY)> ]
-  "2887" -> "2890" 
+"2872" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
+"2875" [label = <(METHOD_RETURN,ANY)> ]
+  "2872" -> "2875" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/124-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/124-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/124-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/124-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.preIncrement" {  
-"2891" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
-"2894" [label = <(METHOD_RETURN,ANY)> ]
-  "2891" -> "2894" 
+"2876" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
+"2879" [label = <(METHOD_RETURN,ANY)> ]
+  "2876" -> "2879" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/125-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/125-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/125-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/125-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "noteOpIfRequired" {  
-"2895" [label = <(METHOD,noteOpIfRequired)> ]
-"2898" [label = <(METHOD_RETURN,ANY)> ]
-  "2895" -> "2898" 
+"2880" [label = <(METHOD,noteOpIfRequired)> ]
+"2883" [label = <(METHOD_RETURN,ANY)> ]
+  "2880" -> "2883" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/126-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/126-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/126-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/126-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.cast" {  
-"2899" [label = <(METHOD,&lt;operator&gt;.cast)> ]
-"2903" [label = <(METHOD_RETURN,ANY)> ]
-  "2899" -> "2903" 
+"2884" [label = <(METHOD,&lt;operator&gt;.cast)> ]
+"2888" [label = <(METHOD_RETURN,ANY)> ]
+  "2884" -> "2888" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/127-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/127-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/127-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/127-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "reset" {  
-"2904" [label = <(METHOD,reset)> ]
-"2908" [label = <(METHOD_RETURN,ANY)> ]
-  "2904" -> "2908" 
+"2889" [label = <(METHOD,reset)> ]
+"2893" [label = <(METHOD_RETURN,ANY)> ]
+  "2889" -> "2893" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/128-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/128-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/128-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/128-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "get" {  
-"2909" [label = <(METHOD,get)> ]
-"2912" [label = <(METHOD_RETURN,ANY)> ]
-  "2909" -> "2912" 
+"2894" [label = <(METHOD,get)> ]
+"2897" [label = <(METHOD_RETURN,ANY)> ]
+  "2894" -> "2897" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/129-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/129-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/129-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/129-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "sendPendingFlushEventsLocked" {  
-"2913" [label = <(METHOD,sendPendingFlushEventsLocked)> ]
-"2915" [label = <(METHOD_RETURN,ANY)> ]
-  "2913" -> "2915" 
+"2898" [label = <(METHOD,sendPendingFlushEventsLocked)> ]
+"2900" [label = <(METHOD_RETURN,ANY)> ]
+  "2898" -> "2900" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/13-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/13-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/13-cfg.dot	2023-06-07 19:32:15.337403173 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/13-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "getPackageName" {  
-"75" [label = <(METHOD,getPackageName)<SUB>68</SUB>> ]
-"77" [label = <(METHOD_RETURN,String8)<SUB>68</SUB>> ]
+"75" [label = <(METHOD,getPackageName)<SUB>67</SUB>> ]
+"77" [label = <(METHOD_RETURN,String8)<SUB>67</SUB>> ]
   "75" -> "77" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/130-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/130-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/130-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/130-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "status_t" {  
-"2916" [label = <(METHOD,status_t)> ]
-"2919" [label = <(METHOD_RETURN,ANY)> ]
-  "2916" -> "2919" 
+"2901" [label = <(METHOD,status_t)> ]
+"2904" [label = <(METHOD_RETURN,ANY)> ]
+  "2901" -> "2904" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/131-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/131-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/131-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/131-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "appendEventsToCacheLocked" {  
-"2920" [label = <(METHOD,appendEventsToCacheLocked)> ]
-"2924" [label = <(METHOD_RETURN,ANY)> ]
-  "2920" -> "2924" 
+"2905" [label = <(METHOD,appendEventsToCacheLocked)> ]
+"2909" [label = <(METHOD_RETURN,ANY)> ]
+  "2905" -> "2909" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/132-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/132-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/132-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/132-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.minus" {  
-"2925" [label = <(METHOD,&lt;operator&gt;.minus)> ]
-"2928" [label = <(METHOD_RETURN,ANY)> ]
-  "2925" -> "2928" 
+"2910" [label = <(METHOD,&lt;operator&gt;.minus)> ]
+"2913" [label = <(METHOD_RETURN,ANY)> ]
+  "2910" -> "2913" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/133-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/133-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/133-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/133-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "findWakeUpSensorEventLocked" {  
-"2929" [label = <(METHOD,findWakeUpSensorEventLocked)> ]
-"2933" [label = <(METHOD_RETURN,ANY)> ]
-  "2929" -> "2933" 
+"2914" [label = <(METHOD,findWakeUpSensorEventLocked)> ]
+"2918" [label = <(METHOD_RETURN,ANY)> ]
+  "2914" -> "2918" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/134-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/134-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/134-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/134-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "SensorEventQueue::write" {  
-"2934" [label = <(METHOD,SensorEventQueue::write)> ]
-"2940" [label = <(METHOD_RETURN,ANY)> ]
-  "2934" -> "2940" 
+"2919" [label = <(METHOD,SensorEventQueue::write)> ]
+"2925" [label = <(METHOD_RETURN,ANY)> ]
+  "2919" -> "2925" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/135-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/135-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/135-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/135-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operators&gt;.assignmentAnd" {  
-"2941" [label = <(METHOD,&lt;operators&gt;.assignmentAnd)> ]
-"2945" [label = <(METHOD_RETURN,ANY)> ]
-  "2941" -> "2945" 
+"2926" [label = <(METHOD,&lt;operators&gt;.assignmentAnd)> ]
+"2930" [label = <(METHOD_RETURN,ANY)> ]
+  "2926" -> "2930" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/136-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/136-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/136-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/136-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.not" {  
-"2946" [label = <(METHOD,&lt;operator&gt;.not)> ]
-"2949" [label = <(METHOD_RETURN,ANY)> ]
-  "2946" -> "2949" 
+"2931" [label = <(METHOD,&lt;operator&gt;.not)> ]
+"2934" [label = <(METHOD_RETURN,ANY)> ]
+  "2931" -> "2934" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/137-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/137-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/137-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/137-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.preDecrement" {  
-"2950" [label = <(METHOD,&lt;operator&gt;.preDecrement)> ]
-"2953" [label = <(METHOD_RETURN,ANY)> ]
-  "2950" -> "2953" 
+"2935" [label = <(METHOD,&lt;operator&gt;.preDecrement)> ]
+"2938" [label = <(METHOD_RETURN,ANY)> ]
+  "2935" -> "2938" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/138-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/138-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/138-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/138-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "computeMaxCacheSizeLocked" {  
-"2954" [label = <(METHOD,computeMaxCacheSizeLocked)> ]
-"2956" [label = <(METHOD_RETURN,ANY)> ]
-  "2954" -> "2956" 
+"2939" [label = <(METHOD,computeMaxCacheSizeLocked)> ]
+"2941" [label = <(METHOD_RETURN,ANY)> ]
+  "2939" -> "2941" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/139-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/139-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/139-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/139-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "getLooper" {  
-"2957" [label = <(METHOD,getLooper)> ]
-"2960" [label = <(METHOD_RETURN,ANY)> ]
-  "2957" -> "2960" 
+"2942" [label = <(METHOD,getLooper)> ]
+"2945" [label = <(METHOD_RETURN,ANY)> ]
+  "2942" -> "2945" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/14-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/14-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/14-cfg.dot	2023-06-07 19:32:15.337403173 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/14-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,7 +1,7 @@
 digraph "getUid" {  
-"81" [label = <(RETURN,return mUid;,return mUid;)<SUB>70</SUB>> ]
-"79" [label = <(METHOD,getUid)<SUB>70</SUB>> ]
-"83" [label = <(METHOD_RETURN,uid_t)<SUB>70</SUB>> ]
+"81" [label = <(RETURN,return mUid;,return mUid;)<SUB>69</SUB>> ]
+"79" [label = <(METHOD,getUid)<SUB>69</SUB>> ]
+"83" [label = <(METHOD_RETURN,uid_t)<SUB>69</SUB>> ]
   "81" -> "83" 
   "79" -> "81" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/140-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/140-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/140-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/140-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "isUidActive" {  
-"2961" [label = <(METHOD,isUidActive)> ]
-"2965" [label = <(METHOD_RETURN,ANY)> ]
-  "2961" -> "2965" 
+"2946" [label = <(METHOD,isUidActive)> ]
+"2950" [label = <(METHOD_RETURN,ANY)> ]
+  "2946" -> "2950" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/141-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/141-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/141-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/141-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "isSensorPrivacyEnabled" {  
-"2966" [label = <(METHOD,isSensorPrivacyEnabled)> ]
-"2969" [label = <(METHOD_RETURN,ANY)> ]
-  "2966" -> "2969" 
+"2951" [label = <(METHOD,isSensorPrivacyEnabled)> ]
+"2954" [label = <(METHOD_RETURN,ANY)> ]
+  "2951" -> "2954" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/142-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/142-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/142-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/142-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "find" {  
-"2970" [label = <(METHOD,find)> ]
-"2974" [label = <(METHOD_RETURN,ANY)> ]
-  "2970" -> "2974" 
+"2955" [label = <(METHOD,find)> ]
+"2959" [label = <(METHOD_RETURN,ANY)> ]
+  "2955" -> "2959" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/143-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/143-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/143-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/143-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "SensorService::getTargetSdkVersion" {  
-"2975" [label = <(METHOD,SensorService::getTargetSdkVersion)> ]
-"2979" [label = <(METHOD_RETURN,ANY)> ]
-  "2975" -> "2979" 
+"2960" [label = <(METHOD,SensorService::getTargetSdkVersion)> ]
+"2964" [label = <(METHOD_RETURN,ANY)> ]
+  "2960" -> "2964" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/144-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/144-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/144-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/144-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessEqualsThan" {  
-"2980" [label = <(METHOD,&lt;operator&gt;.lessEqualsThan)> ]
-"2984" [label = <(METHOD_RETURN,ANY)> ]
-  "2980" -> "2984" 
+"2965" [label = <(METHOD,&lt;operator&gt;.lessEqualsThan)> ]
+"2969" [label = <(METHOD_RETURN,ANY)> ]
+  "2965" -> "2969" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/145-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/145-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/145-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/145-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "noteOp" {  
-"2985" [label = <(METHOD,noteOp)> ]
-"2991" [label = <(METHOD_RETURN,ANY)> ]
-  "2985" -> "2991" 
+"2970" [label = <(METHOD,noteOp)> ]
+"2976" [label = <(METHOD_RETURN,ANY)> ]
+  "2970" -> "2976" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/146-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/146-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/146-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/146-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "memcpy" {  
-"2992" [label = <(METHOD,memcpy)> ]
-"2997" [label = <(METHOD_RETURN,ANY)> ]
-  "2992" -> "2997" 
+"2977" [label = <(METHOD,memcpy)> ]
+"2982" [label = <(METHOD_RETURN,ANY)> ]
+  "2977" -> "2982" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/147-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/147-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/147-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/147-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.multiplication" {  
-"2998" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
-"3002" [label = <(METHOD_RETURN,ANY)> ]
-  "2998" -> "3002" 
+"2983" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
+"2987" [label = <(METHOD_RETURN,ANY)> ]
+  "2983" -> "2987" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/148-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/148-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/148-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/148-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.sizeOf" {  
-"3003" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
-"3006" [label = <(METHOD_RETURN,ANY)> ]
-  "3003" -> "3006" 
+"2988" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
+"2991" [label = <(METHOD_RETURN,ANY)> ]
+  "2988" -> "2991" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/149-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/149-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/149-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/149-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addressOf" {  
-"3007" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
-"3010" [label = <(METHOD_RETURN,ANY)> ]
-  "3007" -> "3010" 
+"2992" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
+"2995" [label = <(METHOD_RETURN,ANY)> ]
+  "2992" -> "2995" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/15-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/15-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/15-cfg.dot	2023-06-07 19:32:15.337403173 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/15-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "~SensorEventConnection" {  
-"85" [label = <(METHOD,~SensorEventConnection)<SUB>73</SUB>> ]
-"87" [label = <(METHOD_RETURN,virtual)<SUB>73</SUB>> ]
+"85" [label = <(METHOD,~SensorEventConnection)<SUB>72</SUB>> ]
+"87" [label = <(METHOD_RETURN,virtual)<SUB>72</SUB>> ]
   "85" -> "87" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/150-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/150-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/150-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/150-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentPlus" {  
-"3011" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
-"3015" [label = <(METHOD_RETURN,ANY)> ]
-  "3011" -> "3015" 
+"2996" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
+"3000" [label = <(METHOD_RETURN,ANY)> ]
+  "2996" -> "3000" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/151-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/151-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/151-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/151-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addition" {  
-"3016" [label = <(METHOD,&lt;operator&gt;.addition)> ]
-"3020" [label = <(METHOD_RETURN,ANY)> ]
-  "3016" -> "3020" 
+"3001" [label = <(METHOD,&lt;operator&gt;.addition)> ]
+"3005" [label = <(METHOD_RETURN,ANY)> ]
+  "3001" -> "3005" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/152-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/152-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/152-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/152-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "reAllocateCacheLocked" {  
-"3021" [label = <(METHOD,reAllocateCacheLocked)> ]
-"3025" [label = <(METHOD_RETURN,ANY)> ]
-  "3021" -> "3025" 
+"3006" [label = <(METHOD,reAllocateCacheLocked)> ]
+"3010" [label = <(METHOD_RETURN,ANY)> ]
+  "3006" -> "3010" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/153-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/153-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/153-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/153-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.subtraction" {  
-"3026" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
-"3030" [label = <(METHOD_RETURN,ANY)> ]
-  "3026" -> "3030" 
+"3011" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
+"3015" [label = <(METHOD_RETURN,ANY)> ]
+  "3011" -> "3015" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/154-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/154-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/154-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/154-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "std::min" {  
-"3031" [label = <(METHOD,std::min)> ]
-"3036" [label = <(METHOD_RETURN,ANY)> ]
-  "3031" -> "3036" 
+"3016" [label = <(METHOD,std::min)> ]
+"3021" [label = <(METHOD_RETURN,ANY)> ]
+  "3016" -> "3021" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/155-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/155-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/155-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/155-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "std::max" {  
-"3037" [label = <(METHOD,std::max)> ]
-"3042" [label = <(METHOD_RETURN,ANY)> ]
-  "3037" -> "3042" 
+"3022" [label = <(METHOD,std::max)> ]
+"3027" [label = <(METHOD_RETURN,ANY)> ]
+  "3022" -> "3027" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/156-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/156-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/156-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/156-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGW" {  
-"3043" [label = <(METHOD,ALOGW)> ]
-"3048" [label = <(METHOD_RETURN,ANY)> ]
-  "3043" -> "3048" 
+"3028" [label = <(METHOD,ALOGW)> ]
+"3033" [label = <(METHOD_RETURN,ANY)> ]
+  "3028" -> "3033" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/157-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/157-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/157-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/157-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "countFlushCompleteEventsLocked" {  
-"3049" [label = <(METHOD,countFlushCompleteEventsLocked)> ]
-"3053" [label = <(METHOD_RETURN,ANY)> ]
-  "3049" -> "3053" 
+"3034" [label = <(METHOD,countFlushCompleteEventsLocked)> ]
+"3038" [label = <(METHOD_RETURN,ANY)> ]
+  "3034" -> "3038" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/158-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/158-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/158-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/158-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "memmove" {  
-"3054" [label = <(METHOD,memmove)> ]
-"3059" [label = <(METHOD_RETURN,ANY)> ]
-  "3054" -> "3059" 
+"3039" [label = <(METHOD,memmove)> ]
+"3044" [label = <(METHOD_RETURN,ANY)> ]
+  "3039" -> "3044" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/159-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/159-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/159-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/159-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentMinus" {  
-"3060" [label = <(METHOD,&lt;operator&gt;.assignmentMinus)> ]
-"3064" [label = <(METHOD_RETURN,ANY)> ]
-  "3060" -> "3064" 
+"3045" [label = <(METHOD,&lt;operator&gt;.assignmentMinus)> ]
+"3049" [label = <(METHOD_RETURN,ANY)> ]
+  "3045" -> "3049" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/16-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/16-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/16-cfg.dot	2023-06-07 19:32:15.337403173 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/16-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "onFirstRef" {  
-"89" [label = <(METHOD,onFirstRef)<SUB>74</SUB>> ]
-"91" [label = <(METHOD_RETURN,void)<SUB>74</SUB>> ]
+"89" [label = <(METHOD,onFirstRef)<SUB>73</SUB>> ]
+"91" [label = <(METHOD_RETURN,void)<SUB>73</SUB>> ]
   "89" -> "91" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/160-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/160-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/160-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/160-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "memset" {  
-"3065" [label = <(METHOD,memset)> ]
-"3070" [label = <(METHOD_RETURN,ANY)> ]
-  "3065" -> "3070" 
+"3050" [label = <(METHOD,memset)> ]
+"3055" [label = <(METHOD_RETURN,ANY)> ]
+  "3050" -> "3055" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/161-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/161-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/161-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/161-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.postDecrement" {  
-"3071" [label = <(METHOD,&lt;operator&gt;.postDecrement)> ]
-"3074" [label = <(METHOD_RETURN,ANY)> ]
-  "3071" -> "3074" 
+"3056" [label = <(METHOD,&lt;operator&gt;.postDecrement)> ]
+"3059" [label = <(METHOD_RETURN,ANY)> ]
+  "3056" -> "3059" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/162-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/162-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/162-cfg.dot	2023-06-07 19:32:15.447403164 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/162-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "helpers::min" {  
-"3075" [label = <(METHOD,helpers::min)> ]
-"3080" [label = <(METHOD_RETURN,ANY)> ]
-  "3075" -> "3080" 
+"3060" [label = <(METHOD,helpers::min)> ]
+"3065" [label = <(METHOD_RETURN,ANY)> ]
+  "3060" -> "3065" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/163-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/163-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/163-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/163-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.division" {  
-"3081" [label = <(METHOD,&lt;operator&gt;.division)> ]
-"3085" [label = <(METHOD_RETURN,ANY)> ]
-  "3081" -> "3085" 
+"3066" [label = <(METHOD,&lt;operator&gt;.division)> ]
+"3070" [label = <(METHOD_RETURN,ANY)> ]
+  "3066" -> "3070" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/164-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/164-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/164-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/164-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "int" {  
-"3086" [label = <(METHOD,int)> ]
-"3089" [label = <(METHOD_RETURN,ANY)> ]
-  "3086" -> "3089" 
+"3071" [label = <(METHOD,int)> ]
+"3074" [label = <(METHOD_RETURN,ANY)> ]
+  "3071" -> "3074" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/165-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/165-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/165-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/165-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.constructorInitializer" {  
-"3090" [label = <(METHOD,&lt;operator&gt;.constructorInitializer)> ]
-"3093" [label = <(METHOD_RETURN,ANY)> ]
-  "3090" -> "3093" 
+"3075" [label = <(METHOD,&lt;operator&gt;.constructorInitializer)> ]
+"3078" [label = <(METHOD_RETURN,ANY)> ]
+  "3075" -> "3078" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/166-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/166-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/166-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/166-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
 digraph "isWakeUpSensorEvent" {  
-"3094" [label = <(METHOD,isWakeUpSensorEvent)> ]
-"3098" [label = <(METHOD_RETURN,ANY)> ]
-  "3094" -> "3098" 
+"3079" [label = <(METHOD,isWakeUpSensorEvent)> ]
+"3083" [label = <(METHOD_RETURN,ANY)> ]
+  "3079" -> "3083" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/167-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/167-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/167-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/167-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
-digraph "android_errorWriteLog" {  
-"3099" [label = <(METHOD,android_errorWriteLog)> ]
-"3103" [label = <(METHOD_RETURN,ANY)> ]
-  "3099" -> "3103" 
+digraph "enable" {  
+"3084" [label = <(METHOD,enable)> ]
+"3093" [label = <(METHOD_RETURN,ANY)> ]
+  "3084" -> "3093" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/168-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/168-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/168-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/168-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
-digraph "enable" {  
-"3104" [label = <(METHOD,enable)> ]
-"3113" [label = <(METHOD_RETURN,ANY)> ]
-  "3104" -> "3113" 
+digraph "disable" {  
+"3094" [label = <(METHOD,disable)> ]
+"3099" [label = <(METHOD_RETURN,ANY)> ]
+  "3094" -> "3099" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/169-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/169-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/169-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/169-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
-digraph "disable" {  
-"3114" [label = <(METHOD,disable)> ]
-"3119" [label = <(METHOD_RETURN,ANY)> ]
-  "3114" -> "3119" 
+digraph "setEventRate" {  
+"3100" [label = <(METHOD,setEventRate)> ]
+"3107" [label = <(METHOD_RETURN,ANY)> ]
+  "3100" -> "3107" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/17-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/17-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/17-cfg.dot	2023-06-07 19:32:15.337403173 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/17-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "getSensorChannel" {  
-"93" [label = <(METHOD,getSensorChannel)<SUB>75</SUB>> ]
-"95" [label = <(METHOD_RETURN,sp&lt;BitTube&gt;)<SUB>75</SUB>> ]
+"93" [label = <(METHOD,getSensorChannel)<SUB>74</SUB>> ]
+"95" [label = <(METHOD_RETURN,sp&lt;BitTube&gt;)<SUB>74</SUB>> ]
   "93" -> "95" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/170-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/170-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/170-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/170-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
-digraph "setEventRate" {  
-"3120" [label = <(METHOD,setEventRate)> ]
-"3127" [label = <(METHOD_RETURN,ANY)> ]
-  "3120" -> "3127" 
+digraph "flushSensor" {  
+"3108" [label = <(METHOD,flushSensor)> ]
+"3113" [label = <(METHOD_RETURN,ANY)> ]
+  "3108" -> "3113" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/171-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/171-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/171-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/171-cfg.dot	2023-06-07 19:32:19.637402771 +0330
@@ -1,5 +1,5 @@
-digraph "flushSensor" {  
-"3128" [label = <(METHOD,flushSensor)> ]
-"3133" [label = <(METHOD_RETURN,ANY)> ]
-  "3128" -> "3133" 
+digraph "UNUSED" {  
+"3114" [label = <(METHOD,UNUSED)<SUB>28</SUB>> ]
+"3117" [label = <(METHOD_RETURN,ANY)> ]
+  "3114" -> "3117" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/172-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/172-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/172-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/172-cfg.dot	2023-06-07 19:32:19.647402772 +0330
@@ -1,5 +1,5 @@
-digraph "UNUSED" {  
-"3134" [label = <(METHOD,UNUSED)<SUB>29</SUB>> ]
-"3137" [label = <(METHOD_RETURN,ANY)> ]
-  "3134" -> "3137" 
+digraph "&lt;operator&gt;.and" {  
+"3118" [label = <(METHOD,&lt;operator&gt;.and)> ]
+"3122" [label = <(METHOD_RETURN,ANY)> ]
+  "3118" -> "3122" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/173-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/173-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/173-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/173-cfg.dot	2023-06-07 19:32:19.647402772 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.and" {  
-"3138" [label = <(METHOD,&lt;operator&gt;.and)> ]
-"3142" [label = <(METHOD_RETURN,ANY)> ]
-  "3138" -> "3142" 
+digraph "checkWakeLockState" {  
+"3123" [label = <(METHOD,checkWakeLockState)> ]
+"3126" [label = <(METHOD_RETURN,ANY)> ]
+  "3123" -> "3126" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/174-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/174-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/174-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/174-cfg.dot	2023-06-07 19:32:19.647402772 +0330
@@ -1,5 +1,5 @@
-digraph "checkWakeLockState" {  
-"3143" [label = <(METHOD,checkWakeLockState)> ]
-"3146" [label = <(METHOD_RETURN,ANY)> ]
-  "3143" -> "3146" 
+digraph "resetToNormalMode" {  
+"3127" [label = <(METHOD,resetToNormalMode)> ]
+"3130" [label = <(METHOD_RETURN,ANY)> ]
+  "3127" -> "3130" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/175-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/175-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/175-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/175-cfg.dot	2023-06-07 19:32:19.647402772 +0330
@@ -1,5 +1,5 @@
-digraph "resetToNormalMode" {  
-"3147" [label = <(METHOD,resetToNormalMode)> ]
-"3150" [label = <(METHOD_RETURN,ANY)> ]
-  "3147" -> "3150" 
+digraph "::recv" {  
+"3131" [label = <(METHOD,::recv)> ]
+"3138" [label = <(METHOD_RETURN,ANY)> ]
+  "3131" -> "3138" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/176-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/176-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/176-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/176-cfg.dot	2023-06-07 19:32:19.647402772 +0330
@@ -1,5 +1,5 @@
-digraph "::recv" {  
-"3151" [label = <(METHOD,::recv)> ]
-"3158" [label = <(METHOD_RETURN,ANY)> ]
-  "3151" -> "3158" 
+digraph "dev" {  
+"3139" [label = <(METHOD,dev)> ]
+"3142" [label = <(METHOD_RETURN,ANY)> ]
+  "3139" -> "3142" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/177-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/177-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/177-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/177-cfg.dot	2023-06-07 19:32:19.647402772 +0330
@@ -1,5 +1,5 @@
-digraph "dev" {  
-"3159" [label = <(METHOD,dev)> ]
-"3162" [label = <(METHOD_RETURN,ANY)> ]
-  "3159" -> "3162" 
+digraph "SensorDevice::getInstance" {  
+"3143" [label = <(METHOD,SensorDevice::getInstance)> ]
+"3146" [label = <(METHOD_RETURN,ANY)> ]
+  "3143" -> "3146" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/178-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/178-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/178-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/178-cfg.dot	2023-06-07 19:32:19.647402772 +0330
@@ -1,5 +1,5 @@
-digraph "SensorDevice::getInstance" {  
-"3163" [label = <(METHOD,SensorDevice::getInstance)> ]
-"3166" [label = <(METHOD_RETURN,ANY)> ]
-  "3163" -> "3166" 
+digraph "getType" {  
+"3147" [label = <(METHOD,getType)> ]
+"3150" [label = <(METHOD_RETURN,ANY)> ]
+  "3147" -> "3150" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/179-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/179-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/179-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/179-cfg.dot	2023-06-07 19:32:19.647402772 +0330
@@ -1,5 +1,5 @@
-digraph "getType" {  
-"3167" [label = <(METHOD,getType)> ]
-"3170" [label = <(METHOD_RETURN,ANY)> ]
-  "3167" -> "3170" 
+digraph "injectSensorData" {  
+"3151" [label = <(METHOD,injectSensorData)> ]
+"3155" [label = <(METHOD_RETURN,ANY)> ]
+  "3151" -> "3155" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/18-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/18-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/18-cfg.dot	2023-06-07 19:32:15.337403173 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/18-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "enableDisable" {  
-"97" [label = <(METHOD,enableDisable)<SUB>76</SUB>> ]
-"104" [label = <(METHOD_RETURN,status_t)<SUB>76</SUB>> ]
+"97" [label = <(METHOD,enableDisable)<SUB>75</SUB>> ]
+"104" [label = <(METHOD_RETURN,status_t)<SUB>75</SUB>> ]
   "97" -> "104" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/180-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/180-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/180-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/180-cfg.dot	2023-06-07 19:32:19.647402772 +0330
@@ -1,5 +1,5 @@
-digraph "injectSensorData" {  
-"3171" [label = <(METHOD,injectSensorData)> ]
-"3175" [label = <(METHOD_RETURN,ANY)> ]
-  "3171" -> "3175" 
+digraph "sendEventsFromCache" {  
+"3156" [label = <(METHOD,sendEventsFromCache)> ]
+"3160" [label = <(METHOD_RETURN,ANY)> ]
+  "3156" -> "3160" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/181-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/181-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/181-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/181-cfg.dot	2023-06-07 19:32:19.647402772 +0330
@@ -1,5 +1,5 @@
-digraph "sendEventsFromCache" {  
-"3176" [label = <(METHOD,sendEventsFromCache)> ]
-"3180" [label = <(METHOD_RETURN,ANY)> ]
-  "3176" -> "3180" 
+digraph "getFifoReservedEventCount" {  
+"3161" [label = <(METHOD,getFifoReservedEventCount)> ]
+"3164" [label = <(METHOD_RETURN,ANY)> ]
+  "3161" -> "3164" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/182-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/182-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/182-cfg.dot	2023-06-07 19:32:15.457403162 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/182-cfg.dot	2023-06-07 19:32:19.647402772 +0330
@@ -1,5 +1,5 @@
-digraph "getFifoReservedEventCount" {  
-"3181" [label = <(METHOD,getFifoReservedEventCount)> ]
-"3184" [label = <(METHOD_RETURN,ANY)> ]
-  "3181" -> "3184" 
+digraph "getFifoMaxEventCount" {  
+"3165" [label = <(METHOD,getFifoMaxEventCount)> ]
+"3168" [label = <(METHOD_RETURN,ANY)> ]
+  "3165" -> "3168" 
 }
Only in /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out: 183-cfg.dot
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/19-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/19-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/19-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/19-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "setEventRate" {  
-"106" [label = <(METHOD,setEventRate)<SUB>78</SUB>> ]
-"110" [label = <(METHOD_RETURN,status_t)<SUB>78</SUB>> ]
+"106" [label = <(METHOD,setEventRate)<SUB>77</SUB>> ]
+"110" [label = <(METHOD_RETURN,status_t)<SUB>77</SUB>> ]
   "106" -> "110" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/2-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/2-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/2-cfg.dot	2023-06-07 19:32:15.327403175 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/2-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "hasSensor" {  
-"24" [label = <(METHOD,hasSensor)<SUB>57</SUB>> ]
-"27" [label = <(METHOD_RETURN,bool)<SUB>57</SUB>> ]
+"24" [label = <(METHOD,hasSensor)<SUB>56</SUB>> ]
+"27" [label = <(METHOD_RETURN,bool)<SUB>56</SUB>> ]
   "24" -> "27" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/20-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/20-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/20-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/20-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "flush" {  
-"112" [label = <(METHOD,flush)<SUB>79</SUB>> ]
-"114" [label = <(METHOD_RETURN,status_t)<SUB>79</SUB>> ]
+"112" [label = <(METHOD,flush)<SUB>78</SUB>> ]
+"114" [label = <(METHOD_RETURN,status_t)<SUB>78</SUB>> ]
   "112" -> "114" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/21-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/21-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/21-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/21-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "configureChannel" {  
-"116" [label = <(METHOD,configureChannel)<SUB>80</SUB>> ]
-"120" [label = <(METHOD_RETURN,int32_t)<SUB>80</SUB>> ]
+"116" [label = <(METHOD,configureChannel)<SUB>79</SUB>> ]
+"120" [label = <(METHOD_RETURN,int32_t)<SUB>79</SUB>> ]
   "116" -> "120" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/22-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/22-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/22-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/22-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "destroy" {  
-"122" [label = <(METHOD,destroy)<SUB>81</SUB>> ]
-"124" [label = <(METHOD_RETURN,void)<SUB>81</SUB>> ]
+"122" [label = <(METHOD,destroy)<SUB>80</SUB>> ]
+"124" [label = <(METHOD_RETURN,void)<SUB>80</SUB>> ]
   "122" -> "124" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/23-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/23-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/23-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/23-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "countFlushCompleteEventsLocked" {  
-"126" [label = <(METHOD,countFlushCompleteEventsLocked)<SUB>86</SUB>> ]
-"130" [label = <(METHOD_RETURN,void)<SUB>86</SUB>> ]
+"126" [label = <(METHOD,countFlushCompleteEventsLocked)<SUB>85</SUB>> ]
+"130" [label = <(METHOD_RETURN,void)<SUB>85</SUB>> ]
   "126" -> "130" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/24-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/24-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/24-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/24-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "findWakeUpSensorEventLocked" {  
-"132" [label = <(METHOD,findWakeUpSensorEventLocked)<SUB>92</SUB>> ]
-"136" [label = <(METHOD_RETURN,int)<SUB>92</SUB>> ]
+"132" [label = <(METHOD,findWakeUpSensorEventLocked)<SUB>91</SUB>> ]
+"136" [label = <(METHOD_RETURN,int)<SUB>91</SUB>> ]
   "132" -> "136" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/25-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/25-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/25-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/25-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "sendPendingFlushEventsLocked" {  
-"138" [label = <(METHOD,sendPendingFlushEventsLocked)<SUB>97</SUB>> ]
-"140" [label = <(METHOD_RETURN,void)<SUB>97</SUB>> ]
+"138" [label = <(METHOD,sendPendingFlushEventsLocked)<SUB>96</SUB>> ]
+"140" [label = <(METHOD_RETURN,void)<SUB>96</SUB>> ]
   "138" -> "140" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/26-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/26-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/26-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/26-cfg.dot	2023-06-07 19:32:19.527402783 +0330
@@ -1,5 +1,5 @@
 digraph "writeToSocketFromCache" {  
-"142" [label = <(METHOD,writeToSocketFromCache)<SUB>100</SUB>> ]
-"144" [label = <(METHOD_RETURN,void)<SUB>100</SUB>> ]
+"142" [label = <(METHOD,writeToSocketFromCache)<SUB>99</SUB>> ]
+"144" [label = <(METHOD_RETURN,void)<SUB>99</SUB>> ]
   "142" -> "144" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/27-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/27-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/27-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/27-cfg.dot	2023-06-07 19:32:19.537402781 +0330
@@ -1,5 +1,5 @@
 digraph "computeMaxCacheSizeLocked" {  
-"146" [label = <(METHOD,computeMaxCacheSizeLocked)<SUB>105</SUB>> ]
-"148" [label = <(METHOD_RETURN,int)<SUB>105</SUB>> ]
+"146" [label = <(METHOD,computeMaxCacheSizeLocked)<SUB>104</SUB>> ]
+"148" [label = <(METHOD_RETURN,int)<SUB>104</SUB>> ]
   "146" -> "148" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/28-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/28-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/28-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/28-cfg.dot	2023-06-07 19:32:19.537402781 +0330
@@ -1,5 +1,5 @@
 digraph "reAllocateCacheLocked" {  
-"150" [label = <(METHOD,reAllocateCacheLocked)<SUB>109</SUB>> ]
-"154" [label = <(METHOD_RETURN,void)<SUB>109</SUB>> ]
+"150" [label = <(METHOD,reAllocateCacheLocked)<SUB>108</SUB>> ]
+"154" [label = <(METHOD_RETURN,void)<SUB>108</SUB>> ]
   "150" -> "154" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/29-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/29-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/29-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/29-cfg.dot	2023-06-07 19:32:19.537402781 +0330
@@ -1,5 +1,5 @@
 digraph "appendEventsToCacheLocked" {  
-"156" [label = <(METHOD,appendEventsToCacheLocked)<SUB>113</SUB>> ]
-"160" [label = <(METHOD_RETURN,void)<SUB>113</SUB>> ]
+"156" [label = <(METHOD,appendEventsToCacheLocked)<SUB>112</SUB>> ]
+"160" [label = <(METHOD_RETURN,void)<SUB>112</SUB>> ]
   "156" -> "160" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/3-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/3-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/3-cfg.dot	2023-06-07 19:32:15.327403175 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/3-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "hasAnySensor" {  
-"29" [label = <(METHOD,hasAnySensor)<SUB>58</SUB>> ]
-"31" [label = <(METHOD_RETURN,bool)<SUB>58</SUB>> ]
+"29" [label = <(METHOD,hasAnySensor)<SUB>57</SUB>> ]
+"31" [label = <(METHOD_RETURN,bool)<SUB>57</SUB>> ]
   "29" -> "31" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/30-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/30-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/30-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/30-cfg.dot	2023-06-07 19:32:19.537402781 +0330
@@ -1,5 +1,5 @@
 digraph "handleEvent" {  
-"162" [label = <(METHOD,handleEvent)<SUB>118</SUB>> ]
-"167" [label = <(METHOD_RETURN,int)<SUB>118</SUB>> ]
+"162" [label = <(METHOD,handleEvent)<SUB>117</SUB>> ]
+"167" [label = <(METHOD_RETURN,int)<SUB>117</SUB>> ]
   "162" -> "167" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/31-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/31-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/31-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/31-cfg.dot	2023-06-07 19:32:19.537402781 +0330
@@ -1,5 +1,5 @@
 digraph "incrementPendingFlushCountIfHasAccess" {  
-"169" [label = <(METHOD,incrementPendingFlushCountIfHasAccess)<SUB>122</SUB>> ]
-"172" [label = <(METHOD_RETURN,bool)<SUB>122</SUB>> ]
+"169" [label = <(METHOD,incrementPendingFlushCountIfHasAccess)<SUB>121</SUB>> ]
+"172" [label = <(METHOD_RETURN,bool)<SUB>121</SUB>> ]
   "169" -> "172" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/32-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/32-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/32-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/32-cfg.dot	2023-06-07 19:32:19.537402781 +0330
@@ -1,5 +1,5 @@
 digraph "updateLooperRegistration" {  
-"174" [label = <(METHOD,updateLooperRegistration)<SUB>131</SUB>> ]
-"177" [label = <(METHOD_RETURN,void)<SUB>131</SUB>> ]
+"174" [label = <(METHOD,updateLooperRegistration)<SUB>130</SUB>> ]
+"177" [label = <(METHOD_RETURN,void)<SUB>130</SUB>> ]
   "174" -> "177" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/33-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/33-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/33-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/33-cfg.dot	2023-06-07 19:32:19.537402781 +0330
@@ -1,5 +1,5 @@
 digraph "updateLooperRegistrationLocked" {  
-"179" [label = <(METHOD,updateLooperRegistrationLocked)<SUB>132</SUB>> ]
-"182" [label = <(METHOD_RETURN,void)<SUB>132</SUB>> ]
+"179" [label = <(METHOD,updateLooperRegistrationLocked)<SUB>131</SUB>> ]
+"182" [label = <(METHOD_RETURN,void)<SUB>131</SUB>> ]
   "179" -> "182" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/34-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/34-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/34-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/34-cfg.dot	2023-06-07 19:32:19.537402781 +0330
@@ -1,5 +1,5 @@
 digraph "hasSensorAccess" {  
-"184" [label = <(METHOD,hasSensorAccess)<SUB>136</SUB>> ]
-"186" [label = <(METHOD_RETURN,bool)<SUB>136</SUB>> ]
+"184" [label = <(METHOD,hasSensorAccess)<SUB>135</SUB>> ]
+"186" [label = <(METHOD_RETURN,bool)<SUB>135</SUB>> ]
   "184" -> "186" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/35-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/35-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/35-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/35-cfg.dot	2023-06-07 19:32:19.537402781 +0330
@@ -1,5 +1,5 @@
 digraph "noteOpIfRequired" {  
-"188" [label = <(METHOD,noteOpIfRequired)<SUB>139</SUB>> ]
-"191" [label = <(METHOD_RETURN,bool)<SUB>139</SUB>> ]
+"188" [label = <(METHOD,noteOpIfRequired)<SUB>138</SUB>> ]
+"191" [label = <(METHOD_RETURN,bool)<SUB>138</SUB>> ]
   "188" -> "191" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/36-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/36-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/36-cfg.dot	2023-06-07 19:32:15.347403174 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/36-cfg.dot	2023-06-07 19:32:19.537402781 +0330
@@ -1,5 +1,5 @@
 digraph "FlushInfo" {  
-"204" [label = <(METHOD,FlushInfo)<SUB>169</SUB>> ]
-"206" [label = <(METHOD_RETURN,ANY)<SUB>169</SUB>> ]
+"204" [label = <(METHOD,FlushInfo)<SUB>168</SUB>> ]
+"206" [label = <(METHOD_RETURN,ANY)<SUB>168</SUB>> ]
   "204" -> "206" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/37-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/37-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/37-cfg.dot	2023-06-07 19:32:15.357403172 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/37-cfg.dot	2023-06-07 19:32:19.547402782 +0330
@@ -1,7 +1,7 @@
 digraph "&lt;global&gt;" {  
-"226" [label = <(&lt;operator&gt;.assignment,kTargetSdkUnknown = 0)<SUB>35</SUB>> ]
-"221" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"2522" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
-  "226" -> "2522" 
-  "221" -> "226" 
+"227" [label = <(&lt;operator&gt;.assignment,kTargetSdkUnknown = 0)<SUB>34</SUB>> ]
+"222" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"2509" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+  "227" -> "2509" 
+  "222" -> "227" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/38-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/38-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/38-cfg.dot	2023-06-07 19:32:15.357403172 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/38-cfg.dot	2023-06-07 19:32:19.547402782 +0330
@@ -1,13 +1,13 @@
 digraph "SensorEventConnection" {  
-"236" [label = <(&lt;operator&gt;.assignment,mChannel = new BitTube(mService-&gt;mSocketBufferSize))<SUB>47</SUB>> ]
-"238" [label = <(&lt;operator&gt;.new,new BitTube(mService-&gt;mSocketBufferSize))<SUB>47</SUB>> ]
-"240" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;mSocketBufferSize)<SUB>47</SUB>> ]
-"242" [label = <(FIELD_IDENTIFIER,mSocketBufferSize,mSocketBufferSize)<SUB>47</SUB>> ]
-"229" [label = <(METHOD,SensorEventConnection)<SUB>39</SUB>> ]
-"243" [label = <(METHOD_RETURN,ANY)<SUB>39</SUB>> ]
-  "236" -> "243" 
-  "238" -> "236" 
-  "240" -> "238" 
-  "242" -> "240" 
-  "229" -> "242" 
+"237" [label = <(&lt;operator&gt;.assignment,mChannel = new BitTube(mService-&gt;mSocketBufferSize))<SUB>46</SUB>> ]
+"239" [label = <(&lt;operator&gt;.new,new BitTube(mService-&gt;mSocketBufferSize))<SUB>46</SUB>> ]
+"241" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;mSocketBufferSize)<SUB>46</SUB>> ]
+"243" [label = <(FIELD_IDENTIFIER,mSocketBufferSize,mSocketBufferSize)<SUB>46</SUB>> ]
+"230" [label = <(METHOD,SensorEventConnection)<SUB>38</SUB>> ]
+"244" [label = <(METHOD_RETURN,ANY)<SUB>38</SUB>> ]
+  "237" -> "244" 
+  "239" -> "237" 
+  "241" -> "239" 
+  "243" -> "241" 
+  "230" -> "243" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/39-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/39-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/39-cfg.dot	2023-06-07 19:32:15.357403172 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/39-cfg.dot	2023-06-07 19:32:19.547402782 +0330
@@ -1,20 +1,9 @@
 digraph "~SensorEventConnection" {  
-"247" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;~SensorEventConnection(%p)&quot;, this))<SUB>55</SUB>> ]
-"251" [label = <(destroy,destroy())<SUB>56</SUB>> ]
-"252" [label = <(cleanupConnection,mService-&gt;cleanupConnection(this))<SUB>57</SUB>> ]
-"253" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;cleanupConnection)<SUB>57</SUB>> ]
-"258" [label = <(&lt;operator&gt;.notEquals,mEventCache != nullptr)<SUB>58</SUB>> ]
-"255" [label = <(FIELD_IDENTIFIER,cleanupConnection,cleanupConnection)<SUB>57</SUB>> ]
-"262" [label = <(&lt;operator&gt;.delete,delete[] mEventCache)<SUB>59</SUB>> ]
-"245" [label = <(METHOD,~SensorEventConnection)<SUB>54</SUB>> ]
-"264" [label = <(METHOD_RETURN,ANY)<SUB>54</SUB>> ]
-  "247" -> "251" 
-  "251" -> "255" 
-  "252" -> "258" 
-  "253" -> "252" 
-  "258" -> "264" 
-  "258" -> "262" 
-  "255" -> "253" 
-  "262" -> "264" 
-  "245" -> "247" 
+"248" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;~SensorEventConnection(%p)&quot;, this))<SUB>54</SUB>> ]
+"252" [label = <(destroy,destroy())<SUB>55</SUB>> ]
+"246" [label = <(METHOD,~SensorEventConnection)<SUB>53</SUB>> ]
+"253" [label = <(METHOD_RETURN,ANY)<SUB>53</SUB>> ]
+  "248" -> "252" 
+  "252" -> "253" 
+  "246" -> "248" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/4-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/4-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/4-cfg.dot	2023-06-07 19:32:15.327403175 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/4-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "hasOneShotSensors" {  
-"33" [label = <(METHOD,hasOneShotSensors)<SUB>59</SUB>> ]
-"35" [label = <(METHOD_RETURN,bool)<SUB>59</SUB>> ]
+"33" [label = <(METHOD,hasOneShotSensors)<SUB>58</SUB>> ]
+"35" [label = <(METHOD_RETURN,bool)<SUB>58</SUB>> ]
   "33" -> "35" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/40-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/40-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/40-cfg.dot	2023-06-07 19:32:15.357403172 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/40-cfg.dot	2023-06-07 19:32:19.547402782 +0330
@@ -1,7 +1,23 @@
 digraph "destroy" {  
-"268" [label = <(&lt;operator&gt;.assignment,mDestroyed = true)<SUB>64</SUB>> ]
-"266" [label = <(METHOD,destroy)<SUB>63</SUB>> ]
-"271" [label = <(METHOD_RETURN,void)<SUB>63</SUB>> ]
-  "268" -> "271" 
-  "266" -> "268" 
+"258" [label = <(_l,_l(mDestroyLock))<SUB>59</SUB>> ]
+"264" [label = <(cleanupConnection,mService-&gt;cleanupConnection(this))<SUB>66</SUB>> ]
+"276" [label = <(&lt;operator&gt;.assignment,mDestroyed = true)<SUB>70</SUB>> ]
+"265" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;cleanupConnection)<SUB>66</SUB>> ]
+"270" [label = <(&lt;operator&gt;.notEquals,mEventCache != nullptr)<SUB>67</SUB>> ]
+"263" [label = <(RETURN,return;,return;)<SUB>63</SUB>> ]
+"267" [label = <(FIELD_IDENTIFIER,cleanupConnection,cleanupConnection)<SUB>66</SUB>> ]
+"274" [label = <(&lt;operator&gt;.delete,delete[] mEventCache)<SUB>68</SUB>> ]
+"255" [label = <(METHOD,destroy)<SUB>58</SUB>> ]
+"279" [label = <(METHOD_RETURN,void)<SUB>58</SUB>> ]
+  "258" -> "263" 
+  "258" -> "267" 
+  "264" -> "270" 
+  "276" -> "279" 
+  "265" -> "264" 
+  "270" -> "274" 
+  "270" -> "276" 
+  "263" -> "279" 
+  "267" -> "265" 
+  "274" -> "276" 
+  "255" -> "258" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/41-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/41-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/41-cfg.dot	2023-06-07 19:32:15.367403170 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/41-cfg.dot	2023-06-07 19:32:19.547402782 +0330
@@ -1,11 +1,11 @@
 digraph "onFirstRef" {  
-"275" [label = <(LooperCallback::onFirstRef,LooperCallback::onFirstRef())<SUB>68</SUB>> ]
-"276" [label = <(&lt;operator&gt;.fieldAccess,LooperCallback::onFirstRef)<SUB>68</SUB>> ]
-"278" [label = <(FIELD_IDENTIFIER,onFirstRef,onFirstRef)<SUB>68</SUB>> ]
-"273" [label = <(METHOD,onFirstRef)<SUB>67</SUB>> ]
-"279" [label = <(METHOD_RETURN,void)<SUB>67</SUB>> ]
-  "275" -> "279" 
-  "276" -> "275" 
-  "278" -> "276" 
-  "273" -> "278" 
+"283" [label = <(LooperCallback::onFirstRef,LooperCallback::onFirstRef())<SUB>74</SUB>> ]
+"284" [label = <(&lt;operator&gt;.fieldAccess,LooperCallback::onFirstRef)<SUB>74</SUB>> ]
+"286" [label = <(FIELD_IDENTIFIER,onFirstRef,onFirstRef)<SUB>74</SUB>> ]
+"281" [label = <(METHOD,onFirstRef)<SUB>73</SUB>> ]
+"287" [label = <(METHOD_RETURN,void)<SUB>73</SUB>> ]
+  "283" -> "287" 
+  "284" -> "283" 
+  "286" -> "284" 
+  "281" -> "286" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/42-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/42-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/42-cfg.dot	2023-06-07 19:32:15.367403170 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/42-cfg.dot	2023-06-07 19:32:19.547402782 +0330
@@ -1,16 +1,16 @@
 digraph "needsWakeLock" {  
-"284" [label = <(_l,_l(mConnectionLock))<SUB>72</SUB>> ]
-"286" [label = <(RETURN,return !mDead &amp;&amp; mWakeLockRefCount &gt; 0;,return !mDead &amp;&amp; mWakeLockRefCount &gt; 0;)<SUB>73</SUB>> ]
-"287" [label = <(&lt;operator&gt;.logicalAnd,!mDead &amp;&amp; mWakeLockRefCount &gt; 0)<SUB>73</SUB>> ]
-"288" [label = <(&lt;operator&gt;.logicalNot,!mDead)<SUB>73</SUB>> ]
-"290" [label = <(&lt;operator&gt;.greaterThan,mWakeLockRefCount &gt; 0)<SUB>73</SUB>> ]
-"281" [label = <(METHOD,needsWakeLock)<SUB>71</SUB>> ]
-"293" [label = <(METHOD_RETURN,bool)<SUB>71</SUB>> ]
-  "284" -> "288" 
-  "286" -> "293" 
-  "287" -> "286" 
-  "288" -> "287" 
-  "288" -> "290" 
-  "290" -> "287" 
-  "281" -> "284" 
+"292" [label = <(_l,_l(mConnectionLock))<SUB>78</SUB>> ]
+"294" [label = <(RETURN,return !mDead &amp;&amp; mWakeLockRefCount &gt; 0;,return !mDead &amp;&amp; mWakeLockRefCount &gt; 0;)<SUB>79</SUB>> ]
+"295" [label = <(&lt;operator&gt;.logicalAnd,!mDead &amp;&amp; mWakeLockRefCount &gt; 0)<SUB>79</SUB>> ]
+"296" [label = <(&lt;operator&gt;.logicalNot,!mDead)<SUB>79</SUB>> ]
+"298" [label = <(&lt;operator&gt;.greaterThan,mWakeLockRefCount &gt; 0)<SUB>79</SUB>> ]
+"289" [label = <(METHOD,needsWakeLock)<SUB>77</SUB>> ]
+"301" [label = <(METHOD_RETURN,bool)<SUB>77</SUB>> ]
+  "292" -> "296" 
+  "294" -> "301" 
+  "295" -> "294" 
+  "296" -> "295" 
+  "296" -> "298" 
+  "298" -> "295" 
+  "289" -> "292" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/43-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/43-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/43-cfg.dot	2023-06-07 19:32:15.367403170 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/43-cfg.dot	2023-06-07 19:32:19.547402782 +0330
@@ -1,9 +1,9 @@
 digraph "resetWakeLockRefCount" {  
-"298" [label = <(_l,_l(mConnectionLock))<SUB>77</SUB>> ]
-"300" [label = <(&lt;operator&gt;.assignment,mWakeLockRefCount = 0)<SUB>78</SUB>> ]
-"295" [label = <(METHOD,resetWakeLockRefCount)<SUB>76</SUB>> ]
-"303" [label = <(METHOD_RETURN,void)<SUB>76</SUB>> ]
-  "298" -> "300" 
-  "300" -> "303" 
-  "295" -> "298" 
+"306" [label = <(_l,_l(mConnectionLock))<SUB>83</SUB>> ]
+"308" [label = <(&lt;operator&gt;.assignment,mWakeLockRefCount = 0)<SUB>84</SUB>> ]
+"303" [label = <(METHOD,resetWakeLockRefCount)<SUB>82</SUB>> ]
+"311" [label = <(METHOD_RETURN,void)<SUB>82</SUB>> ]
+  "306" -> "308" 
+  "308" -> "311" 
+  "303" -> "306" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/44-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/44-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/44-cfg.dot	2023-06-07 19:32:15.367403170 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/44-cfg.dot	2023-06-07 19:32:19.557402780 +0330
@@ -1,98 +1,98 @@
 digraph "dump" {  
-"309" [label = <(_l,_l(mConnectionLock))<SUB>82</SUB>> ]
-"311" [label = <(appendFormat,result.appendFormat(&quot;\tOperating Mode: &quot;))<SUB>83</SUB>> ]
-"346" [label = <(appendFormat,result.appendFormat(&quot;\t %s | WakeLockRefCount %d | uid %d | cache size %d | &quot;\012 &quot;max cache size %d\n&quot;, mPackageName.string(), mWakeLockRefCount, mUid, mCacheSize,\012            mMaxCacheSize))<SUB>91</SUB>> ]
-"312" [label = <(&lt;operator&gt;.fieldAccess,result.appendFormat)<SUB>83</SUB>> ]
-"317" [label = <(&lt;operator&gt;.logicalNot,!mService-&gt;isWhiteListedPackage(getPackageName()))<SUB>84</SUB>> ]
-"347" [label = <(&lt;operator&gt;.fieldAccess,result.appendFormat)<SUB>91</SUB>> ]
-"351" [label = <(string,mPackageName.string())<SUB>92</SUB>> ]
-"314" [label = <(FIELD_IDENTIFIER,appendFormat,appendFormat)<SUB>83</SUB>> ]
-"318" [label = <(isWhiteListedPackage,mService-&gt;isWhiteListedPackage(getPackageName()))<SUB>84</SUB>> ]
-"324" [label = <(append,result.append(&quot;RESTRICTED\n&quot;))<SUB>85</SUB>> ]
-"349" [label = <(FIELD_IDENTIFIER,appendFormat,appendFormat)<SUB>91</SUB>> ]
-"352" [label = <(&lt;operator&gt;.fieldAccess,mPackageName.string)<SUB>92</SUB>> ]
-"364" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = it.second)<SUB>95</SUB>> ]
-"369" [label = <(appendFormat,result.appendFormat(&quot;\t %s 0x%08x | status: %s | pending flush events %d \n&quot;,\012                            mService-&gt;getSensorName(it.first).string(),\012                            it.first,\012                            flushInfo.mFirstFlushPending ? &quot;First flush pending&quot; :\012 &quot;active&quot;,\012                            flushInfo.mPendingFlushEventsToSend))<SUB>96</SUB>> ]
-"319" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;isWhiteListedPackage)<SUB>84</SUB>> ]
-"322" [label = <(getPackageName,getPackageName())<SUB>84</SUB>> ]
-"325" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>85</SUB>> ]
-"354" [label = <(FIELD_IDENTIFIER,string,string)<SUB>92</SUB>> ]
-"366" [label = <(&lt;operator&gt;.fieldAccess,it.second)<SUB>95</SUB>> ]
-"370" [label = <(&lt;operator&gt;.fieldAccess,result.appendFormat)<SUB>96</SUB>> ]
-"374" [label = <(string,mService-&gt;getSensorName(it.first).string())<SUB>97</SUB>> ]
-"384" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>98</SUB>> ]
-"387" [label = <(&lt;operator&gt;.conditional,flushInfo.mFirstFlushPending ? &quot;First flush pending&quot; :\012 &quot;active&quot;)<SUB>99</SUB>> ]
-"393" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>101</SUB>> ]
-"321" [label = <(FIELD_IDENTIFIER,isWhiteListedPackage,isWhiteListedPackage)<SUB>84</SUB>> ]
-"327" [label = <(FIELD_IDENTIFIER,append,append)<SUB>85</SUB>> ]
-"368" [label = <(FIELD_IDENTIFIER,second,second)<SUB>95</SUB>> ]
-"372" [label = <(FIELD_IDENTIFIER,appendFormat,appendFormat)<SUB>96</SUB>> ]
-"375" [label = <(&lt;operator&gt;.fieldAccess,mService-&gt;getSensorName(it.first).string)<SUB>97</SUB>> ]
-"386" [label = <(FIELD_IDENTIFIER,first,first)<SUB>98</SUB>> ]
-"388" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>99</SUB>> ]
-"395" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>101</SUB>> ]
-"334" [label = <(append,result.append(&quot;DATA_INJECTION\n&quot;))<SUB>87</SUB>> ]
-"376" [label = <(getSensorName,mService-&gt;getSensorName(it.first))<SUB>97</SUB>> ]
-"383" [label = <(FIELD_IDENTIFIER,string,string)<SUB>97</SUB>> ]
-"390" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>99</SUB>> ]
-"335" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>87</SUB>> ]
-"341" [label = <(append,result.append(&quot;NORMAL\n&quot;))<SUB>89</SUB>> ]
-"377" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorName)<SUB>97</SUB>> ]
-"380" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>97</SUB>> ]
-"337" [label = <(FIELD_IDENTIFIER,append,append)<SUB>87</SUB>> ]
-"342" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>89</SUB>> ]
-"379" [label = <(FIELD_IDENTIFIER,getSensorName,getSensorName)<SUB>97</SUB>> ]
-"382" [label = <(FIELD_IDENTIFIER,first,first)<SUB>97</SUB>> ]
-"344" [label = <(FIELD_IDENTIFIER,append,append)<SUB>89</SUB>> ]
-"305" [label = <(METHOD,dump)<SUB>81</SUB>> ]
-"396" [label = <(METHOD_RETURN,void)<SUB>81</SUB>> ]
-  "309" -> "314" 
-  "311" -> "321" 
-  "346" -> "368" 
-  "312" -> "311" 
-  "317" -> "327" 
-  "317" -> "337" 
-  "317" -> "344" 
-  "347" -> "354" 
-  "351" -> "346" 
-  "314" -> "312" 
-  "318" -> "317" 
-  "324" -> "349" 
-  "349" -> "347" 
-  "352" -> "351" 
-  "364" -> "372" 
-  "369" -> "396" 
-  "369" -> "368" 
-  "319" -> "322" 
-  "322" -> "318" 
-  "325" -> "324" 
-  "354" -> "352" 
-  "366" -> "364" 
-  "370" -> "379" 
-  "374" -> "386" 
-  "384" -> "390" 
-  "387" -> "395" 
-  "393" -> "369" 
-  "321" -> "319" 
-  "327" -> "325" 
-  "368" -> "366" 
-  "372" -> "370" 
-  "375" -> "374" 
-  "386" -> "384" 
-  "388" -> "387" 
-  "395" -> "393" 
-  "334" -> "349" 
-  "376" -> "383" 
-  "383" -> "375" 
+"317" [label = <(_l,_l(mConnectionLock))<SUB>88</SUB>> ]
+"319" [label = <(appendFormat,result.appendFormat(&quot;\tOperating Mode: &quot;))<SUB>89</SUB>> ]
+"354" [label = <(appendFormat,result.appendFormat(&quot;\t %s | WakeLockRefCount %d | uid %d | cache size %d | &quot;\012 &quot;max cache size %d\n&quot;, mPackageName.string(), mWakeLockRefCount, mUid, mCacheSize,\012            mMaxCacheSize))<SUB>97</SUB>> ]
+"320" [label = <(&lt;operator&gt;.fieldAccess,result.appendFormat)<SUB>89</SUB>> ]
+"325" [label = <(&lt;operator&gt;.logicalNot,!mService-&gt;isWhiteListedPackage(getPackageName()))<SUB>90</SUB>> ]
+"355" [label = <(&lt;operator&gt;.fieldAccess,result.appendFormat)<SUB>97</SUB>> ]
+"359" [label = <(string,mPackageName.string())<SUB>98</SUB>> ]
+"322" [label = <(FIELD_IDENTIFIER,appendFormat,appendFormat)<SUB>89</SUB>> ]
+"326" [label = <(isWhiteListedPackage,mService-&gt;isWhiteListedPackage(getPackageName()))<SUB>90</SUB>> ]
+"332" [label = <(append,result.append(&quot;RESTRICTED\n&quot;))<SUB>91</SUB>> ]
+"357" [label = <(FIELD_IDENTIFIER,appendFormat,appendFormat)<SUB>97</SUB>> ]
+"360" [label = <(&lt;operator&gt;.fieldAccess,mPackageName.string)<SUB>98</SUB>> ]
+"372" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = it.second)<SUB>101</SUB>> ]
+"377" [label = <(appendFormat,result.appendFormat(&quot;\t %s 0x%08x | status: %s | pending flush events %d \n&quot;,\012                            mService-&gt;getSensorName(it.first).string(),\012                            it.first,\012                            flushInfo.mFirstFlushPending ? &quot;First flush pending&quot; :\012 &quot;active&quot;,\012                            flushInfo.mPendingFlushEventsToSend))<SUB>102</SUB>> ]
+"327" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;isWhiteListedPackage)<SUB>90</SUB>> ]
+"330" [label = <(getPackageName,getPackageName())<SUB>90</SUB>> ]
+"333" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>91</SUB>> ]
+"362" [label = <(FIELD_IDENTIFIER,string,string)<SUB>98</SUB>> ]
+"374" [label = <(&lt;operator&gt;.fieldAccess,it.second)<SUB>101</SUB>> ]
+"378" [label = <(&lt;operator&gt;.fieldAccess,result.appendFormat)<SUB>102</SUB>> ]
+"382" [label = <(string,mService-&gt;getSensorName(it.first).string())<SUB>103</SUB>> ]
+"392" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>104</SUB>> ]
+"395" [label = <(&lt;operator&gt;.conditional,flushInfo.mFirstFlushPending ? &quot;First flush pending&quot; :\012 &quot;active&quot;)<SUB>105</SUB>> ]
+"401" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>107</SUB>> ]
+"329" [label = <(FIELD_IDENTIFIER,isWhiteListedPackage,isWhiteListedPackage)<SUB>90</SUB>> ]
+"335" [label = <(FIELD_IDENTIFIER,append,append)<SUB>91</SUB>> ]
+"376" [label = <(FIELD_IDENTIFIER,second,second)<SUB>101</SUB>> ]
+"380" [label = <(FIELD_IDENTIFIER,appendFormat,appendFormat)<SUB>102</SUB>> ]
+"383" [label = <(&lt;operator&gt;.fieldAccess,mService-&gt;getSensorName(it.first).string)<SUB>103</SUB>> ]
+"394" [label = <(FIELD_IDENTIFIER,first,first)<SUB>104</SUB>> ]
+"396" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>105</SUB>> ]
+"403" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>107</SUB>> ]
+"342" [label = <(append,result.append(&quot;DATA_INJECTION\n&quot;))<SUB>93</SUB>> ]
+"384" [label = <(getSensorName,mService-&gt;getSensorName(it.first))<SUB>103</SUB>> ]
+"391" [label = <(FIELD_IDENTIFIER,string,string)<SUB>103</SUB>> ]
+"398" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>105</SUB>> ]
+"343" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>93</SUB>> ]
+"349" [label = <(append,result.append(&quot;NORMAL\n&quot;))<SUB>95</SUB>> ]
+"385" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorName)<SUB>103</SUB>> ]
+"388" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>103</SUB>> ]
+"345" [label = <(FIELD_IDENTIFIER,append,append)<SUB>93</SUB>> ]
+"350" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>95</SUB>> ]
+"387" [label = <(FIELD_IDENTIFIER,getSensorName,getSensorName)<SUB>103</SUB>> ]
+"390" [label = <(FIELD_IDENTIFIER,first,first)<SUB>103</SUB>> ]
+"352" [label = <(FIELD_IDENTIFIER,append,append)<SUB>95</SUB>> ]
+"313" [label = <(METHOD,dump)<SUB>87</SUB>> ]
+"404" [label = <(METHOD_RETURN,void)<SUB>87</SUB>> ]
+  "317" -> "322" 
+  "319" -> "329" 
+  "354" -> "376" 
+  "320" -> "319" 
+  "325" -> "335" 
+  "325" -> "345" 
+  "325" -> "352" 
+  "355" -> "362" 
+  "359" -> "354" 
+  "322" -> "320" 
+  "326" -> "325" 
+  "332" -> "357" 
+  "357" -> "355" 
+  "360" -> "359" 
+  "372" -> "380" 
+  "377" -> "404" 
+  "377" -> "376" 
+  "327" -> "330" 
+  "330" -> "326" 
+  "333" -> "332" 
+  "362" -> "360" 
+  "374" -> "372" 
+  "378" -> "387" 
+  "382" -> "394" 
+  "392" -> "398" 
+  "395" -> "403" 
+  "401" -> "377" 
+  "329" -> "327" 
+  "335" -> "333" 
+  "376" -> "374" 
+  "380" -> "378" 
+  "383" -> "382" 
+  "394" -> "392" 
+  "396" -> "395" 
+  "403" -> "401" 
+  "342" -> "357" 
+  "384" -> "391" 
+  "391" -> "383" 
+  "398" -> "396" 
+  "343" -> "342" 
+  "349" -> "357" 
+  "385" -> "390" 
+  "388" -> "384" 
+  "345" -> "343" 
+  "350" -> "349" 
+  "387" -> "385" 
   "390" -> "388" 
-  "335" -> "334" 
-  "341" -> "349" 
-  "377" -> "382" 
-  "380" -> "376" 
-  "337" -> "335" 
-  "342" -> "341" 
-  "379" -> "377" 
-  "382" -> "380" 
-  "344" -> "342" 
-  "305" -> "309" 
+  "352" -> "350" 
+  "313" -> "317" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/45-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/45-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/45-cfg.dot	2023-06-07 19:32:15.377403171 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/45-cfg.dot	2023-06-07 19:32:19.557402780 +0330
@@ -1,176 +1,176 @@
 digraph "dump" {  
-"402" [label = <(_l,_l(mConnectionLock))<SUB>124</SUB>> ]
-"437" [label = <(write,proto-&gt;write(PACKAGE_NAME, std::string(mPackageName.string())))<SUB>133</SUB>> ]
-"450" [label = <(write,proto-&gt;write(WAKE_LOCK_REF_COUNT, int32_t(mWakeLockRefCount)))<SUB>134</SUB>> ]
-"457" [label = <(write,proto-&gt;write(UID, int32_t(mUid)))<SUB>135</SUB>> ]
-"464" [label = <(write,proto-&gt;write(CACHE_SIZE, int32_t(mCacheSize)))<SUB>136</SUB>> ]
-"471" [label = <(write,proto-&gt;write(MAX_CACHE_SIZE, int32_t(mMaxCacheSize)))<SUB>137</SUB>> ]
-"405" [label = <(&lt;operator&gt;.logicalNot,!mService-&gt;isWhiteListedPackage(getPackageName()))<SUB>126</SUB>> ]
-"438" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>133</SUB>> ]
-"442" [label = <(std::string,std::string(mPackageName.string()))<SUB>133</SUB>> ]
-"451" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>134</SUB>> ]
-"455" [label = <(int32_t,int32_t(mWakeLockRefCount))<SUB>134</SUB>> ]
-"458" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>135</SUB>> ]
-"462" [label = <(int32_t,int32_t(mUid))<SUB>135</SUB>> ]
-"465" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>136</SUB>> ]
-"469" [label = <(int32_t,int32_t(mCacheSize))<SUB>136</SUB>> ]
-"472" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>137</SUB>> ]
-"476" [label = <(int32_t,int32_t(mMaxCacheSize))<SUB>137</SUB>> ]
-"406" [label = <(isWhiteListedPackage,mService-&gt;isWhiteListedPackage(getPackageName()))<SUB>126</SUB>> ]
-"412" [label = <(write,proto-&gt;write(OPERATING_MODE, OP_MODE_RESTRICTED))<SUB>127</SUB>> ]
-"440" [label = <(FIELD_IDENTIFIER,write,write)<SUB>133</SUB>> ]
-"443" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>133</SUB>> ]
-"446" [label = <(string,mPackageName.string())<SUB>133</SUB>> ]
-"453" [label = <(FIELD_IDENTIFIER,write,write)<SUB>134</SUB>> ]
-"460" [label = <(FIELD_IDENTIFIER,write,write)<SUB>135</SUB>> ]
-"467" [label = <(FIELD_IDENTIFIER,write,write)<SUB>136</SUB>> ]
-"474" [label = <(FIELD_IDENTIFIER,write,write)<SUB>137</SUB>> ]
-"483" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = it.second)<SUB>139</SUB>> ]
-"489" [label = <(&lt;operator&gt;.assignment,token = proto-&gt;start(FLUSH_INFOS))<SUB>140</SUB>> ]
-"496" [label = <(write,proto-&gt;write(FlushInfoProto::SENSOR_NAME,\012                std::string(mService-&gt;getSensorName(it.first))))<SUB>141</SUB>> ]
-"514" [label = <(write,proto-&gt;write(FlushInfoProto::SENSOR_HANDLE, it.first))<SUB>143</SUB>> ]
-"524" [label = <(write,proto-&gt;write(FlushInfoProto::FIRST_FLUSH_PENDING, flushInfo.mFirstFlushPending))<SUB>144</SUB>> ]
-"534" [label = <(write,proto-&gt;write(FlushInfoProto::PENDING_FLUSH_EVENTS_TO_SEND,\012                flushInfo.mPendingFlushEventsToSend))<SUB>145</SUB>> ]
-"544" [label = <(end,proto-&gt;end(token))<SUB>147</SUB>> ]
-"407" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;isWhiteListedPackage)<SUB>126</SUB>> ]
-"410" [label = <(getPackageName,getPackageName())<SUB>126</SUB>> ]
-"413" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>127</SUB>> ]
-"445" [label = <(FIELD_IDENTIFIER,string,string)<SUB>133</SUB>> ]
-"447" [label = <(&lt;operator&gt;.fieldAccess,mPackageName.string)<SUB>133</SUB>> ]
-"485" [label = <(&lt;operator&gt;.fieldAccess,it.second)<SUB>139</SUB>> ]
-"491" [label = <(start,proto-&gt;start(FLUSH_INFOS))<SUB>140</SUB>> ]
-"497" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>141</SUB>> ]
-"500" [label = <(&lt;operator&gt;.fieldAccess,FlushInfoProto::SENSOR_NAME)<SUB>141</SUB>> ]
-"503" [label = <(std::string,std::string(mService-&gt;getSensorName(it.first)))<SUB>142</SUB>> ]
-"515" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>143</SUB>> ]
-"518" [label = <(&lt;operator&gt;.fieldAccess,FlushInfoProto::SENSOR_HANDLE)<SUB>143</SUB>> ]
-"521" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>143</SUB>> ]
-"525" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>144</SUB>> ]
-"528" [label = <(&lt;operator&gt;.fieldAccess,FlushInfoProto::FIRST_FLUSH_PENDING)<SUB>144</SUB>> ]
-"531" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>144</SUB>> ]
-"535" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>145</SUB>> ]
-"538" [label = <(&lt;operator&gt;.fieldAccess,FlushInfoProto::PENDING_FLUSH_EVENTS_TO_SEND)<SUB>145</SUB>> ]
-"541" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>146</SUB>> ]
-"545" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;end)<SUB>147</SUB>> ]
-"409" [label = <(FIELD_IDENTIFIER,isWhiteListedPackage,isWhiteListedPackage)<SUB>126</SUB>> ]
-"415" [label = <(FIELD_IDENTIFIER,write,write)<SUB>127</SUB>> ]
-"449" [label = <(FIELD_IDENTIFIER,string,string)<SUB>133</SUB>> ]
-"487" [label = <(FIELD_IDENTIFIER,second,second)<SUB>139</SUB>> ]
-"492" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;start)<SUB>140</SUB>> ]
-"499" [label = <(FIELD_IDENTIFIER,write,write)<SUB>141</SUB>> ]
-"502" [label = <(FIELD_IDENTIFIER,SENSOR_NAME,SENSOR_NAME)<SUB>141</SUB>> ]
-"504" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>142</SUB>> ]
-"507" [label = <(getSensorName,mService-&gt;getSensorName(it.first))<SUB>142</SUB>> ]
-"517" [label = <(FIELD_IDENTIFIER,write,write)<SUB>143</SUB>> ]
-"520" [label = <(FIELD_IDENTIFIER,SENSOR_HANDLE,SENSOR_HANDLE)<SUB>143</SUB>> ]
-"523" [label = <(FIELD_IDENTIFIER,first,first)<SUB>143</SUB>> ]
-"527" [label = <(FIELD_IDENTIFIER,write,write)<SUB>144</SUB>> ]
-"530" [label = <(FIELD_IDENTIFIER,FIRST_FLUSH_PENDING,FIRST_FLUSH_PENDING)<SUB>144</SUB>> ]
-"533" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>144</SUB>> ]
-"537" [label = <(FIELD_IDENTIFIER,write,write)<SUB>145</SUB>> ]
-"540" [label = <(FIELD_IDENTIFIER,PENDING_FLUSH_EVENTS_TO_SEND,PENDING_FLUSH_EVENTS_TO_SEND)<SUB>145</SUB>> ]
-"543" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>146</SUB>> ]
-"547" [label = <(FIELD_IDENTIFIER,end,end)<SUB>147</SUB>> ]
-"423" [label = <(write,proto-&gt;write(OPERATING_MODE, OP_MODE_DATA_INJECTION))<SUB>129</SUB>> ]
-"494" [label = <(FIELD_IDENTIFIER,start,start)<SUB>140</SUB>> ]
-"506" [label = <(FIELD_IDENTIFIER,string,string)<SUB>142</SUB>> ]
-"508" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorName)<SUB>142</SUB>> ]
-"511" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>142</SUB>> ]
-"424" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>129</SUB>> ]
-"431" [label = <(write,proto-&gt;write(OPERATING_MODE, OP_MODE_NORMAL))<SUB>131</SUB>> ]
-"510" [label = <(FIELD_IDENTIFIER,getSensorName,getSensorName)<SUB>142</SUB>> ]
-"513" [label = <(FIELD_IDENTIFIER,first,first)<SUB>142</SUB>> ]
-"426" [label = <(FIELD_IDENTIFIER,write,write)<SUB>129</SUB>> ]
-"432" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>131</SUB>> ]
-"434" [label = <(FIELD_IDENTIFIER,write,write)<SUB>131</SUB>> ]
-"398" [label = <(METHOD,dump)<SUB>122</SUB>> ]
-"549" [label = <(METHOD_RETURN,void)<SUB>122</SUB>> ]
-  "402" -> "409" 
-  "437" -> "453" 
-  "450" -> "460" 
-  "457" -> "467" 
-  "464" -> "474" 
-  "471" -> "487" 
-  "405" -> "415" 
-  "405" -> "426" 
-  "405" -> "434" 
-  "438" -> "445" 
-  "442" -> "437" 
-  "451" -> "455" 
-  "455" -> "450" 
-  "458" -> "462" 
-  "462" -> "457" 
-  "465" -> "469" 
-  "469" -> "464" 
-  "472" -> "476" 
-  "476" -> "471" 
-  "406" -> "405" 
-  "412" -> "440" 
-  "440" -> "438" 
-  "443" -> "449" 
-  "446" -> "442" 
+"410" [label = <(_l,_l(mConnectionLock))<SUB>130</SUB>> ]
+"445" [label = <(write,proto-&gt;write(PACKAGE_NAME, std::string(mPackageName.string())))<SUB>139</SUB>> ]
+"458" [label = <(write,proto-&gt;write(WAKE_LOCK_REF_COUNT, int32_t(mWakeLockRefCount)))<SUB>140</SUB>> ]
+"465" [label = <(write,proto-&gt;write(UID, int32_t(mUid)))<SUB>141</SUB>> ]
+"472" [label = <(write,proto-&gt;write(CACHE_SIZE, int32_t(mCacheSize)))<SUB>142</SUB>> ]
+"479" [label = <(write,proto-&gt;write(MAX_CACHE_SIZE, int32_t(mMaxCacheSize)))<SUB>143</SUB>> ]
+"413" [label = <(&lt;operator&gt;.logicalNot,!mService-&gt;isWhiteListedPackage(getPackageName()))<SUB>132</SUB>> ]
+"446" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>139</SUB>> ]
+"450" [label = <(std::string,std::string(mPackageName.string()))<SUB>139</SUB>> ]
+"459" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>140</SUB>> ]
+"463" [label = <(int32_t,int32_t(mWakeLockRefCount))<SUB>140</SUB>> ]
+"466" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>141</SUB>> ]
+"470" [label = <(int32_t,int32_t(mUid))<SUB>141</SUB>> ]
+"473" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>142</SUB>> ]
+"477" [label = <(int32_t,int32_t(mCacheSize))<SUB>142</SUB>> ]
+"480" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>143</SUB>> ]
+"484" [label = <(int32_t,int32_t(mMaxCacheSize))<SUB>143</SUB>> ]
+"414" [label = <(isWhiteListedPackage,mService-&gt;isWhiteListedPackage(getPackageName()))<SUB>132</SUB>> ]
+"420" [label = <(write,proto-&gt;write(OPERATING_MODE, OP_MODE_RESTRICTED))<SUB>133</SUB>> ]
+"448" [label = <(FIELD_IDENTIFIER,write,write)<SUB>139</SUB>> ]
+"451" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>139</SUB>> ]
+"454" [label = <(string,mPackageName.string())<SUB>139</SUB>> ]
+"461" [label = <(FIELD_IDENTIFIER,write,write)<SUB>140</SUB>> ]
+"468" [label = <(FIELD_IDENTIFIER,write,write)<SUB>141</SUB>> ]
+"475" [label = <(FIELD_IDENTIFIER,write,write)<SUB>142</SUB>> ]
+"482" [label = <(FIELD_IDENTIFIER,write,write)<SUB>143</SUB>> ]
+"491" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = it.second)<SUB>145</SUB>> ]
+"497" [label = <(&lt;operator&gt;.assignment,token = proto-&gt;start(FLUSH_INFOS))<SUB>146</SUB>> ]
+"504" [label = <(write,proto-&gt;write(FlushInfoProto::SENSOR_NAME,\012                std::string(mService-&gt;getSensorName(it.first))))<SUB>147</SUB>> ]
+"522" [label = <(write,proto-&gt;write(FlushInfoProto::SENSOR_HANDLE, it.first))<SUB>149</SUB>> ]
+"532" [label = <(write,proto-&gt;write(FlushInfoProto::FIRST_FLUSH_PENDING, flushInfo.mFirstFlushPending))<SUB>150</SUB>> ]
+"542" [label = <(write,proto-&gt;write(FlushInfoProto::PENDING_FLUSH_EVENTS_TO_SEND,\012                flushInfo.mPendingFlushEventsToSend))<SUB>151</SUB>> ]
+"552" [label = <(end,proto-&gt;end(token))<SUB>153</SUB>> ]
+"415" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;isWhiteListedPackage)<SUB>132</SUB>> ]
+"418" [label = <(getPackageName,getPackageName())<SUB>132</SUB>> ]
+"421" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>133</SUB>> ]
+"453" [label = <(FIELD_IDENTIFIER,string,string)<SUB>139</SUB>> ]
+"455" [label = <(&lt;operator&gt;.fieldAccess,mPackageName.string)<SUB>139</SUB>> ]
+"493" [label = <(&lt;operator&gt;.fieldAccess,it.second)<SUB>145</SUB>> ]
+"499" [label = <(start,proto-&gt;start(FLUSH_INFOS))<SUB>146</SUB>> ]
+"505" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>147</SUB>> ]
+"508" [label = <(&lt;operator&gt;.fieldAccess,FlushInfoProto::SENSOR_NAME)<SUB>147</SUB>> ]
+"511" [label = <(std::string,std::string(mService-&gt;getSensorName(it.first)))<SUB>148</SUB>> ]
+"523" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>149</SUB>> ]
+"526" [label = <(&lt;operator&gt;.fieldAccess,FlushInfoProto::SENSOR_HANDLE)<SUB>149</SUB>> ]
+"529" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>149</SUB>> ]
+"533" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>150</SUB>> ]
+"536" [label = <(&lt;operator&gt;.fieldAccess,FlushInfoProto::FIRST_FLUSH_PENDING)<SUB>150</SUB>> ]
+"539" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>150</SUB>> ]
+"543" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>151</SUB>> ]
+"546" [label = <(&lt;operator&gt;.fieldAccess,FlushInfoProto::PENDING_FLUSH_EVENTS_TO_SEND)<SUB>151</SUB>> ]
+"549" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>152</SUB>> ]
+"553" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;end)<SUB>153</SUB>> ]
+"417" [label = <(FIELD_IDENTIFIER,isWhiteListedPackage,isWhiteListedPackage)<SUB>132</SUB>> ]
+"423" [label = <(FIELD_IDENTIFIER,write,write)<SUB>133</SUB>> ]
+"457" [label = <(FIELD_IDENTIFIER,string,string)<SUB>139</SUB>> ]
+"495" [label = <(FIELD_IDENTIFIER,second,second)<SUB>145</SUB>> ]
+"500" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;start)<SUB>146</SUB>> ]
+"507" [label = <(FIELD_IDENTIFIER,write,write)<SUB>147</SUB>> ]
+"510" [label = <(FIELD_IDENTIFIER,SENSOR_NAME,SENSOR_NAME)<SUB>147</SUB>> ]
+"512" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>148</SUB>> ]
+"515" [label = <(getSensorName,mService-&gt;getSensorName(it.first))<SUB>148</SUB>> ]
+"525" [label = <(FIELD_IDENTIFIER,write,write)<SUB>149</SUB>> ]
+"528" [label = <(FIELD_IDENTIFIER,SENSOR_HANDLE,SENSOR_HANDLE)<SUB>149</SUB>> ]
+"531" [label = <(FIELD_IDENTIFIER,first,first)<SUB>149</SUB>> ]
+"535" [label = <(FIELD_IDENTIFIER,write,write)<SUB>150</SUB>> ]
+"538" [label = <(FIELD_IDENTIFIER,FIRST_FLUSH_PENDING,FIRST_FLUSH_PENDING)<SUB>150</SUB>> ]
+"541" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>150</SUB>> ]
+"545" [label = <(FIELD_IDENTIFIER,write,write)<SUB>151</SUB>> ]
+"548" [label = <(FIELD_IDENTIFIER,PENDING_FLUSH_EVENTS_TO_SEND,PENDING_FLUSH_EVENTS_TO_SEND)<SUB>151</SUB>> ]
+"551" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>152</SUB>> ]
+"555" [label = <(FIELD_IDENTIFIER,end,end)<SUB>153</SUB>> ]
+"431" [label = <(write,proto-&gt;write(OPERATING_MODE, OP_MODE_DATA_INJECTION))<SUB>135</SUB>> ]
+"502" [label = <(FIELD_IDENTIFIER,start,start)<SUB>146</SUB>> ]
+"514" [label = <(FIELD_IDENTIFIER,string,string)<SUB>148</SUB>> ]
+"516" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorName)<SUB>148</SUB>> ]
+"519" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>148</SUB>> ]
+"432" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>135</SUB>> ]
+"439" [label = <(write,proto-&gt;write(OPERATING_MODE, OP_MODE_NORMAL))<SUB>137</SUB>> ]
+"518" [label = <(FIELD_IDENTIFIER,getSensorName,getSensorName)<SUB>148</SUB>> ]
+"521" [label = <(FIELD_IDENTIFIER,first,first)<SUB>148</SUB>> ]
+"434" [label = <(FIELD_IDENTIFIER,write,write)<SUB>135</SUB>> ]
+"440" [label = <(&lt;operator&gt;.indirectFieldAccess,proto-&gt;write)<SUB>137</SUB>> ]
+"442" [label = <(FIELD_IDENTIFIER,write,write)<SUB>137</SUB>> ]
+"406" [label = <(METHOD,dump)<SUB>128</SUB>> ]
+"557" [label = <(METHOD_RETURN,void)<SUB>128</SUB>> ]
+  "410" -> "417" 
+  "445" -> "461" 
+  "458" -> "468" 
+  "465" -> "475" 
+  "472" -> "482" 
+  "479" -> "495" 
+  "413" -> "423" 
+  "413" -> "434" 
+  "413" -> "442" 
+  "446" -> "453" 
+  "450" -> "445" 
+  "459" -> "463" 
+  "463" -> "458" 
+  "466" -> "470" 
+  "470" -> "465" 
+  "473" -> "477" 
+  "477" -> "472" 
+  "480" -> "484" 
+  "484" -> "479" 
+  "414" -> "413" 
+  "420" -> "448" 
+  "448" -> "446" 
+  "451" -> "457" 
+  "454" -> "450" 
+  "461" -> "459" 
+  "468" -> "466" 
+  "475" -> "473" 
+  "482" -> "480" 
+  "491" -> "502" 
+  "497" -> "507" 
+  "504" -> "525" 
+  "522" -> "535" 
+  "532" -> "545" 
+  "542" -> "555" 
+  "552" -> "557" 
+  "552" -> "495" 
+  "415" -> "418" 
+  "418" -> "414" 
+  "421" -> "420" 
   "453" -> "451" 
-  "460" -> "458" 
-  "467" -> "465" 
-  "474" -> "472" 
-  "483" -> "494" 
-  "489" -> "499" 
-  "496" -> "517" 
-  "514" -> "527" 
-  "524" -> "537" 
-  "534" -> "547" 
-  "544" -> "549" 
-  "544" -> "487" 
-  "407" -> "410" 
-  "410" -> "406" 
-  "413" -> "412" 
-  "445" -> "443" 
-  "447" -> "446" 
-  "485" -> "483" 
-  "491" -> "489" 
-  "497" -> "502" 
-  "500" -> "506" 
-  "503" -> "496" 
-  "515" -> "520" 
-  "518" -> "523" 
-  "521" -> "514" 
-  "525" -> "530" 
-  "528" -> "533" 
-  "531" -> "524" 
-  "535" -> "540" 
-  "538" -> "543" 
-  "541" -> "534" 
-  "545" -> "544" 
-  "409" -> "407" 
-  "415" -> "413" 
-  "449" -> "447" 
-  "487" -> "485" 
-  "492" -> "491" 
+  "455" -> "454" 
+  "493" -> "491" 
   "499" -> "497" 
-  "502" -> "500" 
-  "504" -> "510" 
-  "507" -> "503" 
-  "517" -> "515" 
-  "520" -> "518" 
-  "523" -> "521" 
-  "527" -> "525" 
-  "530" -> "528" 
-  "533" -> "531" 
-  "537" -> "535" 
-  "540" -> "538" 
-  "543" -> "541" 
-  "547" -> "545" 
-  "423" -> "440" 
-  "494" -> "492" 
-  "506" -> "504" 
-  "508" -> "513" 
-  "511" -> "507" 
-  "424" -> "423" 
-  "431" -> "440" 
+  "505" -> "510" 
+  "508" -> "514" 
+  "511" -> "504" 
+  "523" -> "528" 
+  "526" -> "531" 
+  "529" -> "522" 
+  "533" -> "538" 
+  "536" -> "541" 
+  "539" -> "532" 
+  "543" -> "548" 
+  "546" -> "551" 
+  "549" -> "542" 
+  "553" -> "552" 
+  "417" -> "415" 
+  "423" -> "421" 
+  "457" -> "455" 
+  "495" -> "493" 
+  "500" -> "499" 
+  "507" -> "505" 
   "510" -> "508" 
-  "513" -> "511" 
-  "426" -> "424" 
+  "512" -> "518" 
+  "515" -> "511" 
+  "525" -> "523" 
+  "528" -> "526" 
+  "531" -> "529" 
+  "535" -> "533" 
+  "538" -> "536" 
+  "541" -> "539" 
+  "545" -> "543" 
+  "548" -> "546" 
+  "551" -> "549" 
+  "555" -> "553" 
+  "431" -> "448" 
+  "502" -> "500" 
+  "514" -> "512" 
+  "516" -> "521" 
+  "519" -> "515" 
   "432" -> "431" 
+  "439" -> "448" 
+  "518" -> "516" 
+  "521" -> "519" 
   "434" -> "432" 
-  "398" -> "402" 
+  "440" -> "439" 
+  "442" -> "440" 
+  "406" -> "410" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/46-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/46-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/46-cfg.dot	2023-06-07 19:32:15.377403171 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/46-cfg.dot	2023-06-07 19:32:19.567402778 +0330
@@ -1,56 +1,56 @@
 digraph "addSensor" {  
-"555" [label = <(_l,_l(mConnectionLock))<SUB>161</SUB>> ]
-"557" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si = mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>162</SUB>> ]
-"592" [label = <(&lt;operator&gt;.assignment,mSensorInfo[handle] = FlushInfo())<SUB>168</SUB>> ]
-"597" [label = <(RETURN,return true;,return true;)<SUB>169</SUB>> ]
-"558" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>162</SUB>> ]
-"563" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>162</SUB>> ]
-"569" [label = <(&lt;operator&gt;.logicalOr,si == nullptr ||\012 !canAccessSensor(si-&gt;getSensor(), &quot;Tried adding&quot;, mOpPackageName) ||\012        mSensorInfo.count(handle) &gt; 0)<SUB>163</SUB>> ]
-"593" [label = <(&lt;operator&gt;.indirectIndexAccess,mSensorInfo[handle])<SUB>168</SUB>> ]
-"596" [label = <(FlushInfo,FlushInfo())<SUB>168</SUB>> ]
-"559" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>162</SUB>> ]
-"564" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>162</SUB>> ]
-"570" [label = <(&lt;operator&gt;.logicalOr,si == nullptr ||\012 !canAccessSensor(si-&gt;getSensor(), &quot;Tried adding&quot;, mOpPackageName))<SUB>163</SUB>> ]
-"582" [label = <(&lt;operator&gt;.greaterThan,mSensorInfo.count(handle) &gt; 0)<SUB>165</SUB>> ]
-"590" [label = <(RETURN,return false;,return false;)<SUB>166</SUB>> ]
-"566" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>162</SUB>> ]
-"571" [label = <(&lt;operator&gt;.equals,si == nullptr)<SUB>163</SUB>> ]
-"574" [label = <(&lt;operator&gt;.logicalNot,!canAccessSensor(si-&gt;getSensor(), &quot;Tried adding&quot;, mOpPackageName))<SUB>164</SUB>> ]
-"583" [label = <(count,mSensorInfo.count(handle))<SUB>165</SUB>> ]
-"575" [label = <(canAccessSensor,canAccessSensor(si-&gt;getSensor(), &quot;Tried adding&quot;, mOpPackageName))<SUB>164</SUB>> ]
-"584" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>165</SUB>> ]
-"576" [label = <(getSensor,si-&gt;getSensor())<SUB>164</SUB>> ]
-"586" [label = <(FIELD_IDENTIFIER,count,count)<SUB>165</SUB>> ]
-"577" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>164</SUB>> ]
-"579" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>164</SUB>> ]
-"551" [label = <(METHOD,addSensor)<SUB>160</SUB>> ]
-"599" [label = <(METHOD_RETURN,bool)<SUB>160</SUB>> ]
-  "555" -> "559" 
-  "557" -> "571" 
-  "592" -> "597" 
-  "597" -> "599" 
-  "558" -> "566" 
-  "563" -> "557" 
-  "569" -> "590" 
-  "569" -> "593" 
-  "593" -> "596" 
-  "596" -> "592" 
-  "559" -> "558" 
-  "564" -> "563" 
-  "570" -> "569" 
-  "570" -> "586" 
-  "582" -> "569" 
-  "590" -> "599" 
-  "566" -> "564" 
-  "571" -> "570" 
-  "571" -> "579" 
-  "574" -> "570" 
+"563" [label = <(_l,_l(mConnectionLock))<SUB>167</SUB>> ]
+"565" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si = mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>168</SUB>> ]
+"600" [label = <(&lt;operator&gt;.assignment,mSensorInfo[handle] = FlushInfo())<SUB>174</SUB>> ]
+"605" [label = <(RETURN,return true;,return true;)<SUB>175</SUB>> ]
+"566" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>168</SUB>> ]
+"571" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>168</SUB>> ]
+"577" [label = <(&lt;operator&gt;.logicalOr,si == nullptr ||\012 !canAccessSensor(si-&gt;getSensor(), &quot;Tried adding&quot;, mOpPackageName) ||\012        mSensorInfo.count(handle) &gt; 0)<SUB>169</SUB>> ]
+"601" [label = <(&lt;operator&gt;.indirectIndexAccess,mSensorInfo[handle])<SUB>174</SUB>> ]
+"604" [label = <(FlushInfo,FlushInfo())<SUB>174</SUB>> ]
+"567" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>168</SUB>> ]
+"572" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>168</SUB>> ]
+"578" [label = <(&lt;operator&gt;.logicalOr,si == nullptr ||\012 !canAccessSensor(si-&gt;getSensor(), &quot;Tried adding&quot;, mOpPackageName))<SUB>169</SUB>> ]
+"590" [label = <(&lt;operator&gt;.greaterThan,mSensorInfo.count(handle) &gt; 0)<SUB>171</SUB>> ]
+"598" [label = <(RETURN,return false;,return false;)<SUB>172</SUB>> ]
+"574" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>168</SUB>> ]
+"579" [label = <(&lt;operator&gt;.equals,si == nullptr)<SUB>169</SUB>> ]
+"582" [label = <(&lt;operator&gt;.logicalNot,!canAccessSensor(si-&gt;getSensor(), &quot;Tried adding&quot;, mOpPackageName))<SUB>170</SUB>> ]
+"591" [label = <(count,mSensorInfo.count(handle))<SUB>171</SUB>> ]
+"583" [label = <(canAccessSensor,canAccessSensor(si-&gt;getSensor(), &quot;Tried adding&quot;, mOpPackageName))<SUB>170</SUB>> ]
+"592" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>171</SUB>> ]
+"584" [label = <(getSensor,si-&gt;getSensor())<SUB>170</SUB>> ]
+"594" [label = <(FIELD_IDENTIFIER,count,count)<SUB>171</SUB>> ]
+"585" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>170</SUB>> ]
+"587" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>170</SUB>> ]
+"559" [label = <(METHOD,addSensor)<SUB>166</SUB>> ]
+"607" [label = <(METHOD_RETURN,bool)<SUB>166</SUB>> ]
+  "563" -> "567" 
+  "565" -> "579" 
+  "600" -> "605" 
+  "605" -> "607" 
+  "566" -> "574" 
+  "571" -> "565" 
+  "577" -> "598" 
+  "577" -> "601" 
+  "601" -> "604" 
+  "604" -> "600" 
+  "567" -> "566" 
+  "572" -> "571" 
+  "578" -> "577" 
+  "578" -> "594" 
+  "590" -> "577" 
+  "598" -> "607" 
+  "574" -> "572" 
+  "579" -> "578" 
+  "579" -> "587" 
+  "582" -> "578" 
+  "591" -> "590" 
   "583" -> "582" 
-  "575" -> "574" 
+  "592" -> "591" 
   "584" -> "583" 
-  "576" -> "575" 
-  "586" -> "584" 
-  "577" -> "576" 
-  "579" -> "577" 
-  "551" -> "555" 
+  "594" -> "592" 
+  "585" -> "584" 
+  "587" -> "585" 
+  "559" -> "563" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/47-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/47-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/47-cfg.dot	2023-06-07 19:32:15.377403171 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/47-cfg.dot	2023-06-07 19:32:19.567402778 +0330
@@ -1,20 +1,20 @@
 digraph "removeSensor" {  
-"605" [label = <(_l,_l(mConnectionLock))<SUB>173</SUB>> ]
-"618" [label = <(RETURN,return false;,return false;)<SUB>177</SUB>> ]
-"608" [label = <(&lt;operator&gt;.greaterEqualsThan,mSensorInfo.erase(handle) &gt;= 0)<SUB>174</SUB>> ]
-"609" [label = <(erase,mSensorInfo.erase(handle))<SUB>174</SUB>> ]
-"616" [label = <(RETURN,return true;,return true;)<SUB>175</SUB>> ]
-"610" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.erase)<SUB>174</SUB>> ]
-"612" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>174</SUB>> ]
-"601" [label = <(METHOD,removeSensor)<SUB>172</SUB>> ]
-"620" [label = <(METHOD_RETURN,bool)<SUB>172</SUB>> ]
-  "605" -> "612" 
-  "618" -> "620" 
-  "608" -> "616" 
-  "608" -> "618" 
-  "609" -> "608" 
-  "616" -> "620" 
-  "610" -> "609" 
-  "612" -> "610" 
-  "601" -> "605" 
+"613" [label = <(_l,_l(mConnectionLock))<SUB>179</SUB>> ]
+"626" [label = <(RETURN,return false;,return false;)<SUB>183</SUB>> ]
+"616" [label = <(&lt;operator&gt;.greaterEqualsThan,mSensorInfo.erase(handle) &gt;= 0)<SUB>180</SUB>> ]
+"617" [label = <(erase,mSensorInfo.erase(handle))<SUB>180</SUB>> ]
+"624" [label = <(RETURN,return true;,return true;)<SUB>181</SUB>> ]
+"618" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.erase)<SUB>180</SUB>> ]
+"620" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>180</SUB>> ]
+"609" [label = <(METHOD,removeSensor)<SUB>178</SUB>> ]
+"628" [label = <(METHOD_RETURN,bool)<SUB>178</SUB>> ]
+  "613" -> "620" 
+  "626" -> "628" 
+  "616" -> "624" 
+  "616" -> "626" 
+  "617" -> "616" 
+  "624" -> "628" 
+  "618" -> "617" 
+  "620" -> "618" 
+  "609" -> "613" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/48-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/48-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/48-cfg.dot	2023-06-07 19:32:15.377403171 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/48-cfg.dot	2023-06-07 19:32:19.567402778 +0330
@@ -1,28 +1,28 @@
 digraph "getActiveSensorHandles" {  
-"625" [label = <(_l,_l(mConnectionLock))<SUB>181</SUB>> ]
-"627" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;int32_t&gt; list)<SUB>182</SUB>> ]
-"645" [label = <(RETURN,return list;,return list;)<SUB>186</SUB>> ]
-"628" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;int32_t)<SUB>182</SUB>> ]
-"629" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>182</SUB>> ]
-"638" [label = <(push_back,list.push_back(it.first))<SUB>184</SUB>> ]
-"631" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>182</SUB>> ]
-"639" [label = <(&lt;operator&gt;.fieldAccess,list.push_back)<SUB>184</SUB>> ]
-"642" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>184</SUB>> ]
-"641" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>184</SUB>> ]
-"644" [label = <(FIELD_IDENTIFIER,first,first)<SUB>184</SUB>> ]
-"622" [label = <(METHOD,getActiveSensorHandles)<SUB>180</SUB>> ]
-"647" [label = <(METHOD_RETURN,vector&lt;int32_t&gt;)<SUB>180</SUB>> ]
-  "625" -> "631" 
-  "627" -> "641" 
-  "645" -> "647" 
-  "628" -> "627" 
-  "629" -> "628" 
-  "638" -> "641" 
-  "638" -> "645" 
-  "631" -> "629" 
-  "639" -> "644" 
-  "642" -> "638" 
-  "641" -> "639" 
-  "644" -> "642" 
-  "622" -> "625" 
+"633" [label = <(_l,_l(mConnectionLock))<SUB>187</SUB>> ]
+"635" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;int32_t&gt; list)<SUB>188</SUB>> ]
+"653" [label = <(RETURN,return list;,return list;)<SUB>192</SUB>> ]
+"636" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;int32_t)<SUB>188</SUB>> ]
+"637" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>188</SUB>> ]
+"646" [label = <(push_back,list.push_back(it.first))<SUB>190</SUB>> ]
+"639" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>188</SUB>> ]
+"647" [label = <(&lt;operator&gt;.fieldAccess,list.push_back)<SUB>190</SUB>> ]
+"650" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>190</SUB>> ]
+"649" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>190</SUB>> ]
+"652" [label = <(FIELD_IDENTIFIER,first,first)<SUB>190</SUB>> ]
+"630" [label = <(METHOD,getActiveSensorHandles)<SUB>186</SUB>> ]
+"655" [label = <(METHOD_RETURN,vector&lt;int32_t&gt;)<SUB>186</SUB>> ]
+  "633" -> "639" 
+  "635" -> "649" 
+  "653" -> "655" 
+  "636" -> "635" 
+  "637" -> "636" 
+  "646" -> "649" 
+  "646" -> "653" 
+  "639" -> "637" 
+  "647" -> "652" 
+  "650" -> "646" 
+  "649" -> "647" 
+  "652" -> "650" 
+  "630" -> "633" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/49-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/49-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/49-cfg.dot	2023-06-07 19:32:15.377403171 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/49-cfg.dot	2023-06-07 19:32:19.567402778 +0330
@@ -1,17 +1,17 @@
 digraph "hasSensor" {  
-"653" [label = <(_l,_l(mConnectionLock))<SUB>190</SUB>> ]
-"655" [label = <(RETURN,return mSensorInfo.count(handle) &gt; 0;,return mSensorInfo.count(handle) &gt; 0;)<SUB>191</SUB>> ]
-"656" [label = <(&lt;operator&gt;.greaterThan,mSensorInfo.count(handle) &gt; 0)<SUB>191</SUB>> ]
-"657" [label = <(count,mSensorInfo.count(handle))<SUB>191</SUB>> ]
-"658" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>191</SUB>> ]
-"660" [label = <(FIELD_IDENTIFIER,count,count)<SUB>191</SUB>> ]
-"649" [label = <(METHOD,hasSensor)<SUB>189</SUB>> ]
-"663" [label = <(METHOD_RETURN,bool)<SUB>189</SUB>> ]
-  "653" -> "660" 
-  "655" -> "663" 
-  "656" -> "655" 
-  "657" -> "656" 
-  "658" -> "657" 
-  "660" -> "658" 
-  "649" -> "653" 
+"661" [label = <(_l,_l(mConnectionLock))<SUB>196</SUB>> ]
+"663" [label = <(RETURN,return mSensorInfo.count(handle) &gt; 0;,return mSensorInfo.count(handle) &gt; 0;)<SUB>197</SUB>> ]
+"664" [label = <(&lt;operator&gt;.greaterThan,mSensorInfo.count(handle) &gt; 0)<SUB>197</SUB>> ]
+"665" [label = <(count,mSensorInfo.count(handle))<SUB>197</SUB>> ]
+"666" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>197</SUB>> ]
+"668" [label = <(FIELD_IDENTIFIER,count,count)<SUB>197</SUB>> ]
+"657" [label = <(METHOD,hasSensor)<SUB>195</SUB>> ]
+"671" [label = <(METHOD_RETURN,bool)<SUB>195</SUB>> ]
+  "661" -> "668" 
+  "663" -> "671" 
+  "664" -> "663" 
+  "665" -> "664" 
+  "666" -> "665" 
+  "668" -> "666" 
+  "657" -> "661" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/5-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/5-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/5-cfg.dot	2023-06-07 19:32:15.327403175 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/5-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "addSensor" {  
-"37" [label = <(METHOD,addSensor)<SUB>60</SUB>> ]
-"40" [label = <(METHOD_RETURN,bool)<SUB>60</SUB>> ]
+"37" [label = <(METHOD,addSensor)<SUB>59</SUB>> ]
+"40" [label = <(METHOD_RETURN,bool)<SUB>59</SUB>> ]
   "37" -> "40" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/50-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/50-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/50-cfg.dot	2023-06-07 19:32:15.377403171 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/50-cfg.dot	2023-06-07 19:32:19.567402778 +0330
@@ -1,17 +1,17 @@
 digraph "hasAnySensor" {  
-"668" [label = <(_l,_l(mConnectionLock))<SUB>195</SUB>> ]
-"670" [label = <(RETURN,return mSensorInfo.size() ? true : false;,return mSensorInfo.size() ? true : false;)<SUB>196</SUB>> ]
-"671" [label = <(&lt;operator&gt;.conditional,mSensorInfo.size() ? true : false)<SUB>196</SUB>> ]
-"672" [label = <(size,mSensorInfo.size())<SUB>196</SUB>> ]
-"673" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.size)<SUB>196</SUB>> ]
-"675" [label = <(FIELD_IDENTIFIER,size,size)<SUB>196</SUB>> ]
-"665" [label = <(METHOD,hasAnySensor)<SUB>194</SUB>> ]
-"678" [label = <(METHOD_RETURN,bool)<SUB>194</SUB>> ]
-  "668" -> "675" 
-  "670" -> "678" 
-  "671" -> "670" 
-  "672" -> "671" 
-  "673" -> "672" 
-  "675" -> "673" 
-  "665" -> "668" 
+"676" [label = <(_l,_l(mConnectionLock))<SUB>201</SUB>> ]
+"678" [label = <(RETURN,return mSensorInfo.size() ? true : false;,return mSensorInfo.size() ? true : false;)<SUB>202</SUB>> ]
+"679" [label = <(&lt;operator&gt;.conditional,mSensorInfo.size() ? true : false)<SUB>202</SUB>> ]
+"680" [label = <(size,mSensorInfo.size())<SUB>202</SUB>> ]
+"681" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.size)<SUB>202</SUB>> ]
+"683" [label = <(FIELD_IDENTIFIER,size,size)<SUB>202</SUB>> ]
+"673" [label = <(METHOD,hasAnySensor)<SUB>200</SUB>> ]
+"686" [label = <(METHOD_RETURN,bool)<SUB>200</SUB>> ]
+  "676" -> "683" 
+  "678" -> "686" 
+  "679" -> "678" 
+  "680" -> "679" 
+  "681" -> "680" 
+  "683" -> "681" 
+  "673" -> "676" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/51-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/51-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/51-cfg.dot	2023-06-07 19:32:15.387403170 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/51-cfg.dot	2023-06-07 19:32:19.567402778 +0330
@@ -1,50 +1,50 @@
 digraph "hasOneShotSensors" {  
-"683" [label = <(_l,_l(mConnectionLock))<SUB>200</SUB>> ]
-"723" [label = <(RETURN,return false;,return false;)<SUB>208</SUB>> ]
-"690" [label = <(&lt;operator&gt;.assignment,handle = it.first)<SUB>202</SUB>> ]
-"695" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si = mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>203</SUB>> ]
-"692" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>202</SUB>> ]
-"696" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>203</SUB>> ]
-"701" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>203</SUB>> ]
-"707" [label = <(&lt;operator&gt;.logicalAnd,si != nullptr &amp;&amp; si-&gt;getSensor().getReportingMode() == AREPORTING_MODE_ONE_SHOT)<SUB>204</SUB>> ]
-"694" [label = <(FIELD_IDENTIFIER,first,first)<SUB>202</SUB>> ]
-"697" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>203</SUB>> ]
-"702" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>203</SUB>> ]
-"708" [label = <(&lt;operator&gt;.notEquals,si != nullptr)<SUB>204</SUB>> ]
-"711" [label = <(&lt;operator&gt;.equals,si-&gt;getSensor().getReportingMode() == AREPORTING_MODE_ONE_SHOT)<SUB>204</SUB>> ]
-"721" [label = <(RETURN,return true;,return true;)<SUB>205</SUB>> ]
-"704" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>203</SUB>> ]
-"712" [label = <(getReportingMode,si-&gt;getSensor().getReportingMode())<SUB>204</SUB>> ]
-"713" [label = <(&lt;operator&gt;.fieldAccess,si-&gt;getSensor().getReportingMode)<SUB>204</SUB>> ]
-"714" [label = <(getSensor,si-&gt;getSensor())<SUB>204</SUB>> ]
-"718" [label = <(FIELD_IDENTIFIER,getReportingMode,getReportingMode)<SUB>204</SUB>> ]
-"715" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>204</SUB>> ]
-"717" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>204</SUB>> ]
-"680" [label = <(METHOD,hasOneShotSensors)<SUB>199</SUB>> ]
-"725" [label = <(METHOD_RETURN,bool)<SUB>199</SUB>> ]
-  "683" -> "694" 
-  "723" -> "725" 
-  "690" -> "697" 
-  "695" -> "708" 
-  "692" -> "690" 
-  "696" -> "704" 
-  "701" -> "695" 
-  "707" -> "694" 
-  "707" -> "721" 
-  "707" -> "723" 
-  "694" -> "692" 
-  "697" -> "696" 
-  "702" -> "701" 
-  "708" -> "707" 
-  "708" -> "717" 
-  "711" -> "707" 
-  "721" -> "725" 
-  "704" -> "702" 
-  "712" -> "711" 
-  "713" -> "712" 
-  "714" -> "718" 
-  "718" -> "713" 
-  "715" -> "714" 
-  "717" -> "715" 
-  "680" -> "683" 
+"691" [label = <(_l,_l(mConnectionLock))<SUB>206</SUB>> ]
+"731" [label = <(RETURN,return false;,return false;)<SUB>214</SUB>> ]
+"698" [label = <(&lt;operator&gt;.assignment,handle = it.first)<SUB>208</SUB>> ]
+"703" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si = mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>209</SUB>> ]
+"700" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>208</SUB>> ]
+"704" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>209</SUB>> ]
+"709" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>209</SUB>> ]
+"715" [label = <(&lt;operator&gt;.logicalAnd,si != nullptr &amp;&amp; si-&gt;getSensor().getReportingMode() == AREPORTING_MODE_ONE_SHOT)<SUB>210</SUB>> ]
+"702" [label = <(FIELD_IDENTIFIER,first,first)<SUB>208</SUB>> ]
+"705" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>209</SUB>> ]
+"710" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>209</SUB>> ]
+"716" [label = <(&lt;operator&gt;.notEquals,si != nullptr)<SUB>210</SUB>> ]
+"719" [label = <(&lt;operator&gt;.equals,si-&gt;getSensor().getReportingMode() == AREPORTING_MODE_ONE_SHOT)<SUB>210</SUB>> ]
+"729" [label = <(RETURN,return true;,return true;)<SUB>211</SUB>> ]
+"712" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>209</SUB>> ]
+"720" [label = <(getReportingMode,si-&gt;getSensor().getReportingMode())<SUB>210</SUB>> ]
+"721" [label = <(&lt;operator&gt;.fieldAccess,si-&gt;getSensor().getReportingMode)<SUB>210</SUB>> ]
+"722" [label = <(getSensor,si-&gt;getSensor())<SUB>210</SUB>> ]
+"726" [label = <(FIELD_IDENTIFIER,getReportingMode,getReportingMode)<SUB>210</SUB>> ]
+"723" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>210</SUB>> ]
+"725" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>210</SUB>> ]
+"688" [label = <(METHOD,hasOneShotSensors)<SUB>205</SUB>> ]
+"733" [label = <(METHOD_RETURN,bool)<SUB>205</SUB>> ]
+  "691" -> "702" 
+  "731" -> "733" 
+  "698" -> "705" 
+  "703" -> "716" 
+  "700" -> "698" 
+  "704" -> "712" 
+  "709" -> "703" 
+  "715" -> "702" 
+  "715" -> "729" 
+  "715" -> "731" 
+  "702" -> "700" 
+  "705" -> "704" 
+  "710" -> "709" 
+  "716" -> "715" 
+  "716" -> "725" 
+  "719" -> "715" 
+  "729" -> "733" 
+  "712" -> "710" 
+  "720" -> "719" 
+  "721" -> "720" 
+  "722" -> "726" 
+  "726" -> "721" 
+  "723" -> "722" 
+  "725" -> "723" 
+  "688" -> "691" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/52-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/52-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/52-cfg.dot	2023-06-07 19:32:15.387403170 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/52-cfg.dot	2023-06-07 19:32:19.567402778 +0330
@@ -1,7 +1,7 @@
 digraph "getPackageName" {  
-"729" [label = <(RETURN,return mPackageName;,return mPackageName;)<SUB>212</SUB>> ]
-"727" [label = <(METHOD,getPackageName)<SUB>211</SUB>> ]
-"731" [label = <(METHOD_RETURN,String8)<SUB>211</SUB>> ]
-  "729" -> "731" 
-  "727" -> "729" 
+"737" [label = <(RETURN,return mPackageName;,return mPackageName;)<SUB>218</SUB>> ]
+"735" [label = <(METHOD,getPackageName)<SUB>217</SUB>> ]
+"739" [label = <(METHOD_RETURN,String8)<SUB>217</SUB>> ]
+  "737" -> "739" 
+  "735" -> "737" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/53-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/53-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/53-cfg.dot	2023-06-07 19:32:15.387403170 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/53-cfg.dot	2023-06-07 19:32:19.567402778 +0330
@@ -1,26 +1,26 @@
 digraph "setFirstFlushPending" {  
-"738" [label = <(_l,_l(mConnectionLock))<SUB>217</SUB>> ]
-"741" [label = <(&lt;operator&gt;.greaterThan,mSensorInfo.count(handle) &gt; 0)<SUB>218</SUB>> ]
-"742" [label = <(count,mSensorInfo.count(handle))<SUB>218</SUB>> ]
-"750" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = mSensorInfo[handle])<SUB>219</SUB>> ]
-"755" [label = <(&lt;operator&gt;.assignment,flushInfo.mFirstFlushPending = value)<SUB>220</SUB>> ]
-"743" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>218</SUB>> ]
-"752" [label = <(&lt;operator&gt;.indirectIndexAccess,mSensorInfo[handle])<SUB>219</SUB>> ]
-"756" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>220</SUB>> ]
-"745" [label = <(FIELD_IDENTIFIER,count,count)<SUB>218</SUB>> ]
-"758" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>220</SUB>> ]
-"733" [label = <(METHOD,setFirstFlushPending)<SUB>215</SUB>> ]
-"760" [label = <(METHOD_RETURN,void)<SUB>215</SUB>> ]
-  "738" -> "745" 
-  "741" -> "760" 
-  "741" -> "752" 
-  "742" -> "741" 
-  "750" -> "758" 
-  "755" -> "760" 
-  "743" -> "742" 
-  "752" -> "750" 
-  "756" -> "755" 
-  "745" -> "743" 
-  "758" -> "756" 
-  "733" -> "738" 
+"746" [label = <(_l,_l(mConnectionLock))<SUB>223</SUB>> ]
+"749" [label = <(&lt;operator&gt;.greaterThan,mSensorInfo.count(handle) &gt; 0)<SUB>224</SUB>> ]
+"750" [label = <(count,mSensorInfo.count(handle))<SUB>224</SUB>> ]
+"758" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = mSensorInfo[handle])<SUB>225</SUB>> ]
+"763" [label = <(&lt;operator&gt;.assignment,flushInfo.mFirstFlushPending = value)<SUB>226</SUB>> ]
+"751" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>224</SUB>> ]
+"760" [label = <(&lt;operator&gt;.indirectIndexAccess,mSensorInfo[handle])<SUB>225</SUB>> ]
+"764" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>226</SUB>> ]
+"753" [label = <(FIELD_IDENTIFIER,count,count)<SUB>224</SUB>> ]
+"766" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>226</SUB>> ]
+"741" [label = <(METHOD,setFirstFlushPending)<SUB>221</SUB>> ]
+"768" [label = <(METHOD_RETURN,void)<SUB>221</SUB>> ]
+  "746" -> "753" 
+  "749" -> "768" 
+  "749" -> "760" 
+  "750" -> "749" 
+  "758" -> "766" 
+  "763" -> "768" 
+  "751" -> "750" 
+  "760" -> "758" 
+  "764" -> "763" 
+  "753" -> "751" 
+  "766" -> "764" 
+  "741" -> "746" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/54-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/54-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/54-cfg.dot	2023-06-07 19:32:15.387403170 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/54-cfg.dot	2023-06-07 19:32:19.567402778 +0330
@@ -1,9 +1,9 @@
 digraph "updateLooperRegistration" {  
-"766" [label = <(_l,_l(mConnectionLock))<SUB>225</SUB>> ]
-"768" [label = <(updateLooperRegistrationLocked,updateLooperRegistrationLocked(looper))<SUB>226</SUB>> ]
-"762" [label = <(METHOD,updateLooperRegistration)<SUB>224</SUB>> ]
-"770" [label = <(METHOD_RETURN,void)<SUB>224</SUB>> ]
-  "766" -> "768" 
-  "768" -> "770" 
-  "762" -> "766" 
+"774" [label = <(_l,_l(mConnectionLock))<SUB>231</SUB>> ]
+"776" [label = <(updateLooperRegistrationLocked,updateLooperRegistrationLocked(looper))<SUB>232</SUB>> ]
+"770" [label = <(METHOD,updateLooperRegistration)<SUB>230</SUB>> ]
+"778" [label = <(METHOD_RETURN,void)<SUB>230</SUB>> ]
+  "774" -> "776" 
+  "776" -> "778" 
+  "770" -> "774" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/55-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/55-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/55-cfg.dot	2023-06-07 19:32:15.387403170 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/55-cfg.dot	2023-06-07 19:32:19.577402779 +0330
@@ -1,166 +1,166 @@
 digraph "updateLooperRegistrationLocked" {  
-"776" [label = <(&lt;operator&gt;.assignment,isConnectionActive = (mSensorInfo.size() &gt; 0 &amp;&amp; !mDataInjectionMode) ||\012                              mDataInjectionMode)<SUB>231</SUB>> ]
-"819" [label = <(&lt;operator&gt;.assignment,looper_flags = 0)<SUB>241</SUB>> ]
-"901" [label = <(&lt;operator&gt;.assignment,ret = looper-&gt;addFd(mChannel-&gt;getSendFd(), 0, looper_flags, this, nullptr))<SUB>266</SUB>> ]
-"778" [label = <(&lt;operator&gt;.logicalOr,(mSensorInfo.size() &gt; 0 &amp;&amp; !mDataInjectionMode) ||\012                              mDataInjectionMode)<SUB>231</SUB>> ]
-"790" [label = <(&lt;operator&gt;.logicalOr,!isConnectionActive || mDead)<SUB>235</SUB>> ]
-"823" [label = <(&lt;operator&gt;.greaterThan,mCacheSize &gt; 0)<SUB>242</SUB>> ]
-"874" [label = <(&lt;operator&gt;.equals,looper_flags == 0)<SUB>255</SUB>> ]
-"903" [label = <(addFd,looper-&gt;addFd(mChannel-&gt;getSendFd(), 0, looper_flags, this, nullptr))<SUB>266</SUB>> ]
-"916" [label = <(&lt;operator&gt;.equals,ret == 1)<SUB>267</SUB>> ]
-"779" [label = <(&lt;operator&gt;.logicalAnd,mSensorInfo.size() &gt; 0 &amp;&amp; !mDataInjectionMode)<SUB>231</SUB>> ]
-"791" [label = <(&lt;operator&gt;.logicalNot,!isConnectionActive)<SUB>235</SUB>> ]
-"817" [label = <(RETURN,return;,return;)<SUB>239</SUB>> ]
-"827" [label = <(&lt;operators&gt;.assignmentOr,looper_flags |= ALOOPER_EVENT_OUTPUT)<SUB>242</SUB>> ]
-"833" [label = <(&lt;operators&gt;.assignmentOr,looper_flags |= ALOOPER_EVENT_INPUT)<SUB>243</SUB>> ]
-"841" [label = <(&lt;operator&gt;.assignment,handle = it.first)<SUB>245</SUB>> ]
-"846" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si = mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>246</SUB>> ]
-"899" [label = <(RETURN,return;,return;)<SUB>261</SUB>> ]
-"904" [label = <(&lt;operator&gt;.indirectFieldAccess,looper-&gt;addFd)<SUB>266</SUB>> ]
-"907" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>266</SUB>> ]
-"920" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;%p addFd fd=%d&quot;, this, mChannel-&gt;getSendFd()))<SUB>268</SUB>> ]
-"928" [label = <(&lt;operator&gt;.assignment,mHasLooperCallbacks = true)<SUB>269</SUB>> ]
-"780" [label = <(&lt;operator&gt;.greaterThan,mSensorInfo.size() &gt; 0)<SUB>231</SUB>> ]
-"786" [label = <(&lt;operator&gt;.logicalNot,!mDataInjectionMode)<SUB>231</SUB>> ]
-"843" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>245</SUB>> ]
-"847" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>246</SUB>> ]
-"852" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>246</SUB>> ]
-"858" [label = <(&lt;operator&gt;.logicalAnd,si != nullptr &amp;&amp; si-&gt;getSensor().isWakeUpSensor())<SUB>247</SUB>> ]
-"906" [label = <(FIELD_IDENTIFIER,addFd,addFd)<SUB>266</SUB>> ]
-"908" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>266</SUB>> ]
-"924" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>268</SUB>> ]
-"933" [label = <(ALOGE,ALOGE(&quot;Looper::addFd failed ret=%d fd=%d&quot;, ret, mChannel-&gt;getSendFd()))<SUB>271</SUB>> ]
-"781" [label = <(size,mSensorInfo.size())<SUB>231</SUB>> ]
-"798" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;%p removeFd fd=%d&quot;, this,\012                 mChannel-&gt;getSendFd()))<SUB>236</SUB>> ]
-"806" [label = <(removeFd,looper-&gt;removeFd(mChannel-&gt;getSendFd()))<SUB>238</SUB>> ]
-"814" [label = <(&lt;operator&gt;.assignment,mHasLooperCallbacks = false)<SUB>238</SUB>> ]
-"845" [label = <(FIELD_IDENTIFIER,first,first)<SUB>245</SUB>> ]
-"848" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>246</SUB>> ]
-"853" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>246</SUB>> ]
-"859" [label = <(&lt;operator&gt;.notEquals,si != nullptr)<SUB>247</SUB>> ]
-"862" [label = <(isWakeUpSensor,si-&gt;getSensor().isWakeUpSensor())<SUB>247</SUB>> ]
-"870" [label = <(&lt;operators&gt;.assignmentOr,looper_flags |= ALOOPER_EVENT_INPUT)<SUB>248</SUB>> ]
-"881" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;removeFd fd=%d&quot;, mChannel-&gt;getSendFd()))<SUB>257</SUB>> ]
-"888" [label = <(removeFd,looper-&gt;removeFd(mChannel-&gt;getSendFd()))<SUB>258</SUB>> ]
-"896" [label = <(&lt;operator&gt;.assignment,mHasLooperCallbacks = false)<SUB>259</SUB>> ]
-"910" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>266</SUB>> ]
-"925" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>268</SUB>> ]
-"936" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>271</SUB>> ]
-"782" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.size)<SUB>231</SUB>> ]
-"802" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>237</SUB>> ]
-"807" [label = <(&lt;operator&gt;.indirectFieldAccess,looper-&gt;removeFd)<SUB>238</SUB>> ]
-"810" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>238</SUB>> ]
-"855" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>246</SUB>> ]
-"863" [label = <(&lt;operator&gt;.fieldAccess,si-&gt;getSensor().isWakeUpSensor)<SUB>247</SUB>> ]
-"884" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>257</SUB>> ]
-"889" [label = <(&lt;operator&gt;.indirectFieldAccess,looper-&gt;removeFd)<SUB>258</SUB>> ]
-"892" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>258</SUB>> ]
-"927" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>268</SUB>> ]
-"937" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>271</SUB>> ]
-"784" [label = <(FIELD_IDENTIFIER,size,size)<SUB>231</SUB>> ]
-"803" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>237</SUB>> ]
-"809" [label = <(FIELD_IDENTIFIER,removeFd,removeFd)<SUB>238</SUB>> ]
-"811" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>238</SUB>> ]
-"864" [label = <(getSensor,si-&gt;getSensor())<SUB>247</SUB>> ]
-"868" [label = <(FIELD_IDENTIFIER,isWakeUpSensor,isWakeUpSensor)<SUB>247</SUB>> ]
-"885" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>257</SUB>> ]
-"891" [label = <(FIELD_IDENTIFIER,removeFd,removeFd)<SUB>258</SUB>> ]
-"893" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>258</SUB>> ]
-"939" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>271</SUB>> ]
-"805" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>237</SUB>> ]
-"813" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>238</SUB>> ]
-"865" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>247</SUB>> ]
-"887" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>257</SUB>> ]
-"895" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>258</SUB>> ]
-"867" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>247</SUB>> ]
-"772" [label = <(METHOD,updateLooperRegistrationLocked)<SUB>229</SUB>> ]
-"940" [label = <(METHOD_RETURN,void)<SUB>229</SUB>> ]
-  "776" -> "791" 
-  "819" -> "823" 
-  "901" -> "916" 
-  "778" -> "776" 
-  "790" -> "817" 
-  "790" -> "805" 
-  "790" -> "819" 
-  "823" -> "827" 
-  "823" -> "833" 
-  "823" -> "845" 
-  "874" -> "899" 
-  "874" -> "887" 
-  "874" -> "906" 
-  "903" -> "901" 
-  "916" -> "927" 
-  "916" -> "939" 
-  "779" -> "778" 
-  "791" -> "790" 
-  "817" -> "940" 
-  "827" -> "833" 
-  "827" -> "845" 
-  "833" -> "845" 
-  "841" -> "848" 
-  "846" -> "859" 
-  "899" -> "940" 
-  "904" -> "910" 
-  "907" -> "903" 
-  "920" -> "928" 
-  "928" -> "940" 
-  "780" -> "779" 
-  "780" -> "786" 
-  "786" -> "779" 
-  "843" -> "841" 
-  "847" -> "855" 
-  "852" -> "846" 
-  "858" -> "845" 
-  "858" -> "870" 
-  "858" -> "874" 
-  "906" -> "904" 
-  "908" -> "907" 
-  "924" -> "920" 
-  "933" -> "940" 
-  "781" -> "780" 
-  "798" -> "809" 
-  "806" -> "814" 
-  "814" -> "817" 
-  "845" -> "843" 
-  "848" -> "847" 
-  "853" -> "852" 
-  "859" -> "858" 
-  "859" -> "867" 
-  "862" -> "858" 
-  "870" -> "845" 
-  "870" -> "874" 
-  "881" -> "891" 
-  "888" -> "896" 
-  "896" -> "899" 
-  "910" -> "908" 
-  "925" -> "924" 
-  "936" -> "933" 
-  "782" -> "781" 
-  "802" -> "798" 
-  "807" -> "813" 
+"784" [label = <(&lt;operator&gt;.assignment,isConnectionActive = (mSensorInfo.size() &gt; 0 &amp;&amp; !mDataInjectionMode) ||\012                              mDataInjectionMode)<SUB>237</SUB>> ]
+"827" [label = <(&lt;operator&gt;.assignment,looper_flags = 0)<SUB>247</SUB>> ]
+"909" [label = <(&lt;operator&gt;.assignment,ret = looper-&gt;addFd(mChannel-&gt;getSendFd(), 0, looper_flags, this, nullptr))<SUB>272</SUB>> ]
+"786" [label = <(&lt;operator&gt;.logicalOr,(mSensorInfo.size() &gt; 0 &amp;&amp; !mDataInjectionMode) ||\012                              mDataInjectionMode)<SUB>237</SUB>> ]
+"798" [label = <(&lt;operator&gt;.logicalOr,!isConnectionActive || mDead)<SUB>241</SUB>> ]
+"831" [label = <(&lt;operator&gt;.greaterThan,mCacheSize &gt; 0)<SUB>248</SUB>> ]
+"882" [label = <(&lt;operator&gt;.equals,looper_flags == 0)<SUB>261</SUB>> ]
+"911" [label = <(addFd,looper-&gt;addFd(mChannel-&gt;getSendFd(), 0, looper_flags, this, nullptr))<SUB>272</SUB>> ]
+"924" [label = <(&lt;operator&gt;.equals,ret == 1)<SUB>273</SUB>> ]
+"787" [label = <(&lt;operator&gt;.logicalAnd,mSensorInfo.size() &gt; 0 &amp;&amp; !mDataInjectionMode)<SUB>237</SUB>> ]
+"799" [label = <(&lt;operator&gt;.logicalNot,!isConnectionActive)<SUB>241</SUB>> ]
+"825" [label = <(RETURN,return;,return;)<SUB>245</SUB>> ]
+"835" [label = <(&lt;operators&gt;.assignmentOr,looper_flags |= ALOOPER_EVENT_OUTPUT)<SUB>248</SUB>> ]
+"841" [label = <(&lt;operators&gt;.assignmentOr,looper_flags |= ALOOPER_EVENT_INPUT)<SUB>249</SUB>> ]
+"849" [label = <(&lt;operator&gt;.assignment,handle = it.first)<SUB>251</SUB>> ]
+"854" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si = mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>252</SUB>> ]
+"907" [label = <(RETURN,return;,return;)<SUB>267</SUB>> ]
+"912" [label = <(&lt;operator&gt;.indirectFieldAccess,looper-&gt;addFd)<SUB>272</SUB>> ]
+"915" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>272</SUB>> ]
+"928" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;%p addFd fd=%d&quot;, this, mChannel-&gt;getSendFd()))<SUB>274</SUB>> ]
+"936" [label = <(&lt;operator&gt;.assignment,mHasLooperCallbacks = true)<SUB>275</SUB>> ]
+"788" [label = <(&lt;operator&gt;.greaterThan,mSensorInfo.size() &gt; 0)<SUB>237</SUB>> ]
+"794" [label = <(&lt;operator&gt;.logicalNot,!mDataInjectionMode)<SUB>237</SUB>> ]
+"851" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>251</SUB>> ]
+"855" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>252</SUB>> ]
+"860" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>252</SUB>> ]
+"866" [label = <(&lt;operator&gt;.logicalAnd,si != nullptr &amp;&amp; si-&gt;getSensor().isWakeUpSensor())<SUB>253</SUB>> ]
+"914" [label = <(FIELD_IDENTIFIER,addFd,addFd)<SUB>272</SUB>> ]
+"916" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>272</SUB>> ]
+"932" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>274</SUB>> ]
+"941" [label = <(ALOGE,ALOGE(&quot;Looper::addFd failed ret=%d fd=%d&quot;, ret, mChannel-&gt;getSendFd()))<SUB>277</SUB>> ]
+"789" [label = <(size,mSensorInfo.size())<SUB>237</SUB>> ]
+"806" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;%p removeFd fd=%d&quot;, this,\012                 mChannel-&gt;getSendFd()))<SUB>242</SUB>> ]
+"814" [label = <(removeFd,looper-&gt;removeFd(mChannel-&gt;getSendFd()))<SUB>244</SUB>> ]
+"822" [label = <(&lt;operator&gt;.assignment,mHasLooperCallbacks = false)<SUB>244</SUB>> ]
+"853" [label = <(FIELD_IDENTIFIER,first,first)<SUB>251</SUB>> ]
+"856" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>252</SUB>> ]
+"861" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>252</SUB>> ]
+"867" [label = <(&lt;operator&gt;.notEquals,si != nullptr)<SUB>253</SUB>> ]
+"870" [label = <(isWakeUpSensor,si-&gt;getSensor().isWakeUpSensor())<SUB>253</SUB>> ]
+"878" [label = <(&lt;operators&gt;.assignmentOr,looper_flags |= ALOOPER_EVENT_INPUT)<SUB>254</SUB>> ]
+"889" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;removeFd fd=%d&quot;, mChannel-&gt;getSendFd()))<SUB>263</SUB>> ]
+"896" [label = <(removeFd,looper-&gt;removeFd(mChannel-&gt;getSendFd()))<SUB>264</SUB>> ]
+"904" [label = <(&lt;operator&gt;.assignment,mHasLooperCallbacks = false)<SUB>265</SUB>> ]
+"918" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>272</SUB>> ]
+"933" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>274</SUB>> ]
+"944" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>277</SUB>> ]
+"790" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.size)<SUB>237</SUB>> ]
+"810" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>243</SUB>> ]
+"815" [label = <(&lt;operator&gt;.indirectFieldAccess,looper-&gt;removeFd)<SUB>244</SUB>> ]
+"818" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>244</SUB>> ]
+"863" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>252</SUB>> ]
+"871" [label = <(&lt;operator&gt;.fieldAccess,si-&gt;getSensor().isWakeUpSensor)<SUB>253</SUB>> ]
+"892" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>263</SUB>> ]
+"897" [label = <(&lt;operator&gt;.indirectFieldAccess,looper-&gt;removeFd)<SUB>264</SUB>> ]
+"900" [label = <(getSendFd,mChannel-&gt;getSendFd())<SUB>264</SUB>> ]
+"935" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>274</SUB>> ]
+"945" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>277</SUB>> ]
+"792" [label = <(FIELD_IDENTIFIER,size,size)<SUB>237</SUB>> ]
+"811" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>243</SUB>> ]
+"817" [label = <(FIELD_IDENTIFIER,removeFd,removeFd)<SUB>244</SUB>> ]
+"819" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>244</SUB>> ]
+"872" [label = <(getSensor,si-&gt;getSensor())<SUB>253</SUB>> ]
+"876" [label = <(FIELD_IDENTIFIER,isWakeUpSensor,isWakeUpSensor)<SUB>253</SUB>> ]
+"893" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>263</SUB>> ]
+"899" [label = <(FIELD_IDENTIFIER,removeFd,removeFd)<SUB>264</SUB>> ]
+"901" [label = <(&lt;operator&gt;.indirectFieldAccess,mChannel-&gt;getSendFd)<SUB>264</SUB>> ]
+"947" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>277</SUB>> ]
+"813" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>243</SUB>> ]
+"821" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>244</SUB>> ]
+"873" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>253</SUB>> ]
+"895" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>263</SUB>> ]
+"903" [label = <(FIELD_IDENTIFIER,getSendFd,getSendFd)<SUB>264</SUB>> ]
+"875" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>253</SUB>> ]
+"780" [label = <(METHOD,updateLooperRegistrationLocked)<SUB>235</SUB>> ]
+"948" [label = <(METHOD_RETURN,void)<SUB>235</SUB>> ]
+  "784" -> "799" 
+  "827" -> "831" 
+  "909" -> "924" 
+  "786" -> "784" 
+  "798" -> "825" 
+  "798" -> "813" 
+  "798" -> "827" 
+  "831" -> "835" 
+  "831" -> "841" 
+  "831" -> "853" 
+  "882" -> "907" 
+  "882" -> "895" 
+  "882" -> "914" 
+  "911" -> "909" 
+  "924" -> "935" 
+  "924" -> "947" 
+  "787" -> "786" 
+  "799" -> "798" 
+  "825" -> "948" 
+  "835" -> "841" 
+  "835" -> "853" 
+  "841" -> "853" 
+  "849" -> "856" 
+  "854" -> "867" 
+  "907" -> "948" 
+  "912" -> "918" 
+  "915" -> "911" 
+  "928" -> "936" 
+  "936" -> "948" 
+  "788" -> "787" 
+  "788" -> "794" 
+  "794" -> "787" 
+  "851" -> "849" 
+  "855" -> "863" 
+  "860" -> "854" 
+  "866" -> "853" 
+  "866" -> "878" 
+  "866" -> "882" 
+  "914" -> "912" 
+  "916" -> "915" 
+  "932" -> "928" 
+  "941" -> "948" 
+  "789" -> "788" 
+  "806" -> "817" 
+  "814" -> "822" 
+  "822" -> "825" 
+  "853" -> "851" 
+  "856" -> "855" 
+  "861" -> "860" 
+  "867" -> "866" 
+  "867" -> "875" 
+  "870" -> "866" 
+  "878" -> "853" 
+  "878" -> "882" 
+  "889" -> "899" 
+  "896" -> "904" 
+  "904" -> "907" 
+  "918" -> "916" 
+  "933" -> "932" 
+  "944" -> "941" 
+  "790" -> "789" 
   "810" -> "806" 
-  "855" -> "853" 
-  "863" -> "862" 
-  "884" -> "881" 
-  "889" -> "895" 
-  "892" -> "888" 
-  "927" -> "925" 
-  "937" -> "936" 
-  "784" -> "782" 
-  "803" -> "802" 
-  "809" -> "807" 
+  "815" -> "821" 
+  "818" -> "814" 
+  "863" -> "861" 
+  "871" -> "870" 
+  "892" -> "889" 
+  "897" -> "903" 
+  "900" -> "896" 
+  "935" -> "933" 
+  "945" -> "944" 
+  "792" -> "790" 
   "811" -> "810" 
-  "864" -> "868" 
-  "868" -> "863" 
-  "885" -> "884" 
-  "891" -> "889" 
+  "817" -> "815" 
+  "819" -> "818" 
+  "872" -> "876" 
+  "876" -> "871" 
   "893" -> "892" 
-  "939" -> "937" 
-  "805" -> "803" 
+  "899" -> "897" 
+  "901" -> "900" 
+  "947" -> "945" 
   "813" -> "811" 
-  "865" -> "864" 
-  "887" -> "885" 
+  "821" -> "819" 
+  "873" -> "872" 
   "895" -> "893" 
-  "867" -> "865" 
-  "772" -> "784" 
+  "903" -> "901" 
+  "875" -> "873" 
+  "780" -> "792" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/56-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/56-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/56-cfg.dot	2023-06-07 19:32:15.387403170 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/56-cfg.dot	2023-06-07 19:32:19.577402779 +0330
@@ -1,33 +1,33 @@
 digraph "incrementPendingFlushCountIfHasAccess" {  
-"946" [label = <(hasSensorAccess,hasSensorAccess())<SUB>276</SUB>> ]
-"949" [label = <(_l,_l(mConnectionLock))<SUB>277</SUB>> ]
-"970" [label = <(RETURN,return true;,return true;)<SUB>282</SUB>> ]
-"952" [label = <(&lt;operator&gt;.greaterThan,mSensorInfo.count(handle) &gt; 0)<SUB>278</SUB>> ]
-"974" [label = <(RETURN,return false;,return false;)<SUB>284</SUB>> ]
-"953" [label = <(count,mSensorInfo.count(handle))<SUB>278</SUB>> ]
-"961" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = mSensorInfo[handle])<SUB>279</SUB>> ]
-"966" [label = <(&lt;operator&gt;.postIncrement,flushInfo.mPendingFlushEventsToSend++)<SUB>280</SUB>> ]
-"954" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>278</SUB>> ]
-"963" [label = <(&lt;operator&gt;.indirectIndexAccess,mSensorInfo[handle])<SUB>279</SUB>> ]
-"967" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>280</SUB>> ]
-"956" [label = <(FIELD_IDENTIFIER,count,count)<SUB>278</SUB>> ]
-"969" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>280</SUB>> ]
-"942" [label = <(METHOD,incrementPendingFlushCountIfHasAccess)<SUB>275</SUB>> ]
-"976" [label = <(METHOD_RETURN,bool)<SUB>275</SUB>> ]
-  "946" -> "949" 
-  "946" -> "974" 
-  "949" -> "956" 
-  "970" -> "976" 
-  "952" -> "963" 
-  "952" -> "970" 
-  "974" -> "976" 
-  "953" -> "952" 
-  "961" -> "969" 
-  "966" -> "970" 
-  "954" -> "953" 
-  "963" -> "961" 
-  "967" -> "966" 
-  "956" -> "954" 
-  "969" -> "967" 
-  "942" -> "946" 
+"954" [label = <(hasSensorAccess,hasSensorAccess())<SUB>282</SUB>> ]
+"957" [label = <(_l,_l(mConnectionLock))<SUB>283</SUB>> ]
+"978" [label = <(RETURN,return true;,return true;)<SUB>288</SUB>> ]
+"960" [label = <(&lt;operator&gt;.greaterThan,mSensorInfo.count(handle) &gt; 0)<SUB>284</SUB>> ]
+"982" [label = <(RETURN,return false;,return false;)<SUB>290</SUB>> ]
+"961" [label = <(count,mSensorInfo.count(handle))<SUB>284</SUB>> ]
+"969" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = mSensorInfo[handle])<SUB>285</SUB>> ]
+"974" [label = <(&lt;operator&gt;.postIncrement,flushInfo.mPendingFlushEventsToSend++)<SUB>286</SUB>> ]
+"962" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>284</SUB>> ]
+"971" [label = <(&lt;operator&gt;.indirectIndexAccess,mSensorInfo[handle])<SUB>285</SUB>> ]
+"975" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>286</SUB>> ]
+"964" [label = <(FIELD_IDENTIFIER,count,count)<SUB>284</SUB>> ]
+"977" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>286</SUB>> ]
+"950" [label = <(METHOD,incrementPendingFlushCountIfHasAccess)<SUB>281</SUB>> ]
+"984" [label = <(METHOD_RETURN,bool)<SUB>281</SUB>> ]
+  "954" -> "957" 
+  "954" -> "982" 
+  "957" -> "964" 
+  "978" -> "984" 
+  "960" -> "971" 
+  "960" -> "978" 
+  "982" -> "984" 
+  "961" -> "960" 
+  "969" -> "977" 
+  "974" -> "978" 
+  "962" -> "961" 
+  "971" -> "969" 
+  "975" -> "974" 
+  "964" -> "962" 
+  "977" -> "975" 
+  "950" -> "954" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/57-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/57-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/57-cfg.dot	2023-06-07 19:32:15.397403167 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/57-cfg.dot	2023-06-07 19:32:19.587402778 +0330
@@ -1,380 +1,380 @@
 digraph "sendEvents" {  
-"986" [label = <(&lt;operator&gt;.assignment,count = 0)<SUB>296</SUB>> ]
-"990" [label = <(_l,_l(mConnectionLock))<SUB>297</SUB>> ]
-"1245" [label = <(sendPendingFlushEventsLocked,sendPendingFlushEventsLocked())<SUB>373</SUB>> ]
-"1266" [label = <(&lt;operator&gt;.assignment,index_wake_up_event = -1)<SUB>389</SUB>> ]
-"1293" [label = <(&lt;operator&gt;.assignment,size = SensorEventQueue::write(mChannel,\012 reinterpret_cast&lt;ASensorEvent const*&gt;(scratch), count))<SUB>402</SUB>> ]
-"1354" [label = <(RETURN,return size &lt; 0 ? status_t(size) : status_t(NO_ERROR);,return size &lt; 0 ? status_t(size) : status_t(NO_ERROR);)<SUB>436</SUB>> ]
-"1247" [label = <(&lt;operator&gt;.equals,count == 0)<SUB>375</SUB>> ]
-"1255" [label = <(&lt;operator&gt;.notEquals,mCacheSize != 0)<SUB>382</SUB>> ]
-"1268" [label = <(&lt;operator&gt;.minus,-1)<SUB>389</SUB>> ]
-"1271" [label = <(hasSensorAccess,hasSensorAccess())<SUB>390</SUB>> ]
-"1295" [label = <(SensorEventQueue::write,SensorEventQueue::write(mChannel,\012 reinterpret_cast&lt;ASensorEvent const*&gt;(scratch), count))<SUB>402</SUB>> ]
-"1305" [label = <(&lt;operator&gt;.lessThan,size &lt; 0)<SUB>404</SUB>> ]
-"1355" [label = <(&lt;operator&gt;.conditional,size &lt; 0 ? status_t(size) : status_t(NO_ERROR))<SUB>436</SUB>> ]
-"996" [label = <(&lt;operator&gt;.assignment,i=0)<SUB>299</SUB>> ]
-"1251" [label = <(RETURN,return status_t(NO_ERROR);,return status_t(NO_ERROR);)<SUB>376</SUB>> ]
-"1259" [label = <(appendEventsToCacheLocked,appendEventsToCacheLocked(scratch, count))<SUB>385</SUB>> ]
-"1262" [label = <(RETURN,return status_t(NO_ERROR);,return status_t(NO_ERROR);)<SUB>386</SUB>> ]
-"1273" [label = <(&lt;operator&gt;.assignment,index_wake_up_event = findWakeUpSensorEventLocked(scratch, count))<SUB>391</SUB>> ]
-"1296" [label = <(&lt;operator&gt;.fieldAccess,SensorEventQueue::write)<SUB>402</SUB>> ]
-"1300" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ASensorEvent const*&gt;(scratch))<SUB>403</SUB>> ]
-"1344" [label = <(appendEventsToCacheLocked,appendEventsToCacheLocked(scratch, count))<SUB>422</SUB>> ]
-"1347" [label = <(updateLooperRegistrationLocked,updateLooperRegistrationLocked(mService-&gt;getLooper()))<SUB>426</SUB>> ]
-"1352" [label = <(RETURN,return size;,return size;)<SUB>427</SUB>> ]
-"1356" [label = <(&lt;operator&gt;.lessThan,size &lt; 0)<SUB>436</SUB>> ]
-"1359" [label = <(status_t,status_t(size))<SUB>436</SUB>> ]
-"1361" [label = <(status_t,status_t(NO_ERROR))<SUB>436</SUB>> ]
-"1000" [label = <(&lt;operator&gt;.lessThan,i&lt;numEvents)<SUB>300</SUB>> ]
-"1252" [label = <(status_t,status_t(NO_ERROR))<SUB>376</SUB>> ]
-"1263" [label = <(status_t,status_t(NO_ERROR))<SUB>386</SUB>> ]
-"1275" [label = <(findWakeUpSensorEventLocked,findWakeUpSensorEventLocked(scratch, count))<SUB>391</SUB>> ]
-"1279" [label = <(&lt;operator&gt;.greaterEqualsThan,index_wake_up_event &gt;= 0)<SUB>392</SUB>> ]
-"1298" [label = <(FIELD_IDENTIFIER,write,write)<SUB>402</SUB>> ]
-"1301" [label = <(UNKNOWN,ASensorEvent const*,ASensorEvent const*)<SUB>403</SUB>> ]
-"1310" [label = <(&lt;operator&gt;.greaterEqualsThan,index_wake_up_event &gt;= 0)<SUB>406</SUB>> ]
-"1330" [label = <(&lt;operator&gt;.equals,mEventCache == nullptr)<SUB>416</SUB>> ]
-"1348" [label = <(getLooper,mService-&gt;getLooper())<SUB>426</SUB>> ]
-"1005" [label = <(&lt;operator&gt;.assignment,sensor_handle = buffer[i].sensor)<SUB>301</SUB>> ]
-"1053" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = mSensorInfo[sensor_handle])<SUB>318</SUB>> ]
-"1191" [label = <(hasSensorAccess,hasSensorAccess())<SUB>359</SUB>> ]
-"1283" [label = <(&lt;operators&gt;.assignmentOr,scratch[index_wake_up_event].flags |= WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>393</SUB>> ]
-"1290" [label = <(&lt;operator&gt;.preIncrement,++mWakeLockRefCount)<SUB>394</SUB>> ]
-"1314" [label = <(&lt;operators&gt;.assignmentAnd,scratch[index_wake_up_event].flags &amp;= ~WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>408</SUB>> ]
-"1334" [label = <(&lt;operator&gt;.assignment,mMaxCacheSize = computeMaxCacheSizeLocked())<SUB>417</SUB>> ]
-"1337" [label = <(&lt;operator&gt;.assignment,mEventCache = new sensors_event_t[mMaxCacheSize])<SUB>418</SUB>> ]
-"1341" [label = <(&lt;operator&gt;.assignment,mCacheSize = 0)<SUB>419</SUB>> ]
-"1349" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getLooper)<SUB>426</SUB>> ]
-"1007" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].sensor)<SUB>301</SUB>> ]
-"1013" [label = <(&lt;operator&gt;.equals,buffer[i].type == SENSOR_TYPE_META_DATA)<SUB>302</SUB>> ]
-"1041" [label = <(&lt;operator&gt;.equals,mSensorInfo.count(sensor_handle) == 0)<SUB>313</SUB>> ]
-"1055" [label = <(&lt;operator&gt;.indirectIndexAccess,mSensorInfo[sensor_handle])<SUB>318</SUB>> ]
-"1059" [label = <(&lt;operator&gt;.logicalAnd,buffer[i].type == SENSOR_TYPE_META_DATA &amp;&amp; flushInfo.mFirstFlushPending == true &amp;&amp;\012                    mapFlushEventsToConnections[i] == this)<SUB>320</SUB>> ]
-"1098" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>331</SUB>> ]
-"1151" [label = <(&lt;operator&gt;.logicalAnd,(i&lt;numEvents) &amp;&amp; ((buffer[i].sensor == sensor_handle &amp;&amp;\012                                        buffer[i].type != SENSOR_TYPE_META_DATA) ||\012 (buffer[i].type == SENSOR_TYPE_META_DATA  &amp;&amp;\012                                        buffer[i].meta_data.sensor == sensor_handle)))<SUB>353</SUB>> ]
-"1193" [label = <(&lt;operator&gt;.assignment,scratch = const_cast&lt;sensors_event_t *&gt;(buffer))<SUB>360</SUB>> ]
-"1198" [label = <(&lt;operator&gt;.assignment,count = numEvents)<SUB>361</SUB>> ]
-"1284" [label = <(&lt;operator&gt;.fieldAccess,scratch[index_wake_up_event].flags)<SUB>393</SUB>> ]
-"1315" [label = <(&lt;operator&gt;.fieldAccess,scratch[index_wake_up_event].flags)<SUB>408</SUB>> ]
-"1320" [label = <(&lt;operator&gt;.not,~WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>408</SUB>> ]
-"1323" [label = <(&lt;operator&gt;.greaterThan,mWakeLockRefCount &gt; 0)<SUB>409</SUB>> ]
-"1336" [label = <(computeMaxCacheSizeLocked,computeMaxCacheSizeLocked())<SUB>417</SUB>> ]
-"1339" [label = <(&lt;operator&gt;.new,new sensors_event_t[mMaxCacheSize])<SUB>418</SUB>> ]
-"1351" [label = <(FIELD_IDENTIFIER,getLooper,getLooper)<SUB>426</SUB>> ]
-"1008" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>301</SUB>> ]
-"1011" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>301</SUB>> ]
-"1014" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>302</SUB>> ]
-"1021" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;flush complete event sensor==%d &quot;,\012                        buffer[i].meta_data.sensor))<SUB>303</SUB>> ]
-"1031" [label = <(&lt;operator&gt;.assignment,sensor_handle = buffer[i].meta_data.sensor)<SUB>308</SUB>> ]
-"1042" [label = <(count,mSensorInfo.count(sensor_handle))<SUB>313</SUB>> ]
-"1049" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>314</SUB>> ]
-"1060" [label = <(&lt;operator&gt;.logicalAnd,buffer[i].type == SENSOR_TYPE_META_DATA &amp;&amp; flushInfo.mFirstFlushPending == true)<SUB>320</SUB>> ]
-"1073" [label = <(&lt;operator&gt;.equals,mapFlushEventsToConnections[i] == this)<SUB>321</SUB>> ]
-"1079" [label = <(&lt;operator&gt;.assignment,flushInfo.mFirstFlushPending = false)<SUB>322</SUB>> ]
-"1084" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;First flush event for sensor==%d &quot;,\012                        buffer[i].meta_data.sensor))<SUB>323</SUB>> ]
-"1094" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>325</SUB>> ]
-"1100" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>331</SUB>> ]
-"1102" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>332</SUB>> ]
-"1149" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>352</SUB>> ]
-"1152" [label = <(&lt;operator&gt;.lessThan,i&lt;numEvents)<SUB>353</SUB>> ]
-"1155" [label = <(&lt;operator&gt;.logicalOr,(buffer[i].sensor == sensor_handle &amp;&amp;\012                                        buffer[i].type != SENSOR_TYPE_META_DATA) ||\012 (buffer[i].type == SENSOR_TYPE_META_DATA  &amp;&amp;\012                                        buffer[i].meta_data.sensor == sensor_handle))<SUB>353</SUB>> ]
-"1195" [label = <(&lt;operator&gt;.cast,const_cast&lt;sensors_event_t *&gt;(buffer))<SUB>360</SUB>> ]
-"1203" [label = <(reset,sanitizedBuffer.reset(new sensors_event_t[numEvents]))<SUB>363</SUB>> ]
-"1209" [label = <(&lt;operator&gt;.assignment,scratch = sanitizedBuffer.get())<SUB>364</SUB>> ]
-"1285" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[index_wake_up_event])<SUB>393</SUB>> ]
-"1288" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>393</SUB>> ]
-"1316" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[index_wake_up_event])<SUB>408</SUB>> ]
-"1319" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>408</SUB>> ]
-"1327" [label = <(&lt;operator&gt;.preDecrement,--mWakeLockRefCount)<SUB>410</SUB>> ]
-"1015" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>302</SUB>> ]
-"1018" [label = <(FIELD_IDENTIFIER,type,type)<SUB>302</SUB>> ]
-"1024" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data.sensor)<SUB>304</SUB>> ]
-"1033" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data.sensor)<SUB>308</SUB>> ]
-"1043" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>313</SUB>> ]
-"1061" [label = <(&lt;operator&gt;.equals,buffer[i].type == SENSOR_TYPE_META_DATA)<SUB>320</SUB>> ]
-"1068" [label = <(&lt;operator&gt;.equals,flushInfo.mFirstFlushPending == true)<SUB>320</SUB>> ]
-"1074" [label = <(&lt;operator&gt;.indirectIndexAccess,mapFlushEventsToConnections[i])<SUB>321</SUB>> ]
-"1080" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>322</SUB>> ]
-"1087" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data.sensor)<SUB>324</SUB>> ]
-"1108" [label = <(&lt;operator&gt;.equals,buffer[i].type == SENSOR_TYPE_META_DATA)<SUB>341</SUB>> ]
-"1156" [label = <(&lt;operator&gt;.logicalAnd,buffer[i].sensor == sensor_handle &amp;&amp;\012                                        buffer[i].type != SENSOR_TYPE_META_DATA)<SUB>353</SUB>> ]
-"1171" [label = <(&lt;operator&gt;.logicalAnd,buffer[i].type == SENSOR_TYPE_META_DATA  &amp;&amp;\012                                        buffer[i].meta_data.sensor == sensor_handle)<SUB>355</SUB>> ]
-"1196" [label = <(UNKNOWN,sensors_event_t *,sensors_event_t *)<SUB>360</SUB>> ]
-"1204" [label = <(&lt;operator&gt;.fieldAccess,sanitizedBuffer.reset)<SUB>363</SUB>> ]
-"1207" [label = <(&lt;operator&gt;.new,new sensors_event_t[numEvents])<SUB>363</SUB>> ]
-"1211" [label = <(get,sanitizedBuffer.get())<SUB>364</SUB>> ]
-"1221" [label = <(&lt;operator&gt;.lessThan,i &lt; numEvents)<SUB>365</SUB>> ]
-"1224" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>365</SUB>> ]
-"1025" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data)<SUB>304</SUB>> ]
-"1030" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>304</SUB>> ]
-"1034" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data)<SUB>308</SUB>> ]
-"1039" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>308</SUB>> ]
-"1045" [label = <(FIELD_IDENTIFIER,count,count)<SUB>313</SUB>> ]
-"1062" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>320</SUB>> ]
-"1069" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>320</SUB>> ]
-"1082" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>322</SUB>> ]
-"1088" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data)<SUB>324</SUB>> ]
-"1093" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>324</SUB>> ]
-"1109" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>341</SUB>> ]
-"1157" [label = <(&lt;operator&gt;.equals,buffer[i].sensor == sensor_handle)<SUB>353</SUB>> ]
-"1164" [label = <(&lt;operator&gt;.notEquals,buffer[i].type != SENSOR_TYPE_META_DATA)<SUB>354</SUB>> ]
-"1172" [label = <(&lt;operator&gt;.equals,buffer[i].type == SENSOR_TYPE_META_DATA)<SUB>355</SUB>> ]
-"1179" [label = <(&lt;operator&gt;.equals,buffer[i].meta_data.sensor == sensor_handle)<SUB>356</SUB>> ]
-"1206" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>363</SUB>> ]
-"1212" [label = <(&lt;operator&gt;.fieldAccess,sanitizedBuffer.get)<SUB>364</SUB>> ]
-"1218" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>365</SUB>> ]
-"1026" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>304</SUB>> ]
-"1029" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>304</SUB>> ]
-"1035" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>308</SUB>> ]
-"1038" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>308</SUB>> ]
-"1063" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>320</SUB>> ]
-"1066" [label = <(FIELD_IDENTIFIER,type,type)<SUB>320</SUB>> ]
-"1071" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>320</SUB>> ]
-"1089" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>324</SUB>> ]
-"1092" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>324</SUB>> ]
-"1110" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>341</SUB>> ]
-"1113" [label = <(FIELD_IDENTIFIER,type,type)<SUB>341</SUB>> ]
-"1117" [label = <(&lt;operator&gt;.equals,mapFlushEventsToConnections[i] == this)<SUB>342</SUB>> ]
-"1158" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].sensor)<SUB>353</SUB>> ]
-"1165" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>354</SUB>> ]
-"1173" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>355</SUB>> ]
-"1180" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data.sensor)<SUB>356</SUB>> ]
-"1214" [label = <(FIELD_IDENTIFIER,get,get)<SUB>364</SUB>> ]
-"1228" [label = <(&lt;operator&gt;.equals,buffer[i].type == SENSOR_TYPE_META_DATA)<SUB>366</SUB>> ]
-"1118" [label = <(&lt;operator&gt;.indirectIndexAccess,mapFlushEventsToConnections[i])<SUB>342</SUB>> ]
-"1123" [label = <(&lt;operator&gt;.assignment,scratch[count++] = buffer[i])<SUB>343</SUB>> ]
-"1134" [label = <(&lt;operator&gt;.logicalAnd,hasSensorAccess() &amp;&amp; noteOpIfRequired(buffer[i]))<SUB>348</SUB>> ]
-"1159" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>353</SUB>> ]
-"1162" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>353</SUB>> ]
-"1166" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>354</SUB>> ]
-"1169" [label = <(FIELD_IDENTIFIER,type,type)<SUB>354</SUB>> ]
-"1174" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>355</SUB>> ]
-"1177" [label = <(FIELD_IDENTIFIER,type,type)<SUB>355</SUB>> ]
-"1181" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data)<SUB>356</SUB>> ]
-"1186" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>356</SUB>> ]
-"1229" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>366</SUB>> ]
-"1236" [label = <(&lt;operator&gt;.assignment,scratch[count++] = buffer[i++])<SUB>367</SUB>> ]
-"1124" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[count++])<SUB>343</SUB>> ]
-"1128" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>343</SUB>> ]
-"1135" [label = <(hasSensorAccess,hasSensorAccess())<SUB>348</SUB>> ]
-"1136" [label = <(noteOpIfRequired,noteOpIfRequired(buffer[i]))<SUB>348</SUB>> ]
-"1141" [label = <(&lt;operator&gt;.assignment,scratch[count++] = buffer[i])<SUB>349</SUB>> ]
-"1182" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>356</SUB>> ]
-"1185" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>356</SUB>> ]
-"1230" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>366</SUB>> ]
-"1233" [label = <(FIELD_IDENTIFIER,type,type)<SUB>366</SUB>> ]
-"1237" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[count++])<SUB>367</SUB>> ]
-"1241" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i++])<SUB>367</SUB>> ]
-"1126" [label = <(&lt;operator&gt;.postIncrement,count++)<SUB>343</SUB>> ]
-"1137" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>348</SUB>> ]
-"1142" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[count++])<SUB>349</SUB>> ]
-"1146" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>349</SUB>> ]
-"1239" [label = <(&lt;operator&gt;.postIncrement,count++)<SUB>367</SUB>> ]
-"1243" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>367</SUB>> ]
-"1144" [label = <(&lt;operator&gt;.postIncrement,count++)<SUB>349</SUB>> ]
-"978" [label = <(METHOD,sendEvents)<SUB>288</SUB>> ]
-"1363" [label = <(METHOD_RETURN,status_t)<SUB>288</SUB>> ]
-  "986" -> "990" 
-  "990" -> "1191" 
-  "990" -> "996" 
-  "1245" -> "1247" 
-  "1266" -> "1271" 
-  "1293" -> "1305" 
-  "1354" -> "1363" 
-  "1247" -> "1252" 
-  "1247" -> "1255" 
-  "1255" -> "1259" 
-  "1255" -> "1268" 
-  "1268" -> "1266" 
-  "1271" -> "1275" 
-  "1271" -> "1298" 
-  "1295" -> "1293" 
-  "1305" -> "1310" 
-  "1305" -> "1356" 
-  "1355" -> "1354" 
-  "996" -> "1000" 
-  "1251" -> "1363" 
-  "1259" -> "1263" 
-  "1262" -> "1363" 
-  "1273" -> "1279" 
-  "1296" -> "1301" 
-  "1300" -> "1295" 
-  "1344" -> "1351" 
-  "1347" -> "1352" 
-  "1352" -> "1363" 
-  "1356" -> "1359" 
-  "1356" -> "1361" 
-  "1359" -> "1355" 
-  "1361" -> "1355" 
-  "1000" -> "1245" 
-  "1000" -> "1008" 
-  "1252" -> "1251" 
-  "1263" -> "1262" 
-  "1275" -> "1273" 
-  "1279" -> "1285" 
-  "1279" -> "1298" 
-  "1298" -> "1296" 
-  "1301" -> "1300" 
-  "1310" -> "1316" 
-  "1310" -> "1330" 
-  "1330" -> "1336" 
-  "1330" -> "1344" 
-  "1348" -> "1347" 
-  "1005" -> "1015" 
-  "1053" -> "1063" 
-  "1191" -> "1196" 
-  "1191" -> "1206" 
-  "1283" -> "1290" 
-  "1290" -> "1298" 
-  "1314" -> "1323" 
-  "1334" -> "1339" 
-  "1337" -> "1341" 
-  "1341" -> "1344" 
-  "1349" -> "1348" 
-  "1007" -> "1005" 
-  "1013" -> "1026" 
-  "1013" -> "1045" 
-  "1041" -> "1049" 
-  "1041" -> "1055" 
-  "1055" -> "1053" 
-  "1059" -> "1082" 
-  "1059" -> "1100" 
-  "1098" -> "1102" 
-  "1098" -> "1110" 
-  "1151" -> "1000" 
-  "1151" -> "1110" 
-  "1193" -> "1198" 
-  "1198" -> "1245" 
-  "1284" -> "1283" 
-  "1315" -> "1320" 
-  "1320" -> "1314" 
-  "1323" -> "1327" 
-  "1323" -> "1330" 
-  "1336" -> "1334" 
-  "1339" -> "1337" 
-  "1351" -> "1349" 
-  "1008" -> "1011" 
-  "1011" -> "1007" 
-  "1014" -> "1013" 
-  "1021" -> "1035" 
-  "1031" -> "1045" 
-  "1042" -> "1041" 
-  "1049" -> "1000" 
-  "1060" -> "1059" 
-  "1060" -> "1074" 
-  "1073" -> "1059" 
-  "1079" -> "1089" 
-  "1084" -> "1094" 
-  "1094" -> "1000" 
-  "1100" -> "1098" 
-  "1102" -> "1000" 
-  "1149" -> "1152" 
-  "1152" -> "1151" 
-  "1152" -> "1159" 
-  "1155" -> "1151" 
-  "1195" -> "1193" 
-  "1203" -> "1214" 
-  "1209" -> "1218" 
-  "1285" -> "1288" 
-  "1288" -> "1284" 
-  "1316" -> "1319" 
-  "1319" -> "1315" 
-  "1327" -> "1330" 
-  "1015" -> "1018" 
-  "1018" -> "1014" 
-  "1024" -> "1021" 
-  "1033" -> "1031" 
-  "1043" -> "1042" 
-  "1061" -> "1060" 
+"994" [label = <(&lt;operator&gt;.assignment,count = 0)<SUB>302</SUB>> ]
+"998" [label = <(_l,_l(mConnectionLock))<SUB>303</SUB>> ]
+"1253" [label = <(sendPendingFlushEventsLocked,sendPendingFlushEventsLocked())<SUB>379</SUB>> ]
+"1274" [label = <(&lt;operator&gt;.assignment,index_wake_up_event = -1)<SUB>395</SUB>> ]
+"1301" [label = <(&lt;operator&gt;.assignment,size = SensorEventQueue::write(mChannel,\012 reinterpret_cast&lt;ASensorEvent const*&gt;(scratch), count))<SUB>408</SUB>> ]
+"1362" [label = <(RETURN,return size &lt; 0 ? status_t(size) : status_t(NO_ERROR);,return size &lt; 0 ? status_t(size) : status_t(NO_ERROR);)<SUB>442</SUB>> ]
+"1255" [label = <(&lt;operator&gt;.equals,count == 0)<SUB>381</SUB>> ]
+"1263" [label = <(&lt;operator&gt;.notEquals,mCacheSize != 0)<SUB>388</SUB>> ]
+"1276" [label = <(&lt;operator&gt;.minus,-1)<SUB>395</SUB>> ]
+"1279" [label = <(hasSensorAccess,hasSensorAccess())<SUB>396</SUB>> ]
+"1303" [label = <(SensorEventQueue::write,SensorEventQueue::write(mChannel,\012 reinterpret_cast&lt;ASensorEvent const*&gt;(scratch), count))<SUB>408</SUB>> ]
+"1313" [label = <(&lt;operator&gt;.lessThan,size &lt; 0)<SUB>410</SUB>> ]
+"1363" [label = <(&lt;operator&gt;.conditional,size &lt; 0 ? status_t(size) : status_t(NO_ERROR))<SUB>442</SUB>> ]
+"1004" [label = <(&lt;operator&gt;.assignment,i=0)<SUB>305</SUB>> ]
+"1259" [label = <(RETURN,return status_t(NO_ERROR);,return status_t(NO_ERROR);)<SUB>382</SUB>> ]
+"1267" [label = <(appendEventsToCacheLocked,appendEventsToCacheLocked(scratch, count))<SUB>391</SUB>> ]
+"1270" [label = <(RETURN,return status_t(NO_ERROR);,return status_t(NO_ERROR);)<SUB>392</SUB>> ]
+"1281" [label = <(&lt;operator&gt;.assignment,index_wake_up_event = findWakeUpSensorEventLocked(scratch, count))<SUB>397</SUB>> ]
+"1304" [label = <(&lt;operator&gt;.fieldAccess,SensorEventQueue::write)<SUB>408</SUB>> ]
+"1308" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ASensorEvent const*&gt;(scratch))<SUB>409</SUB>> ]
+"1352" [label = <(appendEventsToCacheLocked,appendEventsToCacheLocked(scratch, count))<SUB>428</SUB>> ]
+"1355" [label = <(updateLooperRegistrationLocked,updateLooperRegistrationLocked(mService-&gt;getLooper()))<SUB>432</SUB>> ]
+"1360" [label = <(RETURN,return size;,return size;)<SUB>433</SUB>> ]
+"1364" [label = <(&lt;operator&gt;.lessThan,size &lt; 0)<SUB>442</SUB>> ]
+"1367" [label = <(status_t,status_t(size))<SUB>442</SUB>> ]
+"1369" [label = <(status_t,status_t(NO_ERROR))<SUB>442</SUB>> ]
+"1008" [label = <(&lt;operator&gt;.lessThan,i&lt;numEvents)<SUB>306</SUB>> ]
+"1260" [label = <(status_t,status_t(NO_ERROR))<SUB>382</SUB>> ]
+"1271" [label = <(status_t,status_t(NO_ERROR))<SUB>392</SUB>> ]
+"1283" [label = <(findWakeUpSensorEventLocked,findWakeUpSensorEventLocked(scratch, count))<SUB>397</SUB>> ]
+"1287" [label = <(&lt;operator&gt;.greaterEqualsThan,index_wake_up_event &gt;= 0)<SUB>398</SUB>> ]
+"1306" [label = <(FIELD_IDENTIFIER,write,write)<SUB>408</SUB>> ]
+"1309" [label = <(UNKNOWN,ASensorEvent const*,ASensorEvent const*)<SUB>409</SUB>> ]
+"1318" [label = <(&lt;operator&gt;.greaterEqualsThan,index_wake_up_event &gt;= 0)<SUB>412</SUB>> ]
+"1338" [label = <(&lt;operator&gt;.equals,mEventCache == nullptr)<SUB>422</SUB>> ]
+"1356" [label = <(getLooper,mService-&gt;getLooper())<SUB>432</SUB>> ]
+"1013" [label = <(&lt;operator&gt;.assignment,sensor_handle = buffer[i].sensor)<SUB>307</SUB>> ]
+"1061" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = mSensorInfo[sensor_handle])<SUB>324</SUB>> ]
+"1199" [label = <(hasSensorAccess,hasSensorAccess())<SUB>365</SUB>> ]
+"1291" [label = <(&lt;operators&gt;.assignmentOr,scratch[index_wake_up_event].flags |= WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>399</SUB>> ]
+"1298" [label = <(&lt;operator&gt;.preIncrement,++mWakeLockRefCount)<SUB>400</SUB>> ]
+"1322" [label = <(&lt;operators&gt;.assignmentAnd,scratch[index_wake_up_event].flags &amp;= ~WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>414</SUB>> ]
+"1342" [label = <(&lt;operator&gt;.assignment,mMaxCacheSize = computeMaxCacheSizeLocked())<SUB>423</SUB>> ]
+"1345" [label = <(&lt;operator&gt;.assignment,mEventCache = new sensors_event_t[mMaxCacheSize])<SUB>424</SUB>> ]
+"1349" [label = <(&lt;operator&gt;.assignment,mCacheSize = 0)<SUB>425</SUB>> ]
+"1357" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getLooper)<SUB>432</SUB>> ]
+"1015" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].sensor)<SUB>307</SUB>> ]
+"1021" [label = <(&lt;operator&gt;.equals,buffer[i].type == SENSOR_TYPE_META_DATA)<SUB>308</SUB>> ]
+"1049" [label = <(&lt;operator&gt;.equals,mSensorInfo.count(sensor_handle) == 0)<SUB>319</SUB>> ]
+"1063" [label = <(&lt;operator&gt;.indirectIndexAccess,mSensorInfo[sensor_handle])<SUB>324</SUB>> ]
+"1067" [label = <(&lt;operator&gt;.logicalAnd,buffer[i].type == SENSOR_TYPE_META_DATA &amp;&amp; flushInfo.mFirstFlushPending == true &amp;&amp;\012                    mapFlushEventsToConnections[i] == this)<SUB>326</SUB>> ]
+"1106" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>337</SUB>> ]
+"1159" [label = <(&lt;operator&gt;.logicalAnd,(i&lt;numEvents) &amp;&amp; ((buffer[i].sensor == sensor_handle &amp;&amp;\012                                        buffer[i].type != SENSOR_TYPE_META_DATA) ||\012 (buffer[i].type == SENSOR_TYPE_META_DATA  &amp;&amp;\012                                        buffer[i].meta_data.sensor == sensor_handle)))<SUB>359</SUB>> ]
+"1201" [label = <(&lt;operator&gt;.assignment,scratch = const_cast&lt;sensors_event_t *&gt;(buffer))<SUB>366</SUB>> ]
+"1206" [label = <(&lt;operator&gt;.assignment,count = numEvents)<SUB>367</SUB>> ]
+"1292" [label = <(&lt;operator&gt;.fieldAccess,scratch[index_wake_up_event].flags)<SUB>399</SUB>> ]
+"1323" [label = <(&lt;operator&gt;.fieldAccess,scratch[index_wake_up_event].flags)<SUB>414</SUB>> ]
+"1328" [label = <(&lt;operator&gt;.not,~WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>414</SUB>> ]
+"1331" [label = <(&lt;operator&gt;.greaterThan,mWakeLockRefCount &gt; 0)<SUB>415</SUB>> ]
+"1344" [label = <(computeMaxCacheSizeLocked,computeMaxCacheSizeLocked())<SUB>423</SUB>> ]
+"1347" [label = <(&lt;operator&gt;.new,new sensors_event_t[mMaxCacheSize])<SUB>424</SUB>> ]
+"1359" [label = <(FIELD_IDENTIFIER,getLooper,getLooper)<SUB>432</SUB>> ]
+"1016" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>307</SUB>> ]
+"1019" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>307</SUB>> ]
+"1022" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>308</SUB>> ]
+"1029" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;flush complete event sensor==%d &quot;,\012                        buffer[i].meta_data.sensor))<SUB>309</SUB>> ]
+"1039" [label = <(&lt;operator&gt;.assignment,sensor_handle = buffer[i].meta_data.sensor)<SUB>314</SUB>> ]
+"1050" [label = <(count,mSensorInfo.count(sensor_handle))<SUB>319</SUB>> ]
+"1057" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>320</SUB>> ]
+"1068" [label = <(&lt;operator&gt;.logicalAnd,buffer[i].type == SENSOR_TYPE_META_DATA &amp;&amp; flushInfo.mFirstFlushPending == true)<SUB>326</SUB>> ]
+"1081" [label = <(&lt;operator&gt;.equals,mapFlushEventsToConnections[i] == this)<SUB>327</SUB>> ]
+"1087" [label = <(&lt;operator&gt;.assignment,flushInfo.mFirstFlushPending = false)<SUB>328</SUB>> ]
+"1092" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;First flush event for sensor==%d &quot;,\012                        buffer[i].meta_data.sensor))<SUB>329</SUB>> ]
+"1102" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>331</SUB>> ]
+"1108" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>337</SUB>> ]
+"1110" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>338</SUB>> ]
+"1157" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>358</SUB>> ]
+"1160" [label = <(&lt;operator&gt;.lessThan,i&lt;numEvents)<SUB>359</SUB>> ]
+"1163" [label = <(&lt;operator&gt;.logicalOr,(buffer[i].sensor == sensor_handle &amp;&amp;\012                                        buffer[i].type != SENSOR_TYPE_META_DATA) ||\012 (buffer[i].type == SENSOR_TYPE_META_DATA  &amp;&amp;\012                                        buffer[i].meta_data.sensor == sensor_handle))<SUB>359</SUB>> ]
+"1203" [label = <(&lt;operator&gt;.cast,const_cast&lt;sensors_event_t *&gt;(buffer))<SUB>366</SUB>> ]
+"1211" [label = <(reset,sanitizedBuffer.reset(new sensors_event_t[numEvents]))<SUB>369</SUB>> ]
+"1217" [label = <(&lt;operator&gt;.assignment,scratch = sanitizedBuffer.get())<SUB>370</SUB>> ]
+"1293" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[index_wake_up_event])<SUB>399</SUB>> ]
+"1296" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>399</SUB>> ]
+"1324" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[index_wake_up_event])<SUB>414</SUB>> ]
+"1327" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>414</SUB>> ]
+"1335" [label = <(&lt;operator&gt;.preDecrement,--mWakeLockRefCount)<SUB>416</SUB>> ]
+"1023" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>308</SUB>> ]
+"1026" [label = <(FIELD_IDENTIFIER,type,type)<SUB>308</SUB>> ]
+"1032" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data.sensor)<SUB>310</SUB>> ]
+"1041" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data.sensor)<SUB>314</SUB>> ]
+"1051" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>319</SUB>> ]
+"1069" [label = <(&lt;operator&gt;.equals,buffer[i].type == SENSOR_TYPE_META_DATA)<SUB>326</SUB>> ]
+"1076" [label = <(&lt;operator&gt;.equals,flushInfo.mFirstFlushPending == true)<SUB>326</SUB>> ]
+"1082" [label = <(&lt;operator&gt;.indirectIndexAccess,mapFlushEventsToConnections[i])<SUB>327</SUB>> ]
+"1088" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>328</SUB>> ]
+"1095" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data.sensor)<SUB>330</SUB>> ]
+"1116" [label = <(&lt;operator&gt;.equals,buffer[i].type == SENSOR_TYPE_META_DATA)<SUB>347</SUB>> ]
+"1164" [label = <(&lt;operator&gt;.logicalAnd,buffer[i].sensor == sensor_handle &amp;&amp;\012                                        buffer[i].type != SENSOR_TYPE_META_DATA)<SUB>359</SUB>> ]
+"1179" [label = <(&lt;operator&gt;.logicalAnd,buffer[i].type == SENSOR_TYPE_META_DATA  &amp;&amp;\012                                        buffer[i].meta_data.sensor == sensor_handle)<SUB>361</SUB>> ]
+"1204" [label = <(UNKNOWN,sensors_event_t *,sensors_event_t *)<SUB>366</SUB>> ]
+"1212" [label = <(&lt;operator&gt;.fieldAccess,sanitizedBuffer.reset)<SUB>369</SUB>> ]
+"1215" [label = <(&lt;operator&gt;.new,new sensors_event_t[numEvents])<SUB>369</SUB>> ]
+"1219" [label = <(get,sanitizedBuffer.get())<SUB>370</SUB>> ]
+"1229" [label = <(&lt;operator&gt;.lessThan,i &lt; numEvents)<SUB>371</SUB>> ]
+"1232" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>371</SUB>> ]
+"1033" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data)<SUB>310</SUB>> ]
+"1038" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>310</SUB>> ]
+"1042" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data)<SUB>314</SUB>> ]
+"1047" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>314</SUB>> ]
+"1053" [label = <(FIELD_IDENTIFIER,count,count)<SUB>319</SUB>> ]
+"1070" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>326</SUB>> ]
+"1077" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mFirstFlushPending)<SUB>326</SUB>> ]
+"1090" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>328</SUB>> ]
+"1096" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data)<SUB>330</SUB>> ]
+"1101" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>330</SUB>> ]
+"1117" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>347</SUB>> ]
+"1165" [label = <(&lt;operator&gt;.equals,buffer[i].sensor == sensor_handle)<SUB>359</SUB>> ]
+"1172" [label = <(&lt;operator&gt;.notEquals,buffer[i].type != SENSOR_TYPE_META_DATA)<SUB>360</SUB>> ]
+"1180" [label = <(&lt;operator&gt;.equals,buffer[i].type == SENSOR_TYPE_META_DATA)<SUB>361</SUB>> ]
+"1187" [label = <(&lt;operator&gt;.equals,buffer[i].meta_data.sensor == sensor_handle)<SUB>362</SUB>> ]
+"1214" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>369</SUB>> ]
+"1220" [label = <(&lt;operator&gt;.fieldAccess,sanitizedBuffer.get)<SUB>370</SUB>> ]
+"1226" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>371</SUB>> ]
+"1034" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>310</SUB>> ]
+"1037" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>310</SUB>> ]
+"1043" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>314</SUB>> ]
+"1046" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>314</SUB>> ]
+"1071" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>326</SUB>> ]
+"1074" [label = <(FIELD_IDENTIFIER,type,type)<SUB>326</SUB>> ]
+"1079" [label = <(FIELD_IDENTIFIER,mFirstFlushPending,mFirstFlushPending)<SUB>326</SUB>> ]
+"1097" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>330</SUB>> ]
+"1100" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>330</SUB>> ]
+"1118" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>347</SUB>> ]
+"1121" [label = <(FIELD_IDENTIFIER,type,type)<SUB>347</SUB>> ]
+"1125" [label = <(&lt;operator&gt;.equals,mapFlushEventsToConnections[i] == this)<SUB>348</SUB>> ]
+"1166" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].sensor)<SUB>359</SUB>> ]
+"1173" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>360</SUB>> ]
+"1181" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>361</SUB>> ]
+"1188" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data.sensor)<SUB>362</SUB>> ]
+"1222" [label = <(FIELD_IDENTIFIER,get,get)<SUB>370</SUB>> ]
+"1236" [label = <(&lt;operator&gt;.equals,buffer[i].type == SENSOR_TYPE_META_DATA)<SUB>372</SUB>> ]
+"1126" [label = <(&lt;operator&gt;.indirectIndexAccess,mapFlushEventsToConnections[i])<SUB>348</SUB>> ]
+"1131" [label = <(&lt;operator&gt;.assignment,scratch[count++] = buffer[i])<SUB>349</SUB>> ]
+"1142" [label = <(&lt;operator&gt;.logicalAnd,hasSensorAccess() &amp;&amp; noteOpIfRequired(buffer[i]))<SUB>354</SUB>> ]
+"1167" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>359</SUB>> ]
+"1170" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>359</SUB>> ]
+"1174" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>360</SUB>> ]
+"1177" [label = <(FIELD_IDENTIFIER,type,type)<SUB>360</SUB>> ]
+"1182" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>361</SUB>> ]
+"1185" [label = <(FIELD_IDENTIFIER,type,type)<SUB>361</SUB>> ]
+"1189" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].meta_data)<SUB>362</SUB>> ]
+"1194" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>362</SUB>> ]
+"1237" [label = <(&lt;operator&gt;.fieldAccess,buffer[i].type)<SUB>372</SUB>> ]
+"1244" [label = <(&lt;operator&gt;.assignment,scratch[count++] = buffer[i++])<SUB>373</SUB>> ]
+"1132" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[count++])<SUB>349</SUB>> ]
+"1136" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>349</SUB>> ]
+"1143" [label = <(hasSensorAccess,hasSensorAccess())<SUB>354</SUB>> ]
+"1144" [label = <(noteOpIfRequired,noteOpIfRequired(buffer[i]))<SUB>354</SUB>> ]
+"1149" [label = <(&lt;operator&gt;.assignment,scratch[count++] = buffer[i])<SUB>355</SUB>> ]
+"1190" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>362</SUB>> ]
+"1193" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>362</SUB>> ]
+"1238" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>372</SUB>> ]
+"1241" [label = <(FIELD_IDENTIFIER,type,type)<SUB>372</SUB>> ]
+"1245" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[count++])<SUB>373</SUB>> ]
+"1249" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i++])<SUB>373</SUB>> ]
+"1134" [label = <(&lt;operator&gt;.postIncrement,count++)<SUB>349</SUB>> ]
+"1145" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>354</SUB>> ]
+"1150" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[count++])<SUB>355</SUB>> ]
+"1154" [label = <(&lt;operator&gt;.indirectIndexAccess,buffer[i])<SUB>355</SUB>> ]
+"1247" [label = <(&lt;operator&gt;.postIncrement,count++)<SUB>373</SUB>> ]
+"1251" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>373</SUB>> ]
+"1152" [label = <(&lt;operator&gt;.postIncrement,count++)<SUB>355</SUB>> ]
+"986" [label = <(METHOD,sendEvents)<SUB>294</SUB>> ]
+"1371" [label = <(METHOD_RETURN,status_t)<SUB>294</SUB>> ]
+  "994" -> "998" 
+  "998" -> "1199" 
+  "998" -> "1004" 
+  "1253" -> "1255" 
+  "1274" -> "1279" 
+  "1301" -> "1313" 
+  "1362" -> "1371" 
+  "1255" -> "1260" 
+  "1255" -> "1263" 
+  "1263" -> "1267" 
+  "1263" -> "1276" 
+  "1276" -> "1274" 
+  "1279" -> "1283" 
+  "1279" -> "1306" 
+  "1303" -> "1301" 
+  "1313" -> "1318" 
+  "1313" -> "1364" 
+  "1363" -> "1362" 
+  "1004" -> "1008" 
+  "1259" -> "1371" 
+  "1267" -> "1271" 
+  "1270" -> "1371" 
+  "1281" -> "1287" 
+  "1304" -> "1309" 
+  "1308" -> "1303" 
+  "1352" -> "1359" 
+  "1355" -> "1360" 
+  "1360" -> "1371" 
+  "1364" -> "1367" 
+  "1364" -> "1369" 
+  "1367" -> "1363" 
+  "1369" -> "1363" 
+  "1008" -> "1253" 
+  "1008" -> "1016" 
+  "1260" -> "1259" 
+  "1271" -> "1270" 
+  "1283" -> "1281" 
+  "1287" -> "1293" 
+  "1287" -> "1306" 
+  "1306" -> "1304" 
+  "1309" -> "1308" 
+  "1318" -> "1324" 
+  "1318" -> "1338" 
+  "1338" -> "1344" 
+  "1338" -> "1352" 
+  "1356" -> "1355" 
+  "1013" -> "1023" 
   "1061" -> "1071" 
-  "1068" -> "1060" 
-  "1074" -> "1073" 
-  "1080" -> "1079" 
-  "1087" -> "1084" 
-  "1108" -> "1135" 
-  "1108" -> "1118" 
-  "1156" -> "1155" 
-  "1156" -> "1174" 
-  "1171" -> "1155" 
-  "1196" -> "1195" 
-  "1204" -> "1207" 
-  "1207" -> "1203" 
-  "1211" -> "1209" 
-  "1221" -> "1245" 
-  "1221" -> "1230" 
-  "1224" -> "1221" 
-  "1025" -> "1030" 
-  "1030" -> "1024" 
-  "1034" -> "1039" 
-  "1039" -> "1033" 
-  "1045" -> "1043" 
-  "1062" -> "1061" 
+  "1199" -> "1204" 
+  "1199" -> "1214" 
+  "1291" -> "1298" 
+  "1298" -> "1306" 
+  "1322" -> "1331" 
+  "1342" -> "1347" 
+  "1345" -> "1349" 
+  "1349" -> "1352" 
+  "1357" -> "1356" 
+  "1015" -> "1013" 
+  "1021" -> "1034" 
+  "1021" -> "1053" 
+  "1049" -> "1057" 
+  "1049" -> "1063" 
+  "1063" -> "1061" 
+  "1067" -> "1090" 
+  "1067" -> "1108" 
+  "1106" -> "1110" 
+  "1106" -> "1118" 
+  "1159" -> "1008" 
+  "1159" -> "1118" 
+  "1201" -> "1206" 
+  "1206" -> "1253" 
+  "1292" -> "1291" 
+  "1323" -> "1328" 
+  "1328" -> "1322" 
+  "1331" -> "1335" 
+  "1331" -> "1338" 
+  "1344" -> "1342" 
+  "1347" -> "1345" 
+  "1359" -> "1357" 
+  "1016" -> "1019" 
+  "1019" -> "1015" 
+  "1022" -> "1021" 
+  "1029" -> "1043" 
+  "1039" -> "1053" 
+  "1050" -> "1049" 
+  "1057" -> "1008" 
+  "1068" -> "1067" 
+  "1068" -> "1082" 
+  "1081" -> "1067" 
+  "1087" -> "1097" 
+  "1092" -> "1102" 
+  "1102" -> "1008" 
+  "1108" -> "1106" 
+  "1110" -> "1008" 
+  "1157" -> "1160" 
+  "1160" -> "1159" 
+  "1160" -> "1167" 
+  "1163" -> "1159" 
+  "1203" -> "1201" 
+  "1211" -> "1222" 
+  "1217" -> "1226" 
+  "1293" -> "1296" 
+  "1296" -> "1292" 
+  "1324" -> "1327" 
+  "1327" -> "1323" 
+  "1335" -> "1338" 
+  "1023" -> "1026" 
+  "1026" -> "1022" 
+  "1032" -> "1029" 
+  "1041" -> "1039" 
+  "1051" -> "1050" 
   "1069" -> "1068" 
-  "1082" -> "1080" 
-  "1088" -> "1093" 
-  "1093" -> "1087" 
-  "1109" -> "1108" 
-  "1157" -> "1156" 
-  "1157" -> "1166" 
-  "1164" -> "1156" 
-  "1172" -> "1171" 
-  "1172" -> "1182" 
-  "1179" -> "1171" 
-  "1206" -> "1204" 
-  "1212" -> "1211" 
-  "1218" -> "1221" 
-  "1026" -> "1029" 
-  "1029" -> "1025" 
-  "1035" -> "1038" 
-  "1038" -> "1034" 
-  "1063" -> "1066" 
-  "1066" -> "1062" 
-  "1071" -> "1069" 
-  "1089" -> "1092" 
-  "1092" -> "1088" 
-  "1110" -> "1113" 
-  "1113" -> "1109" 
-  "1117" -> "1126" 
-  "1117" -> "1149" 
-  "1158" -> "1157" 
+  "1069" -> "1079" 
+  "1076" -> "1068" 
+  "1082" -> "1081" 
+  "1088" -> "1087" 
+  "1095" -> "1092" 
+  "1116" -> "1143" 
+  "1116" -> "1126" 
+  "1164" -> "1163" 
+  "1164" -> "1182" 
+  "1179" -> "1163" 
+  "1204" -> "1203" 
+  "1212" -> "1215" 
+  "1215" -> "1211" 
+  "1219" -> "1217" 
+  "1229" -> "1253" 
+  "1229" -> "1238" 
+  "1232" -> "1229" 
+  "1033" -> "1038" 
+  "1038" -> "1032" 
+  "1042" -> "1047" 
+  "1047" -> "1041" 
+  "1053" -> "1051" 
+  "1070" -> "1069" 
+  "1077" -> "1076" 
+  "1090" -> "1088" 
+  "1096" -> "1101" 
+  "1101" -> "1095" 
+  "1117" -> "1116" 
   "1165" -> "1164" 
-  "1173" -> "1172" 
+  "1165" -> "1174" 
+  "1172" -> "1164" 
   "1180" -> "1179" 
+  "1180" -> "1190" 
+  "1187" -> "1179" 
   "1214" -> "1212" 
-  "1228" -> "1239" 
-  "1228" -> "1224" 
-  "1118" -> "1117" 
-  "1123" -> "1149" 
-  "1134" -> "1144" 
-  "1134" -> "1149" 
-  "1159" -> "1162" 
-  "1162" -> "1158" 
-  "1166" -> "1169" 
-  "1169" -> "1165" 
+  "1220" -> "1219" 
+  "1226" -> "1229" 
+  "1034" -> "1037" 
+  "1037" -> "1033" 
+  "1043" -> "1046" 
+  "1046" -> "1042" 
+  "1071" -> "1074" 
+  "1074" -> "1070" 
+  "1079" -> "1077" 
+  "1097" -> "1100" 
+  "1100" -> "1096" 
+  "1118" -> "1121" 
+  "1121" -> "1117" 
+  "1125" -> "1134" 
+  "1125" -> "1157" 
+  "1166" -> "1165" 
+  "1173" -> "1172" 
+  "1181" -> "1180" 
+  "1188" -> "1187" 
+  "1222" -> "1220" 
+  "1236" -> "1247" 
+  "1236" -> "1232" 
+  "1126" -> "1125" 
+  "1131" -> "1157" 
+  "1142" -> "1152" 
+  "1142" -> "1157" 
+  "1167" -> "1170" 
+  "1170" -> "1166" 
   "1174" -> "1177" 
   "1177" -> "1173" 
-  "1181" -> "1186" 
-  "1186" -> "1180" 
-  "1229" -> "1228" 
-  "1236" -> "1224" 
-  "1124" -> "1128" 
-  "1128" -> "1123" 
-  "1135" -> "1134" 
-  "1135" -> "1137" 
-  "1136" -> "1134" 
-  "1141" -> "1149" 
   "1182" -> "1185" 
   "1185" -> "1181" 
-  "1230" -> "1233" 
-  "1233" -> "1229" 
-  "1237" -> "1243" 
-  "1241" -> "1236" 
-  "1126" -> "1124" 
-  "1137" -> "1136" 
-  "1142" -> "1146" 
-  "1146" -> "1141" 
-  "1239" -> "1237" 
-  "1243" -> "1241" 
+  "1189" -> "1194" 
+  "1194" -> "1188" 
+  "1237" -> "1236" 
+  "1244" -> "1232" 
+  "1132" -> "1136" 
+  "1136" -> "1131" 
+  "1143" -> "1142" 
+  "1143" -> "1145" 
   "1144" -> "1142" 
-  "978" -> "986" 
+  "1149" -> "1157" 
+  "1190" -> "1193" 
+  "1193" -> "1189" 
+  "1238" -> "1241" 
+  "1241" -> "1237" 
+  "1245" -> "1251" 
+  "1249" -> "1244" 
+  "1134" -> "1132" 
+  "1145" -> "1144" 
+  "1150" -> "1154" 
+  "1154" -> "1149" 
+  "1247" -> "1245" 
+  "1251" -> "1249" 
+  "1152" -> "1150" 
+  "986" -> "994" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/58-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/58-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/58-cfg.dot	2023-06-07 19:32:15.397403167 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/58-cfg.dot	2023-06-07 19:32:19.587402778 +0330
@@ -1,28 +1,28 @@
 digraph "hasSensorAccess" {  
-"1367" [label = <(RETURN,return mService-&gt;isUidActive(mUid)\012 &amp;&amp; !mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled();,return mService-&gt;isUidActive(mUid)\012 &amp;&amp; !mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled();)<SUB>440</SUB>> ]
-"1368" [label = <(&lt;operator&gt;.logicalAnd,mService-&gt;isUidActive(mUid)\012 &amp;&amp; !mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled())<SUB>440</SUB>> ]
-"1369" [label = <(isUidActive,mService-&gt;isUidActive(mUid))<SUB>440</SUB>> ]
-"1374" [label = <(&lt;operator&gt;.logicalNot,!mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled())<SUB>441</SUB>> ]
-"1370" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;isUidActive)<SUB>440</SUB>> ]
-"1375" [label = <(isSensorPrivacyEnabled,mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled())<SUB>441</SUB>> ]
-"1372" [label = <(FIELD_IDENTIFIER,isUidActive,isUidActive)<SUB>440</SUB>> ]
-"1376" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled)<SUB>441</SUB>> ]
-"1377" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;mSensorPrivacyPolicy)<SUB>441</SUB>> ]
-"1380" [label = <(FIELD_IDENTIFIER,isSensorPrivacyEnabled,isSensorPrivacyEnabled)<SUB>441</SUB>> ]
-"1379" [label = <(FIELD_IDENTIFIER,mSensorPrivacyPolicy,mSensorPrivacyPolicy)<SUB>441</SUB>> ]
-"1365" [label = <(METHOD,hasSensorAccess)<SUB>439</SUB>> ]
-"1381" [label = <(METHOD_RETURN,bool)<SUB>439</SUB>> ]
-  "1367" -> "1381" 
-  "1368" -> "1367" 
-  "1369" -> "1368" 
-  "1369" -> "1379" 
-  "1374" -> "1368" 
-  "1370" -> "1369" 
-  "1375" -> "1374" 
-  "1372" -> "1370" 
+"1375" [label = <(RETURN,return mService-&gt;isUidActive(mUid)\012 &amp;&amp; !mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled();,return mService-&gt;isUidActive(mUid)\012 &amp;&amp; !mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled();)<SUB>446</SUB>> ]
+"1376" [label = <(&lt;operator&gt;.logicalAnd,mService-&gt;isUidActive(mUid)\012 &amp;&amp; !mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled())<SUB>446</SUB>> ]
+"1377" [label = <(isUidActive,mService-&gt;isUidActive(mUid))<SUB>446</SUB>> ]
+"1382" [label = <(&lt;operator&gt;.logicalNot,!mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled())<SUB>447</SUB>> ]
+"1378" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;isUidActive)<SUB>446</SUB>> ]
+"1383" [label = <(isSensorPrivacyEnabled,mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled())<SUB>447</SUB>> ]
+"1380" [label = <(FIELD_IDENTIFIER,isUidActive,isUidActive)<SUB>446</SUB>> ]
+"1384" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;mSensorPrivacyPolicy-&gt;isSensorPrivacyEnabled)<SUB>447</SUB>> ]
+"1385" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;mSensorPrivacyPolicy)<SUB>447</SUB>> ]
+"1388" [label = <(FIELD_IDENTIFIER,isSensorPrivacyEnabled,isSensorPrivacyEnabled)<SUB>447</SUB>> ]
+"1387" [label = <(FIELD_IDENTIFIER,mSensorPrivacyPolicy,mSensorPrivacyPolicy)<SUB>447</SUB>> ]
+"1373" [label = <(METHOD,hasSensorAccess)<SUB>445</SUB>> ]
+"1389" [label = <(METHOD_RETURN,bool)<SUB>445</SUB>> ]
+  "1375" -> "1389" 
   "1376" -> "1375" 
-  "1377" -> "1380" 
-  "1380" -> "1376" 
-  "1379" -> "1377" 
-  "1365" -> "1372" 
+  "1377" -> "1376" 
+  "1377" -> "1387" 
+  "1382" -> "1376" 
+  "1378" -> "1377" 
+  "1383" -> "1382" 
+  "1380" -> "1378" 
+  "1384" -> "1383" 
+  "1385" -> "1388" 
+  "1388" -> "1384" 
+  "1387" -> "1385" 
+  "1373" -> "1380" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/59-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/59-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/59-cfg.dot	2023-06-07 19:32:15.417403167 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/59-cfg.dot	2023-06-07 19:32:19.587402778 +0330
@@ -1,93 +1,93 @@
 digraph "noteOpIfRequired" {  
-"1387" [label = <(&lt;operator&gt;.assignment,success = true)<SUB>445</SUB>> ]
-"1391" [label = <(&lt;operator&gt;.assignment,iter = mHandleToAppOp.find(event.sensor))<SUB>446</SUB>> ]
-"1467" [label = <(RETURN,return success;,return success;)<SUB>468</SUB>> ]
-"1393" [label = <(find,mHandleToAppOp.find(event.sensor))<SUB>446</SUB>> ]
-"1401" [label = <(&lt;operator&gt;.notEquals,iter != mHandleToAppOp.end())<SUB>447</SUB>> ]
-"1394" [label = <(&lt;operator&gt;.fieldAccess,mHandleToAppOp.find)<SUB>446</SUB>> ]
-"1397" [label = <(&lt;operator&gt;.fieldAccess,event.sensor)<SUB>446</SUB>> ]
-"1403" [label = <(end,mHandleToAppOp.end())<SUB>447</SUB>> ]
-"1396" [label = <(FIELD_IDENTIFIER,find,find)<SUB>446</SUB>> ]
-"1399" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>446</SUB>> ]
-"1404" [label = <(&lt;operator&gt;.fieldAccess,mHandleToAppOp.end)<SUB>447</SUB>> ]
-"1409" [label = <(&lt;operator&gt;.equals,mTargetSdk == kTargetSdkUnknown)<SUB>448</SUB>> ]
-"1421" [label = <(&lt;operator&gt;.logicalAnd,(event.type == SENSOR_TYPE_STEP_COUNTER || event.type == SENSOR_TYPE_STEP_DETECTOR) &amp;&amp;\012                mTargetSdk &gt; 0 &amp;&amp; mTargetSdk &lt;= __ANDROID_API_P__)<SUB>459</SUB>> ]
-"1406" [label = <(FIELD_IDENTIFIER,end,end)<SUB>447</SUB>> ]
-"1413" [label = <(&lt;operator&gt;.assignment,mTargetSdk = SensorService::getTargetSdkVersion(mOpPackageName))<SUB>453</SUB>> ]
-"1422" [label = <(&lt;operator&gt;.logicalAnd,(event.type == SENSOR_TYPE_STEP_COUNTER || event.type == SENSOR_TYPE_STEP_DETECTOR) &amp;&amp;\012                mTargetSdk &gt; 0)<SUB>459</SUB>> ]
-"1437" [label = <(&lt;operator&gt;.lessEqualsThan,mTargetSdk &lt;= __ANDROID_API_P__)<SUB>460</SUB>> ]
-"1441" [label = <(&lt;operator&gt;.assignment,success = true)<SUB>461</SUB>> ]
-"1415" [label = <(SensorService::getTargetSdkVersion,SensorService::getTargetSdkVersion(mOpPackageName))<SUB>453</SUB>> ]
-"1423" [label = <(&lt;operator&gt;.logicalOr,event.type == SENSOR_TYPE_STEP_COUNTER || event.type == SENSOR_TYPE_STEP_DETECTOR)<SUB>459</SUB>> ]
-"1434" [label = <(&lt;operator&gt;.greaterThan,mTargetSdk &gt; 0)<SUB>460</SUB>> ]
-"1447" [label = <(&lt;operator&gt;.assignment,appOpMode = mService-&gt;sAppOpsManager.noteOp(iter-&gt;second, mUid,\012                                                                mOpPackageName))<SUB>463</SUB>> ]
-"1460" [label = <(&lt;operator&gt;.assignment,success = (appOpMode == AppOpsManager::MODE_ALLOWED))<SUB>465</SUB>> ]
-"1416" [label = <(&lt;operator&gt;.fieldAccess,SensorService::getTargetSdkVersion)<SUB>453</SUB>> ]
-"1424" [label = <(&lt;operator&gt;.equals,event.type == SENSOR_TYPE_STEP_COUNTER)<SUB>459</SUB>> ]
-"1429" [label = <(&lt;operator&gt;.equals,event.type == SENSOR_TYPE_STEP_DETECTOR)<SUB>459</SUB>> ]
-"1449" [label = <(noteOp,mService-&gt;sAppOpsManager.noteOp(iter-&gt;second, mUid,\012                                                                mOpPackageName))<SUB>463</SUB>> ]
-"1462" [label = <(&lt;operator&gt;.equals,appOpMode == AppOpsManager::MODE_ALLOWED)<SUB>465</SUB>> ]
-"1418" [label = <(FIELD_IDENTIFIER,getTargetSdkVersion,getTargetSdkVersion)<SUB>453</SUB>> ]
-"1425" [label = <(&lt;operator&gt;.fieldAccess,event.type)<SUB>459</SUB>> ]
-"1430" [label = <(&lt;operator&gt;.fieldAccess,event.type)<SUB>459</SUB>> ]
-"1450" [label = <(&lt;operator&gt;.fieldAccess,mService-&gt;sAppOpsManager.noteOp)<SUB>463</SUB>> ]
-"1455" [label = <(&lt;operator&gt;.indirectFieldAccess,iter-&gt;second)<SUB>463</SUB>> ]
-"1464" [label = <(&lt;operator&gt;.fieldAccess,AppOpsManager::MODE_ALLOWED)<SUB>465</SUB>> ]
-"1427" [label = <(FIELD_IDENTIFIER,type,type)<SUB>459</SUB>> ]
-"1432" [label = <(FIELD_IDENTIFIER,type,type)<SUB>459</SUB>> ]
-"1451" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;sAppOpsManager)<SUB>463</SUB>> ]
-"1454" [label = <(FIELD_IDENTIFIER,noteOp,noteOp)<SUB>463</SUB>> ]
-"1457" [label = <(FIELD_IDENTIFIER,second,second)<SUB>463</SUB>> ]
-"1466" [label = <(FIELD_IDENTIFIER,MODE_ALLOWED,MODE_ALLOWED)<SUB>465</SUB>> ]
-"1453" [label = <(FIELD_IDENTIFIER,sAppOpsManager,sAppOpsManager)<SUB>463</SUB>> ]
-"1383" [label = <(METHOD,noteOpIfRequired)<SUB>444</SUB>> ]
-"1469" [label = <(METHOD_RETURN,bool)<SUB>444</SUB>> ]
-  "1387" -> "1396" 
-  "1391" -> "1406" 
-  "1467" -> "1469" 
-  "1393" -> "1391" 
-  "1401" -> "1409" 
-  "1401" -> "1467" 
-  "1394" -> "1399" 
-  "1397" -> "1393" 
-  "1403" -> "1401" 
-  "1396" -> "1394" 
-  "1399" -> "1397" 
-  "1404" -> "1403" 
-  "1409" -> "1418" 
-  "1409" -> "1427" 
-  "1421" -> "1441" 
-  "1421" -> "1453" 
-  "1406" -> "1404" 
-  "1413" -> "1427" 
-  "1422" -> "1421" 
-  "1422" -> "1437" 
-  "1437" -> "1421" 
-  "1441" -> "1467" 
-  "1415" -> "1413" 
-  "1423" -> "1422" 
-  "1423" -> "1434" 
-  "1434" -> "1422" 
-  "1447" -> "1466" 
-  "1460" -> "1467" 
-  "1416" -> "1415" 
-  "1424" -> "1423" 
-  "1424" -> "1432" 
-  "1429" -> "1423" 
-  "1449" -> "1447" 
-  "1462" -> "1460" 
-  "1418" -> "1416" 
-  "1425" -> "1424" 
+"1395" [label = <(&lt;operator&gt;.assignment,success = true)<SUB>451</SUB>> ]
+"1399" [label = <(&lt;operator&gt;.assignment,iter = mHandleToAppOp.find(event.sensor))<SUB>452</SUB>> ]
+"1475" [label = <(RETURN,return success;,return success;)<SUB>474</SUB>> ]
+"1401" [label = <(find,mHandleToAppOp.find(event.sensor))<SUB>452</SUB>> ]
+"1409" [label = <(&lt;operator&gt;.notEquals,iter != mHandleToAppOp.end())<SUB>453</SUB>> ]
+"1402" [label = <(&lt;operator&gt;.fieldAccess,mHandleToAppOp.find)<SUB>452</SUB>> ]
+"1405" [label = <(&lt;operator&gt;.fieldAccess,event.sensor)<SUB>452</SUB>> ]
+"1411" [label = <(end,mHandleToAppOp.end())<SUB>453</SUB>> ]
+"1404" [label = <(FIELD_IDENTIFIER,find,find)<SUB>452</SUB>> ]
+"1407" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>452</SUB>> ]
+"1412" [label = <(&lt;operator&gt;.fieldAccess,mHandleToAppOp.end)<SUB>453</SUB>> ]
+"1417" [label = <(&lt;operator&gt;.equals,mTargetSdk == kTargetSdkUnknown)<SUB>454</SUB>> ]
+"1429" [label = <(&lt;operator&gt;.logicalAnd,(event.type == SENSOR_TYPE_STEP_COUNTER || event.type == SENSOR_TYPE_STEP_DETECTOR) &amp;&amp;\012                mTargetSdk &gt; 0 &amp;&amp; mTargetSdk &lt;= __ANDROID_API_P__)<SUB>465</SUB>> ]
+"1414" [label = <(FIELD_IDENTIFIER,end,end)<SUB>453</SUB>> ]
+"1421" [label = <(&lt;operator&gt;.assignment,mTargetSdk = SensorService::getTargetSdkVersion(mOpPackageName))<SUB>459</SUB>> ]
+"1430" [label = <(&lt;operator&gt;.logicalAnd,(event.type == SENSOR_TYPE_STEP_COUNTER || event.type == SENSOR_TYPE_STEP_DETECTOR) &amp;&amp;\012                mTargetSdk &gt; 0)<SUB>465</SUB>> ]
+"1445" [label = <(&lt;operator&gt;.lessEqualsThan,mTargetSdk &lt;= __ANDROID_API_P__)<SUB>466</SUB>> ]
+"1449" [label = <(&lt;operator&gt;.assignment,success = true)<SUB>467</SUB>> ]
+"1423" [label = <(SensorService::getTargetSdkVersion,SensorService::getTargetSdkVersion(mOpPackageName))<SUB>459</SUB>> ]
+"1431" [label = <(&lt;operator&gt;.logicalOr,event.type == SENSOR_TYPE_STEP_COUNTER || event.type == SENSOR_TYPE_STEP_DETECTOR)<SUB>465</SUB>> ]
+"1442" [label = <(&lt;operator&gt;.greaterThan,mTargetSdk &gt; 0)<SUB>466</SUB>> ]
+"1455" [label = <(&lt;operator&gt;.assignment,appOpMode = mService-&gt;sAppOpsManager.noteOp(iter-&gt;second, mUid,\012                                                                mOpPackageName))<SUB>469</SUB>> ]
+"1468" [label = <(&lt;operator&gt;.assignment,success = (appOpMode == AppOpsManager::MODE_ALLOWED))<SUB>471</SUB>> ]
+"1424" [label = <(&lt;operator&gt;.fieldAccess,SensorService::getTargetSdkVersion)<SUB>459</SUB>> ]
+"1432" [label = <(&lt;operator&gt;.equals,event.type == SENSOR_TYPE_STEP_COUNTER)<SUB>465</SUB>> ]
+"1437" [label = <(&lt;operator&gt;.equals,event.type == SENSOR_TYPE_STEP_DETECTOR)<SUB>465</SUB>> ]
+"1457" [label = <(noteOp,mService-&gt;sAppOpsManager.noteOp(iter-&gt;second, mUid,\012                                                                mOpPackageName))<SUB>469</SUB>> ]
+"1470" [label = <(&lt;operator&gt;.equals,appOpMode == AppOpsManager::MODE_ALLOWED)<SUB>471</SUB>> ]
+"1426" [label = <(FIELD_IDENTIFIER,getTargetSdkVersion,getTargetSdkVersion)<SUB>459</SUB>> ]
+"1433" [label = <(&lt;operator&gt;.fieldAccess,event.type)<SUB>465</SUB>> ]
+"1438" [label = <(&lt;operator&gt;.fieldAccess,event.type)<SUB>465</SUB>> ]
+"1458" [label = <(&lt;operator&gt;.fieldAccess,mService-&gt;sAppOpsManager.noteOp)<SUB>469</SUB>> ]
+"1463" [label = <(&lt;operator&gt;.indirectFieldAccess,iter-&gt;second)<SUB>469</SUB>> ]
+"1472" [label = <(&lt;operator&gt;.fieldAccess,AppOpsManager::MODE_ALLOWED)<SUB>471</SUB>> ]
+"1435" [label = <(FIELD_IDENTIFIER,type,type)<SUB>465</SUB>> ]
+"1440" [label = <(FIELD_IDENTIFIER,type,type)<SUB>465</SUB>> ]
+"1459" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;sAppOpsManager)<SUB>469</SUB>> ]
+"1462" [label = <(FIELD_IDENTIFIER,noteOp,noteOp)<SUB>469</SUB>> ]
+"1465" [label = <(FIELD_IDENTIFIER,second,second)<SUB>469</SUB>> ]
+"1474" [label = <(FIELD_IDENTIFIER,MODE_ALLOWED,MODE_ALLOWED)<SUB>471</SUB>> ]
+"1461" [label = <(FIELD_IDENTIFIER,sAppOpsManager,sAppOpsManager)<SUB>469</SUB>> ]
+"1391" [label = <(METHOD,noteOpIfRequired)<SUB>450</SUB>> ]
+"1477" [label = <(METHOD_RETURN,bool)<SUB>450</SUB>> ]
+  "1395" -> "1404" 
+  "1399" -> "1414" 
+  "1475" -> "1477" 
+  "1401" -> "1399" 
+  "1409" -> "1417" 
+  "1409" -> "1475" 
+  "1402" -> "1407" 
+  "1405" -> "1401" 
+  "1411" -> "1409" 
+  "1404" -> "1402" 
+  "1407" -> "1405" 
+  "1412" -> "1411" 
+  "1417" -> "1426" 
+  "1417" -> "1435" 
+  "1429" -> "1449" 
+  "1429" -> "1461" 
+  "1414" -> "1412" 
+  "1421" -> "1435" 
   "1430" -> "1429" 
-  "1450" -> "1457" 
-  "1455" -> "1449" 
-  "1464" -> "1462" 
-  "1427" -> "1425" 
-  "1432" -> "1430" 
-  "1451" -> "1454" 
-  "1454" -> "1450" 
+  "1430" -> "1445" 
+  "1445" -> "1429" 
+  "1449" -> "1475" 
+  "1423" -> "1421" 
+  "1431" -> "1430" 
+  "1431" -> "1442" 
+  "1442" -> "1430" 
+  "1455" -> "1474" 
+  "1468" -> "1475" 
+  "1424" -> "1423" 
+  "1432" -> "1431" 
+  "1432" -> "1440" 
+  "1437" -> "1431" 
   "1457" -> "1455" 
-  "1466" -> "1464" 
-  "1453" -> "1451" 
-  "1383" -> "1387" 
+  "1470" -> "1468" 
+  "1426" -> "1424" 
+  "1433" -> "1432" 
+  "1438" -> "1437" 
+  "1458" -> "1465" 
+  "1463" -> "1457" 
+  "1472" -> "1470" 
+  "1435" -> "1433" 
+  "1440" -> "1438" 
+  "1459" -> "1462" 
+  "1462" -> "1458" 
+  "1465" -> "1463" 
+  "1474" -> "1472" 
+  "1461" -> "1459" 
+  "1391" -> "1395" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/6-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/6-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/6-cfg.dot	2023-06-07 19:32:15.327403175 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/6-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "removeSensor" {  
-"42" [label = <(METHOD,removeSensor)<SUB>61</SUB>> ]
-"45" [label = <(METHOD_RETURN,bool)<SUB>61</SUB>> ]
+"42" [label = <(METHOD,removeSensor)<SUB>60</SUB>> ]
+"45" [label = <(METHOD_RETURN,bool)<SUB>60</SUB>> ]
   "42" -> "45" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/60-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/60-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/60-cfg.dot	2023-06-07 19:32:15.417403167 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/60-cfg.dot	2023-06-07 19:32:19.597402775 +0330
@@ -1,39 +1,39 @@
 digraph "reAllocateCacheLocked" {  
-"1477" [label = <(&lt;operator&gt;.assignment,new_cache_size = computeMaxCacheSizeLocked())<SUB>474</SUB>> ]
-"1480" [label = <(&lt;operator&gt;.assignment,eventCache_new = new sensors_event_t[new_cache_size])<SUB>476</SUB>> ]
-"1484" [label = <(memcpy,memcpy(eventCache_new, mEventCache, mCacheSize * sizeof(sensors_event_t)))<SUB>477</SUB>> ]
-"1491" [label = <(memcpy,memcpy(&amp;eventCache_new[mCacheSize], scratch, count * sizeof(sensors_event_t)))<SUB>478</SUB>> ]
-"1501" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;reAllocateCacheLocked maxCacheSize=%d %d&quot;, mMaxCacheSize,\012            new_cache_size))<SUB>480</SUB>> ]
-"1506" [label = <(&lt;operator&gt;.delete,delete[] mEventCache)<SUB>483</SUB>> ]
-"1508" [label = <(&lt;operator&gt;.assignment,mEventCache = eventCache_new)<SUB>484</SUB>> ]
-"1511" [label = <(&lt;operator&gt;.assignmentPlus,mCacheSize += count)<SUB>485</SUB>> ]
-"1514" [label = <(&lt;operator&gt;.assignment,mMaxCacheSize = new_cache_size)<SUB>486</SUB>> ]
-"1479" [label = <(computeMaxCacheSizeLocked,computeMaxCacheSizeLocked())<SUB>474</SUB>> ]
-"1482" [label = <(&lt;operator&gt;.new,new sensors_event_t[new_cache_size])<SUB>476</SUB>> ]
-"1487" [label = <(&lt;operator&gt;.multiplication,mCacheSize * sizeof(sensors_event_t))<SUB>477</SUB>> ]
-"1492" [label = <(&lt;operator&gt;.addressOf,&amp;eventCache_new[mCacheSize])<SUB>478</SUB>> ]
-"1497" [label = <(&lt;operator&gt;.multiplication,count * sizeof(sensors_event_t))<SUB>478</SUB>> ]
-"1489" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>477</SUB>> ]
-"1493" [label = <(&lt;operator&gt;.indirectIndexAccess,eventCache_new[mCacheSize])<SUB>478</SUB>> ]
-"1499" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>478</SUB>> ]
-"1471" [label = <(METHOD,reAllocateCacheLocked)<SUB>471</SUB>> ]
-"1517" [label = <(METHOD_RETURN,void)<SUB>471</SUB>> ]
-  "1477" -> "1482" 
-  "1480" -> "1489" 
-  "1484" -> "1493" 
-  "1491" -> "1501" 
-  "1501" -> "1506" 
-  "1506" -> "1508" 
-  "1508" -> "1511" 
-  "1511" -> "1514" 
-  "1514" -> "1517" 
-  "1479" -> "1477" 
-  "1482" -> "1480" 
-  "1487" -> "1484" 
-  "1492" -> "1499" 
-  "1497" -> "1491" 
-  "1489" -> "1487" 
-  "1493" -> "1492" 
-  "1499" -> "1497" 
-  "1471" -> "1479" 
+"1485" [label = <(&lt;operator&gt;.assignment,new_cache_size = computeMaxCacheSizeLocked())<SUB>480</SUB>> ]
+"1488" [label = <(&lt;operator&gt;.assignment,eventCache_new = new sensors_event_t[new_cache_size])<SUB>482</SUB>> ]
+"1492" [label = <(memcpy,memcpy(eventCache_new, mEventCache, mCacheSize * sizeof(sensors_event_t)))<SUB>483</SUB>> ]
+"1499" [label = <(memcpy,memcpy(&amp;eventCache_new[mCacheSize], scratch, count * sizeof(sensors_event_t)))<SUB>484</SUB>> ]
+"1509" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;reAllocateCacheLocked maxCacheSize=%d %d&quot;, mMaxCacheSize,\012            new_cache_size))<SUB>486</SUB>> ]
+"1514" [label = <(&lt;operator&gt;.delete,delete[] mEventCache)<SUB>489</SUB>> ]
+"1516" [label = <(&lt;operator&gt;.assignment,mEventCache = eventCache_new)<SUB>490</SUB>> ]
+"1519" [label = <(&lt;operator&gt;.assignmentPlus,mCacheSize += count)<SUB>491</SUB>> ]
+"1522" [label = <(&lt;operator&gt;.assignment,mMaxCacheSize = new_cache_size)<SUB>492</SUB>> ]
+"1487" [label = <(computeMaxCacheSizeLocked,computeMaxCacheSizeLocked())<SUB>480</SUB>> ]
+"1490" [label = <(&lt;operator&gt;.new,new sensors_event_t[new_cache_size])<SUB>482</SUB>> ]
+"1495" [label = <(&lt;operator&gt;.multiplication,mCacheSize * sizeof(sensors_event_t))<SUB>483</SUB>> ]
+"1500" [label = <(&lt;operator&gt;.addressOf,&amp;eventCache_new[mCacheSize])<SUB>484</SUB>> ]
+"1505" [label = <(&lt;operator&gt;.multiplication,count * sizeof(sensors_event_t))<SUB>484</SUB>> ]
+"1497" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>483</SUB>> ]
+"1501" [label = <(&lt;operator&gt;.indirectIndexAccess,eventCache_new[mCacheSize])<SUB>484</SUB>> ]
+"1507" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>484</SUB>> ]
+"1479" [label = <(METHOD,reAllocateCacheLocked)<SUB>477</SUB>> ]
+"1525" [label = <(METHOD_RETURN,void)<SUB>477</SUB>> ]
+  "1485" -> "1490" 
+  "1488" -> "1497" 
+  "1492" -> "1501" 
+  "1499" -> "1509" 
+  "1509" -> "1514" 
+  "1514" -> "1516" 
+  "1516" -> "1519" 
+  "1519" -> "1522" 
+  "1522" -> "1525" 
+  "1487" -> "1485" 
+  "1490" -> "1488" 
+  "1495" -> "1492" 
+  "1500" -> "1507" 
+  "1505" -> "1499" 
+  "1497" -> "1495" 
+  "1501" -> "1500" 
+  "1507" -> "1505" 
+  "1479" -> "1487" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/61-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/61-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/61-cfg.dot	2023-06-07 19:32:15.417403167 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/61-cfg.dot	2023-06-07 19:32:19.607402776 +0330
@@ -1,140 +1,140 @@
 digraph "appendEventsToCacheLocked" {  
-"1524" [label = <(&lt;operator&gt;.lessEqualsThan,count &lt;= 0)<SUB>491</SUB>> ]
-"1528" [label = <(RETURN,return;,return;)<SUB>492</SUB>> ]
-"1532" [label = <(&lt;operator&gt;.lessEqualsThan,mCacheSize + count &lt;= mMaxCacheSize)<SUB>493</SUB>> ]
-"1533" [label = <(&lt;operator&gt;.addition,mCacheSize + count)<SUB>493</SUB>> ]
-"1538" [label = <(memcpy,memcpy(&amp;mEventCache[mCacheSize], events, count * sizeof(sensors_event_t)))<SUB>495</SUB>> ]
-"1548" [label = <(&lt;operator&gt;.assignmentPlus,mCacheSize += count)<SUB>496</SUB>> ]
-"1539" [label = <(&lt;operator&gt;.addressOf,&amp;mEventCache[mCacheSize])<SUB>495</SUB>> ]
-"1544" [label = <(&lt;operator&gt;.multiplication,count * sizeof(sensors_event_t))<SUB>495</SUB>> ]
-"1540" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[mCacheSize])<SUB>495</SUB>> ]
-"1546" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>495</SUB>> ]
-"1554" [label = <(&lt;operator&gt;.lessEqualsThan,mCacheSize + count &lt;= computeMaxCacheSizeLocked())<SUB>497</SUB>> ]
-"1555" [label = <(&lt;operator&gt;.addition,mCacheSize + count)<SUB>497</SUB>> ]
-"1558" [label = <(computeMaxCacheSizeLocked,computeMaxCacheSizeLocked())<SUB>497</SUB>> ]
-"1560" [label = <(reAllocateCacheLocked,reAllocateCacheLocked(events, count))<SUB>499</SUB>> ]
-"1566" [label = <(&lt;operator&gt;.assignment,freeSpace = mMaxCacheSize - mCacheSize)<SUB>502</SUB>> ]
-"1572" [label = <(&lt;operator&gt;.assignment,cachedEventsToDrop = std::min(mCacheSize, count - freeSpace))<SUB>505</SUB>> ]
-"1583" [label = <(&lt;operator&gt;.assignment,newEventsToDrop = std::max(0, count - mMaxCacheSize))<SUB>508</SUB>> ]
-"1594" [label = <(&lt;operator&gt;.assignment,eventsToCopy = std::min(mMaxCacheSize, count))<SUB>511</SUB>> ]
-"1603" [label = <(&lt;operator&gt;.assignment,kMinimumTimeBetweenDropLogNs = 2 * 1000 * 1000 * 1000)<SUB>513</SUB>> ]
-"1648" [label = <(countFlushCompleteEventsLocked,countFlushCompleteEventsLocked(mEventCache, cachedEventsToDrop))<SUB>526</SUB>> ]
-"1651" [label = <(countFlushCompleteEventsLocked,countFlushCompleteEventsLocked(events, newEventsToDrop))<SUB>527</SUB>> ]
-"1671" [label = <(&lt;operator&gt;.assignmentMinus,mCacheSize -= cachedEventsToDrop)<SUB>534</SUB>> ]
-"1674" [label = <(memcpy,memcpy(&amp;mEventCache[mCacheSize], &amp;events[newEventsToDrop],\012                eventsToCopy * sizeof(sensors_event_t)))<SUB>537</SUB>> ]
-"1687" [label = <(&lt;operator&gt;.assignmentPlus,mCacheSize += eventsToCopy)<SUB>539</SUB>> ]
-"1568" [label = <(&lt;operator&gt;.subtraction,mMaxCacheSize - mCacheSize)<SUB>502</SUB>> ]
-"1574" [label = <(std::min,std::min(mCacheSize, count - freeSpace))<SUB>505</SUB>> ]
-"1585" [label = <(std::max,std::max(0, count - mMaxCacheSize))<SUB>508</SUB>> ]
-"1596" [label = <(std::min,std::min(mMaxCacheSize, count))<SUB>511</SUB>> ]
-"1605" [label = <(&lt;operator&gt;.multiplication,2 * 1000 * 1000 * 1000)<SUB>513</SUB>> ]
-"1613" [label = <(&lt;operator&gt;.greaterThan,events[0].timestamp - mTimeOfLastEventDrop &gt; kMinimumTimeBetweenDropLogNs)<SUB>514</SUB>> ]
-"1655" [label = <(&lt;operator&gt;.notEquals,eventsToCopy != mMaxCacheSize)<SUB>530</SUB>> ]
-"1675" [label = <(&lt;operator&gt;.addressOf,&amp;mEventCache[mCacheSize])<SUB>537</SUB>> ]
-"1679" [label = <(&lt;operator&gt;.addressOf,&amp;events[newEventsToDrop])<SUB>537</SUB>> ]
-"1683" [label = <(&lt;operator&gt;.multiplication,eventsToCopy * sizeof(sensors_event_t))<SUB>538</SUB>> ]
-"1575" [label = <(&lt;operator&gt;.fieldAccess,std::min)<SUB>505</SUB>> ]
-"1579" [label = <(&lt;operator&gt;.subtraction,count - freeSpace)<SUB>505</SUB>> ]
-"1586" [label = <(&lt;operator&gt;.fieldAccess,std::max)<SUB>508</SUB>> ]
-"1590" [label = <(&lt;operator&gt;.subtraction,count - mMaxCacheSize)<SUB>508</SUB>> ]
-"1597" [label = <(&lt;operator&gt;.fieldAccess,std::min)<SUB>511</SUB>> ]
-"1606" [label = <(&lt;operator&gt;.multiplication,2 * 1000 * 1000)<SUB>513</SUB>> ]
-"1614" [label = <(&lt;operator&gt;.subtraction,events[0].timestamp - mTimeOfLastEventDrop)<SUB>514</SUB>> ]
-"1623" [label = <(ALOGW,ALOGW(&quot;Dropping %d cached events (%d/%d) to save %d/%d new events. %d events previously&quot;\012 &quot; dropped&quot;, cachedEventsToDrop, mCacheSize, mMaxCacheSize, eventsToCopy,\012                    count, mEventsDropped))<SUB>515</SUB>> ]
-"1631" [label = <(&lt;operator&gt;.assignment,mEventsDropped = 0)<SUB>518</SUB>> ]
-"1634" [label = <(&lt;operator&gt;.assignment,mTimeOfLastEventDrop = events[0].timestamp)<SUB>519</SUB>> ]
-"1659" [label = <(memmove,memmove(mEventCache, &amp;mEventCache[cachedEventsToDrop],\012 (mCacheSize - cachedEventsToDrop) * sizeof(sensors_event_t)))<SUB>531</SUB>> ]
-"1676" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[mCacheSize])<SUB>537</SUB>> ]
-"1680" [label = <(&lt;operator&gt;.indirectIndexAccess,events[newEventsToDrop])<SUB>537</SUB>> ]
-"1685" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>538</SUB>> ]
-"1577" [label = <(FIELD_IDENTIFIER,min,min)<SUB>505</SUB>> ]
-"1588" [label = <(FIELD_IDENTIFIER,max,max)<SUB>508</SUB>> ]
-"1599" [label = <(FIELD_IDENTIFIER,min,min)<SUB>511</SUB>> ]
-"1607" [label = <(&lt;operator&gt;.multiplication,2 * 1000)<SUB>513</SUB>> ]
-"1615" [label = <(&lt;operator&gt;.fieldAccess,events[0].timestamp)<SUB>514</SUB>> ]
-"1636" [label = <(&lt;operator&gt;.fieldAccess,events[0].timestamp)<SUB>519</SUB>> ]
-"1643" [label = <(&lt;operator&gt;.assignmentPlus,mEventsDropped += cachedEventsToDrop + newEventsToDrop)<SUB>522</SUB>> ]
-"1661" [label = <(&lt;operator&gt;.addressOf,&amp;mEventCache[cachedEventsToDrop])<SUB>531</SUB>> ]
-"1665" [label = <(&lt;operator&gt;.multiplication,(mCacheSize - cachedEventsToDrop) * sizeof(sensors_event_t))<SUB>532</SUB>> ]
-"1616" [label = <(&lt;operator&gt;.indirectIndexAccess,events[0])<SUB>514</SUB>> ]
-"1619" [label = <(FIELD_IDENTIFIER,timestamp,timestamp)<SUB>514</SUB>> ]
-"1637" [label = <(&lt;operator&gt;.indirectIndexAccess,events[0])<SUB>519</SUB>> ]
-"1640" [label = <(FIELD_IDENTIFIER,timestamp,timestamp)<SUB>519</SUB>> ]
-"1645" [label = <(&lt;operator&gt;.addition,cachedEventsToDrop + newEventsToDrop)<SUB>522</SUB>> ]
-"1662" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[cachedEventsToDrop])<SUB>531</SUB>> ]
-"1666" [label = <(&lt;operator&gt;.subtraction,mCacheSize - cachedEventsToDrop)<SUB>532</SUB>> ]
-"1669" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>532</SUB>> ]
-"1519" [label = <(METHOD,appendEventsToCacheLocked)<SUB>489</SUB>> ]
-"1690" [label = <(METHOD_RETURN,void)<SUB>489</SUB>> ]
-  "1524" -> "1528" 
-  "1524" -> "1533" 
-  "1528" -> "1690" 
-  "1532" -> "1540" 
-  "1532" -> "1555" 
-  "1533" -> "1532" 
-  "1538" -> "1548" 
-  "1548" -> "1690" 
-  "1539" -> "1546" 
-  "1544" -> "1538" 
-  "1540" -> "1539" 
-  "1546" -> "1544" 
-  "1554" -> "1560" 
-  "1554" -> "1568" 
-  "1555" -> "1558" 
-  "1558" -> "1554" 
-  "1560" -> "1690" 
-  "1566" -> "1577" 
-  "1572" -> "1588" 
-  "1583" -> "1599" 
-  "1594" -> "1607" 
-  "1603" -> "1616" 
-  "1648" -> "1651" 
-  "1651" -> "1655" 
-  "1671" -> "1676" 
-  "1674" -> "1687" 
-  "1687" -> "1690" 
-  "1568" -> "1566" 
-  "1574" -> "1572" 
+"1532" [label = <(&lt;operator&gt;.lessEqualsThan,count &lt;= 0)<SUB>497</SUB>> ]
+"1536" [label = <(RETURN,return;,return;)<SUB>498</SUB>> ]
+"1540" [label = <(&lt;operator&gt;.lessEqualsThan,mCacheSize + count &lt;= mMaxCacheSize)<SUB>499</SUB>> ]
+"1541" [label = <(&lt;operator&gt;.addition,mCacheSize + count)<SUB>499</SUB>> ]
+"1546" [label = <(memcpy,memcpy(&amp;mEventCache[mCacheSize], events, count * sizeof(sensors_event_t)))<SUB>501</SUB>> ]
+"1556" [label = <(&lt;operator&gt;.assignmentPlus,mCacheSize += count)<SUB>502</SUB>> ]
+"1547" [label = <(&lt;operator&gt;.addressOf,&amp;mEventCache[mCacheSize])<SUB>501</SUB>> ]
+"1552" [label = <(&lt;operator&gt;.multiplication,count * sizeof(sensors_event_t))<SUB>501</SUB>> ]
+"1548" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[mCacheSize])<SUB>501</SUB>> ]
+"1554" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>501</SUB>> ]
+"1562" [label = <(&lt;operator&gt;.lessEqualsThan,mCacheSize + count &lt;= computeMaxCacheSizeLocked())<SUB>503</SUB>> ]
+"1563" [label = <(&lt;operator&gt;.addition,mCacheSize + count)<SUB>503</SUB>> ]
+"1566" [label = <(computeMaxCacheSizeLocked,computeMaxCacheSizeLocked())<SUB>503</SUB>> ]
+"1568" [label = <(reAllocateCacheLocked,reAllocateCacheLocked(events, count))<SUB>505</SUB>> ]
+"1574" [label = <(&lt;operator&gt;.assignment,freeSpace = mMaxCacheSize - mCacheSize)<SUB>508</SUB>> ]
+"1580" [label = <(&lt;operator&gt;.assignment,cachedEventsToDrop = std::min(mCacheSize, count - freeSpace))<SUB>511</SUB>> ]
+"1591" [label = <(&lt;operator&gt;.assignment,newEventsToDrop = std::max(0, count - mMaxCacheSize))<SUB>514</SUB>> ]
+"1602" [label = <(&lt;operator&gt;.assignment,eventsToCopy = std::min(mMaxCacheSize, count))<SUB>517</SUB>> ]
+"1611" [label = <(&lt;operator&gt;.assignment,kMinimumTimeBetweenDropLogNs = 2 * 1000 * 1000 * 1000)<SUB>519</SUB>> ]
+"1656" [label = <(countFlushCompleteEventsLocked,countFlushCompleteEventsLocked(mEventCache, cachedEventsToDrop))<SUB>532</SUB>> ]
+"1659" [label = <(countFlushCompleteEventsLocked,countFlushCompleteEventsLocked(events, newEventsToDrop))<SUB>533</SUB>> ]
+"1679" [label = <(&lt;operator&gt;.assignmentMinus,mCacheSize -= cachedEventsToDrop)<SUB>540</SUB>> ]
+"1682" [label = <(memcpy,memcpy(&amp;mEventCache[mCacheSize], &amp;events[newEventsToDrop],\012                eventsToCopy * sizeof(sensors_event_t)))<SUB>543</SUB>> ]
+"1695" [label = <(&lt;operator&gt;.assignmentPlus,mCacheSize += eventsToCopy)<SUB>545</SUB>> ]
+"1576" [label = <(&lt;operator&gt;.subtraction,mMaxCacheSize - mCacheSize)<SUB>508</SUB>> ]
+"1582" [label = <(std::min,std::min(mCacheSize, count - freeSpace))<SUB>511</SUB>> ]
+"1593" [label = <(std::max,std::max(0, count - mMaxCacheSize))<SUB>514</SUB>> ]
+"1604" [label = <(std::min,std::min(mMaxCacheSize, count))<SUB>517</SUB>> ]
+"1613" [label = <(&lt;operator&gt;.multiplication,2 * 1000 * 1000 * 1000)<SUB>519</SUB>> ]
+"1621" [label = <(&lt;operator&gt;.greaterThan,events[0].timestamp - mTimeOfLastEventDrop &gt; kMinimumTimeBetweenDropLogNs)<SUB>520</SUB>> ]
+"1663" [label = <(&lt;operator&gt;.notEquals,eventsToCopy != mMaxCacheSize)<SUB>536</SUB>> ]
+"1683" [label = <(&lt;operator&gt;.addressOf,&amp;mEventCache[mCacheSize])<SUB>543</SUB>> ]
+"1687" [label = <(&lt;operator&gt;.addressOf,&amp;events[newEventsToDrop])<SUB>543</SUB>> ]
+"1691" [label = <(&lt;operator&gt;.multiplication,eventsToCopy * sizeof(sensors_event_t))<SUB>544</SUB>> ]
+"1583" [label = <(&lt;operator&gt;.fieldAccess,std::min)<SUB>511</SUB>> ]
+"1587" [label = <(&lt;operator&gt;.subtraction,count - freeSpace)<SUB>511</SUB>> ]
+"1594" [label = <(&lt;operator&gt;.fieldAccess,std::max)<SUB>514</SUB>> ]
+"1598" [label = <(&lt;operator&gt;.subtraction,count - mMaxCacheSize)<SUB>514</SUB>> ]
+"1605" [label = <(&lt;operator&gt;.fieldAccess,std::min)<SUB>517</SUB>> ]
+"1614" [label = <(&lt;operator&gt;.multiplication,2 * 1000 * 1000)<SUB>519</SUB>> ]
+"1622" [label = <(&lt;operator&gt;.subtraction,events[0].timestamp - mTimeOfLastEventDrop)<SUB>520</SUB>> ]
+"1631" [label = <(ALOGW,ALOGW(&quot;Dropping %d cached events (%d/%d) to save %d/%d new events. %d events previously&quot;\012 &quot; dropped&quot;, cachedEventsToDrop, mCacheSize, mMaxCacheSize, eventsToCopy,\012                    count, mEventsDropped))<SUB>521</SUB>> ]
+"1639" [label = <(&lt;operator&gt;.assignment,mEventsDropped = 0)<SUB>524</SUB>> ]
+"1642" [label = <(&lt;operator&gt;.assignment,mTimeOfLastEventDrop = events[0].timestamp)<SUB>525</SUB>> ]
+"1667" [label = <(memmove,memmove(mEventCache, &amp;mEventCache[cachedEventsToDrop],\012 (mCacheSize - cachedEventsToDrop) * sizeof(sensors_event_t)))<SUB>537</SUB>> ]
+"1684" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[mCacheSize])<SUB>543</SUB>> ]
+"1688" [label = <(&lt;operator&gt;.indirectIndexAccess,events[newEventsToDrop])<SUB>543</SUB>> ]
+"1693" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>544</SUB>> ]
+"1585" [label = <(FIELD_IDENTIFIER,min,min)<SUB>511</SUB>> ]
+"1596" [label = <(FIELD_IDENTIFIER,max,max)<SUB>514</SUB>> ]
+"1607" [label = <(FIELD_IDENTIFIER,min,min)<SUB>517</SUB>> ]
+"1615" [label = <(&lt;operator&gt;.multiplication,2 * 1000)<SUB>519</SUB>> ]
+"1623" [label = <(&lt;operator&gt;.fieldAccess,events[0].timestamp)<SUB>520</SUB>> ]
+"1644" [label = <(&lt;operator&gt;.fieldAccess,events[0].timestamp)<SUB>525</SUB>> ]
+"1651" [label = <(&lt;operator&gt;.assignmentPlus,mEventsDropped += cachedEventsToDrop + newEventsToDrop)<SUB>528</SUB>> ]
+"1669" [label = <(&lt;operator&gt;.addressOf,&amp;mEventCache[cachedEventsToDrop])<SUB>537</SUB>> ]
+"1673" [label = <(&lt;operator&gt;.multiplication,(mCacheSize - cachedEventsToDrop) * sizeof(sensors_event_t))<SUB>538</SUB>> ]
+"1624" [label = <(&lt;operator&gt;.indirectIndexAccess,events[0])<SUB>520</SUB>> ]
+"1627" [label = <(FIELD_IDENTIFIER,timestamp,timestamp)<SUB>520</SUB>> ]
+"1645" [label = <(&lt;operator&gt;.indirectIndexAccess,events[0])<SUB>525</SUB>> ]
+"1648" [label = <(FIELD_IDENTIFIER,timestamp,timestamp)<SUB>525</SUB>> ]
+"1653" [label = <(&lt;operator&gt;.addition,cachedEventsToDrop + newEventsToDrop)<SUB>528</SUB>> ]
+"1670" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[cachedEventsToDrop])<SUB>537</SUB>> ]
+"1674" [label = <(&lt;operator&gt;.subtraction,mCacheSize - cachedEventsToDrop)<SUB>538</SUB>> ]
+"1677" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>538</SUB>> ]
+"1527" [label = <(METHOD,appendEventsToCacheLocked)<SUB>495</SUB>> ]
+"1698" [label = <(METHOD_RETURN,void)<SUB>495</SUB>> ]
+  "1532" -> "1536" 
+  "1532" -> "1541" 
+  "1536" -> "1698" 
+  "1540" -> "1548" 
+  "1540" -> "1563" 
+  "1541" -> "1540" 
+  "1546" -> "1556" 
+  "1556" -> "1698" 
+  "1547" -> "1554" 
+  "1552" -> "1546" 
+  "1548" -> "1547" 
+  "1554" -> "1552" 
+  "1562" -> "1568" 
+  "1562" -> "1576" 
+  "1563" -> "1566" 
+  "1566" -> "1562" 
+  "1568" -> "1698" 
+  "1574" -> "1585" 
+  "1580" -> "1596" 
+  "1591" -> "1607" 
+  "1602" -> "1615" 
+  "1611" -> "1624" 
+  "1656" -> "1659" 
+  "1659" -> "1663" 
+  "1679" -> "1684" 
+  "1682" -> "1695" 
+  "1695" -> "1698" 
+  "1576" -> "1574" 
+  "1582" -> "1580" 
+  "1593" -> "1591" 
+  "1604" -> "1602" 
+  "1613" -> "1611" 
+  "1621" -> "1631" 
+  "1621" -> "1653" 
+  "1663" -> "1670" 
+  "1663" -> "1679" 
+  "1683" -> "1688" 
+  "1687" -> "1693" 
+  "1691" -> "1682" 
+  "1583" -> "1587" 
+  "1587" -> "1582" 
+  "1594" -> "1598" 
+  "1598" -> "1593" 
+  "1605" -> "1604" 
+  "1614" -> "1613" 
+  "1622" -> "1621" 
+  "1631" -> "1639" 
+  "1639" -> "1645" 
+  "1642" -> "1656" 
+  "1667" -> "1679" 
+  "1684" -> "1683" 
+  "1688" -> "1687" 
+  "1693" -> "1691" 
   "1585" -> "1583" 
   "1596" -> "1594" 
-  "1605" -> "1603" 
-  "1613" -> "1623" 
-  "1613" -> "1645" 
-  "1655" -> "1662" 
-  "1655" -> "1671" 
-  "1675" -> "1680" 
-  "1679" -> "1685" 
-  "1683" -> "1674" 
-  "1575" -> "1579" 
-  "1579" -> "1574" 
-  "1586" -> "1590" 
-  "1590" -> "1585" 
-  "1597" -> "1596" 
-  "1606" -> "1605" 
-  "1614" -> "1613" 
-  "1623" -> "1631" 
-  "1631" -> "1637" 
-  "1634" -> "1648" 
-  "1659" -> "1671" 
-  "1676" -> "1675" 
-  "1680" -> "1679" 
-  "1685" -> "1683" 
-  "1577" -> "1575" 
-  "1588" -> "1586" 
-  "1599" -> "1597" 
-  "1607" -> "1606" 
+  "1607" -> "1605" 
   "1615" -> "1614" 
-  "1636" -> "1634" 
-  "1643" -> "1648" 
-  "1661" -> "1666" 
-  "1665" -> "1659" 
-  "1616" -> "1619" 
-  "1619" -> "1615" 
-  "1637" -> "1640" 
-  "1640" -> "1636" 
-  "1645" -> "1643" 
-  "1662" -> "1661" 
-  "1666" -> "1669" 
-  "1669" -> "1665" 
-  "1519" -> "1524" 
+  "1623" -> "1622" 
+  "1644" -> "1642" 
+  "1651" -> "1656" 
+  "1669" -> "1674" 
+  "1673" -> "1667" 
+  "1624" -> "1627" 
+  "1627" -> "1623" 
+  "1645" -> "1648" 
+  "1648" -> "1644" 
+  "1653" -> "1651" 
+  "1670" -> "1669" 
+  "1674" -> "1677" 
+  "1677" -> "1673" 
+  "1527" -> "1532" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/62-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/62-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/62-cfg.dot	2023-06-07 19:32:15.417403167 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/62-cfg.dot	2023-06-07 19:32:19.607402776 +0330
@@ -1,118 +1,118 @@
 digraph "sendPendingFlushEventsLocked" {  
-"1695" [label = <(memset,memset(&amp;flushCompleteEvent, 0, sizeof(flushCompleteEvent)))<SUB>545</SUB>> ]
-"1701" [label = <(&lt;operator&gt;.assignment,flushCompleteEvent.type = SENSOR_TYPE_META_DATA)<SUB>546</SUB>> ]
-"1696" [label = <(&lt;operator&gt;.addressOf,&amp;flushCompleteEvent)<SUB>545</SUB>> ]
-"1699" [label = <(&lt;operator&gt;.sizeOf,sizeof(flushCompleteEvent))<SUB>545</SUB>> ]
-"1702" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.type)<SUB>546</SUB>> ]
-"1704" [label = <(FIELD_IDENTIFIER,type,type)<SUB>546</SUB>> ]
-"1711" [label = <(&lt;operator&gt;.assignment,handle = it.first)<SUB>550</SUB>> ]
-"1716" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si = mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>551</SUB>> ]
-"1734" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = it.second)<SUB>556</SUB>> ]
-"1713" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>550</SUB>> ]
-"1717" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>551</SUB>> ]
-"1722" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>551</SUB>> ]
-"1728" [label = <(&lt;operator&gt;.equals,si == nullptr)<SUB>552</SUB>> ]
-"1736" [label = <(&lt;operator&gt;.fieldAccess,it.second)<SUB>556</SUB>> ]
-"1740" [label = <(&lt;operator&gt;.greaterThan,flushInfo.mPendingFlushEventsToSend &gt; 0)<SUB>557</SUB>> ]
-"1715" [label = <(FIELD_IDENTIFIER,first,first)<SUB>550</SUB>> ]
-"1718" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>551</SUB>> ]
-"1723" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>551</SUB>> ]
-"1738" [label = <(FIELD_IDENTIFIER,second,second)<SUB>556</SUB>> ]
-"1741" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>557</SUB>> ]
-"1746" [label = <(&lt;operator&gt;.assignment,flushCompleteEvent.meta_data.sensor = handle)<SUB>558</SUB>> ]
-"1754" [label = <(&lt;operator&gt;.assignment,wakeUpSensor = si-&gt;getSensor().isWakeUpSensor())<SUB>559</SUB>> ]
-"1774" [label = <(&lt;operator&gt;.assignment,size = SensorEventQueue::write(mChannel, &amp;flushCompleteEvent, 1))<SUB>564</SUB>> ]
-"1795" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;sent dropped flush complete event==%d &quot;,\012                    flushCompleteEvent.meta_data.sensor))<SUB>569</SUB>> ]
-"1803" [label = <(&lt;operator&gt;.postDecrement,flushInfo.mPendingFlushEventsToSend--)<SUB>571</SUB>> ]
-"1725" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>551</SUB>> ]
-"1743" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>557</SUB>> ]
-"1747" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.meta_data.sensor)<SUB>558</SUB>> ]
-"1756" [label = <(isWakeUpSensor,si-&gt;getSensor().isWakeUpSensor())<SUB>559</SUB>> ]
-"1776" [label = <(SensorEventQueue::write,SensorEventQueue::write(mChannel, &amp;flushCompleteEvent, 1))<SUB>564</SUB>> ]
-"1785" [label = <(&lt;operator&gt;.lessThan,size &lt; 0)<SUB>565</SUB>> ]
-"1798" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.meta_data.sensor)<SUB>570</SUB>> ]
-"1804" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>571</SUB>> ]
-"1748" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.meta_data)<SUB>558</SUB>> ]
-"1751" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>558</SUB>> ]
-"1757" [label = <(&lt;operator&gt;.fieldAccess,si-&gt;getSensor().isWakeUpSensor)<SUB>559</SUB>> ]
-"1766" [label = <(&lt;operator&gt;.preIncrement,++mWakeLockRefCount)<SUB>561</SUB>> ]
-"1768" [label = <(&lt;operators&gt;.assignmentOr,flushCompleteEvent.flags |= WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>562</SUB>> ]
-"1777" [label = <(&lt;operator&gt;.fieldAccess,SensorEventQueue::write)<SUB>564</SUB>> ]
-"1781" [label = <(&lt;operator&gt;.addressOf,&amp;flushCompleteEvent)<SUB>564</SUB>> ]
-"1794" [label = <(RETURN,return;,return;)<SUB>567</SUB>> ]
-"1799" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.meta_data)<SUB>570</SUB>> ]
-"1802" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>570</SUB>> ]
-"1806" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>571</SUB>> ]
-"1750" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>558</SUB>> ]
-"1758" [label = <(getSensor,si-&gt;getSensor())<SUB>559</SUB>> ]
-"1762" [label = <(FIELD_IDENTIFIER,isWakeUpSensor,isWakeUpSensor)<SUB>559</SUB>> ]
-"1769" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.flags)<SUB>562</SUB>> ]
-"1779" [label = <(FIELD_IDENTIFIER,write,write)<SUB>564</SUB>> ]
-"1801" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>570</SUB>> ]
-"1759" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>559</SUB>> ]
-"1771" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>562</SUB>> ]
-"1792" [label = <(&lt;operator&gt;.preDecrement,--mWakeLockRefCount)<SUB>566</SUB>> ]
-"1761" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>559</SUB>> ]
-"1692" [label = <(METHOD,sendPendingFlushEventsLocked)<SUB>543</SUB>> ]
-"1807" [label = <(METHOD_RETURN,void)<SUB>543</SUB>> ]
-  "1695" -> "1704" 
-  "1701" -> "1715" 
-  "1696" -> "1699" 
-  "1699" -> "1695" 
-  "1702" -> "1701" 
-  "1704" -> "1702" 
-  "1711" -> "1718" 
-  "1716" -> "1728" 
-  "1734" -> "1743" 
-  "1713" -> "1711" 
-  "1717" -> "1725" 
-  "1722" -> "1716" 
-  "1728" -> "1738" 
-  "1736" -> "1734" 
-  "1740" -> "1807" 
-  "1740" -> "1715" 
-  "1740" -> "1750" 
-  "1715" -> "1713" 
-  "1718" -> "1717" 
-  "1723" -> "1722" 
-  "1738" -> "1736" 
-  "1741" -> "1740" 
-  "1746" -> "1761" 
-  "1754" -> "1766" 
-  "1754" -> "1779" 
-  "1774" -> "1785" 
-  "1795" -> "1806" 
-  "1803" -> "1743" 
-  "1725" -> "1723" 
-  "1743" -> "1741" 
-  "1747" -> "1746" 
-  "1756" -> "1754" 
-  "1776" -> "1774" 
-  "1785" -> "1794" 
-  "1785" -> "1792" 
-  "1785" -> "1801" 
-  "1798" -> "1795" 
-  "1804" -> "1803" 
-  "1748" -> "1751" 
-  "1751" -> "1747" 
-  "1757" -> "1756" 
-  "1766" -> "1771" 
-  "1768" -> "1779" 
-  "1777" -> "1781" 
-  "1781" -> "1776" 
-  "1794" -> "1807" 
-  "1799" -> "1802" 
-  "1802" -> "1798" 
-  "1806" -> "1804" 
-  "1750" -> "1748" 
-  "1758" -> "1762" 
-  "1762" -> "1757" 
-  "1769" -> "1768" 
+"1703" [label = <(memset,memset(&amp;flushCompleteEvent, 0, sizeof(flushCompleteEvent)))<SUB>551</SUB>> ]
+"1709" [label = <(&lt;operator&gt;.assignment,flushCompleteEvent.type = SENSOR_TYPE_META_DATA)<SUB>552</SUB>> ]
+"1704" [label = <(&lt;operator&gt;.addressOf,&amp;flushCompleteEvent)<SUB>551</SUB>> ]
+"1707" [label = <(&lt;operator&gt;.sizeOf,sizeof(flushCompleteEvent))<SUB>551</SUB>> ]
+"1710" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.type)<SUB>552</SUB>> ]
+"1712" [label = <(FIELD_IDENTIFIER,type,type)<SUB>552</SUB>> ]
+"1719" [label = <(&lt;operator&gt;.assignment,handle = it.first)<SUB>556</SUB>> ]
+"1724" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si = mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>557</SUB>> ]
+"1742" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = it.second)<SUB>562</SUB>> ]
+"1721" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>556</SUB>> ]
+"1725" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>557</SUB>> ]
+"1730" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(handle))<SUB>557</SUB>> ]
+"1736" [label = <(&lt;operator&gt;.equals,si == nullptr)<SUB>558</SUB>> ]
+"1744" [label = <(&lt;operator&gt;.fieldAccess,it.second)<SUB>562</SUB>> ]
+"1748" [label = <(&lt;operator&gt;.greaterThan,flushInfo.mPendingFlushEventsToSend &gt; 0)<SUB>563</SUB>> ]
+"1723" [label = <(FIELD_IDENTIFIER,first,first)<SUB>556</SUB>> ]
+"1726" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>557</SUB>> ]
+"1731" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>557</SUB>> ]
+"1746" [label = <(FIELD_IDENTIFIER,second,second)<SUB>562</SUB>> ]
+"1749" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>563</SUB>> ]
+"1754" [label = <(&lt;operator&gt;.assignment,flushCompleteEvent.meta_data.sensor = handle)<SUB>564</SUB>> ]
+"1762" [label = <(&lt;operator&gt;.assignment,wakeUpSensor = si-&gt;getSensor().isWakeUpSensor())<SUB>565</SUB>> ]
+"1782" [label = <(&lt;operator&gt;.assignment,size = SensorEventQueue::write(mChannel, &amp;flushCompleteEvent, 1))<SUB>570</SUB>> ]
+"1803" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;sent dropped flush complete event==%d &quot;,\012                    flushCompleteEvent.meta_data.sensor))<SUB>575</SUB>> ]
+"1811" [label = <(&lt;operator&gt;.postDecrement,flushInfo.mPendingFlushEventsToSend--)<SUB>577</SUB>> ]
+"1733" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>557</SUB>> ]
+"1751" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>563</SUB>> ]
+"1755" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.meta_data.sensor)<SUB>564</SUB>> ]
+"1764" [label = <(isWakeUpSensor,si-&gt;getSensor().isWakeUpSensor())<SUB>565</SUB>> ]
+"1784" [label = <(SensorEventQueue::write,SensorEventQueue::write(mChannel, &amp;flushCompleteEvent, 1))<SUB>570</SUB>> ]
+"1793" [label = <(&lt;operator&gt;.lessThan,size &lt; 0)<SUB>571</SUB>> ]
+"1806" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.meta_data.sensor)<SUB>576</SUB>> ]
+"1812" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>577</SUB>> ]
+"1756" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.meta_data)<SUB>564</SUB>> ]
+"1759" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>564</SUB>> ]
+"1765" [label = <(&lt;operator&gt;.fieldAccess,si-&gt;getSensor().isWakeUpSensor)<SUB>565</SUB>> ]
+"1774" [label = <(&lt;operator&gt;.preIncrement,++mWakeLockRefCount)<SUB>567</SUB>> ]
+"1776" [label = <(&lt;operators&gt;.assignmentOr,flushCompleteEvent.flags |= WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>568</SUB>> ]
+"1785" [label = <(&lt;operator&gt;.fieldAccess,SensorEventQueue::write)<SUB>570</SUB>> ]
+"1789" [label = <(&lt;operator&gt;.addressOf,&amp;flushCompleteEvent)<SUB>570</SUB>> ]
+"1802" [label = <(RETURN,return;,return;)<SUB>573</SUB>> ]
+"1807" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.meta_data)<SUB>576</SUB>> ]
+"1810" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>576</SUB>> ]
+"1814" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>577</SUB>> ]
+"1758" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>564</SUB>> ]
+"1766" [label = <(getSensor,si-&gt;getSensor())<SUB>565</SUB>> ]
+"1770" [label = <(FIELD_IDENTIFIER,isWakeUpSensor,isWakeUpSensor)<SUB>565</SUB>> ]
+"1777" [label = <(&lt;operator&gt;.fieldAccess,flushCompleteEvent.flags)<SUB>568</SUB>> ]
+"1787" [label = <(FIELD_IDENTIFIER,write,write)<SUB>570</SUB>> ]
+"1809" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>576</SUB>> ]
+"1767" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>565</SUB>> ]
+"1779" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>568</SUB>> ]
+"1800" [label = <(&lt;operator&gt;.preDecrement,--mWakeLockRefCount)<SUB>572</SUB>> ]
+"1769" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>565</SUB>> ]
+"1700" [label = <(METHOD,sendPendingFlushEventsLocked)<SUB>549</SUB>> ]
+"1815" [label = <(METHOD_RETURN,void)<SUB>549</SUB>> ]
+  "1703" -> "1712" 
+  "1709" -> "1723" 
+  "1704" -> "1707" 
+  "1707" -> "1703" 
+  "1710" -> "1709" 
+  "1712" -> "1710" 
+  "1719" -> "1726" 
+  "1724" -> "1736" 
+  "1742" -> "1751" 
+  "1721" -> "1719" 
+  "1725" -> "1733" 
+  "1730" -> "1724" 
+  "1736" -> "1746" 
+  "1744" -> "1742" 
+  "1748" -> "1815" 
+  "1748" -> "1723" 
+  "1748" -> "1758" 
+  "1723" -> "1721" 
+  "1726" -> "1725" 
+  "1731" -> "1730" 
+  "1746" -> "1744" 
+  "1749" -> "1748" 
+  "1754" -> "1769" 
+  "1762" -> "1774" 
+  "1762" -> "1787" 
+  "1782" -> "1793" 
+  "1803" -> "1814" 
+  "1811" -> "1751" 
+  "1733" -> "1731" 
+  "1751" -> "1749" 
+  "1755" -> "1754" 
+  "1764" -> "1762" 
+  "1784" -> "1782" 
+  "1793" -> "1802" 
+  "1793" -> "1800" 
+  "1793" -> "1809" 
+  "1806" -> "1803" 
+  "1812" -> "1811" 
+  "1756" -> "1759" 
+  "1759" -> "1755" 
+  "1765" -> "1764" 
+  "1774" -> "1779" 
+  "1776" -> "1787" 
+  "1785" -> "1789" 
+  "1789" -> "1784" 
+  "1802" -> "1815" 
+  "1807" -> "1810" 
+  "1810" -> "1806" 
+  "1814" -> "1812" 
+  "1758" -> "1756" 
+  "1766" -> "1770" 
+  "1770" -> "1765" 
+  "1777" -> "1776" 
+  "1787" -> "1785" 
+  "1809" -> "1807" 
+  "1767" -> "1766" 
   "1779" -> "1777" 
-  "1801" -> "1799" 
-  "1759" -> "1758" 
-  "1771" -> "1769" 
-  "1792" -> "1794" 
-  "1761" -> "1759" 
-  "1692" -> "1696" 
+  "1800" -> "1802" 
+  "1769" -> "1767" 
+  "1700" -> "1704" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/63-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/63-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/63-cfg.dot	2023-06-07 19:32:15.417403167 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/63-cfg.dot	2023-06-07 19:32:19.607402776 +0330
@@ -1,149 +1,149 @@
 digraph "writeToSocketFromCache" {  
-"1812" [label = <(&lt;operator&gt;.assignment,maxWriteSize = helpers::min(SensorEventQueue::MAX_RECEIVE_BUFFER_EVENT_COUNT/2,\012 int(mService-&gt;mSocketBufferSize/(sizeof(sensors_event_t)*2))))<SUB>579</SUB>> ]
-"1834" [label = <(_l,_l(mConnectionLock))<SUB>581</SUB>> ]
-"1836" [label = <(sendPendingFlushEventsLocked,sendPendingFlushEventsLocked())<SUB>583</SUB>> ]
-"1954" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;wrote all events from cache size=%d &quot;, mCacheSize))<SUB>627</SUB>> ]
-"1958" [label = <(&lt;operator&gt;.assignment,mCacheSize = 0)<SUB>629</SUB>> ]
-"1961" [label = <(updateLooperRegistrationLocked,updateLooperRegistrationLocked(mService-&gt;getLooper()))<SUB>632</SUB>> ]
-"1814" [label = <(helpers::min,helpers::min(SensorEventQueue::MAX_RECEIVE_BUFFER_EVENT_COUNT/2,\012 int(mService-&gt;mSocketBufferSize/(sizeof(sensors_event_t)*2))))<SUB>579</SUB>> ]
-"1843" [label = <(&lt;operator&gt;.lessThan,numEventsSent &lt; mCacheSize)<SUB>584</SUB>> ]
-"1962" [label = <(getLooper,mService-&gt;getLooper())<SUB>632</SUB>> ]
-"1815" [label = <(&lt;operator&gt;.fieldAccess,helpers::min)<SUB>579</SUB>> ]
-"1818" [label = <(&lt;operator&gt;.division,SensorEventQueue::MAX_RECEIVE_BUFFER_EVENT_COUNT/2)<SUB>579</SUB>> ]
-"1823" [label = <(int,int(mService-&gt;mSocketBufferSize/(sizeof(sensors_event_t)*2)))<SUB>580</SUB>> ]
-"1840" [label = <(&lt;operator&gt;.assignment,numEventsSent = 0)<SUB>584</SUB>> ]
-"1848" [label = <(&lt;operator&gt;.assignment,numEventsToWrite = helpers::min(mCacheSize - numEventsSent, maxWriteSize))<SUB>585</SUB>> ]
-"1859" [label = <(&lt;operator&gt;.assignment,index_wake_up_event = -1)<SUB>586</SUB>> ]
-"1890" [label = <(&lt;operator&gt;.assignment,size = SensorEventQueue::write(mChannel,\012 reinterpret_cast&lt;ASensorEvent const*&gt;(mEventCache + numEventsSent),\012                          numEventsToWrite))<SUB>600</SUB>> ]
-"1951" [label = <(&lt;operator&gt;.assignmentPlus,numEventsSent += numEventsToWrite)<SUB>622</SUB>> ]
-"1963" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getLooper)<SUB>632</SUB>> ]
-"1817" [label = <(FIELD_IDENTIFIER,min,min)<SUB>579</SUB>> ]
-"1819" [label = <(&lt;operator&gt;.fieldAccess,SensorEventQueue::MAX_RECEIVE_BUFFER_EVENT_COUNT)<SUB>579</SUB>> ]
-"1824" [label = <(&lt;operator&gt;.constructorInitializer,(mService-&gt;mSocketBufferSize/(sizeof(sensors_event_t)*2)))<SUB>580</SUB>> ]
-"1850" [label = <(helpers::min,helpers::min(mCacheSize - numEventsSent, maxWriteSize))<SUB>585</SUB>> ]
-"1861" [label = <(&lt;operator&gt;.minus,-1)<SUB>586</SUB>> ]
-"1864" [label = <(hasSensorAccess,hasSensorAccess())<SUB>587</SUB>> ]
-"1892" [label = <(SensorEventQueue::write,SensorEventQueue::write(mChannel,\012 reinterpret_cast&lt;ASensorEvent const*&gt;(mEventCache + numEventsSent),\012                          numEventsToWrite))<SUB>600</SUB>> ]
-"1904" [label = <(&lt;operator&gt;.lessThan,size &lt; 0)<SUB>603</SUB>> ]
-"1965" [label = <(FIELD_IDENTIFIER,getLooper,getLooper)<SUB>632</SUB>> ]
-"1821" [label = <(FIELD_IDENTIFIER,MAX_RECEIVE_BUFFER_EVENT_COUNT,MAX_RECEIVE_BUFFER_EVENT_COUNT)<SUB>579</SUB>> ]
-"1825" [label = <(&lt;operator&gt;.division,mService-&gt;mSocketBufferSize/(sizeof(sensors_event_t)*2))<SUB>580</SUB>> ]
-"1851" [label = <(&lt;operator&gt;.fieldAccess,helpers::min)<SUB>585</SUB>> ]
-"1854" [label = <(&lt;operator&gt;.subtraction,mCacheSize - numEventsSent)<SUB>585</SUB>> ]
-"1866" [label = <(&lt;operator&gt;.assignment,index_wake_up_event =\012                      findWakeUpSensorEventLocked(mEventCache + numEventsSent, numEventsToWrite))<SUB>588</SUB>> ]
-"1893" [label = <(&lt;operator&gt;.fieldAccess,SensorEventQueue::write)<SUB>600</SUB>> ]
-"1897" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ASensorEvent const*&gt;(mEventCache + numEventsSent))<SUB>601</SUB>> ]
-"1930" [label = <(memmove,memmove(mEventCache, &amp;mEventCache[numEventsSent],\012 (mCacheSize - numEventsSent) * sizeof(sensors_event_t)))<SUB>615</SUB>> ]
-"1942" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;wrote %d events from cache size==%d &quot;,\012                    numEventsSent, mCacheSize))<SUB>617</SUB>> ]
-"1947" [label = <(&lt;operator&gt;.assignmentMinus,mCacheSize -= numEventsSent)<SUB>619</SUB>> ]
-"1950" [label = <(RETURN,return;,return;)<SUB>620</SUB>> ]
-"1826" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;mSocketBufferSize)<SUB>580</SUB>> ]
-"1829" [label = <(&lt;operator&gt;.multiplication,sizeof(sensors_event_t)*2)<SUB>580</SUB>> ]
-"1853" [label = <(FIELD_IDENTIFIER,min,min)<SUB>585</SUB>> ]
-"1868" [label = <(findWakeUpSensorEventLocked,findWakeUpSensorEventLocked(mEventCache + numEventsSent, numEventsToWrite))<SUB>589</SUB>> ]
-"1874" [label = <(&lt;operator&gt;.greaterEqualsThan,index_wake_up_event &gt;= 0)<SUB>590</SUB>> ]
-"1895" [label = <(FIELD_IDENTIFIER,write,write)<SUB>600</SUB>> ]
-"1898" [label = <(UNKNOWN,ASensorEvent const*,ASensorEvent const*)<SUB>601</SUB>> ]
-"1899" [label = <(&lt;operator&gt;.addition,mEventCache + numEventsSent)<SUB>601</SUB>> ]
-"1909" [label = <(&lt;operator&gt;.greaterEqualsThan,index_wake_up_event &gt;= 0)<SUB>604</SUB>> ]
-"1932" [label = <(&lt;operator&gt;.addressOf,&amp;mEventCache[numEventsSent])<SUB>615</SUB>> ]
-"1936" [label = <(&lt;operator&gt;.multiplication,(mCacheSize - numEventsSent) * sizeof(sensors_event_t))<SUB>616</SUB>> ]
-"1828" [label = <(FIELD_IDENTIFIER,mSocketBufferSize,mSocketBufferSize)<SUB>580</SUB>> ]
-"1830" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>580</SUB>> ]
-"1869" [label = <(&lt;operator&gt;.addition,mEventCache + numEventsSent)<SUB>589</SUB>> ]
-"1878" [label = <(&lt;operators&gt;.assignmentOr,mEventCache[index_wake_up_event + numEventsSent].flags |=\012                        WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>591</SUB>> ]
-"1887" [label = <(&lt;operator&gt;.preIncrement,++mWakeLockRefCount)<SUB>593</SUB>> ]
-"1913" [label = <(&lt;operators&gt;.assignmentAnd,mEventCache[index_wake_up_event + numEventsSent].flags  &amp;=\012 ~WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>606</SUB>> ]
-"1933" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[numEventsSent])<SUB>615</SUB>> ]
-"1937" [label = <(&lt;operator&gt;.subtraction,mCacheSize - numEventsSent)<SUB>616</SUB>> ]
-"1940" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>616</SUB>> ]
-"1879" [label = <(&lt;operator&gt;.fieldAccess,mEventCache[index_wake_up_event + numEventsSent].flags)<SUB>591</SUB>> ]
-"1914" [label = <(&lt;operator&gt;.fieldAccess,mEventCache[index_wake_up_event + numEventsSent].flags)<SUB>606</SUB>> ]
-"1921" [label = <(&lt;operator&gt;.not,~WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>607</SUB>> ]
-"1924" [label = <(&lt;operator&gt;.greaterThan,mWakeLockRefCount &gt; 0)<SUB>608</SUB>> ]
-"1880" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[index_wake_up_event + numEventsSent])<SUB>591</SUB>> ]
-"1885" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>591</SUB>> ]
-"1915" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[index_wake_up_event + numEventsSent])<SUB>606</SUB>> ]
-"1920" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>606</SUB>> ]
-"1928" [label = <(&lt;operator&gt;.preDecrement,--mWakeLockRefCount)<SUB>609</SUB>> ]
-"1882" [label = <(&lt;operator&gt;.addition,index_wake_up_event + numEventsSent)<SUB>591</SUB>> ]
-"1917" [label = <(&lt;operator&gt;.addition,index_wake_up_event + numEventsSent)<SUB>606</SUB>> ]
-"1809" [label = <(METHOD,writeToSocketFromCache)<SUB>576</SUB>> ]
-"1966" [label = <(METHOD_RETURN,void)<SUB>576</SUB>> ]
-  "1812" -> "1834" 
-  "1834" -> "1836" 
-  "1836" -> "1840" 
-  "1954" -> "1958" 
-  "1958" -> "1965" 
-  "1961" -> "1966" 
-  "1814" -> "1812" 
-  "1843" -> "1853" 
-  "1843" -> "1954" 
-  "1962" -> "1961" 
-  "1815" -> "1821" 
-  "1818" -> "1828" 
-  "1823" -> "1814" 
-  "1840" -> "1843" 
-  "1848" -> "1861" 
-  "1859" -> "1864" 
-  "1890" -> "1904" 
-  "1951" -> "1843" 
-  "1963" -> "1962" 
-  "1817" -> "1815" 
-  "1819" -> "1818" 
-  "1824" -> "1823" 
-  "1850" -> "1848" 
-  "1861" -> "1859" 
-  "1864" -> "1869" 
-  "1864" -> "1895" 
-  "1892" -> "1890" 
-  "1904" -> "1909" 
-  "1904" -> "1951" 
-  "1965" -> "1963" 
-  "1821" -> "1819" 
-  "1825" -> "1824" 
-  "1851" -> "1854" 
-  "1854" -> "1850" 
-  "1866" -> "1874" 
-  "1893" -> "1898" 
-  "1897" -> "1892" 
-  "1930" -> "1942" 
-  "1942" -> "1947" 
-  "1947" -> "1950" 
-  "1950" -> "1966" 
-  "1826" -> "1830" 
-  "1829" -> "1825" 
-  "1853" -> "1851" 
-  "1868" -> "1866" 
+"1820" [label = <(&lt;operator&gt;.assignment,maxWriteSize = helpers::min(SensorEventQueue::MAX_RECEIVE_BUFFER_EVENT_COUNT/2,\012 int(mService-&gt;mSocketBufferSize/(sizeof(sensors_event_t)*2))))<SUB>585</SUB>> ]
+"1842" [label = <(_l,_l(mConnectionLock))<SUB>587</SUB>> ]
+"1844" [label = <(sendPendingFlushEventsLocked,sendPendingFlushEventsLocked())<SUB>589</SUB>> ]
+"1962" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;wrote all events from cache size=%d &quot;, mCacheSize))<SUB>633</SUB>> ]
+"1966" [label = <(&lt;operator&gt;.assignment,mCacheSize = 0)<SUB>635</SUB>> ]
+"1969" [label = <(updateLooperRegistrationLocked,updateLooperRegistrationLocked(mService-&gt;getLooper()))<SUB>638</SUB>> ]
+"1822" [label = <(helpers::min,helpers::min(SensorEventQueue::MAX_RECEIVE_BUFFER_EVENT_COUNT/2,\012 int(mService-&gt;mSocketBufferSize/(sizeof(sensors_event_t)*2))))<SUB>585</SUB>> ]
+"1851" [label = <(&lt;operator&gt;.lessThan,numEventsSent &lt; mCacheSize)<SUB>590</SUB>> ]
+"1970" [label = <(getLooper,mService-&gt;getLooper())<SUB>638</SUB>> ]
+"1823" [label = <(&lt;operator&gt;.fieldAccess,helpers::min)<SUB>585</SUB>> ]
+"1826" [label = <(&lt;operator&gt;.division,SensorEventQueue::MAX_RECEIVE_BUFFER_EVENT_COUNT/2)<SUB>585</SUB>> ]
+"1831" [label = <(int,int(mService-&gt;mSocketBufferSize/(sizeof(sensors_event_t)*2)))<SUB>586</SUB>> ]
+"1848" [label = <(&lt;operator&gt;.assignment,numEventsSent = 0)<SUB>590</SUB>> ]
+"1856" [label = <(&lt;operator&gt;.assignment,numEventsToWrite = helpers::min(mCacheSize - numEventsSent, maxWriteSize))<SUB>591</SUB>> ]
+"1867" [label = <(&lt;operator&gt;.assignment,index_wake_up_event = -1)<SUB>592</SUB>> ]
+"1898" [label = <(&lt;operator&gt;.assignment,size = SensorEventQueue::write(mChannel,\012 reinterpret_cast&lt;ASensorEvent const*&gt;(mEventCache + numEventsSent),\012                          numEventsToWrite))<SUB>606</SUB>> ]
+"1959" [label = <(&lt;operator&gt;.assignmentPlus,numEventsSent += numEventsToWrite)<SUB>628</SUB>> ]
+"1971" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getLooper)<SUB>638</SUB>> ]
+"1825" [label = <(FIELD_IDENTIFIER,min,min)<SUB>585</SUB>> ]
+"1827" [label = <(&lt;operator&gt;.fieldAccess,SensorEventQueue::MAX_RECEIVE_BUFFER_EVENT_COUNT)<SUB>585</SUB>> ]
+"1832" [label = <(&lt;operator&gt;.constructorInitializer,(mService-&gt;mSocketBufferSize/(sizeof(sensors_event_t)*2)))<SUB>586</SUB>> ]
+"1858" [label = <(helpers::min,helpers::min(mCacheSize - numEventsSent, maxWriteSize))<SUB>591</SUB>> ]
+"1869" [label = <(&lt;operator&gt;.minus,-1)<SUB>592</SUB>> ]
+"1872" [label = <(hasSensorAccess,hasSensorAccess())<SUB>593</SUB>> ]
+"1900" [label = <(SensorEventQueue::write,SensorEventQueue::write(mChannel,\012 reinterpret_cast&lt;ASensorEvent const*&gt;(mEventCache + numEventsSent),\012                          numEventsToWrite))<SUB>606</SUB>> ]
+"1912" [label = <(&lt;operator&gt;.lessThan,size &lt; 0)<SUB>609</SUB>> ]
+"1973" [label = <(FIELD_IDENTIFIER,getLooper,getLooper)<SUB>638</SUB>> ]
+"1829" [label = <(FIELD_IDENTIFIER,MAX_RECEIVE_BUFFER_EVENT_COUNT,MAX_RECEIVE_BUFFER_EVENT_COUNT)<SUB>585</SUB>> ]
+"1833" [label = <(&lt;operator&gt;.division,mService-&gt;mSocketBufferSize/(sizeof(sensors_event_t)*2))<SUB>586</SUB>> ]
+"1859" [label = <(&lt;operator&gt;.fieldAccess,helpers::min)<SUB>591</SUB>> ]
+"1862" [label = <(&lt;operator&gt;.subtraction,mCacheSize - numEventsSent)<SUB>591</SUB>> ]
+"1874" [label = <(&lt;operator&gt;.assignment,index_wake_up_event =\012                      findWakeUpSensorEventLocked(mEventCache + numEventsSent, numEventsToWrite))<SUB>594</SUB>> ]
+"1901" [label = <(&lt;operator&gt;.fieldAccess,SensorEventQueue::write)<SUB>606</SUB>> ]
+"1905" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;ASensorEvent const*&gt;(mEventCache + numEventsSent))<SUB>607</SUB>> ]
+"1938" [label = <(memmove,memmove(mEventCache, &amp;mEventCache[numEventsSent],\012 (mCacheSize - numEventsSent) * sizeof(sensors_event_t)))<SUB>621</SUB>> ]
+"1950" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;wrote %d events from cache size==%d &quot;,\012                    numEventsSent, mCacheSize))<SUB>623</SUB>> ]
+"1955" [label = <(&lt;operator&gt;.assignmentMinus,mCacheSize -= numEventsSent)<SUB>625</SUB>> ]
+"1958" [label = <(RETURN,return;,return;)<SUB>626</SUB>> ]
+"1834" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;mSocketBufferSize)<SUB>586</SUB>> ]
+"1837" [label = <(&lt;operator&gt;.multiplication,sizeof(sensors_event_t)*2)<SUB>586</SUB>> ]
+"1861" [label = <(FIELD_IDENTIFIER,min,min)<SUB>591</SUB>> ]
+"1876" [label = <(findWakeUpSensorEventLocked,findWakeUpSensorEventLocked(mEventCache + numEventsSent, numEventsToWrite))<SUB>595</SUB>> ]
+"1882" [label = <(&lt;operator&gt;.greaterEqualsThan,index_wake_up_event &gt;= 0)<SUB>596</SUB>> ]
+"1903" [label = <(FIELD_IDENTIFIER,write,write)<SUB>606</SUB>> ]
+"1906" [label = <(UNKNOWN,ASensorEvent const*,ASensorEvent const*)<SUB>607</SUB>> ]
+"1907" [label = <(&lt;operator&gt;.addition,mEventCache + numEventsSent)<SUB>607</SUB>> ]
+"1917" [label = <(&lt;operator&gt;.greaterEqualsThan,index_wake_up_event &gt;= 0)<SUB>610</SUB>> ]
+"1940" [label = <(&lt;operator&gt;.addressOf,&amp;mEventCache[numEventsSent])<SUB>621</SUB>> ]
+"1944" [label = <(&lt;operator&gt;.multiplication,(mCacheSize - numEventsSent) * sizeof(sensors_event_t))<SUB>622</SUB>> ]
+"1836" [label = <(FIELD_IDENTIFIER,mSocketBufferSize,mSocketBufferSize)<SUB>586</SUB>> ]
+"1838" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>586</SUB>> ]
+"1877" [label = <(&lt;operator&gt;.addition,mEventCache + numEventsSent)<SUB>595</SUB>> ]
+"1886" [label = <(&lt;operators&gt;.assignmentOr,mEventCache[index_wake_up_event + numEventsSent].flags |=\012                        WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>597</SUB>> ]
+"1895" [label = <(&lt;operator&gt;.preIncrement,++mWakeLockRefCount)<SUB>599</SUB>> ]
+"1921" [label = <(&lt;operators&gt;.assignmentAnd,mEventCache[index_wake_up_event + numEventsSent].flags  &amp;=\012 ~WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>612</SUB>> ]
+"1941" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[numEventsSent])<SUB>621</SUB>> ]
+"1945" [label = <(&lt;operator&gt;.subtraction,mCacheSize - numEventsSent)<SUB>622</SUB>> ]
+"1948" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>622</SUB>> ]
+"1887" [label = <(&lt;operator&gt;.fieldAccess,mEventCache[index_wake_up_event + numEventsSent].flags)<SUB>597</SUB>> ]
+"1922" [label = <(&lt;operator&gt;.fieldAccess,mEventCache[index_wake_up_event + numEventsSent].flags)<SUB>612</SUB>> ]
+"1929" [label = <(&lt;operator&gt;.not,~WAKE_UP_SENSOR_EVENT_NEEDS_ACK)<SUB>613</SUB>> ]
+"1932" [label = <(&lt;operator&gt;.greaterThan,mWakeLockRefCount &gt; 0)<SUB>614</SUB>> ]
+"1888" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[index_wake_up_event + numEventsSent])<SUB>597</SUB>> ]
+"1893" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>597</SUB>> ]
+"1923" [label = <(&lt;operator&gt;.indirectIndexAccess,mEventCache[index_wake_up_event + numEventsSent])<SUB>612</SUB>> ]
+"1928" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>612</SUB>> ]
+"1936" [label = <(&lt;operator&gt;.preDecrement,--mWakeLockRefCount)<SUB>615</SUB>> ]
+"1890" [label = <(&lt;operator&gt;.addition,index_wake_up_event + numEventsSent)<SUB>597</SUB>> ]
+"1925" [label = <(&lt;operator&gt;.addition,index_wake_up_event + numEventsSent)<SUB>612</SUB>> ]
+"1817" [label = <(METHOD,writeToSocketFromCache)<SUB>582</SUB>> ]
+"1974" [label = <(METHOD_RETURN,void)<SUB>582</SUB>> ]
+  "1820" -> "1842" 
+  "1842" -> "1844" 
+  "1844" -> "1848" 
+  "1962" -> "1966" 
+  "1966" -> "1973" 
+  "1969" -> "1974" 
+  "1822" -> "1820" 
+  "1851" -> "1861" 
+  "1851" -> "1962" 
+  "1970" -> "1969" 
+  "1823" -> "1829" 
+  "1826" -> "1836" 
+  "1831" -> "1822" 
+  "1848" -> "1851" 
+  "1856" -> "1869" 
+  "1867" -> "1872" 
+  "1898" -> "1912" 
+  "1959" -> "1851" 
+  "1971" -> "1970" 
+  "1825" -> "1823" 
+  "1827" -> "1826" 
+  "1832" -> "1831" 
+  "1858" -> "1856" 
+  "1869" -> "1867" 
+  "1872" -> "1877" 
+  "1872" -> "1903" 
+  "1900" -> "1898" 
+  "1912" -> "1917" 
+  "1912" -> "1959" 
+  "1973" -> "1971" 
+  "1829" -> "1827" 
+  "1833" -> "1832" 
+  "1859" -> "1862" 
+  "1862" -> "1858" 
   "1874" -> "1882" 
-  "1874" -> "1895" 
-  "1895" -> "1893" 
-  "1898" -> "1899" 
-  "1899" -> "1897" 
-  "1909" -> "1917" 
-  "1909" -> "1933" 
-  "1932" -> "1937" 
-  "1936" -> "1930" 
-  "1828" -> "1826" 
-  "1830" -> "1829" 
-  "1869" -> "1868" 
-  "1878" -> "1887" 
-  "1887" -> "1895" 
-  "1913" -> "1924" 
-  "1933" -> "1932" 
-  "1937" -> "1940" 
-  "1940" -> "1936" 
-  "1879" -> "1878" 
-  "1914" -> "1921" 
-  "1921" -> "1913" 
-  "1924" -> "1928" 
-  "1924" -> "1933" 
-  "1880" -> "1885" 
-  "1885" -> "1879" 
-  "1915" -> "1920" 
-  "1920" -> "1914" 
-  "1928" -> "1933" 
-  "1882" -> "1880" 
-  "1917" -> "1915" 
-  "1809" -> "1817" 
+  "1901" -> "1906" 
+  "1905" -> "1900" 
+  "1938" -> "1950" 
+  "1950" -> "1955" 
+  "1955" -> "1958" 
+  "1958" -> "1974" 
+  "1834" -> "1838" 
+  "1837" -> "1833" 
+  "1861" -> "1859" 
+  "1876" -> "1874" 
+  "1882" -> "1890" 
+  "1882" -> "1903" 
+  "1903" -> "1901" 
+  "1906" -> "1907" 
+  "1907" -> "1905" 
+  "1917" -> "1925" 
+  "1917" -> "1941" 
+  "1940" -> "1945" 
+  "1944" -> "1938" 
+  "1836" -> "1834" 
+  "1838" -> "1837" 
+  "1877" -> "1876" 
+  "1886" -> "1895" 
+  "1895" -> "1903" 
+  "1921" -> "1932" 
+  "1941" -> "1940" 
+  "1945" -> "1948" 
+  "1948" -> "1944" 
+  "1887" -> "1886" 
+  "1922" -> "1929" 
+  "1929" -> "1921" 
+  "1932" -> "1936" 
+  "1932" -> "1941" 
+  "1888" -> "1893" 
+  "1893" -> "1887" 
+  "1923" -> "1928" 
+  "1928" -> "1922" 
+  "1936" -> "1941" 
+  "1890" -> "1888" 
+  "1925" -> "1923" 
+  "1817" -> "1825" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/64-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/64-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/64-cfg.dot	2023-06-07 19:32:15.427403165 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/64-cfg.dot	2023-06-07 19:32:19.607402776 +0330
@@ -1,82 +1,82 @@
 digraph "countFlushCompleteEventsLocked" {  
-"1972" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;dropping %d events &quot;, numEventsDropped))<SUB>637</SUB>> ]
-"2045" [label = <(RETURN,return;,return;)<SUB>654</SUB>> ]
-"1982" [label = <(&lt;operator&gt;.lessThan,j &lt; numEventsDropped)<SUB>640</SUB>> ]
-"1985" [label = <(&lt;operator&gt;.preIncrement,++j)<SUB>640</SUB>> ]
-"1979" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>640</SUB>> ]
-"1989" [label = <(&lt;operator&gt;.equals,scratch[j].type == SENSOR_TYPE_META_DATA)<SUB>641</SUB>> ]
-"1990" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].type)<SUB>641</SUB>> ]
-"2024" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = mSensorInfo[scratch[j].meta_data.sensor])<SUB>648</SUB>> ]
-"2035" [label = <(&lt;operator&gt;.postIncrement,flushInfo.mPendingFlushEventsToSend++)<SUB>649</SUB>> ]
-"2039" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;increment pendingFlushCount %d&quot;,\012                     flushInfo.mPendingFlushEventsToSend))<SUB>650</SUB>> ]
-"1991" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[j])<SUB>641</SUB>> ]
-"1994" [label = <(FIELD_IDENTIFIER,type,type)<SUB>641</SUB>> ]
-"1998" [label = <(&lt;operator&gt;.equals,mSensorInfo.count(scratch[j].meta_data.sensor) == 0)<SUB>642</SUB>> ]
-"2026" [label = <(&lt;operator&gt;.indirectIndexAccess,mSensorInfo[scratch[j].meta_data.sensor])<SUB>648</SUB>> ]
-"2036" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>649</SUB>> ]
-"2042" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>651</SUB>> ]
-"1999" [label = <(count,mSensorInfo.count(scratch[j].meta_data.sensor))<SUB>642</SUB>> ]
-"2012" [label = <(ALOGW,ALOGW(&quot;%s: sensor 0x%x is not found in connection&quot;,\012                      __func__, scratch[j].meta_data.sensor))<SUB>643</SUB>> ]
-"2028" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data.sensor)<SUB>648</SUB>> ]
-"2038" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>649</SUB>> ]
-"2044" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>651</SUB>> ]
-"2000" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>642</SUB>> ]
-"2003" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data.sensor)<SUB>642</SUB>> ]
-"2015" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data.sensor)<SUB>644</SUB>> ]
-"2029" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data)<SUB>648</SUB>> ]
-"2034" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>648</SUB>> ]
-"2002" [label = <(FIELD_IDENTIFIER,count,count)<SUB>642</SUB>> ]
-"2004" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data)<SUB>642</SUB>> ]
-"2009" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>642</SUB>> ]
-"2016" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data)<SUB>644</SUB>> ]
-"2021" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>644</SUB>> ]
-"2030" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[j])<SUB>648</SUB>> ]
-"2033" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>648</SUB>> ]
-"2005" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[j])<SUB>642</SUB>> ]
-"2008" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>642</SUB>> ]
-"2017" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[j])<SUB>644</SUB>> ]
-"2020" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>644</SUB>> ]
-"1968" [label = <(METHOD,countFlushCompleteEventsLocked)<SUB>635</SUB>> ]
-"2046" [label = <(METHOD_RETURN,void)<SUB>635</SUB>> ]
-  "1972" -> "1979" 
-  "2045" -> "2046" 
-  "1982" -> "2045" 
-  "1982" -> "1991" 
-  "1985" -> "1982" 
-  "1979" -> "1982" 
-  "1989" -> "2002" 
-  "1989" -> "1985" 
-  "1990" -> "1989" 
-  "2024" -> "2038" 
-  "2035" -> "2044" 
-  "2039" -> "1985" 
-  "1991" -> "1994" 
-  "1994" -> "1990" 
-  "1998" -> "2017" 
-  "1998" -> "2030" 
-  "2026" -> "2024" 
-  "2036" -> "2035" 
-  "2042" -> "2039" 
-  "1999" -> "1998" 
-  "2012" -> "1985" 
-  "2028" -> "2026" 
-  "2038" -> "2036" 
-  "2044" -> "2042" 
-  "2000" -> "2005" 
-  "2003" -> "1999" 
-  "2015" -> "2012" 
-  "2029" -> "2034" 
-  "2034" -> "2028" 
-  "2002" -> "2000" 
-  "2004" -> "2009" 
-  "2009" -> "2003" 
-  "2016" -> "2021" 
-  "2021" -> "2015" 
-  "2030" -> "2033" 
-  "2033" -> "2029" 
-  "2005" -> "2008" 
-  "2008" -> "2004" 
-  "2017" -> "2020" 
-  "2020" -> "2016" 
-  "1968" -> "1972" 
+"1980" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;dropping %d events &quot;, numEventsDropped))<SUB>643</SUB>> ]
+"2053" [label = <(RETURN,return;,return;)<SUB>660</SUB>> ]
+"1990" [label = <(&lt;operator&gt;.lessThan,j &lt; numEventsDropped)<SUB>646</SUB>> ]
+"1993" [label = <(&lt;operator&gt;.preIncrement,++j)<SUB>646</SUB>> ]
+"1987" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>646</SUB>> ]
+"1997" [label = <(&lt;operator&gt;.equals,scratch[j].type == SENSOR_TYPE_META_DATA)<SUB>647</SUB>> ]
+"1998" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].type)<SUB>647</SUB>> ]
+"2032" [label = <(&lt;operator&gt;.assignment,&amp; flushInfo = mSensorInfo[scratch[j].meta_data.sensor])<SUB>654</SUB>> ]
+"2043" [label = <(&lt;operator&gt;.postIncrement,flushInfo.mPendingFlushEventsToSend++)<SUB>655</SUB>> ]
+"2047" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;increment pendingFlushCount %d&quot;,\012                     flushInfo.mPendingFlushEventsToSend))<SUB>656</SUB>> ]
+"1999" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[j])<SUB>647</SUB>> ]
+"2002" [label = <(FIELD_IDENTIFIER,type,type)<SUB>647</SUB>> ]
+"2006" [label = <(&lt;operator&gt;.equals,mSensorInfo.count(scratch[j].meta_data.sensor) == 0)<SUB>648</SUB>> ]
+"2034" [label = <(&lt;operator&gt;.indirectIndexAccess,mSensorInfo[scratch[j].meta_data.sensor])<SUB>654</SUB>> ]
+"2044" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>655</SUB>> ]
+"2050" [label = <(&lt;operator&gt;.fieldAccess,flushInfo.mPendingFlushEventsToSend)<SUB>657</SUB>> ]
+"2007" [label = <(count,mSensorInfo.count(scratch[j].meta_data.sensor))<SUB>648</SUB>> ]
+"2020" [label = <(ALOGW,ALOGW(&quot;%s: sensor 0x%x is not found in connection&quot;,\012                      __func__, scratch[j].meta_data.sensor))<SUB>649</SUB>> ]
+"2036" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data.sensor)<SUB>654</SUB>> ]
+"2046" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>655</SUB>> ]
+"2052" [label = <(FIELD_IDENTIFIER,mPendingFlushEventsToSend,mPendingFlushEventsToSend)<SUB>657</SUB>> ]
+"2008" [label = <(&lt;operator&gt;.fieldAccess,mSensorInfo.count)<SUB>648</SUB>> ]
+"2011" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data.sensor)<SUB>648</SUB>> ]
+"2023" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data.sensor)<SUB>650</SUB>> ]
+"2037" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data)<SUB>654</SUB>> ]
+"2042" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>654</SUB>> ]
+"2010" [label = <(FIELD_IDENTIFIER,count,count)<SUB>648</SUB>> ]
+"2012" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data)<SUB>648</SUB>> ]
+"2017" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>648</SUB>> ]
+"2024" [label = <(&lt;operator&gt;.fieldAccess,scratch[j].meta_data)<SUB>650</SUB>> ]
+"2029" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>650</SUB>> ]
+"2038" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[j])<SUB>654</SUB>> ]
+"2041" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>654</SUB>> ]
+"2013" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[j])<SUB>648</SUB>> ]
+"2016" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>648</SUB>> ]
+"2025" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[j])<SUB>650</SUB>> ]
+"2028" [label = <(FIELD_IDENTIFIER,meta_data,meta_data)<SUB>650</SUB>> ]
+"1976" [label = <(METHOD,countFlushCompleteEventsLocked)<SUB>641</SUB>> ]
+"2054" [label = <(METHOD_RETURN,void)<SUB>641</SUB>> ]
+  "1980" -> "1987" 
+  "2053" -> "2054" 
+  "1990" -> "2053" 
+  "1990" -> "1999" 
+  "1993" -> "1990" 
+  "1987" -> "1990" 
+  "1997" -> "2010" 
+  "1997" -> "1993" 
+  "1998" -> "1997" 
+  "2032" -> "2046" 
+  "2043" -> "2052" 
+  "2047" -> "1993" 
+  "1999" -> "2002" 
+  "2002" -> "1998" 
+  "2006" -> "2025" 
+  "2006" -> "2038" 
+  "2034" -> "2032" 
+  "2044" -> "2043" 
+  "2050" -> "2047" 
+  "2007" -> "2006" 
+  "2020" -> "1993" 
+  "2036" -> "2034" 
+  "2046" -> "2044" 
+  "2052" -> "2050" 
+  "2008" -> "2013" 
+  "2011" -> "2007" 
+  "2023" -> "2020" 
+  "2037" -> "2042" 
+  "2042" -> "2036" 
+  "2010" -> "2008" 
+  "2012" -> "2017" 
+  "2017" -> "2011" 
+  "2024" -> "2029" 
+  "2029" -> "2023" 
+  "2038" -> "2041" 
+  "2041" -> "2037" 
+  "2013" -> "2016" 
+  "2016" -> "2012" 
+  "2025" -> "2028" 
+  "2028" -> "2024" 
+  "1976" -> "1980" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/65-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/65-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/65-cfg.dot	2023-06-07 19:32:15.427403165 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/65-cfg.dot	2023-06-07 19:32:19.607402776 +0330
@@ -1,27 +1,27 @@
 digraph "findWakeUpSensorEventLocked" {  
-"2075" [label = <(RETURN,return -1;,return -1;)<SUB>664</SUB>> ]
-"2058" [label = <(&lt;operator&gt;.lessThan,i &lt; count)<SUB>659</SUB>> ]
-"2061" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>659</SUB>> ]
-"2076" [label = <(&lt;operator&gt;.minus,-1)<SUB>664</SUB>> ]
-"2055" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>659</SUB>> ]
-"2065" [label = <(isWakeUpSensorEvent,mService-&gt;isWakeUpSensorEvent(scratch[i]))<SUB>660</SUB>> ]
-"2066" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;isWakeUpSensorEvent)<SUB>660</SUB>> ]
-"2069" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[i])<SUB>660</SUB>> ]
-"2073" [label = <(RETURN,return i;,return i;)<SUB>661</SUB>> ]
-"2068" [label = <(FIELD_IDENTIFIER,isWakeUpSensorEvent,isWakeUpSensorEvent)<SUB>660</SUB>> ]
-"2048" [label = <(METHOD,findWakeUpSensorEventLocked)<SUB>657</SUB>> ]
-"2078" [label = <(METHOD_RETURN,int)<SUB>657</SUB>> ]
-  "2075" -> "2078" 
-  "2058" -> "2068" 
-  "2058" -> "2076" 
-  "2061" -> "2058" 
-  "2076" -> "2075" 
-  "2055" -> "2058" 
-  "2065" -> "2073" 
-  "2065" -> "2061" 
-  "2066" -> "2069" 
-  "2069" -> "2065" 
-  "2073" -> "2078" 
-  "2068" -> "2066" 
-  "2048" -> "2055" 
+"2083" [label = <(RETURN,return -1;,return -1;)<SUB>670</SUB>> ]
+"2066" [label = <(&lt;operator&gt;.lessThan,i &lt; count)<SUB>665</SUB>> ]
+"2069" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>665</SUB>> ]
+"2084" [label = <(&lt;operator&gt;.minus,-1)<SUB>670</SUB>> ]
+"2063" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>665</SUB>> ]
+"2073" [label = <(isWakeUpSensorEvent,mService-&gt;isWakeUpSensorEvent(scratch[i]))<SUB>666</SUB>> ]
+"2074" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;isWakeUpSensorEvent)<SUB>666</SUB>> ]
+"2077" [label = <(&lt;operator&gt;.indirectIndexAccess,scratch[i])<SUB>666</SUB>> ]
+"2081" [label = <(RETURN,return i;,return i;)<SUB>667</SUB>> ]
+"2076" [label = <(FIELD_IDENTIFIER,isWakeUpSensorEvent,isWakeUpSensorEvent)<SUB>666</SUB>> ]
+"2056" [label = <(METHOD,findWakeUpSensorEventLocked)<SUB>663</SUB>> ]
+"2086" [label = <(METHOD_RETURN,int)<SUB>663</SUB>> ]
+  "2083" -> "2086" 
+  "2066" -> "2076" 
+  "2066" -> "2084" 
+  "2069" -> "2066" 
+  "2084" -> "2083" 
+  "2063" -> "2066" 
+  "2073" -> "2081" 
+  "2073" -> "2069" 
+  "2074" -> "2077" 
+  "2077" -> "2073" 
+  "2081" -> "2086" 
+  "2076" -> "2074" 
+  "2056" -> "2063" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/66-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/66-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/66-cfg.dot	2023-06-07 19:32:15.427403165 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/66-cfg.dot	2023-06-07 19:32:19.607402776 +0330
@@ -1,7 +1,7 @@
 digraph "getSensorChannel" {  
-"2082" [label = <(RETURN,return mChannel;,return mChannel;)<SUB>669</SUB>> ]
-"2080" [label = <(METHOD,getSensorChannel)<SUB>667</SUB>> ]
-"2084" [label = <(METHOD_RETURN,sp&lt;BitTube&gt;)<SUB>667</SUB>> ]
-  "2082" -> "2084" 
-  "2080" -> "2082" 
+"2090" [label = <(RETURN,return mChannel;,return mChannel;)<SUB>675</SUB>> ]
+"2088" [label = <(METHOD,getSensorChannel)<SUB>673</SUB>> ]
+"2092" [label = <(METHOD_RETURN,sp&lt;BitTube&gt;)<SUB>673</SUB>> ]
+  "2090" -> "2092" 
+  "2088" -> "2090" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/67-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/67-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/67-cfg.dot	2023-06-07 19:32:15.427403165 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/67-cfg.dot	2023-06-07 19:32:19.617402775 +0330
@@ -1,20 +1,16 @@
 digraph "enableDisable" {  
-"2127" [label = <(RETURN,return err;,return err;)<SUB>689</SUB>> ]
-"2096" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;168211968&quot;))<SUB>677</SUB>> ]
-"2099" [label = <(RETURN,return DEAD_OBJECT;,return DEAD_OBJECT;)<SUB>678</SUB>> ]
-"2105" [label = <(&lt;operator&gt;.assignment,err = mService-&gt;enable(this, handle, samplingPeriodNs, maxBatchReportLatencyNs,\012                               reservedFlags, mOpPackageName))<SUB>683</SUB>> ]
-"2107" [label = <(enable,mService-&gt;enable(this, handle, samplingPeriodNs, maxBatchReportLatencyNs,\012                               reservedFlags, mOpPackageName))<SUB>683</SUB>> ]
-"2119" [label = <(&lt;operator&gt;.assignment,err = mService-&gt;disable(this, handle))<SUB>687</SUB>> ]
-"2108" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;enable)<SUB>683</SUB>> ]
-"2121" [label = <(disable,mService-&gt;disable(this, handle))<SUB>687</SUB>> ]
-"2110" [label = <(FIELD_IDENTIFIER,enable,enable)<SUB>683</SUB>> ]
-"2122" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;disable)<SUB>687</SUB>> ]
-"2124" [label = <(FIELD_IDENTIFIER,disable,disable)<SUB>687</SUB>> ]
-"2086" [label = <(METHOD,enableDisable)<SUB>672</SUB>> ]
-"2129" [label = <(METHOD_RETURN,status_t)<SUB>672</SUB>> ]
+"2127" [label = <(RETURN,return err;,return err;)<SUB>690</SUB>> ]
+"2105" [label = <(&lt;operator&gt;.assignment,err = mService-&gt;enable(this, handle, samplingPeriodNs, maxBatchReportLatencyNs,\012                               reservedFlags, mOpPackageName))<SUB>684</SUB>> ]
+"2107" [label = <(enable,mService-&gt;enable(this, handle, samplingPeriodNs, maxBatchReportLatencyNs,\012                               reservedFlags, mOpPackageName))<SUB>684</SUB>> ]
+"2119" [label = <(&lt;operator&gt;.assignment,err = mService-&gt;disable(this, handle))<SUB>688</SUB>> ]
+"2108" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;enable)<SUB>684</SUB>> ]
+"2121" [label = <(disable,mService-&gt;disable(this, handle))<SUB>688</SUB>> ]
+"2110" [label = <(FIELD_IDENTIFIER,enable,enable)<SUB>684</SUB>> ]
+"2122" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;disable)<SUB>688</SUB>> ]
+"2124" [label = <(FIELD_IDENTIFIER,disable,disable)<SUB>688</SUB>> ]
+"2094" [label = <(METHOD,enableDisable)<SUB>678</SUB>> ]
+"2129" [label = <(METHOD_RETURN,status_t)<SUB>678</SUB>> ]
   "2127" -> "2129" 
-  "2096" -> "2099" 
-  "2099" -> "2129" 
   "2105" -> "2127" 
   "2107" -> "2105" 
   "2119" -> "2127" 
@@ -23,7 +19,6 @@
   "2110" -> "2108" 
   "2122" -> "2121" 
   "2124" -> "2122" 
-  "2086" -> "2096" 
-  "2086" -> "2110" 
-  "2086" -> "2124" 
+  "2094" -> "2110" 
+  "2094" -> "2124" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/68-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/68-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/68-cfg.dot	2023-06-07 19:32:15.427403165 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/68-cfg.dot	2023-06-07 19:32:19.617402775 +0330
@@ -1,18 +1,13 @@
 digraph "setEventRate" {  
-"2143" [label = <(RETURN,return mService-&gt;setEventRate(this, handle, samplingPeriodNs, mOpPackageName);,return mService-&gt;setEventRate(this, handle, samplingPeriodNs, mOpPackageName);)<SUB>700</SUB>> ]
-"2144" [label = <(setEventRate,mService-&gt;setEventRate(this, handle, samplingPeriodNs, mOpPackageName))<SUB>700</SUB>> ]
-"2138" [label = <(android_errorWriteLog,android_errorWriteLog(0x534e4554, &quot;168211968&quot;))<SUB>696</SUB>> ]
-"2141" [label = <(RETURN,return DEAD_OBJECT;,return DEAD_OBJECT;)<SUB>697</SUB>> ]
-"2145" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;setEventRate)<SUB>700</SUB>> ]
-"2147" [label = <(FIELD_IDENTIFIER,setEventRate,setEventRate)<SUB>700</SUB>> ]
-"2131" [label = <(METHOD,setEventRate)<SUB>692</SUB>> ]
-"2152" [label = <(METHOD_RETURN,status_t)<SUB>692</SUB>> ]
-  "2143" -> "2152" 
-  "2144" -> "2143" 
-  "2138" -> "2141" 
-  "2141" -> "2152" 
-  "2145" -> "2144" 
-  "2147" -> "2145" 
-  "2131" -> "2138" 
-  "2131" -> "2147" 
+"2135" [label = <(RETURN,return mService-&gt;setEventRate(this, handle, samplingPeriodNs, mOpPackageName);,return mService-&gt;setEventRate(this, handle, samplingPeriodNs, mOpPackageName);)<SUB>696</SUB>> ]
+"2136" [label = <(setEventRate,mService-&gt;setEventRate(this, handle, samplingPeriodNs, mOpPackageName))<SUB>696</SUB>> ]
+"2137" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;setEventRate)<SUB>696</SUB>> ]
+"2139" [label = <(FIELD_IDENTIFIER,setEventRate,setEventRate)<SUB>696</SUB>> ]
+"2131" [label = <(METHOD,setEventRate)<SUB>693</SUB>> ]
+"2144" [label = <(METHOD_RETURN,status_t)<SUB>693</SUB>> ]
+  "2135" -> "2144" 
+  "2136" -> "2135" 
+  "2137" -> "2136" 
+  "2139" -> "2137" 
+  "2131" -> "2139" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/69-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/69-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/69-cfg.dot	2023-06-07 19:32:15.427403165 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/69-cfg.dot	2023-06-07 19:32:19.617402775 +0330
@@ -1,16 +1,13 @@
 digraph "flush" {  
-"2161" [label = <(RETURN,return  mService-&gt;flushSensor(this, mOpPackageName);,return  mService-&gt;flushSensor(this, mOpPackageName);)<SUB>708</SUB>> ]
-"2162" [label = <(flushSensor,mService-&gt;flushSensor(this, mOpPackageName))<SUB>708</SUB>> ]
-"2159" [label = <(RETURN,return DEAD_OBJECT;,return DEAD_OBJECT;)<SUB>705</SUB>> ]
-"2163" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;flushSensor)<SUB>708</SUB>> ]
-"2165" [label = <(FIELD_IDENTIFIER,flushSensor,flushSensor)<SUB>708</SUB>> ]
-"2154" [label = <(METHOD,flush)<SUB>703</SUB>> ]
-"2168" [label = <(METHOD_RETURN,status_t)<SUB>703</SUB>> ]
-  "2161" -> "2168" 
-  "2162" -> "2161" 
-  "2159" -> "2168" 
-  "2163" -> "2162" 
-  "2165" -> "2163" 
-  "2154" -> "2159" 
-  "2154" -> "2165" 
+"2148" [label = <(RETURN,return  mService-&gt;flushSensor(this, mOpPackageName);,return  mService-&gt;flushSensor(this, mOpPackageName);)<SUB>700</SUB>> ]
+"2149" [label = <(flushSensor,mService-&gt;flushSensor(this, mOpPackageName))<SUB>700</SUB>> ]
+"2150" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;flushSensor)<SUB>700</SUB>> ]
+"2152" [label = <(FIELD_IDENTIFIER,flushSensor,flushSensor)<SUB>700</SUB>> ]
+"2146" [label = <(METHOD,flush)<SUB>699</SUB>> ]
+"2155" [label = <(METHOD_RETURN,status_t)<SUB>699</SUB>> ]
+  "2148" -> "2155" 
+  "2149" -> "2148" 
+  "2150" -> "2149" 
+  "2152" -> "2150" 
+  "2146" -> "2152" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/7-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/7-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/7-cfg.dot	2023-06-07 19:32:15.327403175 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/7-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "getActiveSensorHandles" {  
-"47" [label = <(METHOD,getActiveSensorHandles)<SUB>62</SUB>> ]
-"49" [label = <(METHOD_RETURN,ANY)<SUB>62</SUB>> ]
+"47" [label = <(METHOD,getActiveSensorHandles)<SUB>61</SUB>> ]
+"49" [label = <(METHOD_RETURN,ANY)<SUB>61</SUB>> ]
   "47" -> "49" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/70-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/70-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/70-cfg.dot	2023-06-07 19:32:15.427403165 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/70-cfg.dot	2023-06-07 19:32:19.617402775 +0330
@@ -1,21 +1,21 @@
 digraph "configureChannel" {  
-"2174" [label = <(UNUSED,UNUSED(handle))<SUB>713</SUB>> ]
-"2180" [label = <(UNUSED,UNUSED(rateLevel))<SUB>714</SUB>> ]
-"2186" [label = <(RETURN,return INVALID_OPERATION;,return INVALID_OPERATION;)<SUB>715</SUB>> ]
-"2177" [label = <(&lt;operator&gt;.cast,(void)(handle))<SUB>713</SUB>> ]
-"2183" [label = <(&lt;operator&gt;.cast,(void)(rateLevel))<SUB>714</SUB>> ]
-"2178" [label = <(UNKNOWN,void,void)<SUB>713</SUB>> ]
-"2184" [label = <(UNKNOWN,void,void)<SUB>714</SUB>> ]
-"2170" [label = <(METHOD,configureChannel)<SUB>711</SUB>> ]
-"2188" [label = <(METHOD_RETURN,int32_t)<SUB>711</SUB>> ]
-  "2174" -> "2178" 
-  "2174" -> "2180" 
-  "2180" -> "2184" 
-  "2180" -> "2186" 
-  "2186" -> "2188" 
-  "2177" -> "2180" 
-  "2183" -> "2186" 
-  "2178" -> "2177" 
-  "2184" -> "2183" 
-  "2170" -> "2174" 
+"2161" [label = <(UNUSED,UNUSED(handle))<SUB>705</SUB>> ]
+"2167" [label = <(UNUSED,UNUSED(rateLevel))<SUB>706</SUB>> ]
+"2173" [label = <(RETURN,return INVALID_OPERATION;,return INVALID_OPERATION;)<SUB>707</SUB>> ]
+"2164" [label = <(&lt;operator&gt;.cast,(void)(handle))<SUB>705</SUB>> ]
+"2170" [label = <(&lt;operator&gt;.cast,(void)(rateLevel))<SUB>706</SUB>> ]
+"2165" [label = <(UNKNOWN,void,void)<SUB>705</SUB>> ]
+"2171" [label = <(UNKNOWN,void,void)<SUB>706</SUB>> ]
+"2157" [label = <(METHOD,configureChannel)<SUB>703</SUB>> ]
+"2175" [label = <(METHOD_RETURN,int32_t)<SUB>703</SUB>> ]
+  "2161" -> "2165" 
+  "2161" -> "2167" 
+  "2167" -> "2171" 
+  "2167" -> "2173" 
+  "2173" -> "2175" 
+  "2164" -> "2167" 
+  "2170" -> "2173" 
+  "2165" -> "2164" 
+  "2171" -> "2170" 
+  "2157" -> "2161" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/71-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/71-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/71-cfg.dot	2023-06-07 19:32:15.427403165 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/71-cfg.dot	2023-06-07 19:32:19.617402775 +0330
@@ -1,187 +1,187 @@
 digraph "handleEvent" {  
-"2391" [label = <(RETURN,return 1;,return 1;)<SUB>798</SUB>> ]
-"2196" [label = <(&lt;operator&gt;.logicalOr,events &amp; ALOOPER_EVENT_HANGUP || events &amp; ALOOPER_EVENT_ERROR)<SUB>719</SUB>> ]
-"2241" [label = <(&lt;operator&gt;.and,events &amp; ALOOPER_EVENT_INPUT)<SUB>740</SUB>> ]
-"2382" [label = <(&lt;operator&gt;.and,events &amp; ALOOPER_EVENT_OUTPUT)<SUB>794</SUB>> ]
-"2197" [label = <(&lt;operator&gt;.and,events &amp; ALOOPER_EVENT_HANGUP)<SUB>719</SUB>> ]
-"2200" [label = <(&lt;operator&gt;.and,events &amp; ALOOPER_EVENT_ERROR)<SUB>719</SUB>> ]
-"2224" [label = <(checkWakeLockState,mService-&gt;checkWakeLockState())<SUB>730</SUB>> ]
-"2238" [label = <(RETURN,return 1;,return 1;)<SUB>737</SUB>> ]
-"2247" [label = <(&lt;operator&gt;.assignment,numBytesRead = ::recv(fd, buf, sizeof(buf), MSG_DONTWAIT))<SUB>742</SUB>> ]
-"2379" [label = <(RETURN,return 1;,return 1;)<SUB>791</SUB>> ]
-"2386" [label = <(sendEventsFromCache,mService-&gt;sendEventsFromCache(this))<SUB>796</SUB>> ]
-"2205" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;%p Looper error %d&quot;, this, fd))<SUB>724</SUB>> ]
-"2211" [label = <(_l,_l(mConnectionLock))<SUB>725</SUB>> ]
-"2213" [label = <(&lt;operator&gt;.assignment,mDead = true)<SUB>726</SUB>> ]
-"2216" [label = <(&lt;operator&gt;.assignment,mWakeLockRefCount = 0)<SUB>727</SUB>> ]
-"2219" [label = <(updateLooperRegistrationLocked,updateLooperRegistrationLocked(mService-&gt;getLooper()))<SUB>728</SUB>> ]
-"2225" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;checkWakeLockState)<SUB>730</SUB>> ]
-"2249" [label = <(::recv,::recv(fd, buf, sizeof(buf), MSG_DONTWAIT))<SUB>742</SUB>> ]
-"2260" [label = <(_l,_l(mConnectionLock))<SUB>744</SUB>> ]
-"2371" [label = <(&lt;operator&gt;.equals,mWakeLockRefCount == 0)<SUB>787</SUB>> ]
-"2387" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;sendEventsFromCache)<SUB>796</SUB>> ]
-"2220" [label = <(getLooper,mService-&gt;getLooper())<SUB>728</SUB>> ]
-"2227" [label = <(FIELD_IDENTIFIER,checkWakeLockState,checkWakeLockState)<SUB>730</SUB>> ]
-"2231" [label = <(resetToNormalMode,mService-&gt;resetToNormalMode())<SUB>734</SUB>> ]
-"2235" [label = <(&lt;operator&gt;.assignment,mDataInjectionMode = false)<SUB>735</SUB>> ]
-"2250" [label = <(&lt;operator&gt;.fieldAccess,::recv)<SUB>742</SUB>> ]
-"2255" [label = <(&lt;operator&gt;.sizeOf,sizeof(buf))<SUB>742</SUB>> ]
-"2263" [label = <(&lt;operator&gt;.equals,numBytesRead == sizeof(sensors_event_t))<SUB>745</SUB>> ]
-"2375" [label = <(checkWakeLockState,mService-&gt;checkWakeLockState())<SUB>788</SUB>> ]
-"2389" [label = <(FIELD_IDENTIFIER,sendEventsFromCache,sendEventsFromCache)<SUB>796</SUB>> ]
-"2221" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getLooper)<SUB>728</SUB>> ]
-"2232" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;resetToNormalMode)<SUB>734</SUB>> ]
-"2252" [label = <(FIELD_IDENTIFIER,recv,recv)<SUB>742</SUB>> ]
-"2265" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>745</SUB>> ]
-"2282" [label = <(memcpy,memcpy(&amp;sensor_event, buf, sizeof(sensors_event_t)))<SUB>753</SUB>> ]
-"2288" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si =\012                        mService-&gt;getSensorInterfaceFromHandle(sensor_event.sensor))<SUB>754</SUB>> ]
-"2309" [label = <(dev,&amp; dev(SensorDevice::getInstance()))<SUB>760</SUB>> ]
-"2314" [label = <(&lt;operator&gt;.assignment,sensor_event.type = si-&gt;getSensor().getType())<SUB>761</SUB>> ]
-"2325" [label = <(injectSensorData,dev.injectSensorData(&amp;sensor_event))<SUB>762</SUB>> ]
-"2376" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;checkWakeLockState)<SUB>788</SUB>> ]
-"2223" [label = <(FIELD_IDENTIFIER,getLooper,getLooper)<SUB>728</SUB>> ]
-"2234" [label = <(FIELD_IDENTIFIER,resetToNormalMode,resetToNormalMode)<SUB>734</SUB>> ]
-"2269" [label = <(&lt;operator&gt;.logicalNot,!mDataInjectionMode)<SUB>746</SUB>> ]
-"2283" [label = <(&lt;operator&gt;.addressOf,&amp;sensor_event)<SUB>753</SUB>> ]
-"2286" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>753</SUB>> ]
-"2289" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>754</SUB>> ]
-"2294" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(sensor_event.sensor))<SUB>755</SUB>> ]
-"2302" [label = <(&lt;operator&gt;.equals,si == nullptr)<SUB>756</SUB>> ]
-"2310" [label = <(SensorDevice::getInstance,SensorDevice::getInstance())<SUB>760</SUB>> ]
-"2315" [label = <(&lt;operator&gt;.fieldAccess,sensor_event.type)<SUB>761</SUB>> ]
-"2318" [label = <(getType,si-&gt;getSensor().getType())<SUB>761</SUB>> ]
-"2326" [label = <(&lt;operator&gt;.fieldAccess,dev.injectSensorData)<SUB>762</SUB>> ]
-"2329" [label = <(&lt;operator&gt;.addressOf,&amp;sensor_event)<SUB>762</SUB>> ]
-"2378" [label = <(FIELD_IDENTIFIER,checkWakeLockState,checkWakeLockState)<SUB>788</SUB>> ]
-"2272" [label = <(ALOGE,ALOGE(&quot;Data injected in normal mode, dropping event&quot;\012 &quot;package=%s uid=%d&quot;, mPackageName.string(), mUid))<SUB>747</SUB>> ]
-"2279" [label = <(RETURN,return 0;,return 0;)<SUB>750</SUB>> ]
-"2290" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>754</SUB>> ]
-"2295" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>755</SUB>> ]
-"2298" [label = <(&lt;operator&gt;.fieldAccess,sensor_event.sensor)<SUB>755</SUB>> ]
-"2306" [label = <(RETURN,return 1;,return 1;)<SUB>757</SUB>> ]
-"2311" [label = <(&lt;operator&gt;.fieldAccess,SensorDevice::getInstance)<SUB>760</SUB>> ]
-"2317" [label = <(FIELD_IDENTIFIER,type,type)<SUB>761</SUB>> ]
-"2319" [label = <(&lt;operator&gt;.fieldAccess,si-&gt;getSensor().getType)<SUB>761</SUB>> ]
-"2328" [label = <(FIELD_IDENTIFIER,injectSensorData,injectSensorData)<SUB>762</SUB>> ]
-"2334" [label = <(&lt;operator&gt;.equals,numBytesRead == sizeof(uint32_t))<SUB>766</SUB>> ]
-"2274" [label = <(string,mPackageName.string())<SUB>748</SUB>> ]
-"2297" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>755</SUB>> ]
-"2300" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>755</SUB>> ]
-"2313" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>760</SUB>> ]
-"2320" [label = <(getSensor,si-&gt;getSensor())<SUB>761</SUB>> ]
-"2324" [label = <(FIELD_IDENTIFIER,getType,getType)<SUB>761</SUB>> ]
-"2336" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint32_t))<SUB>766</SUB>> ]
-"2340" [label = <(&lt;operator&gt;.assignment,numAcks = 0)<SUB>767</SUB>> ]
-"2343" [label = <(memcpy,memcpy(&amp;numAcks, buf, numBytesRead))<SUB>768</SUB>> ]
-"2275" [label = <(&lt;operator&gt;.fieldAccess,mPackageName.string)<SUB>748</SUB>> ]
-"2321" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>761</SUB>> ]
-"2344" [label = <(&lt;operator&gt;.addressOf,&amp;numAcks)<SUB>768</SUB>> ]
-"2349" [label = <(&lt;operator&gt;.logicalAnd,numAcks &gt; 0 &amp;&amp; numAcks &lt; mWakeLockRefCount)<SUB>772</SUB>> ]
-"2367" [label = <(&lt;operator&gt;.assignment,mWakeLockRefCount = 0)<SUB>782</SUB>> ]
-"2277" [label = <(FIELD_IDENTIFIER,string,string)<SUB>748</SUB>> ]
-"2323" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>761</SUB>> ]
-"2350" [label = <(&lt;operator&gt;.greaterThan,numAcks &gt; 0)<SUB>772</SUB>> ]
-"2353" [label = <(&lt;operator&gt;.lessThan,numAcks &lt; mWakeLockRefCount)<SUB>772</SUB>> ]
-"2357" [label = <(&lt;operator&gt;.assignmentMinus,mWakeLockRefCount -= numAcks)<SUB>773</SUB>> ]
-"2362" [label = <(&lt;operator&gt;.assignment,mWakeLockRefCount = 0)<SUB>775</SUB>> ]
-"2190" [label = <(METHOD,handleEvent)<SUB>718</SUB>> ]
-"2393" [label = <(METHOD_RETURN,int)<SUB>718</SUB>> ]
-  "2391" -> "2393" 
-  "2196" -> "2205" 
-  "2196" -> "2241" 
-  "2241" -> "2252" 
-  "2241" -> "2382" 
-  "2382" -> "2389" 
-  "2382" -> "2391" 
-  "2197" -> "2196" 
-  "2197" -> "2200" 
-  "2200" -> "2196" 
-  "2224" -> "2234" 
-  "2224" -> "2238" 
-  "2238" -> "2393" 
-  "2247" -> "2260" 
-  "2379" -> "2393" 
-  "2386" -> "2391" 
-  "2205" -> "2211" 
-  "2211" -> "2213" 
-  "2213" -> "2216" 
-  "2216" -> "2223" 
-  "2219" -> "2227" 
-  "2225" -> "2224" 
-  "2249" -> "2247" 
-  "2260" -> "2265" 
-  "2371" -> "2378" 
-  "2371" -> "2379" 
-  "2387" -> "2386" 
-  "2220" -> "2219" 
-  "2227" -> "2225" 
-  "2231" -> "2235" 
-  "2235" -> "2238" 
-  "2250" -> "2255" 
-  "2255" -> "2249" 
-  "2263" -> "2269" 
-  "2263" -> "2336" 
-  "2375" -> "2379" 
-  "2389" -> "2387" 
-  "2221" -> "2220" 
-  "2232" -> "2231" 
+"2378" [label = <(RETURN,return 1;,return 1;)<SUB>790</SUB>> ]
+"2183" [label = <(&lt;operator&gt;.logicalOr,events &amp; ALOOPER_EVENT_HANGUP || events &amp; ALOOPER_EVENT_ERROR)<SUB>711</SUB>> ]
+"2228" [label = <(&lt;operator&gt;.and,events &amp; ALOOPER_EVENT_INPUT)<SUB>732</SUB>> ]
+"2369" [label = <(&lt;operator&gt;.and,events &amp; ALOOPER_EVENT_OUTPUT)<SUB>786</SUB>> ]
+"2184" [label = <(&lt;operator&gt;.and,events &amp; ALOOPER_EVENT_HANGUP)<SUB>711</SUB>> ]
+"2187" [label = <(&lt;operator&gt;.and,events &amp; ALOOPER_EVENT_ERROR)<SUB>711</SUB>> ]
+"2211" [label = <(checkWakeLockState,mService-&gt;checkWakeLockState())<SUB>722</SUB>> ]
+"2225" [label = <(RETURN,return 1;,return 1;)<SUB>729</SUB>> ]
+"2234" [label = <(&lt;operator&gt;.assignment,numBytesRead = ::recv(fd, buf, sizeof(buf), MSG_DONTWAIT))<SUB>734</SUB>> ]
+"2366" [label = <(RETURN,return 1;,return 1;)<SUB>783</SUB>> ]
+"2373" [label = <(sendEventsFromCache,mService-&gt;sendEventsFromCache(this))<SUB>788</SUB>> ]
+"2192" [label = <(ALOGD_IF,ALOGD_IF(DEBUG_CONNECTIONS, &quot;%p Looper error %d&quot;, this, fd))<SUB>716</SUB>> ]
+"2198" [label = <(_l,_l(mConnectionLock))<SUB>717</SUB>> ]
+"2200" [label = <(&lt;operator&gt;.assignment,mDead = true)<SUB>718</SUB>> ]
+"2203" [label = <(&lt;operator&gt;.assignment,mWakeLockRefCount = 0)<SUB>719</SUB>> ]
+"2206" [label = <(updateLooperRegistrationLocked,updateLooperRegistrationLocked(mService-&gt;getLooper()))<SUB>720</SUB>> ]
+"2212" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;checkWakeLockState)<SUB>722</SUB>> ]
+"2236" [label = <(::recv,::recv(fd, buf, sizeof(buf), MSG_DONTWAIT))<SUB>734</SUB>> ]
+"2247" [label = <(_l,_l(mConnectionLock))<SUB>736</SUB>> ]
+"2358" [label = <(&lt;operator&gt;.equals,mWakeLockRefCount == 0)<SUB>779</SUB>> ]
+"2374" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;sendEventsFromCache)<SUB>788</SUB>> ]
+"2207" [label = <(getLooper,mService-&gt;getLooper())<SUB>720</SUB>> ]
+"2214" [label = <(FIELD_IDENTIFIER,checkWakeLockState,checkWakeLockState)<SUB>722</SUB>> ]
+"2218" [label = <(resetToNormalMode,mService-&gt;resetToNormalMode())<SUB>726</SUB>> ]
+"2222" [label = <(&lt;operator&gt;.assignment,mDataInjectionMode = false)<SUB>727</SUB>> ]
+"2237" [label = <(&lt;operator&gt;.fieldAccess,::recv)<SUB>734</SUB>> ]
+"2242" [label = <(&lt;operator&gt;.sizeOf,sizeof(buf))<SUB>734</SUB>> ]
+"2250" [label = <(&lt;operator&gt;.equals,numBytesRead == sizeof(sensors_event_t))<SUB>737</SUB>> ]
+"2362" [label = <(checkWakeLockState,mService-&gt;checkWakeLockState())<SUB>780</SUB>> ]
+"2376" [label = <(FIELD_IDENTIFIER,sendEventsFromCache,sendEventsFromCache)<SUB>788</SUB>> ]
+"2208" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getLooper)<SUB>720</SUB>> ]
+"2219" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;resetToNormalMode)<SUB>726</SUB>> ]
+"2239" [label = <(FIELD_IDENTIFIER,recv,recv)<SUB>734</SUB>> ]
+"2252" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>737</SUB>> ]
+"2269" [label = <(memcpy,memcpy(&amp;sensor_event, buf, sizeof(sensors_event_t)))<SUB>745</SUB>> ]
+"2275" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si =\012                        mService-&gt;getSensorInterfaceFromHandle(sensor_event.sensor))<SUB>746</SUB>> ]
+"2296" [label = <(dev,&amp; dev(SensorDevice::getInstance()))<SUB>752</SUB>> ]
+"2301" [label = <(&lt;operator&gt;.assignment,sensor_event.type = si-&gt;getSensor().getType())<SUB>753</SUB>> ]
+"2312" [label = <(injectSensorData,dev.injectSensorData(&amp;sensor_event))<SUB>754</SUB>> ]
+"2363" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;checkWakeLockState)<SUB>780</SUB>> ]
+"2210" [label = <(FIELD_IDENTIFIER,getLooper,getLooper)<SUB>720</SUB>> ]
+"2221" [label = <(FIELD_IDENTIFIER,resetToNormalMode,resetToNormalMode)<SUB>726</SUB>> ]
+"2256" [label = <(&lt;operator&gt;.logicalNot,!mDataInjectionMode)<SUB>738</SUB>> ]
+"2270" [label = <(&lt;operator&gt;.addressOf,&amp;sensor_event)<SUB>745</SUB>> ]
+"2273" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>745</SUB>> ]
+"2276" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>746</SUB>> ]
+"2281" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(sensor_event.sensor))<SUB>747</SUB>> ]
+"2289" [label = <(&lt;operator&gt;.equals,si == nullptr)<SUB>748</SUB>> ]
+"2297" [label = <(SensorDevice::getInstance,SensorDevice::getInstance())<SUB>752</SUB>> ]
+"2302" [label = <(&lt;operator&gt;.fieldAccess,sensor_event.type)<SUB>753</SUB>> ]
+"2305" [label = <(getType,si-&gt;getSensor().getType())<SUB>753</SUB>> ]
+"2313" [label = <(&lt;operator&gt;.fieldAccess,dev.injectSensorData)<SUB>754</SUB>> ]
+"2316" [label = <(&lt;operator&gt;.addressOf,&amp;sensor_event)<SUB>754</SUB>> ]
+"2365" [label = <(FIELD_IDENTIFIER,checkWakeLockState,checkWakeLockState)<SUB>780</SUB>> ]
+"2259" [label = <(ALOGE,ALOGE(&quot;Data injected in normal mode, dropping event&quot;\012 &quot;package=%s uid=%d&quot;, mPackageName.string(), mUid))<SUB>739</SUB>> ]
+"2266" [label = <(RETURN,return 0;,return 0;)<SUB>742</SUB>> ]
+"2277" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>746</SUB>> ]
+"2282" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>747</SUB>> ]
+"2285" [label = <(&lt;operator&gt;.fieldAccess,sensor_event.sensor)<SUB>747</SUB>> ]
+"2293" [label = <(RETURN,return 1;,return 1;)<SUB>749</SUB>> ]
+"2298" [label = <(&lt;operator&gt;.fieldAccess,SensorDevice::getInstance)<SUB>752</SUB>> ]
+"2304" [label = <(FIELD_IDENTIFIER,type,type)<SUB>753</SUB>> ]
+"2306" [label = <(&lt;operator&gt;.fieldAccess,si-&gt;getSensor().getType)<SUB>753</SUB>> ]
+"2315" [label = <(FIELD_IDENTIFIER,injectSensorData,injectSensorData)<SUB>754</SUB>> ]
+"2321" [label = <(&lt;operator&gt;.equals,numBytesRead == sizeof(uint32_t))<SUB>758</SUB>> ]
+"2261" [label = <(string,mPackageName.string())<SUB>740</SUB>> ]
+"2284" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>747</SUB>> ]
+"2287" [label = <(FIELD_IDENTIFIER,sensor,sensor)<SUB>747</SUB>> ]
+"2300" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>752</SUB>> ]
+"2307" [label = <(getSensor,si-&gt;getSensor())<SUB>753</SUB>> ]
+"2311" [label = <(FIELD_IDENTIFIER,getType,getType)<SUB>753</SUB>> ]
+"2323" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint32_t))<SUB>758</SUB>> ]
+"2327" [label = <(&lt;operator&gt;.assignment,numAcks = 0)<SUB>759</SUB>> ]
+"2330" [label = <(memcpy,memcpy(&amp;numAcks, buf, numBytesRead))<SUB>760</SUB>> ]
+"2262" [label = <(&lt;operator&gt;.fieldAccess,mPackageName.string)<SUB>740</SUB>> ]
+"2308" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>753</SUB>> ]
+"2331" [label = <(&lt;operator&gt;.addressOf,&amp;numAcks)<SUB>760</SUB>> ]
+"2336" [label = <(&lt;operator&gt;.logicalAnd,numAcks &gt; 0 &amp;&amp; numAcks &lt; mWakeLockRefCount)<SUB>764</SUB>> ]
+"2354" [label = <(&lt;operator&gt;.assignment,mWakeLockRefCount = 0)<SUB>774</SUB>> ]
+"2264" [label = <(FIELD_IDENTIFIER,string,string)<SUB>740</SUB>> ]
+"2310" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>753</SUB>> ]
+"2337" [label = <(&lt;operator&gt;.greaterThan,numAcks &gt; 0)<SUB>764</SUB>> ]
+"2340" [label = <(&lt;operator&gt;.lessThan,numAcks &lt; mWakeLockRefCount)<SUB>764</SUB>> ]
+"2344" [label = <(&lt;operator&gt;.assignmentMinus,mWakeLockRefCount -= numAcks)<SUB>765</SUB>> ]
+"2349" [label = <(&lt;operator&gt;.assignment,mWakeLockRefCount = 0)<SUB>767</SUB>> ]
+"2177" [label = <(METHOD,handleEvent)<SUB>710</SUB>> ]
+"2380" [label = <(METHOD_RETURN,int)<SUB>710</SUB>> ]
+  "2378" -> "2380" 
+  "2183" -> "2192" 
+  "2183" -> "2228" 
+  "2228" -> "2239" 
+  "2228" -> "2369" 
+  "2369" -> "2376" 
+  "2369" -> "2378" 
+  "2184" -> "2183" 
+  "2184" -> "2187" 
+  "2187" -> "2183" 
+  "2211" -> "2221" 
+  "2211" -> "2225" 
+  "2225" -> "2380" 
+  "2234" -> "2247" 
+  "2366" -> "2380" 
+  "2373" -> "2378" 
+  "2192" -> "2198" 
+  "2198" -> "2200" 
+  "2200" -> "2203" 
+  "2203" -> "2210" 
+  "2206" -> "2214" 
+  "2212" -> "2211" 
+  "2236" -> "2234" 
+  "2247" -> "2252" 
+  "2358" -> "2365" 
+  "2358" -> "2366" 
+  "2374" -> "2373" 
+  "2207" -> "2206" 
+  "2214" -> "2212" 
+  "2218" -> "2222" 
+  "2222" -> "2225" 
+  "2237" -> "2242" 
+  "2242" -> "2236" 
+  "2250" -> "2256" 
+  "2250" -> "2323" 
+  "2362" -> "2366" 
+  "2376" -> "2374" 
+  "2208" -> "2207" 
+  "2219" -> "2218" 
+  "2239" -> "2237" 
   "2252" -> "2250" 
-  "2265" -> "2263" 
-  "2282" -> "2290" 
-  "2288" -> "2302" 
-  "2309" -> "2317" 
-  "2314" -> "2328" 
-  "2325" -> "2371" 
-  "2376" -> "2375" 
-  "2223" -> "2221" 
-  "2234" -> "2232" 
   "2269" -> "2277" 
-  "2269" -> "2283" 
-  "2283" -> "2286" 
-  "2286" -> "2282" 
-  "2289" -> "2297" 
-  "2294" -> "2288" 
-  "2302" -> "2306" 
-  "2302" -> "2313" 
-  "2310" -> "2309" 
-  "2315" -> "2323" 
-  "2318" -> "2314" 
-  "2326" -> "2329" 
-  "2329" -> "2325" 
-  "2378" -> "2376" 
-  "2272" -> "2279" 
-  "2279" -> "2393" 
-  "2290" -> "2289" 
-  "2295" -> "2300" 
-  "2298" -> "2294" 
-  "2306" -> "2393" 
-  "2311" -> "2310" 
-  "2317" -> "2315" 
-  "2319" -> "2318" 
-  "2328" -> "2326" 
-  "2334" -> "2340" 
-  "2334" -> "2367" 
-  "2274" -> "2272" 
-  "2297" -> "2295" 
+  "2275" -> "2289" 
+  "2296" -> "2304" 
+  "2301" -> "2315" 
+  "2312" -> "2358" 
+  "2363" -> "2362" 
+  "2210" -> "2208" 
+  "2221" -> "2219" 
+  "2256" -> "2264" 
+  "2256" -> "2270" 
+  "2270" -> "2273" 
+  "2273" -> "2269" 
+  "2276" -> "2284" 
+  "2281" -> "2275" 
+  "2289" -> "2293" 
+  "2289" -> "2300" 
+  "2297" -> "2296" 
+  "2302" -> "2310" 
+  "2305" -> "2301" 
+  "2313" -> "2316" 
+  "2316" -> "2312" 
+  "2365" -> "2363" 
+  "2259" -> "2266" 
+  "2266" -> "2380" 
+  "2277" -> "2276" 
+  "2282" -> "2287" 
+  "2285" -> "2281" 
+  "2293" -> "2380" 
+  "2298" -> "2297" 
+  "2304" -> "2302" 
+  "2306" -> "2305" 
+  "2315" -> "2313" 
+  "2321" -> "2327" 
+  "2321" -> "2354" 
+  "2261" -> "2259" 
+  "2284" -> "2282" 
+  "2287" -> "2285" 
   "2300" -> "2298" 
-  "2313" -> "2311" 
-  "2320" -> "2324" 
-  "2324" -> "2319" 
-  "2336" -> "2334" 
-  "2340" -> "2344" 
-  "2343" -> "2350" 
-  "2275" -> "2274" 
-  "2321" -> "2320" 
-  "2344" -> "2343" 
-  "2349" -> "2357" 
-  "2349" -> "2362" 
-  "2367" -> "2371" 
-  "2277" -> "2275" 
+  "2307" -> "2311" 
+  "2311" -> "2306" 
   "2323" -> "2321" 
-  "2350" -> "2349" 
-  "2350" -> "2353" 
-  "2353" -> "2349" 
-  "2357" -> "2371" 
-  "2362" -> "2371" 
-  "2190" -> "2197" 
+  "2327" -> "2331" 
+  "2330" -> "2337" 
+  "2262" -> "2261" 
+  "2308" -> "2307" 
+  "2331" -> "2330" 
+  "2336" -> "2344" 
+  "2336" -> "2349" 
+  "2354" -> "2358" 
+  "2264" -> "2262" 
+  "2310" -> "2308" 
+  "2337" -> "2336" 
+  "2337" -> "2340" 
+  "2340" -> "2336" 
+  "2344" -> "2358" 
+  "2349" -> "2358" 
+  "2177" -> "2184" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/72-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/72-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/72-cfg.dot	2023-06-07 19:32:15.427403165 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/72-cfg.dot	2023-06-07 19:32:19.617402775 +0330
@@ -1,137 +1,137 @@
 digraph "computeMaxCacheSizeLocked" {  
-"2398" [label = <(&lt;operator&gt;.assignment,fifoWakeUpSensors = 0)<SUB>802</SUB>> ]
-"2402" [label = <(&lt;operator&gt;.assignment,fifoNonWakeUpSensors = 0)<SUB>803</SUB>> ]
-"2516" [label = <(RETURN,return fifoWakeUpSensors + fifoNonWakeUpSensors;,return fifoWakeUpSensors + fifoNonWakeUpSensors;)<SUB>837</SUB>> ]
-"2505" [label = <(&lt;operator&gt;.equals,fifoWakeUpSensors + fifoNonWakeUpSensors == 0)<SUB>831</SUB>> ]
-"2517" [label = <(&lt;operator&gt;.addition,fifoWakeUpSensors + fifoNonWakeUpSensors)<SUB>837</SUB>> ]
-"2409" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si = mService-&gt;getSensorInterfaceFromHandle(it.first))<SUB>805</SUB>> ]
-"2429" [label = <(&lt;operator&gt;.assignment,&amp; sensor = si-&gt;getSensor())<SUB>809</SUB>> ]
-"2506" [label = <(&lt;operator&gt;.addition,fifoWakeUpSensors + fifoNonWakeUpSensors)<SUB>831</SUB>> ]
-"2511" [label = <(RETURN,return MAX_SOCKET_BUFFER_SIZE_BATCHED/sizeof(sensors_event_t);,return MAX_SOCKET_BUFFER_SIZE_BATCHED/sizeof(sensors_event_t);)<SUB>835</SUB>> ]
-"2410" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>805</SUB>> ]
-"2415" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(it.first))<SUB>805</SUB>> ]
-"2423" [label = <(&lt;operator&gt;.equals,si == nullptr)<SUB>806</SUB>> ]
-"2431" [label = <(getSensor,si-&gt;getSensor())<SUB>809</SUB>> ]
-"2436" [label = <(&lt;operator&gt;.equals,sensor.getFifoReservedEventCount() == sensor.getFifoMaxEventCount())<SUB>810</SUB>> ]
-"2512" [label = <(&lt;operator&gt;.division,MAX_SOCKET_BUFFER_SIZE_BATCHED/sizeof(sensors_event_t))<SUB>835</SUB>> ]
-"2411" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>805</SUB>> ]
-"2416" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>805</SUB>> ]
-"2419" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>805</SUB>> ]
-"2432" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>809</SUB>> ]
-"2437" [label = <(getFifoReservedEventCount,sensor.getFifoReservedEventCount())<SUB>810</SUB>> ]
-"2441" [label = <(getFifoMaxEventCount,sensor.getFifoMaxEventCount())<SUB>810</SUB>> ]
-"2514" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>835</SUB>> ]
-"2418" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>805</SUB>> ]
-"2421" [label = <(FIELD_IDENTIFIER,first,first)<SUB>805</SUB>> ]
-"2434" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>809</SUB>> ]
-"2438" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoReservedEventCount)<SUB>810</SUB>> ]
-"2442" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoMaxEventCount)<SUB>810</SUB>> ]
-"2447" [label = <(isWakeUpSensor,sensor.isWakeUpSensor())<SUB>813</SUB>> ]
-"2440" [label = <(FIELD_IDENTIFIER,getFifoReservedEventCount,getFifoReservedEventCount)<SUB>810</SUB>> ]
-"2444" [label = <(FIELD_IDENTIFIER,getFifoMaxEventCount,getFifoMaxEventCount)<SUB>810</SUB>> ]
-"2448" [label = <(&lt;operator&gt;.fieldAccess,sensor.isWakeUpSensor)<SUB>813</SUB>> ]
-"2452" [label = <(&lt;operator&gt;.assignmentPlus,fifoWakeUpSensors += sensor.getFifoReservedEventCount())<SUB>814</SUB>> ]
-"2469" [label = <(isWakeUpSensor,sensor.isWakeUpSensor())<SUB>820</SUB>> ]
-"2450" [label = <(FIELD_IDENTIFIER,isWakeUpSensor,isWakeUpSensor)<SUB>813</SUB>> ]
-"2454" [label = <(getFifoReservedEventCount,sensor.getFifoReservedEventCount())<SUB>814</SUB>> ]
-"2460" [label = <(&lt;operator&gt;.assignmentPlus,fifoNonWakeUpSensors += sensor.getFifoReservedEventCount())<SUB>816</SUB>> ]
-"2470" [label = <(&lt;operator&gt;.fieldAccess,sensor.isWakeUpSensor)<SUB>820</SUB>> ]
-"2474" [label = <(&lt;operator&gt;.assignment,fifoWakeUpSensors = fifoWakeUpSensors &gt; sensor.getFifoMaxEventCount() ?\012                                          fifoWakeUpSensors : sensor.getFifoMaxEventCount())<SUB>821</SUB>> ]
-"2455" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoReservedEventCount)<SUB>814</SUB>> ]
-"2462" [label = <(getFifoReservedEventCount,sensor.getFifoReservedEventCount())<SUB>816</SUB>> ]
-"2472" [label = <(FIELD_IDENTIFIER,isWakeUpSensor,isWakeUpSensor)<SUB>820</SUB>> ]
-"2476" [label = <(&lt;operator&gt;.conditional,fifoWakeUpSensors &gt; sensor.getFifoMaxEventCount() ?\012                                          fifoWakeUpSensors : sensor.getFifoMaxEventCount())<SUB>821</SUB>> ]
-"2490" [label = <(&lt;operator&gt;.assignment,fifoNonWakeUpSensors = fifoNonWakeUpSensors &gt; sensor.getFifoMaxEventCount() ?\012                                          fifoNonWakeUpSensors : sensor.getFifoMaxEventCount())<SUB>825</SUB>> ]
-"2457" [label = <(FIELD_IDENTIFIER,getFifoReservedEventCount,getFifoReservedEventCount)<SUB>814</SUB>> ]
-"2463" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoReservedEventCount)<SUB>816</SUB>> ]
-"2477" [label = <(&lt;operator&gt;.greaterThan,fifoWakeUpSensors &gt; sensor.getFifoMaxEventCount())<SUB>821</SUB>> ]
-"2484" [label = <(getFifoMaxEventCount,sensor.getFifoMaxEventCount())<SUB>822</SUB>> ]
-"2492" [label = <(&lt;operator&gt;.conditional,fifoNonWakeUpSensors &gt; sensor.getFifoMaxEventCount() ?\012                                          fifoNonWakeUpSensors : sensor.getFifoMaxEventCount())<SUB>825</SUB>> ]
-"2465" [label = <(FIELD_IDENTIFIER,getFifoReservedEventCount,getFifoReservedEventCount)<SUB>816</SUB>> ]
-"2479" [label = <(getFifoMaxEventCount,sensor.getFifoMaxEventCount())<SUB>821</SUB>> ]
-"2485" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoMaxEventCount)<SUB>822</SUB>> ]
-"2493" [label = <(&lt;operator&gt;.greaterThan,fifoNonWakeUpSensors &gt; sensor.getFifoMaxEventCount())<SUB>825</SUB>> ]
-"2500" [label = <(getFifoMaxEventCount,sensor.getFifoMaxEventCount())<SUB>826</SUB>> ]
-"2480" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoMaxEventCount)<SUB>821</SUB>> ]
-"2487" [label = <(FIELD_IDENTIFIER,getFifoMaxEventCount,getFifoMaxEventCount)<SUB>822</SUB>> ]
-"2495" [label = <(getFifoMaxEventCount,sensor.getFifoMaxEventCount())<SUB>825</SUB>> ]
-"2501" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoMaxEventCount)<SUB>826</SUB>> ]
-"2482" [label = <(FIELD_IDENTIFIER,getFifoMaxEventCount,getFifoMaxEventCount)<SUB>821</SUB>> ]
-"2496" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoMaxEventCount)<SUB>825</SUB>> ]
-"2503" [label = <(FIELD_IDENTIFIER,getFifoMaxEventCount,getFifoMaxEventCount)<SUB>826</SUB>> ]
-"2498" [label = <(FIELD_IDENTIFIER,getFifoMaxEventCount,getFifoMaxEventCount)<SUB>825</SUB>> ]
-"2395" [label = <(METHOD,computeMaxCacheSizeLocked)<SUB>801</SUB>> ]
-"2520" [label = <(METHOD_RETURN,int)<SUB>801</SUB>> ]
-  "2398" -> "2402" 
-  "2402" -> "2411" 
-  "2516" -> "2520" 
-  "2505" -> "2514" 
-  "2505" -> "2517" 
-  "2517" -> "2516" 
-  "2409" -> "2423" 
-  "2429" -> "2440" 
-  "2506" -> "2505" 
-  "2511" -> "2520" 
-  "2410" -> "2418" 
-  "2415" -> "2409" 
-  "2423" -> "2434" 
-  "2431" -> "2429" 
-  "2436" -> "2450" 
-  "2436" -> "2472" 
-  "2512" -> "2511" 
-  "2411" -> "2410" 
-  "2416" -> "2421" 
-  "2419" -> "2415" 
-  "2432" -> "2431" 
-  "2437" -> "2444" 
-  "2441" -> "2436" 
-  "2514" -> "2512" 
+"2385" [label = <(&lt;operator&gt;.assignment,fifoWakeUpSensors = 0)<SUB>794</SUB>> ]
+"2389" [label = <(&lt;operator&gt;.assignment,fifoNonWakeUpSensors = 0)<SUB>795</SUB>> ]
+"2503" [label = <(RETURN,return fifoWakeUpSensors + fifoNonWakeUpSensors;,return fifoWakeUpSensors + fifoNonWakeUpSensors;)<SUB>829</SUB>> ]
+"2492" [label = <(&lt;operator&gt;.equals,fifoWakeUpSensors + fifoNonWakeUpSensors == 0)<SUB>823</SUB>> ]
+"2504" [label = <(&lt;operator&gt;.addition,fifoWakeUpSensors + fifoNonWakeUpSensors)<SUB>829</SUB>> ]
+"2396" [label = <(&lt;operator&gt;.assignment,sp&lt;SensorInterface&gt; si = mService-&gt;getSensorInterfaceFromHandle(it.first))<SUB>797</SUB>> ]
+"2416" [label = <(&lt;operator&gt;.assignment,&amp; sensor = si-&gt;getSensor())<SUB>801</SUB>> ]
+"2493" [label = <(&lt;operator&gt;.addition,fifoWakeUpSensors + fifoNonWakeUpSensors)<SUB>823</SUB>> ]
+"2498" [label = <(RETURN,return MAX_SOCKET_BUFFER_SIZE_BATCHED/sizeof(sensors_event_t);,return MAX_SOCKET_BUFFER_SIZE_BATCHED/sizeof(sensors_event_t);)<SUB>827</SUB>> ]
+"2397" [label = <(&lt;operator&gt;.greaterThan,sp&lt;SensorInterface&gt; si)<SUB>797</SUB>> ]
+"2402" [label = <(getSensorInterfaceFromHandle,mService-&gt;getSensorInterfaceFromHandle(it.first))<SUB>797</SUB>> ]
+"2410" [label = <(&lt;operator&gt;.equals,si == nullptr)<SUB>798</SUB>> ]
+"2418" [label = <(getSensor,si-&gt;getSensor())<SUB>801</SUB>> ]
+"2423" [label = <(&lt;operator&gt;.equals,sensor.getFifoReservedEventCount() == sensor.getFifoMaxEventCount())<SUB>802</SUB>> ]
+"2499" [label = <(&lt;operator&gt;.division,MAX_SOCKET_BUFFER_SIZE_BATCHED/sizeof(sensors_event_t))<SUB>827</SUB>> ]
+"2398" [label = <(&lt;operator&gt;.lessThan,sp&lt;SensorInterface)<SUB>797</SUB>> ]
+"2403" [label = <(&lt;operator&gt;.indirectFieldAccess,mService-&gt;getSensorInterfaceFromHandle)<SUB>797</SUB>> ]
+"2406" [label = <(&lt;operator&gt;.fieldAccess,it.first)<SUB>797</SUB>> ]
+"2419" [label = <(&lt;operator&gt;.indirectFieldAccess,si-&gt;getSensor)<SUB>801</SUB>> ]
+"2424" [label = <(getFifoReservedEventCount,sensor.getFifoReservedEventCount())<SUB>802</SUB>> ]
+"2428" [label = <(getFifoMaxEventCount,sensor.getFifoMaxEventCount())<SUB>802</SUB>> ]
+"2501" [label = <(&lt;operator&gt;.sizeOf,sizeof(sensors_event_t))<SUB>827</SUB>> ]
+"2405" [label = <(FIELD_IDENTIFIER,getSensorInterfaceFromHandle,getSensorInterfaceFromHandle)<SUB>797</SUB>> ]
+"2408" [label = <(FIELD_IDENTIFIER,first,first)<SUB>797</SUB>> ]
+"2421" [label = <(FIELD_IDENTIFIER,getSensor,getSensor)<SUB>801</SUB>> ]
+"2425" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoReservedEventCount)<SUB>802</SUB>> ]
+"2429" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoMaxEventCount)<SUB>802</SUB>> ]
+"2434" [label = <(isWakeUpSensor,sensor.isWakeUpSensor())<SUB>805</SUB>> ]
+"2427" [label = <(FIELD_IDENTIFIER,getFifoReservedEventCount,getFifoReservedEventCount)<SUB>802</SUB>> ]
+"2431" [label = <(FIELD_IDENTIFIER,getFifoMaxEventCount,getFifoMaxEventCount)<SUB>802</SUB>> ]
+"2435" [label = <(&lt;operator&gt;.fieldAccess,sensor.isWakeUpSensor)<SUB>805</SUB>> ]
+"2439" [label = <(&lt;operator&gt;.assignmentPlus,fifoWakeUpSensors += sensor.getFifoReservedEventCount())<SUB>806</SUB>> ]
+"2456" [label = <(isWakeUpSensor,sensor.isWakeUpSensor())<SUB>812</SUB>> ]
+"2437" [label = <(FIELD_IDENTIFIER,isWakeUpSensor,isWakeUpSensor)<SUB>805</SUB>> ]
+"2441" [label = <(getFifoReservedEventCount,sensor.getFifoReservedEventCount())<SUB>806</SUB>> ]
+"2447" [label = <(&lt;operator&gt;.assignmentPlus,fifoNonWakeUpSensors += sensor.getFifoReservedEventCount())<SUB>808</SUB>> ]
+"2457" [label = <(&lt;operator&gt;.fieldAccess,sensor.isWakeUpSensor)<SUB>812</SUB>> ]
+"2461" [label = <(&lt;operator&gt;.assignment,fifoWakeUpSensors = fifoWakeUpSensors &gt; sensor.getFifoMaxEventCount() ?\012                                          fifoWakeUpSensors : sensor.getFifoMaxEventCount())<SUB>813</SUB>> ]
+"2442" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoReservedEventCount)<SUB>806</SUB>> ]
+"2449" [label = <(getFifoReservedEventCount,sensor.getFifoReservedEventCount())<SUB>808</SUB>> ]
+"2459" [label = <(FIELD_IDENTIFIER,isWakeUpSensor,isWakeUpSensor)<SUB>812</SUB>> ]
+"2463" [label = <(&lt;operator&gt;.conditional,fifoWakeUpSensors &gt; sensor.getFifoMaxEventCount() ?\012                                          fifoWakeUpSensors : sensor.getFifoMaxEventCount())<SUB>813</SUB>> ]
+"2477" [label = <(&lt;operator&gt;.assignment,fifoNonWakeUpSensors = fifoNonWakeUpSensors &gt; sensor.getFifoMaxEventCount() ?\012                                          fifoNonWakeUpSensors : sensor.getFifoMaxEventCount())<SUB>817</SUB>> ]
+"2444" [label = <(FIELD_IDENTIFIER,getFifoReservedEventCount,getFifoReservedEventCount)<SUB>806</SUB>> ]
+"2450" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoReservedEventCount)<SUB>808</SUB>> ]
+"2464" [label = <(&lt;operator&gt;.greaterThan,fifoWakeUpSensors &gt; sensor.getFifoMaxEventCount())<SUB>813</SUB>> ]
+"2471" [label = <(getFifoMaxEventCount,sensor.getFifoMaxEventCount())<SUB>814</SUB>> ]
+"2479" [label = <(&lt;operator&gt;.conditional,fifoNonWakeUpSensors &gt; sensor.getFifoMaxEventCount() ?\012                                          fifoNonWakeUpSensors : sensor.getFifoMaxEventCount())<SUB>817</SUB>> ]
+"2452" [label = <(FIELD_IDENTIFIER,getFifoReservedEventCount,getFifoReservedEventCount)<SUB>808</SUB>> ]
+"2466" [label = <(getFifoMaxEventCount,sensor.getFifoMaxEventCount())<SUB>813</SUB>> ]
+"2472" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoMaxEventCount)<SUB>814</SUB>> ]
+"2480" [label = <(&lt;operator&gt;.greaterThan,fifoNonWakeUpSensors &gt; sensor.getFifoMaxEventCount())<SUB>817</SUB>> ]
+"2487" [label = <(getFifoMaxEventCount,sensor.getFifoMaxEventCount())<SUB>818</SUB>> ]
+"2467" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoMaxEventCount)<SUB>813</SUB>> ]
+"2474" [label = <(FIELD_IDENTIFIER,getFifoMaxEventCount,getFifoMaxEventCount)<SUB>814</SUB>> ]
+"2482" [label = <(getFifoMaxEventCount,sensor.getFifoMaxEventCount())<SUB>817</SUB>> ]
+"2488" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoMaxEventCount)<SUB>818</SUB>> ]
+"2469" [label = <(FIELD_IDENTIFIER,getFifoMaxEventCount,getFifoMaxEventCount)<SUB>813</SUB>> ]
+"2483" [label = <(&lt;operator&gt;.fieldAccess,sensor.getFifoMaxEventCount)<SUB>817</SUB>> ]
+"2490" [label = <(FIELD_IDENTIFIER,getFifoMaxEventCount,getFifoMaxEventCount)<SUB>818</SUB>> ]
+"2485" [label = <(FIELD_IDENTIFIER,getFifoMaxEventCount,getFifoMaxEventCount)<SUB>817</SUB>> ]
+"2382" [label = <(METHOD,computeMaxCacheSizeLocked)<SUB>793</SUB>> ]
+"2507" [label = <(METHOD_RETURN,int)<SUB>793</SUB>> ]
+  "2385" -> "2389" 
+  "2389" -> "2398" 
+  "2503" -> "2507" 
+  "2492" -> "2501" 
+  "2492" -> "2504" 
+  "2504" -> "2503" 
+  "2396" -> "2410" 
+  "2416" -> "2427" 
+  "2493" -> "2492" 
+  "2498" -> "2507" 
+  "2397" -> "2405" 
+  "2402" -> "2396" 
+  "2410" -> "2421" 
   "2418" -> "2416" 
+  "2423" -> "2437" 
+  "2423" -> "2459" 
+  "2499" -> "2498" 
+  "2398" -> "2397" 
+  "2403" -> "2408" 
+  "2406" -> "2402" 
+  "2419" -> "2418" 
+  "2424" -> "2431" 
+  "2428" -> "2423" 
+  "2501" -> "2499" 
+  "2405" -> "2403" 
+  "2408" -> "2406" 
   "2421" -> "2419" 
-  "2434" -> "2432" 
-  "2438" -> "2437" 
+  "2425" -> "2424" 
+  "2429" -> "2428" 
+  "2434" -> "2444" 
+  "2434" -> "2452" 
+  "2427" -> "2425" 
+  "2431" -> "2429" 
+  "2435" -> "2434" 
+  "2439" -> "2398" 
+  "2439" -> "2493" 
+  "2456" -> "2469" 
+  "2456" -> "2485" 
+  "2437" -> "2435" 
+  "2441" -> "2439" 
+  "2447" -> "2398" 
+  "2447" -> "2493" 
+  "2457" -> "2456" 
+  "2461" -> "2398" 
+  "2461" -> "2493" 
   "2442" -> "2441" 
-  "2447" -> "2457" 
-  "2447" -> "2465" 
-  "2440" -> "2438" 
+  "2449" -> "2447" 
+  "2459" -> "2457" 
+  "2463" -> "2461" 
+  "2477" -> "2398" 
+  "2477" -> "2493" 
   "2444" -> "2442" 
-  "2448" -> "2447" 
-  "2452" -> "2411" 
-  "2452" -> "2506" 
-  "2469" -> "2482" 
-  "2469" -> "2498" 
-  "2450" -> "2448" 
-  "2454" -> "2452" 
-  "2460" -> "2411" 
-  "2460" -> "2506" 
-  "2470" -> "2469" 
-  "2474" -> "2411" 
-  "2474" -> "2506" 
-  "2455" -> "2454" 
-  "2462" -> "2460" 
-  "2472" -> "2470" 
-  "2476" -> "2474" 
-  "2490" -> "2411" 
-  "2490" -> "2506" 
-  "2457" -> "2455" 
-  "2463" -> "2462" 
-  "2477" -> "2476" 
-  "2477" -> "2487" 
-  "2484" -> "2476" 
-  "2492" -> "2490" 
-  "2465" -> "2463" 
+  "2450" -> "2449" 
+  "2464" -> "2463" 
+  "2464" -> "2474" 
+  "2471" -> "2463" 
   "2479" -> "2477" 
-  "2485" -> "2484" 
-  "2493" -> "2492" 
-  "2493" -> "2503" 
-  "2500" -> "2492" 
+  "2452" -> "2450" 
+  "2466" -> "2464" 
+  "2472" -> "2471" 
   "2480" -> "2479" 
-  "2487" -> "2485" 
-  "2495" -> "2493" 
-  "2501" -> "2500" 
+  "2480" -> "2490" 
+  "2487" -> "2479" 
+  "2467" -> "2466" 
+  "2474" -> "2472" 
   "2482" -> "2480" 
-  "2496" -> "2495" 
-  "2503" -> "2501" 
-  "2498" -> "2496" 
-  "2395" -> "2398" 
+  "2488" -> "2487" 
+  "2469" -> "2467" 
+  "2483" -> "2482" 
+  "2490" -> "2488" 
+  "2485" -> "2483" 
+  "2382" -> "2385" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/73-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/73-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/73-cfg.dot	2023-06-07 19:32:15.427403165 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/73-cfg.dot	2023-06-07 19:32:19.617402775 +0330
@@ -1,7 +1,7 @@
 digraph "&lt;global&gt;" {  
-"2527" [label = <(UNKNOWN,namespace android {\012\012class SensorService;\012\012class SensorService::SensorEventConnection:\012 public BnSensorEventConnection, public LooperCallback {\012\012 friend class SensorService;\012\012public:\012 SensorEventConnection(const sp&lt;SensorService&gt;&amp; service, uid_t uid, String8 packageName,\012 bool isDataInjectionMode, const String16&amp; opPackageName);\012\012 status_t sendEvents(sensors_event_t const* buffer, size_t count, sensors_event_t* scratch,\012                        wp&lt;const SensorEventConnection&gt; const * mapFlushEventsToConnections = nullptr);\012 bool hasSensor(int32_t handle) const;\012 bool hasAnySensor() const;\012 bool hasOneShotSensors() const;\012 bool addSensor(int32_t handle);\012 bool removeSensor(int32_t handle);\012    std::vector&lt;int32_t&gt; getActiveSensorHandles() const;\012 void setFirstFlushPending(int32_t handle, bool value);\012 void dump(String8&amp; result);\012 void dump(util::ProtoOutputStream* proto) const;\012 bool needsWakeLock();\012 void resetWakeLockRefCount();\012 String8 getPackageName() const;\012\012 uid_t getUid() const { return mUid; }\012\012private:\012 virtual ~SensorEventConnection();\012 virtual void onFirstRef();\012 virtual sp&lt;BitTube&gt; getSensorChannel() const;\012 virtual status_t enableDisable(int handle, bool enabled, nsecs_t samplingPeriodNs,\012 nsecs_t maxBatchReportLatencyNs, int reservedFlags);\012 virtual status_t setEventRate(int handle, nsecs_t samplingPeriodNs);\012 virtual status_t flush();\012 virtual int32_t configureChannel(int handle, int rateLevel);\012 virtual void destroy();\012\012 // Count the number of flush complete events which are about to be dropped in the buffer.\012 // Increment mPendingFlushEventsToSend in mSensorInfo. These flush complete events will be sent\012 // separately before the next batch of events.\012 void countFlushCompleteEventsLocked(sensors_event_t const* scratch, int numEventsDropped);\012\012 // Check if there are any wake up events in the buffer. If yes, return the index of the first\012 // wake_up sensor event in the buffer else return -1.  This wake_up sensor event will have the\012 // flag WAKE_UP_SENSOR_EVENT_NEEDS_ACK set. Exactly one event per packet will have the wake_up\012 // flag set. SOCK_SEQPACKET ensures that either the entire packet is read or dropped.\012 int findWakeUpSensorEventLocked(sensors_event_t const* scratch, int count);\012\012 // Send pending flush_complete events. There may have been flush_complete_events that are\012 // dropped which need to be sent separately before other events. On older HALs (1_0) this method\012 // emulates the behavior of flush().\012 void sendPendingFlushEventsLocked();\012\012 // Writes events from mEventCache to the socket.\012 void writeToSocketFromCache();\012\012 // Compute the approximate cache size from the FIFO sizes of various sensors registered for this\012 // connection. Wake up and non-wake up sensors have separate FIFOs but FIFO may be shared\012 // amongst wake-up sensors and non-wake up sensors.\012 int computeMaxCacheSizeLocked() const;\012\012 // When more sensors register, the maximum cache size desired may change.  Compute max cache\012 // size, reallocate memory and copy over events from the older cache.\012 void reAllocateCacheLocked(sensors_event_t const* scratch, int count);\012\012 // Add the events to the cache. If the cache would be exceeded, drop events at the beginning of\012 // the cache.\012 void appendEventsToCacheLocked(sensors_event_t const* events, int count);\012\012 // LooperCallback method. If there is data to read on this fd, it is an ack from the app that it\012 // has read events from a wake up sensor, decrement mWakeLockRefCount.  If this fd is available\012 // for writing send the data from the cache.\012 virtual int handleEvent(int fd, int events, void* data);\012\012 // Increment mPendingFlushEventsToSend for the given handle if the connection has sensor access.\012 // Returns true if this connection does have sensor access.\012 bool incrementPendingFlushCountIfHasAccess(int32_t handle);\012\012 // Add or remove the file descriptor associated with the BitTube to the looper. If mDead is set\012 // to true or there are no more sensors for this connection, the file descriptor is removed if\012 // it has been previously added to the Looper. Depending on the state of the connection FD may\012 // be added to the Looper. The flags to set are determined by the internal state of the\012 // connection. FDs are added to the looper when wake-up sensors are registered (to poll for\012 // acknowledgements) and when write fails on the socket when there are too many error and the\012 // other end hangs up or when this client unregisters for this connection.\012 void updateLooperRegistration(const sp&lt;Looper&gt;&amp; looper); void\012            updateLooperRegistrationLocked(const sp&lt;Looper&gt;&amp; looper);\012\012 // Returns whether sensor access is available based on both the uid being active and sensor\012 // privacy not being enabled.\012 bool hasSensorAccess();\012\012 // Call noteOp for the sensor if the sensor requires a permission\012 bool noteOpIfRequired(const sensors_event_t&amp; event);\012\012    sp&lt;SensorService&gt; const mService;\012    sp&lt;BitTube&gt; mChannel;\012 uid_t mUid;\012 mutable Mutex mConnectionLock;\012 // Number of events from wake up sensors which are still pending and haven't been delivered to\012 // the corresponding application. It is incremented by one unit for each write to the socket.\012 uint32_t mWakeLockRefCount;\012\012 // If this flag is set to true, it means that the file descriptor associated with the BitTube\012 // has been added to the Looper in SensorService. This flag is typically set when this\012 // connection has wake-up sensors associated with it or when write has failed on this connection\012 // and we're storing some events in the cache.\012 bool mHasLooperCallbacks;\012 // If there are any errors associated with the Looper this flag is set to true and\012 // mWakeLockRefCount is reset to zero. needsWakeLock method will always return false, if this\012 // flag is set.\012 bool mDead;\012\012 bool mDataInjectionMode;\012 struct FlushInfo {\012 // The number of flush complete events dropped for this sensor is stored here.  They are\012 // sent separately before the next batch of events.\012 int mPendingFlushEventsToSend;\012\012 // Every activate is preceded by a flush. Only after the first flush complete is received,\012 // the events for the sensor are sent on that *connection*.\012 bool mFirstFlushPending;\012\012 FlushInfo() : mPendingFlushEventsToSend(0), mFirstFlushPending(false) {}\012 };\012 // protected by SensorService::mLock. Key for this map is the sensor handle.\012    std::unordered_map&lt;int32_t, FlushInfo&gt; mSensorInfo;\012\012 sensors_event_t *mEventCache;\012 int mCacheSize, mMaxCacheSize;\012 int64_t mTimeOfLastEventDrop;\012 int mEventsDropped;\012 String8 mPackageName;\012 const String16 mOpPackageName;\012 int mTargetSdk;\012#if DEBUG_CONNECTIONS\012 int mEventsReceived, mEventsSent, mEventsSentFromCache;\012 int mTotalAcksNeeded, mTotalAcksReceived;\012#endif\012\012 // Used to track if this object was inappropriately used after destroy().\012    std::atomic_bool mDestroyed;\012\012 // Store a mapping of sensor handles to required AppOp for a sensor. This map only contains a\012 // valid mapping for sensors that require a permission in order to reduce the lookup time.\012    std::unordered_map&lt;int32_t, int32_t&gt; mHandleToAppOp;\012};\012\012},namespace android {\012\012class SensorService;\012\012class SensorService::SensorEventConnection:\012 public BnSensorEventConnection, public LooperCallback {\012\012 friend class SensorService;\012\012public:\012 SensorEventConnection(const sp&lt;SensorService&gt;&amp; service, uid_t uid, String8 packageName,\012 bool isDataInjectionMode, const String16&amp; opPackageName);\012\012 status_t sendEvents(sensors_event_t const* buffer, size_t count, sensors_event_t* scratch,\012                        wp&lt;const SensorEventConnection&gt; const * mapFlushEventsToConnections = nullptr);\012 bool hasSensor(int32_t handle) const;\012 bool hasAnySensor() const;\012 bool hasOneShotSensors() const;\012 bool addSensor(int32_t handle);\012 bool removeSensor(int32_t handle);\012    std::vector&lt;int32_t&gt; getActiveSensorHandles() const;\012 void setFirstFlushPending(int32_t handle, bool value);\012 void dump(String8&amp; result);\012 void dump(util::ProtoOutputStream* proto) const;\012 bool needsWakeLock();\012 void resetWakeLockRefCount();\012 String8 getPackageName() const;\012\012 uid_t getUid() const { return mUid; }\012\012private:\012 virtual ~SensorEventConnection();\012 virtual void onFirstRef();\012 virtual sp&lt;BitTube&gt; getSensorChannel() const;\012 virtual status_t enableDisable(int handle, bool enabled, nsecs_t samplingPeriodNs,\012 nsecs_t maxBatchReportLatencyNs, int reservedFlags);\012 virtual status_t setEventRate(int handle, nsecs_t samplingPeriodNs);\012 virtual status_t flush();\012 virtual int32_t configureChannel(int handle, int rateLevel);\012 virtual void destroy();\012\012 // Count the number of flush complete events which are about to be dropped in the buffer.\012 // Increment mPendingFlushEventsToSend in mSensorInfo. These flush complete events will be sent\012 // separately before the next batch of events.\012 void countFlushCompleteEventsLocked(sensors_event_t const* scratch, int numEventsDropped);\012\012 // Check if there are any wake up events in the buffer. If yes, return the index of the first\012 // wake_up sensor event in the buffer else return -1.  This wake_up sensor event will have the\012 // flag WAKE_UP_SENSOR_EVENT_NEEDS_ACK set. Exactly one event per packet will have the wake_up\012 // flag set. SOCK_SEQPACKET ensures that either the entire packet is read or dropped.\012 int findWakeUpSensorEventLocked(sensors_event_t const* scratch, int count);\012\012 // Send pending flush_complete events. There may have been flush_complete_events that are\012 // dropped which need to be sent separately before other events. On older HALs (1_0) this method\012 // emulates the behavior of flush().\012 void sendPendingFlushEventsLocked();\012\012 // Writes events from mEventCache to the socket.\012 void writeToSocketFromCache();\012\012 // Compute the approximate cache size from the FIFO sizes of various sensors registered for this\012 // connection. Wake up and non-wake up sensors have separate FIFOs but FIFO may be shared\012 // amongst wake-up sensors and non-wake up sensors.\012 int computeMaxCacheSizeLocked() const;\012\012 // When more sensors register, the maximum cache size desired may change.  Compute max cache\012 // size, reallocate memory and copy over events from the older cache.\012 void reAllocateCacheLocked(sensors_event_t const* scratch, int count);\012\012 // Add the events to the cache. If the cache would be exceeded, drop events at the beginning of\012 // the cache.\012 void appendEventsToCacheLocked(sensors_event_t const* events, int count);\012\012 // LooperCallback method. If there is data to read on this fd, it is an ack from the app that it\012 // has read events from a wake up sensor, decrement mWakeLockRefCount.  If this fd is available\012 // for writing send the data from the cache.\012 virtual int handleEvent(int fd, int events, void* data);\012\012 // Increment mPendingFlushEventsToSend for the given handle if the connection has sensor access.\012 // Returns true if this connection does have sensor access.\012 bool incrementPendingFlushCountIfHasAccess(int32_t handle);\012\012 // Add or remove the file descriptor associated with the BitTube to the looper. If mDead is set\012 // to true or there are no more sensors for this connection, the file descriptor is removed if\012 // it has been previously added to the Looper. Depending on the state of the connection FD may\012 // be added to the Looper. The flags to set are determined by the internal state of the\012 // connection. FDs are added to the looper when wake-up sensors are registered (to poll for\012 // acknowledgements) and when write fails on the socket when there are too many error and the\012 // other end hangs up or when this client unregisters for this connection.\012 void updateLooperRegistration(const sp&lt;Looper&gt;&amp; looper); void\012            updateLooperRegistrationLocked(const sp&lt;Looper&gt;&amp; looper);\012\012 // Returns whether sensor access is available based on both the uid being active and sensor\012 // privacy not being enabled.\012 bool hasSensorAccess();\012\012 // Call noteOp for the sensor if the sensor requires a permission\012 bool noteOpIfRequired(const sensors_event_t&amp; event);\012\012    sp&lt;SensorService&gt; const mService;\012    sp&lt;BitTube&gt; mChannel;\012 uid_t mUid;\012 mutable Mutex mConnectionLock;\012 // Number of events from wake up sensors which are still pending and haven't been delivered to\012 // the corresponding application. It is incremented by one unit for each write to the socket.\012 uint32_t mWakeLockRefCount;\012\012 // If this flag is set to true, it means that the file descriptor associated with the BitTube\012 // has been added to the Looper in SensorService. This flag is typically set when this\012 // connection has wake-up sensors associated with it or when write has failed on this connection\012 // and we're storing some events in the cache.\012 bool mHasLooperCallbacks;\012 // If there are any errors associated with the Looper this flag is set to true and\012 // mWakeLockRefCount is reset to zero. needsWakeLock method will always return false, if this\012 // flag is set.\012 bool mDead;\012\012 bool mDataInjectionMode;\012 struct FlushInfo {\012 // The number of flush complete events dropped for this sensor is stored here.  They are\012 // sent separately before the next batch of events.\012 int mPendingFlushEventsToSend;\012\012 // Every activate is preceded by a flush. Only after the first flush complete is received,\012 // the events for the sensor are sent on that *connection*.\012 bool mFirstFlushPending;\012\012 FlushInfo() : mPendingFlushEventsToSend(0), mFirstFlushPending(false) {}\012 };\012 // protected by SensorService::mLock. Key for this map is the sensor handle.\012    std::unordered_map&lt;int32_t, FlushInfo&gt; mSensorInfo;\012\012 sensors_event_t *mEventCache;\012 int mCacheSize, mMaxCacheSize;\012 int64_t mTimeOfLastEventDrop;\012 int mEventsDropped;\012 String8 mPackageName;\012 const String16 mOpPackageName;\012 int mTargetSdk;\012#if DEBUG_CONNECTIONS\012 int mEventsReceived, mEventsSent, mEventsSentFromCache;\012 int mTotalAcksNeeded, mTotalAcksReceived;\012#endif\012\012 // Used to track if this object was inappropriately used after destroy().\012    std::atomic_bool mDestroyed;\012\012 // Store a mapping of sensor handles to required AppOp for a sensor. This map only contains a\012 // valid mapping for sensors that require a permission in order to reduce the lookup time.\012    std::unordered_map&lt;int32_t, int32_t&gt; mHandleToAppOp;\012};\012\012})<SUB>42</SUB>> ]
-"2525" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"2528" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
-  "2527" -> "2528" 
-  "2525" -> "2527" 
+"2514" [label = <(UNKNOWN,namespace android {\012\012class SensorService;\012\012class SensorService::SensorEventConnection:\012 public BnSensorEventConnection, public LooperCallback {\012\012 friend class SensorService;\012\012public:\012 SensorEventConnection(const sp&lt;SensorService&gt;&amp; service, uid_t uid, String8 packageName,\012 bool isDataInjectionMode, const String16&amp; opPackageName);\012\012 status_t sendEvents(sensors_event_t const* buffer, size_t count, sensors_event_t* scratch,\012                        wp&lt;const SensorEventConnection&gt; const * mapFlushEventsToConnections = nullptr);\012 bool hasSensor(int32_t handle) const;\012 bool hasAnySensor() const;\012 bool hasOneShotSensors() const;\012 bool addSensor(int32_t handle);\012 bool removeSensor(int32_t handle);\012    std::vector&lt;int32_t&gt; getActiveSensorHandles() const;\012 void setFirstFlushPending(int32_t handle, bool value);\012 void dump(String8&amp; result);\012 void dump(util::ProtoOutputStream* proto) const;\012 bool needsWakeLock();\012 void resetWakeLockRefCount();\012 String8 getPackageName() const;\012\012 uid_t getUid() const { return mUid; }\012\012private:\012 virtual ~SensorEventConnection();\012 virtual void onFirstRef();\012 virtual sp&lt;BitTube&gt; getSensorChannel() const;\012 virtual status_t enableDisable(int handle, bool enabled, nsecs_t samplingPeriodNs,\012 nsecs_t maxBatchReportLatencyNs, int reservedFlags);\012 virtual status_t setEventRate(int handle, nsecs_t samplingPeriodNs);\012 virtual status_t flush();\012 virtual int32_t configureChannel(int handle, int rateLevel);\012 virtual void destroy();\012\012 // Count the number of flush complete events which are about to be dropped in the buffer.\012 // Increment mPendingFlushEventsToSend in mSensorInfo. These flush complete events will be sent\012 // separately before the next batch of events.\012 void countFlushCompleteEventsLocked(sensors_event_t const* scratch, int numEventsDropped);\012\012 // Check if there are any wake up events in the buffer. If yes, return the index of the first\012 // wake_up sensor event in the buffer else return -1.  This wake_up sensor event will have the\012 // flag WAKE_UP_SENSOR_EVENT_NEEDS_ACK set. Exactly one event per packet will have the wake_up\012 // flag set. SOCK_SEQPACKET ensures that either the entire packet is read or dropped.\012 int findWakeUpSensorEventLocked(sensors_event_t const* scratch, int count);\012\012 // Send pending flush_complete events. There may have been flush_complete_events that are\012 // dropped which need to be sent separately before other events. On older HALs (1_0) this method\012 // emulates the behavior of flush().\012 void sendPendingFlushEventsLocked();\012\012 // Writes events from mEventCache to the socket.\012 void writeToSocketFromCache();\012\012 // Compute the approximate cache size from the FIFO sizes of various sensors registered for this\012 // connection. Wake up and non-wake up sensors have separate FIFOs but FIFO may be shared\012 // amongst wake-up sensors and non-wake up sensors.\012 int computeMaxCacheSizeLocked() const;\012\012 // When more sensors register, the maximum cache size desired may change.  Compute max cache\012 // size, reallocate memory and copy over events from the older cache.\012 void reAllocateCacheLocked(sensors_event_t const* scratch, int count);\012\012 // Add the events to the cache. If the cache would be exceeded, drop events at the beginning of\012 // the cache.\012 void appendEventsToCacheLocked(sensors_event_t const* events, int count);\012\012 // LooperCallback method. If there is data to read on this fd, it is an ack from the app that it\012 // has read events from a wake up sensor, decrement mWakeLockRefCount.  If this fd is available\012 // for writing send the data from the cache.\012 virtual int handleEvent(int fd, int events, void* data);\012\012 // Increment mPendingFlushEventsToSend for the given handle if the connection has sensor access.\012 // Returns true if this connection does have sensor access.\012 bool incrementPendingFlushCountIfHasAccess(int32_t handle);\012\012 // Add or remove the file descriptor associated with the BitTube to the looper. If mDead is set\012 // to true or there are no more sensors for this connection, the file descriptor is removed if\012 // it has been previously added to the Looper. Depending on the state of the connection FD may\012 // be added to the Looper. The flags to set are determined by the internal state of the\012 // connection. FDs are added to the looper when wake-up sensors are registered (to poll for\012 // acknowledgements) and when write fails on the socket when there are too many error and the\012 // other end hangs up or when this client unregisters for this connection.\012 void updateLooperRegistration(const sp&lt;Looper&gt;&amp; looper); void\012            updateLooperRegistrationLocked(const sp&lt;Looper&gt;&amp; looper);\012\012 // Returns whether sensor access is available based on both the uid being active and sensor\012 // privacy not being enabled.\012 bool hasSensorAccess();\012\012 // Call noteOp for the sensor if the sensor requires a permission\012 bool noteOpIfRequired(const sensors_event_t&amp; event);\012\012    sp&lt;SensorService&gt; const mService;\012    sp&lt;BitTube&gt; mChannel;\012 uid_t mUid;\012 mutable Mutex mConnectionLock;\012 // Number of events from wake up sensors which are still pending and haven't been delivered to\012 // the corresponding application. It is incremented by one unit for each write to the socket.\012 uint32_t mWakeLockRefCount;\012\012 // If this flag is set to true, it means that the file descriptor associated with the BitTube\012 // has been added to the Looper in SensorService. This flag is typically set when this\012 // connection has wake-up sensors associated with it or when write has failed on this connection\012 // and we're storing some events in the cache.\012 bool mHasLooperCallbacks;\012 // If there are any errors associated with the Looper this flag is set to true and\012 // mWakeLockRefCount is reset to zero. needsWakeLock method will always return false, if this\012 // flag is set.\012 bool mDead;\012\012 bool mDataInjectionMode;\012 struct FlushInfo {\012 // The number of flush complete events dropped for this sensor is stored here.  They are\012 // sent separately before the next batch of events.\012 int mPendingFlushEventsToSend;\012\012 // Every activate is preceded by a flush. Only after the first flush complete is received,\012 // the events for the sensor are sent on that *connection*.\012 bool mFirstFlushPending;\012\012 FlushInfo() : mPendingFlushEventsToSend(0), mFirstFlushPending(false) {}\012 };\012 // protected by SensorService::mLock. Key for this map is the sensor handle.\012    std::unordered_map&lt;int32_t, FlushInfo&gt; mSensorInfo;\012\012 sensors_event_t *mEventCache;\012 int mCacheSize, mMaxCacheSize;\012 int64_t mTimeOfLastEventDrop;\012 int mEventsDropped;\012 String8 mPackageName;\012 const String16 mOpPackageName;\012 int mTargetSdk;\012#if DEBUG_CONNECTIONS\012 int mEventsReceived, mEventsSent, mEventsSentFromCache;\012 int mTotalAcksNeeded, mTotalAcksReceived;\012#endif\012\012 mutable Mutex mDestroyLock;\012 bool mDestroyed;\012\012 // Store a mapping of sensor handles to required AppOp for a sensor. This map only contains a\012 // valid mapping for sensors that require a permission in order to reduce the lookup time.\012    std::unordered_map&lt;int32_t, int32_t&gt; mHandleToAppOp;\012};\012\012},namespace android {\012\012class SensorService;\012\012class SensorService::SensorEventConnection:\012 public BnSensorEventConnection, public LooperCallback {\012\012 friend class SensorService;\012\012public:\012 SensorEventConnection(const sp&lt;SensorService&gt;&amp; service, uid_t uid, String8 packageName,\012 bool isDataInjectionMode, const String16&amp; opPackageName);\012\012 status_t sendEvents(sensors_event_t const* buffer, size_t count, sensors_event_t* scratch,\012                        wp&lt;const SensorEventConnection&gt; const * mapFlushEventsToConnections = nullptr);\012 bool hasSensor(int32_t handle) const;\012 bool hasAnySensor() const;\012 bool hasOneShotSensors() const;\012 bool addSensor(int32_t handle);\012 bool removeSensor(int32_t handle);\012    std::vector&lt;int32_t&gt; getActiveSensorHandles() const;\012 void setFirstFlushPending(int32_t handle, bool value);\012 void dump(String8&amp; result);\012 void dump(util::ProtoOutputStream* proto) const;\012 bool needsWakeLock();\012 void resetWakeLockRefCount();\012 String8 getPackageName() const;\012\012 uid_t getUid() const { return mUid; }\012\012private:\012 virtual ~SensorEventConnection();\012 virtual void onFirstRef();\012 virtual sp&lt;BitTube&gt; getSensorChannel() const;\012 virtual status_t enableDisable(int handle, bool enabled, nsecs_t samplingPeriodNs,\012 nsecs_t maxBatchReportLatencyNs, int reservedFlags);\012 virtual status_t setEventRate(int handle, nsecs_t samplingPeriodNs);\012 virtual status_t flush();\012 virtual int32_t configureChannel(int handle, int rateLevel);\012 virtual void destroy();\012\012 // Count the number of flush complete events which are about to be dropped in the buffer.\012 // Increment mPendingFlushEventsToSend in mSensorInfo. These flush complete events will be sent\012 // separately before the next batch of events.\012 void countFlushCompleteEventsLocked(sensors_event_t const* scratch, int numEventsDropped);\012\012 // Check if there are any wake up events in the buffer. If yes, return the index of the first\012 // wake_up sensor event in the buffer else return -1.  This wake_up sensor event will have the\012 // flag WAKE_UP_SENSOR_EVENT_NEEDS_ACK set. Exactly one event per packet will have the wake_up\012 // flag set. SOCK_SEQPACKET ensures that either the entire packet is read or dropped.\012 int findWakeUpSensorEventLocked(sensors_event_t const* scratch, int count);\012\012 // Send pending flush_complete events. There may have been flush_complete_events that are\012 // dropped which need to be sent separately before other events. On older HALs (1_0) this method\012 // emulates the behavior of flush().\012 void sendPendingFlushEventsLocked();\012\012 // Writes events from mEventCache to the socket.\012 void writeToSocketFromCache();\012\012 // Compute the approximate cache size from the FIFO sizes of various sensors registered for this\012 // connection. Wake up and non-wake up sensors have separate FIFOs but FIFO may be shared\012 // amongst wake-up sensors and non-wake up sensors.\012 int computeMaxCacheSizeLocked() const;\012\012 // When more sensors register, the maximum cache size desired may change.  Compute max cache\012 // size, reallocate memory and copy over events from the older cache.\012 void reAllocateCacheLocked(sensors_event_t const* scratch, int count);\012\012 // Add the events to the cache. If the cache would be exceeded, drop events at the beginning of\012 // the cache.\012 void appendEventsToCacheLocked(sensors_event_t const* events, int count);\012\012 // LooperCallback method. If there is data to read on this fd, it is an ack from the app that it\012 // has read events from a wake up sensor, decrement mWakeLockRefCount.  If this fd is available\012 // for writing send the data from the cache.\012 virtual int handleEvent(int fd, int events, void* data);\012\012 // Increment mPendingFlushEventsToSend for the given handle if the connection has sensor access.\012 // Returns true if this connection does have sensor access.\012 bool incrementPendingFlushCountIfHasAccess(int32_t handle);\012\012 // Add or remove the file descriptor associated with the BitTube to the looper. If mDead is set\012 // to true or there are no more sensors for this connection, the file descriptor is removed if\012 // it has been previously added to the Looper. Depending on the state of the connection FD may\012 // be added to the Looper. The flags to set are determined by the internal state of the\012 // connection. FDs are added to the looper when wake-up sensors are registered (to poll for\012 // acknowledgements) and when write fails on the socket when there are too many error and the\012 // other end hangs up or when this client unregisters for this connection.\012 void updateLooperRegistration(const sp&lt;Looper&gt;&amp; looper); void\012            updateLooperRegistrationLocked(const sp&lt;Looper&gt;&amp; looper);\012\012 // Returns whether sensor access is available based on both the uid being active and sensor\012 // privacy not being enabled.\012 bool hasSensorAccess();\012\012 // Call noteOp for the sensor if the sensor requires a permission\012 bool noteOpIfRequired(const sensors_event_t&amp; event);\012\012    sp&lt;SensorService&gt; const mService;\012    sp&lt;BitTube&gt; mChannel;\012 uid_t mUid;\012 mutable Mutex mConnectionLock;\012 // Number of events from wake up sensors which are still pending and haven't been delivered to\012 // the corresponding application. It is incremented by one unit for each write to the socket.\012 uint32_t mWakeLockRefCount;\012\012 // If this flag is set to true, it means that the file descriptor associated with the BitTube\012 // has been added to the Looper in SensorService. This flag is typically set when this\012 // connection has wake-up sensors associated with it or when write has failed on this connection\012 // and we're storing some events in the cache.\012 bool mHasLooperCallbacks;\012 // If there are any errors associated with the Looper this flag is set to true and\012 // mWakeLockRefCount is reset to zero. needsWakeLock method will always return false, if this\012 // flag is set.\012 bool mDead;\012\012 bool mDataInjectionMode;\012 struct FlushInfo {\012 // The number of flush complete events dropped for this sensor is stored here.  They are\012 // sent separately before the next batch of events.\012 int mPendingFlushEventsToSend;\012\012 // Every activate is preceded by a flush. Only after the first flush complete is received,\012 // the events for the sensor are sent on that *connection*.\012 bool mFirstFlushPending;\012\012 FlushInfo() : mPendingFlushEventsToSend(0), mFirstFlushPending(false) {}\012 };\012 // protected by SensorService::mLock. Key for this map is the sensor handle.\012    std::unordered_map&lt;int32_t, FlushInfo&gt; mSensorInfo;\012\012 sensors_event_t *mEventCache;\012 int mCacheSize, mMaxCacheSize;\012 int64_t mTimeOfLastEventDrop;\012 int mEventsDropped;\012 String8 mPackageName;\012 const String16 mOpPackageName;\012 int mTargetSdk;\012#if DEBUG_CONNECTIONS\012 int mEventsReceived, mEventsSent, mEventsSentFromCache;\012 int mTotalAcksNeeded, mTotalAcksReceived;\012#endif\012\012 mutable Mutex mDestroyLock;\012 bool mDestroyed;\012\012 // Store a mapping of sensor handles to required AppOp for a sensor. This map only contains a\012 // valid mapping for sensors that require a permission in order to reduce the lookup time.\012    std::unordered_map&lt;int32_t, int32_t&gt; mHandleToAppOp;\012};\012\012})<SUB>41</SUB>> ]
+"2512" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"2515" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+  "2514" -> "2515" 
+  "2512" -> "2514" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/74-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/74-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/74-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/74-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;global&gt;" {  
-"2590" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"2592" [label = <(METHOD_RETURN,ANY)> ]
-  "2590" -> "2592" 
+"2576" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
+"2578" [label = <(METHOD_RETURN,ANY)> ]
+  "2576" -> "2578" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/75-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/75-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/75-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/75-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignment" {  
-"2655" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
-"2659" [label = <(METHOD_RETURN,ANY)> ]
-  "2655" -> "2659" 
+"2640" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
+"2644" [label = <(METHOD_RETURN,ANY)> ]
+  "2640" -> "2644" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/76-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/76-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/76-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/76-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.new" {  
-"2660" [label = <(METHOD,&lt;operator&gt;.new)> ]
-"2663" [label = <(METHOD_RETURN,ANY)> ]
-  "2660" -> "2663" 
+"2645" [label = <(METHOD,&lt;operator&gt;.new)> ]
+"2648" [label = <(METHOD_RETURN,ANY)> ]
+  "2645" -> "2648" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/77-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/77-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/77-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/77-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectFieldAccess" {  
-"2664" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
-"2668" [label = <(METHOD_RETURN,ANY)> ]
-  "2664" -> "2668" 
+"2649" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
+"2653" [label = <(METHOD_RETURN,ANY)> ]
+  "2649" -> "2653" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/78-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/78-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/78-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/78-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGD_IF" {  
-"2669" [label = <(METHOD,ALOGD_IF)> ]
-"2675" [label = <(METHOD_RETURN,ANY)> ]
-  "2669" -> "2675" 
+"2654" [label = <(METHOD,ALOGD_IF)> ]
+"2660" [label = <(METHOD_RETURN,ANY)> ]
+  "2654" -> "2660" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/79-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/79-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/79-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/79-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "destroy" {  
-"2676" [label = <(METHOD,destroy)> ]
-"2678" [label = <(METHOD_RETURN,ANY)> ]
-  "2676" -> "2678" 
+"2661" [label = <(METHOD,destroy)> ]
+"2663" [label = <(METHOD_RETURN,ANY)> ]
+  "2661" -> "2663" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/8-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/8-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/8-cfg.dot	2023-06-07 19:32:15.337403173 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/8-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "setFirstFlushPending" {  
-"51" [label = <(METHOD,setFirstFlushPending)<SUB>63</SUB>> ]
-"55" [label = <(METHOD_RETURN,void)<SUB>63</SUB>> ]
+"51" [label = <(METHOD,setFirstFlushPending)<SUB>62</SUB>> ]
+"55" [label = <(METHOD_RETURN,void)<SUB>62</SUB>> ]
   "51" -> "55" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/80-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/80-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/80-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/80-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
-digraph "cleanupConnection" {  
-"2679" [label = <(METHOD,cleanupConnection)> ]
-"2683" [label = <(METHOD_RETURN,ANY)> ]
-  "2679" -> "2683" 
+digraph "_l" {  
+"2664" [label = <(METHOD,_l)> ]
+"2667" [label = <(METHOD_RETURN,ANY)> ]
+  "2664" -> "2667" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/81-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/81-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/81-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/81-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.notEquals" {  
-"2684" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
-"2688" [label = <(METHOD_RETURN,ANY)> ]
-  "2684" -> "2688" 
+digraph "cleanupConnection" {  
+"2668" [label = <(METHOD,cleanupConnection)> ]
+"2672" [label = <(METHOD_RETURN,ANY)> ]
+  "2668" -> "2672" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/82-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/82-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/82-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/82-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.delete" {  
-"2689" [label = <(METHOD,&lt;operator&gt;.delete)> ]
-"2692" [label = <(METHOD_RETURN,ANY)> ]
-  "2689" -> "2692" 
+digraph "&lt;operator&gt;.notEquals" {  
+"2673" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
+"2677" [label = <(METHOD_RETURN,ANY)> ]
+  "2673" -> "2677" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/83-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/83-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/83-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/83-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
-digraph "LooperCallback::onFirstRef" {  
-"2693" [label = <(METHOD,LooperCallback::onFirstRef)> ]
-"2696" [label = <(METHOD_RETURN,ANY)> ]
-  "2693" -> "2696" 
+digraph "&lt;operator&gt;.delete" {  
+"2678" [label = <(METHOD,&lt;operator&gt;.delete)> ]
+"2681" [label = <(METHOD_RETURN,ANY)> ]
+  "2678" -> "2681" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/84-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/84-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/84-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/84-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
-digraph "&lt;operator&gt;.fieldAccess" {  
-"2697" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
-"2701" [label = <(METHOD_RETURN,ANY)> ]
-  "2697" -> "2701" 
+digraph "LooperCallback::onFirstRef" {  
+"2682" [label = <(METHOD,LooperCallback::onFirstRef)> ]
+"2685" [label = <(METHOD_RETURN,ANY)> ]
+  "2682" -> "2685" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/85-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/85-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/85-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/85-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
-digraph "_l" {  
-"2702" [label = <(METHOD,_l)> ]
-"2705" [label = <(METHOD_RETURN,ANY)> ]
-  "2702" -> "2705" 
+digraph "&lt;operator&gt;.fieldAccess" {  
+"2686" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
+"2690" [label = <(METHOD_RETURN,ANY)> ]
+  "2686" -> "2690" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/86-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/86-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/86-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/86-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalAnd" {  
-"2706" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
-"2710" [label = <(METHOD_RETURN,ANY)> ]
-  "2706" -> "2710" 
+"2691" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
+"2695" [label = <(METHOD_RETURN,ANY)> ]
+  "2691" -> "2695" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/87-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/87-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/87-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/87-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalNot" {  
-"2711" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
-"2714" [label = <(METHOD_RETURN,ANY)> ]
-  "2711" -> "2714" 
+"2696" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
+"2699" [label = <(METHOD_RETURN,ANY)> ]
+  "2696" -> "2699" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/88-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/88-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/88-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/88-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterThan" {  
-"2715" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
-"2719" [label = <(METHOD_RETURN,ANY)> ]
-  "2715" -> "2719" 
+"2700" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
+"2704" [label = <(METHOD_RETURN,ANY)> ]
+  "2700" -> "2704" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/89-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/89-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/89-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/89-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "appendFormat" {  
-"2720" [label = <(METHOD,appendFormat)> ]
-"2728" [label = <(METHOD_RETURN,ANY)> ]
-  "2720" -> "2728" 
+"2705" [label = <(METHOD,appendFormat)> ]
+"2713" [label = <(METHOD_RETURN,ANY)> ]
+  "2705" -> "2713" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/9-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/9-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/9-cfg.dot	2023-06-07 19:32:15.337403173 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/9-cfg.dot	2023-06-07 19:32:19.517402784 +0330
@@ -1,5 +1,5 @@
 digraph "dump" {  
-"57" [label = <(METHOD,dump)<SUB>64</SUB>> ]
-"60" [label = <(METHOD_RETURN,void)<SUB>64</SUB>> ]
+"57" [label = <(METHOD,dump)<SUB>63</SUB>> ]
+"60" [label = <(METHOD_RETURN,void)<SUB>63</SUB>> ]
   "57" -> "60" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/90-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/90-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/90-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/90-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "isWhiteListedPackage" {  
-"2729" [label = <(METHOD,isWhiteListedPackage)> ]
-"2733" [label = <(METHOD_RETURN,ANY)> ]
-  "2729" -> "2733" 
+"2714" [label = <(METHOD,isWhiteListedPackage)> ]
+"2718" [label = <(METHOD_RETURN,ANY)> ]
+  "2714" -> "2718" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/91-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/91-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/91-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/91-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "getPackageName" {  
-"2734" [label = <(METHOD,getPackageName)> ]
-"2736" [label = <(METHOD_RETURN,ANY)> ]
-  "2734" -> "2736" 
+"2719" [label = <(METHOD,getPackageName)> ]
+"2721" [label = <(METHOD_RETURN,ANY)> ]
+  "2719" -> "2721" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/92-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/92-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/92-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/92-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "append" {  
-"2737" [label = <(METHOD,append)> ]
-"2741" [label = <(METHOD_RETURN,ANY)> ]
-  "2737" -> "2741" 
+"2722" [label = <(METHOD,append)> ]
+"2726" [label = <(METHOD_RETURN,ANY)> ]
+  "2722" -> "2726" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/93-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/93-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/93-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/93-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "string" {  
-"2742" [label = <(METHOD,string)> ]
-"2745" [label = <(METHOD_RETURN,ANY)> ]
-  "2742" -> "2745" 
+"2727" [label = <(METHOD,string)> ]
+"2730" [label = <(METHOD_RETURN,ANY)> ]
+  "2727" -> "2730" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/94-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/94-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/94-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/94-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "getSensorName" {  
-"2746" [label = <(METHOD,getSensorName)> ]
-"2750" [label = <(METHOD_RETURN,ANY)> ]
-  "2746" -> "2750" 
+"2731" [label = <(METHOD,getSensorName)> ]
+"2735" [label = <(METHOD_RETURN,ANY)> ]
+  "2731" -> "2735" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/95-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/95-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/95-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/95-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.conditional" {  
-"2751" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
-"2756" [label = <(METHOD_RETURN,ANY)> ]
-  "2751" -> "2756" 
+"2736" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
+"2741" [label = <(METHOD_RETURN,ANY)> ]
+  "2736" -> "2741" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/96-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/96-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/96-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/96-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "write" {  
-"2757" [label = <(METHOD,write)> ]
-"2762" [label = <(METHOD_RETURN,ANY)> ]
-  "2757" -> "2762" 
+"2742" [label = <(METHOD,write)> ]
+"2747" [label = <(METHOD_RETURN,ANY)> ]
+  "2742" -> "2747" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/97-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/97-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/97-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/97-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "std::string" {  
-"2763" [label = <(METHOD,std::string)> ]
-"2767" [label = <(METHOD_RETURN,ANY)> ]
-  "2763" -> "2767" 
+"2748" [label = <(METHOD,std::string)> ]
+"2752" [label = <(METHOD_RETURN,ANY)> ]
+  "2748" -> "2752" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/98-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/98-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/98-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/98-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "int32_t" {  
-"2768" [label = <(METHOD,int32_t)> ]
-"2771" [label = <(METHOD_RETURN,ANY)> ]
-  "2768" -> "2771" 
+"2753" [label = <(METHOD,int32_t)> ]
+"2756" [label = <(METHOD_RETURN,ANY)> ]
+  "2753" -> "2756" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/99-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/99-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/secure/out/99-cfg.dot	2023-06-07 19:32:15.437403166 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0318_1/vulnerable/out/99-cfg.dot	2023-06-07 19:32:19.627402773 +0330
@@ -1,5 +1,5 @@
 digraph "start" {  
-"2772" [label = <(METHOD,start)> ]
-"2776" [label = <(METHOD_RETURN,ANY)> ]
-  "2772" -> "2776" 
+"2757" [label = <(METHOD,start)> ]
+"2761" [label = <(METHOD_RETURN,ANY)> ]
+  "2757" -> "2761" 
 }
